#! /bin/perl -w
# nagios: +epn

package Monitoring::GLPlugin::Commandline::Extraopts;
use strict;
use File::Basename;
use strict;

sub new {
  my $class = shift;
  my %params = @_;
  my $self = {
    file => $params{file},
    commandline => $params{commandline},
    config => {},
    section => 'default_no_section',
  };
  bless $self, $class;
  $self->prepare_file_and_section();
  $self->init();
  return $self;
}

sub prepare_file_and_section {
  my $self = shift;
  if (! defined $self->{file}) {
    # ./check_stuff --extra-opts
    $self->{section} = basename($0);
    $self->{file} = $self->get_default_file();
  } elsif ($self->{file} =~ /^[^@]+$/) {
    # ./check_stuff --extra-opts=special_opts
    $self->{section} = $self->{file};
    $self->{file} = $self->get_default_file();
  } elsif ($self->{file} =~ /^@(.*)/) {
    # ./check_stuff --extra-opts=@/etc/myconfig.ini
    $self->{section} = basename($0);
    $self->{file} = $1;
  } elsif ($self->{file} =~ /^(.*?)@(.*)/) {
    # ./check_stuff --extra-opts=special_opts@/etc/myconfig.ini
    $self->{section} = $1;
    $self->{file} = $2;
  }
}

sub get_default_file {
  my $self = shift;
  foreach my $default (qw(/etc/nagios/plugins.ini
      /usr/local/nagios/etc/plugins.ini
      /usr/local/etc/nagios/plugins.ini
      /etc/opt/nagios/plugins.ini
      /etc/nagios-plugins.ini
      /usr/local/etc/nagios-plugins.ini
      /etc/opt/nagios-plugins.ini)) {
    if (-f $default) {
      return $default;
    }
  }
  return undef;
}

sub init {
  my $self = shift;
  if (! defined $self->{file}) {
    $self->{errors} = sprintf 'no extra-opts file specified and no default file found';
  } elsif (! -f $self->{file}) {
    $self->{errors} = sprintf 'could not open %s', $self->{file};
  } else {
    my $data = do { local (@ARGV, $/) = $self->{file}; <> };
    my $in_section = 'default_no_section';
    foreach my $line (split(/\n/, $data)) {
      if ($line =~ /\[(.*)\]/) {
        $in_section = $1;
      } elsif ($line =~ /(.*?)\s*=\s*(.*)/) {
        $self->{config}->{$in_section}->{$1} = $2;
      }
    }
  }
}

sub is_valid {
  my $self = shift;
  return ! exists $self->{errors};
}

sub overwrite {
  my $self = shift;
  if (scalar(keys %{$self->{config}->{default_no_section}}) > 0) {
    foreach (keys %{$self->{config}->{default_no_section}}) {
      $self->{commandline}->{$_} = $self->{config}->{default_no_section}->{$_};
    }
  }
  if (exists $self->{config}->{$self->{section}}) {
    foreach (keys %{$self->{config}->{$self->{section}}}) {
      $self->{commandline}->{$_} = $self->{config}->{$self->{section}}->{$_};
    }
  }
}

sub errors {
  my $self = shift;
  return $self->{errors} || "";
}



package Monitoring::GLPlugin::Commandline::Getopt;
use strict;
use File::Basename;
use Getopt::Long qw(:config no_ignore_case bundling);

# Standard defaults
my %DEFAULT = (
  timeout => 15,
  verbose => 0,
  license =>
"This monitoring plugin is free software, and comes with ABSOLUTELY NO WARRANTY.
It may be used, redistributed and/or modified under the terms of the GNU
General Public Licence (see http://www.fsf.org/licensing/licenses/gpl.txt).",
);
# Standard arguments
my @ARGS = ({
    spec => 'usage|?',
    help => "-?, --usage\n   Print usage information",
  }, {
    spec => 'help|h',
    help => "-h, --help\n   Print detailed help screen",
  }, {
    spec => 'version|V',
    help => "-V, --version\n   Print version information",
  }, {
    #spec => 'extra-opts:s@',
    #help => "--extra-opts=[<section>[@<config_file>]]\n   Section and/or config_file from which to load extra options (may repeat)",
  }, {
    spec => 'timeout|t=i',
    help => sprintf("-t, --timeout=INTEGER\n   Seconds before plugin times out (default: %s)", $DEFAULT{timeout}),
    default => $DEFAULT{timeout},
  }, {
    spec => 'verbose|v+',
    help => "-v, --verbose\n   Show details for command-line debugging (can repeat up to 3 times)",
    default => $DEFAULT{verbose},
  },
);
# Standard arguments we traditionally display last in the help output
my %DEFER_ARGS = map { $_ => 1 } qw(timeout verbose);

sub _init {
  my ($self, %params) = @_;
  # Check params
  my %attr = (
    usage => 1,
    version => 0,
    url => 0,
    plugin => { default => $Monitoring::GLPlugin::pluginname },
    blurb => 0,
    extra => 0,
    'extra-opts' => 0,
    license => { default => $DEFAULT{license} },
    timeout => { default => $DEFAULT{timeout} },
  );

  # Add attr to private _attr hash (except timeout)
  $self->{timeout} = delete $attr{timeout};
  $self->{_attr} = { %attr };
  foreach (keys %{$self->{_attr}}) {
    if (exists $params{$_}) {
      $self->{_attr}->{$_} = $params{$_};
    } else {
      $self->{_attr}->{$_} = $self->{_attr}->{$_}->{default}
          if ref ($self->{_attr}->{$_}) eq 'HASH' &&
              exists $self->{_attr}->{$_}->{default};
    }
  }
  # Chomp _attr values
  chomp foreach values %{$self->{_attr}};

  # Setup initial args list
  $self->{_args} = [ grep { exists $_->{spec} } @ARGS ];

  $self
}

sub new {
  my ($class, @params) = @_;
  require Monitoring::GLPlugin::Commandline::Extraopts
      if ! grep /BEGIN/, keys %Monitoring::GLPlugin::Commandline::Extraopts::;
  my $self = bless {}, $class;
  $self->_init(@params);
}

sub decode_rfc3986 {
  my ($self, $password) = @_;
  if ($password && $password =~ /^rfc3986:\/\/(.*)/) {
    $password = $1;
    $password =~ s/%([A-Za-z0-9]{2})/chr(hex($1))/seg;
  }
  return $password;
}

sub add_arg {
  my ($self, %arg) = @_;
  push (@{$self->{_args}}, \%arg);
}

sub mod_arg {
  my ($self, $argname, %arg) = @_;
  foreach my $old_arg (@{$self->{_args}}) {
    next unless $old_arg->{spec} =~ /(\w+).*/ && $argname eq $1;
    foreach my $key (keys %arg) {
      $old_arg->{$key} = $arg{$key};
    }
  }
}

sub getopts {
  my ($self) = @_;
  my %commandline = ();
  $self->{opts}->{all_my_opts} = {};
  my @params = map { $_->{spec} } @{$self->{_args}};
  if (! GetOptions(\%commandline, @params)) {
    $self->print_help();
    exit 3;
  } else {
    no strict 'refs';
    no warnings 'redefine';
    if (exists $commandline{'extra-opts'}) {
      # read the extra file and overwrite other parameters
      my $extras = Monitoring::GLPlugin::Commandline::Extraopts->new(
          file => $commandline{'extra-opts'},
          commandline => \%commandline
      );
      if (! $extras->is_valid()) {
        printf "UNKNOWN - extra-opts are not valid: %s\n", $extras->errors();
        exit 3;
      } else {
        $extras->overwrite();
      }
    }
    do { $self->print_help(); exit 0; } if $commandline{help};
    do { $self->print_version(); exit 0 } if $commandline{version};
    do { $self->print_usage(); exit 3 } if $commandline{usage};
    foreach (map { $_->{spec} =~ /^([\w\-]+)/; $1; } @{$self->{_args}}) {
      my $field = $_;
      *{"$field"} = sub {
        return $self->{opts}->{$field};
      };
    }
    *{"all_my_opts"} = sub {
      return $self->{opts}->{all_my_opts};
    };
    foreach (map { $_->{spec} =~ /^([\w\-]+)/; $1; }
        grep { exists $_->{required} && $_->{required} } @{$self->{_args}}) {
      do { $self->print_usage(); exit 3 } if ! exists $commandline{$_};
    }
    foreach (grep { exists $_->{default} } @{$self->{_args}}) {
      $_->{spec} =~ /^([\w\-]+)/;
      my $spec = $1;
      $self->{opts}->{$spec} = $_->{default};
    }
    foreach (keys %commandline) {
      $self->{opts}->{$_} = $commandline{$_};
      $self->{opts}->{all_my_opts}->{$_} = $commandline{$_};
    }
    foreach (grep { exists $_->{env} } @{$self->{_args}}) {
      $_->{spec} =~ /^([\w\-]+)/;
      my $spec = $1;
      if (exists $ENV{'NAGIOS__HOST'.$_->{env}}) {
        $self->{opts}->{$spec} = $ENV{'NAGIOS__HOST'.$_->{env}};
      }
      if (exists $ENV{'NAGIOS__SERVICE'.$_->{env}}) {
        $self->{opts}->{$spec} = $ENV{'NAGIOS__SERVICE'.$_->{env}};
      }
    }
    foreach (grep { exists $_->{aliasfor} } @{$self->{_args}}) {
      my $field = $_->{aliasfor};
      $_->{spec} =~ /^([\w\-]+)/;
      my $aliasfield = $1;
      next if $self->{opts}->{$field};
      $self->{opts}->{$field} = $self->{opts}->{$aliasfield};
      *{"$field"} = sub {
        return $self->{opts}->{$field};
      };
    }
    foreach (grep { exists $_->{decode} } @{$self->{_args}}) {
      my $decoding = $_->{decode};
      $_->{spec} =~ /^([\w\-]+)/;
      my $spec = $1;
      if (exists $self->{opts}->{$spec}) {
        if ($decoding eq "rfc3986") {
	  $self->{opts}->{$spec} =
	      $self->decode_rfc3986($self->{opts}->{$spec});
	}
      }
    }
  }
}

sub create_opt {
  my ($self, $key) = @_;
  no strict 'refs';
  *{"$key"} = sub {
      return $self->{opts}->{$key};
  };
}

sub override_opt {
  my ($self, $key, $value) = @_;
  $self->{opts}->{$key} = $value;
}

sub get {
  my ($self, $opt) = @_;
  return $self->{opts}->{$opt};
}

sub print_help {
  my ($self) = @_;
  $self->print_version();
  printf "\n%s\n", $self->{_attr}->{license};
  printf "\n%s\n\n", $self->{_attr}->{blurb};
  $self->print_usage();
  foreach (grep {
      ! (exists $_->{hidden} && $_->{hidden}) 
  } @{$self->{_args}}) {
    printf " %s\n", $_->{help};
  }
}

sub print_usage {
  my ($self) = @_;
  printf $self->{_attr}->{usage}, $self->{_attr}->{plugin};
  print "\n";
}

sub print_version {
  my ($self) = @_;
  printf "%s %s", $self->{_attr}->{plugin}, $self->{_attr}->{version};
  printf " [%s]", $self->{_attr}->{url} if $self->{_attr}->{url};
  print "\n";
}

sub print_license {
  my ($self) = @_;
  printf "%s\n", $self->{_attr}->{license};
  print "\n";
}



package Monitoring::GLPlugin::Commandline;
use strict;
use IO::File;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3, DEPENDENT => 4 };
our %ERRORS = (
    'OK'        => OK,
    'WARNING'   => WARNING,
    'CRITICAL'  => CRITICAL,
    'UNKNOWN'   => UNKNOWN,
    'DEPENDENT' => DEPENDENT,
);

our %STATUS_TEXT = reverse %ERRORS;
our $AUTOLOAD;


sub new {
  my ($class, %params) = @_;
  require Monitoring::GLPlugin::Commandline::Getopt
      if ! grep /BEGIN/, keys %Monitoring::GLPlugin::Commandline::Getopt::;
  my $self = {
       perfdata => [],
       messages => {
         ok => [],
         warning => [],
         critical => [],
         unknown => [],
       },
       args => [],
       opts => Monitoring::GLPlugin::Commandline::Getopt->new(%params),
       modes => [],
       statefilesdir => undef,
  };
  foreach (qw(shortname usage version url plugin blurb extra
      license timeout)) {
    $self->{$_} = $params{$_};
  }
  bless $self, $class;
  $self->{plugin} ||= $Monitoring::GLPlugin::pluginname;
  $self->{name} = $self->{plugin};
  $Monitoring::GLPlugin::plugin = $self;
}

sub AUTOLOAD {
  my ($self, @params) = @_;
  return if ($AUTOLOAD =~ /DESTROY/);
  $self->debug("AUTOLOAD %s\n", $AUTOLOAD)
        if $self->{opts}->verbose >= 2;
  if ($AUTOLOAD =~ /^.*::(add_arg|override_opt|create_opt)$/) {
    $self->{opts}->$1(@params);
  }
}

sub DESTROY {
  my ($self) = @_;
  # ohne dieses DESTROY rennt nagios_exit in obiges AUTOLOAD rein
  # und fliegt aufs Maul, weil {opts} bereits nicht mehr existiert.
  # Unerklaerliches Verhalten.
}

sub debug {
  my ($self, $format, @message) = @_;
  if ($self->opts->verbose && $self->opts->verbose > 10) {
    printf("%s: ", scalar localtime);
    printf($format, @message);
    printf "\n";
  }
  if ($Monitoring::GLPlugin::tracefile) {
    my $logfh = IO::File->new();
    $logfh->autoflush(1);
    if ($logfh->open($Monitoring::GLPlugin::tracefile, "a")) {
      $logfh->printf("%s: ", scalar localtime);
      $logfh->printf($format, @message);
      $logfh->printf("\n");
      $logfh->close();
    }
  }
}

sub opts {
  my ($self) = @_;
  return $self->{opts};
}

sub getopts {
  my ($self) = @_;
  $self->opts->getopts();
}

sub add_message {
  my ($self, $code, @messages) = @_;
  $code = (qw(ok warning critical unknown))[$code] if $code =~ /^\d+$/;
  $code = lc $code;
  push @{$self->{messages}->{$code}}, @messages;
}

sub selected_perfdata {
  my ($self, $label) = @_;
  if ($self->opts->can("selectedperfdata") && $self->opts->selectedperfdata) {
    my $pattern = $self->opts->selectedperfdata;
    return ($label =~ /$pattern/i) ? 1 : 0;
  } else {
    return 1;
  }
}

sub add_perfdata {
  my ($self, %args) = @_;
#printf "add_perfdata %s\n", Data::Dumper::Dumper(\%args);
#printf "add_perfdata %s\n", Data::Dumper::Dumper($self->{thresholds});
#
# wenn warning, critical, dann wird von oben ein expliziter wert mitgegeben
# wenn thresholds
#  wenn label in 
#    warningx $self->{thresholds}->{$label}->{warning} existiert
#  dann nimm $self->{thresholds}->{$label}->{warning}
#  ansonsten thresholds->default->warning
#

  my $label = $args{label};
  my $value = $args{value};
  my $uom = $args{uom} || "";
  my $format = '%d';

  if ($self->opts->can("morphperfdata") && $self->opts->morphperfdata) {
    # 'Intel [R] Interface (\d+) usage'='nic$1'
    foreach my $key (keys %{$self->opts->morphperfdata}) {
      if ($label =~ /$key/) {
        my $replacement = '"'.$self->opts->morphperfdata->{$key}.'"';
        my $oldlabel = $label;
        $label =~ s/$key/$replacement/ee;
        if (exists $self->{thresholds}->{$oldlabel}) {
          %{$self->{thresholds}->{$label}} = %{$self->{thresholds}->{$oldlabel}};
        }
      }
    }
  }
  if ($value =~ /\./) {
    if (defined $args{places}) {
      $value = sprintf '%.'.$args{places}.'f', $value;
    } else {
      $value = sprintf "%.2f", $value;
    }
  } else {
    $value = sprintf "%d", $value;
  }
  my $warn = "";
  my $crit = "";
  my $min = defined $args{min} ? $args{min} : "";
  my $max = defined $args{max} ? $args{max} : "";
  if ($args{thresholds} || (! exists $args{warning} && ! exists $args{critical})) {
    if (exists $self->{thresholds}->{$label}->{warning}) {
      $warn = $self->{thresholds}->{$label}->{warning};
    } elsif (exists $self->{thresholds}->{default}->{warning}) {
      $warn = $self->{thresholds}->{default}->{warning};
    }
    if (exists $self->{thresholds}->{$label}->{critical}) {
      $crit = $self->{thresholds}->{$label}->{critical};
    } elsif (exists $self->{thresholds}->{default}->{critical}) {
      $crit = $self->{thresholds}->{default}->{critical};
    }
  } else {
    if ($args{warning}) {
      $warn = $args{warning};
    }
    if ($args{critical}) {
      $crit = $args{critical};
    }
  }
  if ($uom eq "%") {
    $min = 0;
    $max = 100;
  }
  if (defined $args{places}) {
    # cut off excessive decimals which may be the result of a division
    # length = places*2, no trailing zeroes
    if ($warn ne "") {
      $warn = join("", map {
          s/\.0+$//; $_
      } map {
          s/(\.[1-9]+)0+$/$1/; $_
      } map {
          /[\+\-\d\.]+/ ? sprintf '%.'.2*$args{places}.'f', $_ : $_;
      } split(/([\+\-\d\.]+)/, $warn));
    }
    if ($crit ne "") {
      $crit = join("", map {
          s/\.0+$//; $_
      } map {
          s/(\.[1-9]+)0+$/$1/; $_
      } map {
          /[\+\-\d\.]+/ ? sprintf '%.'.2*$args{places}.'f', $_ : $_;
      } split(/([\+\-\d\.]+)/, $crit));
    }
    if ($min ne "") {
      $min = join("", map {
          s/\.0+$//; $_
      } map {
          s/(\.[1-9]+)0+$/$1/; $_
      } map {
          /[\+\-\d\.]+/ ? sprintf '%.'.2*$args{places}.'f', $_ : $_;
      } split(/([\+\-\d\.]+)/, $min));
    }
    if ($max ne "") {
      $max = join("", map {
          s/\.0+$//; $_
      } map {
          s/(\.[1-9]+)0+$/$1/; $_
      } map {
          /[\+\-\d\.]+/ ? sprintf '%.'.2*$args{places}.'f', $_ : $_;
      } split(/([\+\-\d\.]+)/, $max));
    }
  }
  push @{$self->{perfdata}}, sprintf("'%s'=%s%s;%s;%s;%s;%s",
      $label, $value, $uom, $warn, $crit, $min, $max)
      if $self->selected_perfdata($label);
}

sub add_pandora {
  my ($self, %args) = @_;
  my $label = $args{label};
  my $value = $args{value};

  if ($args{help}) {
    push @{$self->{pandora}}, sprintf("# HELP %s %s", $label, $args{help});
  }
  if ($args{type}) {
    push @{$self->{pandora}}, sprintf("# TYPE %s %s", $label, $args{type});
  }
  if ($args{labels}) {
    push @{$self->{pandora}}, sprintf("%s{%s} %s", $label,
        join(",", map {
            sprintf '%s="%s"', $_, $args{labels}->{$_};
        } keys %{$args{labels}}),
        $value);
  } else {
    push @{$self->{pandora}}, sprintf("%s %s", $label, $value);
  }
}

sub add_html {
  my ($self, $line) = @_;
  push @{$self->{html}}, $line;
}

sub suppress_messages {
  my ($self) = @_;
  $self->{suppress_messages} = 1;
}

sub clear_messages {
  my ($self, $code) = @_;
  $code = (qw(ok warning critical unknown))[$code] if $code =~ /^\d+$/;
  $code = lc $code;
  $self->{messages}->{$code} = [];
}

sub reduce_messages_short {
  my ($self, $message) = @_;
  $message ||= "no problems";
  if ($self->opts->report && $self->opts->report eq "short") {
    $self->clear_messages(OK);
    $self->add_message(OK, $message) if ! $self->check_messages();
  }
}

sub reduce_messages {
  my ($self, $message) = @_;
  $message ||= "no problems";
  $self->clear_messages(OK);
  $self->add_message(OK, $message) if ! $self->check_messages();
}

sub check_messages {
  my ($self, %args) = @_;

  # Add object messages to any passed in as args
  for my $code (qw(critical warning unknown ok)) {
    my $messages = $self->{messages}->{$code} || [];
    if ($args{$code}) {
      unless (ref $args{$code} eq 'ARRAY') {
        if ($code eq 'ok') {
          $args{$code} = [ $args{$code} ];
        }
      }
      push @{$args{$code}}, @$messages;
    } else {
      $args{$code} = $messages;
    }
  }
  my %arg = %args;
  $arg{join} = ' ' unless defined $arg{join};

  # Decide $code
  my $code = OK;
  $code ||= CRITICAL  if @{$arg{critical}};
  $code ||= WARNING   if @{$arg{warning}};
  $code ||= UNKNOWN   if @{$arg{unknown}};
  return $code unless wantarray;

  # Compose message
  my $message = '';
  if ($arg{join_all}) {
      $message = join( $arg{join_all},
          map { @$_ ? join( $arg{'join'}, @$_) : () }
              $arg{critical},
              $arg{warning},
              $arg{unknown},
              $arg{ok} ? (ref $arg{ok} ? $arg{ok} : [ $arg{ok} ]) : []
      );
  }

  else {
      $message ||= join( $arg{'join'}, @{$arg{critical}} )
          if $code == CRITICAL;
      $message ||= join( $arg{'join'}, @{$arg{warning}} )
          if $code == WARNING;
      $message ||= join( $arg{'join'}, @{$arg{unknown}} )
          if $code == UNKNOWN;
      $message ||= ref $arg{ok} ? join( $arg{'join'}, @{$arg{ok}} ) : $arg{ok}
          if $arg{ok};
  }

  return ($code, $message);
}

sub status_code {
  my ($self, $code) = @_;
  $code = (qw(ok warning critical unknown))[$code] if $code =~ /^\d+$/;
  $code = uc $code;
  $code = $ERRORS{$code} if defined $code && exists $ERRORS{$code};
  $code = UNKNOWN unless defined $code && exists $STATUS_TEXT{$code};
  return "$STATUS_TEXT{$code}";
}

sub perfdata_string {
  my ($self) = @_;
  if (scalar (@{$self->{perfdata}})) {
    return join(" ", @{$self->{perfdata}});
  } else {
    return "";
  }
}

sub metrics_string {
  my ($self) = @_;
  if (scalar (@{$self->{metrics}})) {
    return join("\n", @{$self->{metrics}});
  } else {
    return "";
  }
}

sub html_string {
  my ($self) = @_;
  if (scalar (@{$self->{html}})) {
    return join(" ", @{$self->{html}});
  } else {
    return "";
  }
}

sub nagios_exit {
  my ($self, $code, $message, $arg) = @_;
  $code = $ERRORS{$code} if defined $code && exists $ERRORS{$code};
  $code = UNKNOWN unless defined $code && exists $STATUS_TEXT{$code};
  $message = '' unless defined $message;
  if (ref $message && ref $message eq 'ARRAY') {
      $message = join(' ', map { chomp; $_ } @$message);
  } else {
      chomp $message;
  }
  if ($self->opts->negate) {
    my $original_code = $code;
    foreach my $from (keys %{$self->opts->negate}) {
      if ((uc $from) =~ /^(OK|WARNING|CRITICAL|UNKNOWN)$/ &&
          (uc $self->opts->negate->{$from}) =~ /^(OK|WARNING|CRITICAL|UNKNOWN)$/) {
        if ($original_code == $ERRORS{uc $from}) {
          $code = $ERRORS{uc $self->opts->negate->{$from}};
        }
      }
    }
  }
  my $output = "$STATUS_TEXT{$code}";
  $output .= " - $message" if defined $message && $message ne '';
  if ($self->opts->can("morphmessage") && $self->opts->morphmessage) {
    # 'Intel [R] Interface (\d+) usage'='nic$1'
    # '^OK.*'="alles klar"   '^CRITICAL.*'="alles hi"
    foreach my $key (keys %{$self->opts->morphmessage}) {
      if ($output =~ /$key/) {
        my $replacement = '"'.$self->opts->morphmessage->{$key}.'"';
        $output =~ s/$key/$replacement/ee;
      }
    }
  }
  if ($self->opts->negate) {
    # negate again: --negate "UNKNOWN - no peers"=ok
    my $original_code = $code;
    foreach my $from (keys %{$self->opts->negate}) {
      if ((uc $from) !~ /^(OK|WARNING|CRITICAL|UNKNOWN)$/ &&
          (uc $self->opts->negate->{$from}) =~ /^(OK|WARNING|CRITICAL|UNKNOWN)$/) {
        if ($output =~ /$from/) {
          $code = $ERRORS{uc $self->opts->negate->{$from}};
          $output =~ s/^.*? -/$STATUS_TEXT{$code} -/;
        }
      }
    }
  }
  $output =~ s/\|/!/g if $output;
  if (scalar (@{$self->{perfdata}})) {
    $output .= " | ".$self->perfdata_string();
  }
  $output .= "\n";
  if ($self->opts->can("isvalidtime") && ! $self->opts->isvalidtime) {
    $code = OK;
    $output = "OK - outside valid timerange. check results are not relevant now. original message was: ".
        $output;
  }
  if (! exists $self->{suppress_messages}) {
    $output =~ s/[^[:ascii:]]//g;
    print $output;
  }
  exit $code;
}

sub set_thresholds {
  my ($self, %params) = @_;
  if (exists $params{metric}) {
    my $metric = $params{metric};
    # erst die hartcodierten defaultschwellwerte
    $self->{thresholds}->{$metric}->{warning} = $params{warning};
    $self->{thresholds}->{$metric}->{critical} = $params{critical};
    # dann die defaultschwellwerte von der kommandozeile
    if (defined $self->opts->warning) {
      $self->{thresholds}->{$metric}->{warning} = $self->opts->warning;
    }
    if (defined $self->opts->critical) {
      $self->{thresholds}->{$metric}->{critical} = $self->opts->critical;
    }
    # dann die ganz spezifischen schwellwerte von der kommandozeile
    if ($self->opts->warningx) { # muss nicht auf defined geprueft werden, weils ein hash ist
      # Erst schauen, ob einer * beinhaltet. Von denen wird vom Laengsten
      # bis zum Kuerzesten probiert, ob die matchen. Der laengste Match
      # gewinnt.
      my @keys = keys %{$self->opts->warningx};
      my @stringkeys = ();
      my @regexkeys = ();
      foreach my $key (sort { length($b) > length($a) } @keys) {
        if ($key =~ /\*/) {
          push(@regexkeys, $key);
        } else {
          push(@stringkeys, $key);
        }
      }
      foreach my $key (@regexkeys) {
        next if $metric !~ /$key/;
        $self->{thresholds}->{$metric}->{warning} = $self->opts->warningx->{$key};
        last;
      }
      # Anschliessend nochmal schauen, ob es einen nicht-Regex-Volltreffer gibt
      foreach my $key (@stringkeys) {
        next if $key ne $metric;
        $self->{thresholds}->{$metric}->{warning} = $self->opts->warningx->{$key};
        last;
      }
    }
    if ($self->opts->criticalx) {
      my @keys = keys %{$self->opts->criticalx};
      my @stringkeys = ();
      my @regexkeys = ();
      foreach my $key (sort { length($b) > length($a) } @keys) {
        if ($key =~ /\*/) {
          push(@regexkeys, $key);
        } else {
          push(@stringkeys, $key);
        }
      }
      foreach my $key (@regexkeys) {
        next if $metric !~ /$key/;
        $self->{thresholds}->{$metric}->{critical} = $self->opts->criticalx->{$key};
        last;
      }
      # Anschliessend nochmal schauen, ob es einen nicht-Regex-Volltreffer gibt
      foreach my $key (@stringkeys) {
        next if $key ne $metric;
        $self->{thresholds}->{$metric}->{critical} = $self->opts->criticalx->{$key};
        last;
      }
    }
  } else {
    $self->{thresholds}->{default}->{warning} =
        defined $self->opts->warning ? $self->opts->warning : defined $params{warning} ? $params{warning} : 0;
    $self->{thresholds}->{default}->{critical} =
        defined $self->opts->critical ? $self->opts->critical : defined $params{critical} ? $params{critical} : 0;
  }
}

sub force_thresholds {
  my ($self, %params) = @_;
  if (exists $params{metric}) {
    my $metric = $params{metric};
    $self->{thresholds}->{$metric}->{warning} = $params{warning} || 0;
    $self->{thresholds}->{$metric}->{critical} = $params{critical} || 0;
  } else {
    $self->{thresholds}->{default}->{warning} = $params{warning} || 0;
    $self->{thresholds}->{default}->{critical} = $params{critical} || 0;
  }
}

sub get_thresholds {
  my ($self, @params) = @_;
  if (scalar(@params) > 1) {
    my %params = @params;
    my $metric = $params{metric};
    return ($self->{thresholds}->{$metric}->{warning},
        $self->{thresholds}->{$metric}->{critical});
  } else {
    return ($self->{thresholds}->{default}->{warning},
        $self->{thresholds}->{default}->{critical});
  }
}

sub check_thresholds {
  my ($self, @params) = @_;
  my $level = $ERRORS{OK};
  my $warningrange;
  my $criticalrange;
  my $value;
  if (scalar(@params) > 1) {
    my %params = @params;
    $value = $params{value};
    my $metric = $params{metric};
    if ($metric ne 'default') {
      $warningrange = exists $self->{thresholds}->{$metric}->{warning} ?
          $self->{thresholds}->{$metric}->{warning} :
          $self->{thresholds}->{default}->{warning};
      $criticalrange = exists $self->{thresholds}->{$metric}->{critical} ?
          $self->{thresholds}->{$metric}->{critical} :
          $self->{thresholds}->{default}->{critical};
    } else {
      $warningrange = (defined $params{warning}) ?
          $params{warning} : $self->{thresholds}->{default}->{warning};
      $criticalrange = (defined $params{critical}) ?
          $params{critical} : $self->{thresholds}->{default}->{critical};
    }
  } else {
    $value = $params[0];
    $warningrange = $self->{thresholds}->{default}->{warning};
    $criticalrange = $self->{thresholds}->{default}->{critical};
  }
  if (! defined $warningrange) {
    # there was no set_thresholds for defaults, no --warning, no --warningx
  } elsif ($warningrange =~ /^([-+]?[0-9]*\.?[0-9]+)$/) {
    # warning = 10, warn if > 10 or < 0
    $level = $ERRORS{WARNING}
        if ($value > $1 || $value < 0);
  } elsif ($warningrange =~ /^([-+]?[0-9]*\.?[0-9]+):$/) {
    # warning = 10:, warn if < 10
    $level = $ERRORS{WARNING}
        if ($value < $1);
  } elsif ($warningrange =~ /^~:([-+]?[0-9]*\.?[0-9]+)$/) {
    # warning = ~:10, warn if > 10
    $level = $ERRORS{WARNING}
        if ($value > $1);
  } elsif ($warningrange =~ /^([-+]?[0-9]*\.?[0-9]+):([-+]?[0-9]*\.?[0-9]+)$/) {
    # warning = 10:20, warn if < 10 or > 20
    $level = $ERRORS{WARNING}
        if ($value < $1 || $value > $2);
  } elsif ($warningrange =~ /^@([-+]?[0-9]*\.?[0-9]+):([-+]?[0-9]*\.?[0-9]+)$/) {
    # warning = @10:20, warn if >= 10 and <= 20
    $level = $ERRORS{WARNING}
        if ($value >= $1 && $value <= $2);
  }
  if (! defined $criticalrange) {
    # there was no set_thresholds for defaults, no --critical, no --criticalx
  } elsif ($criticalrange =~ /^([-+]?[0-9]*\.?[0-9]+)$/) {
    # critical = 10, crit if > 10 or < 0
    $level = $ERRORS{CRITICAL}
        if ($value > $1 || $value < 0);
  } elsif ($criticalrange =~ /^([-+]?[0-9]*\.?[0-9]+):$/) {
    # critical = 10:, crit if < 10
    $level = $ERRORS{CRITICAL}
        if ($value < $1);
  } elsif ($criticalrange =~ /^~:([-+]?[0-9]*\.?[0-9]+)$/) {
    # critical = ~:10, crit if > 10
    $level = $ERRORS{CRITICAL}
        if ($value > $1);
  } elsif ($criticalrange =~ /^([-+]?[0-9]*\.?[0-9]+):([-+]?[0-9]*\.?[0-9]+)$/) {
    # critical = 10:20, crit if < 10 or > 20
    $level = $ERRORS{CRITICAL}
        if ($value < $1 || $value > $2);
  } elsif ($criticalrange =~ /^@([-+]?[0-9]*\.?[0-9]+):([-+]?[0-9]*\.?[0-9]+)$/) {
    # critical = @10:20, crit if >= 10 and <= 20
    $level = $ERRORS{CRITICAL}
        if ($value >= $1 && $value <= $2);
  }
  return $level;
}

sub strequal {
  my($self, $str1, $str2) = @_;
  return 1 if ! defined $str1 && ! defined $str2;
  return 0 if ! defined $str1 && defined $str2;
  return 0 if defined $str1 && ! defined $str2;
  return 1 if $str1 eq $str2;
  return 0;
}



package Monitoring::GLPlugin;

=head1 Monitoring::GLPlugin

Monitoring::GLPlugin - infrastructure functions to build a monitoring plugin

=cut

use strict;
use IO::File;
use File::Basename;
use Digest::MD5 qw(md5_hex);
use Errno;
use Data::Dumper;
$Data::Dumper::Indent = 1;
eval {
  # avoid "used only once" because older Data::Dumper don't have this
  # use OMD please because OMD has everything!
  no warnings 'all';
  $Data::Dumper::Sparseseen = 1;
};
our $AUTOLOAD;
*VERSION = \'3.2.11.1';

use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };

{
  our $mode = undef;
  our $plugin = undef;
  our $pluginname = basename($ENV{'NAGIOS_PLUGIN'} || $0);
  our $blacklist = undef;
  our $info = [];
  our $extendedinfo = [];
  our $summary = [];
  our $variables = {};
  our $survive_sudo_env = ["LD_LIBRARY_PATH", "SHLIB_PATH"];
}

sub new {
  my ($class, %params) = @_;
  my $self = {};
  bless $self, $class;
  require Monitoring::GLPlugin::Commandline
      if ! grep /BEGIN/, keys %Monitoring::GLPlugin::Commandline::;
  require Monitoring::GLPlugin::Item
      if ! grep /BEGIN/, keys %Monitoring::GLPlugin::Item::;
  require Monitoring::GLPlugin::TableItem
      if ! grep /BEGIN/, keys %Monitoring::GLPlugin::TableItem::;
  $Monitoring::GLPlugin::plugin = Monitoring::GLPlugin::Commandline->new(%params);
  return $self;
}

sub rebless {
  my ($self, $class) = @_;
  bless $self, $class;
  $self->debug('using '.$class);
  # gilt nur fuer "echte" Fabrikate mit "Classes::" vorndran
  $self->{classified_as} = ref($self) if $class !~ /^Monitoring::GLPlugin/;
}

sub init {
  my ($self) = @_;
  if ($self->opts->can("blacklist") && $self->opts->blacklist &&
      -f $self->opts->blacklist) {
    $self->opts->blacklist = do {
        local (@ARGV, $/) = $self->opts->blacklist; <> };
  }
}

sub dumper {
  my ($self, $object) = @_;
  my $run = $object->{runtime};
  delete $object->{runtime};
  printf STDERR "%s\n", Data::Dumper::Dumper($object);
  $object->{runtime} = $run;
}

sub no_such_mode {
  my ($self) = @_;
  printf "Mode %s is not implemented for this type of device\n",
      $self->opts->mode;
  exit 3;
}

#########################################################
# framework-related. setup, options
#
sub add_default_args {
  my ($self) = @_;
  $self->add_arg(
      spec => 'mode=s',
      help => "--mode
   A keyword which tells the plugin what to do",
      required => 1,
  );
  $self->add_arg(
      spec => 'regexp',
      help => "--regexp
   Parameter name/name2/name3 will be interpreted as (perl) regular expression",
      required => 0,);
  $self->add_arg(
      spec => 'warning=s',
      help => "--warning
   The warning threshold",
      required => 0,);
  $self->add_arg(
      spec => 'critical=s',
      help => "--critical
   The critical threshold",
      required => 0,);
  $self->add_arg(
      spec => 'warningx=s%',
      help => '--warningx
   The extended warning thresholds
   e.g. --warningx db_msdb_free_pct=6: to override the threshold for a
   specific item ',
      required => 0,
  );
  $self->add_arg(
      spec => 'criticalx=s%',
      help => '--criticalx
   The extended critical thresholds',
      required => 0,
  );
  $self->add_arg(
      spec => 'units=s',
      help => "--units
   One of %, B, KB, MB, GB, Bit, KBi, MBi, GBi. (used for e.g. mode interface-usage)",
      required => 0,
  );
  $self->add_arg(
      spec => 'name=s',
      help => "--name
   The name of a specific component to check",
      required => 0,
      decode => "rfc3986",
  );
  $self->add_arg(
      spec => 'name2=s',
      help => "--name2
   The secondary name of a component",
      required => 0,
      decode => "rfc3986",
  );
  $self->add_arg(
      spec => 'name3=s',
      help => "--name3
   The tertiary name of a component",
      required => 0,
      decode => "rfc3986",
  );
  $self->add_arg(
      spec => 'extra-opts=s',
      help => "--extra-opts
   read command line arguments from an external file",
      required => 0,
  );
  $self->add_arg(
      spec => 'blacklist|b=s',
      help => '--blacklist
   Blacklist some (missing/failed) components',
      required => 0,
      default => '',
  );
  $self->add_arg(
      spec => 'mitigation=s',
      help => "--mitigation
   The parameter allows you to change a critical error to a warning.
   It works only for specific checks. Which ones? Try it out or look in the code.
   --mitigation warning ranks an error as warning which by default would be critical.",
      required => 0,
  );
  $self->add_arg(
      spec => 'lookback=s',
      help => "--lookback
   The amount of time you want to look back when calculating average rates.
   Use it for mode interface-errors or interface-usage. Without --lookback
   the time between two runs of check_nwc_health is the base for calculations.
   If you want your checkresult to be based for example on the past hour,
   use --lookback 3600. ",
      required => 0,
  );
  $self->add_arg(
      spec => 'environment|e=s%',
      help => "--environment
   Add a variable to the plugin's environment",
      required => 0,
  );
  $self->add_arg(
      spec => 'negate=s%',
      help => "--negate
   Emulate the negate plugin. --negate warning=critical --negate unknown=critical",
      required => 0,
  );
  $self->add_arg(
      spec => 'morphmessage=s%',
      help => '--morphmessage
   Modify the final output message',
      required => 0,
      decode => "rfc3986",
  );
  $self->add_arg(
      spec => 'morphperfdata=s%',
      help => "--morphperfdata
   The parameter allows you to change performance data labels.
   It's a perl regexp and a substitution.
   Example: --morphperfdata '(.*)ISATAP(.*)'='\$1patasi\$2'",
      required => 0,
      decode => "rfc3986",
  );
  $self->add_arg(
      spec => 'selectedperfdata=s',
      help => "--selectedperfdata
   The parameter allows you to limit the list of performance data. It's a perl regexp.
   Only matching perfdata show up in the output",
      required => 0,
  );
  $self->add_arg(
      spec => 'report=s',
      help => "--report
   Can be used to shorten the output",
      required => 0,
      default => 'long',
  );
  $self->add_arg(
      spec => 'multiline',
      help => '--multiline
   Multiline output',
      required => 0,
  );
  $self->add_arg(
      spec => 'with-mymodules-dyn-dir=s',
      help => "--with-mymodules-dyn-dir
   Add-on modules for the my-modes will be searched in this directory",
      required => 0,
  );
  $self->add_arg(
      spec => 'statefilesdir=s',
      help => '--statefilesdir
   An alternate directory where the plugin can save files',
      required => 0,
      env => 'STATEFILESDIR',
  );
  $self->add_arg(
      spec => 'isvalidtime=i',
      help => '--isvalidtime
   Signals the plugin to return OK if now is not a valid check time',
      required => 0,
      default => 1,
  );
  $self->add_arg(
      spec => 'reset',
      help => "--reset
   remove the state file",
      required => 0,
      hidden => 1,
  );
  $self->add_arg(
      spec => 'runas=s',
      help => "--runas
   run as a different user",
      required => 0,
      hidden => 1,
  );
  $self->add_arg(
      spec => 'shell',
      help => "--shell
   forget what you see",
      required => 0,
      hidden => 1,
  );
  $self->add_arg(
      spec => 'drecksptkdb=s',
      help => "--drecksptkdb
   This parameter must be used instead of --name, because Devel::ptkdb is stealing the latter from the command line",
      aliasfor => "name",
      required => 0,
      hidden => 1,
  );
  $self->add_arg(
      spec => 'tracefile=s',
      help => "--tracefile
   Write debugging-info to this file (if it exists)",
      required => 0,
      hidden => 1,
  );
}

sub add_default_modes {
  my ($self) = @_;
  $self->add_mode(
      internal => 'encode',
      spec => 'encode',
      alias => undef,
      help => 'encode stdin',
      hidden => 1,
  );
  $self->add_mode(
      internal => 'decode',
      spec => 'decode',
      alias => undef,
      help => 'decode stdin or --name',
      hidden => 1,
  );
}

sub add_modes {
  my ($self, $modes) = @_;
  my $modestring = "";
  my @modes = @{$modes};
  my $longest = length ((reverse sort {length $a <=> length $b} map { $_->[1] } @modes)[0]);
  my $format = "       %-".
      (length ((reverse sort {length $a <=> length $b} map { $_->[1] } @modes)[0])).
      "s\t(%s)\n";
  foreach (@modes) {
    $modestring .= sprintf $format, $_->[1], $_->[3];
  }
  $modestring .= sprintf "\n";
  $Monitoring::GLPlugin::plugin->{modestring} = $modestring;
}

sub add_arg {
  my ($self, %args) = @_;
  if ($args{help} =~ /^--mode/) {
    $args{help} .= "\n".$Monitoring::GLPlugin::plugin->{modestring};
  }
  $Monitoring::GLPlugin::plugin->{opts}->add_arg(%args);
}

sub mod_arg {
  my ($self, @arg) = @_;
  $Monitoring::GLPlugin::plugin->{opts}->mod_arg(@arg);
}

sub add_mode {
  my ($self, %args) = @_;
  push(@{$Monitoring::GLPlugin::plugin->{modes}}, \%args);
  my $longest = length ((reverse sort {length $a <=> length $b} map { $_->{spec} } @{$Monitoring::GLPlugin::plugin->{modes}})[0]);
  my $format = "       %-".
      (length ((reverse sort {length $a <=> length $b} map { $_->{spec} } @{$Monitoring::GLPlugin::plugin->{modes}})[0])).
      "s\t(%s)\n";
  $Monitoring::GLPlugin::plugin->{modestring} = "";
  foreach (@{$Monitoring::GLPlugin::plugin->{modes}}) {
    $Monitoring::GLPlugin::plugin->{modestring} .= sprintf $format, $_->{spec}, $_->{help};
  }
  $Monitoring::GLPlugin::plugin->{modestring} .= "\n";
}

sub validate_args {
  my ($self) = @_;
  if ($self->opts->mode =~ /^my-([^\-.]+)/) {
    my $param = $self->opts->mode;
    $param =~ s/\-/::/g;
    $self->add_mode(
        internal => $param,
        spec => $self->opts->mode,
        alias => undef,
        help => 'my extension',
    );
  } elsif ($self->opts->mode eq 'encode') {
    my $input = <>;
    chomp $input;
    $input =~ s/([^A-Za-z0-9])/sprintf("%%%02X", ord($1))/seg;
    printf "%s\n", $input;
    exit 0;
  } elsif ($self->opts->mode eq 'decode') {
    if (! -t STDIN) {
      my $input = <>;
      chomp $input;
      $input =~ s/%([A-Za-z0-9]{2})/chr(hex($1))/seg;
      printf "%s\n", $input;
      exit OK;
    } else {
      if ($self->opts->name) {
        my $input = $self->opts->name;
        $input =~ s/%([A-Za-z0-9]{2})/chr(hex($1))/seg;
        printf "%s\n", $input;
        exit OK;
      } else {
        printf "i can't find your encoded statement. use --name or pipe it in my stdin\n";
        exit UNKNOWN;
      }
    }
  } elsif ((! grep { $self->opts->mode eq $_ } map { $_->{spec} } @{$Monitoring::GLPlugin::plugin->{modes}}) &&
      (! grep { $self->opts->mode eq $_ } map { defined $_->{alias} ? @{$_->{alias}} : () } @{$Monitoring::GLPlugin::plugin->{modes}})) {
    printf "UNKNOWN - mode %s\n", $self->opts->mode;
    $self->opts->print_help();
    exit 3;
  }
  if ($self->opts->name && $self->opts->name =~ /(%22)|(%27)/) {
    my $name = $self->opts->name;
    $name =~ s/\%([A-Fa-f0-9]{2})/pack('C', hex($1))/seg;
    $self->override_opt('name', $name);
  }
  $Monitoring::GLPlugin::mode = (
      map { $_->{internal} }
      grep {
         ($self->opts->mode eq $_->{spec}) ||
         ( defined $_->{alias} && grep { $self->opts->mode eq $_ } @{$_->{alias}})
      } @{$Monitoring::GLPlugin::plugin->{modes}}
  )[0];
  if ($self->opts->multiline) {
    $ENV{NRPE_MULTILINESUPPORT} = 1;
  } else {
    $ENV{NRPE_MULTILINESUPPORT} = 0;
  }
  if ($self->opts->can("statefilesdir") && ! $self->opts->statefilesdir) {
    if ($^O =~ /MSWin/) {
      if (defined $ENV{TEMP}) {
        $self->override_opt('statefilesdir', $ENV{TEMP}."/".$Monitoring::GLPlugin::plugin->{name});
      } elsif (defined $ENV{TMP}) {
        $self->override_opt('statefilesdir', $ENV{TMP}."/".$Monitoring::GLPlugin::plugin->{name});
      } elsif (defined $ENV{windir}) {
        $self->override_opt('statefilesdir', File::Spec->catfile($ENV{windir}, 'Temp')."/".$Monitoring::GLPlugin::plugin->{name});
      } else {
        $self->override_opt('statefilesdir', "C:/".$Monitoring::GLPlugin::plugin->{name});
      }
    } elsif (exists $ENV{OMD_ROOT}) {
      $self->override_opt('statefilesdir', $ENV{OMD_ROOT}."/var/tmp/".$Monitoring::GLPlugin::plugin->{name});
    } else {
      $self->override_opt('statefilesdir', "/var/tmp/".$Monitoring::GLPlugin::plugin->{name});
    }
  }
  $Monitoring::GLPlugin::plugin->{statefilesdir} = $self->opts->statefilesdir
      if $self->opts->can("statefilesdir");
  if ($self->opts->can("warningx") && $self->opts->warningx) {
    foreach my $key (keys %{$self->opts->warningx}) {
      $self->set_thresholds(metric => $key,
          warning => $self->opts->warningx->{$key});
    }
  }
  if ($self->opts->can("criticalx") && $self->opts->criticalx) {
    foreach my $key (keys %{$self->opts->criticalx}) {
      $self->set_thresholds(metric => $key,
          critical => $self->opts->criticalx->{$key});
    }
  }
  $self->set_timeout_alarm() if ! $SIG{'ALRM'};
}

sub set_timeout_alarm {
  my ($self, $timeout, $handler) = @_;
  $timeout ||= $self->opts->timeout;
  $handler ||= sub {
    $self->nagios_exit(UNKNOWN,
        sprintf("%s timed out after %d seconds\n",
            $Monitoring::GLPlugin::plugin->{name}, $self->opts->timeout)
    );
  };
  use POSIX ':signal_h';
  if ($^O =~ /MSWin/) {
    local $SIG{'ALRM'} = $handler;
  } else {
    my $mask = POSIX::SigSet->new( SIGALRM );
    my $action = POSIX::SigAction->new(
        $handler, $mask
    );   
    my $oldaction = POSIX::SigAction->new();
    sigaction(SIGALRM ,$action ,$oldaction );
  }    
  alarm(int($timeout)); # 1 second before the global unknown timeout
}

#########################################################
# global helpers
#
sub set_variable {
  my ($self, $key, $value) = @_;
  $Monitoring::GLPlugin::variables->{$key} = $value;
}

sub get_variable {
  my ($self, $key, $fallback) = @_;
  return exists $Monitoring::GLPlugin::variables->{$key} ?
      $Monitoring::GLPlugin::variables->{$key} : $fallback;
}

sub debug {
  my ($self, $format, @message) = @_;
  if ($self->get_variable("verbose") &&
      $self->get_variable("verbose") > $self->get_variable("verbosity", 10)) {
    printf("%s: ", scalar localtime);
    printf($format, @message);
    printf "\n";
  }
  if ($Monitoring::GLPlugin::tracefile) {
    my $logfh = IO::File->new();
    $logfh->autoflush(1);
    if ($logfh->open($Monitoring::GLPlugin::tracefile, "a")) {
      $logfh->printf("%s: ", scalar localtime);
      $logfh->printf($format, @message);
      $logfh->printf("\n");
      $logfh->close();
    }
  }
}

sub filter_namex {
  my ($self, $opt, $name) = @_;
  if ($opt) {
    if ($self->opts->regexp) {
      if ($name =~ /$opt/i) {
        return 1;
      }
    } else {
      if (lc $opt eq lc $name) {
        return 1;
      }
    }
  } else {
    return 1;
  }
  return 0;
}

sub filter_name {
  my ($self, $name) = @_;
  return $self->filter_namex($self->opts->name, $name);
}

sub filter_name2 {
  my ($self, $name) = @_;
  return $self->filter_namex($self->opts->name2, $name);
}

sub filter_name3 {
  my ($self, $name) = @_;
  return $self->filter_namex($self->opts->name3, $name);
}

sub version_is_minimum {
  my ($self, $version) = @_;
  my $installed_version;
  my $newer = 1;
  if ($self->get_variable("version")) {
    $installed_version = $self->get_variable("version");
  } elsif (exists $self->{version}) {
    $installed_version = $self->{version};
  } else {
    return 0;
  }
  my @v1 = map { $_ eq "x" ? 0 : $_ } split(/\./, $version);
  my @v2 = split(/\./, $installed_version);
  if (scalar(@v1) > scalar(@v2)) {
    push(@v2, (0) x (scalar(@v1) - scalar(@v2)));
  } elsif (scalar(@v2) > scalar(@v1)) {
    push(@v1, (0) x (scalar(@v2) - scalar(@v1)));
  }
  foreach my $pos (0..$#v1) {
    if ($v2[$pos] > $v1[$pos]) {
      $newer = 1;
      last;
    } elsif ($v2[$pos] < $v1[$pos]) {
      $newer = 0;
      last;
    }
  }
  return $newer;
}

sub accentfree {
  my ($self, $text) = @_;
  # thanks mycoyne who posted this accent-remove-algorithm
  # http://www.experts-exchange.com/Programming/Languages/Scripting/Perl/Q_23275533.html#a21234612
  my @transformed;
  my %replace = (
    '9a' => 's', '9c' => 'oe', '9e' => 'z', '9f' => 'Y', 'c0' => 'A', 'c1' => 'A',
    'c2' => 'A', 'c3' => 'A', 'c4' => 'A', 'c5' => 'A', 'c6' => 'AE', 'c7' => 'C',
    'c8' => 'E', 'c9' => 'E', 'ca' => 'E', 'cb' => 'E', 'cc' => 'I', 'cd' => 'I',
    'ce' => 'I', 'cf' => 'I', 'd0' => 'D', 'd1' => 'N', 'd2' => 'O', 'd3' => 'O',
    'd4' => 'O', 'd5' => 'O', 'd6' => 'O', 'd8' => 'O', 'd9' => 'U', 'da' => 'U',
    'db' => 'U', 'dc' => 'U', 'dd' => 'Y', 'e0' => 'a', 'e1' => 'a', 'e2' => 'a',
    'e3' => 'a', 'e4' => 'a', 'e5' => 'a', 'e6' => 'ae', 'e7' => 'c', 'e8' => 'e',
    'e9' => 'e', 'ea' => 'e', 'eb' => 'e', 'ec' => 'i', 'ed' => 'i', 'ee' => 'i',
    'ef' => 'i', 'f0' => 'o', 'f1' => 'n', 'f2' => 'o', 'f3' => 'o', 'f4' => 'o',
    'f5' => 'o', 'f6' => 'o', 'f8' => 'o', 'f9' => 'u', 'fa' => 'u', 'fb' => 'u',
    'fc' => 'u', 'fd' => 'y', 'ff' => 'y',
    '8a' => 'S', '8c' => 'CE', '9a' => 's', '9c' => 'oe', '9f' => 'Y', 'a2' => 'o', 'aa' => 'a',
    'b2' => '2', 'b3' => '3', 'b9' => '1', 'bc' => '1/4', 'bd' => '1/2', 'be' => '3/4',
    'c0' => 'A', 'c1' => 'A', 'c2' => 'A', 'c3' => 'A', 'c4' => 'A', 'c5' => 'A', 'c6' => 'AE',
    'c7' => 'C', 'c8' => 'E', 'c9' => 'E', 'ca' => 'E', 'cb' => 'E',
    'cc' => 'I', 'cd' => 'I', 'ce' => 'I', 'cf' => 'I', 'd0' => 'D', 'd1' => 'N',
    'd2' => 'O', 'd3' => 'O', 'd4' => 'O', 'd5' => 'O', 'd6' => 'O',
    'd8' => 'O', 'd9' => 'U', 'da' => 'U', 'db' => 'U', 'dc' => 'U', 'dd' => 'Y',
    'df' => 'ss', 'e0' => 'a', 'e1' => 'a', 'e2' => 'a', 'e3' => 'a', 'e4' => 'a', 'e5' => 'a',
    'e6' => 'ae', 'e7' => 'c', 'e8' => 'e', 'e9' => 'e', 'ea' => 'e', 'eb' => 'e',
    'ec' => 'i', 'ed' => 'i', 'ee' => 'i', 'ef' => 'i', 'f1' => 'n',
    'f2' => 'o', 'f3' => 'o', 'f4' => 'o', 'f5' => 'o', 'f6' => 'o', 'f8' => 'o',
    'f9' => 'u', 'fa' => 'u', 'fb' => 'u', 'fc' => 'u', 'fd' => 'y', 'ff' => 'yy',
  );
  my @letters = split //, $text;;
  for (my $i = 0; $i <= $#letters; $i++) {
    my $hex = sprintf "%x", ord($letters[$i]);
    $letters[$i] = $replace{$hex} if (exists $replace{$hex});
  }
  push @transformed, @letters;
  $text = join '', @transformed;
  $text =~ s/[[:^ascii:]]//g;
  return $text;
}

sub dump {
  my ($self, $indent) = @_;
  $indent = $indent ? " " x $indent : "";
  if ($self->can("internal_name")) {
    printf "%s[%s]\n", $indent, $self->internal_name();
  } else {
    my $class = ref($self);
    $class =~ s/^.*:://;
    printf "%s[%s]\n", $indent, uc $class;
  }
  foreach (grep !/^(info|trace|warning|critical|blacklisted|extendedinfo|flat_indices|indices)$/, sort keys %{$self}) {
    printf "%s%s: %s\n", $indent, $_, $self->{$_} if defined $self->{$_} && ref($self->{$_}) ne "ARRAY";
  }
  if ($self->{info}) {
    printf "%sinfo: %s\n", $indent, $self->{info};
  }
  foreach (grep !/^(info|trace|warning|critical|blacklisted|extendedinfo|flat_indices|indices)$/, sort keys %{$self}) {
    if (defined $self->{$_} && ref($self->{$_}) eq "ARRAY") {
      my $have_flat_indices = 1;
      foreach my $obj (@{$self->{$_}}) {
        $have_flat_indices = 0 if (ref($obj) ne "HASH" || ! exists $obj->{flat_indices});
      }
      if ($have_flat_indices) {
        foreach my $obj (sort {
            join('', map { sprintf("%30d",$_) } split( /\./, $a->{flat_indices})) cmp
            join('', map { sprintf("%30d",$_) } split( /\./, $b->{flat_indices}))
        } @{$self->{$_}}) {
          $obj->dump();
        }
      } else {
        foreach my $obj (@{$self->{$_}}) {
          $obj->dump() if UNIVERSAL::can($obj, "isa") && $obj->can("dump");
        }
      }
    } elsif (defined $self->{$_} && ref($self->{$_}) =~ /^Classes::/) {
      $self->{$_}->dump(2) if UNIVERSAL::can($self->{$_}, "isa") && $self->{$_}->can("dump");
    }
  }
  printf "\n";
}

sub table_ascii {
  my ($self, $table, $titles) = @_;
  my $text = "";
  my $column_length = {};
  my $column = 0;
  foreach (@{$titles}) {
    $column_length->{$column++} = length($_);
  }
  foreach my $tr (@{$table}) {
    @{$tr} = map { ref($_) eq "ARRAY" ? $_->[0] : $_; } @{$tr};
    $column = 0;
    foreach my $td (@{$tr}) {
      if (length($td) > $column_length->{$column}) {
        $column_length->{$column} = length($td);
      }
      $column++;
    }
  }
  $column = 0;
  foreach (@{$titles}) {
    $column_length->{$column} = "%".($column_length->{$column} + 3)."s";
    $column++;
  }
  $column = 0;
  foreach (@{$titles}) {
    $text .= sprintf $column_length->{$column++}, $_;
  }
  $text .= "\n";
  foreach my $tr (@{$table}) {
    $column = 0;
    foreach my $td (@{$tr}) {
      $text .= sprintf $column_length->{$column++}, $td;
    }
    $text .= "\n";
  }
  return $text;
}

sub table_html {
  my ($self, $table, $titles) = @_;
  my $text = "";
  $text .= "<table style=\"border-collapse:collapse; border: 1px solid black;\">";
  $text .= "<tr>";
  foreach (@{$titles}) {
    $text .= sprintf "<th style=\"text-align: left; padding-left: 4px; padding-right: 6px;\">%s</th>", $_;
  }
  $text .= "</tr>";
  foreach my $tr (@{$table}) {
    $text .= "<tr>";
    foreach my $td (@{$tr}) {
      my $class = "statusOK";
      if (ref($td) eq "ARRAY") {
        $class = {
          0 => "statusOK",
          1 => "statusWARNING",
          2 => "statusCRITICAL",
          3 => "statusUNKNOWN",
        }->{$td->[1]};
        $td = $td->[0];
      }
      $text .= sprintf "<td style=\"text-align: left; padding-left: 4px; padding-right: 6px;\" class=\"%s\">%s</td>", $class, $td;
    }
    $text .= "</tr>";
  }
  $text .= "</table>";
  return $text;
}

sub load_my_extension {
  my ($self) = @_;
  if ($self->opts->mode =~ /^my-([^-.]+)/) {
    my $class = $1;
    my $loaderror = undef;
    substr($class, 0, 1) = uc substr($class, 0, 1);
    if (! $self->opts->get("with-mymodules-dyn-dir")) {
      $self->override_opt("with-mymodules-dyn-dir", "");
    }
    my $plugin_name = $Monitoring::GLPlugin::pluginname;
    $plugin_name =~ /check_(.*?)_health/;
    my $deprecated_class = "DBD::".(uc $1)."::Server";
    $plugin_name = "Check".uc(substr($1, 0, 1)).substr($1, 1)."Health";
    foreach my $libpath (split(":", $self->opts->get("with-mymodules-dyn-dir"))) {
      foreach my $extmod (glob $libpath."/".$plugin_name."*.pm") {
        my $stderrvar;
        *SAVEERR = *STDERR;
        open OUT ,'>',\$stderrvar;
        *STDERR = *OUT;
        eval {
          $self->debug(sprintf "loading module %s", $extmod);
          require $extmod;
        };
        *STDERR = *SAVEERR;
        if ($@) {
          $loaderror = $extmod;
          $self->debug(sprintf "failed loading module %s: %s", $extmod, $@);
        }
      }
    }
    my $original_class = ref($self);
    my $original_init = $self->can("init");
    $self->compatibility_class() if $self->can('compatibility_class');
    bless $self, "My$class";
    $self->compatibility_methods() if $self->can('compatibility_methods') &&
        $self->isa($deprecated_class);
    if ($self->isa("Monitoring::GLPlugin")) {
      my $new_init = $self->can("init");
      if ($new_init == $original_init) {
          $self->add_unknown(
              sprintf "Class %s needs an init() method", ref($self));
      } else {
        # now go back to check_*_health.pl where init() will be called
      }
    } else {
      bless $self, $original_class;
      $self->add_unknown(
          sprintf "Class %s is not a subclass of Monitoring::GLPlugin%s",
              "My$class",
              $loaderror ? sprintf " (syntax error in %s?)", $loaderror : "" );
      my ($code, $message) = $self->check_messages(join => ', ', join_all => ', ');
      $self->nagios_exit($code, $message);
    }
  }
}

sub number_of_bits {
  my ($self, $unit) = @_;
  # https://en.wikipedia.org/wiki/Data_rate_units
  my $bits = {
    'bit' => 1,			# Bit per second
    'B' => 8,			# Byte per second, 8 bits per second
    'kbit' => 1000,		# Kilobit per second, 1,000 bits per second
    'kb' => 1000,		# Kilobit per second, 1,000 bits per second
    'Kibit' => 1024,		# Kibibit per second, 1,024 bits per second
    'kB' => 8000,		# Kilobyte per second, 8,000 bits per second
    'KiB' => 8192,		# Kibibyte per second, 1,024 bytes per second
    'Mbit' => 1000000,		# Megabit per second, 1,000,000 bits per second
    'Mb' => 1000000,		# Megabit per second, 1,000,000 bits per second
    'Mibit' => 1048576,		# Mebibit per second, 1,024 kibibits per second
    'MB' => 8000000,		# Megabyte per second, 1,000 kilobytes per second
    'MiB' => 8388608,		# Mebibyte per second, 1,024 kibibytes per second
    'Gbit' => 1000000000,	# Gigabit per second, 1,000 megabits per second
    'Gb' => 1000000000,		# Gigabit per second, 1,000 megabits per second
    'Gibit' => 1073741824,	# Gibibit per second, 1,024 mebibits per second
    'GB' => 8000000000,		# Gigabyte per second, 1,000 megabytes per second
    'GiB' => 8589934592,	# Gibibyte per second, 8192 mebibits per second
    'Tbit' => 1000000000000,	# Terabit per second, 1,000 gigabits per second
    'Tb' => 1000000000000,	# Terabit per second, 1,000 gigabits per second
    'Tibit' => 1099511627776,	# Tebibit per second, 1,024 gibibits per second
    'TB' => 8000000000000,	# Terabyte per second, 1,000 gigabytes per second
    # eigene kreationen
    'Bits' => 1,
    'Bit' => 1,			# Bit per second
    'KB' => 1024,		# Kilobyte (like disk kilobyte)
    'KBi' => 1024,		# -"-
    'MBi' => 1024 * 1024,	# Megabyte (like disk megabyte)
    'GBi' => 1024 * 1024 * 1024, # Gigybate (like disk gigybyte)
  };
  if (exists $bits->{$unit}) {
    return $bits->{$unit};
  } else {
    return 0;
  }
}


#########################################################
# runtime methods
#
sub mode : lvalue {
  my ($self) = @_;
  $Monitoring::GLPlugin::mode;
}

sub statefilesdir {
  my ($self) = @_;
  return $Monitoring::GLPlugin::plugin->{statefilesdir};
}

sub opts { # die beiden _nicht_ in AUTOLOAD schieben, das kracht!
  my ($self) = @_;
  return $Monitoring::GLPlugin::plugin->opts();
}

sub getopts {
  my ($self, $envparams) = @_;
  $envparams ||= [];
  my $needs_restart = 0;
  my @restart_opts = ();
  $Monitoring::GLPlugin::plugin->getopts();
  # es kann sein, dass beim aufraeumen zum schluss als erstes objekt
  # das $Monitoring::GLPlugin::plugin geloescht wird. in anderen destruktoren
  # (insb. fuer dbi disconnect) steht dann $self->opts->verbose
  # nicht mehr zur verfuegung bzw. $Monitoring::GLPlugin::plugin->opts ist undef.
  $self->set_variable("verbose", $self->opts->verbose);
  $Monitoring::GLPlugin::tracefile = $self->opts->tracefile ?
      $self->opts->tracefile :
      $self->system_tmpdir()."/".$Monitoring::GLPlugin::pluginname.".trace";
  if (! -f $Monitoring::GLPlugin::tracefile) {
    $Monitoring::GLPlugin::tracefile = undef;
  }
  #
  # die gueltigkeit von modes wird bereits hier geprueft und nicht danach
  # in validate_args. (zwischen getopts und validate_args wird
  # normalerweise classify aufgerufen, welches bereits eine verbindung
  # zum endgeraet herstellt. bei falschem mode waere das eine verschwendung
  # bzw. durch den exit3 ein evt. unsauberes beenden der verbindung.
  if ((! grep { $self->opts->mode eq $_ } map { $_->{spec} } @{$Monitoring::GLPlugin::plugin->{modes}}) &&
      (! grep { $self->opts->mode eq $_ } map { defined $_->{alias} ? @{$_->{alias}} : () } @{$Monitoring::GLPlugin::plugin->{modes}})) {
    if ($self->opts->mode !~ /^my-/) {
      printf "UNKNOWN - mode %s\n", $self->opts->mode;
      $self->opts->print_help();
      exit 3;
    }
  }
  if ($self->opts->environment) {
    # wenn die gewuenschten Environmentvariablen sich von den derzeit
    # gesetzten unterscheiden, dann restart. Denn $ENV aendert
    # _nicht_ das Environment des laufenden Prozesses. 
    # $ENV{ZEUGS} = 1 bedeutet lediglich, dass $ENV{ZEUGS} bei weiterer
    # Verwendung 1 ist, bedeutet aber _nicht_, dass diese Variable 
    # im Environment des laufenden Prozesses existiert.
    foreach (keys %{$self->opts->environment}) {
      if ((! $ENV{$_}) || ($ENV{$_} ne $self->opts->environment->{$_})) {
        $needs_restart = 1;
        $ENV{$_} = $self->opts->environment->{$_};
        $self->debug(sprintf "new %s=%s forces restart\n", $_, $ENV{$_});
      }
    }
  }
  if ($self->opts->runas) {
    # exec sudo $0 ... und dann ohne --runas
    $needs_restart = 1;
    # wenn wir environmentvariablen haben, die laut survive_sudo_env als
    # wichtig erachtet werden, dann muessen wir die ueber einen moeglichen
    # sudo-aufruf rueberretten, also in zusaetzliche --environment umwandenln.
    # sudo putzt das Environment naemlich aus.
    foreach my $survive_env (@{$Monitoring::GLPlugin::survive_sudo_env}) {
      if ($ENV{$survive_env} && ! scalar(grep { /^$survive_env=/ }
          keys %{$self->opts->environment})) {
        $self->opts->environment->{$survive_env} = $ENV{$survive_env};
        printf STDERR "add important --environment %s=%s\n",
            $survive_env, $ENV{$survive_env} if $self->opts->verbose >= 2;
        push(@restart_opts, '--environment');
        push(@restart_opts, sprintf '%s=%s',
            $survive_env, $ENV{$survive_env});
      }
    }
  }
  if ($needs_restart) {
    foreach my $option (keys %{$self->opts->all_my_opts}) {
      # der fliegt raus, sonst gehts gleich wieder in needs_restart rein
      next if $option eq "runas";
      foreach my $spec (map { $_->{spec} } @{$Monitoring::GLPlugin::plugin->opts->{_args}}) {
        if ($spec =~ /^(\w+)[\|\w+]*=(.*)/) {
          if ($1 eq $option && $2 =~ /s%/) {
            foreach (keys %{$self->opts->$option()}) {
              push(@restart_opts, sprintf "--%s", $option);
              push(@restart_opts, sprintf "%s=%s", $_, $self->opts->$option()->{$_});
            }
          } elsif ($1 eq $option) {
            push(@restart_opts, sprintf "--%s", $option);
            push(@restart_opts, sprintf "%s", $self->opts->$option());
          }
        } elsif ($spec eq $option) {
          push(@restart_opts, sprintf "--%s", $option);
        }
      }
    }
    if ($self->opts->runas && ($> == 0)) {
      # Ja, es gibt so Narrische, die gehen mit check_by_ssh als root
      # auf Datenbankmaschinen drauf und lassen dann dort check_oracle_health
      # laufen. Damit OPS$-Anmeldung dann funktioniert, wird mit --runas
      # auf eine andere Kennung umgeschwenkt. Diese Kennung gleich fuer
      # ssh zu verwenden geht aus Sicherheitsgruenden nicht. Narrische halt.
      exec "su", "-c", sprintf("%s %s", $0, join(" ", @restart_opts)), "-", $self->opts->runas;
    } elsif ($self->opts->runas) {
      exec "sudo", "-S", "-u", $self->opts->runas, $0, @restart_opts;
    } else {
      exec $0, @restart_opts;
      # dadurch werden SHLIB oder LD_LIBRARY_PATH sauber gesetzt, damit beim
      # erneuten Start libclntsh.so etc. gefunden werden.
    }
    exit;
  }
  if ($self->opts->shell) {
    # So komme ich bei den Narrischen zu einer root-Shell.
    system("/bin/sh");
  }
}


sub add_ok {
  my ($self, $message) = @_;
  $message ||= $self->{info};
  $self->add_message(OK, $message);
}

sub add_warning {
  my ($self, $message) = @_;
  $message ||= $self->{info};
  $self->add_message(WARNING, $message);
}

sub add_critical {
  my ($self, $message) = @_;
  $message ||= $self->{info};
  $self->add_message(CRITICAL, $message);
}

sub add_unknown {
  my ($self, $message) = @_;
  $message ||= $self->{info};
  $self->add_message(UNKNOWN, $message);
}

sub add_ok_mitigation {
  my ($self, $message) = @_;
  if (defined $self->opts->mitigation()) {
    $self->add_message($self->opts->mitigation(), $message);
  } else {
    $self->add_ok($message);
  }
}

sub add_warning_mitigation {
  my ($self, $message) = @_;
  if (defined $self->opts->mitigation()) {
    $self->add_message($self->opts->mitigation(), $message);
  } else {
    $self->add_warning($message);
  }
}

sub add_critical_mitigation {
  my ($self, $message) = @_;
  if (defined $self->opts->mitigation()) {
    $self->add_message($self->opts->mitigation(), $message);
  } else {
    $self->add_critical($message);
  }
}

sub add_unknown_mitigation {
  my ($self, $message) = @_;
  if (defined $self->opts->mitigation()) {
    $self->add_message($self->opts->mitigation(), $message);
  } else {
    $self->add_unknown($message);
  }
}

sub add_message {
  my ($self, $level, $message) = @_;
  $message ||= $self->{info};
  $Monitoring::GLPlugin::plugin->add_message($level, $message)
      unless $self->is_blacklisted();
  if (exists $self->{failed}) {
    if ($level == UNKNOWN && $self->{failed} == OK) {
      $self->{failed} = $level;
    } elsif ($level > $self->{failed}) {
      $self->{failed} = $level;
    }
  }
}

sub clear_ok {
  my ($self) = @_;
  $self->clear_messages(OK);
}

sub clear_warning {
  my ($self) = @_;
  $self->clear_messages(WARNING);
}

sub clear_critical {
  my ($self) = @_;
  $self->clear_messages(CRITICAL);
}

sub clear_unknown {
  my ($self) = @_;
  $self->clear_messages(UNKNOWN);
}

sub clear_all { # deprecated, use clear_messages
  my ($self) = @_;
  $self->clear_ok();
  $self->clear_warning();
  $self->clear_critical();
  $self->clear_unknown();
}

sub set_level {
  my ($self, $code) = @_;
  $code = (qw(ok warning critical unknown))[$code] if $code =~ /^\d+$/;
  $code = lc $code;
  if (! exists $self->{tmp_level}) {
    $self->{tmp_level} = {
      ok => 0,
      warning => 0,
      critical => 0,
      unknown => 0,
    };
  }
  $self->{tmp_level}->{$code}++;
}

sub get_level {
  my ($self) = @_;
  return OK if ! exists $self->{tmp_level};
  my $code = OK;
  return CRITICAL if $self->{tmp_level}->{critical};
  return WARNING  if $self->{tmp_level}->{warning};
  return UNKNOWN  if $self->{tmp_level}->{unknown};
  return $code;
}

#########################################################
# blacklisting
#
sub blacklist {
  my ($self) = @_;
  $self->{blacklisted} = 1;
}

sub add_blacklist {
  my ($self, $list) = @_;
  $Monitoring::GLPlugin::blacklist = join('/',
      (split('/', $self->opts->blacklist), $list));
}

sub is_blacklisted {
  my ($self) = @_;
  if (! $self->opts->can("blacklist")) {
    return 0;
  }
  if (! exists $self->{blacklisted}) {
    $self->{blacklisted} = 0;
  }
  if (exists $self->{blacklisted} && $self->{blacklisted}) {
    return $self->{blacklisted};
  }
  # FAN:459,203/TEMP:102229/ENVSUBSYSTEM
  # FAN_459,FAN_203,TEMP_102229,ENVSUBSYSTEM
  if ($self->opts->blacklist =~ /_/) {
    foreach my $bl_item (split(/,/, $self->opts->blacklist)) {
      if ($bl_item eq $self->internal_name()) {
        $self->{blacklisted} = 1;
      }
    }
  } else {
    foreach my $bl_items (split(/\//, $self->opts->blacklist)) {
      if ($bl_items =~ /^(\w+):([\:\d\-\.,]+)$/) {
        my $bl_type = $1;
        my $bl_names = $2;
        foreach my $bl_name (split(/,/, $bl_names)) {
          if ($bl_type."_".$bl_name eq $self->internal_name()) {
            $self->{blacklisted} = 1;
          }
        }
      } elsif ($bl_items =~ /^(\w+)$/) {
        if ($bl_items eq $self->internal_name()) {
          $self->{blacklisted} = 1;
        }
      }
    }
  }
  return $self->{blacklisted};
}

#########################################################
# additional info
#
sub add_info {
  my ($self, $info) = @_;
  $info = $self->is_blacklisted() ? $info.' (blacklisted)' : $info;
  $self->{info} = $info;
  push(@{$Monitoring::GLPlugin::info}, $info);
}

sub annotate_info {
  my ($self, $annotation) = @_;
  my $lastinfo = pop(@{$Monitoring::GLPlugin::info});
  $lastinfo .= sprintf ' (%s)', $annotation;
  $self->{info} = $lastinfo;
  push(@{$Monitoring::GLPlugin::info}, $lastinfo);
}

sub add_extendedinfo {  # deprecated
  my ($self, $info) = @_;
  $self->{extendedinfo} = $info;
  return if ! $self->opts->extendedinfo;
  push(@{$Monitoring::GLPlugin::extendedinfo}, $info);
}

sub get_info {
  my ($self, $separator) = @_;
  $separator ||= ' ';
  return join($separator , @{$Monitoring::GLPlugin::info});
}

sub get_last_info {
  my ($self) = @_;
  return pop(@{$Monitoring::GLPlugin::info});
}

sub get_extendedinfo {
  my ($self, $separator) = @_;
  $separator ||= ' ';
  return join($separator, @{$Monitoring::GLPlugin::extendedinfo});
}

sub add_summary {  # deprecated
  my ($self, $summary) = @_;
  push(@{$Monitoring::GLPlugin::summary}, $summary);
}

sub get_summary {
  my ($self) = @_;
  return join(', ', @{$Monitoring::GLPlugin::summary});
}

#########################################################
# persistency
#
sub valdiff {
  my ($self, $pparams, @keys) = @_;
  my %params = %{$pparams};
  my $now = time;
  my $newest_history_set = {};
  $params{freeze} = 0 if ! $params{freeze};
  my $mode = "normal";
  if ($self->opts->lookback && $self->opts->lookback == 99999 && $params{freeze} == 0) {
    $mode = "lookback_freeze_chill";
  } elsif ($self->opts->lookback && $self->opts->lookback == 99999 && $params{freeze} == 1) {
    $mode = "lookback_freeze_shockfrost";
  } elsif ($self->opts->lookback && $self->opts->lookback == 99999 && $params{freeze} == 2) {
    $mode = "lookback_freeze_defrost";
  } elsif ($self->opts->lookback) {
    $mode = "lookback";
  }
  # lookback=99999, freeze=0(default)
  #  nimm den letzten lauf und schreib ihn nach {cold}
  #  vergleich dann
  #    wenn es frozen gibt, vergleich frozen und den letzten lauf
  #    sonst den letzten lauf und den aktuellen lauf
  # lookback=99999, freeze=1
  #  wird dann aufgerufen,wenn nach dem freeze=0 ein problem festgestellt wurde
  #     (also als 2.valdiff hinterher)
  #  schreib cold nach frozen
  # lookback=99999, freeze=2
  #  wird dann aufgerufen,wenn nach dem freeze=0 wieder alles ok ist
  #     (also als 2.valdiff hinterher)
  #  loescht frozen
  #
  my $last_values = $self->load_state(%params) || eval {
    my $empty_events = {};
    foreach (@keys) {
      if (ref($self->{$_}) eq "ARRAY") {
        $empty_events->{$_} = [];
      } else {
        $empty_events->{$_} = 0;
      }
    }
    $empty_events->{timestamp} = 0;
    if ($mode eq "lookback") {
      $empty_events->{lookback_history} = {};
    } elsif ($mode eq "lookback_freeze_chill") {
      $empty_events->{cold} = {};
      $empty_events->{frozen} = {};
    }
    $empty_events;
  };
  $self->{'delta_timestamp'} = $now - $last_values->{timestamp};
  foreach (@keys) {
    if ($mode eq "lookback_freeze_chill") {
      # die werte vom letzten lauf wegsichern.
      # vielleicht gibts gleich einen freeze=1, dann muessen die eingefroren werden
      if (exists $last_values->{$_}) {
        if (ref($self->{$_}) eq "ARRAY") {
          $last_values->{cold}->{$_} = [];
          foreach my $value (@{$last_values->{$_}}) {
            push(@{$last_values->{cold}->{$_}}, $value);
          }
        } else {
          $last_values->{cold}->{$_} = $last_values->{$_};
        }
      } else {
        if (ref($self->{$_}) eq "ARRAY") {
          $last_values->{cold}->{$_} = [];
        } else {
          $last_values->{cold}->{$_} = 0;
        }
      }
      # es wird so getan, als sei der frozen wert vom letzten lauf
      if (exists $last_values->{frozen}->{$_}) {
        if (ref($self->{$_}) eq "ARRAY") {
          $last_values->{$_} = [];
          foreach my $value (@{$last_values->{frozen}->{$_}}) {
            push(@{$last_values->{$_}}, $value);
          }
        } else {
          $last_values->{$_} = $last_values->{frozen}->{$_};
        }
      }
    } elsif ($mode eq "lookback") {
      # find a last_value in the history which fits lookback best
      # and overwrite $last_values->{$_} with historic data
      if (exists $last_values->{lookback_history}->{$_}) {
        foreach my $date (sort {$a <=> $b} keys %{$last_values->{lookback_history}->{$_}}) {
            $newest_history_set->{$_} = $last_values->{lookback_history}->{$_}->{$date};
            $newest_history_set->{timestamp} = $date;
        }
        foreach my $date (sort {$a <=> $b} keys %{$last_values->{lookback_history}->{$_}}) {
          if ($date >= ($now - $self->opts->lookback)) {
            $last_values->{$_} = $last_values->{lookback_history}->{$_}->{$date};
            $last_values->{timestamp} = $date;
            $self->{'delta_timestamp'} = $now - $last_values->{timestamp};
            if (ref($last_values->{$_}) eq "ARRAY") {
              $self->debug(sprintf "oldest value of %s within lookback is size %s (age %d)",
                  $_, scalar(@{$last_values->{$_}}), $now - $date);
            } else {
              $self->debug(sprintf "oldest value of %s within lookback is %s (age %d)",
                  $_, $last_values->{$_}, $now - $date);
            }
            last;
          } else {
            $self->debug(sprintf "deprecate %s of age %d", $_, time - $date);
            delete $last_values->{lookback_history}->{$_}->{$date};
          }
        }
      }
    }
    if ($mode eq "normal" || $mode eq "lookback" || $mode eq "lookback_freeze_chill") {
      if (exists $self->{$_} && defined $self->{$_} && $self->{$_} =~ /^\d+\.*\d*$/) {
        # $VAR1 = { 'sysStatTmSleepCycles' => '',
        # no idea why this happens, but we can repair it.
        $last_values->{$_} = $self->{$_} if ! (exists $last_values->{$_} && defined $last_values->{$_} && $last_values->{$_} ne "");
        if ($self->{$_} >= $last_values->{$_}) {
          $self->{'delta_'.$_} = $self->{$_} - $last_values->{$_};
        } elsif ($self->{$_} eq $last_values->{$_}) {
          # dawischt! in einem fall wurde 131071.999023438 >= 131071.999023438 da oben nicht erkannt
          # subtrahieren ging auch daneben, weil ein winziger negativer wert rauskam.
          $self->{'delta_'.$_} = 0;
        } else {
          if ($mode =~ /lookback_freeze/) {
            # hier koennen delta-werte auch negativ sein, wenn z.b. peers verschwinden
            $self->{'delta_'.$_} = $self->{$_} - $last_values->{$_};
          } elsif (exists $params{lastarray}) {
            $self->{'delta_'.$_} = $self->{$_} - $last_values->{$_};
          } else {
            # vermutlich db restart und zaehler alle auf null
            $self->{'delta_'.$_} = $self->{$_};
          }
        }
        $self->debug(sprintf "delta_%s %f", $_, $self->{'delta_'.$_});
        $self->{$_.'_per_sec'} = $self->{'delta_timestamp'} ?
            $self->{'delta_'.$_} / $self->{'delta_timestamp'} : 0;
      } elsif (ref($self->{$_}) eq "ARRAY") {
        if ((! exists $last_values->{$_} || ! defined $last_values->{$_}) && exists $params{lastarray}) {
          # innerhalb der lookback-zeit wurde nichts in der lookback_history
          # gefunden. allenfalls irgendwas aelteres. normalerweise
          # wuerde jetzt das array als [] initialisiert.
          # d.h. es wuerde ein delta geben, @found s.u.
          # wenn man das nicht will, sondern einfach aktuelles array mit
          # dem array des letzten laufs vergleichen will, setzt man lastarray
          $last_values->{$_} = %{$newest_history_set} ?
              $newest_history_set->{$_} : []
        } elsif ((! exists $last_values->{$_} || ! defined $last_values->{$_}) && ! exists $params{lastarray}) {
          $last_values->{$_} = [] if ! exists $last_values->{$_};
        } elsif (exists $last_values->{$_} && ! defined $last_values->{$_}) {
          # $_ kann es auch ausserhalb des lookback_history-keys als normalen
          # key geben. der zeigt normalerweise auf den entspr. letzten
          # lookback_history eintrag. wurde der wegen ueberalterung abgeschnitten
          # ist der hier auch undef.
          $last_values->{$_} = %{$newest_history_set} ?
              $newest_history_set->{$_} : []
        }
        my %saved = map { $_ => 1 } @{$last_values->{$_}};
        my %current = map { $_ => 1 } @{$self->{$_}};
        my @found = grep(!defined $saved{$_}, @{$self->{$_}});
        my @lost = grep(!defined $current{$_}, @{$last_values->{$_}});
        $self->{'delta_found_'.$_} = \@found;
        $self->{'delta_lost_'.$_} = \@lost;
      } else {
        # nicht ganz sauber, aber das artet aus, wenn man jedem uninitialized hinterherstochert.
        # wem das nicht passt, der kann gerne ein paar tage debugging beauftragen.
        # das kostet aber mehr als drei kugeln eis.
        $last_values->{$_} = 0 if ! (exists $last_values->{$_} && defined $last_values->{$_} && $last_values->{$_} ne "");
        $self->{$_} = 0 if ! (exists $self->{$_} && defined $self->{$_} && $self->{$_} ne "");
        $self->{'delta_'.$_} = 0;
      }
    }
  }
  $params{save} = eval {
    my $empty_events = {};
    foreach (@keys) {
      $empty_events->{$_} = $self->{$_};
      if ($mode =~ /lookback_freeze/) {
        if (exists $last_values->{frozen}->{$_}) {
          if (ref($last_values->{frozen}->{$_}) eq "ARRAY") {
            @{$empty_events->{cold}->{$_}} = @{$last_values->{frozen}->{$_}};
          } else {
            $empty_events->{cold}->{$_} = $last_values->{frozen}->{$_};
          }
        } else {
          if (ref($last_values->{cold}->{$_}) eq "ARRAY") {
            @{$empty_events->{cold}->{$_}} = @{$last_values->{cold}->{$_}};
          } else {
            $empty_events->{cold}->{$_} = $last_values->{cold}->{$_};
          }
        }
        $empty_events->{cold}->{timestamp} = $last_values->{cold}->{timestamp};
      }
      if ($mode eq "lookback_freeze_shockfrost") {
        if (ref($empty_events->{cold}->{$_}) eq "ARRAY") {
          @{$empty_events->{frozen}->{$_}} = @{$empty_events->{cold}->{$_}};
        } else {
          $empty_events->{frozen}->{$_} = $empty_events->{cold}->{$_};
        }
        $empty_events->{frozen}->{timestamp} = $now;
      }
    }
    $empty_events->{timestamp} = $now;
    if ($mode eq "lookback") {
      $empty_events->{lookback_history} = $last_values->{lookback_history};
      foreach (@keys) {
        if (ref($self->{$_}) eq "ARRAY") {
          @{$empty_events->{lookback_history}->{$_}->{$now}} = @{$self->{$_}};
        } else {
          $empty_events->{lookback_history}->{$_}->{$now} = $self->{$_};
        }
      }
    }
    if ($mode eq "lookback_freeze_defrost") {
      delete $empty_events->{freeze};
    }
    $empty_events;
  };
  $self->save_state(%params);
}

sub create_statefilesdir {
  my ($self) = @_;
  if (! -d $self->statefilesdir()) {
    eval {
      use File::Path;
      mkpath $self->statefilesdir();
    };
    if ($@ || ! -w $self->statefilesdir()) {
      $self->add_message(UNKNOWN,
        sprintf "cannot create status dir %s! check your filesystem (permissions/usage/integrity) and disk devices", $self->statefilesdir());
    }
  } elsif (! -w $self->statefilesdir()) {
    $self->add_message(UNKNOWN,
        sprintf "cannot write status dir %s! check your filesystem (permissions/usage/integrity) and disk devices", $self->statefilesdir());
  }
}

sub create_statefile {
  my ($self, %params) = @_;
  my $extension = "";
  $extension .= $params{name} ? '_'.$params{name} : '';
  $extension =~ s/\//_/g;
  $extension =~ s/\(/_/g;
  $extension =~ s/\)/_/g;
  $extension =~ s/\*/_/g;
  $extension =~ s/\s/_/g;
  return sprintf "%s/%s%s", $self->statefilesdir(),
      $self->clean_path($self->mode), $self->clean_path(lc $extension);
}

sub clean_path {
  my ($self, $path) = @_;
  if ($^O =~ /MSWin/) {
    $path =~ s/:/_/g;
  }
  return $path;
}

sub schimpf {
  my ($self) = @_;
  printf "statefilesdir %s is not writable.\nYou didn't run this plugin as root, didn't you?\n", $self->statefilesdir();
}

# $self->protect_value('1.1-flat_index', 'cpu_busy', 'percent');
sub protect_value {
  my ($self, $ident, $key, $validfunc) = @_;
  if (ref($validfunc) ne "CODE" && $validfunc eq "percent") {
    $validfunc = sub {
      my $value = shift;
      return 0 if ! defined $value;
      return 0 if $value !~ /^[-+]?([0-9]+(\.[0-9]+)?|\.[0-9]+)$/;
      return ($value < 0 || $value > 100) ? 0 : 1;
    };
  } elsif (ref($validfunc) ne "CODE" && $validfunc eq "positive") {
    $validfunc = sub {
      my $value = shift;
      return 0 if ! defined $value;
      return 0 if $value !~ /^[-+]?([0-9]+(\.[0-9]+)?|\.[0-9]+)$/;
      return ($value < 0) ? 0 : 1;
    };
  }
  if (&$validfunc($self->{$key})) {
    $self->save_state(name => 'protect_'.$ident.'_'.$key, save => {
        $key => $self->{$key},
        exception => 0,
    });
  } else {
    # if the device gives us an clearly wrong value, simply use the last value.
    my $laststate = $self->load_state(name => 'protect_'.$ident.'_'.$key);
    $self->debug(sprintf "self->{%s} is %s and invalid for the %dth time",
        $key, $self->{$key}, $laststate->{exception} + 1);
    if ($laststate->{exception} <= 5) {
      # but only 5 times.
      # if the error persists, somebody has to check the device.
      $self->{$key} = $laststate->{$key};
    }
    $self->save_state(name => 'protect_'.$ident.'_'.$key, save => {
        $key => $laststate->{$key},
        exception => ++$laststate->{exception},
    });
  }
}

sub save_state {
  my ($self, %params) = @_;
  $self->create_statefilesdir();
  my $statefile = $self->create_statefile(%params);
  my $tmpfile = $statefile.$$.rand();
  if ((ref($params{save}) eq "HASH") && exists $params{save}->{timestamp}) {
    $params{save}->{localtime} = scalar localtime $params{save}->{timestamp};
  }
  my $seekfh = IO::File->new();
  if ($seekfh->open($tmpfile, "w")) {
    $seekfh->printf("%s", Data::Dumper::Dumper($params{save}));
    $seekfh->flush();
    $seekfh->close();
    $self->debug(sprintf "saved %s to %s",
        Data::Dumper::Dumper($params{save}), $statefile);
  }
  if (! rename $tmpfile, $statefile) {
    $self->add_message(UNKNOWN,
        sprintf "cannot write status file %s! check your filesystem (permissions/usage/integrity) and disk devices", $statefile);
  }
}

sub load_state {
  my ($self, %params) = @_;
  my $statefile = $self->create_statefile(%params);
  if ( -f $statefile) {
    our $VAR1;
    eval {
      delete $INC{$statefile} if exists $INC{$statefile}; # else unit tests fail
      require $statefile;
    };
    if($@) {
      printf "FATAL: Could not load state!\n";
    }
    $self->debug(sprintf "load %s from %s", Data::Dumper::Dumper($VAR1), $statefile);
    return $VAR1;
  } else {
    return undef;
  }
}

#########################################################
# daemon mode
#
sub check_pidfile {
  my ($self) = @_;
  my $fh = IO::File->new();
  if ($fh->open($self->{pidfile}, "r")) {
    my $pid = $fh->getline();
    $fh->close();
    if (! $pid) {
      $self->debug("Found pidfile %s with no valid pid. Exiting.",
          $self->{pidfile});
      return 0;
    } else {
      $self->debug("Found pidfile %s with pid %d", $self->{pidfile}, $pid);
      kill 0, $pid;
      if ($! == Errno::ESRCH) {
        $self->debug("This pidfile is stale. Writing a new one");
        $self->write_pidfile();
        return 1;
      } else {
        $self->debug("This pidfile is held by a running process. Exiting");
        return 0;
      }
    }
  } else {
    $self->debug("Found no pidfile. Writing a new one");
    $self->write_pidfile();
    return 1;
  }
}

sub write_pidfile {
  my ($self) = @_;
  if (! -d dirname($self->{pidfile})) {
    eval "require File::Path;";
    if (defined(&File::Path::mkpath)) {
      import File::Path;
      eval { mkpath(dirname($self->{pidfile})); };
    } else {
      my @dirs = ();
      map {
          push @dirs, $_;
          mkdir(join('/', @dirs))
              if join('/', @dirs) && ! -d join('/', @dirs);
      } split(/\//, dirname($self->{pidfile}));
    }
  }
  my $fh = IO::File->new();
  $fh->autoflush(1);
  if ($fh->open($self->{pidfile}, "w")) {
    $fh->printf("%s", $$);
    $fh->close();
  } else {
    $self->debug("Could not write pidfile %s", $self->{pidfile});
    die "pid file could not be written";
  }
}

sub system_vartmpdir {
  my ($self) = @_;
  if ($^O =~ /MSWin/) {
    return $self->system_tmpdir();
  } else {
    return "/var/tmp/".$Monitoring::GLPlugin::pluginname;
  }
}

sub system_tmpdir {
  my ($self) = @_;
  if ($^O =~ /MSWin/) {
    return $ENV{TEMP} if defined $ENV{TEMP};
    return $ENV{TMP} if defined $ENV{TMP};
    return File::Spec->catfile($ENV{windir}, 'Temp')
        if defined $ENV{windir};
    return 'C:\Temp';
  } else {
    return "/tmp";
  }
}

sub convert_scientific_numbers {
  my ($self, $n) = @_;
  # mostly used to convert numbers in scientific notation
  if ($n =~ /^\s*\d+\s*$/) {
    return $n;
  } elsif ($n =~ /^\s*([-+]?)(\d*[\.,]*\d*)[eE]{1}([-+]?)(\d+)\s*$/) {
    my ($vor, $num, $sign, $exp) = ($1, $2, $3, $4);
    $n =~ s/E/e/g;
    $n =~ s/,/\./g;
    $num =~ s/,/\./g;
    my $sig = $sign eq '-' ? "." . ($exp - 1 + length $num) : '';
    my $dec = sprintf "%${sig}f", $n;
    $dec =~ s/\.[0]+$//g;
    return $dec;
  } elsif ($n =~ /^\s*([-+]?)(\d+)[\.,]*(\d*)\s*$/) {
    return $1.$2.".".$3;
  } elsif ($n =~ /^\s*(.*?)\s*$/) {
    return $1;
  } else {
    return $n;
  }
}

sub compatibility_methods {
  my ($self) = @_;
  # add_perfdata
  # add_message
  # nagios_exit
  # ->{warningrange}
  # ->{criticalrange}
  # ...
  $self->{warningrange} = ($self->get_thresholds())[0];
  $self->{criticalrange} = ($self->get_thresholds())[1];
  my $old_init = $self->can('init');
  my %params = (
    'mode' => join('::', split(/-/, $self->opts->mode)),
    'name' => $self->opts->name,
    'name2' => $self->opts->name2,
  );
  {
    no strict 'refs';
    no warnings 'redefine';
    *{ref($self).'::init'} = sub {
      $self->$old_init(%params);
      $self->nagios(%params);
    };
    *{ref($self).'::add_nagios'} = \&{"Monitoring::GLPlugin::add_message"};
    *{ref($self).'::add_nagios_ok'} = \&{"Monitoring::GLPlugin::add_ok"};
    *{ref($self).'::add_nagios_warning'} = \&{"Monitoring::GLPlugin::add_warning"};
    *{ref($self).'::add_nagios_critical'} = \&{"Monitoring::GLPlugin::add_critical"};
    *{ref($self).'::add_nagios_unknown'} = \&{"Monitoring::GLPlugin::add_unknown"};
    *{ref($self).'::add_perfdata'} = sub {
      my $self = shift;
      my $message = shift;
      foreach my $perfdata (split(/\s+/, $message)) {
      my ($label, $perfstr) = split(/=/, $perfdata);
      my ($value, $warn, $crit, $min, $max) = split(/;/, $perfstr);
      $value =~ /^([\d\.\-\+]+)(.*)$/;
      $value = $1;
      my $uom = $2;
      $Monitoring::GLPlugin::plugin->add_perfdata(
        label => $label,
        value => $value,
        uom => $uom,
        warn => $warn,
        crit => $crit,
        min => $min,
        max => $max,
      );
      }
    };
    *{ref($self).'::check_thresholds'} = sub {
      my $self = shift;
      my $value = shift;
      my $defaultwarningrange = shift;
      my $defaultcriticalrange = shift;
      $Monitoring::GLPlugin::plugin->set_thresholds(
          metric => 'default',
          warning => $defaultwarningrange,
          critical => $defaultcriticalrange,
      );
      $self->{warningrange} = ($self->get_thresholds())[0];
      $self->{criticalrange} = ($self->get_thresholds())[1];
      return $Monitoring::GLPlugin::plugin->check_thresholds(
          metric => 'default',
          value => $value,
          warning => $defaultwarningrange,
          critical => $defaultcriticalrange,
      );
    };
  }
}

sub AUTOLOAD {
  my ($self, @params) = @_;
  return if ($AUTOLOAD =~ /DESTROY/);
  $self->debug("AUTOLOAD %s\n", $AUTOLOAD)
        if $self->opts->verbose >= 2;
  if ($AUTOLOAD =~ /^(.*)::analyze_and_check_(.*)_subsystem$/) {
    my $class = $1;
    my $subsystem = $2;
    my $analyze = sprintf "analyze_%s_subsystem", $subsystem;
    my $check = sprintf "check_%s_subsystem", $subsystem;
    if (@params) {
      # analyzer class
      my $subsystem_class = shift @params;
      $self->{components}->{$subsystem.'_subsystem'} = $subsystem_class->new();
      $self->debug(sprintf "\$self->{components}->{%s_subsystem} = %s->new()",
          $subsystem, $subsystem_class);
    } else {
      $self->$analyze();
      $self->debug("call %s()", $analyze);
    }
    $self->$check();
  } elsif ($AUTOLOAD =~ /^(.*)::check_(.*)_subsystem$/) {
    my $class = $1;
    my $subsystem = sprintf "%s_subsystem", $2;
    $self->{components}->{$subsystem}->check();
    $self->{components}->{$subsystem}->dump()
        if $self->opts->verbose >= 2;
  } elsif ($AUTOLOAD =~ /^.*::(status_code|check_messages|nagios_exit|html_string|perfdata_string|selected_perfdata|check_thresholds|get_thresholds|opts|pandora_string|strequal)$/) {
    return $Monitoring::GLPlugin::plugin->$1(@params);
  } elsif ($AUTOLOAD =~ /^.*::(reduce_messages|reduce_messages_short|clear_messages|suppress_messages|add_html|add_perfdata|override_opt|create_opt|set_thresholds|force_thresholds|add_pandora)$/) {
    $Monitoring::GLPlugin::plugin->$1(@params);
  } elsif ($AUTOLOAD =~ /^.*::mod_arg_(.*)$/) {
    return $Monitoring::GLPlugin::plugin->mod_arg($1, @params);
  } else {
    $self->debug("AUTOLOAD: class %s has no method %s\n",
        ref($self), $AUTOLOAD);
  }
}



package Monitoring::GLPlugin::Item;
our @ISA = qw(Monitoring::GLPlugin);

use strict;

sub new {
  my ($class, %params) = @_;
  my $self = {
    blacklisted => 0,
    info => undef,
    extendedinfo => undef,
  };
  bless $self, $class;
  $self->init(%params);
  return $self;
}

sub check {
  my ($self, $lists) = @_;
  my @lists = $lists ? @{$lists} : grep { ref($self->{$_}) eq "ARRAY" } keys %{$self};
  foreach my $list (@lists) {
    $self->add_info('checking '.$list);
    foreach my $element (@{$self->{$list}}) {
      $element->blacklist() if $self->is_blacklisted();
      $element->check();
    }
  }
}



package Monitoring::GLPlugin::TableItem;
our @ISA = qw(Monitoring::GLPlugin::Item);

use strict;

sub new {
  my ($class, %params) = @_;
  my $self = {};
  bless $self, $class;
  foreach (keys %params) {
    $self->{$_} = $params{$_};
  }
  if ($self->can("finish")) {
    $self->finish(%params);
  }
  return $self;
}

sub check {
  my ($self) = @_;
  # some tableitems are not checkable, they are only used to enhance other
  # items (e.g. sensorthresholds enhance sensors)
  # normal tableitems should have their own check-method
}



package Monitoring::GLPlugin::SNMP;
our @ISA = qw(Monitoring::GLPlugin);
# ABSTRACT: helper functions to build a snmp-based monitoring plugin

use strict;
use File::Basename;
use Digest::MD5 qw(md5_hex);
use Module::Load;
use AutoLoader;
our $AUTOLOAD;

use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };

{
  our $mode = undef;
  our $plugin = undef;
  our $blacklist = undef;
  our $session = undef;
  our $rawdata = {};
  our $tablecache = {};
  our $info = [];
  our $extendedinfo = [];
  our $summary = [];
  our $oidtrace = [];
  our $uptime = 0;
}

sub new {
  my ($class, %params) = @_;
  require Monitoring::GLPlugin
      if ! grep /BEGIN/, keys %Monitoring::GLPlugin::;
  require Monitoring::GLPlugin::SNMP::MibsAndOids
      if ! grep /BEGIN/, keys %Monitoring::GLPlugin::SNMP::MibsAndOids::;
  require Monitoring::GLPlugin::SNMP::CSF
      if ! grep /BEGIN/, keys %Monitoring::GLPlugin::SNMP::CSF::;
  require Monitoring::GLPlugin::SNMP::Item
      if ! grep /BEGIN/, keys %Monitoring::GLPlugin::SNMP::Item::;
  require Monitoring::GLPlugin::SNMP::TableItem
      if ! grep /BEGIN/, keys %Monitoring::GLPlugin::SNMP::TableItem::;
  my $self = Monitoring::GLPlugin->new(%params);
  bless $self, $class;
  return $self;
}

sub v2tov3 {
  my ($self) = @_;
  if ($self->opts->community && $self->opts->community =~ /^snmpv3(.)(.+)/) {
    my $separator = $1;
    my ($authprotocol, $authpassword, $privprotocol, $privpassword,
        $username, $contextengineid, $contextname) = split(/$separator/, $2);
    $self->override_opt('authprotocol', $authprotocol)
        if defined($authprotocol) && $authprotocol;
    $self->override_opt('authpassword', $authpassword)
        if defined($authpassword) && $authpassword;
    $self->override_opt('privprotocol', $privprotocol)
        if defined($privprotocol) && $privprotocol;
    $self->override_opt('privpassword', $privpassword)
        if defined($privpassword) && $privpassword;
    $self->override_opt('username', $username) 
        if defined($username) && $username;
    $self->override_opt('contextengineid', $contextengineid)
        if defined($contextengineid) && $contextengineid;
    $self->override_opt('contextname', $contextname)
        if defined($contextname) && $contextname;
    $self->override_opt('community', undef) ;
    $self->override_opt('protocol', '3') ;
  }
  if (($self->opts->authpassword || $self->opts->authprotocol ||
      $self->opts->privpassword || $self->opts->privprotocol) && 
      $self->opts->protocol ne '3') {
    $self->override_opt('protocol', '3') ;
  }
  if ($self->opts->community2 && $self->opts->community2 =~ /^snmpv3(.)(.+)/) {
    my $separator = $1;
    $self->create_opt('authprotocol2');
    $self->create_opt('authpassword2');
    $self->create_opt('privprotocol2');
    $self->create_opt('privpassword2');
    $self->create_opt('username2');
    $self->create_opt('contextengineid2');
    $self->create_opt('contextname2');
    my ($authprotocol, $authpassword, $privprotocol, $privpassword,
        $username, $contextengineid, $contextname) = split(/$separator/, $2);
    $self->override_opt('authprotocol2', $authprotocol)
        if defined($authprotocol) && $authprotocol;
    $self->override_opt('authpassword2', $authpassword)
        if defined($authpassword) && $authpassword;
    $self->override_opt('privprotocol2', $privprotocol)
        if defined($privprotocol) && $privprotocol;
    $self->override_opt('privpassword2', $privpassword)
        if defined($privpassword) && $privpassword;
    $self->override_opt('username2', $username)
        if defined($username) && $username;
    $self->override_opt('contextengineid2', $contextengineid)
        if defined($contextengineid) && $contextengineid;
    $self->override_opt('contextname2', $contextname)
        if defined($contextname) && $contextname;
    $self->override_opt('community2', undef);
  }
}

sub add_snmp_modes {
  my ($self) = @_;
  $self->add_mode(
      internal => 'device::uptime',
      spec => 'uptime',
      alias => undef,
      help => 'Check the uptime of the device',
  );
  $self->add_mode(
      internal => 'device::walk',
      spec => 'walk',
      alias => undef,
      help => 'Show snmpwalk command with the oids necessary for a simulation',
  );
  $self->add_mode(
      internal => 'device::walkbulk',
      spec => 'bulkwalk',
      alias => undef,
      help => 'Show snmpbulkwalk command with the oids necessary for a simulation',
      hidden => 1,
  );
  $self->add_mode(
      internal => 'device::supportedmibs',
      spec => 'supportedmibs',
      alias => undef,
      help => 'Shows the names of the mibs which this devices has implemented (only lausser may run this command)',
  );
  $self->add_mode(
      internal => 'device::supportedoids',
      spec => 'supportedoids',
      alias => undef,
      help => 'Shows the names of the oids which this devices has implemented (only lausser may run this command)',
  );
}

sub add_snmp_args {
  my ($self) = @_;
  $self->add_arg(
      spec => 'hostname|H=s',
      help => '--hostname
   Hostname or IP-address of the switch or router',
      required => 0,
      env => 'HOSTNAME',
  );
  $self->add_arg(
      spec => 'port=i',
      help => '--port
   The SNMP port to use (default: 161)',
      required => 0,
      default => 161,
  );
  $self->add_arg(
      spec => 'domain=s',
      help => '--domain
   The transport domain to use (default: udp/ipv4, other possible values: udp6, udp/ipv6, tcp, tcp4, tcp/ipv4, tcp6, tcp/ipv6)',
      required => 0,
      default => 'udp',
  );
  $self->add_arg(
      spec => 'protocol|P=s',
      help => '--protocol
   The SNMP protocol to use (default: 2c, other possibilities: 1,3)',
      required => 0,
      default => '2c',
  );
  $self->add_arg(
      spec => 'community|C=s',
      help => '--community
   SNMP community of the server (SNMP v1/2 only)',
      required => 0,
      default => 'public',
      decode => "rfc3986",
  );
  $self->add_arg(
      spec => 'username:s',
      help => '--username
   The securityName for the USM security model (SNMPv3 only)',
      required => 0,
  );
  $self->add_arg(
      spec => 'authpassword:s',
      help => '--authpassword
   The authentication password for SNMPv3',
      required => 0,
      decode => "rfc3986",
  );
  $self->add_arg(
      spec => 'authprotocol:s',
      help => '--authprotocol
   The authentication protocol for SNMPv3 (md5|sha)',
      required => 0,
  );
  $self->add_arg(
      spec => 'privpassword:s',
      help => '--privpassword
   The password for authPriv security level',
      required => 0,
      decode => "rfc3986",
  );
  $self->add_arg(
      spec => 'privprotocol=s',
      help => '--privprotocol
   The private protocol for SNMPv3 (des|aes|aes128|3des|3desde)',
      required => 0,
  );
  $self->add_arg(
      spec => 'contextengineid=s',
      help => '--contextengineid
   The context engine id for SNMPv3 (10 to 64 hex characters)',
      required => 0,
  );
  $self->add_arg(
      spec => 'contextname=s',
      help => '--contextname
   The context name for SNMPv3 (empty represents the "default" context)',
      required => 0,
  );
  $self->add_arg(
      spec => 'community2=s',
      help => '--community2
   SNMP community which can be used to switch the context during runtime',
      required => 0,
      decode => "rfc3986",
  );
  $self->add_arg(
      spec => 'snmpwalk=s',
      help => '--snmpwalk
   A file with the output of a snmpwalk (used for simulation)
   Use it instead of --hostname',
      required => 0,
      env => 'SNMPWALK',
  );
  $self->add_arg(
      spec => 'servertype=s',
      help => '--servertype
     The type of the network device: cisco (default). Use it if auto-detection
     is not possible',
      required => 0,
  );
  $self->add_arg(
      spec => 'oids=s',
      help => '--oids
   A list of oids which are downloaded and written to a cache file.
   Use it together with --mode oidcache',
      required => 0,
  );
  $self->add_arg(
      spec => 'offline:i',
      help => '--offline
   The maximum number of seconds since the last update of cache file before
   it is considered too old',
      required => 0,
      env => 'OFFLINE',
  );
}

sub validate_args {
  my ($self) = @_;
  $self->SUPER::validate_args();
  if ($self->opts->mode =~ /^(bulk)*walk/) {
    if ($self->opts->snmpwalk && $self->opts->hostname) {
      if ($self->check_messages == CRITICAL) {
        # gemecker vom super-validierer, der sicherstellt, dass die datei
        # snmpwalk existiert. in diesem fall wird sie aber erst neu angelegt,
        # also schnauze.
        my ($code, $message) = $self->check_messages;
        if ($message eq sprintf("file %s not found", $self->opts->snmpwalk)) {
          $self->clear_critical;
        }
      }
      # snmp agent wird abgefragt, die ergebnisse landen in einem file
      # opts->snmpwalk ist der filename. da sich die ganzen get_snmp_table/object-aufrufe
      # an das walkfile statt an den agenten halten wuerden, muss opts->snmpwalk geloescht
      # werden. stattdessen wird opts->snmpdump als traeger des dateinamens mitgegeben.
      # nur sinnvoll mit mode=walk
      $self->create_opt('snmpdump');
      $self->override_opt('snmpdump', $self->opts->snmpwalk);
      $self->override_opt('snmpwalk', undef);
    } elsif (! $self->opts->snmpwalk && $self->opts->hostname) {
      # snmp agent wird abgefragt, die ergebnisse landen in einem file, dessen name
      # nicht vorgegeben ist
      $self->create_opt('snmpdump');
    }
  } else {    
    if ($self->opts->snmpwalk && ! $self->opts->hostname) {
      # normaler aufruf, mode != walk, oid-quelle ist eine datei
      $self->override_opt('hostname', 'snmpwalk.file'.md5_hex($self->opts->snmpwalk))
    } elsif ($self->opts->snmpwalk && $self->opts->hostname) {
      # snmpwalk hat vorrang
      $self->override_opt('hostname', undef);
    }
  }
}

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::(bulk)*walk/) {
    my @trees = ();
    my $name = $Monitoring::GLPlugin::pluginname;
    $name =~ s/.*\///g;
    $name = sprintf "/tmp/snmpwalk_%s_%s", $name, $self->opts->hostname;
    if ($self->opts->oids) {
      # create pid filename
      # already running?;x
      @trees = split(",", $self->opts->oids);

    } elsif ($self->can("trees")) {
      @trees = $self->trees;
      push(@trees, "1.3.6.1.2.1.1");
    } else {
      @trees = ("1.3.6.1.2.1", "1.3.6.1.4.1");
    }
    if ($self->opts->snmpdump) {
      $name = $self->opts->snmpdump;
    }
    $self->opts->override_opt("protocol", $1) if $self->opts->protocol =~ /^v(.*)/;
    if (defined $self->opts->offline) {
      $self->{pidfile} = $name.".pid";
      if (! $self->check_pidfile()) {
        $self->debug("Exiting because another walk is already running");
        printf STDERR "Exiting because another walk is already running\n";
        exit 3;
      }
      $self->write_pidfile();
      my $timedout = 0;
      my $snmpwalkpid = 0;
      $SIG{'ALRM'} = sub {
        $timedout = 1;
        printf "UNKNOWN - %s timed out after %d seconds\n",
            $Monitoring::GLPlugin::plugin->{name}, $self->opts->timeout;
        kill 9, $snmpwalkpid;
      };
      alarm($self->opts->timeout);
      unlink $name.".partial";
      while (! $timedout && @trees) {
        my $tree = shift @trees;
        $SIG{CHLD} = 'IGNORE';
        my $cmd = sprintf "%s -ObentU -v%s -c %s %s %s >> %s",
            ($self->mode =~ /bulk/) ? "snmpbulkwalk" : "snmpwalk",
            $self->opts->protocol,
            $self->opts->community,
            $self->opts->hostname,
            $tree, $name.".partial";
        $self->debug($cmd);
        $snmpwalkpid = fork;
        if (not $snmpwalkpid) {
          exec($cmd);
        } else {
          wait();
        }
      }
      rename $name.".partial", $name if ! $timedout;
      -f $self->{pidfile} && unlink $self->{pidfile};
      if ($timedout) {
        printf "CRITICAL - timeout. There are still %d snmpwalks left\n", scalar(@trees);
        exit 3;
      } else {
        printf "OK - all requested oids are in %s\n", $name;
      }
    } else {
      printf "rm -f %s\n", $name;
      foreach (@trees) {
        printf "%s -ObentU -v%s -c %s %s %s >> %s\n",
            ($self->mode =~ /bulk/) ? "snmpbulkwalk -t 15 -r 20" : "snmpwalk",
            $self->opts->protocol,
            $self->opts->community,
            $self->opts->hostname,
            $_, $name;
      }
    }
    exit 0;
  } elsif ($self->mode =~ /device::uptime/) {
    $self->add_info(sprintf 'device is up since %s',
        $self->human_timeticks($self->{uptime}));
    $self->set_thresholds(warning => '15:', critical => '5:');
    $self->add_message($self->check_thresholds($self->{uptime} / 60));
    $self->add_perfdata(
        label => 'uptime',
        value => $self->{uptime} / 60,
        places => 0,
    );
    if ($self->opts->report ne 'short') {
      $self->add_ok($self->pretty_sysdesc($self->{productname}));
    }
    my ($code, $message) = $self->check_messages(join => ', ', join_all => ', ');
    $Monitoring::GLPlugin::plugin->nagios_exit($code, $message);
  } elsif ($self->mode =~ /device::supportedmibs/) {
    our $mibdepot = [];
    my $unknowns = {};
    my @outputlist = ();
    %{$unknowns} = %{$self->rawdata};
    if ($self->opts->name && -f $self->opts->name) {
      eval { require $self->opts->name };
      $self->add_critical($@) if $@;
    } elsif ($self->opts->name && ! -f $self->opts->name) {
      $self->add_unknown("where is --name mibdepotfile?");
    }
    push(@{$mibdepot}, ['1.3.6.1.2.1.60', 'ietf', 'v2', 'ACCOUNTING-CONTROL-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.238', 'ietf', 'v2', 'ADSL2-LINE-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.238.2', 'ietf', 'v2', 'ADSL2-LINE-TC-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.94.3', 'ietf', 'v2', 'ADSL-LINE-EXT-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.94', 'ietf', 'v2', 'ADSL-LINE-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.94.2', 'ietf', 'v2', 'ADSL-TC-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.74', 'ietf', 'v2', 'AGENTX-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.3.123', 'ietf', 'v2', 'AGGREGATE-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.118', 'ietf', 'v2', 'ALARM-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.16.23', 'ietf', 'v2', 'APM-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.34.3', 'ietf', 'v2', 'APPC-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.13.1', 'ietf', 'v1', 'APPLETALK-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.27', 'ietf', 'v2', 'APPLICATION-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.62', 'ietf', 'v2', 'APPLICATION-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.34.5', 'ietf', 'v2', 'APPN-DLUR-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.34.4', 'ietf', 'v2', 'APPN-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.34.4', 'ietf', 'v2', 'APPN-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.34.4.0', 'ietf', 'v2', 'APPN-TRAP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.49', 'ietf', 'v2', 'APS-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.117', 'ietf', 'v2', 'ARC-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.37.1.14', 'ietf', 'v2', 'ATM2-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.59', 'ietf', 'v2', 'ATM-ACCOUNTING-INFORMATION-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.37', 'ietf', 'v2', 'ATM-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.37', 'ietf', 'v2', 'ATM-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.37.3', 'ietf', 'v2', 'ATM-TC-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.15', 'ietf', 'v2', 'BGP4-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.15', 'ietf', 'v2', 'BGP4-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.3.122', 'ietf', 'v2', 'BLDG-HVAC-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.17.1', 'ietf', 'v1', 'BRIDGE-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.17', 'ietf', 'v2', 'BRIDGE-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.19', 'ietf', 'v2', 'CHARACTER-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.94', 'ietf', 'v2', 'CIRCUIT-IF-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.3.1.1', 'ietf', 'v1', 'CLNS-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.3.1.1', 'ietf', 'v1', 'CLNS-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.132', 'ietf', 'v2', 'COFFEE-POT-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.89', 'ietf', 'v2', 'COPS-CLIENT-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.18.1', 'ietf', 'v1', 'DECNET-PHIV-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.21', 'ietf', 'v2', 'DIAL-CONTROL-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.108', 'ietf', 'v2', 'DIFFSERV-CONFIG-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.97', 'ietf', 'v2', 'DIFFSERV-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.66', 'ietf', 'v2', 'DIRECTORY-SERVER-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.88', 'ietf', 'v2', 'DISMAN-EVENT-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.90', 'ietf', 'v2', 'DISMAN-EXPRESSION-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.82', 'ietf', 'v2', 'DISMAN-NSLOOKUP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.82', 'ietf', 'v2', 'DISMAN-NSLOOKUP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.80', 'ietf', 'v2', 'DISMAN-PING-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.80', 'ietf', 'v2', 'DISMAN-PING-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.63', 'ietf', 'v2', 'DISMAN-SCHEDULE-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.63', 'ietf', 'v2', 'DISMAN-SCHEDULE-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.64', 'ietf', 'v2', 'DISMAN-SCRIPT-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.64', 'ietf', 'v2', 'DISMAN-SCRIPT-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.81', 'ietf', 'v2', 'DISMAN-TRACEROUTE-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.81', 'ietf', 'v2', 'DISMAN-TRACEROUTE-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.46', 'ietf', 'v2', 'DLSW-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.32.2', 'ietf', 'v2', 'DNS-RESOLVER-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.32.1', 'ietf', 'v2', 'DNS-SERVER-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.127.5', 'ietf', 'v2', 'DOCS-BPI-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.69', 'ietf', 'v2', 'DOCS-CABLE-DEVICE-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.69', 'ietf', 'v2', 'DOCS-CABLE-DEVICE-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.126', 'ietf', 'v2', 'DOCS-IETF-BPI2-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.132', 'ietf', 'v2', 'DOCS-IETF-CABLE-DEVICE-NOTIFICATION-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.127', 'ietf', 'v2', 'DOCS-IETF-QOS-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.125', 'ietf', 'v2', 'DOCS-IETF-SUBMGT-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.127', 'ietf', 'v2', 'DOCS-IF-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.127', 'ietf', 'v2', 'DOCS-IF-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.45', 'ietf', 'v2', 'DOT12-IF-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.53', 'ietf', 'v2', 'DOT12-RPTR-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.155', 'ietf', 'v2', 'DOT3-EPON-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.158', 'ietf', 'v2', 'DOT3-OAM-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.4.1.2.2.1.1', 'ietf', 'v1', 'DPI20-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.82', 'ietf', 'v2', 'DS0BUNDLE-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.81', 'ietf', 'v2', 'DS0-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.18', 'ietf', 'v2', 'DS1-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.18', 'ietf', 'v2', 'DS1-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.18', 'ietf', 'v2', 'DS1-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.30', 'ietf', 'v2', 'DS3-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.30', 'ietf', 'v2', 'DS3-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.29', 'ietf', 'v2', 'DSA-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.16.26', 'ietf', 'v2', 'DSMON-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.34.7', 'ietf', 'v2', 'EBN-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.167', 'ietf', 'v2', 'EFM-CU-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.47', 'ietf', 'v2', 'ENTITY-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.47', 'ietf', 'v2', 'ENTITY-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.47', 'ietf', 'v2', 'ENTITY-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.99', 'ietf', 'v2', 'ENTITY-SENSOR-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.131', 'ietf', 'v2', 'ENTITY-STATE-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.130', 'ietf', 'v2', 'ENTITY-STATE-TC-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.70', 'ietf', 'v2', 'ETHER-CHIPSET-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.7', 'ietf', 'v1', 'EtherLike-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.7', 'ietf', 'v1', 'EtherLike-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.35', 'ietf', 'v2', 'EtherLike-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.35', 'ietf', 'v2', 'EtherLike-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.35', 'ietf', 'v2', 'EtherLike-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.35', 'ietf', 'v2', 'EtherLike-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.224', 'ietf', 'v2', 'FCIP-MGMT-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.56', 'ietf', 'v2', 'FC-MGMT-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.15.73.1', 'ietf', 'v1', 'FDDI-SMT73-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.75', 'ietf', 'v2', 'FIBRE-CHANNEL-FE-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.111', 'ietf', 'v2', 'Finisher-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.40', 'ietf', 'v2', 'FLOW-METER-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.40', 'ietf', 'v2', 'FLOW-METER-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.32', 'ietf', 'v2', 'FRAME-RELAY-DTE-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.86', 'ietf', 'v2', 'FR-ATM-PVC-SERVICE-IWF-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.47', 'ietf', 'v2', 'FR-MFR-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.44', 'ietf', 'v2', 'FRNETSERV-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.44', 'ietf', 'v2', 'FRNETSERV-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.44', 'ietf', 'v2', 'FRNETSERV-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.95', 'ietf', 'v2', 'FRSLD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.166.16', 'ietf', 'v2', 'GMPLS-LABEL-STD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.166.15', 'ietf', 'v2', 'GMPLS-LSR-STD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.166.12', 'ietf', 'v2', 'GMPLS-TC-STD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.166.13', 'ietf', 'v2', 'GMPLS-TE-STD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.98', 'ietf', 'v2', 'GSMP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.16.29', 'ietf', 'v2', 'HC-ALARM-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.107', 'ietf', 'v2', 'HC-PerfHist-TC-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.16.20.5', 'ietf', 'v2', 'HC-RMON-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.25.1', 'ietf', 'v1', 'HOST-RESOURCES-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.25.1', 'ietf', 'v2', 'HOST-RESOURCES-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.34.6.1.5', 'ietf', 'v2', 'HPR-IP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.34.6', 'ietf', 'v2', 'HPR-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.106', 'ietf', 'v2', 'IANA-CHARSET-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.110', 'ietf', 'v2', 'IANA-FINISHER-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.152', 'ietf', 'v2', 'IANA-GMPLS-TC-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.30', 'ietf', 'v2', 'IANAifType-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.128', 'ietf', 'v2', 'IANA-IPPM-METRICS-REGISTRY-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.119', 'ietf', 'v2', 'IANA-ITU-ALARM-TC-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.154', 'ietf', 'v2', 'IANA-MAU-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.109', 'ietf', 'v2', 'IANA-PRINTER-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.4.1.2.6.2.13.1.1', 'ietf', 'v1', 'IBM-6611-APPN-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.166', 'ietf', 'v2', 'IF-CAP-STACK-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.230', 'ietf', 'v2', 'IFCP-MGMT-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.77', 'ietf', 'v2', 'IF-INVERTED-STACK-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.31', 'ietf', 'v2', 'IF-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.31', 'ietf', 'v2', 'IF-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.31', 'ietf', 'v2', 'IF-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.85', 'ietf', 'v2', 'IGMP-STD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.76', 'ietf', 'v2', 'INET-ADDRESS-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.76', 'ietf', 'v2', 'INET-ADDRESS-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.76', 'ietf', 'v2', 'INET-ADDRESS-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.52.5', 'ietf', 'v2', 'INTEGRATED-SERVICES-GUARANTEED-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.52', 'ietf', 'v2', 'INTEGRATED-SERVICES-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.16.27', 'ietf', 'v2', 'INTERFACETOPN-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.17', 'ietf', 'v2', 'IPATM-IPMC-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.57', 'ietf', 'v2', 'IPATM-IPMC-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.4.24', 'ietf', 'v2', 'IP-FORWARD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.4.24', 'ietf', 'v2', 'IP-FORWARD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.168', 'ietf', 'v2', 'IPMCAST-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.48', 'ietf', 'v2', 'IP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.48', 'ietf', 'v2', 'IP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.83', 'ietf', 'v2', 'IPMROUTE-STD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.46', 'ietf', 'v2', 'IPOA-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.141', 'ietf', 'v2', 'IPS-AUTH-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.153', 'ietf', 'v2', 'IPSEC-SPD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.103', 'ietf', 'v2', 'IPV6-FLOW-LABEL-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.56', 'ietf', 'v2', 'IPV6-ICMP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.55', 'ietf', 'v2', 'IPV6-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.91', 'ietf', 'v2', 'IPV6-MLD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.3.86', 'ietf', 'v2', 'IPV6-TCP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.3.87', 'ietf', 'v2', 'IPV6-UDP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.142', 'ietf', 'v2', 'ISCSI-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.20', 'ietf', 'v2', 'ISDN-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.138', 'ietf', 'v2', 'ISIS-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.163', 'ietf', 'v2', 'ISNS-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.121', 'ietf', 'v2', 'ITU-ALARM-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.120', 'ietf', 'v2', 'ITU-ALARM-TC-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.4.1.2699.1.1', 'ietf', 'v2', 'Job-Monitoring-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.95', 'ietf', 'v2', 'L2TP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.165', 'ietf', 'v2', 'LANGTAG-TC-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.227', 'ietf', 'v2', 'LMP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.227', 'ietf', 'v2', 'LMP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.101', 'ietf', 'v2', 'MALLOC-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.26.1', 'ietf', 'v1', 'MAU-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.26.6', 'ietf', 'v2', 'MAU-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.26.6', 'ietf', 'v2', 'MAU-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.26.6', 'ietf', 'v2', 'MAU-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.26.6', 'ietf', 'v2', 'MAU-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.171', 'ietf', 'v2', 'MIDCOM-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.38.1', 'ietf', 'v1', 'MIOX25-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.44', 'ietf', 'v2', 'MIP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.133', 'ietf', 'v2', 'MOBILEIPV6-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.38', 'ietf', 'v2', 'Modem-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.166.8', 'ietf', 'v2', 'MPLS-FTN-STD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.166.11', 'ietf', 'v2', 'MPLS-L3VPN-STD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.166.9', 'ietf', 'v2', 'MPLS-LC-ATM-STD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.166.10', 'ietf', 'v2', 'MPLS-LC-FR-STD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.166.5', 'ietf', 'v2', 'MPLS-LDP-ATM-STD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.166.6', 'ietf', 'v2', 'MPLS-LDP-FRAME-RELAY-STD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.166.7', 'ietf', 'v2', 'MPLS-LDP-GENERIC-STD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.4.1.9.10.65', 'ietf', 'v2', 'MPLS-LDP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.166.4', 'ietf', 'v2', 'MPLS-LDP-STD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.166.2', 'ietf', 'v2', 'MPLS-LSR-STD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.166.1', 'ietf', 'v2', 'MPLS-TC-STD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.166.3', 'ietf', 'v2', 'MPLS-TE-STD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.3.92', 'ietf', 'v2', 'MSDP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.28', 'ietf', 'v2', 'MTA-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.28', 'ietf', 'v2', 'MTA-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.28', 'ietf', 'v2', 'MTA-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.123', 'ietf', 'v2', 'NAT-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.27', 'ietf', 'v2', 'NETWORK-SERVICES-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.27', 'ietf', 'v2', 'NETWORK-SERVICES-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.71', 'ietf', 'v2', 'NHRP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.92', 'ietf', 'v2', 'NOTIFICATION-LOG-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.133', 'ietf', 'v2', 'OPT-IF-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.14', 'ietf', 'v2', 'OSPF-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.14', 'ietf', 'v2', 'OSPF-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.14.16', 'ietf', 'v2', 'OSPF-TRAP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.14.16', 'ietf', 'v2', 'OSPF-TRAP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.34', 'ietf', 'v2', 'PARALLEL-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.17.6', 'ietf', 'v2', 'P-BRIDGE-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.58', 'ietf', 'v2', 'PerfHist-TC-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.58', 'ietf', 'v2', 'PerfHist-TC-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.172', 'ietf', 'v2', 'PIM-BSR-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.3.61', 'ietf', 'v2', 'PIM-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.157', 'ietf', 'v2', 'PIM-STD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.93', 'ietf', 'v2', 'PINT-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.140', 'ietf', 'v2', 'PKTC-IETF-MTA-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.169', 'ietf', 'v2', 'PKTC-IETF-SIG-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.124', 'ietf', 'v2', 'POLICY-BASED-MANAGEMENT-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.105', 'ietf', 'v2', 'POWER-ETHERNET-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.23.4', 'ietf', 'v1', 'PPP-BRIDGE-NCP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.23.3', 'ietf', 'v1', 'PPP-IP-NCP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.23.1.1', 'ietf', 'v1', 'PPP-LCP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.23.2', 'ietf', 'v1', 'PPP-SEC-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.43', 'ietf', 'v2', 'Printer-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.43', 'ietf', 'v2', 'Printer-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.79', 'ietf', 'v2', 'PTOPO-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.17.7', 'ietf', 'v2', 'Q-BRIDGE-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.67.2.2', 'ietf', 'v2', 'RADIUS-ACC-CLIENT-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.67.2.2', 'ietf', 'v2', 'RADIUS-ACC-CLIENT-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.67.2.1', 'ietf', 'v2', 'RADIUS-ACC-SERVER-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.67.2.1', 'ietf', 'v2', 'RADIUS-ACC-SERVER-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.67.1.2', 'ietf', 'v2', 'RADIUS-AUTH-CLIENT-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.67.1.2', 'ietf', 'v2', 'RADIUS-AUTH-CLIENT-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.67.1.1', 'ietf', 'v2', 'RADIUS-AUTH-SERVER-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.67.1.1', 'ietf', 'v2', 'RADIUS-AUTH-SERVER-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.145', 'ietf', 'v2', 'RADIUS-DYNAUTH-CLIENT-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.146', 'ietf', 'v2', 'RADIUS-DYNAUTH-SERVER-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.16.31', 'ietf', 'v2', 'RAQMON-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.16.32', 'ietf', 'v2', 'RAQMON-RDS-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.39', 'ietf', 'v2', 'RDBMS-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.1', 'ietf', 'v1', 'RFC1066-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.1', 'ietf', 'v1', 'RFC1156-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.1', 'ietf', 'v1', 'RFC1158-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.1', 'ietf', 'v1', 'RFC1213-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.12', 'ietf', 'v1', 'RFC1229-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.3.7', 'ietf', 'v1', 'RFC1230-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.9', 'ietf', 'v1', 'RFC1231-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.3.2', 'ietf', 'v1', 'RFC1232-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.3.15', 'ietf', 'v1', 'RFC1233-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.13.1', 'ietf', 'v1', 'RFC1243-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.13.1', 'ietf', 'v1', 'RFC1248-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.13.1', 'ietf', 'v1', 'RFC1252-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.14.1', 'ietf', 'v1', 'RFC1253-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.15', 'ietf', 'v1', 'RFC1269-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.16.1', 'ietf', 'v1', 'RFC1271-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.7', 'ietf', 'v1', 'RFC1284-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.15.1', 'ietf', 'v1', 'RFC1285-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.17.1', 'ietf', 'v1', 'RFC1286-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.18.1', 'ietf', 'v1', 'RFC1289-phivMIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.31', 'ietf', 'v1', 'RFC1304-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.32', 'ietf', 'v1', 'RFC1315-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.19', 'ietf', 'v1', 'RFC1316-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.33', 'ietf', 'v1', 'RFC1317-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.34', 'ietf', 'v1', 'RFC1318-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.20.2', 'ietf', 'v1', 'RFC1353-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.4.24', 'ietf', 'v1', 'RFC1354-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.16', 'ietf', 'v1', 'RFC1381-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.5', 'ietf', 'v1', 'RFC1382-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.23.1', 'ietf', 'v1', 'RFC1389-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.7', 'ietf', 'v1', 'RFC1398-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.18', 'ietf', 'v1', 'RFC1406-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.30', 'ietf', 'v1', 'RFC1407-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.24.1', 'ietf', 'v1', 'RFC1414-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.23', 'ietf', 'v2', 'RIPv2-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.16', 'ietf', 'v2', 'RMON2-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.16', 'ietf', 'v2', 'RMON2-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.16.1', 'ietf', 'v1', 'RMON-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.16.20.8', 'ietf', 'v2', 'RMON-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.112', 'ietf', 'v2', 'ROHC-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.114', 'ietf', 'v2', 'ROHC-RTP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.113', 'ietf', 'v2', 'ROHC-UNCOMPRESSED-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.33', 'ietf', 'v2', 'RS-232-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.134', 'ietf', 'v2', 'RSTP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.51', 'ietf', 'v2', 'RSVP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.87', 'ietf', 'v2', 'RTP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.139', 'ietf', 'v2', 'SCSI-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.104', 'ietf', 'v2', 'SCTP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.4.1.4300.1', 'ietf', 'v2', 'SFLOW-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.149', 'ietf', 'v2', 'SIP-COMMON-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.36', 'ietf', 'v2', 'SIP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.151', 'ietf', 'v2', 'SIP-SERVER-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.148', 'ietf', 'v2', 'SIP-TC-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.150', 'ietf', 'v2', 'SIP-UA-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.3.88', 'ietf', 'v2', 'SLAPM-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.16.22', 'ietf', 'v2', 'SMON-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.4.1.4.4', 'ietf', 'v1', 'SMUX-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.34', 'ietf', 'v2', 'SNA-NAU-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.34', 'ietf', 'v2', 'SNA-NAU-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.41', 'ietf', 'v2', 'SNA-SDLC-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.18', 'ietf', 'v2', 'SNMP-COMMUNITY-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.18', 'ietf', 'v2', 'SNMP-COMMUNITY-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.10', 'ietf', 'v2', 'SNMP-FRAMEWORK-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.10', 'ietf', 'v2', 'SNMP-FRAMEWORK-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.10', 'ietf', 'v2', 'SNMP-FRAMEWORK-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.21', 'ietf', 'v2', 'SNMP-IEEE802-TM-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.11', 'ietf', 'v2', 'SNMP-MPD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.11', 'ietf', 'v2', 'SNMP-MPD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.11', 'ietf', 'v2', 'SNMP-MPD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.13', 'ietf', 'v2', 'SNMP-NOTIFICATION-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.13', 'ietf', 'v2', 'SNMP-NOTIFICATION-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.13', 'ietf', 'v2', 'SNMP-NOTIFICATION-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.14', 'ietf', 'v2', 'SNMP-PROXY-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.14', 'ietf', 'v2', 'SNMP-PROXY-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.14', 'ietf', 'v2', 'SNMP-PROXY-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.22.1.1', 'ietf', 'v1', 'SNMP-REPEATER-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.22.1.1', 'ietf', 'v1', 'SNMP-REPEATER-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.22.5', 'ietf', 'v2', 'SNMP-REPEATER-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.12', 'ietf', 'v2', 'SNMP-TARGET-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.12', 'ietf', 'v2', 'SNMP-TARGET-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.12', 'ietf', 'v2', 'SNMP-TARGET-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.15', 'ietf', 'v2', 'SNMP-USER-BASED-SM-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.15', 'ietf', 'v2', 'SNMP-USER-BASED-SM-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.15', 'ietf', 'v2', 'SNMP-USER-BASED-SM-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.20', 'ietf', 'v2', 'SNMP-USM-AES-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.3.101', 'ietf', 'v2', 'SNMP-USM-DH-OBJECTS-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.2', 'ietf', 'v2', 'SNMPv2-M2M-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.1', 'ietf', 'v2', 'SNMPv2-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.1', 'ietf', 'v2', 'SNMPv2-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.1', 'ietf', 'v2', 'SNMPv2-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.3', 'ietf', 'v2', 'SNMPv2-PARTY-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.6', 'ietf', 'v2', 'SNMPv2-USEC-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.16', 'ietf', 'v2', 'SNMP-VIEW-BASED-ACM-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.16', 'ietf', 'v2', 'SNMP-VIEW-BASED-ACM-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.6.3.16', 'ietf', 'v2', 'SNMP-VIEW-BASED-ACM-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.39', 'ietf', 'v2', 'SONET-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.39', 'ietf', 'v2', 'SONET-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.39', 'ietf', 'v2', 'SONET-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.17.3', 'ietf', 'v1', 'SOURCE-ROUTING-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.16.28', 'ietf', 'v2', 'SSPM-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.54', 'ietf', 'v2', 'SYSAPPL-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.137', 'ietf', 'v2', 'T11-FC-FABRIC-ADDR-MGR-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.162', 'ietf', 'v2', 'T11-FC-FABRIC-CONFIG-SERVER-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.159', 'ietf', 'v2', 'T11-FC-FABRIC-LOCK-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.143', 'ietf', 'v2', 'T11-FC-FSPF-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.135', 'ietf', 'v2', 'T11-FC-NAME-SERVER-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.144', 'ietf', 'v2', 'T11-FC-ROUTE-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.161', 'ietf', 'v2', 'T11-FC-RSCN-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.176', 'ietf', 'v2', 'T11-FC-SP-AUTHENTICATION-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.178', 'ietf', 'v2', 'T11-FC-SP-POLICY-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.179', 'ietf', 'v2', 'T11-FC-SP-SA-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.175', 'ietf', 'v2', 'T11-FC-SP-TC-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.177', 'ietf', 'v2', 'T11-FC-SP-ZONING-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.147', 'ietf', 'v2', 'T11-FC-VIRTUAL-FABRIC-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.160', 'ietf', 'v2', 'T11-FC-ZONE-SERVER-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.136', 'ietf', 'v2', 'T11-TC-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.156', 'ietf', 'v2', 'TCP-ESTATS-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.4.1.23.2.29.1', 'ietf', 'v1', 'TCPIPX-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.49', 'ietf', 'v2', 'TCP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.49', 'ietf', 'v2', 'TCP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.200', 'ietf', 'v2', 'TE-LINK-STD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.122', 'ietf', 'v2', 'TE-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.3.124', 'ietf', 'v2', 'TIME-AGGREGATE-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.34.8', 'ietf', 'v2', 'TN3270E-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.34.9', 'ietf', 'v2', 'TN3270E-RT-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.9', 'ietf', 'v2', 'TOKENRING-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.9', 'ietf', 'v2', 'TOKENRING-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.16.1', 'ietf', 'v1', 'TOKEN-RING-RMON-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.42', 'ietf', 'v2', 'TOKENRING-STATION-SR-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.16.30', 'ietf', 'v2', 'TPM-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.100', 'ietf', 'v2', 'TRANSPORT-ADDRESS-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.116', 'ietf', 'v2', 'TRIP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.115', 'ietf', 'v2', 'TRIP-TC-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.131', 'ietf', 'v2', 'TUNNEL-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.131', 'ietf', 'v2', 'TUNNEL-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.170', 'ietf', 'v2', 'UDPLITE-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.50', 'ietf', 'v2', 'UDP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.50', 'ietf', 'v2', 'UDP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.33', 'ietf', 'v2', 'UPS-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.164', 'ietf', 'v2', 'URI-TC-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.229', 'ietf', 'v2', 'VDSL-LINE-EXT-MCM-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.228', 'ietf', 'v2', 'VDSL-LINE-EXT-SCM-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.10.97', 'ietf', 'v2', 'VDSL-LINE-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.129', 'ietf', 'v2', 'VPN-TC-STD-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.68', 'ietf', 'v2', 'VRRP-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.2.1.65', 'ietf', 'v2', 'WWW-MIB']);
    push(@{$mibdepot}, ['1.3.6.1.4.1.8072', 'net-snmp', 'v2', 'NET-SNMP-MIB']);
    my $oids = $self->get_entries_by_walk(-varbindlist => [
        '1.3.6.1.2.1', '1.3.6.1.4.1',
    ]);
    foreach my $mibinfo (@{$mibdepot}) {
      next if $self->opts->protocol eq "1" && $mibinfo->[2] ne "v1";
      next if $self->opts->protocol ne "1" && $mibinfo->[2] eq "v1";
      $Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{$mibinfo->[3]} = $mibinfo->[0];
    }
    $Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'MIB-2-MIB'} = "1.3.6.1.2.1";
    foreach my $mib (keys %{$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids}) {
      if ($self->implements_mib($mib)) {
        push(@outputlist, [$mib, $Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{$mib}]);
        $unknowns = {@{[map {
            $_, $self->rawdata->{$_}
        } grep {
            substr($_, 0, length($Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{$mib})) ne
                $Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{$mib} || (
            substr($_, 0, length($Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{$mib})) eq
                $Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{$mib} &&
            substr($_, length($Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{$mib}), 1) ne ".")
        } keys %{$unknowns}]}};
      }
    }
    my $toplevels = {};
    map {
        /^(1\.3\.6\.1\.(\d+)\.(\d+)\.\d+\.\d+)\./; $toplevels->{$1} = 1; 
    } keys %{$unknowns};
    foreach (sort {$a cmp $b} keys %{$toplevels}) {
      push(@outputlist, ["<unknown>", $_]);
    }
    foreach (sort {$a->[0] cmp $b->[0]} @outputlist) {
      printf "implements %s %s\n", $_->[0], $_->[1];
    }
    $self->add_ok("have fun");
    my ($code, $message) = $self->check_messages(join => ', ', join_all => ', ');
    $Monitoring::GLPlugin::plugin->nagios_exit($code, $message);
  } elsif ($self->mode =~ /device::supportedoids/) {
    my $unknowns = {};
    %{$unknowns} = %{$self->rawdata};
    my $confirmed = {};
    foreach my $mib (keys %{$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids}) {
      foreach my $sym (keys %{$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}}) {
        if (my $obj = $self->get_snmp_object($mib, $sym)) {
          my $oid = $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$sym};
          if (exists $unknowns->{$oid}) {
            $confirmed->{$oid} = sprintf '%s::%s = %s', $mib, $sym, $obj;
            delete $unknowns->{$oid};
          } elsif (exists $unknowns->{$oid.'.0'}) {
            $confirmed->{$oid.'.0'} = sprintf '%s::%s = %s', $mib, $sym, $obj;
            delete $unknowns->{$oid.'.0'};
          }
        }
        if ($sym =~ /Table$/) {
          if (my @table = $self->get_snmp_table_objects($mib, $sym)) {
            my $oid = $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$sym};
            $confirmed->{$oid} = sprintf '%s::%s', $mib, $sym;
            $self->add_rawdata($oid, '--------------------');
            foreach my $line (@table) {
              if ($line->{flat_indices}) {
                foreach my $column (grep !/(flat_indices)|(indices)/, keys %{$line}) {
                  my $oid = $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$column};
                  if (exists $unknowns->{$oid.'.'.$line->{flat_indices}}) {
                    $confirmed->{$oid.'.'.$line->{flat_indices}} = 
                        sprintf '%s::%s.%s = %s', $mib, $column, $line->{flat_indices}, $line->{$column};
                    delete $unknowns->{$oid.'.'.$line->{flat_indices}};
                  }
                }
              }
            }
          }
        }
      }
    }
    my @sortedoids = $self->sort_oids([keys %{$self->rawdata}]);
    foreach (@sortedoids) {
      if (exists $confirmed->{$_}) {
        printf "%s\n", $confirmed->{$_};
      } else {
        printf "%s = %s\n", $_, $unknowns->{$_};
      }
    }
  }
}

sub check_snmp_and_model {
  my ($self) = @_;
  if ($self->opts->snmpwalk) {
    my $response = {};
    if (! -f $self->opts->snmpwalk) {
      $self->add_message(CRITICAL, 
          sprintf 'file %s not found',
          $self->opts->snmpwalk);
    } elsif (-x $self->opts->snmpwalk) {
      my $cmd = sprintf "%s -ObentU -v%s -c%s %s 1.3.6.1.4.1 2>&1",
          $self->opts->snmpwalk,
          $self->opts->protocol,
          $self->opts->community,
          $self->opts->hostname;
      open(WALK, "$cmd |");
      while (<WALK>) {
        if (/^([\.\d]+) = .*?: (\-*\d+)/) {
          $response->{$1} = $2;
        } elsif (/^([\.\d]+) = .*?: "(.*?)"/) {
          $response->{$1} = $2;
          $response->{$1} =~ s/\s+$//;
        }
      }
      close WALK;
    } else {
      if (defined $self->opts->offline && $self->opts->mode ne 'walk') {
        if ((time - (stat($self->opts->snmpwalk))[9]) > $self->opts->offline) {
          $self->add_message(UNKNOWN,
              sprintf 'snmpwalk file %s is too old', $self->opts->snmpwalk);
        }
      }
      $self->opts->override_opt('hostname', 'walkhost') if $self->opts->mode ne 'walk';
      open(MESS, $self->opts->snmpwalk);
      while(<MESS>) {
        # SNMPv2-SMI::enterprises.232.6.2.6.7.1.3.1.4 = INTEGER: 6
        if (/^([\d\.]+) = .*?INTEGER: .*\((\-*\d+)\)/) {
          # .1.3.6.1.2.1.2.2.1.8.1 = INTEGER: down(2)
          $response->{$1} = $2;
        } elsif (/^([\d\.]+) = .*?Opaque:.*?Float:.*?([\-\.\d]+)/) {
          # .1.3.6.1.4.1.2021.10.1.6.1 = Opaque: Float: 0.938965
          $response->{$1} = $2;
        } elsif (/^([\d\.]+) = STRING:\s*$/) {
          $response->{$1} = "";
        } elsif (/^([\d\.]+) = Network Address: (.*)/) {
          $response->{$1} = $2;
        } elsif (/^([\d\.]+) = Hex-STRING: (.*)/) {
          my $k = $1;
          my $h = $2;
          $h =~ s/\s+//g;
          $response->{$k} = pack('H*', $h);
        } elsif (/^([\d\.]+) = \w+: (\-*\d+)\s*$/) {
          $response->{$1} = $2;
        } elsif (/^([\d\.]+) = \w+: "(.*?)"/) {
          $response->{$1} = $2;
          $response->{$1} =~ s/\s+$//;
        } elsif (/^([\d\.]+) = \w+: (.*)/) {
          $response->{$1} = $2;
          $response->{$1} =~ s/\s+$//;
        } elsif (/^([\d\.]+) = (\-*\d+)/) {
          $response->{$1} = $2;
        } elsif (/^([\d\.]+) = "(.*?)"/) {
          $response->{$1} = $2;
          $response->{$1} =~ s/\s+$//;
        }
      }
      close MESS;
    }
    foreach my $oid (keys %$response) {
      if ($oid =~ /^\./) {
        my $nodot = $oid;
        $nodot =~ s/^\.//g;
        $response->{$nodot} = $response->{$oid};
        delete $response->{$oid};
      }
    }
    map { $response->{$_} =~ s/^\s+//; $response->{$_} =~ s/\s+$//; }
        keys %$response;
    $self->set_rawdata($response);
  } else {
    $self->establish_snmp_session();
  }
  if (! $self->check_messages()) {
    my $tic = time;
    # Datatype TimeTicks = 1/100s
    my $sysUptime = $self->get_snmp_object('MIB-2-MIB', 'sysUpTime', 0);
    # Datatype Integer32 = 1s
    my $snmpEngineTime = $self->get_snmp_object('SNMP-FRAMEWORK-MIB', 'snmpEngineTime');
    # Datatype TimeTicks = 1/100s
    my $hrSystemUptime = $self->get_snmp_object_maybe('HOST-RESOURCES-MIB', 'hrSystemUptime');
    my $sysDescr = $self->get_snmp_object('MIB-2-MIB', 'sysDescr', 0);
    my $tac = time;
    if (defined $hrSystemUptime && $hrSystemUptime =~ /^\d+$/ && $hrSystemUptime > 0) {
      $hrSystemUptime = $self->timeticks($hrSystemUptime);
      $self->debug(sprintf 'hrSystemUptime says: up since: %s / %s',
          scalar localtime (time -  $hrSystemUptime),
          $self->human_timeticks($hrSystemUptime));
    } else {
      $hrSystemUptime = undef;
    }
    if (defined $snmpEngineTime && $snmpEngineTime =~ /^\d+$/ && $snmpEngineTime > 0) {
      $snmpEngineTime = $snmpEngineTime;
      $self->debug(sprintf 'snmpEngineTime says: up since: %s / %s',
          scalar localtime (time - $snmpEngineTime),
          $self->human_timeticks($snmpEngineTime));
    } else {
      # drecksschrott asa liefert negative werte
      # und drecksschrott socomec liefert: wrong type (should be INTEGER): NULL
      $snmpEngineTime = undef;
    }
    if (defined $sysUptime) {
      $sysUptime = $self->timeticks($sysUptime);
      $self->debug(sprintf 'sysUptime says:      up since: %s / %s',
          scalar localtime (time - $sysUptime),
          $self->human_timeticks($sysUptime));
    }
    if (defined $sysUptime && defined $sysDescr) {
      if ($hrSystemUptime) {
        # Bei Linux-basierten Geraeten wird snmpEngineTime viel zu haeufig
        # durchgestartet, also lieber das hier.
        $self->{uptime} = $hrSystemUptime;
        # Es sei denn, snmpEngineTime ist tatsaechlich groesser, dann gilt
        # wiederum dieses. Mag sein, dass der zahlenwert hier manchmal huepft
        # und ein Performancegraph Zacken bekommt, aber das ist mir egal.
        # es geht nicht um Graphen in Form einer ansteigenden Geraden, sondern
        # um das Erkennen von spontanen Reboots und das Vermeiden von
        # falschen Alarmen.
        if ($snmpEngineTime && $snmpEngineTime > $hrSystemUptime) {
          $self->{uptime} = $snmpEngineTime;
        }
      } elsif ($snmpEngineTime) {
        $self->{uptime} = $snmpEngineTime;
      } else {
        $self->{uptime} = $sysUptime;
      }
      $self->{productname} = $sysDescr;
      $self->{sysobjectid} = $self->get_snmp_object('MIB-2-MIB', 'sysObjectID', 0);
      $self->debug(sprintf 'uptime: %s', $self->{uptime});
      $self->debug(sprintf 'up since: %s',
          scalar localtime (time - $self->{uptime}));
      $Monitoring::GLPlugin::SNMP::uptime = $self->{uptime};
      $self->debug('whoami: '.$self->{productname});
    } else {
      if ($tac - $tic >= ($Monitoring::GLPlugin::SNMP::session ?
          $Monitoring::GLPlugin::SNMP::session->timeout : $self->opts->timeout())) {
        $self->add_message(UNKNOWN,
            'could not contact snmp agent, timeout during snmp-get sysUptime');
      } elsif ($self->{broken_snmp_agent}) {
        # plugins may add an array of subroutines to their Classes::Device.
        # For example, check_tl_health has to deal with IBM libraries, which
        # do not show sysUptime nor sysDescr nor any other uptime oids.
        # In order to let the plugin continue with a fake uptime, one of
        # the broken_snmp_agent subroutines must return a true value after it
        # has set the uptime to 1 hour and filled out $self->{productname}
        my $mein_lieber_freund_und_kupferstecher = 0;
        foreach my $kriegst_du_die_kurve (@{$self->{broken_snmp_agent}}) {
          if (&$kriegst_du_die_kurve()) {
            $mein_lieber_freund_und_kupferstecher = 1;
            $self->debug(sprintf 'uptime: %s', $self->{uptime});
            $self->debug(sprintf 'up since: %s',
                scalar localtime (time - $self->{uptime}));
            $Monitoring::GLPlugin::SNMP::uptime = $self->{uptime};
            $self->debug('whoami: '.$self->{productname});
            last;
          }
        }
        if (! $mein_lieber_freund_und_kupferstecher) {
          $self->add_message(UNKNOWN,
              'got neither sysUptime nor sysDescr nor any other useful information, is this snmp agent working correctly?');
        }
      } else {
        $self->add_message(UNKNOWN,
            'got neither sysUptime nor sysDescr, is this snmp agent working correctly?');
      }
      $Monitoring::GLPlugin::SNMP::session->close if $Monitoring::GLPlugin::SNMP::session;
    }
  }
}

sub pretty_sysdesc {
  my ($self, $sysDesc) = @_;
  my $prettySysDescription = undef;
  if (exists $self->{classified_as}) {
    my $now_class = ref($self);
    my $now_pretty_sysdesc = $self->can("pretty_sysdesc");
    bless $self, $self->{classified_as};
    my $classified_pretty_sysdesc = $self->can("pretty_sysdesc");
    if ($now_pretty_sysdesc && $classified_pretty_sysdesc && $now_pretty_sysdesc ne $classified_pretty_sysdesc) {
      $prettySysDescription = $self->pretty_sysdesc($sysDesc);
    } elsif (! $now_pretty_sysdesc && $classified_pretty_sysdesc) {
      $prettySysDescription = $self->pretty_sysdesc($sysDesc);
    }
    bless $self, $now_class;
  }
  return $prettySysDescription ? $prettySysDescription : $sysDesc;
}

sub establish_snmp_session {
  my ($self) = @_;
  $self->set_timeout_alarm();
  if (eval "require Net::SNMP") {
    my %params = ();
    my $net_snmp_version = Net::SNMP->VERSION(); # 5.002000 or 6.000000
    $params{'-translate'} = [ # because we see "NULL" coming from socomec devices
      -all => 0x0,
      -nosuchobject => 1,
      -nosuchinstance => 1,
      -endofmibview => 1,
      -unsigned => 1,
    ];
    $params{'-hostname'} = $self->opts->hostname;
    $params{'-version'} = $self->opts->protocol;
    if ($self->opts->port) {
      $params{'-port'} = $self->opts->port;
    }
    if ($self->opts->domain) {
      $params{'-domain'} = $self->opts->domain;
    }
    $self->v2tov3;
    if ($self->opts->protocol eq '3') {
      $params{'-version'} = $self->opts->protocol;
      $params{'-username'} = $self->opts->username;
      if ($self->opts->authpassword) {
        $params{'-authpassword'} = $self->opts->authpassword;
      }
      if ($self->opts->authprotocol) {
        $params{'-authprotocol'} = $self->opts->authprotocol;
      }
      if ($self->opts->privpassword) {
        $params{'-privpassword'} = $self->opts->privpassword;
      }
      if ($self->opts->privprotocol) {
        $params{'-privprotocol'} = $self->opts->privprotocol;
      }
      # context hat in der session nix verloren, sondern wird
      # als zusatzinfo bei den requests mitgeschickt
      #if ($self->opts->contextengineid) {
      #  $params{'-contextengineid'} = $self->opts->contextengineid;
      #}
      #if ($self->opts->contextname) {
      #  $params{'-contextname'} = $self->opts->contextname;
      #}
    } else {
      $params{'-community'} = $self->opts->community;
    }
    # breaks cisco wlc. at least with 15, wlc did not work.
    # removing this at all may cause strange epn errors. As if only
    # certain oids were returned as undef, others not.
    # next try: 50
    $params{'-timeout'} = $self->opts->timeout() >= 60 ?
        50 : $self->opts->timeout() - 2;
    my $stderrvar = "";
    *SAVEERR = *STDERR;
    open ERR ,'>',\$stderrvar;
    *STDERR = *ERR;
    my ($session, $error) = Net::SNMP->session(%params);
    *STDERR = *SAVEERR;
    if ($stderrvar && $error && $error =~ /Time synchronization failed/) {
      # This is what you get when you have
      # - an APC ups with a buggy firmware.
      # - no chance to update it.
      # - a support contract.
      no strict 'refs';
      no warnings 'redefine';
      *{'Net::SNMP::_discovery_synchronization_cb'} = sub {
        my ($this) = @_;
        if ($this->{_security}->discovered())
        {
          $this->_error_clear();
          return $this->_discovery_complete();
        }
        return $this->_discovery_failed();
      };
      ($session, $error) = Net::SNMP->session(%params);
    }
    if (! defined $session) {
      $self->add_message(CRITICAL, 
          sprintf 'cannot create session object: %s', $error);
      $self->debug(Data::Dumper::Dumper(\%params));
    } else {
      my $max_msg_size = $session->max_msg_size();
      #$session->max_msg_size(4 * $max_msg_size);
      $Monitoring::GLPlugin::SNMP::max_msg_size = $max_msg_size;
      $Monitoring::GLPlugin::SNMP::session = $session;
    }
  } else {
    $self->add_message(CRITICAL,
        'could not find Net::SNMP module');
  }
}

sub session_translate {
  my ($self, $translation) = @_;
  $Monitoring::GLPlugin::SNMP::session->translate($translation) if
      $Monitoring::GLPlugin::SNMP::session;
}

sub establish_snmp_secondary_session {
  my ($self) = @_;
  if ($self->opts->protocol eq '3' &&
      $self->opts->can('authprotocol2') && (
      defined $self->opts->authprotocol2 ||
      defined $self->opts->authpassword2 ||
      defined $self->opts->privprotocol2 ||
      defined $self->opts->privpassword2 ||
      defined $self->opts->username2 ||
      defined $self->opts->contextengineid2 ||
      defined $self->opts->contextname2
  )) {
    my $relogin = 0;
    # bei --community2="snmpv3,..." wurde alles in xyz2 per override gesteckt
    $relogin = 1 if ! $self->strequal($self->opts->authprotocol,
        $self->opts->authprotocol2);
    $relogin = 1 if ! $self->strequal($self->opts->authpassword,
        $self->opts->authpassword2);
    $relogin = 1 if ! $self->strequal($self->opts->privprotocol,
        $self->opts->privprotocol2);
    $relogin = 1 if ! $self->strequal($self->opts->privpassword,
        $self->opts->privpassword2);
    $relogin = 1 if ! $self->strequal($self->opts->username,
        $self->opts->username2);
    if ($relogin) {
      $Monitoring::GLPlugin::SNMP::session = undef;
      $self->opts->override_opt('authprotocol',
          $self->opts->authprotocol2);
      $self->opts->override_opt('authpassword',
          $self->opts->authpassword2);
      $self->opts->override_opt('privprotocol',
          $self->opts->privprotocol2);
      $self->opts->override_opt('privpassword',
          $self->opts->privpassword2);
      $self->opts->override_opt('username',
          $self->opts->username2);
      $self->establish_snmp_session;
    }
    $self->opts->override_opt('contextengineid',
        $self->opts->contextengineid2);
    $self->opts->override_opt('contextname',
        $self->opts->contextname2);
    return 1;
  } else {
    if (defined $self->opts->community2 &&
        $self->opts->community2 ne
        $self->opts->community) {
      $Monitoring::GLPlugin::SNMP::session = undef;
      $self->opts->override_opt('community',
          $self->opts->community2) ;
      $self->establish_snmp_session;
      return 1;
    }
  }
  return 0;
}

sub reset_snmp_max_msg_size {
  my ($self) = @_;
  $self->debug(sprintf "reset snmp_max_msg_size to %s",
      $Monitoring::GLPlugin::SNMP::max_msg_size);
  $Monitoring::GLPlugin::SNMP::session->max_msg_size($Monitoring::GLPlugin::SNMP::max_msg_size) if $Monitoring::GLPlugin::SNMP::session;
}

sub mult_snmp_max_msg_size {
  my ($self, $factor) = @_;
  $factor ||= 10;
  $self->debug(sprintf "raise snmp_max_msg_size %d * %d", 
      $factor, $Monitoring::GLPlugin::SNMP::session->max_msg_size()) if $Monitoring::GLPlugin::SNMP::session;
  $Monitoring::GLPlugin::SNMP::session->max_msg_size($factor * $Monitoring::GLPlugin::SNMP::session->max_msg_size()) if $Monitoring::GLPlugin::SNMP::session;
}

sub no_such_model {
  my ($self) = @_;
  printf "Model %s is not implemented\n", $self->{productname};
  exit 3;
}

sub no_such_mode {
  my ($self) = @_;
  if (ref($self) eq "Classes::Generic") {
    $self->init();
  } elsif (ref($self) eq "Classes::Device") {
    $self->add_message(UNKNOWN, 'the device did not implement the mibs this plugin is asking for');
    $self->add_message(UNKNOWN,
        sprintf('unknown device%s', $self->{productname} eq 'unknown' ?
            '' : '('.$self->{productname}.')'));
  } elsif (ref($self) eq "Monitoring::GLPlugin::SNMP") {
    # uptime, offline
    $self->init();
  } else {
    eval {
      bless $self, "Classes::Generic";
      $self->init();
    };
    if ($@) {
      bless $self, "Monitoring::GLPlugin::SNMP";
      $self->init();
    }
  }
  if (ref($self) eq "Monitoring::GLPlugin::SNMP") {
    printf "Mode %s is not implemented for this type of device\n",
        $self->opts->mode;
    exit 3;
  }
}

sub uptime {
  my ($self) = @_;
  return $Monitoring::GLPlugin::SNMP::uptime;
}

sub ago_sysuptime {
  my ($self, $eventtime) = @_;
  # if there is an oid containing the value of sysUptime at the time of
  # a certain event (e.g. cipSecFailTime), this method returns the
  # time in seconds that has passed since the event.
  # sysUptime overflows at 2**32, so it is possible that the eventtime is
  # bigger than sysUptime
  # the eventtime value must come as 1/100s, do not normalize it before.
  #
  # 0-----------------|---------------X
  #                   event=2Mio      sysUptime=5.5Mio
  # event happened (5.5Mio - 2Mio) seconds ago
  #
  # 0-----------------|---------------2**32/0-----------X
  #                   event=2Mio                        sysUptime=100k
  #
  # event happened (100k + (2**32 - 2Mio)) seconds ago
  #
  my $sysUptime = $self->get_snmp_object('MIB-2-MIB', 'sysUpTime', 0);
  if ($eventtime > $sysUptime) {
    return ($sysUptime + (2**32 - $eventtime)) / 100;
  } else {
    return ($sysUptime - $eventtime) / 100;
  }
}

sub map_oid_to_class {
  my ($self, $oid, $class) = @_;
  $Monitoring::GLPlugin::SNMP::MibsAndOids::discover_ids->{$oid} = $class;
}

sub discover_suitable_class {
  my ($self) = @_;
  my $sysobj = $self->get_snmp_object('MIB-2-MIB', 'sysObjectID', 0);
  $sysobj =~ s/^\.//g;
  foreach my $oid (keys %{$Monitoring::GLPlugin::SNMP::MibsAndOids::discover_ids}) {
    if ($sysobj && $oid eq $sysobj) {
      return $Monitoring::GLPlugin::SNMP::MibsAndOids::discover_ids->{$sysobj};
    }
  }
}

sub require_mib {
  my ($self, $mib) = @_;
  my $package = uc $mib;
  $package =~ s/-//g;
  if (exists $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib} ||
      exists $Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{$mib}) {
    $self->debug("i know package "."Monitoring::GLPlugin::SNMP::MibsAndOids::".$package);
    return;
  } else {
    eval {
      my @oldkeys = ();
      $self->set_variable("verbosity", 2);
      if ($self->get_variable("verbose")) {
        my @oldkeys = exists $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib} ?
            keys %{$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids} : 0;
      }
      $self->debug("load mib "."Monitoring::GLPlugin::SNMP::MibsAndOids::".$package);
      load "Monitoring::GLPlugin::SNMP::MibsAndOids::".$package;
      if ($self->get_variable("verbose")) {
        my @newkeys = exists $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib} ?
            keys %{$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids} : 0;
        $self->debug(sprintf "now i know: %s", join(" ", sort @newkeys));
        $self->debug(sprintf "now i know %d keys.", scalar(@newkeys));
        if (scalar(@newkeys) <= scalar(@oldkeys)) {
          $self->debug(sprintf "from %d to %d keys. why did we load?",
              scalar(@oldkeys), scalar(@newkeys));
        }
      }
    };
    if ($@) {
      $self->debug("failed to load "."Monitoring::GLPlugin::SNMP::MibsAndOids::".$package);
    } else {
      if (exists $Monitoring::GLPlugin::SNMP::MibsAndOids::requirements->{$mib}) {
        foreach my $submib (@{$Monitoring::GLPlugin::SNMP::MibsAndOids::requirements->{$mib}}) {
          $self->require_mib($submib);
        }
      }
    }
  }
}

sub implements_mib {
  my ($self, $mib, $table) = @_;
  $self->require_mib($mib);
  if (! exists $Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{$mib}) {
    return 0;
  }
  if (! $table) {
    my $sysobj = $self->get_snmp_object('MIB-2-MIB', 'sysObjectID', 0);
    $sysobj =~ s/^\.// if $sysobj;
    if ($sysobj && $sysobj eq $Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{$mib}) {
      $self->debug(sprintf "implements %s (sysobj exact)", $mib);
      return 1;
    }
    if ($sysobj && $Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{$mib} eq
        substr $sysobj, 0, length $Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{$mib}) {
      $self->debug(sprintf "implements %s (sysobj)", $mib);
      return 1;
    }
  }

  my $check_oid = $table ?
      $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$table} :
      $Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{$mib};

  # some mibs are only composed of tables
  my $traces;
  if ($self->opts->snmpwalk) {
    my @matches;
    # exact match  
    push(@matches, @{[map {
        $_, $self->rawdata->{$_}
    } grep {
        $_ eq $check_oid
    } keys %{$self->rawdata}]});

    # partial match (add trailing dot)  
    $check_oid =~ s/\.?$/./;
    push(@matches, @{[map {
        $_, $self->rawdata->{$_}
    } grep {
        substr($_, 0, length($check_oid)) eq $check_oid
    } keys %{$self->rawdata}]});
    $traces = {@matches};
  } else {
    my %params = (
        -varbindlist => [
            $check_oid
        ]
    );
    if ($Monitoring::GLPlugin::SNMP::session->version() == 3) {
      $params{-contextengineid} = $self->opts->contextengineid if $self->opts->contextengineid;
      $params{-contextname} = $self->opts->contextname if $self->opts->contextname;
    }
    $traces = $Monitoring::GLPlugin::SNMP::session->get_next_request(%params);
  }
  if ($traces && # must find oids following to the ident-oid
      ! exists $traces->{$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{$mib}} && # must not be the ident-oid
      grep { # following oid is inside this tree
          substr($_, 0, length($check_oid)) eq $check_oid
      } keys %{$traces}) {
    $self->debug(sprintf "implements %s (found traces)", $mib);
    return 1;
  }
}

sub timeticks {
  my ($self, $timestr) = @_;
  if ($timestr =~ /\((\d+)\)/) {
    # Timeticks: (20718727) 2 days, 9:33:07.27
    $timestr = $1 / 100;
  } elsif ($timestr =~ /(\d+)\s*day[s]*.*?(\d+):(\d+):(\d+)\.(\d+)/) {
    # Timeticks: 2 days, 9:33:07.27
    $timestr = $1 * 24 * 3600 + $2 * 3600 + $3 * 60 + $4;
  } elsif ($timestr =~ /(\d+):(\d+):(\d+):(\d+)\.(\d+)/) {
    # Timeticks: 0001:03:18:42.77
    $timestr = $1 * 3600 * 24 + $2 * 3600 + $3 * 60 + $4;
  } elsif ($timestr =~ /(\d+):(\d+):(\d+)\.(\d+)/) {
    # Timeticks: 9:33:07.27
    $timestr = $1 * 3600 + $2 * 60 + $3;
  } elsif ($timestr =~ /(\d+)\s*hour[s]*.*?(\d+):(\d+)\.(\d+)/) {
    # Timeticks: 3 hours, 42:17.98
    $timestr = $1 * 3600 + $2 * 60 + $3;
  } elsif ($timestr =~ /(\d+)\s*minute[s]*.*?(\d+)\.(\d+)/) {
    # Timeticks: 36 minutes, 01.96
    $timestr = $1 * 60 + $2;
  } elsif ($timestr =~ /(\d+)\.\d+\s*second[s]/) {
    # Timeticks: 01.02 seconds
    $timestr = $1;
  } elsif ($timestr =~ /^(\d+)$/) {
    $timestr = $1 / 100;
  }
  return $timestr;
}

sub human_timeticks {
  my ($self, $timeticks) = @_;
  my $days = int($timeticks / 86400);
  $timeticks -= ($days * 86400);
  my $hours = int($timeticks / 3600);
  $timeticks -= ($hours * 3600);
  my $minutes = int($timeticks / 60);
  my $seconds = $timeticks % 60;
  $days = $days < 1 ? '' : $days .'d ';
  return $days . sprintf "%dh %dm %ds", $hours, $minutes, $seconds;
}

sub internal_name {
  my ($self) = @_;
  my $class = ref($self);
  $class =~ s/^.*:://;
  if (exists $self->{flat_indices}) {
    return sprintf "%s_%s", uc $class, $self->{flat_indices};
  } else {
    return sprintf "%s", uc $class;
  }
}

################################################################
# file-related functions
#
sub create_interface_cache_file {
  my ($self) = @_;
  my $extension = "";
  if ($self->opts->snmpwalk && ! $self->opts->hostname) {
    $self->opts->override_opt('hostname',
        'snmpwalk.file'.md5_hex($self->opts->snmpwalk))
  }
  if ($self->opts->contextname) {
    $extension .= $self->opts->contextname . '_';
  }
  if ($self->opts->community) { 
    $extension .= md5_hex($self->opts->community);
  }
  $extension =~ s/\//_/g;
  $extension =~ s/\(/_/g;
  $extension =~ s/\)/_/g;
  $extension =~ s/\*/_/g;
  $extension =~ s/\s/_/g;
  return sprintf "%s/%s_interface_cache_%s", $self->statefilesdir(),
      $self->opts->hostname, lc $extension;
}

sub create_entry_cache_file {
  my ($self, $mib, $table, $key_attr_id) = @_;
  return lc sprintf "%s_%s_%s_%s_cache",
      $self->create_interface_cache_file(),
      $mib, $table, $key_attr_id;
}

sub update_entry_cache {
  my ($self, $force, $mib, $table, $key_attrs, $last_change) = @_;
  $self->debug(sprintf "last change of %s::%s was %s",
      $mib, $table, scalar localtime $last_change) if $last_change;
  my $update_deadline = time - 3600;
  if ($last_change) {
    # epoch timestamp, which is a hint when some table was last updated
    $update_deadline = ($last_change + 60)
        if $last_change > $update_deadline;
  }
  my $must_update = 0;
  if (ref($key_attrs) ne "ARRAY") {
    if ($key_attrs eq 'flat_indices') {
      # wird nur 1x verwendet bisher, bei OLD-CISCO-INTERFACES-MIB etherstats
      #my $entry = $table =~ s/Table/Entry/gr; # zu neu fuer centos6
      my $entry = $table;
      $entry =~ s/Table/Entry/g;
      my @sortednames = map {
          $_->[0]
      } sort {
          $a->[1] cmp $b->[1]
      } map {
          [$_, join '', map {
              sprintf("%30d", $_)
          } split( /\./, $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$_})];
      } grep {
          $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$_} =~ /^$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$entry}\./;
      } keys %{$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}};
      $key_attrs = $sortednames[0];
    }
    $key_attrs = [$key_attrs];
  }
  my $key_attr_id = join('#', @{$key_attrs});
  my $cache = sprintf "%s_%s_%s_cache", $mib, $table, $key_attr_id;
  my $statefile = $self->create_entry_cache_file($mib, $table, $key_attr_id);
  if ($force == -1 && -f $statefile) {
    $must_update = 1;
    # brauchts unter keinen umstaenden.
    # z.b. wenn ein vorhergehender update_interfaces_cache keine aenderungen
    # angezeigt hat, dann spart man sich hier den etherlike-update o.ae.
    $self->debug(sprintf 'skip update of %s %s %s %s cache',
        $self->opts->hostname, $self->opts->mode, $mib, $table);
  } elsif ($force != 0 || ! -f $statefile || ((stat $statefile)[9]) < ($update_deadline)) {
    $must_update = 1;
    $self->debug(sprintf 'force update of %s %s %s %s cache',
        $self->opts->hostname, $self->opts->mode, $mib, $table);
    $self->{$cache} = {};
    foreach my $entry ($self->get_snmp_table_objects($mib, $table, undef, $key_attrs)) {
      my $key = join('#', map { $entry->{$_} } @{$key_attrs});
      my $hash = $key . '-//-' . join('.', @{$entry->{indices}});
      $self->{$cache}->{$hash} = $entry->{indices};
    }
    $self->save_cache($mib, $table, $key_attrs);
  }
  $self->load_cache($mib, $table, $key_attrs);
  return $must_update;
}

sub save_cache {
  my ($self, $mib, $table, $key_attrs) = @_;
  my $cache = sprintf "%s_%s_%s_cache", $mib, $table, join('#', @{$key_attrs});
  $self->create_statefilesdir();
  my $statefile = $self->create_entry_cache_file($mib, $table, join('#', @{$key_attrs}));
  my $tmpfile = $statefile.$$.rand();
  open(STATE, ">".$tmpfile);
  printf STATE Data::Dumper::Dumper($self->{$cache});
  close STATE;
  rename $tmpfile, $statefile;
  $self->debug(sprintf "saved %s to %s",
      Data::Dumper::Dumper($self->{$cache}), $statefile);
}

sub load_cache {
  my ($self, $mib, $table, $key_attrs) = @_;
  my $cache = sprintf "%s_%s_%s_cache", $mib, $table, join('#', @{$key_attrs});
  my $statefile = $self->create_entry_cache_file($mib, $table, join('#', @{$key_attrs}));
  $self->{$cache} = {};
  if ( -f $statefile) {
    our $VAR1;
    our $VAR2;
    eval {
      require $statefile;
    };
    if($@) {
      printf "FATAL: Could not load cache!\n";
    }
    # keinesfalls mehr require verwenden!!!!!!
    # beim require enthaelt VAR1 andere werte als beim slurp
    # und zwar diejenigen, die beim letzten save_cache geschrieben wurden.
    my $content = do { local (@ARGV, $/) = $statefile; my $x = <>; close ARGV; $x };
    $VAR1 = eval "$content";
    $self->debug(sprintf "load %s", Data::Dumper::Dumper($VAR1));
    $self->{$cache} = $VAR1;
  }
}


################################################################
# top-level convenience functions
#
sub get_snmp_objects {
  my ($self, $mib, @mos) = @_;
  foreach (@mos) {
    my $value = $self->get_snmp_object($mib, $_);
    if (defined $value) {
      $self->{$_} = $value;
    }
  }
}

sub get_snmp_tables {
  my ($self, $mib, $infos) = @_;
  foreach my $info (@{$infos}) {
    my $arrayname = $info->[0];
    my $table = $info->[1];
    my $class = $info->[2];
    my $filter = $info->[3];
    my $rows = $info->[4];
    my $key_attr = $info->[5];
    $self->{$arrayname} = [] if ! exists $self->{$arrayname};
    if (! exists $Monitoring::GLPlugin::SNMP::tablecache->{$mib} || ! exists $Monitoring::GLPlugin::SNMP::tablecache->{$mib}->{$table}) {
      $Monitoring::GLPlugin::SNMP::tablecache->{$mib}->{$table} = [];
      foreach ($key_attr ?
          $self->get_snmp_table_objects_with_cache($mib, $table, $key_attr, $rows) :
          $self->get_snmp_table_objects($mib, $table, undef, $rows)) {
        push(@{$Monitoring::GLPlugin::SNMP::tablecache->{$mib}->{$table}}, $_);
        my $new_object = $class->new(%{$_});
        next if (defined $filter && ! &$filter($new_object));
        push(@{$self->{$arrayname}}, $new_object);
      }
    } else {
      $self->debug(sprintf "get_snmp_tables %s %s cache hit", $mib, $table);
      foreach (@{$Monitoring::GLPlugin::SNMP::tablecache->{$mib}->{$table}}) {
        my $new_object = $class->new(%{$_});
        next if (defined $filter && ! &$filter($new_object));
        push(@{$self->{$arrayname}}, $new_object);
      }
    }
  }
}

sub merge_tables {
  my ($self, $into, @from) = @_;
  my $into_indices = {};
  map { $into_indices->{$_->{flat_indices}} = $_ } @{$self->{$into}};
  foreach (@from) {
    foreach my $element (@{$self->{$_}}) {
      if (exists $into_indices->{$element->{flat_indices}}) {
        foreach my $key (keys %{$element}) {
          $into_indices->{$element->{flat_indices}}->{$key} = $element->{$key};
        }
      }
    }
    delete $self->{$_};
  }
}

sub merge_tables_with_code {
  my ($self, $into, @from) = @_;
  my $into_indices = {};
  my @to_del = ();
  foreach my $into_elem (@{$self->{$into}}) {
    for (my $i = 0; $i < @from; $i += 2) {
      my ($from_elems, $func) = @from[$i, $i+1];
      foreach my $from_elem (@{$self->{$from_elems}}) {
        if (&$func($into_elem, $from_elem)) {
          foreach my $key (grep !/^(info|trace|warning|critical|blacklisted|extendedinfo|flat_indices|indices)/, sort keys %{$from_elem}) {
            $into_elem->{$key} = $from_elem->{$key};
          }
        }
      }
    }
  }
  for (my $i = 0; $i < @from; $i += 2) {
    my ($from_elems, $func) = @from[$i, $i+1];
    delete $self->{$from_elems};
  }
}

sub mibs_and_oids_definition {
  my ($self, $mib, $definition, @values) = @_;
  if (exists $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib} &&
      exists $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition}) {
    if (ref($Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition}) eq "CODE") {
      return $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition}->(@values);
    } elsif (ref($Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition}) eq "HASH") {
      return $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition}->{$values[0]};
    }
  } else {
    return "unknown_".$definition;
  }
}

sub clear_table_cache {
  my ($self, $mib, $table) = @_;
  if ($table && exists $Monitoring::GLPlugin::SNMP::tablecache->{$mib}) {
    delete $Monitoring::GLPlugin::SNMP::tablecache->{$mib}->{$table};
  } elsif ($mib) {
    delete $Monitoring::GLPlugin::SNMP::tablecache->{$mib};
  } else {
    $Monitoring::GLPlugin::SNMP::tablecache = {};
  }
}

################################################################
# 2nd level 
#
sub get_snmp_object {
  my ($self, $mib, $mo, $index) = @_;
  $self->require_mib($mib);
  my $oid = $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$mo};
  if (defined $oid) {
    my $qoid = $oid.(defined $index ? '.'.$index : '');
    my $response = $self->get_request(-varbindlist => [$qoid]);
    if (defined $response->{$qoid}) {
      if ($response->{$qoid} eq 'noSuchInstance' || $response->{$qoid} eq 'noSuchObject') {
        $response->{$qoid} = undef;
      } elsif (my @symbols = $self->make_symbolic($mib, $response, [[$index]], { $oid => $mo })) {
        $response->{$oid} = $symbols[0]->{$mo};
      }
    }
    $self->debug(sprintf "GET: %s::%s (%s) : %s", $mib, $mo, $oid, defined $response->{$oid} ? $response->{$oid} : "<undef>");
    if (! defined $response->{$oid} && ! defined $index) {
      return $self->get_snmp_object($mib, $mo, 0);
    }
    return $response->{$oid};
  }
  return undef;
}

sub get_snmp_object_maybe {
    my ($self, @args) = @_;
    my $ret;

    # Just do a regular fetch when simulating
    return $self->get_snmp_object(@args) unless defined $Monitoring::GLPlugin::SNMP::session;

    # There may be no response at all. Turn the SNMP timeout down so we can
    # catch that without triggering SIGALRM
    my $orig_timeout = $Monitoring::GLPlugin::SNMP::session->timeout;
    my $new_timeout = $orig_timeout / 10;
    $new_timeout = 5 if $new_timeout > 5;
    $Monitoring::GLPlugin::SNMP::session->timeout($new_timeout);

    # Get
    $ret = $self->get_snmp_object(@args);

    # Restore timeout
    $Monitoring::GLPlugin::SNMP::session->timeout($orig_timeout);

    return $ret;
}

sub get_snmp_table_objects_with_cache {
  my ($self, $mib, $table, $key_attr, $rows, $force) = @_;
  $force ||= 0;
  $self->update_entry_cache($force, $mib, $table, $key_attr);
  my @indices = $self->get_cache_indices($mib, $table, $key_attr);
  my @entries = ();
  foreach ($self->get_snmp_table_objects($mib, $table, \@indices, $rows)) {
    push(@entries, $_);
  }
  return @entries;
}

sub get_table_row_oids {
  my ($self, $mib, $entry, $rows, $sym_lookup) = @_;
  $self->require_mib($mib);
  my $eoid = $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$entry}.'.';
  my $eoidlen = length($eoid);
  my @columns = scalar(@{$rows}) ?
  map {
      $sym_lookup->{$_->[1]} = $_->[0];
      $_->[1];
  } grep {
      substr($_->[1], 0, $eoidlen) eq $eoid
  } map {
      [$_, $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$_}]
  } @{$rows}
  :
  map {
      $sym_lookup->{$_->[1]} = $_->[0];
      $_->[1];
  } grep {
      substr($_->[1], 0, $eoidlen) eq $eoid
  } map {
      [$_, $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$_}]
  } keys %{$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}};
  return @columns;
}

# get_snmp_table_objects('MIB-Name', 'Table-Name', 'Table-Entry', [indices])
# returns array of hashrefs
sub get_snmp_table_objects {
  my ($self, $mib, $table, $indices, $rows) = @_;
  $indices ||= [];
  $rows ||= [];
  $self->require_mib($mib);
  my @entries = ();
  my $augmenting_table;
  my $sym_lookup = {};
  $self->debug(sprintf "get_snmp_table_objects %s %s", $mib, $table);
  if ($table =~ /^(.*?)\+(.*)/) {
    $table = $1;
    $augmenting_table = $2;
  }
  my $entry = $table;
  $entry =~ s/Table/Entry/g;
  if (! exists $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib} ||
      ! exists $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$table}) {
    return ();
  }
  if (! exists $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$entry}) {
    $self->debug(sprintf "table %s::%s has no entry oid", $mib, $table);
    $entry = $table;
    $entry =~ s/Table/TableEntry/g;
    if (! exists $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$entry}) {
      return ();
    }
  }
  my $tableoid = $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$table};
  my $entryoid = $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$entry};
  my $augmenting_tableoid = undef;
  my @columns = $self->get_table_row_oids($mib, $entry, $rows, $sym_lookup);
  my @augmenting_columns = ();
  if($augmenting_table) {
    my $augmenting_entry = $augmenting_table;
    $augmenting_entry =~ s/Table/Entry/g;
    if (! exists $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$augmenting_entry}) {
      $self->debug(sprintf "table %s::%s has no entry oid", $mib, $augmenting_table);
      $augmenting_entry = $augmenting_table;
      $augmenting_entry =~ s/Table/TableEntry/g;
      if (! exists $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$augmenting_entry}) {
        $augmenting_table = undef;
      }
    }
    if ($augmenting_table) {
      @augmenting_columns = $self->get_table_row_oids($mib, $augmenting_entry, $rows, $sym_lookup);
      $augmenting_tableoid = $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$augmenting_table};
    }
  }
  if (scalar(@{$indices}) == 1 && $indices->[0] == -1) {
    # get mini-version of a table
    my $result = $self->get_entries(
        -columns => \@columns,
    );
    if ($augmenting_table) {
      my $augmenting_result = $self->get_entries(
          -columns => \@augmenting_columns,
      );
      while (my ($key, $value) = each %{$augmenting_result}) {
        $result->{$key} = $value;
      }
    }
    my @indices = 
        $self->get_indices(
            -baseoid => $entryoid,
            -oids => [keys %{$result}]);
    @entries = $self->make_symbolic($mib, $result, \@indices, $sym_lookup);
    @entries = map { $_->{indices} = shift @indices; $_ } @entries;
    $self->debug(sprintf "get_snmp_table_objects mini returns %d entries",
        scalar(@entries));
  } elsif (scalar(@{$indices}) == 1) {
    my $index = join('.', @{$indices->[0]});
    my $result = $self->get_entries(
        -startindex => $index,
        -endindex => $index,
        -columns => \@columns,
    );
    if ($augmenting_table) {
      my $augmenting_result = $self->get_entries(
          -startindex => $index,
          -endindex => $index,
          -columns => \@augmenting_columns,
      );
      while (my ($key, $value) = each %{$augmenting_result}) {
        $result->{$key} = $value;
      }
    }
    @entries = $self->make_symbolic($mib, $result, $indices, $sym_lookup);
    @entries = map { $_->{indices} = shift @{$indices}; $_ } @entries;
    $self->debug(sprintf "get_snmp_table_objects single returns %d entries",
        scalar(@entries));
  } elsif (scalar(@{$indices}) > 1) {
    my $result = {};
    my @sortedindices = $self->sort_indices($indices);
    my $startindex = $sortedindices[0];
    my $endindex = $sortedindices[$#sortedindices];
    if (0) {
      # holzweg. dicke ciscos liefern unvollstaendiges resultat, d.h.
      # bei 138,19,157 kommt nur 138..144, dann ist schluss.
      # maxrepetitions bringt nichts.
      $result = $self->get_entries(
          -startindex => $startindex,
          -endindex => $endindex,
          -columns => \@columns,
      );
    } else {
      foreach my $idx (@sortedindices) {
        my $tmp_result = $self->get_entries(
            -startindex => $idx,
            -endindex => $idx,
            -columns => \@columns,
        );
        while (my ($key, $value) = each %{$tmp_result}) {
          $result->{$key} = $value;
        }
      }
    }
    if ($augmenting_table) {
      foreach my $idx (@sortedindices) {
        my $tmp_result = $self->get_entries(
            -startindex => $idx,
            -endindex => $idx,
            -columns => \@augmenting_columns,
        );
        while (my ($key, $value) = each %{$tmp_result}) {
          $result->{$key} = $value;
        }
      }
    }
    # now we have numerical_oid+index => value
    # needs to become symboic_oid => value
    @entries = $self->make_symbolic($mib, $result, $indices, $sym_lookup);
    @entries = map { $_->{indices} = shift @{$indices}; $_ } @entries;
    $self->debug(sprintf "get_snmp_table_objects single returns %d entries",
        scalar(@entries));
  } elsif (scalar(@{$rows})) {
    my $result = $self->get_entries(
        -columns => \@columns,
    );
    if ($augmenting_table) {
      my $augmenting_result = $self->get_entries(
          -columns => \@augmenting_columns,
      );
      while (my ($key, $value) = each %{$augmenting_result}) {
        $result->{$key} = $value;
      }
    }
    my @indices =
        $self->get_indices(
            -baseoid => $entryoid,
            -oids => [keys %{$result}]);
    @entries = $self->make_symbolic($mib, $result, \@indices, $sym_lookup);
    @entries = map { $_->{indices} = shift @indices; $_ } @entries;
    $self->debug(sprintf "get_snmp_table_objects rows returns %d entries",
        scalar(@entries));
  } else {
    my $result = $self->get_table(
        -baseoid => $tableoid,
    );
    if ($augmenting_table) {
      #my $augmenting_result = $self->get_entries(
      #    -columns => \@augmenting_columns,
      #);
      my $augmenting_result = $self->get_table(
          -baseoid => $augmenting_tableoid,
      );
      while (my ($key, $value) = each %{$augmenting_result}) {
        $result->{$key} = $value;
      }
    }
    # now we have numerical_oid+index => value
    # needs to become symboic_oid => value
    my @indices = 
        $self->get_indices(
            -baseoid => $entryoid,
            -oids => [keys %{$result}]);
    @entries = $self->make_symbolic($mib, $result, \@indices, $sym_lookup);
    @entries = map { $_->{indices} = shift @indices; $_ } @entries;
    $self->debug(sprintf "get_snmp_table_objects default returns %d entries",
        scalar(@entries));
  }
  @entries = map { $_->{flat_indices} = join(".", @{$_->{indices}}); $_ } @entries;
  return @entries;
}

sub bulk_is_baeh {
  my ($self, $maxrepetitions) = @_;
  $maxrepetitions ||= 1;
  $Monitoring::GLPlugin::SNMP::maxrepetitions = $maxrepetitions;
}

################################################################
# 3rd level functions. calling net::snmp-functions
# 
sub get_request {
  my ($self, %params) = @_;
  my @notcached = ();
  foreach my $oid (@{$params{'-varbindlist'}}) {
    $self->add_oidtrace($oid);
    if (! exists $Monitoring::GLPlugin::SNMP::rawdata->{$oid}) {
      push(@notcached, $oid);
    }
  }
  if (! $self->opts->snmpwalk && (scalar(@notcached) > 0)) {
    my %params = ();
    if ($Monitoring::GLPlugin::SNMP::session->version() == 0) {
      $params{-varbindlist} = \@notcached;
    } elsif ($Monitoring::GLPlugin::SNMP::session->version() == 1) {
      $params{-varbindlist} = \@notcached;
      #$params{-nonrepeaters} = scalar(@notcached);
    } elsif ($Monitoring::GLPlugin::SNMP::session->version() == 3) {
      $params{-varbindlist} = \@notcached;
      $params{-contextengineid} = $self->opts->contextengineid if $self->opts->contextengineid;
      $params{-contextname} = $self->opts->contextname if $self->opts->contextname;
    }
    my $result = $Monitoring::GLPlugin::SNMP::session->get_request(%params);
    # so, und jetzt gibts stinkstiefel, die kriegen
    # params{-varbindlist => [1.3.6.1.4.1.318.1.1.1.1.1.1]
    # und result ist
    # { 1.3.6.1.4.1.318.1.1.1.1.1.1.0 => "Smart-UPS RT 10000 XL" }
    # letzteres kommt in raw_data
    # und beim abschliessenden map wirds natuerlich nicht mehr gefunden 
    # also leeres return. <<kraftausdruck>>
    while (my ($key, $value) = each %{$result}) {
      # so, und zwei jahre spaeter kommt man drauf, dass es viele sorten 
      # von stinkstiefeln gibt. die fragt man nach 1.3.6.1.4.1.13885.120.1.3.1
      # und kriegt als antwort 1.3.6.1.4.1.13885.120.1.3.1.0=[noSuchInstance]
      # bis zum 11.10.16 wurde das in den cache geschrieben. eine etage hoeher
      # wird aber dann nach 1.3.6.1.4.1.13885.120.1.3.1.0 gefallbacked, was
      # dann prompt aus dem cache gefischt wird, anstatt den agenten zu fragen,
      # der in diesem fall eine saubere antwort liefern wuerde.
      # ergo: keine fehlermeldungen in den chache
      $self->add_rawdata($key, $value) if defined $value && $value ne 'noSuchInstance';
    }
  }
  my $result = {};
  map {
      $result->{$_} = exists $Monitoring::GLPlugin::SNMP::rawdata->{$_} ?
          $Monitoring::GLPlugin::SNMP::rawdata->{$_} :
      exists $Monitoring::GLPlugin::SNMP::rawdata->{$_.'.0'} ?
          $Monitoring::GLPlugin::SNMP::rawdata->{$_.'.0'} : undef;
  } @{$params{'-varbindlist'}};
  return $result;
}

sub get_entries_get_bulk {
  my ($self, %params) = @_;
  my $result = {};
  $self->debug(sprintf "get_entries_get_bulk %s", Data::Dumper::Dumper(\%params));
  my %newparams = ();
  $newparams{'-maxrepetitions'} = 3;
  $newparams{'-startindex'} = $params{'-startindex'}
      if defined $params{'-startindex'};
  $newparams{'-endindex'} = $params{'-endindex'}
      if defined $params{'-endindex'};
  $newparams{'-columns'} = $params{'-columns'};
  if ($Monitoring::GLPlugin::SNMP::session->version() == 3) {
    $newparams{-contextengineid} = $self->opts->contextengineid if $self->opts->contextengineid;
    $newparams{-contextname} = $self->opts->contextname if $self->opts->contextname;
  }
  $result = $Monitoring::GLPlugin::SNMP::session->get_entries(%newparams);
  return $result;
}

sub get_entries_get_next {
  my ($self, %params) = @_;
  my $result = {};
  $self->debug(sprintf "get_entries_get_next %s", Data::Dumper::Dumper(\%params));
  my %newparams = ();
  $newparams{'-maxrepetitions'} = 0;
  $newparams{'-startindex'} = $params{'-startindex'}
      if defined $params{'-startindex'};
  $newparams{'-endindex'} = $params{'-endindex'}
      if defined $params{'-endindex'};
  $newparams{'-columns'} = $params{'-columns'};
  if ($Monitoring::GLPlugin::SNMP::session->version() == 3) {
    $newparams{-contextengineid} = $self->opts->contextengineid if $self->opts->contextengineid;
    $newparams{-contextname} = $self->opts->contextname if $self->opts->contextname;
  }
  $result = $Monitoring::GLPlugin::SNMP::session->get_entries(%newparams);
  return $result;
}

sub get_entries_get_next_1index {
  my ($self, %params) = @_;
  my $result = {};
  $self->debug(sprintf "get_entries_get_next_1index %s", Data::Dumper::Dumper(\%params));
  my %newparams = ();
  $newparams{'-startindex'} = $params{'-startindex'}
      if defined $params{'-startindex'};
  $newparams{'-endindex'} = $params{'-endindex'}
      if defined $params{'-endindex'};
  $newparams{'-columns'} = $params{'-columns'};
  my %singleparams = ();
  $singleparams{'-maxrepetitions'} = 0;
  if ($Monitoring::GLPlugin::SNMP::session->version() == 3) {
    $singleparams{-contextengineid} = $self->opts->contextengineid if $self->opts->contextengineid;
    $singleparams{-contextname} = $self->opts->contextname if $self->opts->contextname;
  }
  foreach my $index ($newparams{'-startindex'}..$newparams{'-endindex'}) {
    foreach my $oid (@{$newparams{'-columns'}}) {
      $singleparams{'-columns'} = [$oid];
      $singleparams{'-startindex'} = $index;
      $singleparams{'-endindex'} =$index;
      my $singleresult = $Monitoring::GLPlugin::SNMP::session->get_entries(%singleparams);
      while (my ($key, $value) = each %{$singleresult}) {
        $result->{$key} = $value;
      }
    }
  }
  return $result;
}

sub get_entries_get_simple {
  my ($self, %params) = @_;
  my $result = {};
  $self->debug(sprintf "get_entries_get_simple %s", Data::Dumper::Dumper(\%params));
  my %newparams = ();
  $newparams{'-startindex'} = $params{'-startindex'}
      if defined $params{'-startindex'};
  $newparams{'-endindex'} = $params{'-endindex'}
      if defined $params{'-endindex'};
  $newparams{'-columns'} = $params{'-columns'};
  my %singleparams = ();
  if ($Monitoring::GLPlugin::SNMP::session->version() == 3) {
    $singleparams{-contextengineid} = $self->opts->contextengineid if $self->opts->contextengineid;
    $singleparams{-contextname} = $self->opts->contextname if $self->opts->contextname;
  }
  foreach my $index ($newparams{'-startindex'}..$newparams{'-endindex'}) {
    foreach my $oid (@{$newparams{'-columns'}}) {
      $singleparams{'-varbindlist'} = [$oid.".".$index];
      my $singleresult = $Monitoring::GLPlugin::SNMP::session->get_request(%singleparams);
      while (my ($key, $value) = each %{$singleresult}) {
        if ($value eq "noSuchObject" ||
            $value eq "noSuchInstance" ||
            $value eq "endOfMibView") {
          $result->{$key} = undef;
        } else {
          $result->{$key} = $value;
        }
      }
    }
  }
  return $result;
}

sub get_entries {
  my ($self, %params) = @_;
  # [-startindex]
  # [-endindex]
  # -columns
  $params{'-columns'} = [$self->sort_oids($params{'-columns'})];
  my $result = {};
  $self->debug(sprintf "get_entries %s", Data::Dumper::Dumper(\%params));
  if (! $self->opts->snmpwalk) {
    if (scalar (@{$params{'-columns'}}) < 5 && $params{'-endindex'} && $params{'-startindex'} eq $params{'-endindex'}) {
      $result = $self->get_entries_get_simple(%params);
    } else {
      $result = $self->get_entries_get_bulk(%params);
      if (! $result) {
        $self->debug("bulk failed, retry simple");
        # The message size exceeded the buffer maxMsgSize of (\d+)
        # Message size exceeded buffer maxMsgSize
        if ($Monitoring::GLPlugin::SNMP::session->error() =~ /message size exceeded.*buffer maxMsgSize/i) {
          $self->debug(sprintf "buffer exceeded. raise *5 for next try");
          $self->mult_snmp_max_msg_size(5);
        } else {
          $self->debug($Monitoring::GLPlugin::SNMP::session->error());
        }
        if (defined $params{'-endindex'} && defined $params{'-startindex'}) {
          $result = $self->get_entries_get_simple(%params);
        } else {
          $result = $self->get_entries_get_next(%params);
        }
      }
    }
    if (! $result) {
      $result = $self->get_entries_get_next(%params);
      if (! $result && defined $params{'-startindex'} && $params{'-startindex'} !~ /\./) {
        # compound indexes cannot continue, as these two methods iterate numerically
        if ($Monitoring::GLPlugin::SNMP::session->error() =~ /tooBig/i) {
          $self->debug(sprintf "answer too big");
          $result = $self->get_entries_get_next_1index(%params);
        }
        if (! $result) {
          $result = $self->get_entries_get_simple(%params);
        }
        if (! $result) {
          $self->debug(sprintf "nutzt nix\n");
        }
      }
    }
    foreach my $key (keys %{$result}) {
      if (substr($key, -1) eq " ") {
        my $value = $result->{$key};
        delete $result->{$key};
        $key =~ s/\s+$//g;
        $result->{$key} = $value;
        #
        # warum?
        #
        # %newparams ist:
        #  '-columns' => [
        #                  '1.3.6.1.2.1.2.2.1.8',
        #                  '1.3.6.1.2.1.2.2.1.13',
        #                  ...
        #                  '1.3.6.1.2.1.2.2.1.16'
        #                ],
        #  '-startindex' => '2',
        #  '-endindex' => '2'
        #
        # und $result ist:
        #  ...
        #  '1.3.6.1.2.1.2.2.1.2.2' => 'Adaptive Security Appliance \'outside\' interface',
        #  '1.3.6.1.2.1.2.2.1.16.2 ' => 4281465004,
        #  '1.3.6.1.2.1.2.2.1.13.2' => 0,
        #  ...
        #
        # stinkstiefel!
        #
      }
      $self->add_rawdata($key, $result->{$key});
    }
  } else {
    my $preresult = $self->get_matching_oids(
        -columns => $params{'-columns'});
    while (my ($key, $value) = each %{$preresult}) {
      $result->{$key} = $value;
    }
    my @sortedkeys = $self->sort_oids([keys %{$result}]);
    my @to_del = ();
    if ($params{'-startindex'}) {
      foreach my $resoid (@sortedkeys) {
        foreach my $oid (@{$params{'-columns'}}) {
          my $poid = $oid.'.';
          my $lpoid = length($poid);
          if (substr($resoid, 0, $lpoid) eq $poid) {
            my $oidpattern = $poid;
            $oidpattern =~ s/\./\\./g;
            if ($resoid =~ /^$oidpattern(.+)$/) {
              if ($1 lt $params{'-startindex'}) {
                push(@to_del, $oid.'.'.$1);
              }
            }
          }
        }
      }
    }
    if ($params{'-endindex'}) {
      foreach my $resoid (@sortedkeys) {
        foreach my $oid (@{$params{'-columns'}}) {
          my $poid = $oid.'.';
          my $lpoid = length($poid);
          if (substr($resoid, 0, $lpoid) eq $poid) {
            my $oidpattern = $poid;
            $oidpattern =~ s/\./\\./g;
            if ($resoid =~ /^$oidpattern(.+)$/) {
              if ($1 gt $params{'-endindex'}) {
                push(@to_del, $oid.'.'.$1);
              }
            }
          }
        }
      }
    }
    foreach (@to_del) {
      delete $result->{$_};
    }
  }
  return $result;
}

sub get_entries_by_walk {
  my ($self, %params) = @_;
  if (! $self->opts->snmpwalk) {
    $self->add_ok("if you get this crap working correctly, let me know");
    if ($Monitoring::GLPlugin::SNMP::session->version() == 3) {
      $params{-contextengineid} = $self->opts->contextengineid if $self->opts->contextengineid;
      $params{-contextname} = $self->opts->contextname if $self->opts->contextname;
    }
    $self->debug(sprintf "get_tree %s", Data::Dumper::Dumper(\%params));
    my @baseoids = @{$params{-varbindlist}};
    delete $params{-varbindlist};
    if ($Monitoring::GLPlugin::SNMP::session->version() == 0) {
      foreach my $baseoid (@baseoids) {
        $params{-varbindlist} = [$baseoid];
        while (my $result = $Monitoring::GLPlugin::SNMP::session->get_next_request(%params)) {
          $params{-varbindlist} = [($Monitoring::GLPlugin::SNMP::session->var_bind_names)[0]];
        }
      }
    } else {
      $params{-maxrepetitions} = 200;
      foreach my $baseoid (@baseoids) {
        $params{-varbindlist} = [$baseoid];
        while (my $result = $Monitoring::GLPlugin::SNMP::session->get_bulk_request(%params)) {
          my @names = $Monitoring::GLPlugin::SNMP::session->var_bind_names();
          my @oids = $self->sort_oids(\@names);
          $params{-varbindlist} = [pop @oids];
        }
      }
    }
  } else {
    return $self->get_matching_oids(
        -columns => $params{-varbindlist});
  }
}

sub get_table {
  my ($self, %params) = @_;
  $self->add_oidtrace($params{'-baseoid'});
  if (! $self->opts->snmpwalk) {
    my @notcached = ();
    if ($Monitoring::GLPlugin::SNMP::session->version() == 3) {
      $params{-contextengineid} = $self->opts->contextengineid if $self->opts->contextengineid;
      $params{-contextname} = $self->opts->contextname if $self->opts->contextname;
    }
    if ($Monitoring::GLPlugin::SNMP::maxrepetitions) {
      # some devices (Bintec) don't like bulk-requests. They call bulk_is_baeh(), so
      # we immediately send get-next
      $params{'-maxrepetitions'} = $Monitoring::GLPlugin::SNMP::maxrepetitions;
    }
    $self->debug(sprintf "get_table %s", Data::Dumper::Dumper(\%params));
    my $result = $Monitoring::GLPlugin::SNMP::session->get_table(%params);
    if (! defined $result || (defined $result && ! %{$result})) {
      $self->debug(sprintf "get_table error: %s", 
          $Monitoring::GLPlugin::SNMP::session->error());
      if ($Monitoring::GLPlugin::SNMP::session->error() =~ /message size exceeded.*buffer maxMsgSize/i) {
        # bei irrsinnigen maxrepetitions
        $self->debug(sprintf "buffer exceeded");
        #$self->reset_snmp_max_msg_size();
        if ($params{'-maxrepetitions'}) {
          $params{'-maxrepetitions'} = int($params{'-maxrepetitions'} / 2);
          $self->debug(sprintf "reduce maxrepetitions to %d",
              $params{'-maxrepetitions'});
        } else {
          $self->mult_snmp_max_msg_size(2);
        }
      }
      $self->debug("get_table error: try fallback");
      $self->debug(sprintf "get_table %s", Data::Dumper::Dumper(\%params));
      $result = $Monitoring::GLPlugin::SNMP::session->get_table(%params);
      $self->debug(sprintf "get_table returned %d oids", scalar(keys %{$result}));
      if (! defined $result || ! %{$result}) {
        $self->debug(sprintf "get_table error: %s", 
            $Monitoring::GLPlugin::SNMP::session->error());
        if (exists $params{'-maxrepetitions'} && $params{'-maxrepetitions'} > 1) {
          $params{'-maxrepetitions'} = 1;
          $self->debug("get_table error: try getnext fallback");
          $self->debug(sprintf "get_table %s", Data::Dumper::Dumper(\%params));
          $result = $Monitoring::GLPlugin::SNMP::session->get_table(%params);
          $self->debug(sprintf "get_table returned %d oids", scalar(keys %{$result}));
        }
        if (! defined $result || ! %{$result}) {
          $self->debug("get_table error: no more fallbacks. Try --protocol 1");
        }
      }
    }
    $result = {} if ! defined $result;
    # Drecksstinkstiefel Net::SNMP
    # '1.3.6.1.2.1.2.2.1.22.4 ' => 'endOfMibView',
    # '1.3.6.1.2.1.2.2.1.22.4' => '0.0',
    my $num_rows = 0;
    my @blank_keys = ();
    while (my ($key, $value) = each %{$result}) {
      $num_rows++;
      if (substr($key, -1) eq " ") {
        push(@blank_keys, $key);
      } else {
        $self->add_rawdata($key, $value);
      }
    }
    $self->debug(sprintf "get_table returned %d oids", $num_rows);
    foreach my $key (@blank_keys) {
      my $value = $result->{$key};
      delete $result->{$key};
      (my $shortkey = $key) =~ s/\s+$//g;
      if (! exists $result->{shortkey}) {
        $self->add_rawdata($shortkey, $value);
      }
    }
  }
  return $self->get_matching_oids(
      -columns => [$params{'-baseoid'}]);
}

################################################################
# helper functions
# 
sub valid_response {
  my ($self, $mib, $mo, $index) = @_;
  $self->require_mib($mib);
  if (exists $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib} &&
      exists $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$mo}) {
    # make it numerical
    my $oid = $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$mo};
    if (defined $index) {
      $oid .= '.'.$index;
    }
    my $result = $self->get_request(
        -varbindlist => [$oid]
    );
    if (! defined($result) ||
        ! defined $result->{$oid} ||
        $result->{$oid} eq 'noSuchInstance' ||
        $result->{$oid} eq 'noSuchObject' ||
        $result->{$oid} eq 'endOfMibView') {
      $self->debug(sprintf "GET: %s::%s (%s) : %s", $mib, $mo, $oid, defined $result->{$oid} ? $result->{$oid} : "<undef>");
      return undef;
    } else {
      $self->debug(sprintf "GET: %s::%s (%s) : %s", $mib, $mo, $oid, defined $result->{$oid} ? $result->{$oid} : "<undef>");
      $self->add_rawdata($oid, $result->{$oid});
      return $result->{$oid};
    }
  } else {
    return undef;
  }
}

sub get_symbol {
  my ($self, $mib, $oid) = @_;
  # "LIEBERT-GP-ENVIRONMENTAL-MIB", "1.3.6.1.4.1.476.1.42.3.4.1.1.4"
  # dahinter steckt
  # lgpEnvSupplyAirTemperature => '1.3.6.1.4.1.476.1.42.3.4.1.1.3'
  # lgpAmbientTemperature => '1.3.6.1.4.1.476.1.42.3.4.1.1.4'
  # und als info vom geraet
  # LgpEnvTemperatureMeasurementDegC = '1.3.6.1.4.1.476.1.42.3.4.1.1.4'
  # der name des temp. sensor wird ueber die oid mitgeteilt
  $self->require_mib($mib);
  $oid =~ s/^\.//g;
  foreach my $symoid
      (keys %{$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}}) {
    if ($oid eq $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$symoid}) {
      return $symoid;
    }
  }
  return undef;
}

# make_symbolic
# mib is the name of a mib (must be in mibs_and_oids)
# result is a hash-key oid->value
# indices is a array ref of array refs. [[1],[2],...] or [[1,0],[1,1],[2,0]..
sub make_symbolic {
  my ($self, $mib, $result, $indices, $sym_lookup) = @_;
  $self->require_mib($mib);
  my @entries = ();
  if (! wantarray && ref(\$result) eq "SCALAR" && ref(\$indices) eq "SCALAR") {
    # $self->make_symbolic('CISCO-IETF-NAT-MIB', 'cnatProtocolStatsName', $self->{cnatProtocolStatsName});
    my $oid = $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$result};
    $result = { $oid => $self->{$result} };
    $indices = [[]];
  }
  foreach my $index (@{$indices}) {
    # skip [], [[]], [[undef]]
    if (ref($index) eq "ARRAY") {
      if (scalar(@{$index}) == 0) {
        next;
      } elsif (!defined $index->[0]) {
        next;
      }
    }
    my $mo = {};
    my $idx = join('.', @{$index}); # index can be multi-level
    if (! $sym_lookup) {
      foreach my $symoid
          (keys %{$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}}) {
        my $oid = $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$symoid};
        if (ref($oid) ne 'HASH') {
          my $fulloid = $oid . '.'.$idx;
          if (exists $result->{$fulloid}) {
            if (exists $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$symoid.'Definition'}) {
              if (ref($Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$symoid.'Definition'}) eq 'HASH') {
                if (exists $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$symoid.'Definition'}->{$result->{$fulloid}}) {
                  $mo->{$symoid} = $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$symoid.'Definition'}->{$result->{$fulloid}};
                } else {
                  $mo->{$symoid} = 'unknown_'.$result->{$fulloid};
                }
              } elsif ($Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$symoid.'Definition'} =~ /^OID::(.*)/) {
                my $othermib = $1;
                if (! exists $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$othermib}) {
                  # may point to another mib's definitions, which hasn't
                  # been used yet.
                  $self->require_mib($othermib);
                }
                my $value_which_is_a_oid = $result->{$fulloid};
                $value_which_is_a_oid =~ s/^\.//g;
                my @result = grep { $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$othermib}->{$_} eq $value_which_is_a_oid } keys %{$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$othermib}};
                if (scalar(@result)) {
                  $mo->{$symoid} = $result[0];
                } else {
                  $mo->{$symoid} = 'unknown_'.$result->{$fulloid};
                }
              } elsif ($Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$symoid.'Definition'} =~ /^(.*?)::(.*)/) {
                my $mib = $1;
                my $definition = $2;
                my $parameters = undef;
                if ($definition =~ /(.*)\((.*)\)/) {
                  $definition = $1;
                  $parameters = $2;
                }
                if (! exists $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}) {
                  # may point to another mib's definitions, which hasn't
                  # been used yet.
                  $self->require_mib($mib);
                }
                if  (exists $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib} &&
                    exists $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition} &&
                    ref($Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition}) eq 'CODE') {
                  if ($parameters) {
                    if (! exists $mo->{$parameters}) {
                      # this happens if there are two isolated get_snmp_object calls, one for
                      # cLHaPeerIpAddressType and one for cLHaPeerIpAddress where the latter needs
                      # the symbolized value of the first. we are inside this index-loop because
                      # both have this usual extra .0 although this is not a table row.
                      # if this were a table row, $mo would know cLHaPeerIpAddressType.
                      # there's a chance that $self got cLHaPeerIpAddressType in a previous call
                      # to make_symbolic
                      if (@{$indices} and scalar(@{$indices}) == 1 and ! $indices->[0]->[0]) {
                        $mo->{$parameters} = $self->{$parameters};
                      }
                    }
                    $mo->{$symoid} = $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition}->($result->{$fulloid}, $mo->{$parameters});
                  } else {
                    $mo->{$symoid} = $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition}->($result->{$fulloid});
                  }
                } elsif  (exists $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib} &&
                    exists $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition} &&
                    ref($Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition}) eq 'HASH' &&
                    exists $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition}->{$result->{$fulloid}}) {
                  $mo->{$symoid} = $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition}->{$result->{$fulloid}};
                } else {
                  $mo->{$symoid} = 'unknown_'.$result->{$fulloid};
                }
              } else {
                $mo->{$symoid} = 'unknown_'.$result->{$fulloid};
                # oder $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$symoid.'Definition'}?
              }
            } else {
              $mo->{$symoid} = $result->{$fulloid};
            }
          }
        }
      }
    } else {
      my @sym_lookup_keys = $self->sort_oids([keys %{$sym_lookup}]);
      foreach my $oid (@sym_lookup_keys) {
        if (ref($oid) ne 'HASH') {
          my $fulloid = $oid . '.'.$idx;
          my $symoid = $sym_lookup->{$oid};
          if (exists $result->{$fulloid}) {
            if (exists $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$symoid.'Definition'}) {
              if (ref($Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$symoid.'Definition'}) eq 'HASH') {
                if (exists $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$symoid.'Definition'}->{$result->{$fulloid}}) {
                  $mo->{$symoid} = $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$symoid.'Definition'}->{$result->{$fulloid}};
                } else {
                  $mo->{$symoid} = 'unknown_'.$result->{$fulloid};
                }
              } elsif ($Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$symoid.'Definition'} =~ /^OID::(.*)/) {
                my $othermib = $1;
                if (! exists $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$othermib}) {
                  # may point to another mib's definitions, which hasn't
                  # been used yet.
                  $self->require_mib($othermib);
                }
                my $value_which_is_a_oid = $result->{$fulloid};
                $value_which_is_a_oid =~ s/^\.//g;
                my @result = grep { $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$othermib}->{$_} eq $value_which_is_a_oid } keys %{$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$othermib}};
                if (scalar(@result)) {
                  $mo->{$symoid} = $result[0];
                } else {
                  $mo->{$symoid} = 'unknown_'.$result->{$fulloid};
                }
              } elsif ($Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$symoid.'Definition'} =~ /^(.*?)::(.*)/) {
                my $mib = $1;
                my $definition = $2;
                my $parameters = undef;
                if ($definition =~ /(.*)\((.*)\)/) {
                  $definition = $1;
                  $parameters = $2;
                }
                if (! exists $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}) {
                  # may point to another mib's definitions, which hasn't
                  # been used yet.
                  $self->require_mib($mib);
                }
                if  (exists $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib} &&
                    exists $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition} &&
                    ref($Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition}) eq 'CODE') {
                  if ($parameters) {
                    if (! exists $mo->{$parameters}) {
                      if (@{$indices} and scalar(@{$indices}) == 1 and ! $indices->[0]->[0]) {
                        $mo->{$parameters} = $self->{$parameters};
                      }
                    }
                    $mo->{$symoid} = $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition}->($result->{$fulloid}, $mo->{$parameters});
                  } else {
                    $mo->{$symoid} = $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition}->($result->{$fulloid});
                  }
                } elsif  (exists $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib} &&
                    exists $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition} &&
                    ref($Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition}) eq 'HASH' &&
                    exists $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition}->{$result->{$fulloid}}) {
                  $mo->{$symoid} = $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition}->{$result->{$fulloid}};
                } else {
                  $mo->{$symoid} = 'unknown_'.$result->{$fulloid};
                }
              } else {
                $mo->{$symoid} = 'unknown_'.$result->{$fulloid};
                # oder $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$symoid.'Definition'}?
              }
            } else {
              $mo->{$symoid} = $result->{$fulloid};
            }
          }
        }
      }
    }
    push(@entries, $mo);
  }
  if (@{$indices} and scalar(@{$indices}) == 1 and !defined $indices->[0]->[0]) {
    my $mo = {};
    foreach my $symoid
        (keys %{$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}}) {
      my $oid = $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$symoid};
      if (ref($oid) ne 'HASH') {
        if (exists $result->{$oid}) {
          if (exists $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$symoid.'Definition'}) {
            if (ref($Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$symoid.'Definition'}) eq 'HASH') {
              if (exists $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$symoid.'Definition'}->{$result->{$oid}}) {
                $mo->{$symoid} = $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$symoid.'Definition'}->{$result->{$oid}};
                push(@entries, $mo);
              }
            } elsif ($Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$symoid.'Definition'} =~ /^(.*?)::(.*)/) {
              my $mib = $1;
              my $definition = $2;
              my $parameters = undef;
              if ($definition =~ /(.*)\((.*)\)/) {
                $definition = $1;
                $parameters = $2;
              }
              if  (exists $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib} &&
                  exists $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition} &&
                  ref($Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition}) eq 'CODE') {
                if ($parameters) {
                  # we come here fo resolve single oids, so $mo is always initialized new here.
                  # there's a chance that $self->{$parameters} was queried in a previous call
                  if (! exists $mo->{$parameters}) {
                    $mo->{$parameters} = $self->{$parameters};
                  }
                  $mo->{$symoid} = $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition}->($result->{$oid}, $mo->{$parameters});
                } else {
                  $mo->{$symoid} = $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition}->($result->{$oid});
                }
              } elsif  (exists $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib} &&
                  exists $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition} &&
                  ref($Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition}) eq 'HASH' &&
                  exists $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition}->{$result->{$oid}}) {
                $mo->{$symoid} = $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{$mib}->{$definition}->{$result->{$oid}};
              } else {
                $mo->{$symoid} = 'unknown_'.$result->{$oid};
              }
            } else {
              $mo->{$symoid} = 'unknown_'.$result->{$oid};
              # oder $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$symoid.'Definition'}?
            }
          }
        }
      }
    }
    push(@entries, $mo) if keys %{$mo};
  }
  if (wantarray) {
    return @entries;
  } else {
    foreach my $entry (@entries) {
      foreach my $key (keys %{$entry}) {
        $self->{$key} = $entry->{$key};
      }
    }
  }
}

sub sort_oids {
  my ($self, $oids) = @_;
  $oids ||= [];
  my @sortedkeys = map { $_->[0] }
      sort { $a->[1] cmp $b->[1] }
          map { [$_,
                  join '', map { sprintf("%30d",$_) } split( /\./, $_)
                ] } @{$oids};
  return @sortedkeys;
}

sub sort_indices {
  my ($self, $indices) = @_;
  my @sortedindices = map { $_->[0] } 
      sort { $a->[1] cmp $b->[1] } 
          map { [$_, 
              join '', map { sprintf("%30d",$_) } split( /\./, $_) 
          ] } map { join('.', @{$_})} @{$indices}; 
  return @sortedindices;
}


sub get_matching_oids {
  my ($self, %params) = @_;
  my $result = {};
  $self->debug(sprintf "get_matching_oids %s", Data::Dumper::Dumper(\%params));
  foreach my $oid (@{$params{'-columns'}}) {
    while (my ($key, $value) = each %{$Monitoring::GLPlugin::SNMP::rawdata}) {
      # oid 1.3.6.1.4.1.9999.12.3.4
      # raw 1.3.6.1.4.1.9999.12.3.4.2.3
      # raw 1.3.6.1.4.1.9999.12.3.41.10.2
      # raw 1.3.6.1.4.1.9999.12.3.4
      if (rindex($key, $oid, 0) == 0) {
        my $len = length($oid);
        if ($len == length($key)) {
          $result->{$key} = $value;
        } elsif (substr($key, $len, 1) eq ".") {
          $result->{$key} = $value;
        }
      }
    }
    #my $oidpattern = $oid;
    #$oidpattern =~ s/\./\\./g;
    #map { $result->{$_} = $Monitoring::GLPlugin::SNMP::rawdata->{$_} }
    #    grep /^$oidpattern(?=\.|$)/, keys %{$Monitoring::GLPlugin::SNMP::rawdata};
  }
  $self->debug(sprintf "get_matching_oids returns %d from %d oids", 
      scalar(keys %{$result}), scalar(keys %{$Monitoring::GLPlugin::SNMP::rawdata}));
  return $result;
}

sub get_indices {
  my ($self, %params) = @_;
  # -baseoid : entry
  # find all oids beginning with $entry
  # then skip one field for the sequence
  # then read the next numindices fields
  my $entry = $params{'-baseoid'};
  my $entrypat = $entry;
  my %seen = ();
  $entrypat =~ s/\./\\\./g;
  map {
      $seen{$1} = 1 if /^$entrypat\.\d+\.(.*)/;
  } grep {
      rindex($_, $entry) == 0;
  } keys %{$Monitoring::GLPlugin::SNMP::rawdata};
  my @o = map {[split /\./]} sort keys %seen;
  return @o;
}

# this flattens a n-dimensional array and returns the absolute position
# of the element at position idx1,idx2,...,idxn
# element 1,2 in table 0,0 0,1 0,2 1,0 1,1 1,2 2,0 2,1 2,2 is at pos 6
sub get_number {
  my ($self, $indexlists, @element) = @_;
  # $indexlists = zeiger auf array aus [1, 2]
  my $dimensions = scalar(@{$indexlists->[0]});
  my @sorted = ();
  my $number = 0;
  if ($dimensions == 1) {
    @sorted =
        sort { $a->[0] <=> $b->[0] } @{$indexlists};
  } elsif ($dimensions == 2) {
    @sorted =
        sort { $a->[0] <=> $b->[0] || $a->[1] <=> $b->[1] } @{$indexlists};
  } elsif ($dimensions == 3) {
    @sorted =
        sort { $a->[0] <=> $b->[0] ||
               $a->[1] <=> $b->[1] ||
               $a->[2] <=> $b->[2] } @{$indexlists};
  }
  foreach (@sorted) {
    if ($dimensions == 1) {
      if ($_->[0] == $element[0]) {
        last;
      }
    } elsif ($dimensions == 2) {
      if ($_->[0] == $element[0] && $_->[1] == $element[1]) {
        last;
      }
    } elsif ($dimensions == 3) {
      if ($_->[0] == $element[0] &&
          $_->[1] == $element[1] &&
          $_->[2] == $element[2]) {
        last;
      }
    }
    $number++;
  }
  return ++$number;
}

################################################################
# caching functions
# 
sub set_rawdata {
  my ($self, $rawdata) = @_;
  $Monitoring::GLPlugin::SNMP::rawdata = $rawdata;
}

sub add_rawdata {
  my ($self, $oid, $value) = @_;
  $Monitoring::GLPlugin::SNMP::rawdata->{$oid} = $value;
}

sub rawdata {
  my ($self) = @_;
  return $Monitoring::GLPlugin::SNMP::rawdata;
}

sub add_oidtrace {
  my ($self, $oid) = @_;
  $self->debug("cache: ".$oid);
  push(@{$Monitoring::GLPlugin::SNMP::oidtrace}, $oid);
}

#  $self->update_entry_cache(0, $mib, $table, $key_attr);
#  my @indices = $self->get_cache_indices();
sub get_cache_indices {
  my ($self, $mib, $table, $key_attr) = @_;
  # get_cache_indices is only used by get_snmp_table_objects_with_cache
  # so if we dont use --name returning all the indices would result
  # in a step-by-step get_table_objecs(index 1...n) which could take long
  # time when used with nexus or f5 pools
  # returning () forces get_snmp_table_objects to use get_tables
  return () if ! $self->opts->name;
  if (ref($key_attr) ne "ARRAY") {
    $key_attr = [$key_attr];
  }
  my $cache = sprintf "%s_%s_%s_cache", 
      $mib, $table, join('#', @{$key_attr});
  my @indices = ();
  foreach my $key (keys %{$self->{$cache}}) {
    my ($descr, $index) = split('-//-', $key, 2);
    if ($self->opts->name) {
      if ($self->opts->regexp) {
        my $pattern = $self->opts->name;
        if ($descr =~ /$pattern/i) {
          push(@indices, $self->{$cache}->{$key});
        }
      } else {
        if ($self->opts->name =~ /^\d+$/) {
          if ($index == 1 * $self->opts->name) {
            push(@indices, [1 * $self->opts->name]);
          }
        } else {
          if (lc $descr eq lc $self->opts->name) {
            push(@indices, $self->{$cache}->{$key});
          }
        }
      }
    } else {
      push(@indices, $self->{$cache}->{$key});
    }
  }
  return @indices;
  return map { join('.', ref($_) eq "ARRAY" ? @{$_} : $_) } @indices;
}

sub get_entities {
  my ($self, $class, $filter) = @_;
  foreach ($self->get_sub_table('ENTITY-MIB', [
    'entPhysicalDescr',
    'entPhysicalName',
    'entPhysicalClass',
  ])) {
    my $new_object = $class->new(%{$_});
    next if (defined $filter && ! &$filter($new_object));
    push @{$self->{entities}}, $new_object;
  }
}

sub get_sub_table {
  my ($self, $mib, $names) = @_;
  $self->require_mib($mib);
  my @oids = map {
    $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{$mib}->{$_}
  } @$names;
  my $result = $self->get_entries(
    -columns => \@oids
  );
  my $indices = ();
  map { if ($_ =~ /\.(\d+)$/) { $indices->{$1} = [ $1 ]; } } keys %$result;
  my @indices = values %$indices;
  my @entries = $self->make_symbolic($mib, $result, \@indices);
  @entries = map { $_->{indices} = shift @indices; $_ } @entries;
  @entries = map { $_->{flat_indices} = join(".", @{$_->{indices}}); $_ } @entries;
  return @entries;
}

sub join_table {
  my ($self, $to, $from) = @_;
  my $to_i = {};
  foreach (@$to) {
    my $i = $_->{flat_indices};
    $to_i->{$i} = $_;
  }
  foreach my $f (@$from) {
    my $i = $f->{flat_indices};
    if (exists $to_i->{$i}) {
      foreach (keys %$f) {
        next if $_ =~ /indices/;
        $to_i->{$i}->{$_} = $f->{$_};
      }
    }
  }
}




package Monitoring::GLPlugin::SNMP::MibsAndOids;
our @ISA = qw(Monitoring::GLPlugin::SNMP);

{
  no warnings qw(once);
  $Monitoring::GLPlugin::SNMP::MibsAndOids::discover_ids = {};
  $Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids = {};
  $Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids = {};
  $Monitoring::GLPlugin::SNMP::MibsAndOids::definitions = {};
  $Monitoring::GLPlugin::SNMP::MibsAndOids::origin = {};
}



package Monitoring::GLPlugin::SNMP::MibsAndOids::MIB2MIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'MIB-2-MIB'} = {
  url => "",
  name => "MIB-2-MIB",
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'MIB-2-MIB'} = {
  sysDescr => '1.3.6.1.2.1.1.1',
  sysObjectID => '1.3.6.1.2.1.1.2',
  sysUpTime => '1.3.6.1.2.1.1.3',
  sysName => '1.3.6.1.2.1.1.5',
  sysORTable => '1.3.6.1.2.1.1.9',
  sysOREntry => '1.3.6.1.2.1.1.9.1',
  sysORIndex => '1.3.6.1.2.1.1.9.1.1',
  sysORID => '1.3.6.1.2.1.1.9.1.2',
  sysORDescr => '1.3.6.1.2.1.1.9.1.3',
  sysORUpTime => '1.3.6.1.2.1.1.9.1.4',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'MIB-2-MIB'} = {
  'DateAndTime' => sub {
    my $value = shift;
    use Time::Local;
    my ($month, $day, $hour, $minute, $second, $dseconds, $dirutc, $hoursutc, $minutesutc,
        $wday, $yday, $isdst, $year) =
        (0, 0, 0, 0, 0, 0, "+", 0, 0, 0, 0, 0, 0);
#      DISPLAY-HINT "2d-1d-1d,1d:1d:1d.1d,1a1d:1d"
#      STATUS       current
#      DESCRIPTION
#              "A date-time specification.
#  
#              field  octets  contents                  range
#              -----  ------  --------                  -----
#                1      1-2   year*                     0..65536
#                2       3    month                     1..12
#                3       4    day                       1..31
#                4       5    hour                      0..23
#                5       6    minutes                   0..59
#                6       7    seconds                   0..60
#                             (use 60 for leap-second)
#                7       8    deci-seconds              0..9
#                8       9    direction from UTC        '+' / '-'
#                9      10    hours from UTC*           0..13
#               10      11    minutes from UTC          0..59
#  
#              * Notes:
#              - the value of year is in network-byte order
#              - daylight saving time in New Zealand is +13
#  
#              For example, Tuesday May 26, 1992 at 1:30:15 PM EDT would be
#              displayed as:
#  
#                               1992-5-26,13:30:15.0,-4:0
#  
#              Note that if only local time is known, then timezone
#              information (fields 8-10) is not present."
#      SYNTAX       OCTET STRING (SIZE (8 | 11))

    if ($value && $value !~ /^[ \w,\:\-\+\.]+$/) {
      $value = unpack("H*", $value);
    }
    if ($value && (
        $value =~ /^0x((\w{2} ){8,})/ ||
        $value =~ /^0x((\w{2} ){7,}(\w{2}){1,})/ ||
        $value =~ /^((\w{2}){8,})/ ||
        $value =~ /^((\w{2} ){8,})/ ||
        $value =~ /^((\w{2} ){7,}(\w{2}){1,})/
    )) {
      $value = $1;
      $value =~ s/ //g;
      $year = hex substr($value, 0, 4);
      $value = substr($value, 4);
      if (length($value) > 6) {
        ($month, $day, $hour, $minute, $second, $dseconds,
            $dirutc, $hoursutc, $minutesutc) = unpack "C*", pack "H*", $value;
        $minutesutc ||= 0;
      } else {
        ($month, $day, $hour, $minute, $second, $dseconds) = unpack "C*", pack "H*", $value;
        ($dirutc, $hoursutc, $minutesutc) = ("+", 0, 0);
      }
      $dirutc = ($dirutc == 43) ? "+" : ($dirutc == 45) ? "-" : "+";
    } elsif ($value && $value =~ /(\d+)-(\d+)-(\d+),(\d+):(\d+):(\d+)\.(\d+),([\+\-]*)(\d+):(\d+)/) {
      ($year, $month, $day, $hour, $minute, $second, $dseconds,
          $dirutc, $hoursutc, $minutesutc) = ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10);
    } elsif ($value && $value =~ /(\d+)-(\d+)-(\d+),(\d+):(\d+):(\d+)/) {
      ($year, $month, $day, $hour, $minute, $second, $dseconds) =
          ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10);
    } else {
      ($second, $minute, $hour, $day, $month, $year, $wday, $yday, $isdst) =
          gmtime(time);
      $year -= 1900;
      $month += 1;
    }
    if ($year == 0 && $month == 0) {
      $year = 1970;
      $month = 1;
      $day = 1;
    }
    my $epoch = timegm($second, $minute, $hour, $day, $month-1, $year-1900);
    # 1992-5-26,13:30:15.0,-4:0 = Tuesday May 26, 1992 at 1:30:15 PM EDT
    # Eastern Daylight Time (EDT) is 4 hours behind Coordinated Universal Time (UTC)
    # 13:30:15 EDT = 17:30:15 UTC
    # wir haben gesetzt timegm(13:30:15), d.h. man muss von epoch noch 4 stunden abziehen
    #
    if ($hoursutc || $minutesutc) {
      if ($dirutc && $dirutc eq "+") {
        $epoch -= ($hoursutc * 3600 + $minutesutc);
      } elsif ($dirutc && $dirutc eq "-") {
        $epoch += ($hoursutc * 3600 + $minutesutc);
      }
    }
    return $epoch;
  },
};



package Monitoring::GLPlugin::SNMP::MibsAndOids::SNMPFRAMEWORKMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'SNMP-FRAMEWORK-MIB'} = {
  url => "",
  name => "MIB-II",
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'SNMP-FRAMEWORK-MIB'} = {
  snmpEngineID => '1.3.6.1.6.3.10.2.1.1.0',
  snmpEngineBoots => '1.3.6.1.6.3.10.2.1.2.0',
  snmpEngineTime => '1.3.6.1.6.3.10.2.1.3.0',
  snmpEngineMaxMessageSize => '1.3.6.1.6.3.10.2.1.4.0',
};



package Monitoring::GLPlugin::SNMP::MibsAndOids::ADSLLINEMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'ADSL-LINE-MIB'} = {
  url => '',
  name => 'ADSL-LINE-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'ADSL-LINE-MIB'} =
    '1.3.6.1.2.1.10.94.1';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'ADSL-LINE-MIB'} = {
  adslMIB => '1.3.6.1.2.1.10.94',
  adslLineMib => '1.3.6.1.2.1.10.94.1',
  adslMibObjects => '1.3.6.1.2.1.10.94.1.1',
  adslLineTable => '1.3.6.1.2.1.10.94.1.1.1',
  adslLineEntry => '1.3.6.1.2.1.10.94.1.1.1.1',
  adslLineCoding => '1.3.6.1.2.1.10.94.1.1.1.1.1',
  adslLineCodingDefinition => 'ADSL-LINE-MIB::adslLineCoding',
  adslLineType => '1.3.6.1.2.1.10.94.1.1.1.1.2',
  adslLineTypeDefinition => 'ADSL-LINE-MIB::adslLineType',
  adslLineSpecific => '1.3.6.1.2.1.10.94.1.1.1.1.3',
  adslLineConfProfile => '1.3.6.1.2.1.10.94.1.1.1.1.4',
  adslLineAlarmConfProfile => '1.3.6.1.2.1.10.94.1.1.1.1.5',
  adslAtucPhysTable => '1.3.6.1.2.1.10.94.1.1.2',
  adslAtucPhysEntry => '1.3.6.1.2.1.10.94.1.1.2.1',
  adslAtucInvSerialNumber => '1.3.6.1.2.1.10.94.1.1.2.1.1',
  adslAtucInvVendorID => '1.3.6.1.2.1.10.94.1.1.2.1.2',
  adslAtucInvVersionNumber => '1.3.6.1.2.1.10.94.1.1.2.1.3',
  adslAtucCurrSnrMgn => '1.3.6.1.2.1.10.94.1.1.2.1.4',
  adslAtucCurrAtn => '1.3.6.1.2.1.10.94.1.1.2.1.5',
  adslAtucCurrStatus => '1.3.6.1.2.1.10.94.1.1.2.1.6',
  adslAtucCurrOutputPwr => '1.3.6.1.2.1.10.94.1.1.2.1.7',
  adslAtucCurrAttainableRate => '1.3.6.1.2.1.10.94.1.1.2.1.8',
  adslAturPhysTable => '1.3.6.1.2.1.10.94.1.1.3',
  adslAturPhysEntry => '1.3.6.1.2.1.10.94.1.1.3.1',
  adslAturInvSerialNumber => '1.3.6.1.2.1.10.94.1.1.3.1.1',
  adslAturInvVendorID => '1.3.6.1.2.1.10.94.1.1.3.1.2',
  adslAturInvVersionNumber => '1.3.6.1.2.1.10.94.1.1.3.1.3',
  adslAturCurrSnrMgn => '1.3.6.1.2.1.10.94.1.1.3.1.4',
  adslAturCurrAtn => '1.3.6.1.2.1.10.94.1.1.3.1.5',
  adslAturCurrStatus => '1.3.6.1.2.1.10.94.1.1.3.1.6',
  adslAturCurrOutputPwr => '1.3.6.1.2.1.10.94.1.1.3.1.7',
  adslAturCurrAttainableRate => '1.3.6.1.2.1.10.94.1.1.3.1.8',
  adslAtucChanTable => '1.3.6.1.2.1.10.94.1.1.4',
  adslAtucChanEntry => '1.3.6.1.2.1.10.94.1.1.4.1',
  adslAtucChanInterleaveDelay => '1.3.6.1.2.1.10.94.1.1.4.1.1',
  adslAtucChanCurrTxRate => '1.3.6.1.2.1.10.94.1.1.4.1.2',
  adslAtucChanPrevTxRate => '1.3.6.1.2.1.10.94.1.1.4.1.3',
  adslAtucChanCrcBlockLength => '1.3.6.1.2.1.10.94.1.1.4.1.4',
  adslAturChanTable => '1.3.6.1.2.1.10.94.1.1.5',
  adslAturChanEntry => '1.3.6.1.2.1.10.94.1.1.5.1',
  adslAturChanInterleaveDelay => '1.3.6.1.2.1.10.94.1.1.5.1.1',
  adslAturChanCurrTxRate => '1.3.6.1.2.1.10.94.1.1.5.1.2',
  adslAturChanPrevTxRate => '1.3.6.1.2.1.10.94.1.1.5.1.3',
  adslAturChanCrcBlockLength => '1.3.6.1.2.1.10.94.1.1.5.1.4',
  adslAtucPerfDataTable => '1.3.6.1.2.1.10.94.1.1.6',
  adslAtucPerfDataEntry => '1.3.6.1.2.1.10.94.1.1.6.1',
  adslAtucPerfLofs => '1.3.6.1.2.1.10.94.1.1.6.1.1',
  adslAtucPerfLoss => '1.3.6.1.2.1.10.94.1.1.6.1.2',
  adslAtucPerfLols => '1.3.6.1.2.1.10.94.1.1.6.1.3',
  adslAtucPerfLprs => '1.3.6.1.2.1.10.94.1.1.6.1.4',
  adslAtucPerfESs => '1.3.6.1.2.1.10.94.1.1.6.1.5',
  adslAtucPerfInits => '1.3.6.1.2.1.10.94.1.1.6.1.6',
  adslAtucPerfValidIntervals => '1.3.6.1.2.1.10.94.1.1.6.1.7',
  adslAtucPerfInvalidIntervals => '1.3.6.1.2.1.10.94.1.1.6.1.8',
  adslAtucPerfCurr15MinTimeElapsed => '1.3.6.1.2.1.10.94.1.1.6.1.9',
  adslAtucPerfCurr15MinLofs => '1.3.6.1.2.1.10.94.1.1.6.1.10',
  adslAtucPerfCurr15MinLoss => '1.3.6.1.2.1.10.94.1.1.6.1.11',
  adslAtucPerfCurr15MinLols => '1.3.6.1.2.1.10.94.1.1.6.1.12',
  adslAtucPerfCurr15MinLprs => '1.3.6.1.2.1.10.94.1.1.6.1.13',
  adslAtucPerfCurr15MinESs => '1.3.6.1.2.1.10.94.1.1.6.1.14',
  adslAtucPerfCurr15MinInits => '1.3.6.1.2.1.10.94.1.1.6.1.15',
  adslAtucPerfCurr1DayTimeElapsed => '1.3.6.1.2.1.10.94.1.1.6.1.16',
  adslAtucPerfCurr1DayLofs => '1.3.6.1.2.1.10.94.1.1.6.1.17',
  adslAtucPerfCurr1DayLoss => '1.3.6.1.2.1.10.94.1.1.6.1.18',
  adslAtucPerfCurr1DayLols => '1.3.6.1.2.1.10.94.1.1.6.1.19',
  adslAtucPerfCurr1DayLprs => '1.3.6.1.2.1.10.94.1.1.6.1.20',
  adslAtucPerfCurr1DayESs => '1.3.6.1.2.1.10.94.1.1.6.1.21',
  adslAtucPerfCurr1DayInits => '1.3.6.1.2.1.10.94.1.1.6.1.22',
  adslAtucPerfPrev1DayMoniSecs => '1.3.6.1.2.1.10.94.1.1.6.1.23',
  adslAtucPerfPrev1DayLofs => '1.3.6.1.2.1.10.94.1.1.6.1.24',
  adslAtucPerfPrev1DayLoss => '1.3.6.1.2.1.10.94.1.1.6.1.25',
  adslAtucPerfPrev1DayLols => '1.3.6.1.2.1.10.94.1.1.6.1.26',
  adslAtucPerfPrev1DayLprs => '1.3.6.1.2.1.10.94.1.1.6.1.27',
  adslAtucPerfPrev1DayESs => '1.3.6.1.2.1.10.94.1.1.6.1.28',
  adslAtucPerfPrev1DayInits => '1.3.6.1.2.1.10.94.1.1.6.1.29',
  adslAturPerfDataTable => '1.3.6.1.2.1.10.94.1.1.7',
  adslAturPerfDataEntry => '1.3.6.1.2.1.10.94.1.1.7.1',
  adslAturPerfLofs => '1.3.6.1.2.1.10.94.1.1.7.1.1',
  adslAturPerfLoss => '1.3.6.1.2.1.10.94.1.1.7.1.2',
  adslAturPerfLprs => '1.3.6.1.2.1.10.94.1.1.7.1.3',
  adslAturPerfESs => '1.3.6.1.2.1.10.94.1.1.7.1.4',
  adslAturPerfValidIntervals => '1.3.6.1.2.1.10.94.1.1.7.1.5',
  adslAturPerfInvalidIntervals => '1.3.6.1.2.1.10.94.1.1.7.1.6',
  adslAturPerfCurr15MinTimeElapsed => '1.3.6.1.2.1.10.94.1.1.7.1.7',
  adslAturPerfCurr15MinLofs => '1.3.6.1.2.1.10.94.1.1.7.1.8',
  adslAturPerfCurr15MinLoss => '1.3.6.1.2.1.10.94.1.1.7.1.9',
  adslAturPerfCurr15MinLprs => '1.3.6.1.2.1.10.94.1.1.7.1.10',
  adslAturPerfCurr15MinESs => '1.3.6.1.2.1.10.94.1.1.7.1.11',
  adslAturPerfCurr1DayTimeElapsed => '1.3.6.1.2.1.10.94.1.1.7.1.12',
  adslAturPerfCurr1DayLofs => '1.3.6.1.2.1.10.94.1.1.7.1.13',
  adslAturPerfCurr1DayLoss => '1.3.6.1.2.1.10.94.1.1.7.1.14',
  adslAturPerfCurr1DayLprs => '1.3.6.1.2.1.10.94.1.1.7.1.15',
  adslAturPerfCurr1DayESs => '1.3.6.1.2.1.10.94.1.1.7.1.16',
  adslAturPerfPrev1DayMoniSecs => '1.3.6.1.2.1.10.94.1.1.7.1.17',
  adslAturPerfPrev1DayLofs => '1.3.6.1.2.1.10.94.1.1.7.1.18',
  adslAturPerfPrev1DayLoss => '1.3.6.1.2.1.10.94.1.1.7.1.19',
  adslAturPerfPrev1DayLprs => '1.3.6.1.2.1.10.94.1.1.7.1.20',
  adslAturPerfPrev1DayESs => '1.3.6.1.2.1.10.94.1.1.7.1.21',
  adslAtucIntervalTable => '1.3.6.1.2.1.10.94.1.1.8',
  adslAtucIntervalEntry => '1.3.6.1.2.1.10.94.1.1.8.1',
  adslAtucIntervalNumber => '1.3.6.1.2.1.10.94.1.1.8.1.1',
  adslAtucIntervalLofs => '1.3.6.1.2.1.10.94.1.1.8.1.2',
  adslAtucIntervalLoss => '1.3.6.1.2.1.10.94.1.1.8.1.3',
  adslAtucIntervalLols => '1.3.6.1.2.1.10.94.1.1.8.1.4',
  adslAtucIntervalLprs => '1.3.6.1.2.1.10.94.1.1.8.1.5',
  adslAtucIntervalESs => '1.3.6.1.2.1.10.94.1.1.8.1.6',
  adslAtucIntervalInits => '1.3.6.1.2.1.10.94.1.1.8.1.7',
  adslAtucIntervalValidData => '1.3.6.1.2.1.10.94.1.1.8.1.8',
  adslAturIntervalTable => '1.3.6.1.2.1.10.94.1.1.9',
  adslAturIntervalEntry => '1.3.6.1.2.1.10.94.1.1.9.1',
  adslAturIntervalNumber => '1.3.6.1.2.1.10.94.1.1.9.1.1',
  adslAturIntervalLofs => '1.3.6.1.2.1.10.94.1.1.9.1.2',
  adslAturIntervalLoss => '1.3.6.1.2.1.10.94.1.1.9.1.3',
  adslAturIntervalLprs => '1.3.6.1.2.1.10.94.1.1.9.1.4',
  adslAturIntervalESs => '1.3.6.1.2.1.10.94.1.1.9.1.5',
  adslAturIntervalValidData => '1.3.6.1.2.1.10.94.1.1.9.1.6',
  adslAtucChanPerfDataTable => '1.3.6.1.2.1.10.94.1.1.10',
  adslAtucChanPerfDataEntry => '1.3.6.1.2.1.10.94.1.1.10.1',
  adslAtucChanReceivedBlks => '1.3.6.1.2.1.10.94.1.1.10.1.1',
  adslAtucChanTransmittedBlks => '1.3.6.1.2.1.10.94.1.1.10.1.2',
  adslAtucChanCorrectedBlks => '1.3.6.1.2.1.10.94.1.1.10.1.3',
  adslAtucChanUncorrectBlks => '1.3.6.1.2.1.10.94.1.1.10.1.4',
  adslAtucChanPerfValidIntervals => '1.3.6.1.2.1.10.94.1.1.10.1.5',
  adslAtucChanPerfInvalidIntervals => '1.3.6.1.2.1.10.94.1.1.10.1.6',
  adslAtucChanPerfCurr15MinTimeElapsed => '1.3.6.1.2.1.10.94.1.1.10.1.7',
  adslAtucChanPerfCurr15MinReceivedBlks => '1.3.6.1.2.1.10.94.1.1.10.1.8',
  adslAtucChanPerfCurr15MinTransmittedBlks => '1.3.6.1.2.1.10.94.1.1.10.1.9',
  adslAtucChanPerfCurr15MinCorrectedBlks => '1.3.6.1.2.1.10.94.1.1.10.1.10',
  adslAtucChanPerfCurr15MinUncorrectBlks => '1.3.6.1.2.1.10.94.1.1.10.1.11',
  adslAtucChanPerfCurr1DayTimeElapsed => '1.3.6.1.2.1.10.94.1.1.10.1.12',
  adslAtucChanPerfCurr1DayReceivedBlks => '1.3.6.1.2.1.10.94.1.1.10.1.13',
  adslAtucChanPerfCurr1DayTransmittedBlks => '1.3.6.1.2.1.10.94.1.1.10.1.14',
  adslAtucChanPerfCurr1DayCorrectedBlks => '1.3.6.1.2.1.10.94.1.1.10.1.15',
  adslAtucChanPerfCurr1DayUncorrectBlks => '1.3.6.1.2.1.10.94.1.1.10.1.16',
  adslAtucChanPerfPrev1DayMoniSecs => '1.3.6.1.2.1.10.94.1.1.10.1.17',
  adslAtucChanPerfPrev1DayReceivedBlks => '1.3.6.1.2.1.10.94.1.1.10.1.18',
  adslAtucChanPerfPrev1DayTransmittedBlks => '1.3.6.1.2.1.10.94.1.1.10.1.19',
  adslAtucChanPerfPrev1DayCorrectedBlks => '1.3.6.1.2.1.10.94.1.1.10.1.20',
  adslAtucChanPerfPrev1DayUncorrectBlks => '1.3.6.1.2.1.10.94.1.1.10.1.21',
  adslAturChanPerfDataTable => '1.3.6.1.2.1.10.94.1.1.11',
  adslAturChanPerfDataEntry => '1.3.6.1.2.1.10.94.1.1.11.1',
  adslAturChanReceivedBlks => '1.3.6.1.2.1.10.94.1.1.11.1.1',
  adslAturChanTransmittedBlks => '1.3.6.1.2.1.10.94.1.1.11.1.2',
  adslAturChanCorrectedBlks => '1.3.6.1.2.1.10.94.1.1.11.1.3',
  adslAturChanUncorrectBlks => '1.3.6.1.2.1.10.94.1.1.11.1.4',
  adslAturChanPerfValidIntervals => '1.3.6.1.2.1.10.94.1.1.11.1.5',
  adslAturChanPerfInvalidIntervals => '1.3.6.1.2.1.10.94.1.1.11.1.6',
  adslAturChanPerfCurr15MinTimeElapsed => '1.3.6.1.2.1.10.94.1.1.11.1.7',
  adslAturChanPerfCurr15MinReceivedBlks => '1.3.6.1.2.1.10.94.1.1.11.1.8',
  adslAturChanPerfCurr15MinTransmittedBlks => '1.3.6.1.2.1.10.94.1.1.11.1.9',
  adslAturChanPerfCurr15MinCorrectedBlks => '1.3.6.1.2.1.10.94.1.1.11.1.10',
  adslAturChanPerfCurr15MinUncorrectBlks => '1.3.6.1.2.1.10.94.1.1.11.1.11',
  adslAturChanPerfCurr1DayTimeElapsed => '1.3.6.1.2.1.10.94.1.1.11.1.12',
  adslAturChanPerfCurr1DayReceivedBlks => '1.3.6.1.2.1.10.94.1.1.11.1.13',
  adslAturChanPerfCurr1DayTransmittedBlks => '1.3.6.1.2.1.10.94.1.1.11.1.14',
  adslAturChanPerfCurr1DayCorrectedBlks => '1.3.6.1.2.1.10.94.1.1.11.1.15',
  adslAturChanPerfCurr1DayUncorrectBlks => '1.3.6.1.2.1.10.94.1.1.11.1.16',
  adslAturChanPerfPrev1DayMoniSecs => '1.3.6.1.2.1.10.94.1.1.11.1.17',
  adslAturChanPerfPrev1DayReceivedBlks => '1.3.6.1.2.1.10.94.1.1.11.1.18',
  adslAturChanPerfPrev1DayTransmittedBlks => '1.3.6.1.2.1.10.94.1.1.11.1.19',
  adslAturChanPerfPrev1DayCorrectedBlks => '1.3.6.1.2.1.10.94.1.1.11.1.20',
  adslAturChanPerfPrev1DayUncorrectBlks => '1.3.6.1.2.1.10.94.1.1.11.1.21',
  adslAtucChanIntervalTable => '1.3.6.1.2.1.10.94.1.1.12',
  adslAtucChanIntervalEntry => '1.3.6.1.2.1.10.94.1.1.12.1',
  adslAtucChanIntervalNumber => '1.3.6.1.2.1.10.94.1.1.12.1.1',
  adslAtucChanIntervalReceivedBlks => '1.3.6.1.2.1.10.94.1.1.12.1.2',
  adslAtucChanIntervalTransmittedBlks => '1.3.6.1.2.1.10.94.1.1.12.1.3',
  adslAtucChanIntervalCorrectedBlks => '1.3.6.1.2.1.10.94.1.1.12.1.4',
  adslAtucChanIntervalUncorrectBlks => '1.3.6.1.2.1.10.94.1.1.12.1.5',
  adslAtucChanIntervalValidData => '1.3.6.1.2.1.10.94.1.1.12.1.6',
  adslAturChanIntervalTable => '1.3.6.1.2.1.10.94.1.1.13',
  adslAturChanIntervalEntry => '1.3.6.1.2.1.10.94.1.1.13.1',
  adslAturChanIntervalNumber => '1.3.6.1.2.1.10.94.1.1.13.1.1',
  adslAturChanIntervalReceivedBlks => '1.3.6.1.2.1.10.94.1.1.13.1.2',
  adslAturChanIntervalTransmittedBlks => '1.3.6.1.2.1.10.94.1.1.13.1.3',
  adslAturChanIntervalCorrectedBlks => '1.3.6.1.2.1.10.94.1.1.13.1.4',
  adslAturChanIntervalUncorrectBlks => '1.3.6.1.2.1.10.94.1.1.13.1.5',
  adslAturChanIntervalValidData => '1.3.6.1.2.1.10.94.1.1.13.1.6',
  adslLineConfProfileTable => '1.3.6.1.2.1.10.94.1.1.14',
  adslLineConfProfileEntry => '1.3.6.1.2.1.10.94.1.1.14.1',
  adslLineConfProfileName => '1.3.6.1.2.1.10.94.1.1.14.1.1',
  adslAtucConfRateMode => '1.3.6.1.2.1.10.94.1.1.14.1.2',
  adslAtucConfRateModeDefinition => 'ADSL-LINE-MIB::adslAtucConfRateMode',
  adslAtucConfRateChanRatio => '1.3.6.1.2.1.10.94.1.1.14.1.3',
  adslAtucConfTargetSnrMgn => '1.3.6.1.2.1.10.94.1.1.14.1.4',
  adslAtucConfMaxSnrMgn => '1.3.6.1.2.1.10.94.1.1.14.1.5',
  adslAtucConfMinSnrMgn => '1.3.6.1.2.1.10.94.1.1.14.1.6',
  adslAtucConfDownshiftSnrMgn => '1.3.6.1.2.1.10.94.1.1.14.1.7',
  adslAtucConfUpshiftSnrMgn => '1.3.6.1.2.1.10.94.1.1.14.1.8',
  adslAtucConfMinUpshiftTime => '1.3.6.1.2.1.10.94.1.1.14.1.9',
  adslAtucConfMinDownshiftTime => '1.3.6.1.2.1.10.94.1.1.14.1.10',
  adslAtucChanConfFastMinTxRate => '1.3.6.1.2.1.10.94.1.1.14.1.11',
  adslAtucChanConfInterleaveMinTxRate => '1.3.6.1.2.1.10.94.1.1.14.1.12',
  adslAtucChanConfFastMaxTxRate => '1.3.6.1.2.1.10.94.1.1.14.1.13',
  adslAtucChanConfInterleaveMaxTxRate => '1.3.6.1.2.1.10.94.1.1.14.1.14',
  adslAtucChanConfMaxInterleaveDelay => '1.3.6.1.2.1.10.94.1.1.14.1.15',
  adslAturConfRateMode => '1.3.6.1.2.1.10.94.1.1.14.1.16',
  adslAturConfRateModeDefinition => 'ADSL-LINE-MIB::adslAturConfRateMode',
  adslAturConfRateChanRatio => '1.3.6.1.2.1.10.94.1.1.14.1.17',
  adslAturConfTargetSnrMgn => '1.3.6.1.2.1.10.94.1.1.14.1.18',
  adslAturConfMaxSnrMgn => '1.3.6.1.2.1.10.94.1.1.14.1.19',
  adslAturConfMinSnrMgn => '1.3.6.1.2.1.10.94.1.1.14.1.20',
  adslAturConfDownshiftSnrMgn => '1.3.6.1.2.1.10.94.1.1.14.1.21',
  adslAturConfUpshiftSnrMgn => '1.3.6.1.2.1.10.94.1.1.14.1.22',
  adslAturConfMinUpshiftTime => '1.3.6.1.2.1.10.94.1.1.14.1.23',
  adslAturConfMinDownshiftTime => '1.3.6.1.2.1.10.94.1.1.14.1.24',
  adslAturChanConfFastMinTxRate => '1.3.6.1.2.1.10.94.1.1.14.1.25',
  adslAturChanConfInterleaveMinTxRate => '1.3.6.1.2.1.10.94.1.1.14.1.26',
  adslAturChanConfFastMaxTxRate => '1.3.6.1.2.1.10.94.1.1.14.1.27',
  adslAturChanConfInterleaveMaxTxRate => '1.3.6.1.2.1.10.94.1.1.14.1.28',
  adslAturChanConfMaxInterleaveDelay => '1.3.6.1.2.1.10.94.1.1.14.1.29',
  adslLineConfProfileRowStatus => '1.3.6.1.2.1.10.94.1.1.14.1.30',
  adslLineAlarmConfProfileTable => '1.3.6.1.2.1.10.94.1.1.15',
  adslLineAlarmConfProfileEntry => '1.3.6.1.2.1.10.94.1.1.15.1',
  adslLineAlarmConfProfileName => '1.3.6.1.2.1.10.94.1.1.15.1.1',
  adslAtucThresh15MinLofs => '1.3.6.1.2.1.10.94.1.1.15.1.2',
  adslAtucThresh15MinLoss => '1.3.6.1.2.1.10.94.1.1.15.1.3',
  adslAtucThresh15MinLols => '1.3.6.1.2.1.10.94.1.1.15.1.4',
  adslAtucThresh15MinLprs => '1.3.6.1.2.1.10.94.1.1.15.1.5',
  adslAtucThresh15MinESs => '1.3.6.1.2.1.10.94.1.1.15.1.6',
  adslAtucThreshFastRateUp => '1.3.6.1.2.1.10.94.1.1.15.1.7',
  adslAtucThreshInterleaveRateUp => '1.3.6.1.2.1.10.94.1.1.15.1.8',
  adslAtucThreshFastRateDown => '1.3.6.1.2.1.10.94.1.1.15.1.9',
  adslAtucThreshInterleaveRateDown => '1.3.6.1.2.1.10.94.1.1.15.1.10',
  adslAtucInitFailureTrapEnable => '1.3.6.1.2.1.10.94.1.1.15.1.11',
  adslAtucInitFailureTrapEnableDefinition => 'ADSL-LINE-MIB::adslAtucInitFailureTrapEnable',
  adslAturThresh15MinLofs => '1.3.6.1.2.1.10.94.1.1.15.1.12',
  adslAturThresh15MinLoss => '1.3.6.1.2.1.10.94.1.1.15.1.13',
  adslAturThresh15MinLprs => '1.3.6.1.2.1.10.94.1.1.15.1.14',
  adslAturThresh15MinESs => '1.3.6.1.2.1.10.94.1.1.15.1.15',
  adslAturThreshFastRateUp => '1.3.6.1.2.1.10.94.1.1.15.1.16',
  adslAturThreshInterleaveRateUp => '1.3.6.1.2.1.10.94.1.1.15.1.17',
  adslAturThreshFastRateDown => '1.3.6.1.2.1.10.94.1.1.15.1.18',
  adslAturThreshInterleaveRateDown => '1.3.6.1.2.1.10.94.1.1.15.1.19',
  adslLineAlarmConfProfileRowStatus => '1.3.6.1.2.1.10.94.1.1.15.1.20',
  adslLCSMib => '1.3.6.1.2.1.10.94.1.1.16',
  adslTraps => '1.3.6.1.2.1.10.94.1.2',
  adslAtucTraps => '1.3.6.1.2.1.10.94.1.2.1',
  adslAturTraps => '1.3.6.1.2.1.10.94.1.2.2',
  adslConformance => '1.3.6.1.2.1.10.94.1.3',
  adslGroups => '1.3.6.1.2.1.10.94.1.3.1',
  adslCompliances => '1.3.6.1.2.1.10.94.1.3.2',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'ADSL-LINE-MIB'} = {
  adslAtucInitFailureTrapEnable => {
    '1' => 'enable',
    '2' => 'disable',
  },
  adslAtucConfRateMode => {
    '1' => 'fixed',
    '2' => 'adaptAtStartup',
    '3' => 'adaptAtRuntime',
  },
  adslLineType => {
    '1' => 'noChannel',
    '2' => 'fastOnly',
    '3' => 'interleavedOnly',
    '4' => 'fastOrInterleaved',
    '5' => 'fastAndInterleaved',
  },
  adslAturConfRateMode => {
    '1' => 'fixed',
    '2' => 'adaptAtStartup',
    '3' => 'adaptAtRuntime',
  },
  adslLineCoding => {
    '1' => 'other',
    '2' => 'dmt',
    '3' => 'cap',
    '4' => 'qam',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::AIRESPACESWITCHINGMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'AIRESPACE-SWITCHING-MIB'} = {
  url => '',
  name => 'AIRESPACE-SWITCHING-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'AIRESPACE-SWITCHING-MIB'} =
  '1.3.6.1.4.1.14179.1';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'AIRESPACE-SWITCHING-MIB'} = {
  'bsnSwitching' => '1.3.6.1.4.1.14179.1',
  'agentInfoGroup' => '1.3.6.1.4.1.14179.1.1',
  'agentInventoryGroup' => '1.3.6.1.4.1.14179.1.1.1',
  'agentInventorySysDescription' => '1.3.6.1.4.1.14179.1.1.1.1',
  'agentInventoryMachineType' => '1.3.6.1.4.1.14179.1.1.1.2',
  'agentInventoryMachineModel' => '1.3.6.1.4.1.14179.1.1.1.3',
  'agentInventorySerialNumber' => '1.3.6.1.4.1.14179.1.1.1.4',
  'agentInventoryMaintenanceLevel' => '1.3.6.1.4.1.14179.1.1.1.6',
  'agentInventoryBurnedInMacAddress' => '1.3.6.1.4.1.14179.1.1.1.9',
  'agentInventoryOperatingSystem' => '1.3.6.1.4.1.14179.1.1.1.10',
  'agentInventoryManufacturerName' => '1.3.6.1.4.1.14179.1.1.1.12',
  'agentInventoryProductName' => '1.3.6.1.4.1.14179.1.1.1.13',
  'agentInventoryProductVersion' => '1.3.6.1.4.1.14179.1.1.1.14',
  'agentInventoryIsGigECardPresent' => '1.3.6.1.4.1.14179.1.1.1.15',
  'agentInventoryIsCryptoCardPresent' => '1.3.6.1.4.1.14179.1.1.1.16',
  'agentInventoryIsForeignAPSupported' => '1.3.6.1.4.1.14179.1.1.1.17',
  'agentInventoryMaxNumberOfAPsSupported' => '1.3.6.1.4.1.14179.1.1.1.18',
  'agentInventoryIsCryptoCard2Present' => '1.3.6.1.4.1.14179.1.1.1.19',
  'agentInventoryFipsModeEnabled' => '1.3.6.1.4.1.14179.1.1.1.20',
  'agentTrapLogGroup' => '1.3.6.1.4.1.14179.1.1.2',
  'agentTrapLogTotal' => '1.3.6.1.4.1.14179.1.1.2.1',
  'agentTrapLogTotalSinceLastViewed' => '1.3.6.1.4.1.14179.1.1.2.3',
  'agentTrapLogTable' => '1.3.6.1.4.1.14179.1.1.2.4',
  'agentTrapLogEntry' => '1.3.6.1.4.1.14179.1.1.2.4.1',
  'agentTrapLogIndex' => '1.3.6.1.4.1.14179.1.1.2.4.1.1',
  'agentTrapLogSystemTime' => '1.3.6.1.4.1.14179.1.1.2.4.1.2',
  'agentTrapLogTrap' => '1.3.6.1.4.1.14179.1.1.2.4.1.22',
  'agentRadioUpDownTrapCount' => '1.3.6.1.4.1.14179.1.1.2.5',
  'agentApAssociateDisassociateTrapCount' => '1.3.6.1.4.1.14179.1.1.2.6',
  'agentApLoadProfileFailTrapCount' => '1.3.6.1.4.1.14179.1.1.2.7',
  'agentApNoiseProfileFailTrapCount' => '1.3.6.1.4.1.14179.1.1.2.8',
  'agentApInterferenceProfileFailTrapCount' => '1.3.6.1.4.1.14179.1.1.2.9',
  'agentApCoverageProfileFailTrapCount' => '1.3.6.1.4.1.14179.1.1.2.10',
  'agentSwitchInfoGroup' => '1.3.6.1.4.1.14179.1.1.3',
  'agentSwitchInfoLwappTransportMode' => '1.3.6.1.4.1.14179.1.1.3.1',
  'agentSwitchInfoPowerSupply1Present' => '1.3.6.1.4.1.14179.1.1.3.2',
  'agentSwitchInfoPowerSupply1PresentDefinition' => {
    '0' => 'false',
    '1' => 'true',
  },
  'agentSwitchInfoPowerSupply1Operational' => '1.3.6.1.4.1.14179.1.1.3.3',
  'agentSwitchInfoPowerSupply1OperationalDefinition' => {
    '0' => 'false',
    '1' => 'true',
  },
  'agentSwitchInfoPowerSupply2Present' => '1.3.6.1.4.1.14179.1.1.3.4',
  'agentSwitchInfoPowerSupply2PresentDefinition' => {
    '0' => 'false',
    '1' => 'true',
  },
  'agentSwitchInfoPowerSupply2Operational' => '1.3.6.1.4.1.14179.1.1.3.5',
  'agentSwitchInfoPowerSupply2OperationalDefinition' => {
    '0' => 'false',
    '1' => 'true',
  },
  'agentProductGroup' => '1.3.6.1.4.1.14179.1.1.4',
  'productGroup1' => '1.3.6.1.4.1.14179.1.1.4.1',
  'productGroup2' => '1.3.6.1.4.1.14179.1.1.4.2',
  'productGroup3' => '1.3.6.1.4.1.14179.1.1.4.3',
  'productGroup4' => '1.3.6.1.4.1.14179.1.1.4.4',
  'agentResourceInfoGroup' => '1.3.6.1.4.1.14179.1.1.5',
  'agentCurrentCPUUtilization' => '1.3.6.1.4.1.14179.1.1.5.1.0',
  'agentTotalMemory' => '1.3.6.1.4.1.14179.1.1.5.2.0',
  'agentFreeMemory' => '1.3.6.1.4.1.14179.1.1.5.3.0',
  'agentWcpInfoGroup' => '1.3.6.1.4.1.14179.1.1.6',
  'agentWcpDeviceName' => '1.3.6.1.4.1.14179.1.1.6.1',
  'agentWcpSlotNumber' => '1.3.6.1.4.1.14179.1.1.6.2',
  'agentWcpPortNumber' => '1.3.6.1.4.1.14179.1.1.6.3',
  'agentWcpPeerPortNumber' => '1.3.6.1.4.1.14179.1.1.6.4',
  'agentWcpPeerIpAddress' => '1.3.6.1.4.1.14179.1.1.6.5',
  'agentWcpControllerTableChecksum' => '1.3.6.1.4.1.14179.1.1.6.6',
  'agentWcpControllerInfoTable' => '1.3.6.1.4.1.14179.1.1.6.7',
  'agentWcpControllerInfoEntry' => '1.3.6.1.4.1.14179.1.1.6.7.1',
  'agentWcpControllerInfoSlotNumber' => '1.3.6.1.4.1.14179.1.1.6.7.1.1',
  'agentWcpControllerInfoPortNumber' => '1.3.6.1.4.1.14179.1.1.6.7.1.2',
  'agentWcpControllerInfoIpAddress' => '1.3.6.1.4.1.14179.1.1.6.7.1.10',
  'agentConfigGroup' => '1.3.6.1.4.1.14179.1.2',
  'agentCLIConfigGroup' => '1.3.6.1.4.1.14179.1.2.1',
  'agentLoginSessionTable' => '1.3.6.1.4.1.14179.1.2.1.1',
  'agentLoginSessionEntry' => '1.3.6.1.4.1.14179.1.2.1.1.1',
  'agentLoginSessionIndex' => '1.3.6.1.4.1.14179.1.2.1.1.1.1',
  'agentLoginSessionUserName' => '1.3.6.1.4.1.14179.1.2.1.1.1.2',
  'agentLoginSessionIPAddress' => '1.3.6.1.4.1.14179.1.2.1.1.1.3',
  'agentLoginSessionConnectionType' => '1.3.6.1.4.1.14179.1.2.1.1.1.4',
  'agentLoginSessionIdleTime' => '1.3.6.1.4.1.14179.1.2.1.1.1.5',
  'agentLoginSessionSessionTime' => '1.3.6.1.4.1.14179.1.2.1.1.1.6',
  'agentLoginSessionStatus' => '1.3.6.1.4.1.14179.1.2.1.1.1.26',
  'agentTelnetConfigGroup' => '1.3.6.1.4.1.14179.1.2.1.2',
  'agentTelnetLoginTimeout' => '1.3.6.1.4.1.14179.1.2.1.2.1',
  'agentTelnetMaxSessions' => '1.3.6.1.4.1.14179.1.2.1.2.2',
  'agentTelnetAllowNewMode' => '1.3.6.1.4.1.14179.1.2.1.2.3',
  'agentSSHAllowNewMode' => '1.3.6.1.4.1.14179.1.2.1.2.4',
  'agentSerialGroup' => '1.3.6.1.4.1.14179.1.2.1.5',
  'agentSerialTimeout' => '1.3.6.1.4.1.14179.1.2.1.5.1',
  'agentSerialBaudrate' => '1.3.6.1.4.1.14179.1.2.1.5.2',
  'agentSerialCharacterSize' => '1.3.6.1.4.1.14179.1.2.1.5.3',
  'agentSerialHWFlowControlMode' => '1.3.6.1.4.1.14179.1.2.1.5.4',
  'agentSerialStopBits' => '1.3.6.1.4.1.14179.1.2.1.5.5',
  'agentSerialParityType' => '1.3.6.1.4.1.14179.1.2.1.5.6',
  'agentLagConfigGroup' => '1.3.6.1.4.1.14179.1.2.2',
  'agentLagConfigCreate' => '1.3.6.1.4.1.14179.1.2.2.1',
  'agentLagSummaryConfigTable' => '1.3.6.1.4.1.14179.1.2.2.2',
  'agentLagSummaryConfigEntry' => '1.3.6.1.4.1.14179.1.2.2.2.1',
  'agentLagSummaryName' => '1.3.6.1.4.1.14179.1.2.2.2.1.1',
  'agentLagSummaryLagIndex' => '1.3.6.1.4.1.14179.1.2.2.2.1.2',
  'agentLagSummaryFlushTimer' => '1.3.6.1.4.1.14179.1.2.2.2.1.3',
  'agentLagSummaryLinkTrap' => '1.3.6.1.4.1.14179.1.2.2.2.1.4',
  'agentLagSummaryAdminMode' => '1.3.6.1.4.1.14179.1.2.2.2.1.5',
  'agentLagSummaryStpMode' => '1.3.6.1.4.1.14179.1.2.2.2.1.6',
  'agentLagSummaryAddPort' => '1.3.6.1.4.1.14179.1.2.2.2.1.7',
  'agentLagSummaryDeletePort' => '1.3.6.1.4.1.14179.1.2.2.2.1.8',
  'agentLagSummaryPortsBitMask' => '1.3.6.1.4.1.14179.1.2.2.2.1.9',
  'agentLagSummaryStatus' => '1.3.6.1.4.1.14179.1.2.2.2.1.30',
  'agentLagDetailedConfigTable' => '1.3.6.1.4.1.14179.1.2.2.3',
  'agentLagDetailedConfigEntry' => '1.3.6.1.4.1.14179.1.2.2.3.1',
  'agentLagDetailedLagIndex' => '1.3.6.1.4.1.14179.1.2.2.3.1.1',
  'agentLagDetailedIfIndex' => '1.3.6.1.4.1.14179.1.2.2.3.1.2',
  'agentLagDetailedPortSpeed' => '1.3.6.1.4.1.14179.1.2.2.3.1.22',
  'agentLagConfigMode' => '1.3.6.1.4.1.14179.1.2.2.4',
  'agentNetworkConfigGroup' => '1.3.6.1.4.1.14179.1.2.3',
  'agentNetworkIPAddress' => '1.3.6.1.4.1.14179.1.2.3.1',
  'agentNetworkSubnetMask' => '1.3.6.1.4.1.14179.1.2.3.2',
  'agentNetworkDefaultGateway' => '1.3.6.1.4.1.14179.1.2.3.3',
  'agentNetworkBurnedInMacAddress' => '1.3.6.1.4.1.14179.1.2.3.4',
  'agentNetworkConfigProtocol' => '1.3.6.1.4.1.14179.1.2.3.7',
  'agentNetworkWebMode' => '1.3.6.1.4.1.14179.1.2.3.8',
  'agentNetworkSecureWebMode' => '1.3.6.1.4.1.14179.1.2.3.9',
  'agentNetworkMulticastMode' => '1.3.6.1.4.1.14179.1.2.3.10',
  'agentNetworkDsPortNumber' => '1.3.6.1.4.1.14179.1.2.3.11',
  'agentNetworkUserIdleTimeout' => '1.3.6.1.4.1.14179.1.2.3.12',
  'agentNetworkArpTimeout' => '1.3.6.1.4.1.14179.1.2.3.13',
  'agentNetworkManagementVlan' => '1.3.6.1.4.1.14179.1.2.3.14',
  'agentNetworkGvrpStatus' => '1.3.6.1.4.1.14179.1.2.3.15',
  'agentNetworkAllowMgmtViaWireless' => '1.3.6.1.4.1.14179.1.2.3.16',
  'agentNetworkBroadcastSsidMode' => '1.3.6.1.4.1.14179.1.2.3.17',
  'agentNetworkSecureWebPassword' => '1.3.6.1.4.1.14179.1.2.3.18',
  'agentNetworkWebAdminCertType' => '1.3.6.1.4.1.14179.1.2.3.19',
  'agentNetworkWebAdminCertRegenerateCmdInvoke' => '1.3.6.1.4.1.14179.1.2.3.20',
  'agentNetworkWebAuthCertType' => '1.3.6.1.4.1.14179.1.2.3.21',
  'agentNetworkWebAuthCertRegenerateCmdInvoke' => '1.3.6.1.4.1.14179.1.2.3.22',
  'agentNetworkRouteConfigTable' => '1.3.6.1.4.1.14179.1.2.3.23',
  'agentNetworkRouteConfigEntry' => '1.3.6.1.4.1.14179.1.2.3.23.1',
  'agentNetworkRouteIPAddress' => '1.3.6.1.4.1.14179.1.2.3.23.1.1',
  'agentNetworkRouteIPNetmask' => '1.3.6.1.4.1.14179.1.2.3.23.1.2',
  'agentNetworkRouteGateway' => '1.3.6.1.4.1.14179.1.2.3.23.1.3',
  'agentNetworkRouteStatus' => '1.3.6.1.4.1.14179.1.2.3.23.1.23',
  'agentNetworkPeerToPeerBlockingMode' => '1.3.6.1.4.1.14179.1.2.3.24',
  'agentNetworkMulticastGroupAddress' => '1.3.6.1.4.1.14179.1.2.3.25',
  'agentServicePortConfigGroup' => '1.3.6.1.4.1.14179.1.2.4',
  'agentServicePortIPAddress' => '1.3.6.1.4.1.14179.1.2.4.1',
  'agentServicePortSubnetMask' => '1.3.6.1.4.1.14179.1.2.4.2',
  'agentServicePortDefaultGateway' => '1.3.6.1.4.1.14179.1.2.4.3',
  'agentServicePortBurnedInMacAddress' => '1.3.6.1.4.1.14179.1.2.4.4',
  'agentServicePortConfigProtocol' => '1.3.6.1.4.1.14179.1.2.4.5',
  'agentSnmpConfigGroup' => '1.3.6.1.4.1.14179.1.2.5',
  'agentSnmpTrapPortNumber' => '1.3.6.1.4.1.14179.1.2.5.1',
  'agentSnmpVersion1Status' => '1.3.6.1.4.1.14179.1.2.5.2',
  'agentSnmpVersion2cStatus' => '1.3.6.1.4.1.14179.1.2.5.3',
  'agentSnmpCommunityConfigTable' => '1.3.6.1.4.1.14179.1.2.5.5',
  'agentSnmpCommunityConfigEntry' => '1.3.6.1.4.1.14179.1.2.5.5.1',
  'agentSnmpCommunityName' => '1.3.6.1.4.1.14179.1.2.5.5.1.1',
  'agentSnmpCommunityIPAddress' => '1.3.6.1.4.1.14179.1.2.5.5.1.2',
  'agentSnmpCommunityIPMask' => '1.3.6.1.4.1.14179.1.2.5.5.1.3',
  'agentSnmpCommunityAccessMode' => '1.3.6.1.4.1.14179.1.2.5.5.1.4',
  'agentSnmpCommunityEnabled' => '1.3.6.1.4.1.14179.1.2.5.5.1.5',
  'agentSnmpCommunityStatus' => '1.3.6.1.4.1.14179.1.2.5.5.1.25',
  'agentSnmpTrapReceiverConfigTable' => '1.3.6.1.4.1.14179.1.2.5.6',
  'agentSnmpTrapReceiverConfigEntry' => '1.3.6.1.4.1.14179.1.2.5.6.1',
  'agentSnmpTrapReceiverName' => '1.3.6.1.4.1.14179.1.2.5.6.1.1',
  'agentSnmpTrapReceiverIPAddress' => '1.3.6.1.4.1.14179.1.2.5.6.1.2',
  'agentSnmpTrapReceiverEnabled' => '1.3.6.1.4.1.14179.1.2.5.6.1.3',
  'agentSnmpTrapReceiverStatus' => '1.3.6.1.4.1.14179.1.2.5.6.1.23',
  'agentSnmpTrapFlagsConfigGroup' => '1.3.6.1.4.1.14179.1.2.5.7',
  'agentSnmpAuthenticationTrapFlag' => '1.3.6.1.4.1.14179.1.2.5.7.1',
  'agentSnmpLinkUpDownTrapFlag' => '1.3.6.1.4.1.14179.1.2.5.7.2',
  'agentSnmpMultipleUsersTrapFlag' => '1.3.6.1.4.1.14179.1.2.5.7.3',
  'agentSnmpSpanningTreeTrapFlag' => '1.3.6.1.4.1.14179.1.2.5.7.4',
  'agentSnmpBroadcastStormTrapFlag' => '1.3.6.1.4.1.14179.1.2.5.7.5',
  'agentSnmpV3ConfigGroup' => '1.3.6.1.4.1.14179.1.2.6',
  'agentSnmpVersion3Status' => '1.3.6.1.4.1.14179.1.2.6.1',
  'agentSnmpV3UserConfigTable' => '1.3.6.1.4.1.14179.1.2.6.2',
  'agentSnmpV3UserConfigEntry' => '1.3.6.1.4.1.14179.1.2.6.2.1',
  'agentSnmpV3UserName' => '1.3.6.1.4.1.14179.1.2.6.2.1.1',
  'agentSnmpV3UserAccessMode' => '1.3.6.1.4.1.14179.1.2.6.2.1.2',
  'agentSnmpV3UserAuthenticationType' => '1.3.6.1.4.1.14179.1.2.6.2.1.3',
  'agentSnmpV3UserEncryptionType' => '1.3.6.1.4.1.14179.1.2.6.2.1.4',
  'agentSnmpV3UserAuthenticationPassword' => '1.3.6.1.4.1.14179.1.2.6.2.1.5',
  'agentSnmpV3UserEncryptionPassword' => '1.3.6.1.4.1.14179.1.2.6.2.1.6',
  'agentSnmpV3UserStatus' => '1.3.6.1.4.1.14179.1.2.6.2.1.26',
  'agentSpanningTreeConfigGroup' => '1.3.6.1.4.1.14179.1.2.7',
  'agentSpanningTreeMode' => '1.3.6.1.4.1.14179.1.2.7.1',
  'agentSwitchConfigGroup' => '1.3.6.1.4.1.14179.1.2.8',
  'agentSwitchBroadcastControlMode' => '1.3.6.1.4.1.14179.1.2.8.2',
  'agentSwitchDot3FlowControlMode' => '1.3.6.1.4.1.14179.1.2.8.3',
  'agentSwitchAddressAgingTimeoutTable' => '1.3.6.1.4.1.14179.1.2.8.4',
  'agentSwitchAddressAgingTimeoutEntry' => '1.3.6.1.4.1.14179.1.2.8.4.1',
  'agentSwitchAddressAgingTimeout' => '1.3.6.1.4.1.14179.1.2.8.4.1.10',
  'agentSwitchLwappTransportMode' => '1.3.6.1.4.1.14179.1.2.8.5',
  'agentTransferConfigGroup' => '1.3.6.1.4.1.14179.1.2.9',
  'agentTransferUploadGroup' => '1.3.6.1.4.1.14179.1.2.9.1',
  'agentTransferUploadMode' => '1.3.6.1.4.1.14179.1.2.9.1.1',
  'agentTransferUploadServerIP' => '1.3.6.1.4.1.14179.1.2.9.1.2',
  'agentTransferUploadPath' => '1.3.6.1.4.1.14179.1.2.9.1.3',
  'agentTransferUploadFilename' => '1.3.6.1.4.1.14179.1.2.9.1.4',
  'agentTransferUploadDataType' => '1.3.6.1.4.1.14179.1.2.9.1.5',
  'agentTransferUploadStart' => '1.3.6.1.4.1.14179.1.2.9.1.6',
  'agentTransferUploadStatus' => '1.3.6.1.4.1.14179.1.2.9.1.7',
  'agentTransferDownloadGroup' => '1.3.6.1.4.1.14179.1.2.9.2',
  'agentTransferDownloadMode' => '1.3.6.1.4.1.14179.1.2.9.2.1',
  'agentTransferDownloadServerIP' => '1.3.6.1.4.1.14179.1.2.9.2.2',
  'agentTransferDownloadPath' => '1.3.6.1.4.1.14179.1.2.9.2.3',
  'agentTransferDownloadFilename' => '1.3.6.1.4.1.14179.1.2.9.2.4',
  'agentTransferDownloadDataType' => '1.3.6.1.4.1.14179.1.2.9.2.5',
  'agentTransferDownloadStart' => '1.3.6.1.4.1.14179.1.2.9.2.6',
  'agentTransferDownloadStatus' => '1.3.6.1.4.1.14179.1.2.9.2.7',
  'agentTransferDownloadTftpMaxRetries' => '1.3.6.1.4.1.14179.1.2.9.2.8',
  'agentTransferDownloadTftpTimeout' => '1.3.6.1.4.1.14179.1.2.9.2.9',
  'agentTransferConfigurationFileEncryption' => '1.3.6.1.4.1.14179.1.2.9.3',
  'agentTransferConfigurationFileEncryptionKey' => '1.3.6.1.4.1.14179.1.2.9.4',
  'agentDot3adAggPortTable' => '1.3.6.1.4.1.14179.1.2.11',
  'agentDot3adAggPortEntry' => '1.3.6.1.4.1.14179.1.2.11.1',
  'agentDot3adAggPort' => '1.3.6.1.4.1.14179.1.2.11.1.1',
  'agentDot3adAggPortLACPMode' => '1.3.6.1.4.1.14179.1.2.11.1.21',
  'agentPortConfigTable' => '1.3.6.1.4.1.14179.1.2.12',
  'agentPortConfigEntry' => '1.3.6.1.4.1.14179.1.2.12.1',
  'agentPortDot1dBasePort' => '1.3.6.1.4.1.14179.1.2.12.1.1',
  'agentPortIfIndex' => '1.3.6.1.4.1.14179.1.2.12.1.2',
  'agentPortIanaType' => '1.3.6.1.4.1.14179.1.2.12.1.3',
  'agentPortSTPMode' => '1.3.6.1.4.1.14179.1.2.12.1.4',
  'agentPortSTPState' => '1.3.6.1.4.1.14179.1.2.12.1.5',
  'agentPortAdminMode' => '1.3.6.1.4.1.14179.1.2.12.1.6',
  'agentPortPhysicalMode' => '1.3.6.1.4.1.14179.1.2.12.1.7',
  'agentPortPhysicalStatus' => '1.3.6.1.4.1.14179.1.2.12.1.8',
  'agentPortLinkTrapMode' => '1.3.6.1.4.1.14179.1.2.12.1.9',
  'agentPortClearStats' => '1.3.6.1.4.1.14179.1.2.12.1.10',
  'agentPortDefaultType' => '1.3.6.1.4.1.14179.1.2.12.1.11',
  'agentPortType' => '1.3.6.1.4.1.14179.1.2.12.1.12',
  'agentPortAutoNegAdminStatus' => '1.3.6.1.4.1.14179.1.2.12.1.13',
  'agentPortDot3FlowControlMode' => '1.3.6.1.4.1.14179.1.2.12.1.14',
  'agentPortPowerMode' => '1.3.6.1.4.1.14179.1.2.12.1.15',
  'agentPortGvrpStatus' => '1.3.6.1.4.1.14179.1.2.12.1.16',
  'agentPortGarpJoinTime' => '1.3.6.1.4.1.14179.1.2.12.1.17',
  'agentPortGarpLeaveTime' => '1.3.6.1.4.1.14179.1.2.12.1.18',
  'agentPortGarpLeaveAllTime' => '1.3.6.1.4.1.14179.1.2.12.1.19',
  'agentPortMirrorMode' => '1.3.6.1.4.1.14179.1.2.12.1.20',
  'agentPortMulticastApplianceMode' => '1.3.6.1.4.1.14179.1.2.12.1.21',
  'agentPortOperationalStatus' => '1.3.6.1.4.1.14179.1.2.12.1.40',
  'agentInterfaceConfigTable' => '1.3.6.1.4.1.14179.1.2.13',
  'agentInterfaceConfigEntry' => '1.3.6.1.4.1.14179.1.2.13.1',
  'agentInterfaceName' => '1.3.6.1.4.1.14179.1.2.13.1.1',
  'agentInterfaceVlanId' => '1.3.6.1.4.1.14179.1.2.13.1.2',
  'agentInterfaceType' => '1.3.6.1.4.1.14179.1.2.13.1.3',
  'agentInterfaceMacAddress' => '1.3.6.1.4.1.14179.1.2.13.1.4',
  'agentInterfaceIPAddress' => '1.3.6.1.4.1.14179.1.2.13.1.5',
  'agentInterfaceIPNetmask' => '1.3.6.1.4.1.14179.1.2.13.1.6',
  'agentInterfaceIPGateway' => '1.3.6.1.4.1.14179.1.2.13.1.7',
  'agentInterfacePortNo' => '1.3.6.1.4.1.14179.1.2.13.1.8',
  'agentInterfacePrimaryDhcpAddress' => '1.3.6.1.4.1.14179.1.2.13.1.9',
  'agentInterfaceSecondaryDhcpAddress' => '1.3.6.1.4.1.14179.1.2.13.1.10',
  'agentInterfaceDhcpProtocol' => '1.3.6.1.4.1.14179.1.2.13.1.11',
  'agentInterfaceDnsHostName' => '1.3.6.1.4.1.14179.1.2.13.1.12',
  'agentInterfaceAclName' => '1.3.6.1.4.1.14179.1.2.13.1.13',
  'agentInterfaceAPManagementFeature' => '1.3.6.1.4.1.14179.1.2.13.1.14',
  'agentInterfaceActivePortNo' => '1.3.6.1.4.1.14179.1.2.13.1.15',
  'agentInterfaceBackupPortNo' => '1.3.6.1.4.1.14179.1.2.13.1.16',
  'agentInterfaceVlanQuarantine' => '1.3.6.1.4.1.14179.1.2.13.1.17',
  'agentInterfaceRowStatus' => '1.3.6.1.4.1.14179.1.2.13.1.31',
  'agentNtpConfigGroup' => '1.3.6.1.4.1.14179.1.2.14',
  'agentNtpPollingInterval' => '1.3.6.1.4.1.14179.1.2.14.1',
  'agentNtpServerTable' => '1.3.6.1.4.1.14179.1.2.14.2',
  'agentNtpServerEntry' => '1.3.6.1.4.1.14179.1.2.14.2.1',
  'agentNtpServerIndex' => '1.3.6.1.4.1.14179.1.2.14.2.1.1',
  'agentNtpServerAddress' => '1.3.6.1.4.1.14179.1.2.14.2.1.2',
  'agentNtpServerRowStatus' => '1.3.6.1.4.1.14179.1.2.14.2.1.20',
  'agentDhcpConfigGroup' => '1.3.6.1.4.1.14179.1.2.15',
  'agentDhcpScopeTable' => '1.3.6.1.4.1.14179.1.2.15.1',
  'agentDhcpScopeEntry' => '1.3.6.1.4.1.14179.1.2.15.1.1',
  'agentDhcpScopeIndex' => '1.3.6.1.4.1.14179.1.2.15.1.1.1',
  'agentDhcpScopeName' => '1.3.6.1.4.1.14179.1.2.15.1.1.2',
  'agentDhcpScopeLeaseTime' => '1.3.6.1.4.1.14179.1.2.15.1.1.3',
  'agentDhcpScopeNetwork' => '1.3.6.1.4.1.14179.1.2.15.1.1.4',
  'agentDhcpScopeNetmask' => '1.3.6.1.4.1.14179.1.2.15.1.1.5',
  'agentDhcpScopePoolStartAddress' => '1.3.6.1.4.1.14179.1.2.15.1.1.6',
  'agentDhcpScopePoolEndAddress' => '1.3.6.1.4.1.14179.1.2.15.1.1.7',
  'agentDhcpScopeDefaultRouterAddress1' => '1.3.6.1.4.1.14179.1.2.15.1.1.8',
  'agentDhcpScopeDefaultRouterAddress2' => '1.3.6.1.4.1.14179.1.2.15.1.1.9',
  'agentDhcpScopeDefaultRouterAddress3' => '1.3.6.1.4.1.14179.1.2.15.1.1.10',
  'agentDhcpScopeDnsDomainName' => '1.3.6.1.4.1.14179.1.2.15.1.1.11',
  'agentDhcpScopeDnsServerAddress1' => '1.3.6.1.4.1.14179.1.2.15.1.1.12',
  'agentDhcpScopeDnsServerAddress2' => '1.3.6.1.4.1.14179.1.2.15.1.1.13',
  'agentDhcpScopeDnsServerAddress3' => '1.3.6.1.4.1.14179.1.2.15.1.1.14',
  'agentDhcpScopeNetbiosNameServerAddress1' => '1.3.6.1.4.1.14179.1.2.15.1.1.15',
  'agentDhcpScopeNetbiosNameServerAddress2' => '1.3.6.1.4.1.14179.1.2.15.1.1.16',
  'agentDhcpScopeNetbiosNameServerAddress3' => '1.3.6.1.4.1.14179.1.2.15.1.1.17',
  'agentDhcpScopeState' => '1.3.6.1.4.1.14179.1.2.15.1.1.18',
  'agentDhcpScopeRowStatus' => '1.3.6.1.4.1.14179.1.2.15.1.1.30',
  'agentSystemGroup' => '1.3.6.1.4.1.14179.1.3',
  'agentSaveConfig' => '1.3.6.1.4.1.14179.1.3.1',
  'agentClearConfig' => '1.3.6.1.4.1.14179.1.3.2',
  'agentClearLags' => '1.3.6.1.4.1.14179.1.3.3',
  'agentClearLoginSessions' => '1.3.6.1.4.1.14179.1.3.4',
  'agentClearPortStats' => '1.3.6.1.4.1.14179.1.3.6',
  'agentClearSwitchStats' => '1.3.6.1.4.1.14179.1.3.7',
  'agentClearTrapLog' => '1.3.6.1.4.1.14179.1.3.8',
  'agentResetSystem' => '1.3.6.1.4.1.14179.1.3.10',
  'stats' => '1.3.6.1.4.1.14179.1.4',
  'portStatsTable' => '1.3.6.1.4.1.14179.1.4.1',
  'portStatsEntry' => '1.3.6.1.4.1.14179.1.4.1.1',
  'portStatsIndex' => '1.3.6.1.4.1.14179.1.4.1.1.1',
  'portStatsPktsTx64Octets' => '1.3.6.1.4.1.14179.1.4.1.1.2',
  'portStatsPktsTx65to127Octets' => '1.3.6.1.4.1.14179.1.4.1.1.3',
  'portStatsPktsTx128to255Octets' => '1.3.6.1.4.1.14179.1.4.1.1.4',
  'portStatsPktsTx256to511Octets' => '1.3.6.1.4.1.14179.1.4.1.1.5',
  'portStatsPktsTx512to1023Octets' => '1.3.6.1.4.1.14179.1.4.1.1.6',
  'portStatsPktsTx1024to1518Octets' => '1.3.6.1.4.1.14179.1.4.1.1.7',
  'portStatsPktsRx1519to1530Octets' => '1.3.6.1.4.1.14179.1.4.1.1.8',
  'portStatsPktsTx1519to1530Octets' => '1.3.6.1.4.1.14179.1.4.1.1.9',
  'portStatsPktsTxOversizeOctets' => '1.3.6.1.4.1.14179.1.4.1.1.30',
  'switchingTraps' => '1.3.6.1.4.1.14179.1.50',
  'multipleUsersTrap' => '1.3.6.1.4.1.14179.1.50.1',
  'broadcastStormStartTrap' => '1.3.6.1.4.1.14179.1.50.2',
  'broadcastStormEndTrap' => '1.3.6.1.4.1.14179.1.50.3',
  'linkFailureTrap' => '1.3.6.1.4.1.14179.1.50.4',
  'vlanRequestFailureTrap' => '1.3.6.1.4.1.14179.1.50.5',
  'vlanDeleteLastTrap' => '1.3.6.1.4.1.14179.1.50.6',
  'vlanDefaultCfgFailureTrap' => '1.3.6.1.4.1.14179.1.50.7',
  'vlanRestoreFailureTrap' => '1.3.6.1.4.1.14179.1.50.8',
  'fanFailureTrap' => '1.3.6.1.4.1.14179.1.50.9',
  'stpInstanceNewRootTrap' => '1.3.6.1.4.1.14179.1.50.10',
  'stpInstanceTopologyChangeTrap' => '1.3.6.1.4.1.14179.1.50.11',
  'powerSupplyStatusChangeTrap' => '1.3.6.1.4.1.14179.1.50.12',
  'bsnSwitchingGroups' => '1.3.6.1.4.1.14179.1.51',
  'bsnSwitchingAgentInfoGroup' => '1.3.6.1.4.1.14179.1.51.1',
  'bsnSwitchingAgentConfigGroup' => '1.3.6.1.4.1.14179.1.51.2',
  'bsnSwitchingAgentSystemGroup' => '1.3.6.1.4.1.14179.1.51.3',
  'bsnSwitchingAgentStatsGroup' => '1.3.6.1.4.1.14179.1.51.4',
  'bsnSwitchingObsGroup' => '1.3.6.1.4.1.14179.1.51.5',
  'bsnSwitchingTrap' => '1.3.6.1.4.1.14179.1.51.6',
  'bsnSwitchingCompliances' => '1.3.6.1.4.1.14179.1.52',
  'bsnSwitchingCompliance' => '1.3.6.1.4.1.14179.1.52.1',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::AIRESPACEWIRELESSMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'AIRESPACE-WIRELESS-MIB'} = {
  url => '',
  name => 'AIRESPACE-WIRELESS-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'AIRESPACE-WIRELESS-MIB'} =
  '1.3.6.1.4.1.14179.2';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'AIRESPACE-WIRELESS-MIB'} = {
  'bsnWireless' => '1.3.6.1.4.1.14179.2',
  'bsnEss' => '1.3.6.1.4.1.14179.2.1',
  'bsnDot11EssTable' => '1.3.6.1.4.1.14179.2.1.1',
  'bsnDot11EssEntry' => '1.3.6.1.4.1.14179.2.1.1.1',
  'bsnDot11EssIndex' => '1.3.6.1.4.1.14179.2.1.1.1.1',
  'bsnDot11EssSsid' => '1.3.6.1.4.1.14179.2.1.1.1.2',
  'bsnDot11EssSessionTimeout' => '1.3.6.1.4.1.14179.2.1.1.1.4',
  'bsnDot11EssMacFiltering' => '1.3.6.1.4.1.14179.2.1.1.1.5',
  'bsnDot11EssAdminStatus' => '1.3.6.1.4.1.14179.2.1.1.1.6',
  'bsnDot11EssSecurityAuthType' => '1.3.6.1.4.1.14179.2.1.1.1.7',
  'bsnDot11EssStaticWEPSecurity' => '1.3.6.1.4.1.14179.2.1.1.1.8',
  'bsnDot11EssStaticWEPEncryptionType' => '1.3.6.1.4.1.14179.2.1.1.1.9',
  'bsnDot11EssStaticWEPDefaultKey' => '1.3.6.1.4.1.14179.2.1.1.1.10',
  'bsnDot11EssStaticWEPKeyIndex' => '1.3.6.1.4.1.14179.2.1.1.1.11',
  'bsnDot11EssStaticWEPKeyFormat' => '1.3.6.1.4.1.14179.2.1.1.1.12',
  'bsnDot11Ess8021xSecurity' => '1.3.6.1.4.1.14179.2.1.1.1.13',
  'bsnDot11Ess8021xEncryptionType' => '1.3.6.1.4.1.14179.2.1.1.1.14',
  'bsnDot11EssWPASecurity' => '1.3.6.1.4.1.14179.2.1.1.1.16',
  'bsnDot11EssWPAEncryptionType' => '1.3.6.1.4.1.14179.2.1.1.1.17',
  'bsnDot11EssIpsecSecurity' => '1.3.6.1.4.1.14179.2.1.1.1.18',
  'bsnDot11EssVpnEncrTransform' => '1.3.6.1.4.1.14179.2.1.1.1.19',
  'bsnDot11EssVpnAuthTransform' => '1.3.6.1.4.1.14179.2.1.1.1.20',
  'bsnDot11EssVpnIkeAuthMode' => '1.3.6.1.4.1.14179.2.1.1.1.21',
  'bsnDot11EssVpnSharedKey' => '1.3.6.1.4.1.14179.2.1.1.1.22',
  'bsnDot11EssVpnSharedKeySize' => '1.3.6.1.4.1.14179.2.1.1.1.23',
  'bsnDot11EssVpnIkePhase1Mode' => '1.3.6.1.4.1.14179.2.1.1.1.24',
  'bsnDot11EssVpnIkeLifetime' => '1.3.6.1.4.1.14179.2.1.1.1.25',
  'bsnDot11EssVpnIkeDHGroup' => '1.3.6.1.4.1.14179.2.1.1.1.26',
  'bsnDot11EssIpsecPassthruSecurity' => '1.3.6.1.4.1.14179.2.1.1.1.27',
  'bsnDot11EssVpnPassthruGateway' => '1.3.6.1.4.1.14179.2.1.1.1.28',
  'bsnDot11EssWebSecurity' => '1.3.6.1.4.1.14179.2.1.1.1.29',
  'bsnDot11EssRadioPolicy' => '1.3.6.1.4.1.14179.2.1.1.1.30',
  'bsnDot11EssQualityOfService' => '1.3.6.1.4.1.14179.2.1.1.1.31',
  'bsnDot11EssDhcpRequired' => '1.3.6.1.4.1.14179.2.1.1.1.32',
  'bsnDot11EssDhcpServerIpAddress' => '1.3.6.1.4.1.14179.2.1.1.1.33',
  'bsnDot11EssVpnContivityMode' => '1.3.6.1.4.1.14179.2.1.1.1.34',
  'bsnDot11EssVpnQotdServerAddress' => '1.3.6.1.4.1.14179.2.1.1.1.35',
  'bsnDot11EssBlacklistTimeout' => '1.3.6.1.4.1.14179.2.1.1.1.37',
  'bsnDot11EssNumberOfMobileStations' => '1.3.6.1.4.1.14179.2.1.1.1.38',
  'bsnDot11EssWebPassthru' => '1.3.6.1.4.1.14179.2.1.1.1.39',
  'bsnDot11EssCraniteSecurity' => '1.3.6.1.4.1.14179.2.1.1.1.40',
  'bsnDot11EssBlacklistingCapability' => '1.3.6.1.4.1.14179.2.1.1.1.41',
  'bsnDot11EssInterfaceName' => '1.3.6.1.4.1.14179.2.1.1.1.42',
  'bsnDot11EssAclName' => '1.3.6.1.4.1.14179.2.1.1.1.43',
  'bsnDot11EssAAAOverride' => '1.3.6.1.4.1.14179.2.1.1.1.44',
  'bsnDot11EssWPAAuthKeyMgmtMode' => '1.3.6.1.4.1.14179.2.1.1.1.45',
  'bsnDot11EssWPAAuthPresharedKey' => '1.3.6.1.4.1.14179.2.1.1.1.46',
  'bsnDot11EssFortressSecurity' => '1.3.6.1.4.1.14179.2.1.1.1.47',
  'bsnDot11EssWepAllowSharedKeyAuth' => '1.3.6.1.4.1.14179.2.1.1.1.48',
  'bsnDot11EssL2tpSecurity' => '1.3.6.1.4.1.14179.2.1.1.1.49',
  'bsnDot11EssWPAAuthPresharedKeyHex' => '1.3.6.1.4.1.14179.2.1.1.1.50',
  'bsnDot11EssBroadcastSsid' => '1.3.6.1.4.1.14179.2.1.1.1.51',
  'bsnDot11EssExternalPolicyValidation' => '1.3.6.1.4.1.14179.2.1.1.1.52',
  'bsnDot11EssRSNSecurity' => '1.3.6.1.4.1.14179.2.1.1.1.53',
  'bsnDot11EssRSNWPACompatibilityMode' => '1.3.6.1.4.1.14179.2.1.1.1.54',
  'bsnDot11EssRSNAllowTKIPClients' => '1.3.6.1.4.1.14179.2.1.1.1.55',
  'bsnDot11EssRSNAuthKeyMgmtMode' => '1.3.6.1.4.1.14179.2.1.1.1.56',
  'bsnDot11EssRSNAuthPresharedKey' => '1.3.6.1.4.1.14179.2.1.1.1.57',
  'bsnDot11EssRSNAuthPresharedKeyHex' => '1.3.6.1.4.1.14179.2.1.1.1.58',
  'bsnDot11EssIPv6Bridging' => '1.3.6.1.4.1.14179.2.1.1.1.59',
  'bsnDot11EssRowStatus' => '1.3.6.1.4.1.14179.2.1.1.1.60',
  'bsnDot11EssWmePolicySetting' => '1.3.6.1.4.1.14179.2.1.1.1.61',
  'bsnDot11Ess80211ePolicySetting' => '1.3.6.1.4.1.14179.2.1.1.1.62',
  'bsnDot11EssWebPassthroughEmail' => '1.3.6.1.4.1.14179.2.1.1.1.63',
  'bsnDot11Ess7920PhoneSupport' => '1.3.6.1.4.1.14179.2.1.1.1.64',
  'bsnDot11EssRadiusAuthPrimaryServer' => '1.3.6.1.4.1.14179.2.1.1.1.95',
  'bsnDot11EssRadiusAuthSecondaryServer' => '1.3.6.1.4.1.14179.2.1.1.1.96',
  'bsnDot11EssRadiusAuthTertiaryServer' => '1.3.6.1.4.1.14179.2.1.1.1.97',
  'bsnDot11EssRadiusAcctPrimaryServer' => '1.3.6.1.4.1.14179.2.1.1.1.98',
  'bsnDot11EssRadiusAcctSecondaryServer' => '1.3.6.1.4.1.14179.2.1.1.1.99',
  'bsnDot11EssRadiusAcctTertiaryServer' => '1.3.6.1.4.1.14179.2.1.1.1.100',
  'bsnMobileStationTable' => '1.3.6.1.4.1.14179.2.1.4',
  'bsnMobileStationEntry' => '1.3.6.1.4.1.14179.2.1.4.1',
  'bsnMobileStationMacAddress' => '1.3.6.1.4.1.14179.2.1.4.1.1',
  'bsnMobileStationIpAddress' => '1.3.6.1.4.1.14179.2.1.4.1.2',
  'bsnMobileStationUserName' => '1.3.6.1.4.1.14179.2.1.4.1.3',
  'bsnMobileStationAPMacAddr' => '1.3.6.1.4.1.14179.2.1.4.1.4',
  'bsnMobileStationAPIfSlotId' => '1.3.6.1.4.1.14179.2.1.4.1.5',
  'bsnMobileStationEssIndex' => '1.3.6.1.4.1.14179.2.1.4.1.6',
  'bsnMobileStationSsid' => '1.3.6.1.4.1.14179.2.1.4.1.7',
  'bsnMobileStationAID' => '1.3.6.1.4.1.14179.2.1.4.1.8',
  'bsnMobileStationStatus' => '1.3.6.1.4.1.14179.2.1.4.1.9',
  'bsnMobileStationReasonCode' => '1.3.6.1.4.1.14179.2.1.4.1.10',
  'bsnMobileStationMobilityStatus' => '1.3.6.1.4.1.14179.2.1.4.1.11',
  'bsnMobileStationAnchorAddress' => '1.3.6.1.4.1.14179.2.1.4.1.12',
  'bsnMobileStationCFPollable' => '1.3.6.1.4.1.14179.2.1.4.1.13',
  'bsnMobileStationCFPollRequest' => '1.3.6.1.4.1.14179.2.1.4.1.14',
  'bsnMobileStationChannelAgilityEnabled' => '1.3.6.1.4.1.14179.2.1.4.1.15',
  'bsnMobileStationPBCCOptionImplemented' => '1.3.6.1.4.1.14179.2.1.4.1.16',
  'bsnMobileStationShortPreambleOptionImplemented' => '1.3.6.1.4.1.14179.2.1.4.1.17',
  'bsnMobileStationSessionTimeout' => '1.3.6.1.4.1.14179.2.1.4.1.18',
  'bsnMobileStationAuthenticationAlgorithm' => '1.3.6.1.4.1.14179.2.1.4.1.19',
  'bsnMobileStationWepState' => '1.3.6.1.4.1.14179.2.1.4.1.20',
  'bsnMobileStationPortNumber' => '1.3.6.1.4.1.14179.2.1.4.1.21',
  'bsnMobileStationDeleteAction' => '1.3.6.1.4.1.14179.2.1.4.1.22',
  'bsnMobileStationPolicyManagerState' => '1.3.6.1.4.1.14179.2.1.4.1.23',
  'bsnMobileStationSecurityPolicyStatus' => '1.3.6.1.4.1.14179.2.1.4.1.24',
  'bsnMobileStationProtocol' => '1.3.6.1.4.1.14179.2.1.4.1.25',
  'bsnMobileStationMirrorMode' => '1.3.6.1.4.1.14179.2.1.4.1.26',
  'bsnMobileStationInterface' => '1.3.6.1.4.1.14179.2.1.4.1.27',
  'bsnMobileStationApMode' => '1.3.6.1.4.1.14179.2.1.4.1.28',
  'bsnMobileStationVlanId' => '1.3.6.1.4.1.14179.2.1.4.1.29',
  'bsnMobileStationPolicyType' => '1.3.6.1.4.1.14179.2.1.4.1.30',
  'bsnMobileStationEncryptionCypher' => '1.3.6.1.4.1.14179.2.1.4.1.31',
  'bsnMobileStationEapType' => '1.3.6.1.4.1.14179.2.1.4.1.32',
  'bsnMobileStationCcxVersion' => '1.3.6.1.4.1.14179.2.1.4.1.33',
  'bsnMobileStationE2eVersion' => '1.3.6.1.4.1.14179.2.1.4.1.34',
  'bsnMobileStationStatusCode' => '1.3.6.1.4.1.14179.2.1.4.1.42',
  'bsnMobileStationPerRadioPerVapTable' => '1.3.6.1.4.1.14179.2.1.5',
  'bsnMobileStationPerRadioPerVapEntry' => '1.3.6.1.4.1.14179.2.1.5.1',
  'bsnMobileStationPerRadioPerVapIndex' => '1.3.6.1.4.1.14179.2.1.5.1.1',
  'bsnMobileStationMacAddr' => '1.3.6.1.4.1.14179.2.1.5.1.20',
  'bsnMobileStationStatsTable' => '1.3.6.1.4.1.14179.2.1.6',
  'bsnMobileStationStatsEntry' => '1.3.6.1.4.1.14179.2.1.6.1',
  'bsnMobileStationRSSI' => '1.3.6.1.4.1.14179.2.1.6.1.1',
  'bsnMobileStationBytesReceived' => '1.3.6.1.4.1.14179.2.1.6.1.2',
  'bsnMobileStationBytesSent' => '1.3.6.1.4.1.14179.2.1.6.1.3',
  'bsnMobileStationPolicyErrors' => '1.3.6.1.4.1.14179.2.1.6.1.4',
  'bsnMobileStationPacketsReceived' => '1.3.6.1.4.1.14179.2.1.6.1.5',
  'bsnMobileStationPacketsSent' => '1.3.6.1.4.1.14179.2.1.6.1.6',
  'bsnMobileStationSnr' => '1.3.6.1.4.1.14179.2.1.6.1.26',
  'bsnRogueAPTable' => '1.3.6.1.4.1.14179.2.1.7',
  'bsnRogueAPEntry' => '1.3.6.1.4.1.14179.2.1.7.1',
  'bsnRogueAPDot11MacAddress' => '1.3.6.1.4.1.14179.2.1.7.1.1',
  'bsnRogueAPTotalDetectingAPs' => '1.3.6.1.4.1.14179.2.1.7.1.2',
  'bsnRogueAPFirstReported' => '1.3.6.1.4.1.14179.2.1.7.1.3',
  'bsnRogueAPLastReported' => '1.3.6.1.4.1.14179.2.1.7.1.4',
  'bsnRogueAPContainmentLevel' => '1.3.6.1.4.1.14179.2.1.7.1.5',
  'bsnRogueAPType' => '1.3.6.1.4.1.14179.2.1.7.1.6',
  'bsnRogueAPOnNetwork' => '1.3.6.1.4.1.14179.2.1.7.1.7',
  'bsnRogueAPTotalClients' => '1.3.6.1.4.1.14179.2.1.7.1.8',
  'bsnRogueAPRowStatus' => '1.3.6.1.4.1.14179.2.1.7.1.9',
  'bsnRogueAPMaxDetectedRSSI' => '1.3.6.1.4.1.14179.2.1.7.1.10',
  'bsnRogueAPSSID' => '1.3.6.1.4.1.14179.2.1.7.1.11',
  'bsnRogueAPDetectingAPRadioType' => '1.3.6.1.4.1.14179.2.1.7.1.12',
  'bsnRogueAPDetectingAPMacAddress' => '1.3.6.1.4.1.14179.2.1.7.1.13',
  'bsnRogueAPMaxRssiRadioType' => '1.3.6.1.4.1.14179.2.1.7.1.14',
  'bsnRogueAPState' => '1.3.6.1.4.1.14179.2.1.7.1.24',
  'bsnRogueAPClassType' => '1.3.6.1.4.1.14179.2.1.7.1.25',
  'bsnRogueAPChannel' => '1.3.6.1.4.1.14179.2.1.7.1.26',
  'bsnRogueAPDetectingAPName' => '1.3.6.1.4.1.14179.2.1.7.1.27',
  'bsnRogueAPAirespaceAPTable' => '1.3.6.1.4.1.14179.2.1.8',
  'bsnRogueAPAirespaceAPEntry' => '1.3.6.1.4.1.14179.2.1.8.1',
  'bsnRogueAPAirespaceAPMacAddress' => '1.3.6.1.4.1.14179.2.1.8.1.1',
  'bsnRogueAPAirespaceAPSlotId' => '1.3.6.1.4.1.14179.2.1.8.1.2',
  'bsnRogueAPRadioType' => '1.3.6.1.4.1.14179.2.1.8.1.3',
  'bsnRogueAPAirespaceAPName' => '1.3.6.1.4.1.14179.2.1.8.1.4',
  'bsnRogueAPChannelNumber' => '1.3.6.1.4.1.14179.2.1.8.1.5',
  'bsnRogueAPSsid' => '1.3.6.1.4.1.14179.2.1.8.1.6',
  'bsnRogueAPAirespaceAPRSSI' => '1.3.6.1.4.1.14179.2.1.8.1.7',
  'bsnRogueAPContainmentMode' => '1.3.6.1.4.1.14179.2.1.8.1.8',
  'bsnRogueAPContainmentChannelCount' => '1.3.6.1.4.1.14179.2.1.8.1.9',
  'bsnRogueAPContainmentChannels' => '1.3.6.1.4.1.14179.2.1.8.1.10',
  'bsnRogueAPAirespaceAPLastHeard' => '1.3.6.1.4.1.14179.2.1.8.1.11',
  'bsnRogueAPAirespaceAPWepMode' => '1.3.6.1.4.1.14179.2.1.8.1.12',
  'bsnRogueAPAirespaceAPPreamble' => '1.3.6.1.4.1.14179.2.1.8.1.13',
  'bsnRogueAPAirespaceAPWpaMode' => '1.3.6.1.4.1.14179.2.1.8.1.14',
  'bsnRogueAPAirespaceAPSNR' => '1.3.6.1.4.1.14179.2.1.8.1.27',
  'bsnRogueAPChannelWidth' => '1.3.6.1.4.1.14179.2.1.8.1.28',
  'bsnThirdPartyAPTable' => '1.3.6.1.4.1.14179.2.1.9',
  'bsnThirdPartyAPEntry' => '1.3.6.1.4.1.14179.2.1.9.1',
  'bsnThirdPartyAPMacAddress' => '1.3.6.1.4.1.14179.2.1.9.1.1',
  'bsnThirdPartyAPInterface' => '1.3.6.1.4.1.14179.2.1.9.1.2',
  'bsnThirdPartyAPIpAddress' => '1.3.6.1.4.1.14179.2.1.9.1.3',
  'bsnThirdPartyAP802Dot1XRequired' => '1.3.6.1.4.1.14179.2.1.9.1.4',
  'bsnThirdPartyAPMirrorMode' => '1.3.6.1.4.1.14179.2.1.9.1.5',
  'bsnThirdPartyAPRowStatus' => '1.3.6.1.4.1.14179.2.1.9.1.24',
  'bsnMobileStationByIpTable' => '1.3.6.1.4.1.14179.2.1.10',
  'bsnMobileStationByIpEntry' => '1.3.6.1.4.1.14179.2.1.10.1',
  'bsnMobileStationByIpAddress' => '1.3.6.1.4.1.14179.2.1.10.1.1',
  'bsnMobileStationByIpMacAddress' => '1.3.6.1.4.1.14179.2.1.10.1.2',
  'bsnMobileStationRssiDataTable' => '1.3.6.1.4.1.14179.2.1.11',
  'bsnMobileStationRssiDataEntry' => '1.3.6.1.4.1.14179.2.1.11.1',
  'bsnMobileStationRssiDataApMacAddress' => '1.3.6.1.4.1.14179.2.1.11.1.1',
  'bsnMobileStationRssiDataApIfSlotId' => '1.3.6.1.4.1.14179.2.1.11.1.2',
  'bsnMobileStationRssiDataApIfType' => '1.3.6.1.4.1.14179.2.1.11.1.3',
  'bsnMobileStationRssiDataApName' => '1.3.6.1.4.1.14179.2.1.11.1.4',
  'bsnMobileStationRssiData' => '1.3.6.1.4.1.14179.2.1.11.1.5',
  'bsnAPIfPhyAntennaIndex' => '1.3.6.1.4.1.14179.2.1.11.1.6',
  'bsnMobileStationRssiDataLastHeard' => '1.3.6.1.4.1.14179.2.1.11.1.25',
  'bsnWatchListClientTable' => '1.3.6.1.4.1.14179.2.1.12',
  'bsnWatchListClientEntry' => '1.3.6.1.4.1.14179.2.1.12.1',
  'bsnWatchListClientKey' => '1.3.6.1.4.1.14179.2.1.12.1.1',
  'bsnWatchListClientType' => '1.3.6.1.4.1.14179.2.1.12.1.2',
  'bsnWatchListClientRowStatus' => '1.3.6.1.4.1.14179.2.1.12.1.20',
  'bsnMobileStationByUsernameTable' => '1.3.6.1.4.1.14179.2.1.13',
  'bsnMobileStationByUsernameEntry' => '1.3.6.1.4.1.14179.2.1.13.1',
  'bsnMobileStationByUserName' => '1.3.6.1.4.1.14179.2.1.13.1.1',
  'bsnMobileStationByUserMacAddress' => '1.3.6.1.4.1.14179.2.1.13.1.2',
  'bsnRogueClientTable' => '1.3.6.1.4.1.14179.2.1.14',
  'bsnRogueClientEntry' => '1.3.6.1.4.1.14179.2.1.14.1',
  'bsnRogueClientDot11MacAddress' => '1.3.6.1.4.1.14179.2.1.14.1.1',
  'bsnRogueClientTotalDetectingAPs' => '1.3.6.1.4.1.14179.2.1.14.1.2',
  'bsnRogueClientFirstReported' => '1.3.6.1.4.1.14179.2.1.14.1.3',
  'bsnRogueClientLastReported' => '1.3.6.1.4.1.14179.2.1.14.1.4',
  'bsnRogueClientBSSID' => '1.3.6.1.4.1.14179.2.1.14.1.5',
  'bsnRogueClientContainmentLevel' => '1.3.6.1.4.1.14179.2.1.14.1.6',
  'bsnRogueClientLastHeard' => '1.3.6.1.4.1.14179.2.1.14.1.7',
  'bsnRogueClientState' => '1.3.6.1.4.1.14179.2.1.14.1.24',
  'bsnRogueClientAirespaceAPTable' => '1.3.6.1.4.1.14179.2.1.15',
  'bsnRogueClientAirespaceAPEntry' => '1.3.6.1.4.1.14179.2.1.15.1',
  'bsnRogueClientAirespaceAPMacAddress' => '1.3.6.1.4.1.14179.2.1.15.1.1',
  'bsnRogueClientAirespaceAPSlotId' => '1.3.6.1.4.1.14179.2.1.15.1.2',
  'bsnRogueClientRadioType' => '1.3.6.1.4.1.14179.2.1.15.1.3',
  'bsnRogueClientAirespaceAPName' => '1.3.6.1.4.1.14179.2.1.15.1.4',
  'bsnRogueClientChannelNumber' => '1.3.6.1.4.1.14179.2.1.15.1.5',
  'bsnRogueClientAirespaceAPRSSI' => '1.3.6.1.4.1.14179.2.1.15.1.7',
  'bsnRogueClientAirespaceAPLastHeard' => '1.3.6.1.4.1.14179.2.1.15.1.11',
  'bsnRogueClientAirespaceAPSNR' => '1.3.6.1.4.1.14179.2.1.15.1.27',
  'bsnRogueClientPerRogueAPTable' => '1.3.6.1.4.1.14179.2.1.16',
  'bsnRogueClientPerRogueAPEntry' => '1.3.6.1.4.1.14179.2.1.16.1',
  'bsnRogueAPDot11MacAddr' => '1.3.6.1.4.1.14179.2.1.16.1.1',
  'bsnRogueClientDot11MacAddr' => '1.3.6.1.4.1.14179.2.1.16.1.20',
  'bsnDot11QosProfileTable' => '1.3.6.1.4.1.14179.2.1.17',
  'bsnDot11QosProfileEntry' => '1.3.6.1.4.1.14179.2.1.17.1',
  'bsnDot11QosProfileName' => '1.3.6.1.4.1.14179.2.1.17.1.1',
  'bsnDot11QosProfileDesc' => '1.3.6.1.4.1.14179.2.1.17.1.2',
  'bsnDot11QosAverageDataRate' => '1.3.6.1.4.1.14179.2.1.17.1.3',
  'bsnDot11QosBurstDataRate' => '1.3.6.1.4.1.14179.2.1.17.1.4',
  'bsnDot11QosAvgRealTimeDataRate' => '1.3.6.1.4.1.14179.2.1.17.1.5',
  'bsnDot11QosBurstRealTimeDataRate' => '1.3.6.1.4.1.14179.2.1.17.1.6',
  'bsnDot11QosMaxRFUsagePerAP' => '1.3.6.1.4.1.14179.2.1.17.1.7',
  'bsnDot11QosProfileQueueDepth' => '1.3.6.1.4.1.14179.2.1.17.1.8',
  'bsnDot11WiredQosProtocol' => '1.3.6.1.4.1.14179.2.1.17.1.9',
  'bsnDot11802Dot1PTag' => '1.3.6.1.4.1.14179.2.1.17.1.10',
  'bsnDot11ResetProfileToDefault' => '1.3.6.1.4.1.14179.2.1.17.1.40',
  'bsnTagTable' => '1.3.6.1.4.1.14179.2.1.18',
  'bsnTagEntry' => '1.3.6.1.4.1.14179.2.1.18.1',
  'bsnTagDot11MacAddress' => '1.3.6.1.4.1.14179.2.1.18.1.1',
  'bsnTagType' => '1.3.6.1.4.1.14179.2.1.18.1.2',
  'bsnTagTimeInterval' => '1.3.6.1.4.1.14179.2.1.18.1.3',
  'bsnTagBatteryStatus' => '1.3.6.1.4.1.14179.2.1.18.1.4',
  'bsnTagLastReported' => '1.3.6.1.4.1.14179.2.1.18.1.23',
  'bsnTagRssiDataTable' => '1.3.6.1.4.1.14179.2.1.19',
  'bsnTagRssiDataEntry' => '1.3.6.1.4.1.14179.2.1.19.1',
  'bsnTagRssiDataApMacAddress' => '1.3.6.1.4.1.14179.2.1.19.1.1',
  'bsnTagRssiDataApIfSlotId' => '1.3.6.1.4.1.14179.2.1.19.1.2',
  'bsnTagRssiDataApIfType' => '1.3.6.1.4.1.14179.2.1.19.1.3',
  'bsnTagRssiDataApName' => '1.3.6.1.4.1.14179.2.1.19.1.4',
  'bsnTagRssiDataLastHeard' => '1.3.6.1.4.1.14179.2.1.19.1.5',
  'bsnTagRssiData' => '1.3.6.1.4.1.14179.2.1.19.1.6',
  'bsnTagRssiDataSnr' => '1.3.6.1.4.1.14179.2.1.19.1.26',
  'bsnTagStatsTable' => '1.3.6.1.4.1.14179.2.1.20',
  'bsnTagStatsEntry' => '1.3.6.1.4.1.14179.2.1.20.1',
  'bsnTagBytesReceived' => '1.3.6.1.4.1.14179.2.1.20.1.1',
  'bsnTagPacketsReceived' => '1.3.6.1.4.1.14179.2.1.20.1.20',
  'bsnMobileStationExtStatsTable' => '1.3.6.1.4.1.14179.2.1.21',
  'bsnMobileStationExtStatsEntry' => '1.3.6.1.4.1.14179.2.1.21.1',
  'bsnMobileStationSampleTime' => '1.3.6.1.4.1.14179.2.1.21.1.1',
  'bsnMobileStationTxExcessiveRetries' => '1.3.6.1.4.1.14179.2.1.21.1.2',
  'bsnMobileStationTxRetries' => '1.3.6.1.4.1.14179.2.1.21.1.3',
  'bsnMobileStationTxFiltered' => '1.3.6.1.4.1.14179.2.1.21.1.20',
  'bsnAP' => '1.3.6.1.4.1.14179.2.2',
  'bsnAPTable' => '1.3.6.1.4.1.14179.2.2.1',
  'bsnAPEntry' => '1.3.6.1.4.1.14179.2.2.1.1',
  'bsnAPDot3MacAddress' => '1.3.6.1.4.1.14179.2.2.1.1.1',
  'bsnAPNumOfSlots' => '1.3.6.1.4.1.14179.2.2.1.1.2',
  'bsnAPName' => '1.3.6.1.4.1.14179.2.2.1.1.3',
  'bsnAPLocation' => '1.3.6.1.4.1.14179.2.2.1.1.4',
  'bsnAPMonitorOnlyMode' => '1.3.6.1.4.1.14179.2.2.1.1.5',
  'bsnAPOperationStatus' => '1.3.6.1.4.1.14179.2.2.1.1.6',
  'bsnAPOperationStatusDefinition' => {
    '1' => 'associated',
    '2' => 'disassociating',
    '3' => 'downloading',
  },
  'bsnAPSoftwareVersion' => '1.3.6.1.4.1.14179.2.2.1.1.8',
  'bsnAPBootVersion' => '1.3.6.1.4.1.14179.2.2.1.1.9',
  'bsnAPPrimaryMwarName' => '1.3.6.1.4.1.14179.2.2.1.1.10',
  'bsnAPReset' => '1.3.6.1.4.1.14179.2.2.1.1.11',
  'bsnAPStatsTimer' => '1.3.6.1.4.1.14179.2.2.1.1.12',
  'bsnAPPortNumber' => '1.3.6.1.4.1.14179.2.2.1.1.13',
  'bsnAPModel' => '1.3.6.1.4.1.14179.2.2.1.1.16',
  'bsnAPSerialNumber' => '1.3.6.1.4.1.14179.2.2.1.1.17',
  'bsnAPClearConfig' => '1.3.6.1.4.1.14179.2.2.1.1.18',
  'bsnApIpAddress' => '1.3.6.1.4.1.14179.2.2.1.1.19',
  'bsnAPMirrorMode' => '1.3.6.1.4.1.14179.2.2.1.1.20',
  'bsnAPRemoteModeSupport' => '1.3.6.1.4.1.14179.2.2.1.1.21',
  'bsnAPType' => '1.3.6.1.4.1.14179.2.2.1.1.22',
  'bsnAPTypeDefinition' => {
    '1' => 'ap1000',
    '2' => 'ap1030',
    '3' => 'mimo',
    '4' => 'unknown',
    '5' => 'ap1100',
    '6' => 'ap1130',
    '7' => 'ap1240',
    '8' => 'ap1200',
    '9' => 'ap1310',
    '10' => 'ap1500',
    '11' => 'ap1250',
    '12' => 'ap1505',
    '13' => 'ap3201',
    '14' => 'ap1520',
    '15' => 'ap800',
    '16' => 'ap1140',
    '17' => 'ap800agn',
    '18' => 'ap3500i',
    '19' => 'ap3500e',
    '20' => 'ap1260',
  },
  'bsnAPSecondaryMwarName' => '1.3.6.1.4.1.14179.2.2.1.1.23',
  'bsnAPTertiaryMwarName' => '1.3.6.1.4.1.14179.2.2.1.1.24',
  'bsnAPIsStaticIP' => '1.3.6.1.4.1.14179.2.2.1.1.25',
  'bsnAPNetmask' => '1.3.6.1.4.1.14179.2.2.1.1.26',
  'bsnAPGateway' => '1.3.6.1.4.1.14179.2.2.1.1.27',
  'bsnAPStaticIPAddress' => '1.3.6.1.4.1.14179.2.2.1.1.28',
  'bsnAPBridgingSupport' => '1.3.6.1.4.1.14179.2.2.1.1.29',
  'bsnAPGroupVlanName' => '1.3.6.1.4.1.14179.2.2.1.1.30',
  'bsnAPIOSVersion' => '1.3.6.1.4.1.14179.2.2.1.1.31',
  'bsnAPCertificateType' => '1.3.6.1.4.1.14179.2.2.1.1.32',
  'bsnAPEthernetMacAddress' => '1.3.6.1.4.1.14179.2.2.1.1.33',
  'bsnAPAdminStatus' => '1.3.6.1.4.1.14179.2.2.1.1.37',
  'bsnAPAdminStatusDefinition' => {
    '1' => 'enable',
    '2' => 'disable',
  },
  'bsnAPIfTable' => '1.3.6.1.4.1.14179.2.2.2',
  'bsnAPIfEntry' => '1.3.6.1.4.1.14179.2.2.2.1',
  'bsnAPIfSlotId' => '1.3.6.1.4.1.14179.2.2.2.1.1',
  'bsnAPIfType' => '1.3.6.1.4.1.14179.2.2.2.1.2',
  'bsnAPIfPhyChannelAssignment' => '1.3.6.1.4.1.14179.2.2.2.1.3',
  'bsnAPIfPhyChannelNumber' => '1.3.6.1.4.1.14179.2.2.2.1.4',
  'bsnAPIfPhyTxPowerControl' => '1.3.6.1.4.1.14179.2.2.2.1.5',
  'bsnAPIfPhyTxPowerLevel' => '1.3.6.1.4.1.14179.2.2.2.1.6',
  'bsnAPIfPhyAntennaMode' => '1.3.6.1.4.1.14179.2.2.2.1.7',
  'bsnAPIfPhyAntennaType' => '1.3.6.1.4.1.14179.2.2.2.1.8',
  'bsnAPIfPhyAntennaDiversity' => '1.3.6.1.4.1.14179.2.2.2.1.9',
  'bsnAPIfCellSiteConfigId' => '1.3.6.1.4.1.14179.2.2.2.1.10',
  'bsnAPIfNumberOfVaps' => '1.3.6.1.4.1.14179.2.2.2.1.11',
  'bsnAPIfOperStatus' => '1.3.6.1.4.1.14179.2.2.2.1.12',
  'bsnAPIfPortNumber' => '1.3.6.1.4.1.14179.2.2.2.1.13',
  'bsnAPIfPhyAntennaOptions' => '1.3.6.1.4.1.14179.2.2.2.1.14',
  'bsnApIfNoOfUsers' => '1.3.6.1.4.1.14179.2.2.2.1.15',
  'bsnAPIfWlanOverride' => '1.3.6.1.4.1.14179.2.2.2.1.16',
  'bsnAPIfPacketsSniffingFeature' => '1.3.6.1.4.1.14179.2.2.2.1.17',
  'bsnAPIfSniffChannel' => '1.3.6.1.4.1.14179.2.2.2.1.18',
  'bsnAPIfSniffServerIPAddress' => '1.3.6.1.4.1.14179.2.2.2.1.19',
  'bsnAPIfAntennaGain' => '1.3.6.1.4.1.14179.2.2.2.1.20',
  'bsnAPIfChannelList' => '1.3.6.1.4.1.14179.2.2.2.1.21',
  'bsnAPIfAbsolutePowerList' => '1.3.6.1.4.1.14179.2.2.2.1.22',
  'bsnAPIfRegulatoryDomainSupport' => '1.3.6.1.4.1.14179.2.2.2.1.23',
  'bsnAPIfAdminStatus' => '1.3.6.1.4.1.14179.2.2.2.1.34',
  'bsnAPIfSmtParamTable' => '1.3.6.1.4.1.14179.2.2.3',
  'bsnAPIfSmtParamEntry' => '1.3.6.1.4.1.14179.2.2.3.1',
  'bsnAPIfDot11BeaconPeriod' => '1.3.6.1.4.1.14179.2.2.3.1.1',
  'bsnAPIfDot11MediumOccupancyLimit' => '1.3.6.1.4.1.14179.2.2.3.1.2',
  'bsnAPIfDot11CFPPeriod' => '1.3.6.1.4.1.14179.2.2.3.1.3',
  'bsnAPIfDot11CFPMaxDuration' => '1.3.6.1.4.1.14179.2.2.3.1.4',
  'bsnAPIfDot11OperationalRateSet' => '1.3.6.1.4.1.14179.2.2.3.1.5',
  'bsnAPIfDot11DTIMPeriod' => '1.3.6.1.4.1.14179.2.2.3.1.6',
  'bsnAPIfDot11MultiDomainCapabilityImplemented' => '1.3.6.1.4.1.14179.2.2.3.1.7',
  'bsnAPIfDot11MultiDomainCapabilityEnabled' => '1.3.6.1.4.1.14179.2.2.3.1.8',
  'bsnAPIfDot11CountryString' => '1.3.6.1.4.1.14179.2.2.3.1.9',
  'bsnAPIfDot11SmtParamsConfigType' => '1.3.6.1.4.1.14179.2.2.3.1.10',
  'bsnAPIfDot11BSSID' => '1.3.6.1.4.1.14179.2.2.3.1.30',
  'bsnAPIfMultiDomainCapabilityTable' => '1.3.6.1.4.1.14179.2.2.4',
  'bsnAPIfMultiDomainCapabilityEntry' => '1.3.6.1.4.1.14179.2.2.4.1',
  'bsnAPIfDot11MaximumTransmitPowerLevel' => '1.3.6.1.4.1.14179.2.2.4.1.1',
  'bsnAPIfDot11FirstChannelNumber' => '1.3.6.1.4.1.14179.2.2.4.1.2',
  'bsnAPIfDot11NumberofChannels' => '1.3.6.1.4.1.14179.2.2.4.1.20',
  'bsnAPIfMacOperationParamTable' => '1.3.6.1.4.1.14179.2.2.5',
  'bsnAPIfMacOperationParamEntry' => '1.3.6.1.4.1.14179.2.2.5.1',
  'bsnAPIfDot11MacRTSThreshold' => '1.3.6.1.4.1.14179.2.2.5.1.1',
  'bsnAPIfDot11MacShortRetryLimit' => '1.3.6.1.4.1.14179.2.2.5.1.2',
  'bsnAPIfDot11MacLongRetryLimit' => '1.3.6.1.4.1.14179.2.2.5.1.3',
  'bsnAPIfDot11MacFragmentationThreshold' => '1.3.6.1.4.1.14179.2.2.5.1.4',
  'bsnAPIfDot11MacMaxTransmitMSDULifetime' => '1.3.6.1.4.1.14179.2.2.5.1.5',
  'bsnAPIfDot11MacParamsConfigType' => '1.3.6.1.4.1.14179.2.2.5.1.6',
  'bsnAPIfDot11MacMaxReceiveLifetime' => '1.3.6.1.4.1.14179.2.2.5.1.25',
  'bsnAPIfDot11CountersTable' => '1.3.6.1.4.1.14179.2.2.6',
  'bsnAPIfDot11CountersEntry' => '1.3.6.1.4.1.14179.2.2.6.1',
  'bsnAPIfDot11TransmittedFragmentCount' => '1.3.6.1.4.1.14179.2.2.6.1.1',
  'bsnAPIfDot11MulticastTransmittedFrameCount' => '1.3.6.1.4.1.14179.2.2.6.1.2',
  'bsnAPIfDot11RetryCount' => '1.3.6.1.4.1.14179.2.2.6.1.3',
  'bsnAPIfDot11MultipleRetryCount' => '1.3.6.1.4.1.14179.2.2.6.1.4',
  'bsnAPIfDot11FrameDuplicateCount' => '1.3.6.1.4.1.14179.2.2.6.1.5',
  'bsnAPIfDot11RTSSuccessCount' => '1.3.6.1.4.1.14179.2.2.6.1.6',
  'bsnAPIfDot11RTSFailureCount' => '1.3.6.1.4.1.14179.2.2.6.1.7',
  'bsnAPIfDot11ACKFailureCount' => '1.3.6.1.4.1.14179.2.2.6.1.8',
  'bsnAPIfDot11ReceivedFragmentCount' => '1.3.6.1.4.1.14179.2.2.6.1.9',
  'bsnAPIfDot11MulticastReceivedFrameCount' => '1.3.6.1.4.1.14179.2.2.6.1.10',
  'bsnAPIfDot11FCSErrorCount' => '1.3.6.1.4.1.14179.2.2.6.1.11',
  'bsnAPIfDot11TransmittedFrameCount' => '1.3.6.1.4.1.14179.2.2.6.1.12',
  'bsnAPIfDot11WEPUndecryptableCount' => '1.3.6.1.4.1.14179.2.2.6.1.13',
  'bsnAPIfDot11FailedCount' => '1.3.6.1.4.1.14179.2.2.6.1.33',
  'bsnAPIfDot11PhyTxPowerTable' => '1.3.6.1.4.1.14179.2.2.8',
  'bsnAPIfDot11PhyTxPowerEntry' => '1.3.6.1.4.1.14179.2.2.8.1',
  'bsnAPIfDot11NumberSupportedPowerLevels' => '1.3.6.1.4.1.14179.2.2.8.1.1',
  'bsnAPIfDot11TxPowerLevel1' => '1.3.6.1.4.1.14179.2.2.8.1.2',
  'bsnAPIfDot11TxPowerLevel2' => '1.3.6.1.4.1.14179.2.2.8.1.3',
  'bsnAPIfDot11TxPowerLevel3' => '1.3.6.1.4.1.14179.2.2.8.1.4',
  'bsnAPIfDot11TxPowerLevel4' => '1.3.6.1.4.1.14179.2.2.8.1.5',
  'bsnAPIfDot11TxPowerLevel5' => '1.3.6.1.4.1.14179.2.2.8.1.6',
  'bsnAPIfDot11TxPowerLevel6' => '1.3.6.1.4.1.14179.2.2.8.1.7',
  'bsnAPIfDot11TxPowerLevel7' => '1.3.6.1.4.1.14179.2.2.8.1.8',
  'bsnAPIfDot11TxPowerLevel8' => '1.3.6.1.4.1.14179.2.2.8.1.28',
  'bsnAPIfDot11PhyChannelTable' => '1.3.6.1.4.1.14179.2.2.9',
  'bsnAPIfDot11PhyChannelEntry' => '1.3.6.1.4.1.14179.2.2.9.1',
  'bsnAPIfDot11CurrentCCAMode' => '1.3.6.1.4.1.14179.2.2.9.1.1',
  'bsnAPIfDot11EDThreshold' => '1.3.6.1.4.1.14179.2.2.9.1.2',
  'bsnAPIfDot11TIThreshold' => '1.3.6.1.4.1.14179.2.2.9.1.23',
  'bsnAPIfProfileThresholdConfigTable' => '1.3.6.1.4.1.14179.2.2.12',
  'bsnAPIfProfileThresholdConfigEntry' => '1.3.6.1.4.1.14179.2.2.12.1',
  'bsnAPIfProfileParamAssignment' => '1.3.6.1.4.1.14179.2.2.12.1.1',
  'bsnAPIfForeignInterferenceThreshold' => '1.3.6.1.4.1.14179.2.2.12.1.2',
  'bsnAPIfForeignNoiseThreshold' => '1.3.6.1.4.1.14179.2.2.12.1.3',
  'bsnAPIfRFUtilizationThreshold' => '1.3.6.1.4.1.14179.2.2.12.1.4',
  'bsnAPIfThroughputThreshold' => '1.3.6.1.4.1.14179.2.2.12.1.5',
  'bsnAPIfMobilesThreshold' => '1.3.6.1.4.1.14179.2.2.12.1.6',
  'bsnAPIfCoverageThreshold' => '1.3.6.1.4.1.14179.2.2.12.1.7',
  'bsnAPIfMobileMinExceptionLevel' => '1.3.6.1.4.1.14179.2.2.12.1.8',
  'bsnAPIfCoverageExceptionLevel' => '1.3.6.1.4.1.14179.2.2.12.1.28',
  'bsnAPIfLoadParametersTable' => '1.3.6.1.4.1.14179.2.2.13',
  'bsnAPIfLoadParametersEntry' => '1.3.6.1.4.1.14179.2.2.13.1',
  'bsnAPIfLoadRxUtilization' => '1.3.6.1.4.1.14179.2.2.13.1.1',
  'bsnAPIfLoadTxUtilization' => '1.3.6.1.4.1.14179.2.2.13.1.2',
  'bsnAPIfLoadChannelUtilization' => '1.3.6.1.4.1.14179.2.2.13.1.3',
  'bsnAPIfLoadNumOfClients' => '1.3.6.1.4.1.14179.2.2.13.1.4',
  'bsnAPIfPoorSNRClients' => '1.3.6.1.4.1.14179.2.2.13.1.24',
  'bsnAPIfChannelInterferenceInfoTable' => '1.3.6.1.4.1.14179.2.2.14',
  'bsnAPIfChannelInterferenceInfoEntry' => '1.3.6.1.4.1.14179.2.2.14.1',
  'bsnAPIfInterferenceChannelNo' => '1.3.6.1.4.1.14179.2.2.14.1.1',
  'bsnAPIfInterferencePower' => '1.3.6.1.4.1.14179.2.2.14.1.2',
  'bsnAPIfInterferenceUtilization' => '1.3.6.1.4.1.14179.2.2.14.1.22',
  'bsnAPIfChannelNoiseInfoTable' => '1.3.6.1.4.1.14179.2.2.15',
  'bsnAPIfChannelNoiseInfoEntry' => '1.3.6.1.4.1.14179.2.2.15.1',
  'bsnAPIfNoiseChannelNo' => '1.3.6.1.4.1.14179.2.2.15.1.1',
  'bsnAPIfDBNoisePower' => '1.3.6.1.4.1.14179.2.2.15.1.21',
  'bsnAPIfProfileStateTable' => '1.3.6.1.4.1.14179.2.2.16',
  'bsnAPIfProfileStateEntry' => '1.3.6.1.4.1.14179.2.2.16.1',
  'bsnAPIfLoadProfileState' => '1.3.6.1.4.1.14179.2.2.16.1.1',
  'bsnAPIfInterferenceProfileState' => '1.3.6.1.4.1.14179.2.2.16.1.2',
  'bsnAPIfNoiseProfileState' => '1.3.6.1.4.1.14179.2.2.16.1.3',
  'bsnAPIfCoverageProfileState' => '1.3.6.1.4.1.14179.2.2.16.1.24',
  'bsnAPIfRxNeighborsTable' => '1.3.6.1.4.1.14179.2.2.17',
  'bsnAPIfRxNeighborsEntry' => '1.3.6.1.4.1.14179.2.2.17.1',
  'bsnAPIfRxNeighborMacAddress' => '1.3.6.1.4.1.14179.2.2.17.1.1',
  'bsnAPIfRxNeighborIpAddress' => '1.3.6.1.4.1.14179.2.2.17.1.2',
  'bsnAPIfRxNeighborRSSI' => '1.3.6.1.4.1.14179.2.2.17.1.3',
  'bsnAPIfRxNeighborSlot' => '1.3.6.1.4.1.14179.2.2.17.1.24',
  'bsnAPIfRxNeighborChannel' => '1.3.6.1.4.1.14179.2.2.17.1.26',
  'bsnAPIfRxNeighborChannelWidth' => '1.3.6.1.4.1.14179.2.2.17.1.27',
  'bsnAPIfStationRSSICoverageInfoTable' => '1.3.6.1.4.1.14179.2.2.18',
  'bsnAPIfStationRSSICoverageInfoEntry' => '1.3.6.1.4.1.14179.2.2.18.1',
  'bsnAPIfStationRSSICoverageIndex' => '1.3.6.1.4.1.14179.2.2.18.1.1',
  'bsnAPIfRSSILevel' => '1.3.6.1.4.1.14179.2.2.18.1.2',
  'bsnAPIfStationCountOnRSSI' => '1.3.6.1.4.1.14179.2.2.18.1.23',
  'bsnAPIfStationSNRCoverageInfoTable' => '1.3.6.1.4.1.14179.2.2.19',
  'bsnAPIfStationSNRCoverageInfoEntry' => '1.3.6.1.4.1.14179.2.2.19.1',
  'bsnAPIfStationSNRCoverageIndex' => '1.3.6.1.4.1.14179.2.2.19.1.1',
  'bsnAPIfSNRLevel' => '1.3.6.1.4.1.14179.2.2.19.1.2',
  'bsnAPIfStationCountOnSNR' => '1.3.6.1.4.1.14179.2.2.19.1.23',
  'bsnAPIfRecommendedRFParametersTable' => '1.3.6.1.4.1.14179.2.2.20',
  'bsnAPIfRecommendedRFParametersEntry' => '1.3.6.1.4.1.14179.2.2.20.1',
  'bsnAPIfRecommendedChannelNumber' => '1.3.6.1.4.1.14179.2.2.20.1.1',
  'bsnAPIfRecommendedTxPowerLevel' => '1.3.6.1.4.1.14179.2.2.20.1.2',
  'bsnAPIfRecommendedRTSThreshold' => '1.3.6.1.4.1.14179.2.2.20.1.3',
  'bsnAPIfRecommendedFragmentationThreshold' => '1.3.6.1.4.1.14179.2.2.20.1.24',
  'bsnAPIfWlanOverrideTable' => '1.3.6.1.4.1.14179.2.2.21',
  'bsnAPIfWlanOverrideEntry' => '1.3.6.1.4.1.14179.2.2.21.1',
  'bsnAPIfWlanOverrideId' => '1.3.6.1.4.1.14179.2.2.21.1.1',
  'bsnAPIfWlanOverrideSsid' => '1.3.6.1.4.1.14179.2.2.21.1.2',
  'bsnAPIfWlanOverrideRowStatus' => '1.3.6.1.4.1.14179.2.2.21.1.15',
  'bsnMeshNodeTable' => '1.3.6.1.4.1.14179.2.2.22',
  'bsnMeshNodeEntry' => '1.3.6.1.4.1.14179.2.2.22.1',
  'bsnMeshNodeRole' => '1.3.6.1.4.1.14179.2.2.22.1.1',
  'bsnMeshNodeGroup' => '1.3.6.1.4.1.14179.2.2.22.1.2',
  'bsnMeshNodeBackhaul' => '1.3.6.1.4.1.14179.2.2.22.1.3',
  'bsnMeshNodeBackhaulPAP' => '1.3.6.1.4.1.14179.2.2.22.1.4',
  'bsnMeshNodeBackhaulRAP' => '1.3.6.1.4.1.14179.2.2.22.1.5',
  'bsnMeshNodeDataRate' => '1.3.6.1.4.1.14179.2.2.22.1.6',
  'bsnMeshNodeChannel' => '1.3.6.1.4.1.14179.2.2.22.1.7',
  'bsnMeshNodeRoutingState' => '1.3.6.1.4.1.14179.2.2.22.1.8',
  'bsnMeshNodeMalformedNeighPackets' => '1.3.6.1.4.1.14179.2.2.22.1.9',
  'bsnMeshNodePoorNeighSnr' => '1.3.6.1.4.1.14179.2.2.22.1.10',
  'bsnMeshNodeBlacklistPackets' => '1.3.6.1.4.1.14179.2.2.22.1.11',
  'bsnMeshNodeInsufficientMemory' => '1.3.6.1.4.1.14179.2.2.22.1.12',
  'bsnMeshNodeRxNeighReq' => '1.3.6.1.4.1.14179.2.2.22.1.13',
  'bsnMeshNodeRxNeighRsp' => '1.3.6.1.4.1.14179.2.2.22.1.14',
  'bsnMeshNodeTxNeighReq' => '1.3.6.1.4.1.14179.2.2.22.1.15',
  'bsnMeshNodeTxNeighRsp' => '1.3.6.1.4.1.14179.2.2.22.1.16',
  'bsnMeshNodeParentChanges' => '1.3.6.1.4.1.14179.2.2.22.1.17',
  'bsnMeshNodeNeighTimeout' => '1.3.6.1.4.1.14179.2.2.22.1.18',
  'bsnMeshNodeParentMacAddress' => '1.3.6.1.4.1.14179.2.2.22.1.19',
  'bsnMeshNodeAPType' => '1.3.6.1.4.1.14179.2.2.22.1.20',
  'bsnMeshNodeEthernetBridge' => '1.3.6.1.4.1.14179.2.2.22.1.21',
  'bsnMeshNodeHops' => '1.3.6.1.4.1.14179.2.2.22.1.30',
  'bsnMeshNeighsTable' => '1.3.6.1.4.1.14179.2.2.23',
  'bsnMeshNeighsEntry' => '1.3.6.1.4.1.14179.2.2.23.1',
  'bsnMeshNeighMacAddress' => '1.3.6.1.4.1.14179.2.2.23.1.1',
  'bsnMeshNeighType' => '1.3.6.1.4.1.14179.2.2.23.1.2',
  'bsnMeshNeighState' => '1.3.6.1.4.1.14179.2.2.23.1.3',
  'bsnMeshNeighSnr' => '1.3.6.1.4.1.14179.2.2.23.1.4',
  'bsnMeshNeighSnrUp' => '1.3.6.1.4.1.14179.2.2.23.1.5',
  'bsnMeshNeighSnrDown' => '1.3.6.1.4.1.14179.2.2.23.1.6',
  'bsnMeshNeighLinkSnr' => '1.3.6.1.4.1.14179.2.2.23.1.7',
  'bsnMeshNeighAdjustedEase' => '1.3.6.1.4.1.14179.2.2.23.1.8',
  'bsnMeshNeighUnadjustedEase' => '1.3.6.1.4.1.14179.2.2.23.1.9',
  'bsnMeshNeighRapEase' => '1.3.6.1.4.1.14179.2.2.23.1.10',
  'bsnMeshNeighTxParent' => '1.3.6.1.4.1.14179.2.2.23.1.11',
  'bsnMeshNeighRxParent' => '1.3.6.1.4.1.14179.2.2.23.1.12',
  'bsnMeshNeighPoorSnr' => '1.3.6.1.4.1.14179.2.2.23.1.13',
  'bsnMeshNeighLastUpdate' => '1.3.6.1.4.1.14179.2.2.23.1.14',
  'bsnMeshNeighParentChange' => '1.3.6.1.4.1.14179.2.2.23.1.20',
  'bsnAPIfRadarChannelStatisticsTable' => '1.3.6.1.4.1.14179.2.2.24',
  'bsnAPIfRadarChannelStatisticsEntry' => '1.3.6.1.4.1.14179.2.2.24.1',
  'bsnAPIfRadarDetectedChannelNumber' => '1.3.6.1.4.1.14179.2.2.24.1.1',
  'bsnAPIfRadarSignalLastHeard' => '1.3.6.1.4.1.14179.2.2.24.1.2',
  'bsnGlobalDot11' => '1.3.6.1.4.1.14179.2.3',
  'bsnGlobalDot11Config' => '1.3.6.1.4.1.14179.2.3.1',
  'bsnGlobalDot11PrivacyOptionImplemented' => '1.3.6.1.4.1.14179.2.3.1.1',
  'bsnGlobalDot11AuthenticationResponseTimeOut' => '1.3.6.1.4.1.14179.2.3.1.2',
  'bsnGlobalDot11MultiDomainCapabilityImplemented' => '1.3.6.1.4.1.14179.2.3.1.3',
  'bsnGlobalDot11MultiDomainCapabilityEnabled' => '1.3.6.1.4.1.14179.2.3.1.4',
  'bsnGlobalDot11CountryIndex' => '1.3.6.1.4.1.14179.2.3.1.5',
  'bsnGlobalDot11LoadBalancing' => '1.3.6.1.4.1.14179.2.3.1.6',
  'bsnGlobalDot11RogueTimer' => '1.3.6.1.4.1.14179.2.3.1.7',
  'bsnPrimaryMwarForAPs' => '1.3.6.1.4.1.14179.2.3.1.8',
  'bsnRtpProtocolPriority' => '1.3.6.1.4.1.14179.2.3.1.9',
  'bsnSystemCurrentTime' => '1.3.6.1.4.1.14179.2.3.1.10',
  'bsnUpdateSystemTime' => '1.3.6.1.4.1.14179.2.3.1.11',
  'bsnOperatingTemperatureEnvironment' => '1.3.6.1.4.1.14179.2.3.1.12',
  'bsnOperatingTemperatureEnvironmentDefinition' => {
    '0' => 'unknown',
    '1' => 'commercial',
    '2' => 'industrial',
  },
  'bsnSensorTemperature' => '1.3.6.1.4.1.14179.2.3.1.13',
  'bsnTemperatureAlarmLowLimit' => '1.3.6.1.4.1.14179.2.3.1.14',
  'bsnTemperatureAlarmHighLimit' => '1.3.6.1.4.1.14179.2.3.1.15',
  'bsnVirtualGatewayAddress' => '1.3.6.1.4.1.14179.2.3.1.16',
  'bsnRFMobilityDomainName' => '1.3.6.1.4.1.14179.2.3.1.17',
  'bsnClientWatchListFeature' => '1.3.6.1.4.1.14179.2.3.1.18',
  'bsnRogueLocationDiscoveryProtocol' => '1.3.6.1.4.1.14179.2.3.1.19',
  'bsnRogueAutoContainFeature' => '1.3.6.1.4.1.14179.2.3.1.20',
  'bsnOverAirProvisionApMode' => '1.3.6.1.4.1.14179.2.3.1.21',
  'bsnMaximumNumberOfConcurrentLogins' => '1.3.6.1.4.1.14179.2.3.1.22',
  'bsnAutoContainRoguesAdvertisingSsid' => '1.3.6.1.4.1.14179.2.3.1.23',
  'bsnAutoContainAdhocNetworks' => '1.3.6.1.4.1.14179.2.3.1.24',
  'bsnAutoContainTrustedClientsOnRogueAps' => '1.3.6.1.4.1.14179.2.3.1.25',
  'bsnValidateRogueClientsAgainstAAA' => '1.3.6.1.4.1.14179.2.3.1.26',
  'bsnSystemTimezoneDelta' => '1.3.6.1.4.1.14179.2.3.1.27',
  'bsnSystemTimezoneDaylightSavings' => '1.3.6.1.4.1.14179.2.3.1.28',
  'bsnAllowAuthorizeApAgainstAAA' => '1.3.6.1.4.1.14179.2.3.1.29',
  'bsnSystemTimezoneDeltaMinutes' => '1.3.6.1.4.1.14179.2.3.1.30',
  'bsnApFallbackEnabled' => '1.3.6.1.4.1.14179.2.3.1.31',
  'bsnAppleTalkEnabled' => '1.3.6.1.4.1.14179.2.3.1.32',
  'bsnTrustedApPolicyConfig' => '1.3.6.1.4.1.14179.2.3.1.40',
  'bsnPolicyForMisconfiguredAps' => '1.3.6.1.4.1.14179.2.3.1.40.1',
  'bsnEncryptionPolicyEnforced' => '1.3.6.1.4.1.14179.2.3.1.40.2',
  'bsnPreamblePolicyEnforced' => '1.3.6.1.4.1.14179.2.3.1.40.3',
  'bsnDot11ModePolicyEnforced' => '1.3.6.1.4.1.14179.2.3.1.40.4',
  'bsnRadioTypePolicyEnforced' => '1.3.6.1.4.1.14179.2.3.1.40.5',
  'bsnValidateSsidForTrustedAp' => '1.3.6.1.4.1.14179.2.3.1.40.6',
  'bsnAlertIfTrustedApMissing' => '1.3.6.1.4.1.14179.2.3.1.40.7',
  'bsnTrustedApEntryExpirationTimeout' => '1.3.6.1.4.1.14179.2.3.1.40.8',
  'bsnClientExclusionPolicyConfig' => '1.3.6.1.4.1.14179.2.3.1.41',
  'bsnExcessive80211AssocFailures' => '1.3.6.1.4.1.14179.2.3.1.41.1',
  'bsnExcessive80211AuthFailures' => '1.3.6.1.4.1.14179.2.3.1.41.2',
  'bsnExcessive8021xAuthFailures' => '1.3.6.1.4.1.14179.2.3.1.41.3',
  'bsnExternalPolicyServerFailures' => '1.3.6.1.4.1.14179.2.3.1.41.4',
  'bsnExcessiveWebAuthFailures' => '1.3.6.1.4.1.14179.2.3.1.41.5',
  'bsnIPTheftORReuse' => '1.3.6.1.4.1.14179.2.3.1.41.6',
  'bsnSignatureConfig' => '1.3.6.1.4.1.14179.2.3.1.42',
  'bsnStandardSignatureTable' => '1.3.6.1.4.1.14179.2.3.1.42.1',
  'bsnStandardSignatureEntry' => '1.3.6.1.4.1.14179.2.3.1.42.1.1',
  'bsnStandardSignaturePrecedence' => '1.3.6.1.4.1.14179.2.3.1.42.1.1.1',
  'bsnStandardSignatureName' => '1.3.6.1.4.1.14179.2.3.1.42.1.1.2',
  'bsnStandardSignatureDescription' => '1.3.6.1.4.1.14179.2.3.1.42.1.1.3',
  'bsnStandardSignatureFrameType' => '1.3.6.1.4.1.14179.2.3.1.42.1.1.4',
  'bsnStandardSignatureAction' => '1.3.6.1.4.1.14179.2.3.1.42.1.1.5',
  'bsnStandardSignatureState' => '1.3.6.1.4.1.14179.2.3.1.42.1.1.6',
  'bsnStandardSignatureFrequency' => '1.3.6.1.4.1.14179.2.3.1.42.1.1.7',
  'bsnStandardSignatureQuietTime' => '1.3.6.1.4.1.14179.2.3.1.42.1.1.8',
  'bsnStandardSignatureVersion' => '1.3.6.1.4.1.14179.2.3.1.42.1.1.9',
  'bsnStandardSignatureConfigType' => '1.3.6.1.4.1.14179.2.3.1.42.1.1.10',
  'bsnStandardSignatureEnable' => '1.3.6.1.4.1.14179.2.3.1.42.1.1.11',
  'bsnStandardSignatureMacInfo' => '1.3.6.1.4.1.14179.2.3.1.42.1.1.12',
  'bsnStandardSignatureMacFreq' => '1.3.6.1.4.1.14179.2.3.1.42.1.1.13',
  'bsnStandardSignatureRowStatus' => '1.3.6.1.4.1.14179.2.3.1.42.1.1.20',
  'bsnStandardSignatureInterval' => '1.3.6.1.4.1.14179.2.3.1.42.1.1.21',
  'bsnStandardSignaturePatternTable' => '1.3.6.1.4.1.14179.2.3.1.42.2',
  'bsnStandardSignaturePatternEntry' => '1.3.6.1.4.1.14179.2.3.1.42.2.1',
  'bsnStandardSignaturePatternIndex' => '1.3.6.1.4.1.14179.2.3.1.42.2.1.1',
  'bsnStandardSignaturePatternOffset' => '1.3.6.1.4.1.14179.2.3.1.42.2.1.2',
  'bsnStandardSignaturePatternString' => '1.3.6.1.4.1.14179.2.3.1.42.2.1.3',
  'bsnStandardSignaturePatternMask' => '1.3.6.1.4.1.14179.2.3.1.42.2.1.4',
  'bsnStandardSignaturePatternOffSetStart' => '1.3.6.1.4.1.14179.2.3.1.42.2.1.5',
  'bsnStandardSignaturePatternRowStatus' => '1.3.6.1.4.1.14179.2.3.1.42.2.1.15',
  'bsnCustomSignatureTable' => '1.3.6.1.4.1.14179.2.3.1.42.3',
  'bsnCustomSignatureEntry' => '1.3.6.1.4.1.14179.2.3.1.42.3.1',
  'bsnCustomSignaturePrecedence' => '1.3.6.1.4.1.14179.2.3.1.42.3.1.1',
  'bsnCustomSignatureName' => '1.3.6.1.4.1.14179.2.3.1.42.3.1.2',
  'bsnCustomSignatureDescription' => '1.3.6.1.4.1.14179.2.3.1.42.3.1.3',
  'bsnCustomSignatureFrameType' => '1.3.6.1.4.1.14179.2.3.1.42.3.1.4',
  'bsnCustomSignatureAction' => '1.3.6.1.4.1.14179.2.3.1.42.3.1.5',
  'bsnCustomSignatureState' => '1.3.6.1.4.1.14179.2.3.1.42.3.1.6',
  'bsnCustomSignatureFrequency' => '1.3.6.1.4.1.14179.2.3.1.42.3.1.7',
  'bsnCustomSignatureQuietTime' => '1.3.6.1.4.1.14179.2.3.1.42.3.1.8',
  'bsnCustomSignatureVersion' => '1.3.6.1.4.1.14179.2.3.1.42.3.1.9',
  'bsnCustomSignatureConfigType' => '1.3.6.1.4.1.14179.2.3.1.42.3.1.10',
  'bsnCustomSignatureEnable' => '1.3.6.1.4.1.14179.2.3.1.42.3.1.11',
  'bsnCustomSignatureMacInfo' => '1.3.6.1.4.1.14179.2.3.1.42.3.1.12',
  'bsnCustomSignatureMacFreq' => '1.3.6.1.4.1.14179.2.3.1.42.3.1.13',
  'bsnCustomSignatureRowStatus' => '1.3.6.1.4.1.14179.2.3.1.42.3.1.20',
  'bsnCustomSignatureInterval' => '1.3.6.1.4.1.14179.2.3.1.42.3.1.21',
  'bsnCustomSignaturePatternTable' => '1.3.6.1.4.1.14179.2.3.1.42.4',
  'bsnCustomSignaturePatternEntry' => '1.3.6.1.4.1.14179.2.3.1.42.4.1',
  'bsnCustomSignaturePatternIndex' => '1.3.6.1.4.1.14179.2.3.1.42.4.1.1',
  'bsnCustomSignaturePatternOffset' => '1.3.6.1.4.1.14179.2.3.1.42.4.1.2',
  'bsnCustomSignaturePatternString' => '1.3.6.1.4.1.14179.2.3.1.42.4.1.3',
  'bsnCustomSignaturePatternMask' => '1.3.6.1.4.1.14179.2.3.1.42.4.1.4',
  'bsnCustomSignaturePatternOffSetStart' => '1.3.6.1.4.1.14179.2.3.1.42.4.1.5',
  'bsnCustomSignaturePatternRowStatus' => '1.3.6.1.4.1.14179.2.3.1.42.4.1.15',
  'bsnSignatureCheckState' => '1.3.6.1.4.1.14179.2.3.1.42.5',
  'bsnRfIdTagConfig' => '1.3.6.1.4.1.14179.2.3.1.43',
  'bsnRfIdTagStatus' => '1.3.6.1.4.1.14179.2.3.1.43.1',
  'bsnRfIdTagDataTimeout' => '1.3.6.1.4.1.14179.2.3.1.43.2',
  'bsnRfIdTagAutoTimeoutStatus' => '1.3.6.1.4.1.14179.2.3.1.43.3',
  'bsnAPNeighborAuthConfig' => '1.3.6.1.4.1.14179.2.3.1.44',
  'bsnAPNeighborAuthStatus' => '1.3.6.1.4.1.14179.2.3.1.44.1',
  'bsnAPNeighborAuthAlarmThreshold' => '1.3.6.1.4.1.14179.2.3.1.44.2',
  'bsnRFNetworkName' => '1.3.6.1.4.1.14179.2.3.1.45',
  'bsnFastSSIDChangeFeature' => '1.3.6.1.4.1.14179.2.3.1.46',
  'bsnBridgingPolicyConfig' => '1.3.6.1.4.1.14179.2.3.1.47',
  'bsnBridgingZeroTouchConfig' => '1.3.6.1.4.1.14179.2.3.1.47.1',
  'bsnBridgingSharedSecretKey' => '1.3.6.1.4.1.14179.2.3.1.47.2',
  'bsnAcceptSelfSignedCertificate' => '1.3.6.1.4.1.14179.2.3.1.48',
  'bsnSystemClockTime' => '1.3.6.1.4.1.14179.2.3.1.49',
  'bsnGlobalDot11b' => '1.3.6.1.4.1.14179.2.3.2',
  'bsnGlobalDot11bConfig' => '1.3.6.1.4.1.14179.2.3.2.1',
  'bsnGlobalDot11bNetworkStatus' => '1.3.6.1.4.1.14179.2.3.2.1.1',
  'bsnGlobalDot11bBeaconPeriod' => '1.3.6.1.4.1.14179.2.3.2.1.2',
  'bsnGlobalDot11bDynamicChannelAssignment' => '1.3.6.1.4.1.14179.2.3.2.1.3',
  'bsnGlobalDot11bCurrentChannel' => '1.3.6.1.4.1.14179.2.3.2.1.4',
  'bsnGlobalDot11bDynamicChannelUpdateInterval' => '1.3.6.1.4.1.14179.2.3.2.1.5',
  'bsnGlobalDot11bInputsForDCA' => '1.3.6.1.4.1.14179.2.3.2.1.6',
  'bsnGlobalDot11bChannelUpdateCmdInvoke' => '1.3.6.1.4.1.14179.2.3.2.1.7',
  'bsnGlobalDot11bChannelUpdateCmdStatus' => '1.3.6.1.4.1.14179.2.3.2.1.8',
  'bsnGlobalDot11bDynamicTransmitPowerControl' => '1.3.6.1.4.1.14179.2.3.2.1.9',
  'bsnGlobalDot11bDynamicTxPowerControlInterval' => '1.3.6.1.4.1.14179.2.3.2.1.10',
  'bsnGlobalDot11bCurrentTxPowerLevel' => '1.3.6.1.4.1.14179.2.3.2.1.11',
  'bsnGlobalDot11bInputsForDTP' => '1.3.6.1.4.1.14179.2.3.2.1.12',
  'bsnGlobalDot11bPowerUpdateCmdInvoke' => '1.3.6.1.4.1.14179.2.3.2.1.13',
  'bsnGlobalDot11bPowerUpdateCmdStatus' => '1.3.6.1.4.1.14179.2.3.2.1.14',
  'bsnGlobalDot11bDataRate1Mhz' => '1.3.6.1.4.1.14179.2.3.2.1.15',
  'bsnGlobalDot11bDataRate2Mhz' => '1.3.6.1.4.1.14179.2.3.2.1.16',
  'bsnGlobalDot11bDataRate5AndHalfMhz' => '1.3.6.1.4.1.14179.2.3.2.1.17',
  'bsnGlobalDot11bDataRate11Mhz' => '1.3.6.1.4.1.14179.2.3.2.1.18',
  'bsnGlobalDot11bShortPreamble' => '1.3.6.1.4.1.14179.2.3.2.1.19',
  'bsnGlobalDot11bDot11gSupport' => '1.3.6.1.4.1.14179.2.3.2.1.20',
  'bsnGlobalDot11bDataRate6Mhz' => '1.3.6.1.4.1.14179.2.3.2.1.21',
  'bsnGlobalDot11bDataRate9Mhz' => '1.3.6.1.4.1.14179.2.3.2.1.22',
  'bsnGlobalDot11bDataRate12Mhz' => '1.3.6.1.4.1.14179.2.3.2.1.23',
  'bsnGlobalDot11bDataRate18Mhz' => '1.3.6.1.4.1.14179.2.3.2.1.24',
  'bsnGlobalDot11bDataRate24Mhz' => '1.3.6.1.4.1.14179.2.3.2.1.25',
  'bsnGlobalDot11bDataRate36Mhz' => '1.3.6.1.4.1.14179.2.3.2.1.26',
  'bsnGlobalDot11bDataRate48Mhz' => '1.3.6.1.4.1.14179.2.3.2.1.27',
  'bsnGlobalDot11bDataRate54Mhz' => '1.3.6.1.4.1.14179.2.3.2.1.28',
  'bsnGlobalDot11bPicoCellMode' => '1.3.6.1.4.1.14179.2.3.2.1.29',
  'bsnGlobalDot11bFastRoamingMode' => '1.3.6.1.4.1.14179.2.3.2.1.30',
  'bsnGlobalDot11bFastRoamingVoipMinRate' => '1.3.6.1.4.1.14179.2.3.2.1.31',
  'bsnGlobalDot11bFastRoamingVoipPercentage' => '1.3.6.1.4.1.14179.2.3.2.1.32',
  'bsnGlobalDot11b80211eMaxBandwidth' => '1.3.6.1.4.1.14179.2.3.2.1.33',
  'bsnGlobalDot11bDTPCSupport' => '1.3.6.1.4.1.14179.2.3.2.1.34',
  'bsnGlobalDot11bPhy' => '1.3.6.1.4.1.14179.2.3.2.2',
  'bsnGlobalDot11bMediumOccupancyLimit' => '1.3.6.1.4.1.14179.2.3.2.2.1',
  'bsnGlobalDot11bCFPPeriod' => '1.3.6.1.4.1.14179.2.3.2.2.2',
  'bsnGlobalDot11bCFPMaxDuration' => '1.3.6.1.4.1.14179.2.3.2.2.3',
  'bsnGlobalDot11bCFPollable' => '1.3.6.1.4.1.14179.2.3.2.2.5',
  'bsnGlobalDot11bCFPollRequest' => '1.3.6.1.4.1.14179.2.3.2.2.6',
  'bsnGlobalDot11bDTIMPeriod' => '1.3.6.1.4.1.14179.2.3.2.2.7',
  'bsnGlobalDot11bMaximumTransmitPowerLevel' => '1.3.6.1.4.1.14179.2.3.2.2.8',
  'bsnGlobalDot11bFirstChannelNumber' => '1.3.6.1.4.1.14179.2.3.2.2.9',
  'bsnGlobalDot11bNumberofChannels' => '1.3.6.1.4.1.14179.2.3.2.2.10',
  'bsnGlobalDot11bRTSThreshold' => '1.3.6.1.4.1.14179.2.3.2.2.11',
  'bsnGlobalDot11bShortRetryLimit' => '1.3.6.1.4.1.14179.2.3.2.2.12',
  'bsnGlobalDot11bLongRetryLimit' => '1.3.6.1.4.1.14179.2.3.2.2.13',
  'bsnGlobalDot11bFragmentationThreshold' => '1.3.6.1.4.1.14179.2.3.2.2.14',
  'bsnGlobalDot11bMaxTransmitMSDULifetime' => '1.3.6.1.4.1.14179.2.3.2.2.15',
  'bsnGlobalDot11bMaxReceiveLifetime' => '1.3.6.1.4.1.14179.2.3.2.2.16',
  'bsnGlobalDot11bEDThreshold' => '1.3.6.1.4.1.14179.2.3.2.2.17',
  'bsnGlobalDot11bChannelAgilityEnabled' => '1.3.6.1.4.1.14179.2.3.2.2.18',
  'bsnGlobalDot11bPBCCOptionImplemented' => '1.3.6.1.4.1.14179.2.3.2.2.19',
  'bsnGlobalDot11bShortPreambleOptionImplemented' => '1.3.6.1.4.1.14179.2.3.2.2.20',
  'bsnGlobalDot11a' => '1.3.6.1.4.1.14179.2.3.3',
  'bsnGlobalDot11aConfig' => '1.3.6.1.4.1.14179.2.3.3.1',
  'bsnGlobalDot11aNetworkStatus' => '1.3.6.1.4.1.14179.2.3.3.1.1',
  'bsnGlobalDot11aLowBandNetwork' => '1.3.6.1.4.1.14179.2.3.3.1.2',
  'bsnGlobalDot11aMediumBandNetwork' => '1.3.6.1.4.1.14179.2.3.3.1.3',
  'bsnGlobalDot11aHighBandNetwork' => '1.3.6.1.4.1.14179.2.3.3.1.4',
  'bsnGlobalDot11aBeaconPeriod' => '1.3.6.1.4.1.14179.2.3.3.1.5',
  'bsnGlobalDot11aDynamicChannelAssignment' => '1.3.6.1.4.1.14179.2.3.3.1.6',
  'bsnGlobalDot11aCurrentChannel' => '1.3.6.1.4.1.14179.2.3.3.1.7',
  'bsnGlobalDot11aDynamicChannelUpdateInterval' => '1.3.6.1.4.1.14179.2.3.3.1.8',
  'bsnGlobalDot11aInputsForDCA' => '1.3.6.1.4.1.14179.2.3.3.1.9',
  'bsnGlobalDot11aChannelUpdateCmdInvoke' => '1.3.6.1.4.1.14179.2.3.3.1.10',
  'bsnGlobalDot11aChannelUpdateCmdStatus' => '1.3.6.1.4.1.14179.2.3.3.1.11',
  'bsnGlobalDot11aDynamicTransmitPowerControl' => '1.3.6.1.4.1.14179.2.3.3.1.12',
  'bsnGlobalDot11aCurrentTxPowerLevel' => '1.3.6.1.4.1.14179.2.3.3.1.13',
  'bsnGlobalDot11aDynamicTxPowerControlInterval' => '1.3.6.1.4.1.14179.2.3.3.1.14',
  'bsnGlobalDot11aInputsForDTP' => '1.3.6.1.4.1.14179.2.3.3.1.15',
  'bsnGlobalDot11aPowerUpdateCmdInvoke' => '1.3.6.1.4.1.14179.2.3.3.1.16',
  'bsnGlobalDot11aPowerUpdateCmdStatus' => '1.3.6.1.4.1.14179.2.3.3.1.17',
  'bsnGlobalDot11aDataRate6Mhz' => '1.3.6.1.4.1.14179.2.3.3.1.19',
  'bsnGlobalDot11aDataRate9Mhz' => '1.3.6.1.4.1.14179.2.3.3.1.20',
  'bsnGlobalDot11aDataRate12Mhz' => '1.3.6.1.4.1.14179.2.3.3.1.21',
  'bsnGlobalDot11aDataRate18Mhz' => '1.3.6.1.4.1.14179.2.3.3.1.22',
  'bsnGlobalDot11aDataRate24Mhz' => '1.3.6.1.4.1.14179.2.3.3.1.23',
  'bsnGlobalDot11aDataRate36Mhz' => '1.3.6.1.4.1.14179.2.3.3.1.24',
  'bsnGlobalDot11aDataRate48Mhz' => '1.3.6.1.4.1.14179.2.3.3.1.25',
  'bsnGlobalDot11aDataRate54Mhz' => '1.3.6.1.4.1.14179.2.3.3.1.26',
  'bsnGlobalDot11aPicoCellMode' => '1.3.6.1.4.1.14179.2.3.3.1.27',
  'bsnGlobalDot11aFastRoamingMode' => '1.3.6.1.4.1.14179.2.3.3.1.28',
  'bsnGlobalDot11aFastRoamingVoipMinRate' => '1.3.6.1.4.1.14179.2.3.3.1.29',
  'bsnGlobalDot11aFastRoamingVoipPercentage' => '1.3.6.1.4.1.14179.2.3.3.1.30',
  'bsnGlobalDot11a80211eMaxBandwidth' => '1.3.6.1.4.1.14179.2.3.3.1.31',
  'bsnGlobalDot11aDTPCSupport' => '1.3.6.1.4.1.14179.2.3.3.1.32',
  'bsnGlobalDot11aPhy' => '1.3.6.1.4.1.14179.2.3.3.2',
  'bsnGlobalDot11aMediumOccupancyLimit' => '1.3.6.1.4.1.14179.2.3.3.2.1',
  'bsnGlobalDot11aCFPPeriod' => '1.3.6.1.4.1.14179.2.3.3.2.2',
  'bsnGlobalDot11aCFPMaxDuration' => '1.3.6.1.4.1.14179.2.3.3.2.3',
  'bsnGlobalDot11aCFPollable' => '1.3.6.1.4.1.14179.2.3.3.2.5',
  'bsnGlobalDot11aCFPollRequest' => '1.3.6.1.4.1.14179.2.3.3.2.6',
  'bsnGlobalDot11aDTIMPeriod' => '1.3.6.1.4.1.14179.2.3.3.2.7',
  'bsnGlobalDot11aMaximumTransmitPowerLevel' => '1.3.6.1.4.1.14179.2.3.3.2.8',
  'bsnGlobalDot11aFirstChannelNumber' => '1.3.6.1.4.1.14179.2.3.3.2.9',
  'bsnGlobalDot11aNumberofChannels' => '1.3.6.1.4.1.14179.2.3.3.2.10',
  'bsnGlobalDot11aRTSThreshold' => '1.3.6.1.4.1.14179.2.3.3.2.11',
  'bsnGlobalDot11aShortRetryLimit' => '1.3.6.1.4.1.14179.2.3.3.2.12',
  'bsnGlobalDot11aLongRetryLimit' => '1.3.6.1.4.1.14179.2.3.3.2.13',
  'bsnGlobalDot11aFragmentationThreshold' => '1.3.6.1.4.1.14179.2.3.3.2.14',
  'bsnGlobalDot11aMaxTransmitMSDULifetime' => '1.3.6.1.4.1.14179.2.3.3.2.15',
  'bsnGlobalDot11aMaxReceiveLifetime' => '1.3.6.1.4.1.14179.2.3.3.2.16',
  'bsnGlobalDot11aTIThreshold' => '1.3.6.1.4.1.14179.2.3.3.2.17',
  'bsnGlobalDot11aChannelAgilityEnabled' => '1.3.6.1.4.1.14179.2.3.3.2.18',
  'bsnGlobalDot11h' => '1.3.6.1.4.1.14179.2.3.4',
  'bsnGlobalDot11hConfig' => '1.3.6.1.4.1.14179.2.3.4.1',
  'bsnGlobalDot11hPowerConstraint' => '1.3.6.1.4.1.14179.2.3.4.1.1',
  'bsnGlobalDot11hChannelSwitchEnable' => '1.3.6.1.4.1.14179.2.3.4.1.2',
  'bsnGlobalDot11hChannelSwitchMode' => '1.3.6.1.4.1.14179.2.3.4.1.3',
  'bsnRrm' => '1.3.6.1.4.1.14179.2.4',
  'bsnRrmDot11a' => '1.3.6.1.4.1.14179.2.4.1',
  'bsnRrmDot11aGroup' => '1.3.6.1.4.1.14179.2.4.1.1',
  'bsnRrmDot11aGlobalAutomaticGrouping' => '1.3.6.1.4.1.14179.2.4.1.1.1',
  'bsnRrmDot11aGroupLeaderMacAddr' => '1.3.6.1.4.1.14179.2.4.1.1.2',
  'bsnRrmIsDot11aGroupLeader' => '1.3.6.1.4.1.14179.2.4.1.1.3',
  'bsnRrmDot11aGroupLastUpdateTime' => '1.3.6.1.4.1.14179.2.4.1.1.4',
  'bsnRrmDot11aGlobalGroupInterval' => '1.3.6.1.4.1.14179.2.4.1.1.5',
  'bsnWrasDot11aGroupTable' => '1.3.6.1.4.1.14179.2.4.1.1.9',
  'bsnWrasDot11aGroupEntry' => '1.3.6.1.4.1.14179.2.4.1.1.9.1',
  'bsnWrasDot11aPeerMacAddress' => '1.3.6.1.4.1.14179.2.4.1.1.9.1.1',
  'bsnWrasDot11aPeerIpAddress' => '1.3.6.1.4.1.14179.2.4.1.1.9.1.21',
  'bsnRrmDot11aAPDefault' => '1.3.6.1.4.1.14179.2.4.1.6',
  'bsnRrmDot11aForeignInterferenceThreshold' => '1.3.6.1.4.1.14179.2.4.1.6.1',
  'bsnRrmDot11aForeignNoiseThreshold' => '1.3.6.1.4.1.14179.2.4.1.6.2',
  'bsnRrmDot11aRFUtilizationThreshold' => '1.3.6.1.4.1.14179.2.4.1.6.3',
  'bsnRrmDot11aThroughputThreshold' => '1.3.6.1.4.1.14179.2.4.1.6.4',
  'bsnRrmDot11aMobilesThreshold' => '1.3.6.1.4.1.14179.2.4.1.6.5',
  'bsnRrmDot11aCoverageThreshold' => '1.3.6.1.4.1.14179.2.4.1.6.6',
  'bsnRrmDot11aMobileMinExceptionLevel' => '1.3.6.1.4.1.14179.2.4.1.6.7',
  'bsnRrmDot11aCoverageExceptionLevel' => '1.3.6.1.4.1.14179.2.4.1.6.8',
  'bsnRrmDot11aSignalMeasurementInterval' => '1.3.6.1.4.1.14179.2.4.1.6.9',
  'bsnRrmDot11aNoiseMeasurementInterval' => '1.3.6.1.4.1.14179.2.4.1.6.10',
  'bsnRrmDot11aLoadMeasurementInterval' => '1.3.6.1.4.1.14179.2.4.1.6.11',
  'bsnRrmDot11aCoverageMeasurementInterval' => '1.3.6.1.4.1.14179.2.4.1.6.12',
  'bsnRrmDot11aChannelMonitorList' => '1.3.6.1.4.1.14179.2.4.1.6.13',
  'bsnRrmDot11aSetFactoryDefault' => '1.3.6.1.4.1.14179.2.4.1.7',
  'bsnRrmDot11b' => '1.3.6.1.4.1.14179.2.4.2',
  'bsnRrmDot11bGroup' => '1.3.6.1.4.1.14179.2.4.2.1',
  'bsnRrmDot11bGlobalAutomaticGrouping' => '1.3.6.1.4.1.14179.2.4.2.1.1',
  'bsnRrmDot11bGroupLeaderMacAddr' => '1.3.6.1.4.1.14179.2.4.2.1.2',
  'bsnRrmIsDot11bGroupLeader' => '1.3.6.1.4.1.14179.2.4.2.1.3',
  'bsnRrmDot11bGroupLastUpdateTime' => '1.3.6.1.4.1.14179.2.4.2.1.4',
  'bsnRrmDot11bGlobalGroupInterval' => '1.3.6.1.4.1.14179.2.4.2.1.5',
  'bsnWrasDot11bGroupTable' => '1.3.6.1.4.1.14179.2.4.2.1.9',
  'bsnWrasDot11bGroupEntry' => '1.3.6.1.4.1.14179.2.4.2.1.9.1',
  'bsnWrasDot11bPeerMacAddress' => '1.3.6.1.4.1.14179.2.4.2.1.9.1.1',
  'bsnWrasDot11bPeerIpAddress' => '1.3.6.1.4.1.14179.2.4.2.1.9.1.21',
  'bsnRrmDot11bAPDefault' => '1.3.6.1.4.1.14179.2.4.2.6',
  'bsnRrmDot11bForeignInterferenceThreshold' => '1.3.6.1.4.1.14179.2.4.2.6.1',
  'bsnRrmDot11bForeignNoiseThreshold' => '1.3.6.1.4.1.14179.2.4.2.6.2',
  'bsnRrmDot11bRFUtilizationThreshold' => '1.3.6.1.4.1.14179.2.4.2.6.3',
  'bsnRrmDot11bThroughputThreshold' => '1.3.6.1.4.1.14179.2.4.2.6.4',
  'bsnRrmDot11bMobilesThreshold' => '1.3.6.1.4.1.14179.2.4.2.6.5',
  'bsnRrmDot11bCoverageThreshold' => '1.3.6.1.4.1.14179.2.4.2.6.6',
  'bsnRrmDot11bMobileMinExceptionLevel' => '1.3.6.1.4.1.14179.2.4.2.6.7',
  'bsnRrmDot11bCoverageExceptionLevel' => '1.3.6.1.4.1.14179.2.4.2.6.8',
  'bsnRrmDot11bSignalMeasurementInterval' => '1.3.6.1.4.1.14179.2.4.2.6.9',
  'bsnRrmDot11bNoiseMeasurementInterval' => '1.3.6.1.4.1.14179.2.4.2.6.10',
  'bsnRrmDot11bLoadMeasurementInterval' => '1.3.6.1.4.1.14179.2.4.2.6.11',
  'bsnRrmDot11bCoverageMeasurementInterval' => '1.3.6.1.4.1.14179.2.4.2.6.12',
  'bsnRrmDot11bChannelMonitorList' => '1.3.6.1.4.1.14179.2.4.2.6.13',
  'bsnRrmDot11bSetFactoryDefault' => '1.3.6.1.4.1.14179.2.4.2.7',
  'bsnAAA' => '1.3.6.1.4.1.14179.2.5',
  'bsnRadiusAuthServerTable' => '1.3.6.1.4.1.14179.2.5.1',
  'bsnRadiusAuthServerEntry' => '1.3.6.1.4.1.14179.2.5.1.1',
  'bsnRadiusAuthServerIndex' => '1.3.6.1.4.1.14179.2.5.1.1.1',
  'bsnRadiusAuthServerAddress' => '1.3.6.1.4.1.14179.2.5.1.1.2',
  'bsnRadiusAuthClientServerPortNumber' => '1.3.6.1.4.1.14179.2.5.1.1.3',
  'bsnRadiusAuthServerKey' => '1.3.6.1.4.1.14179.2.5.1.1.4',
  'bsnRadiusAuthServerStatus' => '1.3.6.1.4.1.14179.2.5.1.1.5',
  'bsnRadiusAuthServerKeyFormat' => '1.3.6.1.4.1.14179.2.5.1.1.6',
  'bsnRadiusAuthServerRFC3576' => '1.3.6.1.4.1.14179.2.5.1.1.7',
  'bsnRadiusAuthServerIPSec' => '1.3.6.1.4.1.14179.2.5.1.1.8',
  'bsnRadiusAuthServerIPSecAuth' => '1.3.6.1.4.1.14179.2.5.1.1.9',
  'bsnRadiusAuthServerIPSecEncryption' => '1.3.6.1.4.1.14179.2.5.1.1.10',
  'bsnRadiusAuthServerIPSecIKEPhase1' => '1.3.6.1.4.1.14179.2.5.1.1.11',
  'bsnRadiusAuthServerIPSecIKELifetime' => '1.3.6.1.4.1.14179.2.5.1.1.12',
  'bsnRadiusAuthServerIPSecDHGroup' => '1.3.6.1.4.1.14179.2.5.1.1.13',
  'bsnRadiusAuthServerNetworkUserConfig' => '1.3.6.1.4.1.14179.2.5.1.1.14',
  'bsnRadiusAuthServerMgmtUserConfig' => '1.3.6.1.4.1.14179.2.5.1.1.15',
  'bsnRadiusAuthServerRetransmitTimeout' => '1.3.6.1.4.1.14179.2.5.1.1.17',
  'bsnRadiusAuthServerKeyWrapKEKkey' => '1.3.6.1.4.1.14179.2.5.1.1.18',
  'bsnRadiusAuthServerKeyWrapMACKkey' => '1.3.6.1.4.1.14179.2.5.1.1.19',
  'bsnRadiusAuthServerKeyWrapFormat' => '1.3.6.1.4.1.14179.2.5.1.1.20',
  'bsnRadiusAuthServerRowStatus' => '1.3.6.1.4.1.14179.2.5.1.1.26',
  'bsnRadiusAccServerTable' => '1.3.6.1.4.1.14179.2.5.2',
  'bsnRadiusAccServerEntry' => '1.3.6.1.4.1.14179.2.5.2.1',
  'bsnRadiusAccServerIndex' => '1.3.6.1.4.1.14179.2.5.2.1.1',
  'bsnRadiusAccServerAddress' => '1.3.6.1.4.1.14179.2.5.2.1.2',
  'bsnRadiusAccClientServerPortNumber' => '1.3.6.1.4.1.14179.2.5.2.1.3',
  'bsnRadiusAccServerKey' => '1.3.6.1.4.1.14179.2.5.2.1.4',
  'bsnRadiusAccServerStatus' => '1.3.6.1.4.1.14179.2.5.2.1.5',
  'bsnRadiusAccServerKeyFormat' => '1.3.6.1.4.1.14179.2.5.2.1.6',
  'bsnRadiusAccServerIPSec' => '1.3.6.1.4.1.14179.2.5.2.1.7',
  'bsnRadiusAccServerIPSecAuth' => '1.3.6.1.4.1.14179.2.5.2.1.8',
  'bsnRadiusAccServerIPSecEncryption' => '1.3.6.1.4.1.14179.2.5.2.1.9',
  'bsnRadiusAccServerIPSecIKEPhase1' => '1.3.6.1.4.1.14179.2.5.2.1.10',
  'bsnRadiusAccServerIPSecIKELifetime' => '1.3.6.1.4.1.14179.2.5.2.1.11',
  'bsnRadiusAccServerIPSecDHGroup' => '1.3.6.1.4.1.14179.2.5.2.1.12',
  'bsnRadiusAccServerNetworkUserConfig' => '1.3.6.1.4.1.14179.2.5.2.1.13',
  'bsnRadiusAccServerRetransmitTimeout' => '1.3.6.1.4.1.14179.2.5.2.1.14',
  'bsnRadiusAccServerRowStatus' => '1.3.6.1.4.1.14179.2.5.2.1.26',
  'bsnRadiusAuthServerStatsTable' => '1.3.6.1.4.1.14179.2.5.3',
  'bsnRadiusAuthServerStatsEntry' => '1.3.6.1.4.1.14179.2.5.3.1',
  'bsnRadiusAuthClientRoundTripTime' => '1.3.6.1.4.1.14179.2.5.3.1.6',
  'bsnRadiusAuthClientAccessRequests' => '1.3.6.1.4.1.14179.2.5.3.1.7',
  'bsnRadiusAuthClientAccessRetransmissions' => '1.3.6.1.4.1.14179.2.5.3.1.8',
  'bsnRadiusAuthClientAccessAccepts' => '1.3.6.1.4.1.14179.2.5.3.1.9',
  'bsnRadiusAuthClientAccessRejects' => '1.3.6.1.4.1.14179.2.5.3.1.10',
  'bsnRadiusAuthClientAccessChallenges' => '1.3.6.1.4.1.14179.2.5.3.1.11',
  'bsnRadiusAuthClientMalformedAccessResponses' => '1.3.6.1.4.1.14179.2.5.3.1.12',
  'bsnRadiusAuthClientBadAuthenticators' => '1.3.6.1.4.1.14179.2.5.3.1.13',
  'bsnRadiusAuthClientPendingRequests' => '1.3.6.1.4.1.14179.2.5.3.1.14',
  'bsnRadiusAuthClientTimeouts' => '1.3.6.1.4.1.14179.2.5.3.1.15',
  'bsnRadiusAuthClientUnknownTypes' => '1.3.6.1.4.1.14179.2.5.3.1.16',
  'bsnRadiusAuthClientPacketsDropped' => '1.3.6.1.4.1.14179.2.5.3.1.36',
  'bsnRadiusAccServerStatsTable' => '1.3.6.1.4.1.14179.2.5.4',
  'bsnRadiusAccServerStatsEntry' => '1.3.6.1.4.1.14179.2.5.4.1',
  'bsnRadiusAccClientRoundTripTime' => '1.3.6.1.4.1.14179.2.5.4.1.6',
  'bsnRadiusAccClientRequests' => '1.3.6.1.4.1.14179.2.5.4.1.7',
  'bsnRadiusAccClientRetransmissions' => '1.3.6.1.4.1.14179.2.5.4.1.8',
  'bsnRadiusAccClientResponses' => '1.3.6.1.4.1.14179.2.5.4.1.9',
  'bsnRadiusAccClientMalformedResponses' => '1.3.6.1.4.1.14179.2.5.4.1.10',
  'bsnRadiusAccClientBadAuthenticators' => '1.3.6.1.4.1.14179.2.5.4.1.11',
  'bsnRadiusAccClientPendingRequests' => '1.3.6.1.4.1.14179.2.5.4.1.12',
  'bsnRadiusAccClientTimeouts' => '1.3.6.1.4.1.14179.2.5.4.1.13',
  'bsnRadiusAccClientUnknownTypes' => '1.3.6.1.4.1.14179.2.5.4.1.14',
  'bsnRadiusAccClientPacketsDropped' => '1.3.6.1.4.1.14179.2.5.4.1.34',
  'bsnUsersTable' => '1.3.6.1.4.1.14179.2.5.5',
  'bsnUsersEntry' => '1.3.6.1.4.1.14179.2.5.5.1',
  'bsnUserName' => '1.3.6.1.4.1.14179.2.5.5.1.2',
  'bsnUserPassword' => '1.3.6.1.4.1.14179.2.5.5.1.3',
  'bsnUserEssIndex' => '1.3.6.1.4.1.14179.2.5.5.1.4',
  'bsnUserAccessMode' => '1.3.6.1.4.1.14179.2.5.5.1.5',
  'bsnUserType' => '1.3.6.1.4.1.14179.2.5.5.1.6',
  'bsnUserInterfaceName' => '1.3.6.1.4.1.14179.2.5.5.1.7',
  'bsnUserRowStatus' => '1.3.6.1.4.1.14179.2.5.5.1.26',
  'bsnBlackListClientTable' => '1.3.6.1.4.1.14179.2.5.6',
  'bsnBlackListClientEntry' => '1.3.6.1.4.1.14179.2.5.6.1',
  'bsnBlackListClientMacAddress' => '1.3.6.1.4.1.14179.2.5.6.1.1',
  'bsnBlackListClientDescription' => '1.3.6.1.4.1.14179.2.5.6.1.2',
  'bsnBlackListClientRowStatus' => '1.3.6.1.4.1.14179.2.5.6.1.22',
  'bsnAclTable' => '1.3.6.1.4.1.14179.2.5.7',
  'bsnAclEntry' => '1.3.6.1.4.1.14179.2.5.7.1',
  'bsnAclName' => '1.3.6.1.4.1.14179.2.5.7.1.1',
  'bsnAclApplyMode' => '1.3.6.1.4.1.14179.2.5.7.1.2',
  'bsnAclRowStatus' => '1.3.6.1.4.1.14179.2.5.7.1.20',
  'bsnAclRuleTable' => '1.3.6.1.4.1.14179.2.5.8',
  'bsnAclRuleEntry' => '1.3.6.1.4.1.14179.2.5.8.1',
  'bsnAclRuleIndex' => '1.3.6.1.4.1.14179.2.5.8.1.2',
  'bsnAclRuleAction' => '1.3.6.1.4.1.14179.2.5.8.1.3',
  'bsnAclRuleDirection' => '1.3.6.1.4.1.14179.2.5.8.1.4',
  'bsnAclRuleSourceIpAddress' => '1.3.6.1.4.1.14179.2.5.8.1.5',
  'bsnAclRuleSourceIpNetmask' => '1.3.6.1.4.1.14179.2.5.8.1.6',
  'bsnAclRuleDestinationIpAddress' => '1.3.6.1.4.1.14179.2.5.8.1.7',
  'bsnAclRuleDestinationIpNetmask' => '1.3.6.1.4.1.14179.2.5.8.1.8',
  'bsnAclRuleProtocol' => '1.3.6.1.4.1.14179.2.5.8.1.9',
  'bsnAclRuleStartSourcePort' => '1.3.6.1.4.1.14179.2.5.8.1.10',
  'bsnAclRuleEndSourcePort' => '1.3.6.1.4.1.14179.2.5.8.1.11',
  'bsnAclRuleStartDestinationPort' => '1.3.6.1.4.1.14179.2.5.8.1.12',
  'bsnAclRuleEndDestinationPort' => '1.3.6.1.4.1.14179.2.5.8.1.13',
  'bsnAclRuleDscp' => '1.3.6.1.4.1.14179.2.5.8.1.14',
  'bsnAclNewRuleIndex' => '1.3.6.1.4.1.14179.2.5.8.1.15',
  'bsnAclRuleRowStatus' => '1.3.6.1.4.1.14179.2.5.8.1.40',
  'bsnMacFilterTable' => '1.3.6.1.4.1.14179.2.5.9',
  'bsnMacFilterEntry' => '1.3.6.1.4.1.14179.2.5.9.1',
  'bsnMacFilterAddress' => '1.3.6.1.4.1.14179.2.5.9.1.1',
  'bsnMacFilterWlanId' => '1.3.6.1.4.1.14179.2.5.9.1.2',
  'bsnMacFilterInterfaceName' => '1.3.6.1.4.1.14179.2.5.9.1.3',
  'bsnMacFilterDescription' => '1.3.6.1.4.1.14179.2.5.9.1.4',
  'bsnMacFilterRowStatus' => '1.3.6.1.4.1.14179.2.5.9.1.24',
  'bsnLocalNetUserTable' => '1.3.6.1.4.1.14179.2.5.10',
  'bsnLocalNetUserEntry' => '1.3.6.1.4.1.14179.2.5.10.1',
  'bsnLocalNetUserName' => '1.3.6.1.4.1.14179.2.5.10.1.1',
  'bsnLocalNetUserWlanId' => '1.3.6.1.4.1.14179.2.5.10.1.2',
  'bsnLocalNetUserPassword' => '1.3.6.1.4.1.14179.2.5.10.1.3',
  'bsnLocalNetUserDescription' => '1.3.6.1.4.1.14179.2.5.10.1.4',
  'bsnLocalNetUserLifetime' => '1.3.6.1.4.1.14179.2.5.10.1.5',
  'bsnLocalNetUserStartTime' => '1.3.6.1.4.1.14179.2.5.10.1.6',
  'bsnLocalNetUserRemainingTime' => '1.3.6.1.4.1.14179.2.5.10.1.7',
  'bsnLocalNetUserRowStatus' => '1.3.6.1.4.1.14179.2.5.10.1.24',
  'bsnLocalManagementUserTable' => '1.3.6.1.4.1.14179.2.5.11',
  'bsnLocalManagementUserEntry' => '1.3.6.1.4.1.14179.2.5.11.1',
  'bsnLocalManagementUserName' => '1.3.6.1.4.1.14179.2.5.11.1.1',
  'bsnLocalManagementUserPassword' => '1.3.6.1.4.1.14179.2.5.11.1.2',
  'bsnLocalManagementUserAccessMode' => '1.3.6.1.4.1.14179.2.5.11.1.3',
  'bsnLocalManagementUserRowStatus' => '1.3.6.1.4.1.14179.2.5.11.1.23',
  'bsnRadiusAuthKeyWrapEnable' => '1.3.6.1.4.1.14179.2.5.12',
  'bsnRadiusAuthCacheCredentialsLocally' => '1.3.6.1.4.1.14179.2.5.14',
  'bsnAAAMacDelimiter' => '1.3.6.1.4.1.14179.2.5.15',
  'bsnAAARadiusCompatibilityMode' => '1.3.6.1.4.1.14179.2.5.16',
  'bsnAAARadiusCallStationIdType' => '1.3.6.1.4.1.14179.2.5.17',
  'bsnExternalPolicyServerAclName' => '1.3.6.1.4.1.14179.2.5.18',
  'bsnExternalPolicyServerTable' => '1.3.6.1.4.1.14179.2.5.19',
  'bsnExternalPolicyServerEntry' => '1.3.6.1.4.1.14179.2.5.19.1',
  'bsnExternalPolicyServerIndex' => '1.3.6.1.4.1.14179.2.5.19.1.1',
  'bsnExternalPolicyServerAddress' => '1.3.6.1.4.1.14179.2.5.19.1.2',
  'bsnExternalPolicyServerPortNumber' => '1.3.6.1.4.1.14179.2.5.19.1.3',
  'bsnExternalPolicyServerKey' => '1.3.6.1.4.1.14179.2.5.19.1.4',
  'bsnExternalPolicyServerAdminStatus' => '1.3.6.1.4.1.14179.2.5.19.1.5',
  'bsnExternalPolicyServerConnectionStatus' => '1.3.6.1.4.1.14179.2.5.19.1.6',
  'bsnExternalPolicyServerRowStatus' => '1.3.6.1.4.1.14179.2.5.19.1.26',
  'bsnAAALocalDatabaseSize' => '1.3.6.1.4.1.14179.2.5.20',
  'bsnAAACurrentLocalDatabaseSize' => '1.3.6.1.4.1.14179.2.5.21',
  'bsnAPAuthorizationTable' => '1.3.6.1.4.1.14179.2.5.22',
  'bsnAPAuthorizationEntry' => '1.3.6.1.4.1.14179.2.5.22.1',
  'bsnAPAuthMacAddress' => '1.3.6.1.4.1.14179.2.5.22.1.1',
  'bsnAPAuthCertificateType' => '1.3.6.1.4.1.14179.2.5.22.1.2',
  'bsnAPAuthHashKey' => '1.3.6.1.4.1.14179.2.5.22.1.3',
  'bsnAPAuthRowStatus' => '1.3.6.1.4.1.14179.2.5.22.1.20',
  'bsnTrap' => '1.3.6.1.4.1.14179.2.6',
  'bsnTrapControl' => '1.3.6.1.4.1.14179.2.6.1',
  'bsnDot11StationTrapControlMask' => '1.3.6.1.4.1.14179.2.6.1.1',
  'bsnAPTrapControlMask' => '1.3.6.1.4.1.14179.2.6.1.2',
  'bsnAPProfileTrapControlMask' => '1.3.6.1.4.1.14179.2.6.1.3',
  'bsnAPParamUpdateTrapControlMask' => '1.3.6.1.4.1.14179.2.6.1.4',
  'bsnIpsecTrapsMask' => '1.3.6.1.4.1.14179.2.6.1.5',
  'bsnRogueAPTrapEnable' => '1.3.6.1.4.1.14179.2.6.1.6',
  'bsnRADIUSServerTrapEnable' => '1.3.6.1.4.1.14179.2.6.1.7',
  'bsnAuthenticationFailureTrapEnable' => '1.3.6.1.4.1.14179.2.6.1.8',
  'bsnConfigSaveTrapEnable' => '1.3.6.1.4.1.14179.2.6.1.9',
  'bsn80211SecurityTrapControlMask' => '1.3.6.1.4.1.14179.2.6.1.10',
  'bsnWpsTrapControlEnable' => '1.3.6.1.4.1.14179.2.6.1.11',
  'bsnTrapVariable' => '1.3.6.1.4.1.14179.2.6.2',
  'bsnAuthFailureUserName' => '1.3.6.1.4.1.14179.2.6.2.1',
  'bsnAuthFailureUserType' => '1.3.6.1.4.1.14179.2.6.2.2',
  'bsnRemoteIPv4Address' => '1.3.6.1.4.1.14179.2.6.2.3',
  'bsnIpsecErrorCount' => '1.3.6.1.4.1.14179.2.6.2.4',
  'bsnIpsecSPI' => '1.3.6.1.4.1.14179.2.6.2.5',
  'bsnRemoteUdpPort' => '1.3.6.1.4.1.14179.2.6.2.6',
  'bsnIkeAuthMethod' => '1.3.6.1.4.1.14179.2.6.2.7',
  'bsnIkeTotalInitFailures' => '1.3.6.1.4.1.14179.2.6.2.8',
  'bsnIkeTotalInitNoResponses' => '1.3.6.1.4.1.14179.2.6.2.9',
  'bsnIkeTotalRespFailures' => '1.3.6.1.4.1.14179.2.6.2.10',
  'bsnNotifiesSent' => '1.3.6.1.4.1.14179.2.6.2.11',
  'bsnNotifiesReceived' => '1.3.6.1.4.1.14179.2.6.2.12',
  'bsnSuiteInitFailures' => '1.3.6.1.4.1.14179.2.6.2.13',
  'bsnSuiteRespondFailures' => '1.3.6.1.4.1.14179.2.6.2.14',
  'bsnInitiatorCookie' => '1.3.6.1.4.1.14179.2.6.2.15',
  'bsnResponderCookie' => '1.3.6.1.4.1.14179.2.6.2.16',
  'bsnIsakmpInvalidCookies' => '1.3.6.1.4.1.14179.2.6.2.17',
  'bsnCurrentRadiosCount' => '1.3.6.1.4.1.14179.2.6.2.18',
  'bsnLicenseRadioCount' => '1.3.6.1.4.1.14179.2.6.2.19',
  'bsnAPMacAddrTrapVariable' => '1.3.6.1.4.1.14179.2.6.2.20',
  'bsnAPNameTrapVariable' => '1.3.6.1.4.1.14179.2.6.2.21',
  'bsnAPSlotIdTrapVariable' => '1.3.6.1.4.1.14179.2.6.2.22',
  'bsnAPChannelNumberTrapVariable' => '1.3.6.1.4.1.14179.2.6.2.23',
  'bsnAPCoverageThresholdTrapVariable' => '1.3.6.1.4.1.14179.2.6.2.24',
  'bsnAPCoverageFailedClients' => '1.3.6.1.4.1.14179.2.6.2.25',
  'bsnAPCoverageTotalClients' => '1.3.6.1.4.1.14179.2.6.2.26',
  'bsnClientMacAddr' => '1.3.6.1.4.1.14179.2.6.2.27',
  'bsnClientRssi' => '1.3.6.1.4.1.14179.2.6.2.28',
  'bsnClientSnr' => '1.3.6.1.4.1.14179.2.6.2.29',
  'bsnInterferenceEnergyBeforeChannelUpdate' => '1.3.6.1.4.1.14179.2.6.2.30',
  'bsnInterferenceEnergyAfterChannelUpdate' => '1.3.6.1.4.1.14179.2.6.2.31',
  'bsnAPPortNumberTrapVariable' => '1.3.6.1.4.1.14179.2.6.2.32',
  'bsnMaxRogueCount' => '1.3.6.1.4.1.14179.2.6.2.33',
  'bsnStationMacAddress' => '1.3.6.1.4.1.14179.2.6.2.34',
  'bsnStationAPMacAddr' => '1.3.6.1.4.1.14179.2.6.2.35',
  'bsnStationAPIfSlotId' => '1.3.6.1.4.1.14179.2.6.2.36',
  'bsnStationReasonCode' => '1.3.6.1.4.1.14179.2.6.2.37',
  'bsnStationBlacklistingReasonCode' => '1.3.6.1.4.1.14179.2.6.2.38',
  'bsnStationUserName' => '1.3.6.1.4.1.14179.2.6.2.39',
  'bsnRogueAPOnWiredNetwork' => '1.3.6.1.4.1.14179.2.6.2.40',
  'bsnNavDosAttackSourceMacAddr' => '1.3.6.1.4.1.14179.2.6.2.41',
  'bsnWlanIdTrapVariable' => '1.3.6.1.4.1.14179.2.6.2.42',
  'bsnUserIpAddress' => '1.3.6.1.4.1.14179.2.6.2.43',
  'bsnRogueAdhocMode' => '1.3.6.1.4.1.14179.2.6.2.44',
  'bsnClearTrapVariable' => '1.3.6.1.4.1.14179.2.6.2.45',
  'bsnDuplicateIpTrapVariable' => '1.3.6.1.4.1.14179.2.6.2.46',
  'bsnDuplicateIpTrapClear' => '1.3.6.1.4.1.14179.2.6.2.47',
  'bsnDuplicateIpReportedByAP' => '1.3.6.1.4.1.14179.2.6.2.48',
  'bsnTrustedApRadioPolicyRequired' => '1.3.6.1.4.1.14179.2.6.2.49',
  'bsnTrustedApEncryptionUsed' => '1.3.6.1.4.1.14179.2.6.2.50',
  'bsnTrustedApEncryptionRequired' => '1.3.6.1.4.1.14179.2.6.2.51',
  'bsnTrustedApRadioPolicyUsed' => '1.3.6.1.4.1.14179.2.6.2.52',
  'bsnNetworkType' => '1.3.6.1.4.1.14179.2.6.2.53',
  'bsnNetworkState' => '1.3.6.1.4.1.14179.2.6.2.54',
  'bsnSignatureType' => '1.3.6.1.4.1.14179.2.6.2.55',
  'bsnSignatureName' => '1.3.6.1.4.1.14179.2.6.2.56',
  'bsnSignatureDescription' => '1.3.6.1.4.1.14179.2.6.2.57',
  'bsnImpersonatedAPMacAddr' => '1.3.6.1.4.1.14179.2.6.2.58',
  'bsnTrustedApPreambleUsed' => '1.3.6.1.4.1.14179.2.6.2.59',
  'bsnTrustedApPreambleRequired' => '1.3.6.1.4.1.14179.2.6.2.60',
  'bsnSignatureAttackPreced' => '1.3.6.1.4.1.14179.2.6.2.61',
  'bsnSignatureAttackFrequency' => '1.3.6.1.4.1.14179.2.6.2.62',
  'bsnSignatureAttackChannel' => '1.3.6.1.4.1.14179.2.6.2.63',
  'bsnSignatureAttackerMacAddress' => '1.3.6.1.4.1.14179.2.6.2.64',
  'bsnLicenseKeyTrapVariable' => '1.3.6.1.4.1.14179.2.6.2.65',
  'bsnApFunctionalityDisableReasonCode' => '1.3.6.1.4.1.14179.2.6.2.66',
  'bsnLicenseKeyFeatureSetTrapVariable' => '1.3.6.1.4.1.14179.2.6.2.67',
  'bsnApRegulatoryDomain' => '1.3.6.1.4.1.14179.2.6.2.68',
  'bsnAPAuthorizationFailureCause' => '1.3.6.1.4.1.14179.2.6.2.69',
  'bsnAPIfUpDownCause' => '1.3.6.1.4.1.14179.2.6.2.70',
  'bsnAPInvalidRadioType' => '1.3.6.1.4.1.14179.2.6.2.71',
  'locationNotifyContent' => '1.3.6.1.4.1.14179.2.6.2.72',
  'bsnSignatureMacInfo' => '1.3.6.1.4.1.14179.2.6.2.73',
  'bsnImpersonatingSourceMacAddr' => '1.3.6.1.4.1.14179.2.6.2.74',
  'bsnAPPreviousChannelNumberTrapVariable' => '1.3.6.1.4.1.14179.2.6.2.83',
  'bsnAPReasonCodeTrapVariable' => '1.3.6.1.4.1.14179.2.6.2.84',
  'bsnNoiseBeforeChannelUpdate' => '1.3.6.1.4.1.14179.2.6.2.85',
  'bsnNoiseAfterChannelUpdate' => '1.3.6.1.4.1.14179.2.6.2.86',
  'bsnInterferenceBeforeChannelUpdate' => '1.3.6.1.4.1.14179.2.6.2.87',
  'bsnInterferenceAfterChannelUpdate' => '1.3.6.1.4.1.14179.2.6.2.88',
  'bsnTraps' => '1.3.6.1.4.1.14179.2.6.3',
  'bsnDot11StationDisassociate' => '1.3.6.1.4.1.14179.2.6.3.1',
  'bsnDot11StationDeauthenticate' => '1.3.6.1.4.1.14179.2.6.3.2',
  'bsnDot11StationAuthenticateFail' => '1.3.6.1.4.1.14179.2.6.3.3',
  'bsnDot11StationAssociateFail' => '1.3.6.1.4.1.14179.2.6.3.4',
  'bsnAPUp' => '1.3.6.1.4.1.14179.2.6.3.5',
  'bsnAPDown' => '1.3.6.1.4.1.14179.2.6.3.6',
  'bsnAPAssociated' => '1.3.6.1.4.1.14179.2.6.3.7',
  'bsnAPDisassociated' => '1.3.6.1.4.1.14179.2.6.3.8',
  'bsnAPIfUp' => '1.3.6.1.4.1.14179.2.6.3.9',
  'bsnAPIfDown' => '1.3.6.1.4.1.14179.2.6.3.10',
  'bsnAPLoadProfileFailed' => '1.3.6.1.4.1.14179.2.6.3.11',
  'bsnAPNoiseProfileFailed' => '1.3.6.1.4.1.14179.2.6.3.12',
  'bsnAPInterferenceProfileFailed' => '1.3.6.1.4.1.14179.2.6.3.13',
  'bsnAPCoverageProfileFailed' => '1.3.6.1.4.1.14179.2.6.3.14',
  'bsnAPCurrentTxPowerChanged' => '1.3.6.1.4.1.14179.2.6.3.15',
  'bsnAPCurrentChannelChanged' => '1.3.6.1.4.1.14179.2.6.3.16',
  'bsnRrmDot11aGroupingDone' => '1.3.6.1.4.1.14179.2.6.3.21',
  'bsnRrmDot11bGroupingDone' => '1.3.6.1.4.1.14179.2.6.3.22',
  'bsnConfigSaved' => '1.3.6.1.4.1.14179.2.6.3.23',
  'bsnDot11EssCreated' => '1.3.6.1.4.1.14179.2.6.3.24',
  'bsnDot11EssDeleted' => '1.3.6.1.4.1.14179.2.6.3.25',
  'bsnRADIUSServerNotResponding' => '1.3.6.1.4.1.14179.2.6.3.26',
  'bsnAuthenticationFailure' => '1.3.6.1.4.1.14179.2.6.3.27',
  'bsnIpsecEspAuthFailureTrap' => '1.3.6.1.4.1.14179.2.6.3.28',
  'bsnIpsecEspReplayFailureTrap' => '1.3.6.1.4.1.14179.2.6.3.29',
  'bsnIpsecEspInvalidSpiTrap' => '1.3.6.1.4.1.14179.2.6.3.31',
  'bsnIpsecIkeNegFailure' => '1.3.6.1.4.1.14179.2.6.3.33',
  'bsnIpsecSuiteNegFailure' => '1.3.6.1.4.1.14179.2.6.3.34',
  'bsnIpsecInvalidCookieTrap' => '1.3.6.1.4.1.14179.2.6.3.35',
  'bsnRogueAPDetected' => '1.3.6.1.4.1.14179.2.6.3.36',
  'bsnAPLoadProfileUpdatedToPass' => '1.3.6.1.4.1.14179.2.6.3.37',
  'bsnAPNoiseProfileUpdatedToPass' => '1.3.6.1.4.1.14179.2.6.3.38',
  'bsnAPInterferenceProfileUpdatedToPass' => '1.3.6.1.4.1.14179.2.6.3.39',
  'bsnAPCoverageProfileUpdatedToPass' => '1.3.6.1.4.1.14179.2.6.3.40',
  'bsnRogueAPRemoved' => '1.3.6.1.4.1.14179.2.6.3.41',
  'bsnRadiosExceedLicenseCount' => '1.3.6.1.4.1.14179.2.6.3.42',
  'bsnSensedTemperatureTooHigh' => '1.3.6.1.4.1.14179.2.6.3.43',
  'bsnSensedTemperatureTooLow' => '1.3.6.1.4.1.14179.2.6.3.44',
  'bsnTemperatureSensorFailure' => '1.3.6.1.4.1.14179.2.6.3.45',
  'bsnTemperatureSensorClear' => '1.3.6.1.4.1.14179.2.6.3.46',
  'bsnPOEControllerFailure' => '1.3.6.1.4.1.14179.2.6.3.47',
  'bsnMaxRogueCountExceeded' => '1.3.6.1.4.1.14179.2.6.3.48',
  'bsnMaxRogueCountClear' => '1.3.6.1.4.1.14179.2.6.3.49',
  'bsnApMaxRogueCountExceeded' => '1.3.6.1.4.1.14179.2.6.3.50',
  'bsnApMaxRogueCountClear' => '1.3.6.1.4.1.14179.2.6.3.51',
  'bsnDot11StationBlacklisted' => '1.3.6.1.4.1.14179.2.6.3.52',
  'bsnDot11StationAssociate' => '1.3.6.1.4.1.14179.2.6.3.53',
  'bsnApBigNavDosAttack' => '1.3.6.1.4.1.14179.2.6.3.55',
  'bsnTooManyUnsuccessLoginAttempts' => '1.3.6.1.4.1.14179.2.6.3.56',
  'bsnWepKeyDecryptError' => '1.3.6.1.4.1.14179.2.6.3.57',
  'bsnWpaMicErrorCounterActivated' => '1.3.6.1.4.1.14179.2.6.3.58',
  'bsnRogueAPDetectedOnWiredNetwork' => '1.3.6.1.4.1.14179.2.6.3.59',
  'bsnApHasNoRadioCards' => '1.3.6.1.4.1.14179.2.6.3.60',
  'bsnDuplicateIpAddressReported' => '1.3.6.1.4.1.14179.2.6.3.61',
  'bsnAPContainedAsARogue' => '1.3.6.1.4.1.14179.2.6.3.62',
  'bsnTrustedApHasInvalidSsid' => '1.3.6.1.4.1.14179.2.6.3.63',
  'bsnTrustedApIsMissing' => '1.3.6.1.4.1.14179.2.6.3.64',
  'bsnAdhocRogueAutoContained' => '1.3.6.1.4.1.14179.2.6.3.65',
  'bsnRogueApAutoContained' => '1.3.6.1.4.1.14179.2.6.3.66',
  'bsnTrustedApHasInvalidEncryption' => '1.3.6.1.4.1.14179.2.6.3.67',
  'bsnTrustedApHasInvalidRadioPolicy' => '1.3.6.1.4.1.14179.2.6.3.68',
  'bsnNetworkStateChanged' => '1.3.6.1.4.1.14179.2.6.3.69',
  'bsnSignatureAttackDetected' => '1.3.6.1.4.1.14179.2.6.3.70',
  'bsnAPRadioCardTxFailure' => '1.3.6.1.4.1.14179.2.6.3.71',
  'bsnAPRadioCardTxFailureClear' => '1.3.6.1.4.1.14179.2.6.3.72',
  'bsnAPRadioCardRxFailure' => '1.3.6.1.4.1.14179.2.6.3.73',
  'bsnAPRadioCardRxFailureClear' => '1.3.6.1.4.1.14179.2.6.3.74',
  'bsnAPImpersonationDetected' => '1.3.6.1.4.1.14179.2.6.3.75',
  'bsnTrustedApHasInvalidPreamble' => '1.3.6.1.4.1.14179.2.6.3.76',
  'bsnAPIPAddressFallback' => '1.3.6.1.4.1.14179.2.6.3.77',
  'bsnAPFunctionalityDisabled' => '1.3.6.1.4.1.14179.2.6.3.78',
  'bsnAPRegulatoryDomainMismatch' => '1.3.6.1.4.1.14179.2.6.3.79',
  'bsnRxMulticastQueueFull' => '1.3.6.1.4.1.14179.2.6.3.80',
  'bsnRadarChannelDetected' => '1.3.6.1.4.1.14179.2.6.3.81',
  'bsnRadarChannelCleared' => '1.3.6.1.4.1.14179.2.6.3.82',
  'bsnAPAuthorizationFailure' => '1.3.6.1.4.1.14179.2.6.3.83',
  'radioCoreDumpTrap' => '1.3.6.1.4.1.14179.2.6.3.84',
  'invalidRadioTrap' => '1.3.6.1.4.1.14179.2.6.3.85',
  'countryChangeTrap' => '1.3.6.1.4.1.14179.2.6.3.86',
  'unsupportedAPTrap' => '1.3.6.1.4.1.14179.2.6.3.87',
  'heartbeatLossTrap' => '1.3.6.1.4.1.14179.2.6.3.88',
  'locationNotifyTrap' => '1.3.6.1.4.1.14179.2.6.3.89',
  'bsnUtility' => '1.3.6.1.4.1.14179.2.7',
  'bsnSyslog' => '1.3.6.1.4.1.14179.2.7.1',
  'bsnSyslogEnable' => '1.3.6.1.4.1.14179.2.7.1.1',
  'bsnSyslogRemoteAddress' => '1.3.6.1.4.1.14179.2.7.1.2',
  'bsnPing' => '1.3.6.1.4.1.14179.2.7.2',
  'bsnPingTestTable' => '1.3.6.1.4.1.14179.2.7.2.1',
  'bsnPingTestEntry' => '1.3.6.1.4.1.14179.2.7.2.1.1',
  'bsnPingTestId' => '1.3.6.1.4.1.14179.2.7.2.1.1.1',
  'bsnPingTestIPAddress' => '1.3.6.1.4.1.14179.2.7.2.1.1.2',
  'bsnPingTestSendCount' => '1.3.6.1.4.1.14179.2.7.2.1.1.3',
  'bsnPingTestReceivedCount' => '1.3.6.1.4.1.14179.2.7.2.1.1.4',
  'bsnPingTestStatus' => '1.3.6.1.4.1.14179.2.7.2.1.1.5',
  'bsnPingTestMaxTimeInterval' => '1.3.6.1.4.1.14179.2.7.2.1.1.6',
  'bsnPingTestMinTimeInterval' => '1.3.6.1.4.1.14179.2.7.2.1.1.7',
  'bsnPingTestAvgTimeInterval' => '1.3.6.1.4.1.14179.2.7.2.1.1.8',
  'bsnPingTestRowStatus' => '1.3.6.1.4.1.14179.2.7.2.1.1.25',
  'bsnLinkTest' => '1.3.6.1.4.1.14179.2.7.3',
  'bsnLinkTestTable' => '1.3.6.1.4.1.14179.2.7.3.1',
  'bsnLinkTestEntry' => '1.3.6.1.4.1.14179.2.7.3.1.1',
  'bsnLinkTestId' => '1.3.6.1.4.1.14179.2.7.3.1.1.1',
  'bsnLinkTestMacAddress' => '1.3.6.1.4.1.14179.2.7.3.1.1.2',
  'bsnLinkTestSendPktCount' => '1.3.6.1.4.1.14179.2.7.3.1.1.3',
  'bsnLinkTestSendPktLength' => '1.3.6.1.4.1.14179.2.7.3.1.1.4',
  'bsnLinkTestReceivedPktCount' => '1.3.6.1.4.1.14179.2.7.3.1.1.5',
  'bsnLinkTestClientRSSI' => '1.3.6.1.4.1.14179.2.7.3.1.1.6',
  'bsnLinkTestLocalSNR' => '1.3.6.1.4.1.14179.2.7.3.1.1.7',
  'bsnLinkTestLocalRSSI' => '1.3.6.1.4.1.14179.2.7.3.1.1.8',
  'bsnLinkTestStatus' => '1.3.6.1.4.1.14179.2.7.3.1.1.9',
  'bsnLinkTestRowStatus' => '1.3.6.1.4.1.14179.2.7.3.1.1.30',
  'bsnMobility' => '1.3.6.1.4.1.14179.2.8',
  'bsnMobilityConfig' => '1.3.6.1.4.1.14179.2.8.1',
  'bsnMobilityProtocolPortNum' => '1.3.6.1.4.1.14179.2.8.1.1',
  'bsnMobilityDynamicDiscovery' => '1.3.6.1.4.1.14179.2.8.1.3',
  'bsnMobilityStatsReset' => '1.3.6.1.4.1.14179.2.8.1.4',
  'bsnMobilityGroupMembersTable' => '1.3.6.1.4.1.14179.2.8.1.10',
  'bsnMobilityGroupMembersEntry' => '1.3.6.1.4.1.14179.2.8.1.10.1',
  'bsnMobilityGroupMemberMacAddress' => '1.3.6.1.4.1.14179.2.8.1.10.1.1',
  'bsnMobilityGroupMemberIPAddress' => '1.3.6.1.4.1.14179.2.8.1.10.1.2',
  'bsnMobilityGroupMemberGroupName' => '1.3.6.1.4.1.14179.2.8.1.10.1.3',
  'bsnMobilityGroupMemberRowStatus' => '1.3.6.1.4.1.14179.2.8.1.10.1.22',
  'bsnMobilityAnchorsTable' => '1.3.6.1.4.1.14179.2.8.1.11',
  'bsnMobilityAnchorsEntry' => '1.3.6.1.4.1.14179.2.8.1.11.1',
  'bsnMobilityAnchorWlanSsid' => '1.3.6.1.4.1.14179.2.8.1.11.1.1',
  'bsnMobilityAnchorSwitchIPAddress' => '1.3.6.1.4.1.14179.2.8.1.11.1.2',
  'bsnMobilityAnchorRowStatus' => '1.3.6.1.4.1.14179.2.8.1.11.1.20',
  'bsnMobilityStats' => '1.3.6.1.4.1.14179.2.8.2',
  'bsnTotalHandoffRequests' => '1.3.6.1.4.1.14179.2.8.2.1',
  'bsnTotalHandoffs' => '1.3.6.1.4.1.14179.2.8.2.2',
  'bsnCurrentExportedClients' => '1.3.6.1.4.1.14179.2.8.2.3',
  'bsnTotalExportedClients' => '1.3.6.1.4.1.14179.2.8.2.4',
  'bsnCurrentImportedClients' => '1.3.6.1.4.1.14179.2.8.2.5',
  'bsnTotalImportedClients' => '1.3.6.1.4.1.14179.2.8.2.6',
  'bsnTotalHandoffErrors' => '1.3.6.1.4.1.14179.2.8.2.7',
  'bsnTotalCommunicationErrors' => '1.3.6.1.4.1.14179.2.8.2.8',
  'bsnMobilityGroupDirectoryTable' => '1.3.6.1.4.1.14179.2.8.2.9',
  'bsnMobilityGroupDirectoryEntry' => '1.3.6.1.4.1.14179.2.8.2.9.1',
  'bsnGroupDirectoryMemberIPAddress' => '1.3.6.1.4.1.14179.2.8.2.9.1.1',
  'bsnGroupDirectoryMemberMacAddress' => '1.3.6.1.4.1.14179.2.8.2.9.1.2',
  'bsnGroupDirectoryDicoveryType' => '1.3.6.1.4.1.14179.2.8.2.9.1.3',
  'bsnMemberCurrentAnchoredClients' => '1.3.6.1.4.1.14179.2.8.2.9.1.4',
  'bsnMemberTotalAnchoredClients' => '1.3.6.1.4.1.14179.2.8.2.9.1.5',
  'bsnMemberCurrentExportedClients' => '1.3.6.1.4.1.14179.2.8.2.9.1.6',
  'bsnMemberTotalExportedClients' => '1.3.6.1.4.1.14179.2.8.2.9.1.7',
  'bsnMemberCurrentImportedClients' => '1.3.6.1.4.1.14179.2.8.2.9.1.8',
  'bsnMemberTotalImportedClients' => '1.3.6.1.4.1.14179.2.8.2.9.1.9',
  'bsnMemberTotalHandoffErrors' => '1.3.6.1.4.1.14179.2.8.2.9.1.10',
  'bsnMemberTotalCommunicationErrors' => '1.3.6.1.4.1.14179.2.8.2.9.1.30',
  'bsnTotalReceiveErrors' => '1.3.6.1.4.1.14179.2.8.2.10',
  'bsnTotalTransmitErrors' => '1.3.6.1.4.1.14179.2.8.2.11',
  'bsnTotalResponsesRetransmitted' => '1.3.6.1.4.1.14179.2.8.2.12',
  'bsnTotalHandoffEndRequestsReceived' => '1.3.6.1.4.1.14179.2.8.2.13',
  'bsnTotalStateTransitionsDisallowed' => '1.3.6.1.4.1.14179.2.8.2.14',
  'bsnTotalResourceErrors' => '1.3.6.1.4.1.14179.2.8.2.15',
  'bsnTotalHandoffRequestsSent' => '1.3.6.1.4.1.14179.2.8.2.16',
  'bsnTotalHandoffRepliesReceived' => '1.3.6.1.4.1.14179.2.8.2.17',
  'bsnTotalHandoffAsLocalReceived' => '1.3.6.1.4.1.14179.2.8.2.18',
  'bsnTotalHandoffAsForeignReceived' => '1.3.6.1.4.1.14179.2.8.2.19',
  'bsnTotalHandoffDeniesReceived' => '1.3.6.1.4.1.14179.2.8.2.20',
  'bsnTotalAnchorRequestsSent' => '1.3.6.1.4.1.14179.2.8.2.21',
  'bsnTotalAnchorDenyReceived' => '1.3.6.1.4.1.14179.2.8.2.22',
  'bsnTotalAnchorGrantReceived' => '1.3.6.1.4.1.14179.2.8.2.23',
  'bsnTotalAnchorTransferReceived' => '1.3.6.1.4.1.14179.2.8.2.24',
  'bsnTotalHandoffRequestsIgnored' => '1.3.6.1.4.1.14179.2.8.2.25',
  'bsnTotalPingPongHandoffRequestsDropped' => '1.3.6.1.4.1.14179.2.8.2.26',
  'bsnTotalHandoffRequestsDropped' => '1.3.6.1.4.1.14179.2.8.2.27',
  'bsnTotalHandoffRequestsDenied' => '1.3.6.1.4.1.14179.2.8.2.28',
  'bsnTotalClientHandoffAsLocal' => '1.3.6.1.4.1.14179.2.8.2.29',
  'bsnTotalClientHandoffAsForeign' => '1.3.6.1.4.1.14179.2.8.2.30',
  'bsnTotalAnchorRequestsReceived' => '1.3.6.1.4.1.14179.2.8.2.31',
  'bsnTotalAnchorRequestsDenied' => '1.3.6.1.4.1.14179.2.8.2.32',
  'bsnTotalAnchorRequestsGranted' => '1.3.6.1.4.1.14179.2.8.2.33',
  'bsnTotalAnchorTransferred' => '1.3.6.1.4.1.14179.2.8.2.34',
  'bsnTotalHandoffRequestsReceived' => '1.3.6.1.4.1.14179.2.8.2.35',
  'bsnIpsec' => '1.3.6.1.4.1.14179.2.9',
  'bsnWrasIpsecCACertificate' => '1.3.6.1.4.1.14179.2.9.1',
  'bsnWrasIpsecCACertificateUpdate' => '1.3.6.1.4.1.14179.2.9.2',
  'bsnWrasIpsecCertTable' => '1.3.6.1.4.1.14179.2.9.3',
  'bsnWrasIpsecCertEntry' => '1.3.6.1.4.1.14179.2.9.3.1',
  'bsnWrasIpsecCertName' => '1.3.6.1.4.1.14179.2.9.3.1.1',
  'bsnWrasIpsecCertificateUpdate' => '1.3.6.1.4.1.14179.2.9.3.1.2',
  'bsnWrasIpsecCertificate' => '1.3.6.1.4.1.14179.2.9.3.1.3',
  'bsnWrasIpsecCertPassword' => '1.3.6.1.4.1.14179.2.9.3.1.4',
  'bsnWrasIpsecCertStatus' => '1.3.6.1.4.1.14179.2.9.3.1.24',
  'bsnAPGroupsVlanConfig' => '1.3.6.1.4.1.14179.2.10',
  'bsnAPGroupsVlanFeature' => '1.3.6.1.4.1.14179.2.10.1',
  'bsnAPGroupsVlanTable' => '1.3.6.1.4.1.14179.2.10.2',
  'bsnAPGroupsVlanEntry' => '1.3.6.1.4.1.14179.2.10.2.1',
  'bsnAPGroupsVlanName' => '1.3.6.1.4.1.14179.2.10.2.1.1',
  'bsnAPGroupsVlanDescription' => '1.3.6.1.4.1.14179.2.10.2.1.2',
  'bsnAPGroupsVlanRowStatus' => '1.3.6.1.4.1.14179.2.10.2.1.20',
  'bsnAPGroupsVlanMappingTable' => '1.3.6.1.4.1.14179.2.10.3',
  'bsnAPGroupsVlanMappingEntry' => '1.3.6.1.4.1.14179.2.10.3.1',
  'bsnAPGroupsVlanMappingSsid' => '1.3.6.1.4.1.14179.2.10.3.1.1',
  'bsnAPGroupsVlanMappingInterfaceName' => '1.3.6.1.4.1.14179.2.10.3.1.2',
  'bsnAPGroupsVlanMappingRowStatus' => '1.3.6.1.4.1.14179.2.10.3.1.20',
  'bsnWrasGroups' => '1.3.6.1.4.1.14179.2.50',
  'bsnEssGroup' => '1.3.6.1.4.1.14179.2.50.1',
  'bsnApGroup' => '1.3.6.1.4.1.14179.2.50.2',
  'bsnGlobalDot11Group' => '1.3.6.1.4.1.14179.2.50.3',
  'bsnRrmGroup' => '1.3.6.1.4.1.14179.2.50.4',
  'bsnAAAGroup' => '1.3.6.1.4.1.14179.2.50.5',
  'bsnTrapsGroup' => '1.3.6.1.4.1.14179.2.50.6',
  'bsnUtilityGroup' => '1.3.6.1.4.1.14179.2.50.7',
  'bsnMobilityGroup' => '1.3.6.1.4.1.14179.2.50.8',
  'bsnIpsecGroup' => '1.3.6.1.4.1.14179.2.50.9',
  'bsnWrasDepGroup' => '1.3.6.1.4.1.14179.2.50.10',
  'bsnWrasObsGroup' => '1.3.6.1.4.1.14179.2.50.11',
  'bsnWrasTrap' => '1.3.6.1.4.1.14179.2.50.12',
  'bsnEssGroupRev1' => '1.3.6.1.4.1.14179.2.50.13',
  'bsnGlobalDot11GroupRev1' => '1.3.6.1.4.1.14179.2.50.14',
  'bsnAAAGroupRev1' => '1.3.6.1.4.1.14179.2.50.15',
  'bsnTrapsGroupRev1' => '1.3.6.1.4.1.14179.2.50.16',
  'bsnWrasTrapRev1' => '1.3.6.1.4.1.14179.2.50.17',
  'bsnApGroupRev1' => '1.3.6.1.4.1.14179.2.50.18',
  'bsnUtilityGroupRev1' => '1.3.6.1.4.1.14179.2.50.19',
  'bsnWrasObsGroupRev1' => '1.3.6.1.4.1.14179.2.50.20',
  'bsnWrasObsTrap' => '1.3.6.1.4.1.14179.2.50.21',
  'bsnWrasCompliances' => '1.3.6.1.4.1.14179.2.51',
  'bsnWrasCompliance' => '1.3.6.1.4.1.14179.2.51.1',
  'bsnWrasComplianceRev1' => '1.3.6.1.4.1.14179.2.51.2',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::ALARMMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'ALARM-MIB'} = {
  url => '',
  name => 'ALARM-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'ALARM-MIB'} = {
  'alarmMIB' => '1.3.6.1.2.1.118',
  'alarmNotifications' => '1.3.6.1.2.1.118.0',
  'alarmObjects' => '1.3.6.1.2.1.118.1',
  'alarmModel' => '1.3.6.1.2.1.118.1.1',
  'alarmModelLastChanged' => '1.3.6.1.2.1.118.1.1.1',
  'alarmModelTable' => '1.3.6.1.2.1.118.1.1.2',
  'alarmModelEntry' => '1.3.6.1.2.1.118.1.1.2.1',
  'alarmModelIndex' => '1.3.6.1.2.1.118.1.1.2.1.1',
  'alarmModelState' => '1.3.6.1.2.1.118.1.1.2.1.2',
  'alarmModelNotificationId' => '1.3.6.1.2.1.118.1.1.2.1.3',
  'alarmModelVarbindIndex' => '1.3.6.1.2.1.118.1.1.2.1.4',
  'alarmModelVarbindValue' => '1.3.6.1.2.1.118.1.1.2.1.5',
  'alarmModelDescription' => '1.3.6.1.2.1.118.1.1.2.1.6',
  'alarmModelSpecificPointer' => '1.3.6.1.2.1.118.1.1.2.1.7',
  'alarmModelVarbindSubtree' => '1.3.6.1.2.1.118.1.1.2.1.8',
  'alarmModelResourcePrefix' => '1.3.6.1.2.1.118.1.1.2.1.9',
  'alarmModelRowStatus' => '1.3.6.1.2.1.118.1.1.2.1.10',
  'alarmActive' => '1.3.6.1.2.1.118.1.2',
  'alarmActiveLastChanged' => '1.3.6.1.2.1.118.1.2.1',
  'alarmActiveTable' => '1.3.6.1.2.1.118.1.2.2',
  'alarmActiveEntry' => '1.3.6.1.2.1.118.1.2.2.1',
  'alarmListName' => '1.3.6.1.2.1.118.1.2.2.1.1',
  'alarmActiveDateAndTime' => '1.3.6.1.2.1.118.1.2.2.1.2',
  'alarmActiveIndex' => '1.3.6.1.2.1.118.1.2.2.1.3',
  'alarmActiveEngineID' => '1.3.6.1.2.1.118.1.2.2.1.4',
  'alarmActiveEngineAddressType' => '1.3.6.1.2.1.118.1.2.2.1.5',
  'alarmActiveEngineAddress' => '1.3.6.1.2.1.118.1.2.2.1.6',
  'alarmActiveContextName' => '1.3.6.1.2.1.118.1.2.2.1.7',
  'alarmActiveVariables' => '1.3.6.1.2.1.118.1.2.2.1.8',
  'alarmActiveNotificationID' => '1.3.6.1.2.1.118.1.2.2.1.9',
  'alarmActiveResourceId' => '1.3.6.1.2.1.118.1.2.2.1.10',
  'alarmActiveDescription' => '1.3.6.1.2.1.118.1.2.2.1.11',
  'alarmActiveLogPointer' => '1.3.6.1.2.1.118.1.2.2.1.12',
  'alarmActiveModelPointer' => '1.3.6.1.2.1.118.1.2.2.1.13',
  'alarmActiveSpecificPointer' => '1.3.6.1.2.1.118.1.2.2.1.14',
  'alarmActiveVariableTable' => '1.3.6.1.2.1.118.1.2.3',
  'alarmActiveVariableEntry' => '1.3.6.1.2.1.118.1.2.3.1',
  'alarmActiveVariableIndex' => '1.3.6.1.2.1.118.1.2.3.1.1',
  'alarmActiveVariableID' => '1.3.6.1.2.1.118.1.2.3.1.2',
  'alarmActiveVariableValueType' => '1.3.6.1.2.1.118.1.2.3.1.3',
  'alarmActiveVariableValueTypeDefinition' => 'ALARM-MIB::alarmActiveVariableValueType',
  'alarmActiveVariableCounter32Val' => '1.3.6.1.2.1.118.1.2.3.1.4',
  'alarmActiveVariableUnsigned32Val' => '1.3.6.1.2.1.118.1.2.3.1.5',
  'alarmActiveVariableTimeTicksVal' => '1.3.6.1.2.1.118.1.2.3.1.6',
  'alarmActiveVariableInteger32Val' => '1.3.6.1.2.1.118.1.2.3.1.7',
  'alarmActiveVariableOctetStringVal' => '1.3.6.1.2.1.118.1.2.3.1.8',
  'alarmActiveVariableIpAddressVal' => '1.3.6.1.2.1.118.1.2.3.1.9',
  'alarmActiveVariableOidVal' => '1.3.6.1.2.1.118.1.2.3.1.10',
  'alarmActiveVariableCounter64Val' => '1.3.6.1.2.1.118.1.2.3.1.11',
  'alarmActiveVariableOpaqueVal' => '1.3.6.1.2.1.118.1.2.3.1.12',
  'alarmActiveStatsTable' => '1.3.6.1.2.1.118.1.2.4',
  'alarmActiveStatsEntry' => '1.3.6.1.2.1.118.1.2.4.1',
  'alarmActiveStatsActiveCurrent' => '1.3.6.1.2.1.118.1.2.4.1.1',
  'alarmActiveStatsActives' => '1.3.6.1.2.1.118.1.2.4.1.2',
  'alarmActiveStatsLastRaise' => '1.3.6.1.2.1.118.1.2.4.1.3',
  'alarmActiveStatsLastClear' => '1.3.6.1.2.1.118.1.2.4.1.4',
  'alarmActiveOverflow' => '1.3.6.1.2.1.118.1.2.5',
  'alarmClear' => '1.3.6.1.2.1.118.1.3',
  'alarmClearMaximum' => '1.3.6.1.2.1.118.1.3.1',
  'alarmClearTable' => '1.3.6.1.2.1.118.1.3.2',
  'alarmClearEntry' => '1.3.6.1.2.1.118.1.3.2.1',
  'alarmClearIndex' => '1.3.6.1.2.1.118.1.3.2.1.1',
  'alarmClearDateAndTime' => '1.3.6.1.2.1.118.1.3.2.1.2',
  'alarmClearEngineID' => '1.3.6.1.2.1.118.1.3.2.1.3',
  'alarmClearEngineAddressType' => '1.3.6.1.2.1.118.1.3.2.1.4',
  'alarmClearEngineAddress' => '1.3.6.1.2.1.118.1.3.2.1.5',
  'alarmClearContextName' => '1.3.6.1.2.1.118.1.3.2.1.6',
  'alarmClearNotificationID' => '1.3.6.1.2.1.118.1.3.2.1.7',
  'alarmClearResourceId' => '1.3.6.1.2.1.118.1.3.2.1.8',
  'alarmClearLogIndex' => '1.3.6.1.2.1.118.1.3.2.1.9',
  'alarmClearModelPointer' => '1.3.6.1.2.1.118.1.3.2.1.10',
  'alarmConformance' => '1.3.6.1.2.1.118.2',
  'alarmCompliances' => '1.3.6.1.2.1.118.2.1',
  'alarmGroups' => '1.3.6.1.2.1.118.2.2',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'ALARM-MIB'} = {
  'alarmActiveVariableValueType' => {
    '1' => 'counter32',
    '2' => 'unsigned32',
    '3' => 'timeTicks',
    '4' => 'integer32',
    '5' => 'ipAddress',
    '6' => 'octetString',
    '7' => 'objectId',
    '8' => 'counter64',
    '9' => 'opaque',
  },
};



package Monitoring::GLPlugin::SNMP::MibsAndOids::ALCATELIND1BASEMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'ALCATEL-IND1-BASE-MIB'} = {
  url => '',
  name => 'ALCATEL-IND1-BASE-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'ALCATEL-IND1-BASE-MIB'} = 
  '1.3.6.1.4.1.6486.800';



package Monitoring::GLPlugin::SNMP::MibsAndOids::ARISTAENTITYSENSORMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'ARISTA-ENTITY-SENSOR-MIB'} = {
  url => '',
  name => 'ARISTA-ENTITY-SENSOR-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'ARISTA-ENTITY-SENSOR-MIB'} =
    '1.3.6.1.4.1.30065.3.12';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'ARISTA-ENTITY-SENSOR-MIB'} = {
  aristaEntSensorMIB => '1.3.6.1.4.1.30065.3.12',
  aristaEntSensorMibNotifications => '1.3.6.1.4.1.30065.3.12.0',
  aristaEntSensorMibObjects => '1.3.6.1.4.1.30065.3.12.1',
  aristaEntSensorThresholdTable => '1.3.6.1.4.1.30065.3.12.1.1',
  aristaEntSensorThresholdEntry => '1.3.6.1.4.1.30065.3.12.1.1.1',
  aristaEntSensorThresholdLowWarning => '1.3.6.1.4.1.30065.3.12.1.1.1.1',
  aristaEntSensorThresholdLowCritical => '1.3.6.1.4.1.30065.3.12.1.1.1.2',
  aristaEntSensorThresholdHighWarning => '1.3.6.1.4.1.30065.3.12.1.1.1.3',
  aristaEntSensorThresholdHighCritical => '1.3.6.1.4.1.30065.3.12.1.1.1.4',
  aristaEntSensorStatusDescr => '1.3.6.1.4.1.30065.3.12.1.1.1.5',
  aristaEntSensorMibConformance => '1.3.6.1.4.1.30065.3.12.2',
  aristaEntSensorMibCompliances => '1.3.6.1.4.1.30065.3.12.2.1',
  aristaEntSensorMibGroups => '1.3.6.1.4.1.30065.3.12.2.2',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'ARISTA-ENTITY-SENSOR-MIB'} = {
};

package Monitoring::GLPlugin::SNMP::MibsAndOids::ARUBATCMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'ARUBA-TC-MIB'} = {
  url => 'http://www.circitor.fr/Mibs/Files/ARUBA-TC.mib',
  name => 'ARUBA-TC-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'ARUBA-TC-MIB'} = {
  'ArubaSwitchRole' => {
    1 => 'master',
    2 => 'local',
    3 => 'backupmaster',
  },
  'ArubaActiveState' => {
    1 => 'active',
    2 => 'inactive',
  },
};



package Monitoring::GLPlugin::SNMP::MibsAndOids::ASYNCOSMAILMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'ASYNCOS-MAIL-MIB'} = {
  url => '',
  name => 'ASYNCOS-MAIL-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::requirements->{'ASYNCOS-MAIL-MIB'} = [
  'SNMPv2-TC-v1-MIB',
];

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'ASYNCOS-MAIL-MIB'} = {
  'asyncOSMailObjects' => '1.3.6.1.4.1.15497.1.1.1',
  'perCentMemoryUtilization' => '1.3.6.1.4.1.15497.1.1.1.1.0',
  'perCentCPUUtilization' => '1.3.6.1.4.1.15497.1.1.1.2.0',
  'perCentDiskIOUtilization' => '1.3.6.1.4.1.15497.1.1.1.3.0',
  'perCentQueueUtilization' => '1.3.6.1.4.1.15497.1.1.1.4.0',
  'queueAvailabilityStatus' => '1.3.6.1.4.1.15497.1.1.1.5.0',
  'queueAvailabilityStatusDefinition' => {
    '1' => 'queueSpaceAvailable',
    '2' => 'queueSpaceShortage',
    '3' => 'queueFull',
  },
  'resourceConservationReason' => '1.3.6.1.4.1.15497.1.1.1.6.0',
  'memoryAvailabilityStatus' => '1.3.6.1.4.1.15497.1.1.1.7.0',
  'memoryAvailabilityStatusDefinition' => {
    '1' => 'memoryAvailable',
    '2' => 'memoryShortage',
    '3' => 'memoryFull',
  },
  'powerSupplyTable' => '1.3.6.1.4.1.15497.1.1.1.8',
  'powerSupplyEntry' => '1.3.6.1.4.1.15497.1.1.1.8.1',
  'powerSupplyIndex' => '1.3.6.1.4.1.15497.1.1.1.8.1.1',
  'powerSupplyStatus' => '1.3.6.1.4.1.15497.1.1.1.8.1.2',
  'powerSupplyStatusDefinition' => {
    '1' => 'powerSupplyNotInstalled',
    '2' => 'powerSupplyHealthy',
    '3' => 'powerSupplyNoAC',
    '4' => 'powerSupplyFaulty',
  },
  'powerSupplyRedundancy' => '1.3.6.1.4.1.15497.1.1.1.8.1.3',
  'powerSupplyName' => '1.3.6.1.4.1.15497.1.1.1.8.1.4',
  'temperatureTable' => '1.3.6.1.4.1.15497.1.1.1.9',
  'temperatureEntry' => '1.3.6.1.4.1.15497.1.1.1.9.1',
  'temperatureIndex' => '1.3.6.1.4.1.15497.1.1.1.9.1.1',
  'degreesCelsius' => '1.3.6.1.4.1.15497.1.1.1.9.1.2',
  'temperatureName' => '1.3.6.1.4.1.15497.1.1.1.9.1.3',
  'fanTable' => '1.3.6.1.4.1.15497.1.1.1.10',
  'fanEntry' => '1.3.6.1.4.1.15497.1.1.1.10.1',
  'fanIndex' => '1.3.6.1.4.1.15497.1.1.1.10.1.1',
  'fanRPMs' => '1.3.6.1.4.1.15497.1.1.1.10.1.2',
  'fanName' => '1.3.6.1.4.1.15497.1.1.1.10.1.3',
  'workQueueMessages' => '1.3.6.1.4.1.15497.1.1.1.11.0',
  'keyExpirationTable' => '1.3.6.1.4.1.15497.1.1.1.12',
  'keyExpirationEntry' => '1.3.6.1.4.1.15497.1.1.1.12.1',
  'keyExpirationIndex' => '1.3.6.1.4.1.15497.1.1.1.12.1.1',
  'keyDescription' => '1.3.6.1.4.1.15497.1.1.1.12.1.2',
  'keyIsPerpetual' => '1.3.6.1.4.1.15497.1.1.1.12.1.3',
  'keyIsPerpetualDefinition' => 'SNMPv2-TC-v1-MIB::TruthValue',
  'keySecondsUntilExpire' => '1.3.6.1.4.1.15497.1.1.1.12.1.4',
  'updateTable' => '1.3.6.1.4.1.15497.1.1.1.13',
  'updateEntry' => '1.3.6.1.4.1.15497.1.1.1.13.1',
  'updateIndex' => '1.3.6.1.4.1.15497.1.1.1.13.1.1',
  'updateServiceName' => '1.3.6.1.4.1.15497.1.1.1.13.1.2',
  'updates' => '1.3.6.1.4.1.15497.1.1.1.13.1.3',
  'updateFailures' => '1.3.6.1.4.1.15497.1.1.1.13.1.4',
  'oldestMessageAge' => '1.3.6.1.4.1.15497.1.1.1.14.0',
  'outstandingDNSRequests' => '1.3.6.1.4.1.15497.1.1.1.15.0',
  'pendingDNSRequests' => '1.3.6.1.4.1.15497.1.1.1.16.0',
  'raidEvents' => '1.3.6.1.4.1.15497.1.1.1.17.0',
  'raidTable' => '1.3.6.1.4.1.15497.1.1.1.18',
  'raidEntry' => '1.3.6.1.4.1.15497.1.1.1.18.1',
  'raidIndex' => '1.3.6.1.4.1.15497.1.1.1.18.1.1',
  'raidStatus' => '1.3.6.1.4.1.15497.1.1.1.18.1.2',
  'raidStatusDefinition' => {
    '1' => 'driveHealthy',
    '2' => 'driveFailure',
    '3' => 'driveRebuild',
  },
  'raidID' => '1.3.6.1.4.1.15497.1.1.1.18.1.3',
  'raidLastError' => '1.3.6.1.4.1.15497.1.1.1.18.1.4',
  'openFilesOrSockets' => '1.3.6.1.4.1.15497.1.1.1.19.0',
  'mailTransferThreads' => '1.3.6.1.4.1.15497.1.1.1.20.0',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::ATTACKMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'ATTACK-MIB'} = {
  url => '',
  name => 'ATTACK-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'ATTACK-MIB'} = {
  'deviceAttackTable' => '1.3.6.1.4.1.3417.2.3.1.1.1',
  'deviceAttackEntry' => '1.3.6.1.4.1.3417.2.3.1.1.1.1',
  'deviceAttackIndex' => '1.3.6.1.4.1.3417.2.3.1.1.1.1.1',
  'deviceAttackName' => '1.3.6.1.4.1.3417.2.3.1.1.1.1.2',
  'deviceAttackStatus' => '1.3.6.1.4.1.3417.2.3.1.1.1.1.3',
  'deviceAttackStatusDefinition' => {
    '1' => 'no-attack',
    '2' => 'under-attack',
  },
  'deviceAttackTime' => '1.3.6.1.4.1.3417.2.3.1.1.1.1.4',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::BGP4MIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'BGP4-MIB'} = {
  url => '',
  name => 'BGP4-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'BGP4-MIB'} = {
  'bgpVersion' => '1.3.6.1.2.1.15.1.0',
  'bgpLocalAs' => '1.3.6.1.2.1.15.2.0',
  'bgpPeerTable' => '1.3.6.1.2.1.15.3',
  'bgpPeerEntry' => '1.3.6.1.2.1.15.3.1',
  'bgpPeerIdentifier' => '1.3.6.1.2.1.15.3.1.1',
  'bgpPeerState' => '1.3.6.1.2.1.15.3.1.2',
  'bgpPeerStateDefinition' => {
    '1' => 'idle',
    '2' => 'connect',
    '3' => 'active',
    '4' => 'opensent',
    '5' => 'openconfirm',
    '6' => 'established',
  },
  'bgpPeerAdminStatus' => '1.3.6.1.2.1.15.3.1.3',
  'bgpPeerAdminStatusDefinition' => {
    '1' => 'stop',
    '2' => 'start',
  },
  'bgpPeerNegotiatedVersion' => '1.3.6.1.2.1.15.3.1.4',
  'bgpPeerLocalAddr' => '1.3.6.1.2.1.15.3.1.5',
  'bgpPeerLocalPort' => '1.3.6.1.2.1.15.3.1.6',
  'bgpPeerRemoteAddr' => '1.3.6.1.2.1.15.3.1.7',
  'bgpPeerRemotePort' => '1.3.6.1.2.1.15.3.1.8',
  'bgpPeerRemoteAs' => '1.3.6.1.2.1.15.3.1.9',
  'bgpPeerInUpdates' => '1.3.6.1.2.1.15.3.1.10',
  'bgpPeerOutUpdates' => '1.3.6.1.2.1.15.3.1.11',
  'bgpPeerInTotalMessages' => '1.3.6.1.2.1.15.3.1.12',
  'bgpPeerOutTotalMessages' => '1.3.6.1.2.1.15.3.1.13',
  'bgpPeerLastError' => '1.3.6.1.2.1.15.3.1.14',
  'bgpPeerFsmEstablishedTransitions' => '1.3.6.1.2.1.15.3.1.15',
  'bgpPeerFsmEstablishedTime' => '1.3.6.1.2.1.15.3.1.16',
  'bgpPeerConnectRetryInterval' => '1.3.6.1.2.1.15.3.1.17',
  'bgpPeerHoldTime' => '1.3.6.1.2.1.15.3.1.18',
  'bgpPeerKeepAlive' => '1.3.6.1.2.1.15.3.1.19',
  'bgpPeerHoldTimeConfigured' => '1.3.6.1.2.1.15.3.1.20',
  'bgpPeerKeepAliveConfigured' => '1.3.6.1.2.1.15.3.1.21',
  'bgpPeerMinASOriginationInterval' => '1.3.6.1.2.1.15.3.1.22',
  'bgpPeerMinRouteAdvertisementInterval' => '1.3.6.1.2.1.15.3.1.23',
  'bgpPeerInUpdateElapsedTime' => '1.3.6.1.2.1.15.3.1.24',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::MIBRESOURCE;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'BIANCA-BRICK-MIBRES-MIB'} = {
  url => '',
  name => 'BIANCA-BRICK-MIBRES-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'BIANCA-BRICK-MIBRES-MIB'} =
    '1.3.6.1.4.1.272.4.17.4';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'BIANCA-BRICK-MIBRES-MIB'} = {
  resource => '1.3.6.1.4.1.272.4.17.4.255',
  cpuTable => '1.3.6.1.4.1.272.4.17.4.1',
  cpuEntry => '1.3.6.1.4.1.272.4.17.4.1.1',
  cpuNumber => '1.3.6.1.4.1.272.4.17.4.1.1.1',
  cpuDescr => '1.3.6.1.4.1.272.4.17.4.1.1.2',
  cpuTotalUser => '1.3.6.1.4.1.272.4.17.4.1.1.3',
  cpuTotalSystem => '1.3.6.1.4.1.272.4.17.4.1.1.4',
  cpuTotalStreams => '1.3.6.1.4.1.272.4.17.4.1.1.5',
  cpuTotalIdle => '1.3.6.1.4.1.272.4.17.4.1.1.6',
  cpuLoadUser => '1.3.6.1.4.1.272.4.17.4.1.1.7',
  cpuLoadSystem => '1.3.6.1.4.1.272.4.17.4.1.1.8',
  cpuLoadStreams => '1.3.6.1.4.1.272.4.17.4.1.1.9',
  cpuLoadIdle => '1.3.6.1.4.1.272.4.17.4.1.1.10',
  cpuLoadUser10s => '1.3.6.1.4.1.272.4.17.4.1.1.11',
  cpuLoadSystem10s => '1.3.6.1.4.1.272.4.17.4.1.1.12',
  cpuLoadStreams10s => '1.3.6.1.4.1.272.4.17.4.1.1.13',
  cpuLoadIdle10s => '1.3.6.1.4.1.272.4.17.4.1.1.14',
  cpuLoadUser60s => '1.3.6.1.4.1.272.4.17.4.1.1.15',
  cpuLoadSystem60s => '1.3.6.1.4.1.272.4.17.4.1.1.16',
  cpuLoadStreams60s => '1.3.6.1.4.1.272.4.17.4.1.1.17',
  cpuLoadIdle60s => '1.3.6.1.4.1.272.4.17.4.1.1.18',
  memoryTable => '1.3.6.1.4.1.272.4.17.4.2',
  memoryEntry => '1.3.6.1.4.1.272.4.17.4.2.1',
  memoryType => '1.3.6.1.4.1.272.4.17.4.2.1.1',
  memoryTypeDefinition => 'BIANCA-BRICK-MIBRES-MIB::memoryType',
  memoryDescr => '1.3.6.1.4.1.272.4.17.4.2.1.2',
  memoryBlockSize => '1.3.6.1.4.1.272.4.17.4.2.1.3',
  memoryTotal => '1.3.6.1.4.1.272.4.17.4.2.1.4',
  memoryInuse => '1.3.6.1.4.1.272.4.17.4.2.1.5',
  memoryDramUse => '1.3.6.1.4.1.272.4.17.4.2.1.6',
  memoryNAllocs => '1.3.6.1.4.1.272.4.17.4.2.1.7',
  memoryNFrees => '1.3.6.1.4.1.272.4.17.4.2.1.8',
  memoryNFails => '1.3.6.1.4.1.272.4.17.4.2.1.9',
  dspTable => '1.3.6.1.4.1.272.4.17.4.3',
  dspEntry => '1.3.6.1.4.1.272.4.17.4.3.1',
  dspSlot => '1.3.6.1.4.1.272.4.17.4.3.1.1',
  dspUnit => '1.3.6.1.4.1.272.4.17.4.3.1.2',
  dspDescr => '1.3.6.1.4.1.272.4.17.4.3.1.3',
  dspCapabilities => '1.3.6.1.4.1.272.4.17.4.3.1.4',
  dspTotalChannels => '1.3.6.1.4.1.272.4.17.4.3.1.5',
  dspUsedChannels => '1.3.6.1.4.1.272.4.17.4.3.1.6',
  resourceMIB => '1.3.6.1.4.1.272.4.17.4.255',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'BIANCA-BRICK-MIBRES-MIB'} = {
  memoryType => {
    '1' => 'flash',
    '2' => 'dram',
    '3' => 'dpool',
  },
};

package Monitoring::GLPlugin::SNMP::MibsAndOids::BLUECOATAVMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'BLUECOAT-AV-MIB'} = {
  url => '',
  name => 'BLUECOAT-AV-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'BLUECOAT-AV-MIB'} = {
  'avFilesScanned' => '1.3.6.1.4.1.3417.2.10.1.1.0',
  'avVirusesDetected' => '1.3.6.1.4.1.3417.2.10.1.2.0',
  'avPatternVersion' => '1.3.6.1.4.1.3417.2.10.1.3.0',
  'avPatternDateTime' => '1.3.6.1.4.1.3417.2.10.1.4.0',
  'avEngineVersion' => '1.3.6.1.4.1.3417.2.10.1.5.0',
  'avVendorName' => '1.3.6.1.4.1.3417.2.10.1.6.0',
  'avLicenseDaysRemaining' => '1.3.6.1.4.1.3417.2.10.1.7.0',
  'avPublishedFirmwareVersion' => '1.3.6.1.4.1.3417.2.10.1.8.0',
  'avInstalledFirmwareVersion' => '1.3.6.1.4.1.3417.2.10.1.9.0',
  'avSlowICAPConnections' => '1.3.6.1.4.1.3417.2.10.1.10.0',
  'avUpdateFailureReason' => '1.3.6.1.4.1.3417.2.10.2.1.0',
  'avUrl' => '1.3.6.1.4.1.3417.2.10.2.2.0',
  'avVirusName' => '1.3.6.1.4.1.3417.2.10.2.3.0',
  'avVirusDetails' => '1.3.6.1.4.1.3417.2.10.2.4.0',
  'avErrorCode' => '1.3.6.1.4.1.3417.2.10.2.5.0',
  'avErrorDetails' => '1.3.6.1.4.1.3417.2.10.2.6.0',
  'avPreviousFirmwareVersion' => '1.3.6.1.4.1.3417.2.10.2.7.0',
  'avICTMWarningReason' => '1.3.6.1.4.1.3417.2.10.2.8.0',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::BLUECOATSGPROXYMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'BLUECOAT-SG-PROXY-MIB'} = {
  url => '',
  name => 'BLUECOAT-SG-PROXY-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'BLUECOAT-SG-PROXY-MIB'} = {
  'blueCoatMgmt' => '1.3.6.1.4.1.3417.2',
  'bluecoatSGProxyMIB' => '1.3.6.1.4.1.3417.2.11',
  'sgProxyConfig' => '1.3.6.1.4.1.3417.2.11.1',
  'sgProxySystem' => '1.3.6.1.4.1.3417.2.11.2',
  'sgProxyMemAvailable' => '1.3.6.1.4.1.3417.2.11.2.3.1.0',
  'sgProxyMemCacheUsage' => '1.3.6.1.4.1.3417.2.11.2.3.2.0',
  'sgProxyMemSysUsage' => '1.3.6.1.4.1.3417.2.11.2.3.3.0',
  'sgProxyMemPressure' => '1.3.6.1.4.1.3417.2.11.2.3.4.0',
  'sgProxyCpuCoreTable' => '1.3.6.1.4.1.3417.2.11.2.4',
  'sgProxyCpuCoreEntry' => '1.3.6.1.4.1.3417.2.11.2.4.1',
  'sgProxyCpuCoreIndex' => '1.3.6.1.4.1.3417.2.11.2.4.1.1',
  'sgProxyCpuCoreUpTime' => '1.3.6.1.4.1.3417.2.11.2.4.1.2',
  'sgProxyCpuCoreBusyTime' => '1.3.6.1.4.1.3417.2.11.2.4.1.3',
  'sgProxyCpuCoreIdleTime' => '1.3.6.1.4.1.3417.2.11.2.4.1.4',
  'sgProxyCpuCoreUpTimeSinceLastAccess' => '1.3.6.1.4.1.3417.2.11.2.4.1.5',
  'sgProxyCpuCoreBusyTimeSinceLastAccess' => '1.3.6.1.4.1.3417.2.11.2.4.1.6',
  'sgProxyCpuCoreIdleTimeSinceLastAccess' => '1.3.6.1.4.1.3417.2.11.2.4.1.7',
  'sgProxyCpuCoreBusyPerCent' => '1.3.6.1.4.1.3417.2.11.2.4.1.8',
  'sgProxyCpuCoreIdlePerCent' => '1.3.6.1.4.1.3417.2.11.2.4.1.9',
  'sgProxyHttp' => '1.3.6.1.4.1.3417.2.11.3',
  'sgProxyHttpPerf' => '1.3.6.1.4.1.3417.2.11.3.1',
  'sgProxyHttpClient' => '1.3.6.1.4.1.3417.2.11.3.1.1',
  'sgProxyHttpServer' => '1.3.6.1.4.1.3417.2.11.3.1.2',
  'sgProxyHttpConnections' => '1.3.6.1.4.1.3417.2.11.3.1.3',
  'sgProxyHttpClientConnections' => '1.3.6.1.4.1.3417.2.11.3.1.3.1',
  'sgProxyHttpClientConnectionsActive' => '1.3.6.1.4.1.3417.2.11.3.1.3.2',
  'sgProxyHttpClientConnectionsIdle' => '1.3.6.1.4.1.3417.2.11.3.1.3.3',
  'sgProxyHttpServerConnections' => '1.3.6.1.4.1.3417.2.11.3.1.3.4',
  'sgProxyHttpServerConnectionsActive' => '1.3.6.1.4.1.3417.2.11.3.1.3.5',
  'sgProxyHttpServerConnectionsIdle' => '1.3.6.1.4.1.3417.2.11.3.1.3.6',
  'sgProxyHttpResponse' => '1.3.6.1.4.1.3417.2.11.3.2',
  'sgProxyHttpResponseTime' => '1.3.6.1.4.1.3417.2.11.3.2.1',
  'sgProxyHttpResponseTimeAll' => '1.3.6.1.4.1.3417.2.11.3.2.1.1',
  'sgProxyHttpResponseFirstByte' => '1.3.6.1.4.1.3417.2.11.3.2.1.2',
  'sgProxyHttpResponseByteRate' => '1.3.6.1.4.1.3417.2.11.3.2.1.3',
  'sgProxyHttpResponseSize' => '1.3.6.1.4.1.3417.2.11.3.2.1.4',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::CHECKPOINTMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CHECKPOINT-MIB'} = {
  url => '',
  name => 'CHECKPOINT-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'CHECKPOINT-MIB'} =
    '1.3.6.1.4.1.2620.1';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CHECKPOINT-MIB'} = {
  'checkpoint' => '1.3.6.1.4.1.2620',
  'products' => '1.3.6.1.4.1.2620.1',
  'fw' => '1.3.6.1.4.1.2620.1.1',
  'fwTrapPrefix' => '1.3.6.1.4.1.2620.1.1.0',
  'fwModuleState' => '1.3.6.1.4.1.2620.1.1.1',
  'fwFilterName' => '1.3.6.1.4.1.2620.1.1.2',
  'fwFilterDate' => '1.3.6.1.4.1.2620.1.1.3',
  'fwAccepted' => '1.3.6.1.4.1.2620.1.1.4',
  'fwRejected' => '1.3.6.1.4.1.2620.1.1.5',
  'fwDropped' => '1.3.6.1.4.1.2620.1.1.6',
  'fwLogged' => '1.3.6.1.4.1.2620.1.1.7',
  'fwMajor' => '1.3.6.1.4.1.2620.1.1.8',
  'fwMinor' => '1.3.6.1.4.1.2620.1.1.9',
  'fwProduct' => '1.3.6.1.4.1.2620.1.1.10',
  'fwEvent' => '1.3.6.1.4.1.2620.1.1.11',
  'fwSICTrustState' => '1.3.6.1.4.1.2620.1.1.12',
  'fwProdName' => '1.3.6.1.4.1.2620.1.1.21',
  'fwVerMajor' => '1.3.6.1.4.1.2620.1.1.22',
  'fwVerMinor' => '1.3.6.1.4.1.2620.1.1.23',
  'fwKernelBuild' => '1.3.6.1.4.1.2620.1.1.24',
  'fwPolicyStat' => '1.3.6.1.4.1.2620.1.1.25',
  'fwPolicyName' => '1.3.6.1.4.1.2620.1.1.25.1',
  'fwInstallTime' => '1.3.6.1.4.1.2620.1.1.25.2',
  'fwNumConn' => '1.3.6.1.4.1.2620.1.1.25.3',
  'fwPeakNumConn' => '1.3.6.1.4.1.2620.1.1.25.4',
  'fwIfTable' => '1.3.6.1.4.1.2620.1.1.25.5',
  'fwIfEntry' => '1.3.6.1.4.1.2620.1.1.25.5.1',
  'fwIfIndex' => '1.3.6.1.4.1.2620.1.1.25.5.1.1',
  'fwIfName' => '1.3.6.1.4.1.2620.1.1.25.5.1.2',
  'fwAcceptPcktsIn' => '1.3.6.1.4.1.2620.1.1.25.5.1.5',
  'fwAcceptPcktsOut' => '1.3.6.1.4.1.2620.1.1.25.5.1.6',
  'fwAcceptBytesIn' => '1.3.6.1.4.1.2620.1.1.25.5.1.7',
  'fwAcceptBytesOut' => '1.3.6.1.4.1.2620.1.1.25.5.1.8',
  'fwDropPcktsIn' => '1.3.6.1.4.1.2620.1.1.25.5.1.9',
  'fwDropPcktsOut' => '1.3.6.1.4.1.2620.1.1.25.5.1.10',
  'fwRejectPcktsIn' => '1.3.6.1.4.1.2620.1.1.25.5.1.11',
  'fwRejectPcktsOut' => '1.3.6.1.4.1.2620.1.1.25.5.1.12',
  'fwLogIn' => '1.3.6.1.4.1.2620.1.1.25.5.1.13',
  'fwLogOut' => '1.3.6.1.4.1.2620.1.1.25.5.1.14',
  'fwPacketsRate' => '1.3.6.1.4.1.2620.1.1.25.6',
  'fwAcceptedBytesTotalRate' => '1.3.6.1.4.1.2620.1.1.25.8',
  'fwDroppedBytesTotalRate' => '1.3.6.1.4.1.2620.1.1.25.9',
  'fwConnTableLimit' => '1.3.6.1.4.1.2620.1.1.25.10',
  'fwDroppedTotalRate' => '1.3.6.1.4.1.2620.1.1.25.16',
  'fwPerfStat' => '1.3.6.1.4.1.2620.1.1.26',
  'fwHmem' => '1.3.6.1.4.1.2620.1.1.26.1',
  'fwHmem-block-size' => '1.3.6.1.4.1.2620.1.1.26.1.1',
  'fwHmem-requested-bytes' => '1.3.6.1.4.1.2620.1.1.26.1.2',
  'fwHmem-initial-allocated-bytes' => '1.3.6.1.4.1.2620.1.1.26.1.3',
  'fwHmem-initial-allocated-blocks' => '1.3.6.1.4.1.2620.1.1.26.1.4',
  'fwHmem-initial-allocated-pools' => '1.3.6.1.4.1.2620.1.1.26.1.5',
  'fwHmem-current-allocated-bytes' => '1.3.6.1.4.1.2620.1.1.26.1.6',
  'fwHmem-current-allocated-blocks' => '1.3.6.1.4.1.2620.1.1.26.1.7',
  'fwHmem-current-allocated-pools' => '1.3.6.1.4.1.2620.1.1.26.1.8',
  'fwHmem-maximum-bytes' => '1.3.6.1.4.1.2620.1.1.26.1.9',
  'fwHmem-maximum-pools' => '1.3.6.1.4.1.2620.1.1.26.1.10',
  'fwHmem-bytes-used' => '1.3.6.1.4.1.2620.1.1.26.1.11',
  'fwHmem-blocks-used' => '1.3.6.1.4.1.2620.1.1.26.1.12',
  'fwHmem-bytes-unused' => '1.3.6.1.4.1.2620.1.1.26.1.13',
  'fwHmem-blocks-unused' => '1.3.6.1.4.1.2620.1.1.26.1.14',
  'fwHmem-bytes-peak' => '1.3.6.1.4.1.2620.1.1.26.1.15',
  'fwHmem-blocks-peak' => '1.3.6.1.4.1.2620.1.1.26.1.16',
  'fwHmem-bytes-internal-use' => '1.3.6.1.4.1.2620.1.1.26.1.17',
  'fwHmem-number-of-items' => '1.3.6.1.4.1.2620.1.1.26.1.18',
  'fwHmem-alloc-operations' => '1.3.6.1.4.1.2620.1.1.26.1.19',
  'fwHmem-free-operations' => '1.3.6.1.4.1.2620.1.1.26.1.20',
  'fwHmem-failed-alloc' => '1.3.6.1.4.1.2620.1.1.26.1.21',
  'fwHmem-failed-free' => '1.3.6.1.4.1.2620.1.1.26.1.22',
  'fwKmem' => '1.3.6.1.4.1.2620.1.1.26.2',
  'fwKmem-system-physical-mem' => '1.3.6.1.4.1.2620.1.1.26.2.1',
  'fwKmem-available-physical-mem' => '1.3.6.1.4.1.2620.1.1.26.2.2',
  'fwKmem-aix-heap-size' => '1.3.6.1.4.1.2620.1.1.26.2.3',
  'fwKmem-bytes-used' => '1.3.6.1.4.1.2620.1.1.26.2.4',
  'fwKmem-blocking-bytes-used' => '1.3.6.1.4.1.2620.1.1.26.2.5',
  'fwKmem-non-blocking-bytes-used' => '1.3.6.1.4.1.2620.1.1.26.2.6',
  'fwKmem-bytes-unused' => '1.3.6.1.4.1.2620.1.1.26.2.7',
  'fwKmem-bytes-peak' => '1.3.6.1.4.1.2620.1.1.26.2.8',
  'fwKmem-blocking-bytes-peak' => '1.3.6.1.4.1.2620.1.1.26.2.9',
  'fwKmem-non-blocking-bytes-peak' => '1.3.6.1.4.1.2620.1.1.26.2.10',
  'fwKmem-bytes-internal-use' => '1.3.6.1.4.1.2620.1.1.26.2.11',
  'fwKmem-number-of-items' => '1.3.6.1.4.1.2620.1.1.26.2.12',
  'fwKmem-alloc-operations' => '1.3.6.1.4.1.2620.1.1.26.2.13',
  'fwKmem-free-operations' => '1.3.6.1.4.1.2620.1.1.26.2.14',
  'fwKmem-failed-alloc' => '1.3.6.1.4.1.2620.1.1.26.2.15',
  'fwKmem-failed-free' => '1.3.6.1.4.1.2620.1.1.26.2.16',
  'fwInspect' => '1.3.6.1.4.1.2620.1.1.26.3',
  'fwInspect-packets' => '1.3.6.1.4.1.2620.1.1.26.3.1',
  'fwInspect-operations' => '1.3.6.1.4.1.2620.1.1.26.3.2',
  'fwInspect-lookups' => '1.3.6.1.4.1.2620.1.1.26.3.3',
  'fwInspect-record' => '1.3.6.1.4.1.2620.1.1.26.3.4',
  'fwInspect-extract' => '1.3.6.1.4.1.2620.1.1.26.3.5',
  'fwCookies' => '1.3.6.1.4.1.2620.1.1.26.4',
  'fwCookies-total' => '1.3.6.1.4.1.2620.1.1.26.4.1',
  'fwCookies-allocfwCookies-total' => '1.3.6.1.4.1.2620.1.1.26.4.2',
  'fwCookies-freefwCookies-total' => '1.3.6.1.4.1.2620.1.1.26.4.3',
  'fwCookies-dupfwCookies-total' => '1.3.6.1.4.1.2620.1.1.26.4.4',
  'fwCookies-getfwCookies-total' => '1.3.6.1.4.1.2620.1.1.26.4.5',
  'fwCookies-putfwCookies-total' => '1.3.6.1.4.1.2620.1.1.26.4.6',
  'fwCookies-lenfwCookies-total' => '1.3.6.1.4.1.2620.1.1.26.4.7',
  'fwChains' => '1.3.6.1.4.1.2620.1.1.26.5',
  'fwChains-alloc' => '1.3.6.1.4.1.2620.1.1.26.5.1',
  'fwChains-free' => '1.3.6.1.4.1.2620.1.1.26.5.2',
  'fwFragments' => '1.3.6.1.4.1.2620.1.1.26.6',
  'fwFrag-fragments' => '1.3.6.1.4.1.2620.1.1.26.6.1',
  'fwFrag-expired' => '1.3.6.1.4.1.2620.1.1.26.6.2',
  'fwFrag-packets' => '1.3.6.1.4.1.2620.1.1.26.6.3',
  'fwUfp' => '1.3.6.1.4.1.2620.1.1.26.8',
  'fwUfpHitRatio' => '1.3.6.1.4.1.2620.1.1.26.8.1',
  'fwUfpInspected' => '1.3.6.1.4.1.2620.1.1.26.8.2',
  'fwUfpHits' => '1.3.6.1.4.1.2620.1.1.26.8.3',
  'fwSS' => '1.3.6.1.4.1.2620.1.1.26.9',
  'fwSS-http' => '1.3.6.1.4.1.2620.1.1.26.9.1',
  'fwSS-http-pid' => '1.3.6.1.4.1.2620.1.1.26.9.1.1',
  'fwSS-http-proto' => '1.3.6.1.4.1.2620.1.1.26.9.1.2',
  'fwSS-http-port' => '1.3.6.1.4.1.2620.1.1.26.9.1.3',
  'fwSS-http-logical-port' => '1.3.6.1.4.1.2620.1.1.26.9.1.4',
  'fwSS-http-max-avail-socket' => '1.3.6.1.4.1.2620.1.1.26.9.1.5',
  'fwSS-http-socket-in-use-max' => '1.3.6.1.4.1.2620.1.1.26.9.1.6',
  'fwSS-http-socket-in-use-curr' => '1.3.6.1.4.1.2620.1.1.26.9.1.7',
  'fwSS-http-socket-in-use-count' => '1.3.6.1.4.1.2620.1.1.26.9.1.8',
  'fwSS-http-sess-max' => '1.3.6.1.4.1.2620.1.1.26.9.1.9',
  'fwSS-http-sess-curr' => '1.3.6.1.4.1.2620.1.1.26.9.1.10',
  'fwSS-http-sess-count' => '1.3.6.1.4.1.2620.1.1.26.9.1.11',
  'fwSS-http-auth-sess-max' => '1.3.6.1.4.1.2620.1.1.26.9.1.12',
  'fwSS-http-auth-sess-curr' => '1.3.6.1.4.1.2620.1.1.26.9.1.13',
  'fwSS-http-auth-sess-count' => '1.3.6.1.4.1.2620.1.1.26.9.1.14',
  'fwSS-http-accepted-sess' => '1.3.6.1.4.1.2620.1.1.26.9.1.15',
  'fwSS-http-rejected-sess' => '1.3.6.1.4.1.2620.1.1.26.9.1.16',
  'fwSS-http-auth-failures' => '1.3.6.1.4.1.2620.1.1.26.9.1.17',
  'fwSS-http-ops-cvp-sess-max' => '1.3.6.1.4.1.2620.1.1.26.9.1.18',
  'fwSS-http-ops-cvp-sess-curr' => '1.3.6.1.4.1.2620.1.1.26.9.1.19',
  'fwSS-http-ops-cvp-sess-count' => '1.3.6.1.4.1.2620.1.1.26.9.1.20',
  'fwSS-http-ops-cvp-rej-sess' => '1.3.6.1.4.1.2620.1.1.26.9.1.21',
  'fwSS-http-ssl-encryp-sess-max' => '1.3.6.1.4.1.2620.1.1.26.9.1.22',
  'fwSS-http-ssl-encryp-sess-curr' => '1.3.6.1.4.1.2620.1.1.26.9.1.23',
  'fwSS-http-ssl-encryp-sess-count' => '1.3.6.1.4.1.2620.1.1.26.9.1.24',
  'fwSS-http-transp-sess-max' => '1.3.6.1.4.1.2620.1.1.26.9.1.25',
  'fwSS-http-transp-sess-curr' => '1.3.6.1.4.1.2620.1.1.26.9.1.26',
  'fwSS-http-transp-sess-count' => '1.3.6.1.4.1.2620.1.1.26.9.1.27',
  'fwSS-http-proxied-sess-max' => '1.3.6.1.4.1.2620.1.1.26.9.1.28',
  'fwSS-http-proxied-sess-curr' => '1.3.6.1.4.1.2620.1.1.26.9.1.29',
  'fwSS-http-proxied-sess-count' => '1.3.6.1.4.1.2620.1.1.26.9.1.30',
  'fwSS-http-tunneled-sess-max' => '1.3.6.1.4.1.2620.1.1.26.9.1.31',
  'fwSS-http-tunneled-sess-curr' => '1.3.6.1.4.1.2620.1.1.26.9.1.32',
  'fwSS-http-tunneled-sess-count' => '1.3.6.1.4.1.2620.1.1.26.9.1.33',
  'fwSS-http-ftp-sess-max' => '1.3.6.1.4.1.2620.1.1.26.9.1.34',
  'fwSS-http-ftp-sess-curr' => '1.3.6.1.4.1.2620.1.1.26.9.1.35',
  'fwSS-http-ftp-sess-count' => '1.3.6.1.4.1.2620.1.1.26.9.1.36',
  'fwSS-http-time-stamp' => '1.3.6.1.4.1.2620.1.1.26.9.1.37',
  'fwSS-http-is-alive' => '1.3.6.1.4.1.2620.1.1.26.9.1.38',
  'fwSS-http-blocked-cnt' => '1.3.6.1.4.1.2620.1.1.26.9.1.39',
  'fwSS-http-blocked-total' => '1.3.6.1.4.1.2620.1.1.26.9.1.40',
  'fwSS-http-scanned-total' => '1.3.6.1.4.1.2620.1.1.26.9.1.41',
  'fwSS-http-blocked-by-file-type' => '1.3.6.1.4.1.2620.1.1.26.9.1.42',
  'fwSS-http-blocked-by-size-limit' => '1.3.6.1.4.1.2620.1.1.26.9.1.43',
  'fwSS-http-blocked-by-archive-limit' => '1.3.6.1.4.1.2620.1.1.26.9.1.44',
  'fwSS-http-blocked-by-internal-error' => '1.3.6.1.4.1.2620.1.1.26.9.1.45',
  'fwSS-http-passed-cnt' => '1.3.6.1.4.1.2620.1.1.26.9.1.46',
  'fwSS-http-passed-by-file-type' => '1.3.6.1.4.1.2620.1.1.26.9.1.47',
  'fwSS-http-passed-by-size-limit' => '1.3.6.1.4.1.2620.1.1.26.9.1.48',
  'fwSS-http-passed-by-archive-limit' => '1.3.6.1.4.1.2620.1.1.26.9.1.49',
  'fwSS-http-passed-by-internal-error' => '1.3.6.1.4.1.2620.1.1.26.9.1.50',
  'fwSS-http-passed-total' => '1.3.6.1.4.1.2620.1.1.26.9.1.51',
  'fwSS-http-blocked-by-AV-settings' => '1.3.6.1.4.1.2620.1.1.26.9.1.52',
  'fwSS-http-passed-by-AV-settings' => '1.3.6.1.4.1.2620.1.1.26.9.1.53',
  'fwSS-http-blocked-by-URL-filter-category' => '1.3.6.1.4.1.2620.1.1.26.9.1.54',
  'fwSS-http-blocked-by-URL-block-list' => '1.3.6.1.4.1.2620.1.1.26.9.1.55',
  'fwSS-http-passed-by-URL-allow-list' => '1.3.6.1.4.1.2620.1.1.26.9.1.56',
  'fwSS-http-passed-by-URL-filter-category' => '1.3.6.1.4.1.2620.1.1.26.9.1.57',
  'fwSS-ftp' => '1.3.6.1.4.1.2620.1.1.26.9.2',
  'fwSS-ftp-pid' => '1.3.6.1.4.1.2620.1.1.26.9.2.1',
  'fwSS-ftp-proto' => '1.3.6.1.4.1.2620.1.1.26.9.2.2',
  'fwSS-ftp-port' => '1.3.6.1.4.1.2620.1.1.26.9.2.3',
  'fwSS-ftp-logical-port' => '1.3.6.1.4.1.2620.1.1.26.9.2.4',
  'fwSS-ftp-max-avail-socket' => '1.3.6.1.4.1.2620.1.1.26.9.2.5',
  'fwSS-ftp-socket-in-use-max' => '1.3.6.1.4.1.2620.1.1.26.9.2.6',
  'fwSS-ftp-socket-in-use-curr' => '1.3.6.1.4.1.2620.1.1.26.9.2.7',
  'fwSS-ftp-socket-in-use-count' => '1.3.6.1.4.1.2620.1.1.26.9.2.8',
  'fwSS-ftp-sess-max' => '1.3.6.1.4.1.2620.1.1.26.9.2.9',
  'fwSS-ftp-sess-curr' => '1.3.6.1.4.1.2620.1.1.26.9.2.10',
  'fwSS-ftp-sess-count' => '1.3.6.1.4.1.2620.1.1.26.9.2.11',
  'fwSS-ftp-auth-sess-max' => '1.3.6.1.4.1.2620.1.1.26.9.2.12',
  'fwSS-ftp-auth-sess-curr' => '1.3.6.1.4.1.2620.1.1.26.9.2.13',
  'fwSS-ftp-auth-sess-count' => '1.3.6.1.4.1.2620.1.1.26.9.2.14',
  'fwSS-ftp-accepted-sess' => '1.3.6.1.4.1.2620.1.1.26.9.2.15',
  'fwSS-ftp-rejected-sess' => '1.3.6.1.4.1.2620.1.1.26.9.2.16',
  'fwSS-ftp-auth-failures' => '1.3.6.1.4.1.2620.1.1.26.9.2.17',
  'fwSS-ftp-ops-cvp-sess-max' => '1.3.6.1.4.1.2620.1.1.26.9.2.18',
  'fwSS-ftp-ops-cvp-sess-curr' => '1.3.6.1.4.1.2620.1.1.26.9.2.19',
  'fwSS-ftp-ops-cvp-sess-count' => '1.3.6.1.4.1.2620.1.1.26.9.2.20',
  'fwSS-ftp-ops-cvp-rej-sess' => '1.3.6.1.4.1.2620.1.1.26.9.2.21',
  'fwSS-ftp-time-stamp' => '1.3.6.1.4.1.2620.1.1.26.9.2.22',
  'fwSS-ftp-is-alive' => '1.3.6.1.4.1.2620.1.1.26.9.2.23',
  'fwSS-ftp-blocked-cnt' => '1.3.6.1.4.1.2620.1.1.26.9.2.24',
  'fwSS-ftp-blocked-total' => '1.3.6.1.4.1.2620.1.1.26.9.2.25',
  'fwSS-ftp-scanned-total' => '1.3.6.1.4.1.2620.1.1.26.9.2.26',
  'fwSS-ftp-blocked-by-file-type' => '1.3.6.1.4.1.2620.1.1.26.9.2.27',
  'fwSS-ftp-blocked-by-size-limit' => '1.3.6.1.4.1.2620.1.1.26.9.2.28',
  'fwSS-ftp-blocked-by-archive-limit' => '1.3.6.1.4.1.2620.1.1.26.9.2.29',
  'fwSS-ftp-blocked-by-internal-error' => '1.3.6.1.4.1.2620.1.1.26.9.2.30',
  'fwSS-ftp-passed-cnt' => '1.3.6.1.4.1.2620.1.1.26.9.2.31',
  'fwSS-ftp-passed-by-file-type' => '1.3.6.1.4.1.2620.1.1.26.9.2.32',
  'fwSS-ftp-passed-by-size-limit' => '1.3.6.1.4.1.2620.1.1.26.9.2.33',
  'fwSS-ftp-passed-by-archive-limit' => '1.3.6.1.4.1.2620.1.1.26.9.2.34',
  'fwSS-ftp-passed-by-internal-error' => '1.3.6.1.4.1.2620.1.1.26.9.2.35',
  'fwSS-ftp-passed-total' => '1.3.6.1.4.1.2620.1.1.26.9.2.36',
  'fwSS-ftp-blocked-by-AV-settings' => '1.3.6.1.4.1.2620.1.1.26.9.2.37',
  'fwSS-ftp-passed-by-AV-settings' => '1.3.6.1.4.1.2620.1.1.26.9.2.38',
  'fwSS-telnet' => '1.3.6.1.4.1.2620.1.1.26.9.3',
  'fwSS-telnet-pid' => '1.3.6.1.4.1.2620.1.1.26.9.3.1',
  'fwSS-telnet-proto' => '1.3.6.1.4.1.2620.1.1.26.9.3.2',
  'fwSS-telnet-port' => '1.3.6.1.4.1.2620.1.1.26.9.3.3',
  'fwSS-telnet-logical-port' => '1.3.6.1.4.1.2620.1.1.26.9.3.4',
  'fwSS-telnet-max-avail-socket' => '1.3.6.1.4.1.2620.1.1.26.9.3.5',
  'fwSS-telnet-socket-in-use-max' => '1.3.6.1.4.1.2620.1.1.26.9.3.6',
  'fwSS-telnet-socket-in-use-curr' => '1.3.6.1.4.1.2620.1.1.26.9.3.7',
  'fwSS-telnet-socket-in-use-count' => '1.3.6.1.4.1.2620.1.1.26.9.3.8',
  'fwSS-telnet-sess-max' => '1.3.6.1.4.1.2620.1.1.26.9.3.9',
  'fwSS-telnet-sess-curr' => '1.3.6.1.4.1.2620.1.1.26.9.3.10',
  'fwSS-telnet-sess-count' => '1.3.6.1.4.1.2620.1.1.26.9.3.11',
  'fwSS-telnet-auth-sess-max' => '1.3.6.1.4.1.2620.1.1.26.9.3.12',
  'fwSS-telnet-auth-sess-curr' => '1.3.6.1.4.1.2620.1.1.26.9.3.13',
  'fwSS-telnet-auth-sess-count' => '1.3.6.1.4.1.2620.1.1.26.9.3.14',
  'fwSS-telnet-accepted-sess' => '1.3.6.1.4.1.2620.1.1.26.9.3.15',
  'fwSS-telnet-rejected-sess' => '1.3.6.1.4.1.2620.1.1.26.9.3.16',
  'fwSS-telnet-auth-failures' => '1.3.6.1.4.1.2620.1.1.26.9.3.17',
  'fwSS-telnet-time-stamp' => '1.3.6.1.4.1.2620.1.1.26.9.3.18',
  'fwSS-telnet-is-alive' => '1.3.6.1.4.1.2620.1.1.26.9.3.19',
  'fwSS-rlogin' => '1.3.6.1.4.1.2620.1.1.26.9.4',
  'fwSS-rlogin-pid' => '1.3.6.1.4.1.2620.1.1.26.9.4.1',
  'fwSS-rlogin-proto' => '1.3.6.1.4.1.2620.1.1.26.9.4.2',
  'fwSS-rlogin-port' => '1.3.6.1.4.1.2620.1.1.26.9.4.3',
  'fwSS-rlogin-logical-port' => '1.3.6.1.4.1.2620.1.1.26.9.4.4',
  'fwSS-rlogin-max-avail-socket' => '1.3.6.1.4.1.2620.1.1.26.9.4.5',
  'fwSS-rlogin-socket-in-use-max' => '1.3.6.1.4.1.2620.1.1.26.9.4.6',
  'fwSS-rlogin-socket-in-use-curr' => '1.3.6.1.4.1.2620.1.1.26.9.4.7',
  'fwSS-rlogin-socket-in-use-count' => '1.3.6.1.4.1.2620.1.1.26.9.4.8',
  'fwSS-rlogin-sess-max' => '1.3.6.1.4.1.2620.1.1.26.9.4.9',
  'fwSS-rlogin-sess-curr' => '1.3.6.1.4.1.2620.1.1.26.9.4.10',
  'fwSS-rlogin-sess-count' => '1.3.6.1.4.1.2620.1.1.26.9.4.11',
  'fwSS-rlogin-auth-sess-max' => '1.3.6.1.4.1.2620.1.1.26.9.4.12',
  'fwSS-rlogin-auth-sess-curr' => '1.3.6.1.4.1.2620.1.1.26.9.4.13',
  'fwSS-rlogin-auth-sess-count' => '1.3.6.1.4.1.2620.1.1.26.9.4.14',
  'fwSS-rlogin-accepted-sess' => '1.3.6.1.4.1.2620.1.1.26.9.4.15',
  'fwSS-rlogin-rejected-sess' => '1.3.6.1.4.1.2620.1.1.26.9.4.16',
  'fwSS-rlogin-auth-failures' => '1.3.6.1.4.1.2620.1.1.26.9.4.17',
  'fwSS-rlogin-time-stamp' => '1.3.6.1.4.1.2620.1.1.26.9.4.18',
  'fwSS-rlogin-is-alive' => '1.3.6.1.4.1.2620.1.1.26.9.4.19',
  'fwSS-ufp' => '1.3.6.1.4.1.2620.1.1.26.9.5',
  'fwSS-ufp-ops-ufp-sess-max' => '1.3.6.1.4.1.2620.1.1.26.9.5.1',
  'fwSS-ufp-ops-ufp-sess-curr' => '1.3.6.1.4.1.2620.1.1.26.9.5.2',
  'fwSS-ufp-ops-ufp-sess-count' => '1.3.6.1.4.1.2620.1.1.26.9.5.3',
  'fwSS-ufp-ops-ufp-rej-sess' => '1.3.6.1.4.1.2620.1.1.26.9.5.4',
  'fwSS-ufp-time-stamp' => '1.3.6.1.4.1.2620.1.1.26.9.5.5',
  'fwSS-ufp-is-alive' => '1.3.6.1.4.1.2620.1.1.26.9.5.6',
  'fwSS-smtp' => '1.3.6.1.4.1.2620.1.1.26.9.6',
  'fwSS-smtp-pid' => '1.3.6.1.4.1.2620.1.1.26.9.6.1',
  'fwSS-smtp-proto' => '1.3.6.1.4.1.2620.1.1.26.9.6.2',
  'fwSS-smtp-port' => '1.3.6.1.4.1.2620.1.1.26.9.6.3',
  'fwSS-smtp-logical-port' => '1.3.6.1.4.1.2620.1.1.26.9.6.4',
  'fwSS-smtp-max-avail-socket' => '1.3.6.1.4.1.2620.1.1.26.9.6.5',
  'fwSS-smtp-socket-in-use-max' => '1.3.6.1.4.1.2620.1.1.26.9.6.6',
  'fwSS-smtp-socket-in-use-curr' => '1.3.6.1.4.1.2620.1.1.26.9.6.7',
  'fwSS-smtp-socket-in-use-count' => '1.3.6.1.4.1.2620.1.1.26.9.6.8',
  'fwSS-smtp-sess-max' => '1.3.6.1.4.1.2620.1.1.26.9.6.9',
  'fwSS-smtp-sess-curr' => '1.3.6.1.4.1.2620.1.1.26.9.6.10',
  'fwSS-smtp-sess-count' => '1.3.6.1.4.1.2620.1.1.26.9.6.11',
  'fwSS-smtp-auth-sess-max' => '1.3.6.1.4.1.2620.1.1.26.9.6.12',
  'fwSS-smtp-auth-sess-curr' => '1.3.6.1.4.1.2620.1.1.26.9.6.13',
  'fwSS-smtp-auth-sess-count' => '1.3.6.1.4.1.2620.1.1.26.9.6.14',
  'fwSS-smtp-accepted-sess' => '1.3.6.1.4.1.2620.1.1.26.9.6.15',
  'fwSS-smtp-rejected-sess' => '1.3.6.1.4.1.2620.1.1.26.9.6.16',
  'fwSS-smtp-auth-failures' => '1.3.6.1.4.1.2620.1.1.26.9.6.17',
  'fwSS-smtp-mail-max' => '1.3.6.1.4.1.2620.1.1.26.9.6.18',
  'fwSS-smtp-mail-curr' => '1.3.6.1.4.1.2620.1.1.26.9.6.19',
  'fwSS-smtp-mail-count' => '1.3.6.1.4.1.2620.1.1.26.9.6.20',
  'fwSS-smtp-outgoing-mail-max' => '1.3.6.1.4.1.2620.1.1.26.9.6.21',
  'fwSS-smtp-outgoing-mail-curr' => '1.3.6.1.4.1.2620.1.1.26.9.6.22',
  'fwSS-smtp-outgoing-mail-count' => '1.3.6.1.4.1.2620.1.1.26.9.6.23',
  'fwSS-smtp-max-mail-on-conn' => '1.3.6.1.4.1.2620.1.1.26.9.6.24',
  'fwSS-smtp-total-mails' => '1.3.6.1.4.1.2620.1.1.26.9.6.25',
  'fwSS-smtp-time-stamp' => '1.3.6.1.4.1.2620.1.1.26.9.6.26',
  'fwSS-smtp-is-alive' => '1.3.6.1.4.1.2620.1.1.26.9.6.27',
  'fwSS-smtp-blocked-cnt' => '1.3.6.1.4.1.2620.1.1.26.9.6.28',
  'fwSS-smtp-blocked-total' => '1.3.6.1.4.1.2620.1.1.26.9.6.29',
  'fwSS-smtp-scanned-total' => '1.3.6.1.4.1.2620.1.1.26.9.6.30',
  'fwSS-smtp-blocked-by-file-type' => '1.3.6.1.4.1.2620.1.1.26.9.6.31',
  'fwSS-smtp-blocked-by-size-limit' => '1.3.6.1.4.1.2620.1.1.26.9.6.32',
  'fwSS-smtp-blocked-by-archive-limit' => '1.3.6.1.4.1.2620.1.1.26.9.6.33',
  'fwSS-smtp-blocked-by-internal-error' => '1.3.6.1.4.1.2620.1.1.26.9.6.34',
  'fwSS-smtp-passed-cnt' => '1.3.6.1.4.1.2620.1.1.26.9.6.35',
  'fwSS-smtp-passed-by-file-type' => '1.3.6.1.4.1.2620.1.1.26.9.6.36',
  'fwSS-smtp-passed-by-size-limit' => '1.3.6.1.4.1.2620.1.1.26.9.6.37',
  'fwSS-smtp-passed-by-archive-limit' => '1.3.6.1.4.1.2620.1.1.26.9.6.38',
  'fwSS-smtp-passed-by-internal-error' => '1.3.6.1.4.1.2620.1.1.26.9.6.39',
  'fwSS-smtp-passed-total' => '1.3.6.1.4.1.2620.1.1.26.9.6.40',
  'fwSS-smtp-blocked-by-AV-settings' => '1.3.6.1.4.1.2620.1.1.26.9.6.41',
  'fwSS-smtp-passed-by-AV-settings' => '1.3.6.1.4.1.2620.1.1.26.9.6.42',
  'fwSS-POP3' => '1.3.6.1.4.1.2620.1.1.26.9.7',
  'fwSS-POP3-pid' => '1.3.6.1.4.1.2620.1.1.26.9.7.1',
  'fwSS-POP3-proto' => '1.3.6.1.4.1.2620.1.1.26.9.7.2',
  'fwSS-POP3-port' => '1.3.6.1.4.1.2620.1.1.26.9.7.3',
  'fwSS-POP3-logical-port' => '1.3.6.1.4.1.2620.1.1.26.9.7.4',
  'fwSS-POP3-max-avail-socket' => '1.3.6.1.4.1.2620.1.1.26.9.7.5',
  'fwSS-POP3-socket-in-use-max' => '1.3.6.1.4.1.2620.1.1.26.9.7.6',
  'fwSS-POP3-socket-in-use-curr' => '1.3.6.1.4.1.2620.1.1.26.9.7.7',
  'fwSS-POP3-socket-in-use-count' => '1.3.6.1.4.1.2620.1.1.26.9.7.8',
  'fwSS-POP3-sess-max' => '1.3.6.1.4.1.2620.1.1.26.9.7.9',
  'fwSS-POP3-sess-curr' => '1.3.6.1.4.1.2620.1.1.26.9.7.10',
  'fwSS-POP3-sess-count' => '1.3.6.1.4.1.2620.1.1.26.9.7.11',
  'fwSS-POP3-auth-sess-max' => '1.3.6.1.4.1.2620.1.1.26.9.7.12',
  'fwSS-POP3-auth-sess-curr' => '1.3.6.1.4.1.2620.1.1.26.9.7.13',
  'fwSS-POP3-auth-sess-count' => '1.3.6.1.4.1.2620.1.1.26.9.7.14',
  'fwSS-POP3-accepted-sess' => '1.3.6.1.4.1.2620.1.1.26.9.7.15',
  'fwSS-POP3-rejected-sess' => '1.3.6.1.4.1.2620.1.1.26.9.7.16',
  'fwSS-POP3-auth-failures' => '1.3.6.1.4.1.2620.1.1.26.9.7.17',
  'fwSS-POP3-mail-max' => '1.3.6.1.4.1.2620.1.1.26.9.7.18',
  'fwSS-POP3-mail-curr' => '1.3.6.1.4.1.2620.1.1.26.9.7.19',
  'fwSS-POP3-mail-count' => '1.3.6.1.4.1.2620.1.1.26.9.7.20',
  'fwSS-POP3-outgoing-mail-max' => '1.3.6.1.4.1.2620.1.1.26.9.7.21',
  'fwSS-POP3-outgoing-mail-curr' => '1.3.6.1.4.1.2620.1.1.26.9.7.22',
  'fwSS-POP3-outgoing-mail-count' => '1.3.6.1.4.1.2620.1.1.26.9.7.23',
  'fwSS-POP3-max-mail-on-conn' => '1.3.6.1.4.1.2620.1.1.26.9.7.24',
  'fwSS-POP3-total-mails' => '1.3.6.1.4.1.2620.1.1.26.9.7.25',
  'fwSS-POP3-time-stamp' => '1.3.6.1.4.1.2620.1.1.26.9.7.26',
  'fwSS-POP3-is-alive' => '1.3.6.1.4.1.2620.1.1.26.9.7.27',
  'fwSS-POP3-blocked-cnt' => '1.3.6.1.4.1.2620.1.1.26.9.7.28',
  'fwSS-POP3-blocked-total' => '1.3.6.1.4.1.2620.1.1.26.9.7.29',
  'fwSS-POP3-scanned-total' => '1.3.6.1.4.1.2620.1.1.26.9.7.30',
  'fwSS-POP3-blocked-by-file-type' => '1.3.6.1.4.1.2620.1.1.26.9.7.31',
  'fwSS-POP3-blocked-by-size-limit' => '1.3.6.1.4.1.2620.1.1.26.9.7.32',
  'fwSS-POP3-blocked-by-archive-limit' => '1.3.6.1.4.1.2620.1.1.26.9.7.33',
  'fwSS-POP3-blocked-by-internal-error' => '1.3.6.1.4.1.2620.1.1.26.9.7.34',
  'fwSS-POP3-passed-cnt' => '1.3.6.1.4.1.2620.1.1.26.9.7.35',
  'fwSS-POP3-passed-by-file-type' => '1.3.6.1.4.1.2620.1.1.26.9.7.36',
  'fwSS-POP3-passed-by-size-limit' => '1.3.6.1.4.1.2620.1.1.26.9.7.37',
  'fwSS-POP3-passed-by-archive-limit' => '1.3.6.1.4.1.2620.1.1.26.9.7.38',
  'fwSS-POP3-passed-by-internal-error' => '1.3.6.1.4.1.2620.1.1.26.9.7.39',
  'fwSS-POP3-passed-total' => '1.3.6.1.4.1.2620.1.1.26.9.7.40',
  'fwSS-POP3-blocked-by-AV-settings' => '1.3.6.1.4.1.2620.1.1.26.9.7.41',
  'fwSS-POP3-passed-by-AV-settings' => '1.3.6.1.4.1.2620.1.1.26.9.7.42',
  'fwSS-av-total' => '1.3.6.1.4.1.2620.1.1.26.9.10',
  'fwSS-total-blocked-by-av' => '1.3.6.1.4.1.2620.1.1.26.9.10.1',
  'fwSS-total-blocked' => '1.3.6.1.4.1.2620.1.1.26.9.10.2',
  'fwSS-total-scanned' => '1.3.6.1.4.1.2620.1.1.26.9.10.3',
  'fwSS-total-blocked-by-file-type' => '1.3.6.1.4.1.2620.1.1.26.9.10.4',
  'fwSS-total-blocked-by-size-limit' => '1.3.6.1.4.1.2620.1.1.26.9.10.5',
  'fwSS-total-blocked-by-archive-limit' => '1.3.6.1.4.1.2620.1.1.26.9.10.6',
  'fwSS-total-blocked-by-interal-error' => '1.3.6.1.4.1.2620.1.1.26.9.10.7',
  'fwSS-total-passed-by-av' => '1.3.6.1.4.1.2620.1.1.26.9.10.8',
  'fwSS-total-passed-by-file-type' => '1.3.6.1.4.1.2620.1.1.26.9.10.9',
  'fwSS-total-passed-by-size-limit' => '1.3.6.1.4.1.2620.1.1.26.9.10.10',
  'fwSS-total-passed-by-archive-limit' => '1.3.6.1.4.1.2620.1.1.26.9.10.11',
  'fwSS-total-passed-by-interal-error' => '1.3.6.1.4.1.2620.1.1.26.9.10.12',
  'fwSS-total-passed' => '1.3.6.1.4.1.2620.1.1.26.9.10.13',
  'fwSS-total-blocked-by-av-settings' => '1.3.6.1.4.1.2620.1.1.26.9.10.14',
  'fwSS-total-passed-by-av-settings' => '1.3.6.1.4.1.2620.1.1.26.9.10.15',
  'fwConnectionsStat' => '1.3.6.1.4.1.2620.1.1.26.11',
  'fwConnectionsStatConnectionsTcp' => '1.3.6.1.4.1.2620.1.1.26.11.1',
  'fwConnectionsStatConnectionsUdp' => '1.3.6.1.4.1.2620.1.1.26.11.2',
  'fwConnectionsStatConnectionsIcmp' => '1.3.6.1.4.1.2620.1.1.26.11.3',
  'fwConnectionsStatConnectionsOther' => '1.3.6.1.4.1.2620.1.1.26.11.4',
  'fwConnectionsStatConnections' => '1.3.6.1.4.1.2620.1.1.26.11.5',
  'fwConnectionsStatConnectionRate' => '1.3.6.1.4.1.2620.1.1.26.11.6',
  'fwHmem64' => '1.3.6.1.4.1.2620.1.1.26.12',
  'fwHmem64-block-size' => '1.3.6.1.4.1.2620.1.1.26.12.1',
  'fwHmem64-requested-bytes' => '1.3.6.1.4.1.2620.1.1.26.12.2',
  'fwHmem64-initial-allocated-bytes' => '1.3.6.1.4.1.2620.1.1.26.12.3',
  'fwHmem64-initial-allocated-blocks' => '1.3.6.1.4.1.2620.1.1.26.12.4',
  'fwHmem64-initial-allocated-pools' => '1.3.6.1.4.1.2620.1.1.26.12.5',
  'fwHmem64-current-allocated-bytes' => '1.3.6.1.4.1.2620.1.1.26.12.6',
  'fwHmem64-current-allocated-blocks' => '1.3.6.1.4.1.2620.1.1.26.12.7',
  'fwHmem64-current-allocated-pools' => '1.3.6.1.4.1.2620.1.1.26.12.8',
  'fwHmem64-maximum-bytes' => '1.3.6.1.4.1.2620.1.1.26.12.9',
  'fwHmem64-maximum-pools' => '1.3.6.1.4.1.2620.1.1.26.12.10',
  'fwHmem64-bytes-used' => '1.3.6.1.4.1.2620.1.1.26.12.11',
  'fwHmem64-blocks-used' => '1.3.6.1.4.1.2620.1.1.26.12.12',
  'fwHmem64-bytes-unused' => '1.3.6.1.4.1.2620.1.1.26.12.13',
  'fwHmem64-blocks-unused' => '1.3.6.1.4.1.2620.1.1.26.12.14',
  'fwHmem64-bytes-peak' => '1.3.6.1.4.1.2620.1.1.26.12.15',
  'fwHmem64-blocks-peak' => '1.3.6.1.4.1.2620.1.1.26.12.16',
  'fwHmem64-bytes-internal-use' => '1.3.6.1.4.1.2620.1.1.26.12.17',
  'fwHmem64-number-of-items' => '1.3.6.1.4.1.2620.1.1.26.12.18',
  'fwHmem64-alloc-operations' => '1.3.6.1.4.1.2620.1.1.26.12.19',
  'fwHmem64-free-operations' => '1.3.6.1.4.1.2620.1.1.26.12.20',
  'fwHmem64-failed-alloc' => '1.3.6.1.4.1.2620.1.1.26.12.21',
  'fwHmem64-failed-free' => '1.3.6.1.4.1.2620.1.1.26.12.22',
  'fwNetIfTable' => '1.3.6.1.4.1.2620.1.1.27',
  'fwNetIfEntry' => '1.3.6.1.4.1.2620.1.1.27.1',
  'fwNetIfIndex' => '1.3.6.1.4.1.2620.1.1.27.1.1',
  'fwNetIfName' => '1.3.6.1.4.1.2620.1.1.27.1.2',
  'fwNetIfIPAddr' => '1.3.6.1.4.1.2620.1.1.27.1.3',
  'fwNetIfNetmask' => '1.3.6.1.4.1.2620.1.1.27.1.4',
  'fwNetIfFlags' => '1.3.6.1.4.1.2620.1.1.27.1.5',
  'fwNetIfPeerName' => '1.3.6.1.4.1.2620.1.1.27.1.6',
  'fwNetIfRemoteIp' => '1.3.6.1.4.1.2620.1.1.27.1.7',
  'fwNetIfTopology' => '1.3.6.1.4.1.2620.1.1.27.1.8',
  'fwNetIfProxyName' => '1.3.6.1.4.1.2620.1.1.27.1.9',
  'fwNetIfSlaves' => '1.3.6.1.4.1.2620.1.1.27.1.10',
  'fwNetIfPorts' => '1.3.6.1.4.1.2620.1.1.27.1.11',
  'fwNetIfIPV6Addr' => '1.3.6.1.4.1.2620.1.1.27.1.12',
  'fwNetIfIPV6AddrLen' => '1.3.6.1.4.1.2620.1.1.27.1.13',
  'fwLSConn' => '1.3.6.1.4.1.2620.1.1.30',
  'fwLSConnOverall' => '1.3.6.1.4.1.2620.1.1.30.1',
  'fwLSConnOverallDesc' => '1.3.6.1.4.1.2620.1.1.30.2',
  'fwLSConnTable' => '1.3.6.1.4.1.2620.1.1.30.3',
  'fwLSConnEntry' => '1.3.6.1.4.1.2620.1.1.30.3.1',
  'fwLSConnIndex' => '1.3.6.1.4.1.2620.1.1.30.3.1.1',
  'fwLSConnName' => '1.3.6.1.4.1.2620.1.1.30.3.1.2',
  'fwLSConnState' => '1.3.6.1.4.1.2620.1.1.30.3.1.3',
  'fwLSConnStateDesc' => '1.3.6.1.4.1.2620.1.1.30.3.1.4',
  'fwLSConnSendRate' => '1.3.6.1.4.1.2620.1.1.30.3.1.5',
  'fwLocalLoggingDesc' => '1.3.6.1.4.1.2620.1.1.30.4',
  'fwLocalLoggingStat' => '1.3.6.1.4.1.2620.1.1.30.5',
  'fwLocalLoggingWriteRate' => '1.3.6.1.4.1.2620.1.1.30.6',
  'fwLoggingHandlingRate' => '1.3.6.1.4.1.2620.1.1.30.7',
  'vpn' => '1.3.6.1.4.1.2620.1.2',
  'cpvProdName' => '1.3.6.1.4.1.2620.1.2.1',
  'cpvVerMajor' => '1.3.6.1.4.1.2620.1.2.2',
  'cpvVerMinor' => '1.3.6.1.4.1.2620.1.2.3',
  'cpvGeneral' => '1.3.6.1.4.1.2620.1.2.4',
  'cpvStatistics' => '1.3.6.1.4.1.2620.1.2.4.1',
  'cpvEncPackets' => '1.3.6.1.4.1.2620.1.2.4.1.1',
  'cpvDecPackets' => '1.3.6.1.4.1.2620.1.2.4.1.2',
  'cpvErrors' => '1.3.6.1.4.1.2620.1.2.4.2',
  'cpvErrOut' => '1.3.6.1.4.1.2620.1.2.4.2.1',
  'cpvErrIn' => '1.3.6.1.4.1.2620.1.2.4.2.2',
  'cpvErrIke' => '1.3.6.1.4.1.2620.1.2.4.2.3',
  'cpvErrPolicy' => '1.3.6.1.4.1.2620.1.2.4.2.4',
  'cpvIpsec' => '1.3.6.1.4.1.2620.1.2.5',
  'cpvSaStatistics' => '1.3.6.1.4.1.2620.1.2.5.2',
  'cpvCurrEspSAsIn' => '1.3.6.1.4.1.2620.1.2.5.2.1',
  'cpvTotalEspSAsIn' => '1.3.6.1.4.1.2620.1.2.5.2.2',
  'cpvCurrEspSAsOut' => '1.3.6.1.4.1.2620.1.2.5.2.3',
  'cpvTotalEspSAsOut' => '1.3.6.1.4.1.2620.1.2.5.2.4',
  'cpvCurrAhSAsIn' => '1.3.6.1.4.1.2620.1.2.5.2.5',
  'cpvTotalAhSAsIn' => '1.3.6.1.4.1.2620.1.2.5.2.6',
  'cpvCurrAhSAsOut' => '1.3.6.1.4.1.2620.1.2.5.2.7',
  'cpvTotalAhSAsOut' => '1.3.6.1.4.1.2620.1.2.5.2.8',
  'cpvMaxConncurEspSAsIn' => '1.3.6.1.4.1.2620.1.2.5.2.9',
  'cpvMaxConncurEspSAsOut' => '1.3.6.1.4.1.2620.1.2.5.2.10',
  'cpvMaxConncurAhSAsIn' => '1.3.6.1.4.1.2620.1.2.5.2.11',
  'cpvMaxConncurAhSAsOut' => '1.3.6.1.4.1.2620.1.2.5.2.12',
  'cpvSaErrors' => '1.3.6.1.4.1.2620.1.2.5.3',
  'cpvSaDecrErr' => '1.3.6.1.4.1.2620.1.2.5.3.1',
  'cpvSaAuthErr' => '1.3.6.1.4.1.2620.1.2.5.3.2',
  'cpvSaReplayErr' => '1.3.6.1.4.1.2620.1.2.5.3.3',
  'cpvSaPolicyErr' => '1.3.6.1.4.1.2620.1.2.5.3.4',
  'cpvSaOtherErrIn' => '1.3.6.1.4.1.2620.1.2.5.3.5',
  'cpvSaOtherErrOut' => '1.3.6.1.4.1.2620.1.2.5.3.6',
  'cpvSaUnknownSpiErr' => '1.3.6.1.4.1.2620.1.2.5.3.7',
  'cpvIpsecStatistics' => '1.3.6.1.4.1.2620.1.2.5.4',
  'cpvIpsecUdpEspEncPkts' => '1.3.6.1.4.1.2620.1.2.5.4.1',
  'cpvIpsecUdpEspDecPkts' => '1.3.6.1.4.1.2620.1.2.5.4.2',
  'cpvIpsecAhEncPkts' => '1.3.6.1.4.1.2620.1.2.5.4.3',
  'cpvIpsecAhDecPkts' => '1.3.6.1.4.1.2620.1.2.5.4.4',
  'cpvIpsecEspEncPkts' => '1.3.6.1.4.1.2620.1.2.5.4.5',
  'cpvIpsecEspDecPkts' => '1.3.6.1.4.1.2620.1.2.5.4.6',
  'cpvIpsecDecomprBytesBefore' => '1.3.6.1.4.1.2620.1.2.5.4.7',
  'cpvIpsecDecomprBytesAfter' => '1.3.6.1.4.1.2620.1.2.5.4.8',
  'cpvIpsecDecomprOverhead' => '1.3.6.1.4.1.2620.1.2.5.4.9',
  'cpvIpsecDecomprPkts' => '1.3.6.1.4.1.2620.1.2.5.4.10',
  'cpvIpsecDecomprErr' => '1.3.6.1.4.1.2620.1.2.5.4.11',
  'cpvIpsecComprBytesBefore' => '1.3.6.1.4.1.2620.1.2.5.4.12',
  'cpvIpsecComprBytesAfter' => '1.3.6.1.4.1.2620.1.2.5.4.13',
  'cpvIpsecComprOverhead' => '1.3.6.1.4.1.2620.1.2.5.4.14',
  'cpvIpsecNonCompressibleBytes' => '1.3.6.1.4.1.2620.1.2.5.4.15',
  'cpvIpsecCompressiblePkts' => '1.3.6.1.4.1.2620.1.2.5.4.16',
  'cpvIpsecNonCompressiblePkts' => '1.3.6.1.4.1.2620.1.2.5.4.17',
  'cpvIpsecComprErrors' => '1.3.6.1.4.1.2620.1.2.5.4.18',
  'cpvIpsecEspEncBytes' => '1.3.6.1.4.1.2620.1.2.5.4.19',
  'cpvIpsecEspDecBytes' => '1.3.6.1.4.1.2620.1.2.5.4.20',
  'cpvFwz' => '1.3.6.1.4.1.2620.1.2.6',
  'cpvFwzStatistics' => '1.3.6.1.4.1.2620.1.2.6.1',
  'cpvFwzEncapsEncPkts' => '1.3.6.1.4.1.2620.1.2.6.1.1',
  'cpvFwzEncapsDecPkts' => '1.3.6.1.4.1.2620.1.2.6.1.2',
  'cpvFwzEncPkts' => '1.3.6.1.4.1.2620.1.2.6.1.3',
  'cpvFwzDecPkts' => '1.3.6.1.4.1.2620.1.2.6.1.4',
  'cpvFwzErrors' => '1.3.6.1.4.1.2620.1.2.6.2',
  'cpvFwzEncapsEncErrs' => '1.3.6.1.4.1.2620.1.2.6.2.1',
  'cpvFwzEncapsDecErrs' => '1.3.6.1.4.1.2620.1.2.6.2.2',
  'cpvFwzEncErrs' => '1.3.6.1.4.1.2620.1.2.6.2.3',
  'cpvFwzDecErrs' => '1.3.6.1.4.1.2620.1.2.6.2.4',
  'cpvAccelerator' => '1.3.6.1.4.1.2620.1.2.8',
  'cpvHwAccelGeneral' => '1.3.6.1.4.1.2620.1.2.8.1',
  'cpvHwAccelVendor' => '1.3.6.1.4.1.2620.1.2.8.1.1',
  'cpvHwAccelStatus' => '1.3.6.1.4.1.2620.1.2.8.1.2',
  'cpvHwAccelDriverMajorVer' => '1.3.6.1.4.1.2620.1.2.8.1.3',
  'cpvHwAccelDriverMinorVer' => '1.3.6.1.4.1.2620.1.2.8.1.4',
  'cpvHwAccelStatistics' => '1.3.6.1.4.1.2620.1.2.8.2',
  'cpvHwAccelEspEncPkts' => '1.3.6.1.4.1.2620.1.2.8.2.1',
  'cpvHwAccelEspDecPkts' => '1.3.6.1.4.1.2620.1.2.8.2.2',
  'cpvHwAccelEspEncBytes' => '1.3.6.1.4.1.2620.1.2.8.2.3',
  'cpvHwAccelEspDecBytes' => '1.3.6.1.4.1.2620.1.2.8.2.4',
  'cpvHwAccelAhEncPkts' => '1.3.6.1.4.1.2620.1.2.8.2.5',
  'cpvHwAccelAhDecPkts' => '1.3.6.1.4.1.2620.1.2.8.2.6',
  'cpvHwAccelAhEncBytes' => '1.3.6.1.4.1.2620.1.2.8.2.7',
  'cpvHwAccelAhDecBytes' => '1.3.6.1.4.1.2620.1.2.8.2.8',
  'cpvIKE' => '1.3.6.1.4.1.2620.1.2.9',
  'cpvIKEglobals' => '1.3.6.1.4.1.2620.1.2.9.1',
  'cpvIKECurrSAs' => '1.3.6.1.4.1.2620.1.2.9.1.1',
  'cpvIKECurrInitSAs' => '1.3.6.1.4.1.2620.1.2.9.1.2',
  'cpvIKECurrRespSAs' => '1.3.6.1.4.1.2620.1.2.9.1.3',
  'cpvIKETotalSAs' => '1.3.6.1.4.1.2620.1.2.9.1.4',
  'cpvIKETotalInitSAs' => '1.3.6.1.4.1.2620.1.2.9.1.5',
  'cpvIKETotalRespSAs' => '1.3.6.1.4.1.2620.1.2.9.1.6',
  'cpvIKETotalSAsAttempts' => '1.3.6.1.4.1.2620.1.2.9.1.7',
  'cpvIKETotalSAsInitAttempts' => '1.3.6.1.4.1.2620.1.2.9.1.8',
  'cpvIKETotalSAsRespAttempts' => '1.3.6.1.4.1.2620.1.2.9.1.9',
  'cpvIKEMaxConncurSAs' => '1.3.6.1.4.1.2620.1.2.9.1.10',
  'cpvIKEMaxConncurInitSAs' => '1.3.6.1.4.1.2620.1.2.9.1.11',
  'cpvIKEMaxConncurRespSAs' => '1.3.6.1.4.1.2620.1.2.9.1.12',
  'cpvIKEerrors' => '1.3.6.1.4.1.2620.1.2.9.2',
  'cpvIKETotalFailuresInit' => '1.3.6.1.4.1.2620.1.2.9.2.1',
  'cpvIKENoResp' => '1.3.6.1.4.1.2620.1.2.9.2.2',
  'cpvIKETotalFailuresResp' => '1.3.6.1.4.1.2620.1.2.9.2.3',
  'cpvIPsec' => '1.3.6.1.4.1.2620.1.2.10',
  'cpvIPsecNIC' => '1.3.6.1.4.1.2620.1.2.10.1',
  'cpvIPsecNICsNum' => '1.3.6.1.4.1.2620.1.2.10.1.1',
  'cpvIPsecNICTotalDownLoadedSAs' => '1.3.6.1.4.1.2620.1.2.10.1.2',
  'cpvIPsecNICCurrDownLoadedSAs' => '1.3.6.1.4.1.2620.1.2.10.1.3',
  'cpvIPsecNICDecrBytes' => '1.3.6.1.4.1.2620.1.2.10.1.4',
  'cpvIPsecNICEncrBytes' => '1.3.6.1.4.1.2620.1.2.10.1.5',
  'cpvIPsecNICDecrPackets' => '1.3.6.1.4.1.2620.1.2.10.1.6',
  'cpvIPsecNICEncrPackets' => '1.3.6.1.4.1.2620.1.2.10.1.7',
  'fg' => '1.3.6.1.4.1.2620.1.3',
  'fgProdName' => '1.3.6.1.4.1.2620.1.3.1',
  'fgVerMajor' => '1.3.6.1.4.1.2620.1.3.2',
  'fgVerMinor' => '1.3.6.1.4.1.2620.1.3.3',
  'fgVersionString' => '1.3.6.1.4.1.2620.1.3.4',
  'fgModuleKernelBuild' => '1.3.6.1.4.1.2620.1.3.5',
  'fgStrPolicyName' => '1.3.6.1.4.1.2620.1.3.6',
  'fgInstallTime' => '1.3.6.1.4.1.2620.1.3.7',
  'fgNumInterfaces' => '1.3.6.1.4.1.2620.1.3.8',
  'fgIfTable' => '1.3.6.1.4.1.2620.1.3.9',
  'fgIfEntry' => '1.3.6.1.4.1.2620.1.3.9.1',
  'fgIfIndex' => '1.3.6.1.4.1.2620.1.3.9.1.1',
  'fgIfName' => '1.3.6.1.4.1.2620.1.3.9.1.2',
  'fgPolicyName' => '1.3.6.1.4.1.2620.1.3.9.1.3',
  'fgRateLimitIn' => '1.3.6.1.4.1.2620.1.3.9.1.4',
  'fgRateLimitOut' => '1.3.6.1.4.1.2620.1.3.9.1.5',
  'fgAvrRateIn' => '1.3.6.1.4.1.2620.1.3.9.1.6',
  'fgAvrRateOut' => '1.3.6.1.4.1.2620.1.3.9.1.7',
  'fgRetransPcktsIn' => '1.3.6.1.4.1.2620.1.3.9.1.8',
  'fgRetransPcktsOut' => '1.3.6.1.4.1.2620.1.3.9.1.9',
  'fgPendPcktsIn' => '1.3.6.1.4.1.2620.1.3.9.1.10',
  'fgPendPcktsOut' => '1.3.6.1.4.1.2620.1.3.9.1.11',
  'fgPendBytesIn' => '1.3.6.1.4.1.2620.1.3.9.1.12',
  'fgPendBytesOut' => '1.3.6.1.4.1.2620.1.3.9.1.13',
  'fgNumConnIn' => '1.3.6.1.4.1.2620.1.3.9.1.14',
  'fgNumConnOut' => '1.3.6.1.4.1.2620.1.3.9.1.15',
  'ha' => '1.3.6.1.4.1.2620.1.5',
  'haProdName' => '1.3.6.1.4.1.2620.1.5.1',
  'haInstalled' => '1.3.6.1.4.1.2620.1.5.2',
  'haVerMajor' => '1.3.6.1.4.1.2620.1.5.3',
  'haVerMinor' => '1.3.6.1.4.1.2620.1.5.4',
  'haStarted' => '1.3.6.1.4.1.2620.1.5.5',
  'haState' => '1.3.6.1.4.1.2620.1.5.6',
  'haBlockState' => '1.3.6.1.4.1.2620.1.5.7',
  'haIdentifier' => '1.3.6.1.4.1.2620.1.5.8',
  'haProtoVersion' => '1.3.6.1.4.1.2620.1.5.10',
  'haWorkMode' => '1.3.6.1.4.1.2620.1.5.11',
  'haIfTable' => '1.3.6.1.4.1.2620.1.5.12',
  'haIfEntry' => '1.3.6.1.4.1.2620.1.5.12.1',
  'haIfIndex' => '1.3.6.1.4.1.2620.1.5.12.1.1',
  'haIfName' => '1.3.6.1.4.1.2620.1.5.12.1.2',
  'haIP' => '1.3.6.1.4.1.2620.1.5.12.1.3',
  'haStatus' => '1.3.6.1.4.1.2620.1.5.12.1.4',
  'haVerified' => '1.3.6.1.4.1.2620.1.5.12.1.5',
  'haTrusted' => '1.3.6.1.4.1.2620.1.5.12.1.6',
  'haShared' => '1.3.6.1.4.1.2620.1.5.12.1.7',
  'haProblemTable' => '1.3.6.1.4.1.2620.1.5.13',
  'haProblemEntry' => '1.3.6.1.4.1.2620.1.5.13.1',
  'haProblemIndex' => '1.3.6.1.4.1.2620.1.5.13.1.1',
  'haProblemName' => '1.3.6.1.4.1.2620.1.5.13.1.2',
  'haProblemStatus' => '1.3.6.1.4.1.2620.1.5.13.1.3',
  'haProblemPriority' => '1.3.6.1.4.1.2620.1.5.13.1.4',
  'haProblemVerified' => '1.3.6.1.4.1.2620.1.5.13.1.5',
  'haProblemDescr' => '1.3.6.1.4.1.2620.1.5.13.1.6',
  'haVersionSting' => '1.3.6.1.4.1.2620.1.5.14',
  'haClusterIpTable' => '1.3.6.1.4.1.2620.1.5.15',
  'haClusterIpEntry' => '1.3.6.1.4.1.2620.1.5.15.1',
  'haClusterIpIndex' => '1.3.6.1.4.1.2620.1.5.15.1.1',
  'haClusterIpIfName' => '1.3.6.1.4.1.2620.1.5.15.1.2',
  'haClusterIpAddr' => '1.3.6.1.4.1.2620.1.5.15.1.3',
  'haClusterIpNetMask' => '1.3.6.1.4.1.2620.1.5.15.1.4',
  'haClusterIpMemberNet' => '1.3.6.1.4.1.2620.1.5.15.1.5',
  'haClusterIpMemberNetMask' => '1.3.6.1.4.1.2620.1.5.15.1.6',
  'haClusterSyncTable' => '1.3.6.1.4.1.2620.1.5.16',
  'haClusterSyncEntry' => '1.3.6.1.4.1.2620.1.5.16.1',
  'haClusterSyncIndex' => '1.3.6.1.4.1.2620.1.5.16.1.1',
  'haClusterSyncName' => '1.3.6.1.4.1.2620.1.5.16.1.2',
  'haClusterSyncAddr' => '1.3.6.1.4.1.2620.1.5.16.1.3',
  'haClusterSyncNetMask' => '1.3.6.1.4.1.2620.1.5.16.1.4',
  'haStatCode' => '1.3.6.1.4.1.2620.1.5.101',
  'haStatShort' => '1.3.6.1.4.1.2620.1.5.102',
  'haStatLong' => '1.3.6.1.4.1.2620.1.5.103',
  'haServicePack' => '1.3.6.1.4.1.2620.1.5.999',
  'svn' => '1.3.6.1.4.1.2620.1.6',
  'svnProdName' => '1.3.6.1.4.1.2620.1.6.1',
  'svnProdVerMajor' => '1.3.6.1.4.1.2620.1.6.2',
  'svnProdVerMinor' => '1.3.6.1.4.1.2620.1.6.3',
  'svnInfo' => '1.3.6.1.4.1.2620.1.6.4',
  'svnVersion' => '1.3.6.1.4.1.2620.1.6.4.1',
  'svnBuild' => '1.3.6.1.4.1.2620.1.6.4.2',
  'svnOSInfo' => '1.3.6.1.4.1.2620.1.6.5',
  'osName' => '1.3.6.1.4.1.2620.1.6.5.1',
  'osMajorVer' => '1.3.6.1.4.1.2620.1.6.5.2',
  'osMinorVer' => '1.3.6.1.4.1.2620.1.6.5.3',
  'osBuildNum' => '1.3.6.1.4.1.2620.1.6.5.4',
  'osSPmajor' => '1.3.6.1.4.1.2620.1.6.5.5',
  'osSPminor' => '1.3.6.1.4.1.2620.1.6.5.6',
  'osVersionLevel' => '1.3.6.1.4.1.2620.1.6.5.7',
  'routingTable' => '1.3.6.1.4.1.2620.1.6.6',
  'routingEntry' => '1.3.6.1.4.1.2620.1.6.6.1',
  'routingIndex' => '1.3.6.1.4.1.2620.1.6.6.1.1',
  'routingDest' => '1.3.6.1.4.1.2620.1.6.6.1.2',
  'routingMask' => '1.3.6.1.4.1.2620.1.6.6.1.3',
  'routingGatweway' => '1.3.6.1.4.1.2620.1.6.6.1.4',
  'routingIntrfName' => '1.3.6.1.4.1.2620.1.6.6.1.5',
  'svnPerf' => '1.3.6.1.4.1.2620.1.6.7',
  'svnMem' => '1.3.6.1.4.1.2620.1.6.7.1',
  'memTotalVirtual' => '1.3.6.1.4.1.2620.1.6.7.1.1',
  'memActiveVirtual' => '1.3.6.1.4.1.2620.1.6.7.1.2',
  'memTotalReal' => '1.3.6.1.4.1.2620.1.6.7.1.3',
  'memActiveReal' => '1.3.6.1.4.1.2620.1.6.7.1.4',
  'memFreeReal' => '1.3.6.1.4.1.2620.1.6.7.1.5',
  'memSwapsSec' => '1.3.6.1.4.1.2620.1.6.7.1.6',
  'memDiskTransfers' => '1.3.6.1.4.1.2620.1.6.7.1.7',
  'svnProc' => '1.3.6.1.4.1.2620.1.6.7.2',
  'procUsrTime' => '1.3.6.1.4.1.2620.1.6.7.2.1',
  'procSysTime' => '1.3.6.1.4.1.2620.1.6.7.2.2',
  'procIdleTime' => '1.3.6.1.4.1.2620.1.6.7.2.3',
  'procUsage' => '1.3.6.1.4.1.2620.1.6.7.2.4',
  'procQueue' => '1.3.6.1.4.1.2620.1.6.7.2.5',
  'procInterrupts' => '1.3.6.1.4.1.2620.1.6.7.2.6',
  'procNum' => '1.3.6.1.4.1.2620.1.6.7.2.7',
  'svnDisk' => '1.3.6.1.4.1.2620.1.6.7.3',
  'diskTime' => '1.3.6.1.4.1.2620.1.6.7.3.1',
  'diskQueue' => '1.3.6.1.4.1.2620.1.6.7.3.2',
  'diskPercent' => '1.3.6.1.4.1.2620.1.6.7.3.3',
  'diskFreeTotal' => '1.3.6.1.4.1.2620.1.6.7.3.4',
  'diskFreeAvail' => '1.3.6.1.4.1.2620.1.6.7.3.5',
  'diskTotal' => '1.3.6.1.4.1.2620.1.6.7.3.6',
  'svnMem64' => '1.3.6.1.4.1.2620.1.6.7.4',
  'memTotalVirtual64' => '1.3.6.1.4.1.2620.1.6.7.4.1',
  'memActiveVirtual64' => '1.3.6.1.4.1.2620.1.6.7.4.2',
  'memTotalReal64' => '1.3.6.1.4.1.2620.1.6.7.4.3',
  'memActiveReal64' => '1.3.6.1.4.1.2620.1.6.7.4.4',
  'memFreeReal64' => '1.3.6.1.4.1.2620.1.6.7.4.5',
  'memSwapsSec64' => '1.3.6.1.4.1.2620.1.6.7.4.6',
  'memDiskTransfers64' => '1.3.6.1.4.1.2620.1.6.7.4.7',
  'multiProcTable' => '1.3.6.1.4.1.2620.1.6.7.5',
  'multiProcEntry' => '1.3.6.1.4.1.2620.1.6.7.5.1',
  'multiProcIndex' => '1.3.6.1.4.1.2620.1.6.7.5.1.1',
  'multiProcUserTime' => '1.3.6.1.4.1.2620.1.6.7.5.1.2',
  'multiProcSystemTime' => '1.3.6.1.4.1.2620.1.6.7.5.1.3',
  'multiProcIdleTime' => '1.3.6.1.4.1.2620.1.6.7.5.1.4',
  'multiProcUsage' => '1.3.6.1.4.1.2620.1.6.7.5.1.5',
  'multiProcRunQueue' => '1.3.6.1.4.1.2620.1.6.7.5.1.6',
  'multiProcInterrupts' => '1.3.6.1.4.1.2620.1.6.7.5.1.7',
  'multiDiskTable' => '1.3.6.1.4.1.2620.1.6.7.6',
  'multiDiskEntry' => '1.3.6.1.4.1.2620.1.6.7.6.1',
  'multiDiskIndex' => '1.3.6.1.4.1.2620.1.6.7.6.1.1',
  'multiDiskName' => '1.3.6.1.4.1.2620.1.6.7.6.1.2',
  'multiDiskSize' => '1.3.6.1.4.1.2620.1.6.7.6.1.3',
  'multiDiskUsed' => '1.3.6.1.4.1.2620.1.6.7.6.1.4',
  'multiDiskFreeTotalBytes' => '1.3.6.1.4.1.2620.1.6.7.6.1.5',
  'multiDiskFreeTotalPercent' => '1.3.6.1.4.1.2620.1.6.7.6.1.6',
  'multiDiskFreeAvailableBytes' => '1.3.6.1.4.1.2620.1.6.7.6.1.7',
  'multiDiskFreeAvailablePercent' => '1.3.6.1.4.1.2620.1.6.7.6.1.8',
  'raidInfo' => '1.3.6.1.4.1.2620.1.6.7.7',
  'raidVolumeTable' => '1.3.6.1.4.1.2620.1.6.7.7.1',
  'raidVolumeEntry' => '1.3.6.1.4.1.2620.1.6.7.7.1.1',
  'raidVolumeIndex' => '1.3.6.1.4.1.2620.1.6.7.7.1.1.1',
  'raidVolumeID' => '1.3.6.1.4.1.2620.1.6.7.7.1.1.2',
  'raidVolumeType' => '1.3.6.1.4.1.2620.1.6.7.7.1.1.3',
  'numOfDisksOnRaid' => '1.3.6.1.4.1.2620.1.6.7.7.1.1.4',
  'raidVolumeMaxLBA' => '1.3.6.1.4.1.2620.1.6.7.7.1.1.5',
  'raidVolumeState' => '1.3.6.1.4.1.2620.1.6.7.7.1.1.6',
  'raidVolumeStateDefinition' => {
    0 => 'optimal',
    1 => 'degraded',
    2 => 'failed',
  },
  'raidVolumeFlags' => '1.3.6.1.4.1.2620.1.6.7.7.1.1.7',
  'raidVolumeSize' => '1.3.6.1.4.1.2620.1.6.7.7.1.1.8',
  'raidDiskTable' => '1.3.6.1.4.1.2620.1.6.7.7.2',
  'raidDiskEntry' => '1.3.6.1.4.1.2620.1.6.7.7.2.1',
  'raidDiskIndex' => '1.3.6.1.4.1.2620.1.6.7.7.2.1.1',
  'raidDiskVolumeID' => '1.3.6.1.4.1.2620.1.6.7.7.2.1.2',
  'raidDiskID' => '1.3.6.1.4.1.2620.1.6.7.7.2.1.3',
  'raidDiskNumber' => '1.3.6.1.4.1.2620.1.6.7.7.2.1.4',
  'raidDiskVendor' => '1.3.6.1.4.1.2620.1.6.7.7.2.1.5',
  'raidDiskProductID' => '1.3.6.1.4.1.2620.1.6.7.7.2.1.6',
  'raidDiskRevision' => '1.3.6.1.4.1.2620.1.6.7.7.2.1.7',
  'raidDiskMaxLBA' => '1.3.6.1.4.1.2620.1.6.7.7.2.1.8',
  'raidDiskState' => '1.3.6.1.4.1.2620.1.6.7.7.2.1.9',
  'raidDiskStateDefinition' => {
    0 => 'online',
    1 => 'missing',
    2 => 'not_compatible',
    3 => 'disc_failed',
    4 => 'initializing',
    5 => 'offline_requested',
    6 => 'failed_requested',
    7 => 'unconfigured_good_spun_up',
    8 => 'unconfigured_good_spun_down',
    9 => 'unconfigured_bad',
    10 => 'hotspare',
    11 => 'drive_offline',
    12 => 'rebuild',
    13 => 'failed',
    15 => 'copyback',
    255 => 'rebuild',
  },
  'raidDiskFlags' => '1.3.6.1.4.1.2620.1.6.7.7.2.1.10',
  'raidDiskSyncState' => '1.3.6.1.4.1.2620.1.6.7.7.2.1.11',
  'raidDiskSize' => '1.3.6.1.4.1.2620.1.6.7.7.2.1.12',
  'sensorInfo' => '1.3.6.1.4.1.2620.1.6.7.8',
  'tempertureSensorTable' => '1.3.6.1.4.1.2620.1.6.7.8.1',
  'tempertureSensorEntry' => '1.3.6.1.4.1.2620.1.6.7.8.1.1',
  'tempertureSensorIndex' => '1.3.6.1.4.1.2620.1.6.7.8.1.1.1',
  'tempertureSensorName' => '1.3.6.1.4.1.2620.1.6.7.8.1.1.2',
  'tempertureSensorValue' => '1.3.6.1.4.1.2620.1.6.7.8.1.1.3',
  'tempertureSensorUnit' => '1.3.6.1.4.1.2620.1.6.7.8.1.1.4',
  'tempertureSensorType' => '1.3.6.1.4.1.2620.1.6.7.8.1.1.5',
  'tempertureSensorStatus' => '1.3.6.1.4.1.2620.1.6.7.8.1.1.6',
  'tempertureSensorStatusDefinition' => {
    0 => 'normal', # In normal range
    1 => 'abnormal', # Out of normal range
    2 => 'unknown', # Reading error
  },
  'fanSpeedSensorTable' => '1.3.6.1.4.1.2620.1.6.7.8.2',
  'fanSpeedSensorEntry' => '1.3.6.1.4.1.2620.1.6.7.8.2.1',
  'fanSpeedSensorIndex' => '1.3.6.1.4.1.2620.1.6.7.8.2.1.1',
  'fanSpeedSensorName' => '1.3.6.1.4.1.2620.1.6.7.8.2.1.2',
  'fanSpeedSensorValue' => '1.3.6.1.4.1.2620.1.6.7.8.2.1.3',
  'fanSpeedSensorUnit' => '1.3.6.1.4.1.2620.1.6.7.8.2.1.4',
  'fanSpeedSensorType' => '1.3.6.1.4.1.2620.1.6.7.8.2.1.5',
  'fanSpeedSensorStatus' => '1.3.6.1.4.1.2620.1.6.7.8.2.1.6',
  'fanSpeedSensorStatusDefinition' => {
    0 => 'normal',
    1 => 'abnormal',
    2 => 'unknown',
  },
  'voltageSensorTable' => '1.3.6.1.4.1.2620.1.6.7.8.3',
  'voltageSensorEntry' => '1.3.6.1.4.1.2620.1.6.7.8.3.1',
  'voltageSensorIndex' => '1.3.6.1.4.1.2620.1.6.7.8.3.1.1',
  'voltageSensorName' => '1.3.6.1.4.1.2620.1.6.7.8.3.1.2',
  'voltageSensorValue' => '1.3.6.1.4.1.2620.1.6.7.8.3.1.3',
  'voltageSensorUnit' => '1.3.6.1.4.1.2620.1.6.7.8.3.1.4',
  'voltageSensorType' => '1.3.6.1.4.1.2620.1.6.7.8.3.1.5',
  'voltageSensorStatus' => '1.3.6.1.4.1.2620.1.6.7.8.3.1.6',
  'voltageSensorStatusDefinition' => {
    0 => 'normal',
    1 => 'abnormal',
    2 => 'unknown',
  },
  'powerSupplyInfo' => '1.3.6.1.4.1.2620.1.6.7.9',
  'powerSupplyTable' => '1.3.6.1.4.1.2620.1.6.7.9.1',
  'powerSupplyEntry' => '1.3.6.1.4.1.2620.1.6.7.9.1.1',
  'powerSupplyIndex' => '1.3.6.1.4.1.2620.1.6.7.9.1.1.1',
  'powerSupplyStatus' => '1.3.6.1.4.1.2620.1.6.7.9.1.1.2',
  'svnSysTime' => '1.3.6.1.4.1.2620.1.6.8',
  'svnRoutingModify' => '1.3.6.1.4.1.2620.1.6.9',
  'svnRouteModDest' => '1.3.6.1.4.1.2620.1.6.9.2',
  'svnRouteModMask' => '1.3.6.1.4.1.2620.1.6.9.3',
  'svnRouteModGateway' => '1.3.6.1.4.1.2620.1.6.9.4',
  'svnRouteModIfIndex' => '1.3.6.1.4.1.2620.1.6.9.5',
  'svnRouteModIfName' => '1.3.6.1.4.1.2620.1.6.9.6',
  'svnRouteModAction' => '1.3.6.1.4.1.2620.1.6.9.10',
  'svnUTCTimeOffset' => '1.3.6.1.4.1.2620.1.6.10',
  'svnLogDaemon' => '1.3.6.1.4.1.2620.1.6.11',
  'svnLogDStat' => '1.3.6.1.4.1.2620.1.6.11.1',
  'svnSysStartTime' => '1.3.6.1.4.1.2620.1.6.12',
  'svnSysUniqId' => '1.3.6.1.4.1.2620.1.6.13',
  'svnWebUIPort' => '1.3.6.1.4.1.2620.1.6.15',
  'svnApplianceInfo' => '1.3.6.1.4.1.2620.1.6.16',
  'svnApplianceSerialNumber' => '1.3.6.1.4.1.2620.1.6.16.3',
  'svnApplianceProductName' => '1.3.6.1.4.1.2620.1.6.16.7',
  'svnApplianceManufacturer' => '1.3.6.1.4.1.2620.1.6.16.9',
  'svnApplianceSeriesString' => '1.3.6.1.4.1.2620.1.6.16.10',
  'svnLicensing' => '1.3.6.1.4.1.2620.1.6.18',
  'licensingTable' => '1.3.6.1.4.1.2620.1.6.18.1',
  'licensingEntry' => '1.3.6.1.4.1.2620.1.6.18.1.1',
  'licensingIndex' => '1.3.6.1.4.1.2620.1.6.18.1.1.1',
  'licensingID' => '1.3.6.1.4.1.2620.1.6.18.1.1.2',
  'licensingBladeName' => '1.3.6.1.4.1.2620.1.6.18.1.1.3',
  'licensingState' => '1.3.6.1.4.1.2620.1.6.18.1.1.4',
  'licensingExpirationDate' => '1.3.6.1.4.1.2620.1.6.18.1.1.5',
  'licensingImpact' => '1.3.6.1.4.1.2620.1.6.18.1.1.6',
  'licensingBladeActive' => '1.3.6.1.4.1.2620.1.6.18.1.1.7',
  'licensingTotalQuota' => '1.3.6.1.4.1.2620.1.6.18.1.1.8',
  'licensingUsedQuota' => '1.3.6.1.4.1.2620.1.6.18.1.1.9',
  'licensingAssetInfo' => '1.3.6.1.4.1.2620.1.6.18.2',
  'licensingAssetAccountId' => '1.3.6.1.4.1.2620.1.6.18.2.1',
  'licensingAssetPackageDescription' => '1.3.6.1.4.1.2620.1.6.18.2.2',
  'licensingAssetContainerCK' => '1.3.6.1.4.1.2620.1.6.18.2.3',
  'licensingAssetContainerSKU' => '1.3.6.1.4.1.2620.1.6.18.2.4',
  'licensingAssetSupportLevel' => '1.3.6.1.4.1.2620.1.6.18.2.5',
  'licensingAssetSupportExpiration' => '1.3.6.1.4.1.2620.1.6.18.2.6',
  'licensingAssetActivationStatus' => '1.3.6.1.4.1.2620.1.6.18.2.7',
  'svnConnectivity' => '1.3.6.1.4.1.2620.1.6.19',
  'svnUpdatesInfo' => '1.3.6.1.4.1.2620.1.6.20',
  'svnUpdatesInfoBuild' => '1.3.6.1.4.1.2620.1.6.20.1',
  'svnUpdatesInfoStatus' => '1.3.6.1.4.1.2620.1.6.20.2',
  'svnUpdatesInfoConnection' => '1.3.6.1.4.1.2620.1.6.20.3',
  'svnUpdatesInfoAvailablePackages' => '1.3.6.1.4.1.2620.1.6.20.4',
  'svnUpdatesInfoAvailableRecommended' => '1.3.6.1.4.1.2620.1.6.20.5',
  'svnUpdatesInfoAvailableHotfixes' => '1.3.6.1.4.1.2620.1.6.20.6',
  'updatesInstalledTable' => '1.3.6.1.4.1.2620.1.6.20.7',
  'updatesInstalledEntry' => '1.3.6.1.4.1.2620.1.6.20.7.1',
  'updatesInstalledIndex' => '1.3.6.1.4.1.2620.1.6.20.7.1.1',
  'updatesInstalledName' => '1.3.6.1.4.1.2620.1.6.20.7.1.2',
  'updatesInstalledType' => '1.3.6.1.4.1.2620.1.6.20.7.1.3',
  'updatesRecommendedTable' => '1.3.6.1.4.1.2620.1.6.20.8',
  'updatesRecommendedEntry' => '1.3.6.1.4.1.2620.1.6.20.8.1',
  'updatesRecommendedIndex' => '1.3.6.1.4.1.2620.1.6.20.8.1.1',
  'updatesRecommendedName' => '1.3.6.1.4.1.2620.1.6.20.8.1.2',
  'updatesRecommendedType' => '1.3.6.1.4.1.2620.1.6.20.8.1.3',
  'updatesRecommendedStatus' => '1.3.6.1.4.1.2620.1.6.20.8.1.4',
  'svnNetStat' => '1.3.6.1.4.1.2620.1.6.50',
  'svnNetIfTable' => '1.3.6.1.4.1.2620.1.6.50.1',
  'svnNetIfTableEntry' => '1.3.6.1.4.1.2620.1.6.50.1.1',
  'svnNetIfIndex' => '1.3.6.1.4.1.2620.1.6.50.1.1.1',
  'svnNetIfVsid' => '1.3.6.1.4.1.2620.1.6.50.1.1.2',
  'svnNetIfName' => '1.3.6.1.4.1.2620.1.6.50.1.1.3',
  'svnNetIfAddress' => '1.3.6.1.4.1.2620.1.6.50.1.1.4',
  'svnNetIfMask' => '1.3.6.1.4.1.2620.1.6.50.1.1.5',
  'svnNetIfMTU' => '1.3.6.1.4.1.2620.1.6.50.1.1.6',
  'svnNetIfState' => '1.3.6.1.4.1.2620.1.6.50.1.1.7',
  'svnNetIfMAC' => '1.3.6.1.4.1.2620.1.6.50.1.1.8',
  'svnNetIfDescription' => '1.3.6.1.4.1.2620.1.6.50.1.1.9',
  'svnNetIfOperState' => '1.3.6.1.4.1.2620.1.6.50.1.1.10',
  'vsRoutingTable' => '1.3.6.1.4.1.2620.1.6.51',
  'vsRoutingEntry' => '1.3.6.1.4.1.2620.1.6.51.1',
  'vsRoutingIndex' => '1.3.6.1.4.1.2620.1.6.51.1.1',
  'vsRoutingDest' => '1.3.6.1.4.1.2620.1.6.51.1.2',
  'vsRoutingMask' => '1.3.6.1.4.1.2620.1.6.51.1.3',
  'vsRoutingGateway' => '1.3.6.1.4.1.2620.1.6.51.1.4',
  'vsRoutingIntrfName' => '1.3.6.1.4.1.2620.1.6.51.1.5',
  'vsRoutingVsId' => '1.3.6.1.4.1.2620.1.6.51.1.6',
  'svnStatCode' => '1.3.6.1.4.1.2620.1.6.101',
  'svnStatShortDescr' => '1.3.6.1.4.1.2620.1.6.102',
  'svnStatLongDescr' => '1.3.6.1.4.1.2620.1.6.103',
  'svnPlatformInfo' => '1.3.6.1.4.1.2620.1.6.123',
  'supportedPlatforms' => '1.3.6.1.4.1.2620.1.6.123.1',
  'checkPointUTM-1450' => '1.3.6.1.4.1.2620.1.6.123.1.1',
  'checkPointUTM-11050' => '1.3.6.1.4.1.2620.1.6.123.1.2',
  'checkPointUTM-12050' => '1.3.6.1.4.1.2620.1.6.123.1.3',
  'checkPointUTM-1130' => '1.3.6.1.4.1.2620.1.6.123.1.4',
  'checkPointUTM-1270' => '1.3.6.1.4.1.2620.1.6.123.1.5',
  'checkPointUTM-1570' => '1.3.6.1.4.1.2620.1.6.123.1.6',
  'checkPointUTM-11070' => '1.3.6.1.4.1.2620.1.6.123.1.7',
  'checkPointUTM-12070' => '1.3.6.1.4.1.2620.1.6.123.1.8',
  'checkPointUTM-13070' => '1.3.6.1.4.1.2620.1.6.123.1.9',
  'checkPointPower-15070' => '1.3.6.1.4.1.2620.1.6.123.1.10',
  'checkPointPower-19070' => '1.3.6.1.4.1.2620.1.6.123.1.11',
  'checkPointPower-111000' => '1.3.6.1.4.1.2620.1.6.123.1.12',
  'checkPointSmart-15' => '1.3.6.1.4.1.2620.1.6.123.1.13',
  'checkPointSmart-125' => '1.3.6.1.4.1.2620.1.6.123.1.14',
  'checkPointSmart-150' => '1.3.6.1.4.1.2620.1.6.123.1.15',
  'checkPointSmart-1150' => '1.3.6.1.4.1.2620.1.6.123.1.16',
  'checkPointIP150' => '1.3.6.1.4.1.2620.1.6.123.1.17',
  'checkPointIP280' => '1.3.6.1.4.1.2620.1.6.123.1.18',
  'checkPointIP290' => '1.3.6.1.4.1.2620.1.6.123.1.19',
  'checkPointIP390' => '1.3.6.1.4.1.2620.1.6.123.1.20',
  'checkPointIP560' => '1.3.6.1.4.1.2620.1.6.123.1.21',
  'checkPointIP690' => '1.3.6.1.4.1.2620.1.6.123.1.22',
  'checkPointIP1280' => '1.3.6.1.4.1.2620.1.6.123.1.23',
  'checkPointIP2450' => '1.3.6.1.4.1.2620.1.6.123.1.24',
  'checkPointUNIVERGEUnifiedWall1000' => '1.3.6.1.4.1.2620.1.6.123.1.25',
  'checkPointUNIVERGEUnifiedWall2000' => '1.3.6.1.4.1.2620.1.6.123.1.26',
  'checkPointUNIVERGEUnifiedWall4000' => '1.3.6.1.4.1.2620.1.6.123.1.27',
  'checkPointUNIVERGEUnifiedWall100' => '1.3.6.1.4.1.2620.1.6.123.1.28',
  'checkPointDLP-19571' => '1.3.6.1.4.1.2620.1.6.123.1.29',
  'checkPointDLP-12571' => '1.3.6.1.4.1.2620.1.6.123.1.30',
  'checkPointIPS-12076' => '1.3.6.1.4.1.2620.1.6.123.1.31',
  'checkPointIPS-15076' => '1.3.6.1.4.1.2620.1.6.123.1.32',
  'checkPointIPS-19076' => '1.3.6.1.4.1.2620.1.6.123.1.33',
  'checkPoint2200' => '1.3.6.1.4.1.2620.1.6.123.1.34',
  'checkPoint4200' => '1.3.6.1.4.1.2620.1.6.123.1.35',
  'checkPoint4400' => '1.3.6.1.4.1.2620.1.6.123.1.36',
  'checkPoint4600' => '1.3.6.1.4.1.2620.1.6.123.1.37',
  'checkPoint4800' => '1.3.6.1.4.1.2620.1.6.123.1.38',
  'checkPointTE250' => '1.3.6.1.4.1.2620.1.6.123.1.39',
  'checkPoint12200' => '1.3.6.1.4.1.2620.1.6.123.1.40',
  'checkPoint12400' => '1.3.6.1.4.1.2620.1.6.123.1.41',
  'checkPoint12600' => '1.3.6.1.4.1.2620.1.6.123.1.42',
  'checkPointTE1000' => '1.3.6.1.4.1.2620.1.6.123.1.43',
  'checkPoint13500' => '1.3.6.1.4.1.2620.1.6.123.1.44',
  'checkPoint21400' => '1.3.6.1.4.1.2620.1.6.123.1.45',
  'checkPoint21600' => '1.3.6.1.4.1.2620.1.6.123.1.46',
  'checkPoint21700' => '1.3.6.1.4.1.2620.1.6.123.1.47',
  'checkPointVMware' => '1.3.6.1.4.1.2620.1.6.123.1.48',
  'checkPointOpenServer' => '1.3.6.1.4.1.2620.1.6.123.1.49',
  'checkPointSmart-1205' => '1.3.6.1.4.1.2620.1.6.123.1.50',
  'checkPointSmart-1210' => '1.3.6.1.4.1.2620.1.6.123.1.51',
  'checkPointSmart-1225' => '1.3.6.1.4.1.2620.1.6.123.1.52',
  'checkPointSmart-13050' => '1.3.6.1.4.1.2620.1.6.123.1.53',
  'checkPointSmart-13150' => '1.3.6.1.4.1.2620.1.6.123.1.54',
  'checkPoint13800' => '1.3.6.1.4.1.2620.1.6.123.1.55',
  'checkPoint21800' => '1.3.6.1.4.1.2620.1.6.123.1.56',
  'svnServicePack' => '1.3.6.1.4.1.2620.1.6.999',
  'mngmt' => '1.3.6.1.4.1.2620.1.7',
  'mgProdName' => '1.3.6.1.4.1.2620.1.7.1',
  'mgVerMajor' => '1.3.6.1.4.1.2620.1.7.2',
  'mgVerMinor' => '1.3.6.1.4.1.2620.1.7.3',
  'mgBuildNumber' => '1.3.6.1.4.1.2620.1.7.4',
  'mgActiveStatus' => '1.3.6.1.4.1.2620.1.7.5',
  'mgFwmIsAlive' => '1.3.6.1.4.1.2620.1.7.6',
  'mgConnectedClientsTable' => '1.3.6.1.4.1.2620.1.7.7',
  'mgConnectedClientsEntry' => '1.3.6.1.4.1.2620.1.7.7.1',
  'mgIndex' => '1.3.6.1.4.1.2620.1.7.7.1.1',
  'mgClientName' => '1.3.6.1.4.1.2620.1.7.7.1.2',
  'mgClientHost' => '1.3.6.1.4.1.2620.1.7.7.1.3',
  'mgClientDbLock' => '1.3.6.1.4.1.2620.1.7.7.1.4',
  'mgApplicationType' => '1.3.6.1.4.1.2620.1.7.7.1.5',
  'mgLogServerInfo' => '1.3.6.1.4.1.2620.1.7.14',
  'mgLSLogReceiveRate' => '1.3.6.1.4.1.2620.1.7.14.1',
  'mgLSLogReceiveRatePeak' => '1.3.6.1.4.1.2620.1.7.14.2',
  'mgLSLogReceiveRate10Min' => '1.3.6.1.4.1.2620.1.7.14.3',
  'mgConnectedGatewaysTable' => '1.3.6.1.4.1.2620.1.7.14.4',
  'mgConnectedGatewaysEntry' => '1.3.6.1.4.1.2620.1.7.14.4.1',
  'mglsGWIndex' => '1.3.6.1.4.1.2620.1.7.14.4.1.1',
  'mglsGWIP' => '1.3.6.1.4.1.2620.1.7.14.4.1.2',
  'mglsGWState' => '1.3.6.1.4.1.2620.1.7.14.4.1.3',
  'mglsGWLastLoginTime' => '1.3.6.1.4.1.2620.1.7.14.4.1.4',
  'mglsGWLogReceiveRate' => '1.3.6.1.4.1.2620.1.7.14.4.1.5',
  'mgIndexerInfo' => '1.3.6.1.4.1.2620.1.7.14.5',
  'mgIndexerInfoTotalReadLogs' => '1.3.6.1.4.1.2620.1.7.14.5.1',
  'mgIndexerInfoTotalUpdatesAndLogsIndexed' => '1.3.6.1.4.1.2620.1.7.14.5.2',
  'mgIndexerInfoTotalReadLogsErrors' => '1.3.6.1.4.1.2620.1.7.14.5.3',
  'mgIndexerInfoTotalUpdatesAndLogsIndexedErrors' => '1.3.6.1.4.1.2620.1.7.14.5.4',
  'mgIndexerInfoUpdatesAndLogsIndexedRate' => '1.3.6.1.4.1.2620.1.7.14.5.5',
  'mgIndexerInfoReadLogsRate' => '1.3.6.1.4.1.2620.1.7.14.5.6',
  'mgIndexerInfoUpdatesAndLogsIndexedRate10min' => '1.3.6.1.4.1.2620.1.7.14.5.7',
  'mgIndexerInfoReadLogsRate10min' => '1.3.6.1.4.1.2620.1.7.14.5.8',
  'mgIndexerInfoUpdatesAndLogsIndexedRate60min' => '1.3.6.1.4.1.2620.1.7.14.5.9',
  'mgIndexerInfoReadLogsRate60min' => '1.3.6.1.4.1.2620.1.7.14.5.10',
  'mgIndexerInfoUpdatesAndLogsIndexedRatePeak' => '1.3.6.1.4.1.2620.1.7.14.5.11',
  'mgIndexerInfoReadLogsRatePeak' => '1.3.6.1.4.1.2620.1.7.14.5.12',
  'mgIndexerInfoReadLogsDelay' => '1.3.6.1.4.1.2620.1.7.14.5.13',
  'mgLSLogReceiveRate1Hour' => '1.3.6.1.4.1.2620.1.7.14.6',
  'mgStatCode' => '1.3.6.1.4.1.2620.1.7.101',
  'mgStatShortDescr' => '1.3.6.1.4.1.2620.1.7.102',
  'mgStatLongDescr' => '1.3.6.1.4.1.2620.1.7.103',
  'wam' => '1.3.6.1.4.1.2620.1.8',
  'wamProdName' => '1.3.6.1.4.1.2620.1.8.1',
  'wamVerMajor' => '1.3.6.1.4.1.2620.1.8.2',
  'wamVerMinor' => '1.3.6.1.4.1.2620.1.8.3',
  'wamState' => '1.3.6.1.4.1.2620.1.8.4',
  'wamName' => '1.3.6.1.4.1.2620.1.8.5',
  'wamPluginPerformance' => '1.3.6.1.4.1.2620.1.8.6',
  'wamAcceptReq' => '1.3.6.1.4.1.2620.1.8.6.1',
  'wamRejectReq' => '1.3.6.1.4.1.2620.1.8.6.2',
  'wamPolicy' => '1.3.6.1.4.1.2620.1.8.7',
  'wamPolicyName' => '1.3.6.1.4.1.2620.1.8.7.1',
  'wamPolicyUpdate' => '1.3.6.1.4.1.2620.1.8.7.2',
  'wamUagQueries' => '1.3.6.1.4.1.2620.1.8.8',
  'wamUagHost' => '1.3.6.1.4.1.2620.1.8.8.1',
  'wamUagIp' => '1.3.6.1.4.1.2620.1.8.8.2',
  'wamUagPort' => '1.3.6.1.4.1.2620.1.8.8.3',
  'wamUagNoQueries' => '1.3.6.1.4.1.2620.1.8.8.4',
  'wamUagLastQuery' => '1.3.6.1.4.1.2620.1.8.8.5',
  'wamGlobalPerformance' => '1.3.6.1.4.1.2620.1.8.9',
  'wamOpenSessions' => '1.3.6.1.4.1.2620.1.8.9.1',
  'wamLastSession' => '1.3.6.1.4.1.2620.1.8.9.2',
  'wamStatCode' => '1.3.6.1.4.1.2620.1.8.101',
  'wamStatShortDescr' => '1.3.6.1.4.1.2620.1.8.102',
  'wamStatLongDescr' => '1.3.6.1.4.1.2620.1.8.103',
  'dtps' => '1.3.6.1.4.1.2620.1.9',
  'dtpsProdName' => '1.3.6.1.4.1.2620.1.9.1',
  'dtpsVerMajor' => '1.3.6.1.4.1.2620.1.9.2',
  'dtpsVerMinor' => '1.3.6.1.4.1.2620.1.9.3',
  'dtpsLicensedUsers' => '1.3.6.1.4.1.2620.1.9.4',
  'dtpsConnectedUsers' => '1.3.6.1.4.1.2620.1.9.5',
  'dtpsStatCode' => '1.3.6.1.4.1.2620.1.9.101',
  'dtpsStatShortDescr' => '1.3.6.1.4.1.2620.1.9.102',
  'dtpsStatLongDescr' => '1.3.6.1.4.1.2620.1.9.103',
  'ls' => '1.3.6.1.4.1.2620.1.11',
  'lsProdName' => '1.3.6.1.4.1.2620.1.11.1',
  'lsVerMajor' => '1.3.6.1.4.1.2620.1.11.2',
  'lsVerMinor' => '1.3.6.1.4.1.2620.1.11.3',
  'lsBuildNumber' => '1.3.6.1.4.1.2620.1.11.4',
  'lsFwmIsAlive' => '1.3.6.1.4.1.2620.1.11.5',
  'lsConnectedClientsTable' => '1.3.6.1.4.1.2620.1.11.7',
  'lsConnectedClientsEntry' => '1.3.6.1.4.1.2620.1.11.7.1',
  'lsIndex' => '1.3.6.1.4.1.2620.1.11.7.1.1',
  'lsClientName' => '1.3.6.1.4.1.2620.1.11.7.1.2',
  'lsClientHost' => '1.3.6.1.4.1.2620.1.11.7.1.3',
  'lsClientDbLock' => '1.3.6.1.4.1.2620.1.11.7.1.4',
  'lsApplicationType' => '1.3.6.1.4.1.2620.1.11.7.1.5',
  'lsLoggingInfo' => '1.3.6.1.4.1.2620.1.11.14',
  'lsLogReceiveRate' => '1.3.6.1.4.1.2620.1.11.14.1',
  'lsLogReceiveRatePeak' => '1.3.6.1.4.1.2620.1.11.14.2',
  'lsLogReceiveRate10Min' => '1.3.6.1.4.1.2620.1.11.14.3',
  'lsConnectedGatewaysTable' => '1.3.6.1.4.1.2620.1.11.14.4',
  'lsConnectedGatewaysEntry' => '1.3.6.1.4.1.2620.1.11.14.4.1',
  'lsGWIndex' => '1.3.6.1.4.1.2620.1.11.14.4.1.1',
  'lsGWIP' => '1.3.6.1.4.1.2620.1.11.14.4.1.2',
  'lsGWState' => '1.3.6.1.4.1.2620.1.11.14.4.1.3',
  'lsGWLastLoginTime' => '1.3.6.1.4.1.2620.1.11.14.4.1.4',
  'lsGWLogReceiveRate' => '1.3.6.1.4.1.2620.1.11.14.4.1.5',
  'lsIndexerInfo' => '1.3.6.1.4.1.2620.1.11.14.5',
  'lsIndexerInfoTotalReadLogs' => '1.3.6.1.4.1.2620.1.11.14.5.1',
  'lsIndexerInfoTotalUpdatesAndLogsIndexed' => '1.3.6.1.4.1.2620.1.11.14.5.2',
  'lsIndexerInfoTotalReadLogsErrors' => '1.3.6.1.4.1.2620.1.11.14.5.3',
  'lsIndexerInfoTotalUpdatesAndLogsIndexedErrors' => '1.3.6.1.4.1.2620.1.11.14.5.4',
  'lsIndexerInfoUpdatesAndLogsIndexedRate' => '1.3.6.1.4.1.2620.1.11.14.5.5',
  'lsIndexerInfoReadLogsRate' => '1.3.6.1.4.1.2620.1.11.14.5.6',
  'lsIndexerInfoUpdatesAndLogsIndexedRatePeak' => '1.3.6.1.4.1.2620.1.11.14.5.7',
  'lsIndexerInfoReadLogsRatePeak' => '1.3.6.1.4.1.2620.1.11.14.5.8',
  'lsLogReceiveRate1Hour' => '1.3.6.1.4.1.2620.1.11.14.6',
  'lsStatCode' => '1.3.6.1.4.1.2620.1.11.101',
  'lsStatShortDescr' => '1.3.6.1.4.1.2620.1.11.102',
  'lsStatLongDescr' => '1.3.6.1.4.1.2620.1.11.103',
  'vsx' => '1.3.6.1.4.1.2620.1.16',
  'vsxVsSupported' => '1.3.6.1.4.1.2620.1.16.11',
  'vsxVsConfigured' => '1.3.6.1.4.1.2620.1.16.12',
  'vsxVsInstalled' => '1.3.6.1.4.1.2620.1.16.13',
  'vsxStatus' => '1.3.6.1.4.1.2620.1.16.22',
  'vsxStatusTable' => '1.3.6.1.4.1.2620.1.16.22.1',
  'vsxStatusEntry' => '1.3.6.1.4.1.2620.1.16.22.1.1',
  'vsxStatusVSId' => '1.3.6.1.4.1.2620.1.16.22.1.1.1',
  'vsxStatusVRId' => '1.3.6.1.4.1.2620.1.16.22.1.1.2',
  'vsxStatusVsName' => '1.3.6.1.4.1.2620.1.16.22.1.1.3',
  'vsxStatusVsType' => '1.3.6.1.4.1.2620.1.16.22.1.1.4',
  'vsxStatusMainIP' => '1.3.6.1.4.1.2620.1.16.22.1.1.5',
  'vsxStatusPolicyName' => '1.3.6.1.4.1.2620.1.16.22.1.1.6',
  'vsxStatusVsPolicyType' => '1.3.6.1.4.1.2620.1.16.22.1.1.7',
  'vsxStatusSicTrustState' => '1.3.6.1.4.1.2620.1.16.22.1.1.8',
  'vsxStatusHAState' => '1.3.6.1.4.1.2620.1.16.22.1.1.9',
  'vsxStatusVSWeight' => '1.3.6.1.4.1.2620.1.16.22.1.1.10',
  'vsxStatusCPUUsageTable' => '1.3.6.1.4.1.2620.1.16.22.2',
  'vsxStatusCPUUsageEntry' => '1.3.6.1.4.1.2620.1.16.22.2.1',
  'vsxStatusCPUUsage1sec' => '1.3.6.1.4.1.2620.1.16.22.2.1.1',
  'vsxStatusCPUUsage10sec' => '1.3.6.1.4.1.2620.1.16.22.2.1.2',
  'vsxStatusCPUUsage1min' => '1.3.6.1.4.1.2620.1.16.22.2.1.3',
  'vsxStatusCPUUsage1hr' => '1.3.6.1.4.1.2620.1.16.22.2.1.4',
  'vsxStatusCPUUsage24hr' => '1.3.6.1.4.1.2620.1.16.22.2.1.5',
  'vsxStatusCPUUsageVSId' => '1.3.6.1.4.1.2620.1.16.22.2.1.6',
  'vsxCounters' => '1.3.6.1.4.1.2620.1.16.23',
  'vsxCountersTable' => '1.3.6.1.4.1.2620.1.16.23.1',
  'vsxCountersEntry' => '1.3.6.1.4.1.2620.1.16.23.1.1',
  'vsxCountersVSId' => '1.3.6.1.4.1.2620.1.16.23.1.1.1',
  'vsxCountersConnNum' => '1.3.6.1.4.1.2620.1.16.23.1.1.2',
  'vsxCountersConnPeakNum' => '1.3.6.1.4.1.2620.1.16.23.1.1.3',
  'vsxCountersConnTableLimit' => '1.3.6.1.4.1.2620.1.16.23.1.1.4',
  'vsxCountersPackets' => '1.3.6.1.4.1.2620.1.16.23.1.1.5',
  'vsxCountersDroppedTotal' => '1.3.6.1.4.1.2620.1.16.23.1.1.6',
  'vsxCountersAcceptedTotal' => '1.3.6.1.4.1.2620.1.16.23.1.1.7',
  'vsxCountersRejectedTotal' => '1.3.6.1.4.1.2620.1.16.23.1.1.8',
  'vsxCountersBytesAcceptedTotal' => '1.3.6.1.4.1.2620.1.16.23.1.1.9',
  'vsxCountersBytesDroppedTotal' => '1.3.6.1.4.1.2620.1.16.23.1.1.10',
  'vsxCountersBytesRejectedTotal' => '1.3.6.1.4.1.2620.1.16.23.1.1.11',
  'vsxCountersLoggedTotal' => '1.3.6.1.4.1.2620.1.16.23.1.1.12',
  'vsxCountersIsDataValid' => '1.3.6.1.4.1.2620.1.16.23.1.1.13',
  'smartDefense' => '1.3.6.1.4.1.2620.1.17',
  'asmAttacks' => '1.3.6.1.4.1.2620.1.17.1',
  'asmLayer3' => '1.3.6.1.4.1.2620.1.17.1.1',
  'asmLayer4' => '1.3.6.1.4.1.2620.1.17.1.2',
  'asmTCP' => '1.3.6.1.4.1.2620.1.17.1.2.1',
  'asmSynatk' => '1.3.6.1.4.1.2620.1.17.1.2.1.1',
  'asmSynatkSynAckTimeout' => '1.3.6.1.4.1.2620.1.17.1.2.1.1.1',
  'asmSynatkSynAckReset' => '1.3.6.1.4.1.2620.1.17.1.2.1.1.2',
  'asmSynatkModeChange' => '1.3.6.1.4.1.2620.1.17.1.2.1.1.3',
  'asmSynatkCurrentMode' => '1.3.6.1.4.1.2620.1.17.1.2.1.1.4',
  'asmSynatkNumberofunAckedSyns' => '1.3.6.1.4.1.2620.1.17.1.2.1.1.5',
  'asmSmallPmtu' => '1.3.6.1.4.1.2620.1.17.1.2.1.2',
  'smallPMTUNumberOfAttacks' => '1.3.6.1.4.1.2620.1.17.1.2.1.2.1',
  'smallPMTUValueOfMinimalMTUsize' => '1.3.6.1.4.1.2620.1.17.1.2.1.2.2',
  'asmSeqval' => '1.3.6.1.4.1.2620.1.17.1.2.1.3',
  'sequenceVerifierInvalidAck' => '1.3.6.1.4.1.2620.1.17.1.2.1.3.1',
  'sequenceVerifierInvalidSequence' => '1.3.6.1.4.1.2620.1.17.1.2.1.3.2',
  'sequenceVerifierInvalidretransmit' => '1.3.6.1.4.1.2620.1.17.1.2.1.3.3',
  'asmUDP' => '1.3.6.1.4.1.2620.1.17.1.2.2',
  'asmScans' => '1.3.6.1.4.1.2620.1.17.1.2.3',
  'asmHostPortScan' => '1.3.6.1.4.1.2620.1.17.1.2.3.1',
  'numOfhostPortScan' => '1.3.6.1.4.1.2620.1.17.1.2.3.1.1',
  'asmIPSweep' => '1.3.6.1.4.1.2620.1.17.1.2.3.2',
  'numOfIpSweep' => '1.3.6.1.4.1.2620.1.17.1.2.3.2.1',
  'asmLayer5' => '1.3.6.1.4.1.2620.1.17.1.3',
  'asmHTTP' => '1.3.6.1.4.1.2620.1.17.1.3.1',
  'asmHttpWorms' => '1.3.6.1.4.1.2620.1.17.1.3.1.1',
  'httpWorms' => '1.3.6.1.4.1.2620.1.17.1.3.1.1.1',
  'asmHttpFormatViolatoin' => '1.3.6.1.4.1.2620.1.17.1.3.1.2',
  'httpURLLengthViolation' => '1.3.6.1.4.1.2620.1.17.1.3.1.2.1',
  'httpHeaderLengthViolations' => '1.3.6.1.4.1.2620.1.17.1.3.1.2.2',
  'httpMaxHeaderReached' => '1.3.6.1.4.1.2620.1.17.1.3.1.2.3',
  'asmHttpAsciiViolation' => '1.3.6.1.4.1.2620.1.17.1.3.1.3',
  'numOfHttpASCIIViolations' => '1.3.6.1.4.1.2620.1.17.1.3.1.3.1',
  'asmHttpP2PHeaderFilter' => '1.3.6.1.4.1.2620.1.17.1.3.1.4',
  'numOfHttpP2PHeaders' => '1.3.6.1.4.1.2620.1.17.1.3.1.4.1',
  'asmCIFS' => '1.3.6.1.4.1.2620.1.17.1.3.2',
  'asmCIFSWorms' => '1.3.6.1.4.1.2620.1.17.1.3.2.1',
  'numOfCIFSworms' => '1.3.6.1.4.1.2620.1.17.1.3.2.1.1',
  'asmCIFSNullSession' => '1.3.6.1.4.1.2620.1.17.1.3.2.2',
  'numOfCIFSNullSessions' => '1.3.6.1.4.1.2620.1.17.1.3.2.2.1',
  'asmCIFSBlockedPopUps' => '1.3.6.1.4.1.2620.1.17.1.3.2.3',
  'numOfCIFSBlockedPopUps' => '1.3.6.1.4.1.2620.1.17.1.3.2.3.1',
  'asmCIFSBlockedCommands' => '1.3.6.1.4.1.2620.1.17.1.3.2.4',
  'numOfCIFSBlockedCommands' => '1.3.6.1.4.1.2620.1.17.1.3.2.4.1',
  'asmCIFSPasswordLengthViolations' => '1.3.6.1.4.1.2620.1.17.1.3.2.5',
  'numOfCIFSPasswordLengthViolations' => '1.3.6.1.4.1.2620.1.17.1.3.2.5.1',
  'asmP2P' => '1.3.6.1.4.1.2620.1.17.1.3.3',
  'asmP2POtherConAttempts' => '1.3.6.1.4.1.2620.1.17.1.3.3.1',
  'numOfP2POtherConAttempts' => '1.3.6.1.4.1.2620.1.17.1.3.3.1.1',
  'asmP2PKazaaConAttempts' => '1.3.6.1.4.1.2620.1.17.1.3.3.2',
  'numOfP2PKazaaConAttempts' => '1.3.6.1.4.1.2620.1.17.1.3.3.2.1',
  'asmP2PeMuleConAttempts' => '1.3.6.1.4.1.2620.1.17.1.3.3.3',
  'numOfP2PeMuleConAttempts' => '1.3.6.1.4.1.2620.1.17.1.3.3.3.1',
  'asmP2PGnutellaConAttempts' => '1.3.6.1.4.1.2620.1.17.1.3.3.4',
  'numOfGnutellaConAttempts' => '1.3.6.1.4.1.2620.1.17.1.3.3.4.1',
  'asmP2PSkypeCon' => '1.3.6.1.4.1.2620.1.17.1.3.3.5',
  'numOfP2PSkypeCon' => '1.3.6.1.4.1.2620.1.17.1.3.3.5.1',
  'asmP2PBitTorrentCon' => '1.3.6.1.4.1.2620.1.17.1.3.3.6',
  'numOfBitTorrentCon' => '1.3.6.1.4.1.2620.1.17.1.3.3.6.1',
  'avi' => '1.3.6.1.4.1.2620.1.24',
  'aviEngines' => '1.3.6.1.4.1.2620.1.24.1',
  'aviEngineTable' => '1.3.6.1.4.1.2620.1.24.1.1',
  'aviEngineEntry' => '1.3.6.1.4.1.2620.1.24.1.1.1',
  'aviEngineIndex' => '1.3.6.1.4.1.2620.1.24.1.1.1.1',
  'aviEngineName' => '1.3.6.1.4.1.2620.1.24.1.1.1.2',
  'aviEngineVer' => '1.3.6.1.4.1.2620.1.24.1.1.1.3',
  'aviEngineDate' => '1.3.6.1.4.1.2620.1.24.1.1.1.4',
  'aviSignatureName' => '1.3.6.1.4.1.2620.1.24.1.1.1.5',
  'aviSignatureVer' => '1.3.6.1.4.1.2620.1.24.1.1.1.6',
  'aviSignatureDate' => '1.3.6.1.4.1.2620.1.24.1.1.1.7',
  'aviLastSigCheckTime' => '1.3.6.1.4.1.2620.1.24.1.1.1.8',
  'aviLastSigLocation' => '1.3.6.1.4.1.2620.1.24.1.1.1.9',
  'aviLastLicExp' => '1.3.6.1.4.1.2620.1.24.1.1.1.10',
  'aviTopViruses' => '1.3.6.1.4.1.2620.1.24.2',
  'aviTopVirusesTable' => '1.3.6.1.4.1.2620.1.24.2.1',
  'aviTopVirusesEntry' => '1.3.6.1.4.1.2620.1.24.2.1.1',
  'aviTopVirusesIndex' => '1.3.6.1.4.1.2620.1.24.2.1.1.1',
  'aviTopVirusesName' => '1.3.6.1.4.1.2620.1.24.2.1.1.2',
  'aviTopVirusesCnt' => '1.3.6.1.4.1.2620.1.24.2.1.1.3',
  'aviTopEverViruses' => '1.3.6.1.4.1.2620.1.24.3',
  'aviTopEverVirusesTable' => '1.3.6.1.4.1.2620.1.24.3.1',
  'aviTopEverVirusesEntry' => '1.3.6.1.4.1.2620.1.24.3.1.1',
  'aviTopEverVirusesIndex' => '1.3.6.1.4.1.2620.1.24.3.1.1.1',
  'aviTopEverVirusesName' => '1.3.6.1.4.1.2620.1.24.3.1.1.2',
  'aviTopEverVirusesCnt' => '1.3.6.1.4.1.2620.1.24.3.1.1.3',
  'aviServices' => '1.3.6.1.4.1.2620.1.24.4',
  'aviServicesHTTP' => '1.3.6.1.4.1.2620.1.24.4.1',
  'aviHTTPState' => '1.3.6.1.4.1.2620.1.24.4.1.1',
  'aviHTTPLastVirusName' => '1.3.6.1.4.1.2620.1.24.4.1.2',
  'aviHTTPLastVirusTime' => '1.3.6.1.4.1.2620.1.24.4.1.3',
  'aviHTTPTopVirusesTable' => '1.3.6.1.4.1.2620.1.24.4.1.4',
  'aviHTTPTopVirusesEntry' => '1.3.6.1.4.1.2620.1.24.4.1.4.1',
  'aviHTTPTopVirusesIndex' => '1.3.6.1.4.1.2620.1.24.4.1.4.1.1',
  'aviHTTPTopVirusesName' => '1.3.6.1.4.1.2620.1.24.4.1.4.1.2',
  'aviHTTPTopVirusesCnt' => '1.3.6.1.4.1.2620.1.24.4.1.4.1.3',
  'aviServicesFTP' => '1.3.6.1.4.1.2620.1.24.4.2',
  'aviFTPState' => '1.3.6.1.4.1.2620.1.24.4.2.1',
  'aviFTPLastVirusName' => '1.3.6.1.4.1.2620.1.24.4.2.2',
  'aviFTPLastVirusTime' => '1.3.6.1.4.1.2620.1.24.4.2.3',
  'aviFTPTopVirusesTable' => '1.3.6.1.4.1.2620.1.24.4.2.4',
  'aviFTPTopVirusesEntry' => '1.3.6.1.4.1.2620.1.24.4.2.4.1',
  'aviFTPTopVirusesIndex' => '1.3.6.1.4.1.2620.1.24.4.2.4.1.1',
  'aviFTPTopVirusesName' => '1.3.6.1.4.1.2620.1.24.4.2.4.1.2',
  'aviFTPTopVirusesCnt' => '1.3.6.1.4.1.2620.1.24.4.2.4.1.3',
  'aviServicesSMTP' => '1.3.6.1.4.1.2620.1.24.4.3',
  'aviSMTPState' => '1.3.6.1.4.1.2620.1.24.4.3.1',
  'aviSMTPLastVirusName' => '1.3.6.1.4.1.2620.1.24.4.3.2',
  'aviSMTPLastVirusTime' => '1.3.6.1.4.1.2620.1.24.4.3.3',
  'aviSMTPTopVirusesTable' => '1.3.6.1.4.1.2620.1.24.4.3.4',
  'aviSMTPTopVirusesEntry' => '1.3.6.1.4.1.2620.1.24.4.3.4.1',
  'aviSMTPTopVirusesIndex' => '1.3.6.1.4.1.2620.1.24.4.3.4.1.1',
  'aviSMTPTopVirusesName' => '1.3.6.1.4.1.2620.1.24.4.3.4.1.2',
  'aviSMTPTopVirusesCnt' => '1.3.6.1.4.1.2620.1.24.4.3.4.1.3',
  'aviServicesPOP3' => '1.3.6.1.4.1.2620.1.24.4.4',
  'aviPOP3State' => '1.3.6.1.4.1.2620.1.24.4.4.1',
  'aviPOP3LastVirusName' => '1.3.6.1.4.1.2620.1.24.4.4.2',
  'aviPOP3LastVirusTime' => '1.3.6.1.4.1.2620.1.24.4.4.3',
  'aviPOP3TopVirusesTable' => '1.3.6.1.4.1.2620.1.24.4.4.4',
  'aviPOP3TopVirusesEntry' => '1.3.6.1.4.1.2620.1.24.4.4.4.1',
  'aviPOP3TopVirusesIndex' => '1.3.6.1.4.1.2620.1.24.4.4.4.1.1',
  'aviPOP3TopVirusesName' => '1.3.6.1.4.1.2620.1.24.4.4.4.1.2',
  'aviPOP3TopVirusesCnt' => '1.3.6.1.4.1.2620.1.24.4.4.4.1.3',
  'aviStatCode' => '1.3.6.1.4.1.2620.1.24.101',
  'aviStatShortDescr' => '1.3.6.1.4.1.2620.1.24.102',
  'aviStatLongDescr' => '1.3.6.1.4.1.2620.1.24.103',
  'eventiaAnalyzer' => '1.3.6.1.4.1.2620.1.25',
  'cpsemd' => '1.3.6.1.4.1.2620.1.25.1',
  'cpsemdProcAlive' => '1.3.6.1.4.1.2620.1.25.1.1',
  'cpsemdNewEventsHandled' => '1.3.6.1.4.1.2620.1.25.1.2',
  'cpsemdUpdatesHandled' => '1.3.6.1.4.1.2620.1.25.1.3',
  'cpsemdLastEventTime' => '1.3.6.1.4.1.2620.1.25.1.4',
  'cpsemdCurrentDBSize' => '1.3.6.1.4.1.2620.1.25.1.5',
  'cpsemdDBCapacity' => '1.3.6.1.4.1.2620.1.25.1.6',
  'cpsemdNumEvents' => '1.3.6.1.4.1.2620.1.25.1.7',
  'cpsemdDBDiskSpace' => '1.3.6.1.4.1.2620.1.25.1.8',
  'cpsemdCorrelationUnitTable' => '1.3.6.1.4.1.2620.1.25.1.9',
  'cpsemdCorrelationUnitEntry' => '1.3.6.1.4.1.2620.1.25.1.9.1',
  'cpsemdCorrelationUnitIndex' => '1.3.6.1.4.1.2620.1.25.1.9.1.1',
  'cpsemdCorrelationUnitIP' => '1.3.6.1.4.1.2620.1.25.1.9.1.2',
  'cpsemdCorrelationUnitLastRcvdTime' => '1.3.6.1.4.1.2620.1.25.1.9.1.3',
  'cpsemdCorrelationUnitNumEventsRcvd' => '1.3.6.1.4.1.2620.1.25.1.9.1.4',
  'cpsemdConnectionDuration' => '1.3.6.1.4.1.2620.1.25.1.9.1.5',
  'cpsemdDBIsFull' => '1.3.6.1.4.1.2620.1.25.1.10',
  'cpsemdStatCode' => '1.3.6.1.4.1.2620.1.25.1.101',
  'cpsemdStatShortDescr' => '1.3.6.1.4.1.2620.1.25.1.102',
  'cpsemdStatLongDescr' => '1.3.6.1.4.1.2620.1.25.1.103',
  'cpsead' => '1.3.6.1.4.1.2620.1.25.2',
  'cpseadProcAlive' => '1.3.6.1.4.1.2620.1.25.2.1',
  'cpseadConnectedToSem' => '1.3.6.1.4.1.2620.1.25.2.2',
  'cpseadNumProcessedLogs' => '1.3.6.1.4.1.2620.1.25.2.3',
  'cpseadJobsTable' => '1.3.6.1.4.1.2620.1.25.2.4',
  'cpseadJobsEntry' => '1.3.6.1.4.1.2620.1.25.2.4.1',
  'cpseadJobIndex' => '1.3.6.1.4.1.2620.1.25.2.4.1.1',
  'cpseadJobID' => '1.3.6.1.4.1.2620.1.25.2.4.1.2',
  'cpseadJobName' => '1.3.6.1.4.1.2620.1.25.2.4.1.3',
  'cpseadJobState' => '1.3.6.1.4.1.2620.1.25.2.4.1.4',
  'cpseadJobIsOnline' => '1.3.6.1.4.1.2620.1.25.2.4.1.5',
  'cpseadJobLogServer' => '1.3.6.1.4.1.2620.1.25.2.4.1.6',
  'cpseadJobDataType' => '1.3.6.1.4.1.2620.1.25.2.4.1.7',
  'cpseadConnectedToLogServer' => '1.3.6.1.4.1.2620.1.25.2.4.1.8',
  'cpseadNumAnalyzedLogs' => '1.3.6.1.4.1.2620.1.25.2.4.1.9',
  'cpseadFileName' => '1.3.6.1.4.1.2620.1.25.2.4.1.10',
  'cpseadFileCurrentPosition' => '1.3.6.1.4.1.2620.1.25.2.4.1.11',
  'cpseadStateDescriptionCode' => '1.3.6.1.4.1.2620.1.25.2.4.1.12',
  'cpseadStateDescription' => '1.3.6.1.4.1.2620.1.25.2.4.1.13',
  'cpseadNoFreeDiskSpace' => '1.3.6.1.4.1.2620.1.25.2.5',
  'cpseadStatCode' => '1.3.6.1.4.1.2620.1.25.2.101',
  'cpseadStatShortDescr' => '1.3.6.1.4.1.2620.1.25.2.102',
  'cpseadStatLongDescr' => '1.3.6.1.4.1.2620.1.25.2.103',
  'uf' => '1.3.6.1.4.1.2620.1.29',
  'ufEngine' => '1.3.6.1.4.1.2620.1.29.1',
  'ufEngineName' => '1.3.6.1.4.1.2620.1.29.1.1',
  'ufEngineVer' => '1.3.6.1.4.1.2620.1.29.1.2',
  'ufEngineDate' => '1.3.6.1.4.1.2620.1.29.1.3',
  'ufSignatureDate' => '1.3.6.1.4.1.2620.1.29.1.4',
  'ufSignatureVer' => '1.3.6.1.4.1.2620.1.29.1.5',
  'ufLastSigCheckTime' => '1.3.6.1.4.1.2620.1.29.1.6',
  'ufLastSigLocation' => '1.3.6.1.4.1.2620.1.29.1.7',
  'ufLastLicExp' => '1.3.6.1.4.1.2620.1.29.1.8',
  'ufSS' => '1.3.6.1.4.1.2620.1.29.2',
  'ufIsMonitor' => '1.3.6.1.4.1.2620.1.29.2.1',
  'ufScannedCnt' => '1.3.6.1.4.1.2620.1.29.2.2',
  'ufBlockedCnt' => '1.3.6.1.4.1.2620.1.29.2.3',
  'ufTopBlockedCatTable' => '1.3.6.1.4.1.2620.1.29.2.4',
  'ufTopBlockedCatEntry' => '1.3.6.1.4.1.2620.1.29.2.4.1',
  'ufTopBlockedCatIndex' => '1.3.6.1.4.1.2620.1.29.2.4.1.1',
  'ufTopBlockedCatName' => '1.3.6.1.4.1.2620.1.29.2.4.1.2',
  'ufTopBlockedCatCnt' => '1.3.6.1.4.1.2620.1.29.2.4.1.3',
  'ufTopBlockedSiteTable' => '1.3.6.1.4.1.2620.1.29.2.5',
  'ufTopBlockedSiteEntry' => '1.3.6.1.4.1.2620.1.29.2.5.1',
  'ufTopBlockedSiteIndex' => '1.3.6.1.4.1.2620.1.29.2.5.1.1',
  'ufTopBlockedSiteName' => '1.3.6.1.4.1.2620.1.29.2.5.1.2',
  'ufTopBlockedSiteCnt' => '1.3.6.1.4.1.2620.1.29.2.5.1.3',
  'ufTopBlockedUserTable' => '1.3.6.1.4.1.2620.1.29.2.6',
  'ufTopBlockedUserEntry' => '1.3.6.1.4.1.2620.1.29.2.6.1',
  'ufTopBlockedUserIndex' => '1.3.6.1.4.1.2620.1.29.2.6.1.1',
  'ufTopBlockedUserName' => '1.3.6.1.4.1.2620.1.29.2.6.1.2',
  'ufTopBlockedUserCnt' => '1.3.6.1.4.1.2620.1.29.2.6.1.3',
  'ufStatCode' => '1.3.6.1.4.1.2620.1.29.101',
  'ufStatShortDescr' => '1.3.6.1.4.1.2620.1.29.102',
  'ufStatLongDescr' => '1.3.6.1.4.1.2620.1.29.103',
  'ms' => '1.3.6.1.4.1.2620.1.30',
  'msProductName' => '1.3.6.1.4.1.2620.1.30.1',
  'msMajorVersion' => '1.3.6.1.4.1.2620.1.30.2',
  'msMinorVersion' => '1.3.6.1.4.1.2620.1.30.3',
  'msBuildNumber' => '1.3.6.1.4.1.2620.1.30.4',
  'msVersionStr' => '1.3.6.1.4.1.2620.1.30.5',
  'msSpam' => '1.3.6.1.4.1.2620.1.30.6',
  'msSpamNumScannedEmails' => '1.3.6.1.4.1.2620.1.30.6.1',
  'msSpamNumSpamEmails' => '1.3.6.1.4.1.2620.1.30.6.2',
  'msSpamNumHandledSpamEmails' => '1.3.6.1.4.1.2620.1.30.6.3',
  'msSpamControls' => '1.3.6.1.4.1.2620.1.30.6.4',
  'msSpamControlsSpamEngine' => '1.3.6.1.4.1.2620.1.30.6.4.1',
  'msSpamControlsIpRepuatation' => '1.3.6.1.4.1.2620.1.30.6.4.2',
  'msSpamControlsSPF' => '1.3.6.1.4.1.2620.1.30.6.4.3',
  'msSpamControlsDomainKeys' => '1.3.6.1.4.1.2620.1.30.6.4.4',
  'msSpamControlsRDNS' => '1.3.6.1.4.1.2620.1.30.6.4.5',
  'msSpamControlsRBL' => '1.3.6.1.4.1.2620.1.30.6.4.6',
  'msExpirationDate' => '1.3.6.1.4.1.2620.1.30.7',
  'msEngineVer' => '1.3.6.1.4.1.2620.1.30.8',
  'msEngineDate' => '1.3.6.1.4.1.2620.1.30.9',
  'msStatCode' => '1.3.6.1.4.1.2620.1.30.101',
  'msStatShortDescr' => '1.3.6.1.4.1.2620.1.30.102',
  'msStatLongDescr' => '1.3.6.1.4.1.2620.1.30.103',
  'msServicePack' => '1.3.6.1.4.1.2620.1.30.999',
  'voip' => '1.3.6.1.4.1.2620.1.31',
  'voipProductName' => '1.3.6.1.4.1.2620.1.31.1',
  'voipMajorVersion' => '1.3.6.1.4.1.2620.1.31.2',
  'voipMinorVersion' => '1.3.6.1.4.1.2620.1.31.3',
  'voipBuildNumber' => '1.3.6.1.4.1.2620.1.31.4',
  'voipVersionStr' => '1.3.6.1.4.1.2620.1.31.5',
  'voipDOS' => '1.3.6.1.4.1.2620.1.31.6',
  'voipDOSSip' => '1.3.6.1.4.1.2620.1.31.6.1',
  'voipDOSSipNetwork' => '1.3.6.1.4.1.2620.1.31.6.1.1',
  'voipDOSSipNetworkReqInterval' => '1.3.6.1.4.1.2620.1.31.6.1.1.1',
  'voipDOSSipNetworkReqConfThreshold' => '1.3.6.1.4.1.2620.1.31.6.1.1.2',
  'voipDOSSipNetworkReqCurrentVal' => '1.3.6.1.4.1.2620.1.31.6.1.1.3',
  'voipDOSSipNetworkRegInterval' => '1.3.6.1.4.1.2620.1.31.6.1.1.4',
  'voipDOSSipNetworkRegConfThreshold' => '1.3.6.1.4.1.2620.1.31.6.1.1.5',
  'voipDOSSipNetworkRegCurrentVal' => '1.3.6.1.4.1.2620.1.31.6.1.1.6',
  'voipDOSSipNetworkCallInitInterval' => '1.3.6.1.4.1.2620.1.31.6.1.1.7',
  'voipDOSSipNetworkCallInitConfThreshold' => '1.3.6.1.4.1.2620.1.31.6.1.1.8',
  'voipDOSSipNetworkCallInitICurrentVal' => '1.3.6.1.4.1.2620.1.31.6.1.1.9',
  'voipDOSSipRateLimitingTable' => '1.3.6.1.4.1.2620.1.31.6.1.2',
  'voipDOSSipRateLimitingEntry' => '1.3.6.1.4.1.2620.1.31.6.1.2.1',
  'voipDOSSipRateLimitingTableIndex' => '1.3.6.1.4.1.2620.1.31.6.1.2.1.1',
  'voipDOSSipRateLimitingTableIpAddress' => '1.3.6.1.4.1.2620.1.31.6.1.2.1.2',
  'voipDOSSipRateLimitingTableInterval' => '1.3.6.1.4.1.2620.1.31.6.1.2.1.3',
  'voipDOSSipRateLimitingTableConfThreshold' => '1.3.6.1.4.1.2620.1.31.6.1.2.1.4',
  'voipDOSSipRateLimitingTableNumDOSSipRequests' => '1.3.6.1.4.1.2620.1.31.6.1.2.1.5',
  'voipDOSSipRateLimitingTableNumTrustedRequests' => '1.3.6.1.4.1.2620.1.31.6.1.2.1.6',
  'voipDOSSipRateLimitingTableNumNonTrustedRequests' => '1.3.6.1.4.1.2620.1.31.6.1.2.1.7',
  'voipDOSSipRateLimitingTableNumRequestsfromServers' => '1.3.6.1.4.1.2620.1.31.6.1.2.1.8',
  'voipCAC' => '1.3.6.1.4.1.2620.1.31.7',
  'voipCACConcurrentCalls' => '1.3.6.1.4.1.2620.1.31.7.1',
  'voipCACConcurrentCallsConfThreshold' => '1.3.6.1.4.1.2620.1.31.7.1.1',
  'voipCACConcurrentCallsCurrentVal' => '1.3.6.1.4.1.2620.1.31.7.1.2',
  'voipStatCode' => '1.3.6.1.4.1.2620.1.31.101',
  'voipStatShortDescr' => '1.3.6.1.4.1.2620.1.31.102',
  'voipStatLongDescr' => '1.3.6.1.4.1.2620.1.31.103',
  'voipServicePack' => '1.3.6.1.4.1.2620.1.31.999',
  'sxl' => '1.3.6.1.4.1.2620.1.36',
  'fwSXLGroup' => '1.3.6.1.4.1.2620.1.36.1',
  'fwSXLStatus' => '1.3.6.1.4.1.2620.1.36.1.1',
  'fwSXLStatusDefinition' => 'CHECKPOINT-MIB::fwSXLStatus',
  'fwSXLConnsExisting' => '1.3.6.1.4.1.2620.1.36.1.2',
  'fwSXLConnsAdded' => '1.3.6.1.4.1.2620.1.36.1.3',
  'fwSXLConnsDeleted' => '1.3.6.1.4.1.2620.1.36.1.4',
  'identityAwareness' => '1.3.6.1.4.1.2620.1.38',
  'identityAwarenessProductName' => '1.3.6.1.4.1.2620.1.38.1',
  'identityAwarenessAuthUsers' => '1.3.6.1.4.1.2620.1.38.2',
  'identityAwarenessUnAuthUsers' => '1.3.6.1.4.1.2620.1.38.3',
  'identityAwarenessAuthUsersKerberos' => '1.3.6.1.4.1.2620.1.38.4',
  'identityAwarenessAuthMachKerberos' => '1.3.6.1.4.1.2620.1.38.5',
  'identityAwarenessAuthUsersPass' => '1.3.6.1.4.1.2620.1.38.6',
  'identityAwarenessAuthUsersADQuery' => '1.3.6.1.4.1.2620.1.38.7',
  'identityAwarenessAuthMachADQuery' => '1.3.6.1.4.1.2620.1.38.8',
  'identityAwarenessLoggedInAgent' => '1.3.6.1.4.1.2620.1.38.9',
  'identityAwarenessLoggedInCaptivePortal' => '1.3.6.1.4.1.2620.1.38.10',
  'identityAwarenessLoggedInADQuery' => '1.3.6.1.4.1.2620.1.38.11',
  'identityAwarenessAntiSpoffProtection' => '1.3.6.1.4.1.2620.1.38.12',
  'identityAwarenessSuccUserLoginKerberos' => '1.3.6.1.4.1.2620.1.38.13',
  'identityAwarenessSuccMachLoginKerberos' => '1.3.6.1.4.1.2620.1.38.14',
  'identityAwarenessSuccUserLoginPass' => '1.3.6.1.4.1.2620.1.38.15',
  'identityAwarenessSuccUserLoginADQuery' => '1.3.6.1.4.1.2620.1.38.16',
  'identityAwarenessSuccMachLoginADQuery' => '1.3.6.1.4.1.2620.1.38.17',
  'identityAwarenessUnSuccUserLoginKerberos' => '1.3.6.1.4.1.2620.1.38.18',
  'identityAwarenessUnSuccMachLoginKerberos' => '1.3.6.1.4.1.2620.1.38.19',
  'identityAwarenessUnSuccUserLoginPass' => '1.3.6.1.4.1.2620.1.38.20',
  'identityAwarenessSuccUserLDAP' => '1.3.6.1.4.1.2620.1.38.21',
  'identityAwarenessUnSuccUserLDAP' => '1.3.6.1.4.1.2620.1.38.22',
  'identityAwarenessDataTrans' => '1.3.6.1.4.1.2620.1.38.23',
  'identityAwarenessDistributedEnvTable' => '1.3.6.1.4.1.2620.1.38.24',
  'identityAwarenessDistributedEnvEntry' => '1.3.6.1.4.1.2620.1.38.24.1',
  'identityAwarenessDistributedEnvTableIndex' => '1.3.6.1.4.1.2620.1.38.24.1.1',
  'identityAwarenessDistributedEnvTableGwName' => '1.3.6.1.4.1.2620.1.38.24.1.2',
  'identityAwarenessDistributedEnvTableDisconnections' => '1.3.6.1.4.1.2620.1.38.24.1.3',
  'identityAwarenessDistributedEnvTableBruteForceAtt' => '1.3.6.1.4.1.2620.1.38.24.1.4',
  'identityAwarenessDistributedEnvTableStatus' => '1.3.6.1.4.1.2620.1.38.24.1.5',
  'identityAwarenessDistributedEnvTableIsLocal' => '1.3.6.1.4.1.2620.1.38.24.1.6',
  'identityAwarenessADQueryStatusTable' => '1.3.6.1.4.1.2620.1.38.25',
  'identityAwarenessADQueryStatusEntry' => '1.3.6.1.4.1.2620.1.38.25.1',
  'identityAwarenessADQueryStatusTableIndex' => '1.3.6.1.4.1.2620.1.38.25.1.1',
  'identityAwarenessADQueryStatusCurrStatus' => '1.3.6.1.4.1.2620.1.38.25.1.2',
  'identityAwarenessADQueryStatusDomainName' => '1.3.6.1.4.1.2620.1.38.25.1.3',
  'identityAwarenessADQueryStatusDomainIP' => '1.3.6.1.4.1.2620.1.38.25.1.4',
  'identityAwarenessADQueryStatusEvents' => '1.3.6.1.4.1.2620.1.38.25.1.5',
  'identityAwarenessStatus' => '1.3.6.1.4.1.2620.1.38.101',
  'identityAwarenessStatusShortDesc' => '1.3.6.1.4.1.2620.1.38.102',
  'identityAwarenessStatusLongDesc' => '1.3.6.1.4.1.2620.1.38.103',
  'applicationControl' => '1.3.6.1.4.1.2620.1.39',
  'applicationControlSubscription' => '1.3.6.1.4.1.2620.1.39.1',
  'applicationControlSubscriptionStatus' => '1.3.6.1.4.1.2620.1.39.1.1',
  'applicationControlSubscriptionExpDate' => '1.3.6.1.4.1.2620.1.39.1.2',
  'applicationControlSubscriptionDesc' => '1.3.6.1.4.1.2620.1.39.1.3',
  'applicationControlUpdate' => '1.3.6.1.4.1.2620.1.39.2',
  'applicationControlUpdateStatus' => '1.3.6.1.4.1.2620.1.39.2.1',
  'applicationControlUpdateDesc' => '1.3.6.1.4.1.2620.1.39.2.2',
  'applicationControlNextUpdate' => '1.3.6.1.4.1.2620.1.39.2.3',
  'applicationControlVersion' => '1.3.6.1.4.1.2620.1.39.2.4',
  'applicationControlStatusCode' => '1.3.6.1.4.1.2620.1.39.101',
  'applicationControlStatusShortDesc' => '1.3.6.1.4.1.2620.1.39.102',
  'applicationControlStatusLongDesc' => '1.3.6.1.4.1.2620.1.39.103',
  'thresholds' => '1.3.6.1.4.1.2620.1.42',
  'thresholdPolicy' => '1.3.6.1.4.1.2620.1.42.1',
  'thresholdState' => '1.3.6.1.4.1.2620.1.42.2',
  'thresholdStateDesc' => '1.3.6.1.4.1.2620.1.42.3',
  'thresholdEnabled' => '1.3.6.1.4.1.2620.1.42.4',
  'thresholdActive' => '1.3.6.1.4.1.2620.1.42.5',
  'thresholdEventsSinceStartup' => '1.3.6.1.4.1.2620.1.42.6',
  'thresholdActiveEventsTable' => '1.3.6.1.4.1.2620.1.42.7',
  'thresholdActiveEventsEntry' => '1.3.6.1.4.1.2620.1.42.7.1',
  'thresholdActiveEventsIndex' => '1.3.6.1.4.1.2620.1.42.7.1.1',
  'thresholdActiveEventName' => '1.3.6.1.4.1.2620.1.42.7.1.2',
  'thresholdActiveEventCategory' => '1.3.6.1.4.1.2620.1.42.7.1.3',
  'thresholdActiveEventSeverity' => '1.3.6.1.4.1.2620.1.42.7.1.4',
  'thresholdActiveEventSubject' => '1.3.6.1.4.1.2620.1.42.7.1.5',
  'thresholdActiveEventSubjectValue' => '1.3.6.1.4.1.2620.1.42.7.1.6',
  'thresholdActiveEventActivationTime' => '1.3.6.1.4.1.2620.1.42.7.1.7',
  'thresholdActiveEventState' => '1.3.6.1.4.1.2620.1.42.7.1.8',
  'thresholdDestinationsTable' => '1.3.6.1.4.1.2620.1.42.8',
  'thresholdDestinationsEntry' => '1.3.6.1.4.1.2620.1.42.8.1',
  'thresholdDestinationIndex' => '1.3.6.1.4.1.2620.1.42.8.1.1',
  'thresholdDestinationName' => '1.3.6.1.4.1.2620.1.42.8.1.2',
  'thresholdDestinationType' => '1.3.6.1.4.1.2620.1.42.8.1.3',
  'thresholdSendingState' => '1.3.6.1.4.1.2620.1.42.8.1.4',
  'thresholdSendingStateDesc' => '1.3.6.1.4.1.2620.1.42.8.1.5',
  'thresholdAlertCount' => '1.3.6.1.4.1.2620.1.42.8.1.6',
  'thresholdErrorsTable' => '1.3.6.1.4.1.2620.1.42.9',
  'thresholdErrorsEntry' => '1.3.6.1.4.1.2620.1.42.9.1',
  'thresholdErrorIndex' => '1.3.6.1.4.1.2620.1.42.9.1.1',
  'thresholdName' => '1.3.6.1.4.1.2620.1.42.9.1.2',
  'thresholdThresholdOID' => '1.3.6.1.4.1.2620.1.42.9.1.3',
  'thresholdErrorDesc' => '1.3.6.1.4.1.2620.1.42.9.1.4',
  'thresholdErrorTime' => '1.3.6.1.4.1.2620.1.42.9.1.5',
  'advancedUrlFiltering' => '1.3.6.1.4.1.2620.1.43',
  'advancedUrlFilteringSubscription' => '1.3.6.1.4.1.2620.1.43.1',
  'advancedUrlFilteringSubscriptionStatus' => '1.3.6.1.4.1.2620.1.43.1.1',
  'advancedUrlFilteringSubscriptionExpDate' => '1.3.6.1.4.1.2620.1.43.1.2',
  'advancedUrlFilteringSubscriptionDesc' => '1.3.6.1.4.1.2620.1.43.1.3',
  'advancedUrlFilteringUpdate' => '1.3.6.1.4.1.2620.1.43.2',
  'advancedUrlFilteringUpdateStatus' => '1.3.6.1.4.1.2620.1.43.2.1',
  'advancedUrlFilteringUpdateDesc' => '1.3.6.1.4.1.2620.1.43.2.2',
  'advancedUrlFilteringNextUpdate' => '1.3.6.1.4.1.2620.1.43.2.3',
  'advancedUrlFilteringVersion' => '1.3.6.1.4.1.2620.1.43.2.4',
  'advancedUrlFilteringRADStatus' => '1.3.6.1.4.1.2620.1.43.3',
  'advancedUrlFilteringRADStatusCode' => '1.3.6.1.4.1.2620.1.43.3.1',
  'advancedUrlFilteringRADStatusDesc' => '1.3.6.1.4.1.2620.1.43.3.2',
  'advancedUrlFilteringStatusCode' => '1.3.6.1.4.1.2620.1.43.101',
  'advancedUrlFilteringStatusShortDesc' => '1.3.6.1.4.1.2620.1.43.102',
  'advancedUrlFilteringStatusLongDesc' => '1.3.6.1.4.1.2620.1.43.103',
  'dlp' => '1.3.6.1.4.1.2620.1.44',
  'exchangeAgents' => '1.3.6.1.4.1.2620.1.44.1',
  #'exchangeAgentsTable' => '1.3.6.1.4.1.2620.1.44.1.1',
  'exchangeAgentsStatusTable' => '1.3.6.1.4.1.2620.1.44.1.1',
  'exchangeAgentsStatusEntry' => '1.3.6.1.4.1.2620.1.44.1.1.1',
  'exchangeAgentsStatusTableIndex' => '1.3.6.1.4.1.2620.1.44.1.1.1.1',
  'exchangeAgentName' => '1.3.6.1.4.1.2620.1.44.1.1.1.2',
  'exchangeAgentStatus' => '1.3.6.1.4.1.2620.1.44.1.1.1.3',
  'exchangeAgentTotalMsg' => '1.3.6.1.4.1.2620.1.44.1.1.1.4',
  'exchangeAgentTotalScannedMsg' => '1.3.6.1.4.1.2620.1.44.1.1.1.5',
  'exchangeAgentDroppedMsg' => '1.3.6.1.4.1.2620.1.44.1.1.1.6',
  'exchangeAgentUpTime' => '1.3.6.1.4.1.2620.1.44.1.1.1.7',
  'exchangeAgentTimeSinceLastMsg' => '1.3.6.1.4.1.2620.1.44.1.1.1.8',
  'exchangeAgentQueueLen' => '1.3.6.1.4.1.2620.1.44.1.1.1.9',
  'exchangeQueueLen' => '1.3.6.1.4.1.2620.1.44.1.1.1.10',
  'exchangeAgentAvgTimePerMsg' => '1.3.6.1.4.1.2620.1.44.1.1.1.11',
  'exchangeAgentAvgTimePerScannedMsg' => '1.3.6.1.4.1.2620.1.44.1.1.1.12',
  'exchangeAgentVersion' => '1.3.6.1.4.1.2620.1.44.1.1.1.13',
  'exchangeCPUUsage' => '1.3.6.1.4.1.2620.1.44.1.1.1.14',
  'exchangeMemoryUsage' => '1.3.6.1.4.1.2620.1.44.1.1.1.15',
  'exchangeAgentPolicyTimeStamp' => '1.3.6.1.4.1.2620.1.44.1.1.1.16',
  'dlpVersionString' => '1.3.6.1.4.1.2620.1.44.11',
  'dlpLicenseStatus' => '1.3.6.1.4.1.2620.1.44.12',
  'dlpLdapStatus' => '1.3.6.1.4.1.2620.1.44.13',
  'dlpTotalScans' => '1.3.6.1.4.1.2620.1.44.14',
  'dlpSMTPScans' => '1.3.6.1.4.1.2620.1.44.15',
  'dlpSMTPIncidents' => '1.3.6.1.4.1.2620.1.44.16',
  'dlpLastSMTPScan' => '1.3.6.1.4.1.2620.1.44.17',
  'dlpNumQuarantined' => '1.3.6.1.4.1.2620.1.44.18',
  'dlpQrntMsgsSize' => '1.3.6.1.4.1.2620.1.44.19',
  'dlpSentEMails' => '1.3.6.1.4.1.2620.1.44.20',
  'dlpExpiredEMails' => '1.3.6.1.4.1.2620.1.44.21',
  'dlpDiscardEMails' => '1.3.6.1.4.1.2620.1.44.22',
  'dlpPostfixQLen' => '1.3.6.1.4.1.2620.1.44.23',
  'dlpPostfixErrors' => '1.3.6.1.4.1.2620.1.44.24',
  'dlpPostfixQOldMsg' => '1.3.6.1.4.1.2620.1.44.25',
  'dlpPostfixQMsgsSz' => '1.3.6.1.4.1.2620.1.44.26',
  'dlpPostfixQFreeSp' => '1.3.6.1.4.1.2620.1.44.27',
  'dlpQrntFreeSpace' => '1.3.6.1.4.1.2620.1.44.28',
  'dlpQrntStatus' => '1.3.6.1.4.1.2620.1.44.29',
  'dlpHttpScans' => '1.3.6.1.4.1.2620.1.44.30',
  'dlpHttpIncidents' => '1.3.6.1.4.1.2620.1.44.31',
  'dlpHttpLastScan' => '1.3.6.1.4.1.2620.1.44.32',
  'dlpFtpScans' => '1.3.6.1.4.1.2620.1.44.33',
  'dlpFtpIncidents' => '1.3.6.1.4.1.2620.1.44.34',
  'dlpFtpLastScan' => '1.3.6.1.4.1.2620.1.44.35',
  'dlpBypassStatus' => '1.3.6.1.4.1.2620.1.44.36',
  'dlpUserCheckClnts' => '1.3.6.1.4.1.2620.1.44.37',
  'dlpLastPolStatus' => '1.3.6.1.4.1.2620.1.44.38',
  'dlpStatusCode' => '1.3.6.1.4.1.2620.1.44.101',
  'dlpStatusShortDesc' => '1.3.6.1.4.1.2620.1.44.102',
  'dlpStatusLongDesc' => '1.3.6.1.4.1.2620.1.44.103',
  'amw' => '1.3.6.1.4.1.2620.1.46',
  'amwABUpdate' => '1.3.6.1.4.1.2620.1.46.1',
  'amwABUpdateStatus' => '1.3.6.1.4.1.2620.1.46.1.1',
  'amwABUpdateDesc' => '1.3.6.1.4.1.2620.1.46.1.2',
  'amwABNextUpdate' => '1.3.6.1.4.1.2620.1.46.1.3',
  'amwABVersion' => '1.3.6.1.4.1.2620.1.46.1.4',
  'antiBotSubscription' => '1.3.6.1.4.1.2620.1.46.2',
  'antiBotSubscriptionStatus' => '1.3.6.1.4.1.2620.1.46.2.1',
  'antiBotSubscriptionExpDate' => '1.3.6.1.4.1.2620.1.46.2.2',
  'antiBotSubscriptionDesc' => '1.3.6.1.4.1.2620.1.46.2.3',
  'antiVirusSubscription' => '1.3.6.1.4.1.2620.1.46.3',
  'antiVirusSubscriptionStatus' => '1.3.6.1.4.1.2620.1.46.3.1',
  'antiVirusSubscriptionExpDate' => '1.3.6.1.4.1.2620.1.46.3.2',
  'antiVirusSubscriptionDesc' => '1.3.6.1.4.1.2620.1.46.3.3',
  'antiSpamSubscription' => '1.3.6.1.4.1.2620.1.46.4',
  'antiSpamSubscriptionStatus' => '1.3.6.1.4.1.2620.1.46.4.1',
  'antiSpamSubscriptionExpDate' => '1.3.6.1.4.1.2620.1.46.4.2',
  'antiSpamSubscriptionDesc' => '1.3.6.1.4.1.2620.1.46.4.3',
  'amwAVUpdate' => '1.3.6.1.4.1.2620.1.46.5',
  'amwAVUpdateStatus' => '1.3.6.1.4.1.2620.1.46.5.1',
  'amwAVUpdateDesc' => '1.3.6.1.4.1.2620.1.46.5.2',
  'amwAVNextUpdate' => '1.3.6.1.4.1.2620.1.46.5.3',
  'amwAVVersion' => '1.3.6.1.4.1.2620.1.46.5.4',
  'amwStatusCode' => '1.3.6.1.4.1.2620.1.46.101',
  'amwStatusShortDesc' => '1.3.6.1.4.1.2620.1.46.102',
  'amwStatusLongDesc' => '1.3.6.1.4.1.2620.1.46.103',
  'te' => '1.3.6.1.4.1.2620.1.49',
  'teUpdateStatus' => '1.3.6.1.4.1.2620.1.49.16',
  'teUpdateDesc' => '1.3.6.1.4.1.2620.1.49.17',
  'teSubscriptionExpDate' => '1.3.6.1.4.1.2620.1.49.20',
  'teSubscriptionStatus' => '1.3.6.1.4.1.2620.1.49.25',
  'teCloudSubscriptionStatus' => '1.3.6.1.4.1.2620.1.49.26',
  'teSubscriptionDesc' => '1.3.6.1.4.1.2620.1.49.27',
  'teStatusCode' => '1.3.6.1.4.1.2620.1.49.101',
  'teStatusShortDesc' => '1.3.6.1.4.1.2620.1.49.102',
  'teStatusLongDesc' => '1.3.6.1.4.1.2620.1.49.103',
  'tables' => '1.3.6.1.4.1.2620.500',
  'raUsersTable' => '1.3.6.1.4.1.2620.500.9000',
  'raUsersEntry' => '1.3.6.1.4.1.2620.500.9000.1',
  'raInternalIpAddr' => '1.3.6.1.4.1.2620.500.9000.1.1',
  'raExternalIpAddr' => '1.3.6.1.4.1.2620.500.9000.1.19',
  'raUserState' => '1.3.6.1.4.1.2620.500.9000.1.20',
  'raUserStateDefinition' => 'CHECKPOINT-MIB::raUserState',
  'raOfficeMode' => '1.3.6.1.4.1.2620.500.9000.1.21',
  'raIkeOverTCP' => '1.3.6.1.4.1.2620.500.9000.1.22',
  'raUseUDPEncap' => '1.3.6.1.4.1.2620.500.9000.1.23',
  'raVisitorMode' => '1.3.6.1.4.1.2620.500.9000.1.24',
  'raRouteTraffic' => '1.3.6.1.4.1.2620.500.9000.1.25',
  'raCommunity' => '1.3.6.1.4.1.2620.500.9000.1.26',
  'raTunnelEncAlgorithm' => '1.3.6.1.4.1.2620.500.9000.1.27',
  'raTunnelEncAlgorithmDefinition' => 'CHECKPOINT-MIB::raTunnelEncAlgorithm',
  'raTunnelAuthMethod' => '1.3.6.1.4.1.2620.500.9000.1.28',
  'raTunnelAuthMethodDefinition' => 'CHECKPOINT-MIB::raTunnelAuthMethod',
  'raLogonTime' => '1.3.6.1.4.1.2620.500.9000.1.29',
  'tunnelTable' => '1.3.6.1.4.1.2620.500.9002',
  'tunnelEntry' => '1.3.6.1.4.1.2620.500.9002.1',
  'tunnelPeerIpAddr' => '1.3.6.1.4.1.2620.500.9002.1.1',
  'tunnelPeerObjName' => '1.3.6.1.4.1.2620.500.9002.1.2',
  'tunnelState' => '1.3.6.1.4.1.2620.500.9002.1.3',
  'tunnelStateDefinition' => 'CHECKPOINT-MIB::tunnelState',
  'tunnelCommunity' => '1.3.6.1.4.1.2620.500.9002.1.4',
  'tunnelNextHop' => '1.3.6.1.4.1.2620.500.9002.1.5',
  'tunnelInterface' => '1.3.6.1.4.1.2620.500.9002.1.6',
  'tunnelSourceIpAddr' => '1.3.6.1.4.1.2620.500.9002.1.7',
  'tunnelLinkPriority' => '1.3.6.1.4.1.2620.500.9002.1.8',
  'tunnelLinkPriorityDefinition' => 'CHECKPOINT-MIB::tunnelLinkPriority',
  'tunnelProbState' => '1.3.6.1.4.1.2620.500.9002.1.9',
  'tunnelProbStateDefinition' => 'CHECKPOINT-MIB::tunnelProbState',
  'tunnelPeerType' => '1.3.6.1.4.1.2620.500.9002.1.10',
  'tunnelPeerTypeDefinition' => 'CHECKPOINT-MIB::tunnelPeerType',
  'tunnelType' => '1.3.6.1.4.1.2620.500.9002.1.11',
  'tunnelTypeDefinition' => 'CHECKPOINT-MIB::tunnelType',
  'permanentTunnelTable' => '1.3.6.1.4.1.2620.500.9003',
  'permanentTunnelEntry' => '1.3.6.1.4.1.2620.500.9003.1',
  'permanentTunnelPeerIpAddr' => '1.3.6.1.4.1.2620.500.9003.1.1',
  'permanentTunnelPeerObjName' => '1.3.6.1.4.1.2620.500.9003.1.2',
  'permanentTunnelState' => '1.3.6.1.4.1.2620.500.9003.1.3',
  'permanentTunnelStateDefinition' => 'CHECKPOINT-MIB::permanentTunnelState',
  'permanentTunnelCommunity' => '1.3.6.1.4.1.2620.500.9003.1.4',
  'permanentTunnelNextHop' => '1.3.6.1.4.1.2620.500.9003.1.5',
  'permanentTunnelInterface' => '1.3.6.1.4.1.2620.500.9003.1.6',
  'permanentTunnelSourceIpAddr' => '1.3.6.1.4.1.2620.500.9003.1.7',
  'permanentTunnelLinkPriority' => '1.3.6.1.4.1.2620.500.9003.1.8',
  'permanentTunnelLinkPriorityDefinition' => 'CHECKPOINT-MIB::permanentTunnelLinkPriority',
  'permanentTunnelProbState' => '1.3.6.1.4.1.2620.500.9003.1.9',
  'permanentTunnelProbStateDefinition' => 'CHECKPOINT-MIB::permanentTunnelProbState',
  'permanentTunnelPeerType' => '1.3.6.1.4.1.2620.500.9003.1.10',
  'permanentTunnelPeerTypeDefinition' => 'CHECKPOINT-MIB::permanentTunnelPeerType',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'CHECKPOINT-MIB'} = {
  raTunnelAuthMethod => {
    '1' => 'preshared-key',
    '2' => 'dss-signature',
    '3' => 'rsa-signature',
    '4' => 'rsa-encryption',
    '5' => 'rev-rsa-encryption',
    '129' => 'xauth',
    '130' => 'crack',
  },
  tunnelType => {
    '1' => 'regular',
    '2' => 'permanent',
  },
  permanentTunnelPeerType => {
    '1' => 'regular',
    '2' => 'daip',
    '3' => 'robo',
  },
  permanentTunnelProbState => {
    '0' => 'unknown',
    '1' => 'alive',
    '2' => 'dead',
  },
  raTunnelEncAlgorithm => {
    '1' => 'espDES',
    '2' => 'esp3DES',
    '5' => 'espCAST',
    '7' => 'esp3IDEA',
    '9' => 'espNULL',
    '129' => 'espAES128',
    '130' => 'espAES256',
  },
  tunnelLinkPriority => {
    '0' => 'primary',
    '1' => 'backup',
    '2' => 'on-demand',
  },
  raUserState => {
    '3' => 'active',
    '4' => 'destroy',
    '129' => 'idle',
    '130' => 'phase1',
    '131' => 'down',
    '132' => 'init',
  },
  permanentTunnelLinkPriority => {
    '0' => 'primary',
    '1' => 'backup',
    '2' => 'on-demand',
  },
  fwSXLStatus => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  tunnelPeerType => {
    '1' => 'regular',
    '2' => 'daip',
    '3' => 'robo',
  },
  tunnelState => {
    '3' => 'active',
    '4' => 'destroy',
    '129' => 'idle',
    '130' => 'phase1',
    '131' => 'down',
    '132' => 'init',
  },
  permanentTunnelState => {
    '3' => 'active',
    '4' => 'destroy',
    '129' => 'idle',
    '130' => 'phase1',
    '131' => 'down',
    '132' => 'init',
  },
  tunnelProbState => {
    '0' => 'unknown',
    '1' => 'alive',
    '2' => 'dead',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOBGP4MIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCO-BGP4-MIB'} = {
  url => '',
  name => 'CISCO-BGP4-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'CISCO-BGP4-MIB'} =
    '1.3.6.1.4.1.9.9.187';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCO-BGP4-MIB'} = {
  ciscoBgp4MIB => '1.3.6.1.4.1.9.9.187',
  ciscoBgp4NotifyPrefix => '1.3.6.1.4.1.9.9.187.0',
  ciscoBgp4MIBObjects => '1.3.6.1.4.1.9.9.187.1',
  cbgpRoute => '1.3.6.1.4.1.9.9.187.1.1',
  cbgpRouteTable => '1.3.6.1.4.1.9.9.187.1.1.1',
  cbgpRouteEntry => '1.3.6.1.4.1.9.9.187.1.1.1.1',
  cbgpRouteAfi => '1.3.6.1.4.1.9.9.187.1.1.1.1.1',
  cbgpRouteSafi => '1.3.6.1.4.1.9.9.187.1.1.1.1.2',
  cbgpRouteSafiDefinition => 'CISCO-BGP4-MIB::CbgpSafi',
  cbgpRoutePeerType => '1.3.6.1.4.1.9.9.187.1.1.1.1.3',
  cbgpRoutePeer => '1.3.6.1.4.1.9.9.187.1.1.1.1.4',
  cbgpRouteAddrPrefix => '1.3.6.1.4.1.9.9.187.1.1.1.1.5',
  cbgpRouteAddrPrefixLen => '1.3.6.1.4.1.9.9.187.1.1.1.1.6',
  cbgpRouteOrigin => '1.3.6.1.4.1.9.9.187.1.1.1.1.7',
  cbgpRouteOriginDefinition => 'CISCO-BGP4-MIB::cbgpRouteOrigin',
  cbgpRouteASPathSegment => '1.3.6.1.4.1.9.9.187.1.1.1.1.8',
  cbgpRouteNextHop => '1.3.6.1.4.1.9.9.187.1.1.1.1.9',
  cbgpRouteMedPresent => '1.3.6.1.4.1.9.9.187.1.1.1.1.10',
  cbgpRouteMultiExitDisc => '1.3.6.1.4.1.9.9.187.1.1.1.1.11',
  cbgpRouteLocalPrefPresent => '1.3.6.1.4.1.9.9.187.1.1.1.1.12',
  cbgpRouteLocalPref => '1.3.6.1.4.1.9.9.187.1.1.1.1.13',
  cbgpRouteAtomicAggregate => '1.3.6.1.4.1.9.9.187.1.1.1.1.14',
  cbgpRouteAtomicAggregateDefinition => 'CISCO-BGP4-MIB::cbgpRouteAtomicAggregate',
  cbgpRouteAggregatorAS => '1.3.6.1.4.1.9.9.187.1.1.1.1.15',
  cbgpRouteAggregatorAddrType => '1.3.6.1.4.1.9.9.187.1.1.1.1.16',
  cbgpRouteAggregatorAddr => '1.3.6.1.4.1.9.9.187.1.1.1.1.17',
  cbgpRouteBest => '1.3.6.1.4.1.9.9.187.1.1.1.1.18',
  cbgpRouteUnknownAttr => '1.3.6.1.4.1.9.9.187.1.1.1.1.19',
  cbgpPeer => '1.3.6.1.4.1.9.9.187.1.2',
  cbgpPeerTable => '1.3.6.1.4.1.9.9.187.1.2.1',
  cbgpPeerEntry => '1.3.6.1.4.1.9.9.187.1.2.1.1',
  cbgpPeerPrefixAccepted => '1.3.6.1.4.1.9.9.187.1.2.1.1.1',
  cbgpPeerPrefixDenied => '1.3.6.1.4.1.9.9.187.1.2.1.1.2',
  cbgpPeerPrefixLimit => '1.3.6.1.4.1.9.9.187.1.2.1.1.3',
  cbgpPeerPrefixAdvertised => '1.3.6.1.4.1.9.9.187.1.2.1.1.4',
  cbgpPeerPrefixSuppressed => '1.3.6.1.4.1.9.9.187.1.2.1.1.5',
  cbgpPeerPrefixWithdrawn => '1.3.6.1.4.1.9.9.187.1.2.1.1.6',
  cbgpPeerLastErrorTxt => '1.3.6.1.4.1.9.9.187.1.2.1.1.7',
  cbgpPeerPrevState => '1.3.6.1.4.1.9.9.187.1.2.1.1.8',
  cbgpPeerPrevStateDefinition => 'CISCO-BGP4-MIB::cbgpPeerPrevState',
  cbgpPeerCapsTable => '1.3.6.1.4.1.9.9.187.1.2.2',
  cbgpPeerCapsEntry => '1.3.6.1.4.1.9.9.187.1.2.2.1',
  cbgpPeerCapCode => '1.3.6.1.4.1.9.9.187.1.2.2.1.1',
  cbgpPeerCapCodeDefinition => 'CISCO-BGP4-MIB::cbgpPeerCapCode',
  cbgpPeerCapIndex => '1.3.6.1.4.1.9.9.187.1.2.2.1.2',
  cbgpPeerCapValue => '1.3.6.1.4.1.9.9.187.1.2.2.1.3',
  cbgpPeerAddrFamilyTable => '1.3.6.1.4.1.9.9.187.1.2.3',
  cbgpPeerAddrFamilyEntry => '1.3.6.1.4.1.9.9.187.1.2.3.1',
  cbgpPeerAddrFamilyAfi => '1.3.6.1.4.1.9.9.187.1.2.3.1.1',
  cbgpPeerAddrFamilySafi => '1.3.6.1.4.1.9.9.187.1.2.3.1.2',
  cbgpPeerAddrFamilySafiDefinition => 'CISCO-BGP4-MIB::CbgpSafi',
  cbgpPeerAddrFamilyName => '1.3.6.1.4.1.9.9.187.1.2.3.1.3',
  cbgpPeerAddrFamilyPrefixTable => '1.3.6.1.4.1.9.9.187.1.2.4',
  cbgpPeerAddrFamilyPrefixEntry => '1.3.6.1.4.1.9.9.187.1.2.4.1',
  cbgpPeerAcceptedPrefixes => '1.3.6.1.4.1.9.9.187.1.2.4.1.1',
  cbgpPeerDeniedPrefixes => '1.3.6.1.4.1.9.9.187.1.2.4.1.2',
  cbgpPeerPrefixAdminLimit => '1.3.6.1.4.1.9.9.187.1.2.4.1.3',
  cbgpPeerPrefixThreshold => '1.3.6.1.4.1.9.9.187.1.2.4.1.4',
  cbgpPeerPrefixClearThreshold => '1.3.6.1.4.1.9.9.187.1.2.4.1.5',
  cbgpPeerAdvertisedPrefixes => '1.3.6.1.4.1.9.9.187.1.2.4.1.6',
  cbgpPeerSuppressedPrefixes => '1.3.6.1.4.1.9.9.187.1.2.4.1.7',
  cbgpPeerWithdrawnPrefixes => '1.3.6.1.4.1.9.9.187.1.2.4.1.8',
  cbgpPeer2Table => '1.3.6.1.4.1.9.9.187.1.2.5',
  cbgpPeer2Entry => '1.3.6.1.4.1.9.9.187.1.2.5.1',
  cbgpPeer2Type => '1.3.6.1.4.1.9.9.187.1.2.5.1.1',
  cbgpPeer2RemoteAddr => '1.3.6.1.4.1.9.9.187.1.2.5.1.2',
  cbgpPeer2State => '1.3.6.1.4.1.9.9.187.1.2.5.1.3',
  cbgpPeer2StateDefinition => 'CISCO-BGP4-MIB::cbgpPeer2State',
  cbgpPeer2AdminStatus => '1.3.6.1.4.1.9.9.187.1.2.5.1.4',
  cbgpPeer2AdminStatusDefinition => 'CISCO-BGP4-MIB::cbgpPeer2AdminStatus',
  cbgpPeer2NegotiatedVersion => '1.3.6.1.4.1.9.9.187.1.2.5.1.5',
  cbgpPeer2LocalAddr => '1.3.6.1.4.1.9.9.187.1.2.5.1.6',
  cbgpPeer2LocalPort => '1.3.6.1.4.1.9.9.187.1.2.5.1.7',
  cbgpPeer2LocalAs => '1.3.6.1.4.1.9.9.187.1.2.5.1.8',
  cbgpPeer2LocalIdentifier => '1.3.6.1.4.1.9.9.187.1.2.5.1.9',
  cbgpPeer2RemotePort => '1.3.6.1.4.1.9.9.187.1.2.5.1.10',
  cbgpPeer2RemoteAs => '1.3.6.1.4.1.9.9.187.1.2.5.1.11',
  cbgpPeer2RemoteIdentifier => '1.3.6.1.4.1.9.9.187.1.2.5.1.12',
  cbgpPeer2InUpdates => '1.3.6.1.4.1.9.9.187.1.2.5.1.13',
  cbgpPeer2OutUpdates => '1.3.6.1.4.1.9.9.187.1.2.5.1.14',
  cbgpPeer2InTotalMessages => '1.3.6.1.4.1.9.9.187.1.2.5.1.15',
  cbgpPeer2OutTotalMessages => '1.3.6.1.4.1.9.9.187.1.2.5.1.16',
  cbgpPeer2LastError => '1.3.6.1.4.1.9.9.187.1.2.5.1.17',
  cbgpPeer2FsmEstablishedTransitions => '1.3.6.1.4.1.9.9.187.1.2.5.1.18',
  cbgpPeer2FsmEstablishedTime => '1.3.6.1.4.1.9.9.187.1.2.5.1.19',
  cbgpPeer2ConnectRetryInterval => '1.3.6.1.4.1.9.9.187.1.2.5.1.20',
  cbgpPeer2HoldTime => '1.3.6.1.4.1.9.9.187.1.2.5.1.21',
  cbgpPeer2KeepAlive => '1.3.6.1.4.1.9.9.187.1.2.5.1.22',
  cbgpPeer2HoldTimeConfigured => '1.3.6.1.4.1.9.9.187.1.2.5.1.23',
  cbgpPeer2KeepAliveConfigured => '1.3.6.1.4.1.9.9.187.1.2.5.1.24',
  cbgpPeer2MinASOriginationInterval => '1.3.6.1.4.1.9.9.187.1.2.5.1.25',
  cbgpPeer2MinRouteAdvertisementInterval => '1.3.6.1.4.1.9.9.187.1.2.5.1.26',
  cbgpPeer2InUpdateElapsedTime => '1.3.6.1.4.1.9.9.187.1.2.5.1.27',
  cbgpPeer2LastErrorTxt => '1.3.6.1.4.1.9.9.187.1.2.5.1.28',
  cbgpPeer2PrevState => '1.3.6.1.4.1.9.9.187.1.2.5.1.29',
  cbgpPeer2PrevStateDefinition => 'CISCO-BGP4-MIB::cbgpPeer2PrevState',
  cbgpPeer2CapsTable => '1.3.6.1.4.1.9.9.187.1.2.6',
  cbgpPeer2CapsEntry => '1.3.6.1.4.1.9.9.187.1.2.6.1',
  cbgpPeer2CapCode => '1.3.6.1.4.1.9.9.187.1.2.6.1.1',
  cbgpPeer2CapCodeDefinition => 'CISCO-BGP4-MIB::cbgpPeer2CapCode',
  cbgpPeer2CapIndex => '1.3.6.1.4.1.9.9.187.1.2.6.1.2',
  cbgpPeer2CapValue => '1.3.6.1.4.1.9.9.187.1.2.6.1.3',
  cbgpPeer2AddrFamilyTable => '1.3.6.1.4.1.9.9.187.1.2.7',
  cbgpPeer2AddrFamilyEntry => '1.3.6.1.4.1.9.9.187.1.2.7.1',
  cbgpPeer2AddrFamilyAfi => '1.3.6.1.4.1.9.9.187.1.2.7.1.1',
  cbgpPeer2AddrFamilySafi => '1.3.6.1.4.1.9.9.187.1.2.7.1.2',
  cbgpPeer2AddrFamilySafiDefinition => 'CISCO-BGP4-MIB::CbgpSafi',
  cbgpPeer2AddrFamilyName => '1.3.6.1.4.1.9.9.187.1.2.7.1.3',
  cbgpPeer2AddrFamilyPrefixTable => '1.3.6.1.4.1.9.9.187.1.2.8',
  cbgpPeer2AddrFamilyPrefixEntry => '1.3.6.1.4.1.9.9.187.1.2.8.1',
  cbgpPeer2AcceptedPrefixes => '1.3.6.1.4.1.9.9.187.1.2.8.1.1',
  cbgpPeer2DeniedPrefixes => '1.3.6.1.4.1.9.9.187.1.2.8.1.2',
  cbgpPeer2PrefixAdminLimit => '1.3.6.1.4.1.9.9.187.1.2.8.1.3',
  cbgpPeer2PrefixThreshold => '1.3.6.1.4.1.9.9.187.1.2.8.1.4',
  cbgpPeer2PrefixClearThreshold => '1.3.6.1.4.1.9.9.187.1.2.8.1.5',
  cbgpPeer2AdvertisedPrefixes => '1.3.6.1.4.1.9.9.187.1.2.8.1.6',
  cbgpPeer2SuppressedPrefixes => '1.3.6.1.4.1.9.9.187.1.2.8.1.7',
  cbgpPeer2WithdrawnPrefixes => '1.3.6.1.4.1.9.9.187.1.2.8.1.8',
  cbgpGlobal => '1.3.6.1.4.1.9.9.187.1.3',
  cbgpNotifsEnable => '1.3.6.1.4.1.9.9.187.1.3.1',
  cbgpLocalAs => '1.3.6.1.4.1.9.9.187.1.3.2',
  ciscoBgp4NotificationPrefix => '1.3.6.1.4.1.9.9.187.2',
  ciscoBgp4MIBConformance => '1.3.6.1.4.1.9.9.187.3',
  ciscoBgp4MIBCompliances => '1.3.6.1.4.1.9.9.187.3.1',
  ciscoBgp4MIBGroups => '1.3.6.1.4.1.9.9.187.3.2',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'CISCO-BGP4-MIB'} = {
  cbgpPeerCapCode => {
    '1' => 'multiProtocol',
    '2' => 'routeRefresh',
    '64' => 'gracefulRestart',
    '128' => 'routeRefreshOld',
  },
  cbgpPeer2State => {
    '1' => 'idle',
    '2' => 'connect',
    '3' => 'active',
    '4' => 'opensent',
    '5' => 'openconfirm',
    '6' => 'established',
  },
  CbgpSafi => {
    '1' => 'unicast',
    '2' => 'multicast',
    '3' => 'unicastAndMulticast',
    '128' => 'vpn',
  },
  cbgpRouteOrigin => {
    '1' => 'igp',
    '2' => 'egp',
    '3' => 'incomplete',
  },
  cbgpPeer2CapCode => {
    '1' => 'multiProtocol',
    '2' => 'routeRefresh',
    '64' => 'gracefulRestart',
    '65' => 'fourByteAs',
    '69' => 'addPath',
    '128' => 'routeRefreshOld',
  },
  cbgpPeerPrevState => {
    '0' => 'none',
    '1' => 'idle',
    '2' => 'connect',
    '3' => 'active',
    '4' => 'opensent',
    '5' => 'openconfirm',
    '6' => 'established',
  },
  cbgpRouteAtomicAggregate => {
    '1' => 'lessSpecificRouteNotSelected',
    '2' => 'lessSpecificRouteSelected',
  },
  cbgpPeer2AdminStatus => {
    '1' => 'stop',
    '2' => 'start',
  },
  cbgpPeer2PrevState => {
    '0' => 'none',
    '1' => 'idle',
    '2' => 'connect',
    '3' => 'active',
    '4' => 'opensent',
    '5' => 'openconfirm',
    '6' => 'established',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOCCMMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCO-CCM-MIB'} = {
  url => '',
  name => 'CISCO-CCM-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCO-CCM-MIB'} = {
  'org' => '1.3',
  'dod' => '1.3.6',
  'internet' => '1.3.6.1',
  'directory' => '1.3.6.1.1',
  'mgmt' => '1.3.6.1.2',
  'experimental' => '1.3.6.1.3',
  'private' => '1.3.6.1.4',
  'enterprises' => '1.3.6.1.4.1',
  'cisco' => '1.3.6.1.4.1.9',
  'ciscoMgmt' => '1.3.6.1.4.1.9.9',
  'ciscoCcmMIB' => '1.3.6.1.4.1.9.9.156',
  'ciscoCcmMIBObjects' => '1.3.6.1.4.1.9.9.156.1',
  'ccmGeneralInfo' => '1.3.6.1.4.1.9.9.156.1.1',
  'ccmGroupTable' => '1.3.6.1.4.1.9.9.156.1.1.1',
  'ccmGroupEntry' => '1.3.6.1.4.1.9.9.156.1.1.1.1',
  'ccmGroupIndex' => '1.3.6.1.4.1.9.9.156.1.1.1.1.1',
  'ccmGroupName' => '1.3.6.1.4.1.9.9.156.1.1.1.1.2',
  'ccmGroupTftpDefault' => '1.3.6.1.4.1.9.9.156.1.1.1.1.3',
  'ccmTable' => '1.3.6.1.4.1.9.9.156.1.1.2',
  'ccmEntry' => '1.3.6.1.4.1.9.9.156.1.1.2.1',
  'ccmIndex' => '1.3.6.1.4.1.9.9.156.1.1.2.1.1',
  'ccmName' => '1.3.6.1.4.1.9.9.156.1.1.2.1.2',
  'ccmDescription' => '1.3.6.1.4.1.9.9.156.1.1.2.1.3',
  'ccmVersion' => '1.3.6.1.4.1.9.9.156.1.1.2.1.4',
  'ccmStatus' => '1.3.6.1.4.1.9.9.156.1.1.2.1.5',
  'ccmStatusDefinition' => {
    '1' => 'unknown',
    '2' => 'up',
    '3' => 'down',
  },
  'ccmInetAddressType' => '1.3.6.1.4.1.9.9.156.1.1.2.1.6',
  'ccmInetAddress' => '1.3.6.1.4.1.9.9.156.1.1.2.1.7',
  'ccmClusterId' => '1.3.6.1.4.1.9.9.156.1.1.2.1.8',
  'ccmInetAddress2Type' => '1.3.6.1.4.1.9.9.156.1.1.2.1.9',
  'ccmInetAddress2' => '1.3.6.1.4.1.9.9.156.1.1.2.1.10',
  'ccmGroupMappingTable' => '1.3.6.1.4.1.9.9.156.1.1.3',
  'ccmGroupMappingEntry' => '1.3.6.1.4.1.9.9.156.1.1.3.1',
  'ccmCMGroupMappingCMPriority' => '1.3.6.1.4.1.9.9.156.1.1.3.1.1',
  'ccmRegionTable' => '1.3.6.1.4.1.9.9.156.1.1.4',
  'ccmRegionEntry' => '1.3.6.1.4.1.9.9.156.1.1.4.1',
  'ccmRegionIndex' => '1.3.6.1.4.1.9.9.156.1.1.4.1.1',
  'ccmRegionName' => '1.3.6.1.4.1.9.9.156.1.1.4.1.2',
  'ccmRegionPairTable' => '1.3.6.1.4.1.9.9.156.1.1.5',
  'ccmRegionPairEntry' => '1.3.6.1.4.1.9.9.156.1.1.5.1',
  'ccmRegionSrcIndex' => '1.3.6.1.4.1.9.9.156.1.1.5.1.1',
  'ccmRegionDestIndex' => '1.3.6.1.4.1.9.9.156.1.1.5.1.2',
  'ccmRegionAvailableBandWidth' => '1.3.6.1.4.1.9.9.156.1.1.5.1.3',
  'ccmTimeZoneTable' => '1.3.6.1.4.1.9.9.156.1.1.6',
  'ccmTimeZoneEntry' => '1.3.6.1.4.1.9.9.156.1.1.6.1',
  'ccmTimeZoneIndex' => '1.3.6.1.4.1.9.9.156.1.1.6.1.1',
  'ccmTimeZoneName' => '1.3.6.1.4.1.9.9.156.1.1.6.1.2',
  'ccmTimeZoneOffset' => '1.3.6.1.4.1.9.9.156.1.1.6.1.3',
  'ccmTimeZoneOffsetHours' => '1.3.6.1.4.1.9.9.156.1.1.6.1.4',
  'ccmTimeZoneOffsetMinutes' => '1.3.6.1.4.1.9.9.156.1.1.6.1.5',
  'ccmDevicePoolTable' => '1.3.6.1.4.1.9.9.156.1.1.7',
  'ccmDevicePoolEntry' => '1.3.6.1.4.1.9.9.156.1.1.7.1',
  'ccmDevicePoolIndex' => '1.3.6.1.4.1.9.9.156.1.1.7.1.1',
  'ccmDevicePoolName' => '1.3.6.1.4.1.9.9.156.1.1.7.1.2',
  'ccmDevicePoolRegionIndex' => '1.3.6.1.4.1.9.9.156.1.1.7.1.3',
  'ccmDevicePoolTimeZoneIndex' => '1.3.6.1.4.1.9.9.156.1.1.7.1.4',
  'ccmDevicePoolGroupIndex' => '1.3.6.1.4.1.9.9.156.1.1.7.1.5',
  'ccmProductTypeTable' => '1.3.6.1.4.1.9.9.156.1.1.8',
  'ccmProductTypeEntry' => '1.3.6.1.4.1.9.9.156.1.1.8.1',
  'ccmProductTypeIndex' => '1.3.6.1.4.1.9.9.156.1.1.8.1.1',
  'ccmProductType' => '1.3.6.1.4.1.9.9.156.1.1.8.1.2',
  'ccmProductName' => '1.3.6.1.4.1.9.9.156.1.1.8.1.3',
  'ccmProductCategory' => '1.3.6.1.4.1.9.9.156.1.1.8.1.4',
  'ccmPhoneInfo' => '1.3.6.1.4.1.9.9.156.1.2',
  'ccmPhoneTable' => '1.3.6.1.4.1.9.9.156.1.2.1',
  'ccmPhoneEntry' => '1.3.6.1.4.1.9.9.156.1.2.1.1',
  'ccmPhoneIndex' => '1.3.6.1.4.1.9.9.156.1.2.1.1.1',
  'ccmPhonePhysicalAddress' => '1.3.6.1.4.1.9.9.156.1.2.1.1.2',
  'ccmPhoneType' => '1.3.6.1.4.1.9.9.156.1.2.1.1.3',
  'ccmPhoneDescription' => '1.3.6.1.4.1.9.9.156.1.2.1.1.4',
  'ccmPhoneUserName' => '1.3.6.1.4.1.9.9.156.1.2.1.1.5',
  'ccmPhoneIpAddress' => '1.3.6.1.4.1.9.9.156.1.2.1.1.6',
  'ccmPhoneStatus' => '1.3.6.1.4.1.9.9.156.1.2.1.1.7',
  'ccmPhoneTimeLastRegistered' => '1.3.6.1.4.1.9.9.156.1.2.1.1.8',
  'ccmPhoneE911Location' => '1.3.6.1.4.1.9.9.156.1.2.1.1.9',
  'ccmPhoneLoadID' => '1.3.6.1.4.1.9.9.156.1.2.1.1.10',
  'ccmPhoneLastError' => '1.3.6.1.4.1.9.9.156.1.2.1.1.11',
  'ccmPhoneTimeLastError' => '1.3.6.1.4.1.9.9.156.1.2.1.1.12',
  'ccmPhoneDevicePoolIndex' => '1.3.6.1.4.1.9.9.156.1.2.1.1.13',
  'ccmPhoneInetAddressType' => '1.3.6.1.4.1.9.9.156.1.2.1.1.14',
  'ccmPhoneInetAddress' => '1.3.6.1.4.1.9.9.156.1.2.1.1.15',
  'ccmPhoneStatusReason' => '1.3.6.1.4.1.9.9.156.1.2.1.1.16',
  'ccmPhoneTimeLastStatusUpdt' => '1.3.6.1.4.1.9.9.156.1.2.1.1.17',
  'ccmPhoneProductTypeIndex' => '1.3.6.1.4.1.9.9.156.1.2.1.1.18',
  'ccmPhoneProtocol' => '1.3.6.1.4.1.9.9.156.1.2.1.1.19',
  'ccmPhoneName' => '1.3.6.1.4.1.9.9.156.1.2.1.1.20',
  'ccmPhoneInetAddressIPv4' => '1.3.6.1.4.1.9.9.156.1.2.1.1.21',
  'ccmPhoneInetAddressIPv6' => '1.3.6.1.4.1.9.9.156.1.2.1.1.22',
  'ccmPhoneIPv4Attribute' => '1.3.6.1.4.1.9.9.156.1.2.1.1.23',
  'ccmPhoneIPv6Attribute' => '1.3.6.1.4.1.9.9.156.1.2.1.1.24',
  'ccmPhoneActiveLoadID' => '1.3.6.1.4.1.9.9.156.1.2.1.1.25',
  'ccmPhoneUnregReason' => '1.3.6.1.4.1.9.9.156.1.2.1.1.26',
  'ccmPhoneRegFailReason' => '1.3.6.1.4.1.9.9.156.1.2.1.1.27',
  'ccmPhoneExtensionTable' => '1.3.6.1.4.1.9.9.156.1.2.2',
  'ccmPhoneExtensionEntry' => '1.3.6.1.4.1.9.9.156.1.2.2.1',
  'ccmPhoneExtensionIndex' => '1.3.6.1.4.1.9.9.156.1.2.2.1.1',
  'ccmPhoneExtension' => '1.3.6.1.4.1.9.9.156.1.2.2.1.2',
  'ccmPhoneExtensionIpAddress' => '1.3.6.1.4.1.9.9.156.1.2.2.1.3',
  'ccmPhoneExtensionMultiLines' => '1.3.6.1.4.1.9.9.156.1.2.2.1.4',
  'ccmPhoneExtensionInetAddressType' => '1.3.6.1.4.1.9.9.156.1.2.2.1.5',
  'ccmPhoneExtensionInetAddress' => '1.3.6.1.4.1.9.9.156.1.2.2.1.6',
  'ccmPhoneFailedTable' => '1.3.6.1.4.1.9.9.156.1.2.3',
  'ccmPhoneFailedEntry' => '1.3.6.1.4.1.9.9.156.1.2.3.1',
  'ccmPhoneFailedIndex' => '1.3.6.1.4.1.9.9.156.1.2.3.1.1',
  'ccmPhoneFailedTime' => '1.3.6.1.4.1.9.9.156.1.2.3.1.2',
  'ccmPhoneFailedName' => '1.3.6.1.4.1.9.9.156.1.2.3.1.3',
  'ccmPhoneFailedInetAddressType' => '1.3.6.1.4.1.9.9.156.1.2.3.1.4',
  'ccmPhoneFailedInetAddress' => '1.3.6.1.4.1.9.9.156.1.2.3.1.5',
  'ccmPhoneFailCauseCode' => '1.3.6.1.4.1.9.9.156.1.2.3.1.6',
  'ccmPhoneFailedMacAddress' => '1.3.6.1.4.1.9.9.156.1.2.3.1.7',
  'ccmPhoneFailedInetAddressIPv4' => '1.3.6.1.4.1.9.9.156.1.2.3.1.8',
  'ccmPhoneFailedInetAddressIPv6' => '1.3.6.1.4.1.9.9.156.1.2.3.1.9',
  'ccmPhoneFailedIPv4Attribute' => '1.3.6.1.4.1.9.9.156.1.2.3.1.10',
  'ccmPhoneFailedIPv6Attribute' => '1.3.6.1.4.1.9.9.156.1.2.3.1.11',
  'ccmPhoneFailedRegFailReason' => '1.3.6.1.4.1.9.9.156.1.2.3.1.12',
  'ccmPhoneStatusUpdateTable' => '1.3.6.1.4.1.9.9.156.1.2.4',
  'ccmPhoneStatusUpdateEntry' => '1.3.6.1.4.1.9.9.156.1.2.4.1',
  'ccmPhoneStatusUpdateIndex' => '1.3.6.1.4.1.9.9.156.1.2.4.1.1',
  'ccmPhoneStatusPhoneIndex' => '1.3.6.1.4.1.9.9.156.1.2.4.1.2',
  'ccmPhoneStatusUpdateTime' => '1.3.6.1.4.1.9.9.156.1.2.4.1.3',
  'ccmPhoneStatusUpdateType' => '1.3.6.1.4.1.9.9.156.1.2.4.1.4',
  'ccmPhoneStatusUpdateReason' => '1.3.6.1.4.1.9.9.156.1.2.4.1.5',
  'ccmPhoneStatusUnregReason' => '1.3.6.1.4.1.9.9.156.1.2.4.1.6',
  'ccmPhoneStatusRegFailReason' => '1.3.6.1.4.1.9.9.156.1.2.4.1.7',
  'ccmPhoneExtnTable' => '1.3.6.1.4.1.9.9.156.1.2.5',
  'ccmPhoneExtnEntry' => '1.3.6.1.4.1.9.9.156.1.2.5.1',
  'ccmPhoneExtnIndex' => '1.3.6.1.4.1.9.9.156.1.2.5.1.1',
  'ccmPhoneExtn' => '1.3.6.1.4.1.9.9.156.1.2.5.1.2',
  'ccmPhoneExtnMultiLines' => '1.3.6.1.4.1.9.9.156.1.2.5.1.3',
  'ccmPhoneExtnInetAddressType' => '1.3.6.1.4.1.9.9.156.1.2.5.1.4',
  'ccmPhoneExtnInetAddress' => '1.3.6.1.4.1.9.9.156.1.2.5.1.5',
  'ccmPhoneExtnStatus' => '1.3.6.1.4.1.9.9.156.1.2.5.1.6',
  'ccmGatewayInfo' => '1.3.6.1.4.1.9.9.156.1.3',
  'ccmGatewayTable' => '1.3.6.1.4.1.9.9.156.1.3.1',
  'ccmGatewayEntry' => '1.3.6.1.4.1.9.9.156.1.3.1.1',
  'ccmGatewayIndex' => '1.3.6.1.4.1.9.9.156.1.3.1.1.1',
  'ccmGatewayName' => '1.3.6.1.4.1.9.9.156.1.3.1.1.2',
  'ccmGatewayType' => '1.3.6.1.4.1.9.9.156.1.3.1.1.3',
  'ccmGatewayDescription' => '1.3.6.1.4.1.9.9.156.1.3.1.1.4',
  'ccmGatewayStatus' => '1.3.6.1.4.1.9.9.156.1.3.1.1.5',
  'ccmGatewayDevicePoolIndex' => '1.3.6.1.4.1.9.9.156.1.3.1.1.6',
  'ccmGatewayInetAddressType' => '1.3.6.1.4.1.9.9.156.1.3.1.1.7',
  'ccmGatewayInetAddress' => '1.3.6.1.4.1.9.9.156.1.3.1.1.8',
  'ccmGatewayProductId' => '1.3.6.1.4.1.9.9.156.1.3.1.1.9',
  'ccmGatewayStatusReason' => '1.3.6.1.4.1.9.9.156.1.3.1.1.10',
  'ccmGatewayTimeLastStatusUpdt' => '1.3.6.1.4.1.9.9.156.1.3.1.1.11',
  'ccmGatewayTimeLastRegistered' => '1.3.6.1.4.1.9.9.156.1.3.1.1.12',
  'ccmGatewayDChannelStatus' => '1.3.6.1.4.1.9.9.156.1.3.1.1.13',
  'ccmGatewayDChannelNumber' => '1.3.6.1.4.1.9.9.156.1.3.1.1.14',
  'ccmGatewayProductTypeIndex' => '1.3.6.1.4.1.9.9.156.1.3.1.1.15',
  'ccmGatewayUnregReason' => '1.3.6.1.4.1.9.9.156.1.3.1.1.16',
  'ccmGatewayRegFailReason' => '1.3.6.1.4.1.9.9.156.1.3.1.1.17',
  'ccmGatewayTrunkInfo' => '1.3.6.1.4.1.9.9.156.1.4',
  'ccmGatewayTrunkTable' => '1.3.6.1.4.1.9.9.156.1.4.1',
  'ccmGatewayTrunkEntry' => '1.3.6.1.4.1.9.9.156.1.4.1.1',
  'ccmGatewayTrunkIndex' => '1.3.6.1.4.1.9.9.156.1.4.1.1.1',
  'ccmGatewayTrunkType' => '1.3.6.1.4.1.9.9.156.1.4.1.1.2',
  'ccmGatewayTrunkName' => '1.3.6.1.4.1.9.9.156.1.4.1.1.3',
  'ccmTrunkGatewayIndex' => '1.3.6.1.4.1.9.9.156.1.4.1.1.4',
  'ccmGatewayTrunkStatus' => '1.3.6.1.4.1.9.9.156.1.4.1.1.5',
  'ccmGlobalInfo' => '1.3.6.1.4.1.9.9.156.1.5',
  'ccmActivePhones' => '1.3.6.1.4.1.9.9.156.1.5.1',
  'ccmInActivePhones' => '1.3.6.1.4.1.9.9.156.1.5.2',
  'ccmActiveGateways' => '1.3.6.1.4.1.9.9.156.1.5.3',
  'ccmInActiveGateways' => '1.3.6.1.4.1.9.9.156.1.5.4',
  'ccmRegisteredPhones' => '1.3.6.1.4.1.9.9.156.1.5.5',
  'ccmUnregisteredPhones' => '1.3.6.1.4.1.9.9.156.1.5.6',
  'ccmRejectedPhones' => '1.3.6.1.4.1.9.9.156.1.5.7',
  'ccmRegisteredGateways' => '1.3.6.1.4.1.9.9.156.1.5.8',
  'ccmUnregisteredGateways' => '1.3.6.1.4.1.9.9.156.1.5.9',
  'ccmRejectedGateways' => '1.3.6.1.4.1.9.9.156.1.5.10',
  'ccmRegisteredMediaDevices' => '1.3.6.1.4.1.9.9.156.1.5.11',
  'ccmUnregisteredMediaDevices' => '1.3.6.1.4.1.9.9.156.1.5.12',
  'ccmRejectedMediaDevices' => '1.3.6.1.4.1.9.9.156.1.5.13',
  'ccmRegisteredCTIDevices' => '1.3.6.1.4.1.9.9.156.1.5.14',
  'ccmUnregisteredCTIDevices' => '1.3.6.1.4.1.9.9.156.1.5.15',
  'ccmRejectedCTIDevices' => '1.3.6.1.4.1.9.9.156.1.5.16',
  'ccmRegisteredVoiceMailDevices' => '1.3.6.1.4.1.9.9.156.1.5.17',
  'ccmUnregisteredVoiceMailDevices' => '1.3.6.1.4.1.9.9.156.1.5.18',
  'ccmRejectedVoiceMailDevices' => '1.3.6.1.4.1.9.9.156.1.5.19',
  'ccmCallManagerStartTime' => '1.3.6.1.4.1.9.9.156.1.5.20',
  'ccmPhoneTableStateId' => '1.3.6.1.4.1.9.9.156.1.5.21',
  'ccmPhoneExtensionTableStateId' => '1.3.6.1.4.1.9.9.156.1.5.22',
  'ccmPhoneStatusUpdateTableStateId' => '1.3.6.1.4.1.9.9.156.1.5.23',
  'ccmGatewayTableStateId' => '1.3.6.1.4.1.9.9.156.1.5.24',
  'ccmCTIDeviceTableStateId' => '1.3.6.1.4.1.9.9.156.1.5.25',
  'ccmCTIDeviceDirNumTableStateId' => '1.3.6.1.4.1.9.9.156.1.5.26',
  'ccmPhStatUpdtTblLastAddedIndex' => '1.3.6.1.4.1.9.9.156.1.5.27',
  'ccmPhFailedTblLastAddedIndex' => '1.3.6.1.4.1.9.9.156.1.5.28',
  'ccmSystemVersion' => '1.3.6.1.4.1.9.9.156.1.5.29',
  'ccmInstallationId' => '1.3.6.1.4.1.9.9.156.1.5.30',
  'ccmPartiallyRegisteredPhones' => '1.3.6.1.4.1.9.9.156.1.5.31',
  'ccmH323TableEntries' => '1.3.6.1.4.1.9.9.156.1.5.32',
  'ccmSIPTableEntries' => '1.3.6.1.4.1.9.9.156.1.5.33',
  'ccmMediaDeviceInfo' => '1.3.6.1.4.1.9.9.156.1.6',
  'ccmMediaDeviceTable' => '1.3.6.1.4.1.9.9.156.1.6.1',
  'ccmMediaDeviceEntry' => '1.3.6.1.4.1.9.9.156.1.6.1.1',
  'ccmMediaDeviceIndex' => '1.3.6.1.4.1.9.9.156.1.6.1.1.1',
  'ccmMediaDeviceName' => '1.3.6.1.4.1.9.9.156.1.6.1.1.2',
  'ccmMediaDeviceType' => '1.3.6.1.4.1.9.9.156.1.6.1.1.3',
  'ccmMediaDeviceDescription' => '1.3.6.1.4.1.9.9.156.1.6.1.1.4',
  'ccmMediaDeviceStatus' => '1.3.6.1.4.1.9.9.156.1.6.1.1.5',
  'ccmMediaDeviceDevicePoolIndex' => '1.3.6.1.4.1.9.9.156.1.6.1.1.6',
  'ccmMediaDeviceInetAddressType' => '1.3.6.1.4.1.9.9.156.1.6.1.1.7',
  'ccmMediaDeviceInetAddress' => '1.3.6.1.4.1.9.9.156.1.6.1.1.8',
  'ccmMediaDeviceStatusReason' => '1.3.6.1.4.1.9.9.156.1.6.1.1.9',
  'ccmMediaDeviceTimeLastStatusUpdt' => '1.3.6.1.4.1.9.9.156.1.6.1.1.10',
  'ccmMediaDeviceTimeLastRegistered' => '1.3.6.1.4.1.9.9.156.1.6.1.1.11',
  'ccmMediaDeviceProductTypeIndex' => '1.3.6.1.4.1.9.9.156.1.6.1.1.12',
  'ccmMediaDeviceInetAddressIPv4' => '1.3.6.1.4.1.9.9.156.1.6.1.1.13',
  'ccmMediaDeviceInetAddressIPv6' => '1.3.6.1.4.1.9.9.156.1.6.1.1.14',
  'ccmMediaDeviceUnregReason' => '1.3.6.1.4.1.9.9.156.1.6.1.1.15',
  'ccmMediaDeviceRegFailReason' => '1.3.6.1.4.1.9.9.156.1.6.1.1.16',
  'ccmGatekeeperInfo' => '1.3.6.1.4.1.9.9.156.1.7',
  'ccmGatekeeperTable' => '1.3.6.1.4.1.9.9.156.1.7.1',
  'ccmGatekeeperEntry' => '1.3.6.1.4.1.9.9.156.1.7.1.1',
  'ccmGatekeeperIndex' => '1.3.6.1.4.1.9.9.156.1.7.1.1.1',
  'ccmGatekeeperName' => '1.3.6.1.4.1.9.9.156.1.7.1.1.2',
  'ccmGatekeeperType' => '1.3.6.1.4.1.9.9.156.1.7.1.1.3',
  'ccmGatekeeperDescription' => '1.3.6.1.4.1.9.9.156.1.7.1.1.4',
  'ccmGatekeeperStatus' => '1.3.6.1.4.1.9.9.156.1.7.1.1.5',
  'ccmGatekeeperDevicePoolIndex' => '1.3.6.1.4.1.9.9.156.1.7.1.1.6',
  'ccmGatekeeperInetAddressType' => '1.3.6.1.4.1.9.9.156.1.7.1.1.7',
  'ccmGatekeeperInetAddress' => '1.3.6.1.4.1.9.9.156.1.7.1.1.8',
  'ccmCTIDeviceInfo' => '1.3.6.1.4.1.9.9.156.1.8',
  'ccmCTIDeviceTable' => '1.3.6.1.4.1.9.9.156.1.8.1',
  'ccmCTIDeviceEntry' => '1.3.6.1.4.1.9.9.156.1.8.1.1',
  'ccmCTIDeviceIndex' => '1.3.6.1.4.1.9.9.156.1.8.1.1.1',
  'ccmCTIDeviceName' => '1.3.6.1.4.1.9.9.156.1.8.1.1.2',
  'ccmCTIDeviceType' => '1.3.6.1.4.1.9.9.156.1.8.1.1.3',
  'ccmCTIDeviceDescription' => '1.3.6.1.4.1.9.9.156.1.8.1.1.4',
  'ccmCTIDeviceStatus' => '1.3.6.1.4.1.9.9.156.1.8.1.1.5',
  'ccmCTIDevicePoolIndex' => '1.3.6.1.4.1.9.9.156.1.8.1.1.6',
  'ccmCTIDeviceInetAddressType' => '1.3.6.1.4.1.9.9.156.1.8.1.1.7',
  'ccmCTIDeviceInetAddress' => '1.3.6.1.4.1.9.9.156.1.8.1.1.8',
  'ccmCTIDeviceAppInfo' => '1.3.6.1.4.1.9.9.156.1.8.1.1.9',
  'ccmCTIDeviceStatusReason' => '1.3.6.1.4.1.9.9.156.1.8.1.1.10',
  'ccmCTIDeviceTimeLastStatusUpdt' => '1.3.6.1.4.1.9.9.156.1.8.1.1.11',
  'ccmCTIDeviceTimeLastRegistered' => '1.3.6.1.4.1.9.9.156.1.8.1.1.12',
  'ccmCTIDeviceProductTypeIndex' => '1.3.6.1.4.1.9.9.156.1.8.1.1.13',
  'ccmCTIDeviceInetAddressIPv4' => '1.3.6.1.4.1.9.9.156.1.8.1.1.14',
  'ccmCTIDeviceInetAddressIPv6' => '1.3.6.1.4.1.9.9.156.1.8.1.1.15',
  'ccmCTIDeviceUnregReason' => '1.3.6.1.4.1.9.9.156.1.8.1.1.16',
  'ccmCTIDeviceRegFailReason' => '1.3.6.1.4.1.9.9.156.1.8.1.1.17',
  'ccmCTIDeviceDirNumTable' => '1.3.6.1.4.1.9.9.156.1.8.2',
  'ccmCTIDeviceDirNumEntry' => '1.3.6.1.4.1.9.9.156.1.8.2.1',
  'ccmCTIDeviceDirNumIndex' => '1.3.6.1.4.1.9.9.156.1.8.2.1.1',
  'ccmCTIDeviceDirNum' => '1.3.6.1.4.1.9.9.156.1.8.2.1.2',
  'ccmAlarmConfigInfo' => '1.3.6.1.4.1.9.9.156.1.9',
  'ccmCallManagerAlarmEnable' => '1.3.6.1.4.1.9.9.156.1.9.1',
  'ccmPhoneFailedAlarmInterval' => '1.3.6.1.4.1.9.9.156.1.9.2',
  'ccmPhoneFailedStorePeriod' => '1.3.6.1.4.1.9.9.156.1.9.3',
  'ccmPhoneStatusUpdateAlarmInterv' => '1.3.6.1.4.1.9.9.156.1.9.4',
  'ccmPhoneStatusUpdateStorePeriod' => '1.3.6.1.4.1.9.9.156.1.9.5',
  'ccmGatewayAlarmEnable' => '1.3.6.1.4.1.9.9.156.1.9.6',
  'ccmMaliciousCallAlarmEnable' => '1.3.6.1.4.1.9.9.156.1.9.7',
  'ccmNotificationsInfo' => '1.3.6.1.4.1.9.9.156.1.10',
  'ccmAlarmSeverity' => '1.3.6.1.4.1.9.9.156.1.10.1',
  'ccmFailCauseCode' => '1.3.6.1.4.1.9.9.156.1.10.2',
  'ccmPhoneFailures' => '1.3.6.1.4.1.9.9.156.1.10.3',
  'ccmPhoneUpdates' => '1.3.6.1.4.1.9.9.156.1.10.4',
  'ccmGatewayFailCauseCode' => '1.3.6.1.4.1.9.9.156.1.10.5',
  'ccmMediaResourceType' => '1.3.6.1.4.1.9.9.156.1.10.6',
  'ccmMediaResourceListName' => '1.3.6.1.4.1.9.9.156.1.10.7',
  'ccmRouteListName' => '1.3.6.1.4.1.9.9.156.1.10.8',
  'ccmGatewayPhysIfIndex' => '1.3.6.1.4.1.9.9.156.1.10.9',
  'ccmGatewayPhysIfL2Status' => '1.3.6.1.4.1.9.9.156.1.10.10',
  'ccmMaliCallCalledPartyName' => '1.3.6.1.4.1.9.9.156.1.10.11',
  'ccmMaliCallCalledPartyNumber' => '1.3.6.1.4.1.9.9.156.1.10.12',
  'ccmMaliCallCalledDeviceName' => '1.3.6.1.4.1.9.9.156.1.10.13',
  'ccmMaliCallCallingPartyName' => '1.3.6.1.4.1.9.9.156.1.10.14',
  'ccmMaliCallCallingPartyNumber' => '1.3.6.1.4.1.9.9.156.1.10.15',
  'ccmMaliCallCallingDeviceName' => '1.3.6.1.4.1.9.9.156.1.10.16',
  'ccmMaliCallTime' => '1.3.6.1.4.1.9.9.156.1.10.17',
  'ccmQualityRprtSourceDevName' => '1.3.6.1.4.1.9.9.156.1.10.18',
  'ccmQualityRprtClusterId' => '1.3.6.1.4.1.9.9.156.1.10.19',
  'ccmQualityRprtCategory' => '1.3.6.1.4.1.9.9.156.1.10.20',
  'ccmQualityRprtReasonCode' => '1.3.6.1.4.1.9.9.156.1.10.21',
  'ccmQualityRprtTime' => '1.3.6.1.4.1.9.9.156.1.10.22',
  'ccmTLSDevName' => '1.3.6.1.4.1.9.9.156.1.10.23',
  'ccmTLSDevInetAddressType' => '1.3.6.1.4.1.9.9.156.1.10.24',
  'ccmTLSDevInetAddress' => '1.3.6.1.4.1.9.9.156.1.10.25',
  'ccmTLSConnFailTime' => '1.3.6.1.4.1.9.9.156.1.10.26',
  'ccmTLSConnectionFailReasonCode' => '1.3.6.1.4.1.9.9.156.1.10.27',
  'ccmGatewayRegFailCauseCode' => '1.3.6.1.4.1.9.9.156.1.10.28',
  'ccmH323DeviceInfo' => '1.3.6.1.4.1.9.9.156.1.11',
  'ccmH323DeviceTable' => '1.3.6.1.4.1.9.9.156.1.11.1',
  'ccmH323DeviceEntry' => '1.3.6.1.4.1.9.9.156.1.11.1.1',
  'ccmH323DevIndex' => '1.3.6.1.4.1.9.9.156.1.11.1.1.1',
  'ccmH323DevName' => '1.3.6.1.4.1.9.9.156.1.11.1.1.2',
  'ccmH323DevProductId' => '1.3.6.1.4.1.9.9.156.1.11.1.1.3',
  'ccmH323DevDescription' => '1.3.6.1.4.1.9.9.156.1.11.1.1.4',
  'ccmH323DevInetAddressType' => '1.3.6.1.4.1.9.9.156.1.11.1.1.5',
  'ccmH323DevInetAddress' => '1.3.6.1.4.1.9.9.156.1.11.1.1.6',
  'ccmH323DevCnfgGKInetAddressType' => '1.3.6.1.4.1.9.9.156.1.11.1.1.7',
  'ccmH323DevCnfgGKInetAddress' => '1.3.6.1.4.1.9.9.156.1.11.1.1.8',
  'ccmH323DevAltGK1InetAddressType' => '1.3.6.1.4.1.9.9.156.1.11.1.1.9',
  'ccmH323DevAltGK1InetAddress' => '1.3.6.1.4.1.9.9.156.1.11.1.1.10',
  'ccmH323DevAltGK2InetAddressType' => '1.3.6.1.4.1.9.9.156.1.11.1.1.11',
  'ccmH323DevAltGK2InetAddress' => '1.3.6.1.4.1.9.9.156.1.11.1.1.12',
  'ccmH323DevAltGK3InetAddressType' => '1.3.6.1.4.1.9.9.156.1.11.1.1.13',
  'ccmH323DevAltGK3InetAddress' => '1.3.6.1.4.1.9.9.156.1.11.1.1.14',
  'ccmH323DevAltGK4InetAddressType' => '1.3.6.1.4.1.9.9.156.1.11.1.1.15',
  'ccmH323DevAltGK4InetAddress' => '1.3.6.1.4.1.9.9.156.1.11.1.1.16',
  'ccmH323DevAltGK5InetAddressType' => '1.3.6.1.4.1.9.9.156.1.11.1.1.17',
  'ccmH323DevAltGK5InetAddress' => '1.3.6.1.4.1.9.9.156.1.11.1.1.18',
  'ccmH323DevActGKInetAddressType' => '1.3.6.1.4.1.9.9.156.1.11.1.1.19',
  'ccmH323DevActGKInetAddress' => '1.3.6.1.4.1.9.9.156.1.11.1.1.20',
  'ccmH323DevStatus' => '1.3.6.1.4.1.9.9.156.1.11.1.1.21',
  'ccmH323DevStatusReason' => '1.3.6.1.4.1.9.9.156.1.11.1.1.22',
  'ccmH323DevTimeLastStatusUpdt' => '1.3.6.1.4.1.9.9.156.1.11.1.1.23',
  'ccmH323DevTimeLastRegistered' => '1.3.6.1.4.1.9.9.156.1.11.1.1.24',
  'ccmH323DevRmtCM1InetAddressType' => '1.3.6.1.4.1.9.9.156.1.11.1.1.25',
  'ccmH323DevRmtCM1InetAddress' => '1.3.6.1.4.1.9.9.156.1.11.1.1.26',
  'ccmH323DevRmtCM2InetAddressType' => '1.3.6.1.4.1.9.9.156.1.11.1.1.27',
  'ccmH323DevRmtCM2InetAddress' => '1.3.6.1.4.1.9.9.156.1.11.1.1.28',
  'ccmH323DevRmtCM3InetAddressType' => '1.3.6.1.4.1.9.9.156.1.11.1.1.29',
  'ccmH323DevRmtCM3InetAddress' => '1.3.6.1.4.1.9.9.156.1.11.1.1.30',
  'ccmH323DevProductTypeIndex' => '1.3.6.1.4.1.9.9.156.1.11.1.1.31',
  'ccmH323DevUnregReason' => '1.3.6.1.4.1.9.9.156.1.11.1.1.32',
  'ccmH323DevRegFailReason' => '1.3.6.1.4.1.9.9.156.1.11.1.1.33',
  'ccmVoiceMailDeviceInfo' => '1.3.6.1.4.1.9.9.156.1.12',
  'ccmVoiceMailDeviceTable' => '1.3.6.1.4.1.9.9.156.1.12.1',
  'ccmVoiceMailDeviceEntry' => '1.3.6.1.4.1.9.9.156.1.12.1.1',
  'ccmVMailDevIndex' => '1.3.6.1.4.1.9.9.156.1.12.1.1.1',
  'ccmVMailDevName' => '1.3.6.1.4.1.9.9.156.1.12.1.1.2',
  'ccmVMailDevProductId' => '1.3.6.1.4.1.9.9.156.1.12.1.1.3',
  'ccmVMailDevDescription' => '1.3.6.1.4.1.9.9.156.1.12.1.1.4',
  'ccmVMailDevStatus' => '1.3.6.1.4.1.9.9.156.1.12.1.1.5',
  'ccmVMailDevInetAddressType' => '1.3.6.1.4.1.9.9.156.1.12.1.1.6',
  'ccmVMailDevInetAddress' => '1.3.6.1.4.1.9.9.156.1.12.1.1.7',
  'ccmVMailDevStatusReason' => '1.3.6.1.4.1.9.9.156.1.12.1.1.8',
  'ccmVMailDevTimeLastStatusUpdt' => '1.3.6.1.4.1.9.9.156.1.12.1.1.9',
  'ccmVMailDevTimeLastRegistered' => '1.3.6.1.4.1.9.9.156.1.12.1.1.10',
  'ccmVMailDevProductTypeIndex' => '1.3.6.1.4.1.9.9.156.1.12.1.1.11',
  'ccmVMailDevUnregReason' => '1.3.6.1.4.1.9.9.156.1.12.1.1.12',
  'ccmVMailDevRegFailReason' => '1.3.6.1.4.1.9.9.156.1.12.1.1.13',
  'ccmVoiceMailDeviceDirNumTable' => '1.3.6.1.4.1.9.9.156.1.12.2',
  'ccmVoiceMailDeviceDirNumEntry' => '1.3.6.1.4.1.9.9.156.1.12.2.1',
  'ccmVMailDevDirNumIndex' => '1.3.6.1.4.1.9.9.156.1.12.2.1.1',
  'ccmVMailDevDirNum' => '1.3.6.1.4.1.9.9.156.1.12.2.1.2',
  'ccmQualityReportAlarmConfigInfo' => '1.3.6.1.4.1.9.9.156.1.13',
  'ccmQualityReportAlarmEnable' => '1.3.6.1.4.1.9.9.156.1.13.1',
  'ccmSIPDeviceInfo' => '1.3.6.1.4.1.9.9.156.1.14',
  'ccmSIPDeviceTable' => '1.3.6.1.4.1.9.9.156.1.14.1',
  'ccmSIPDeviceEntry' => '1.3.6.1.4.1.9.9.156.1.14.1.1',
  'ccmSIPDevIndex' => '1.3.6.1.4.1.9.9.156.1.14.1.1.1',
  'ccmSIPDevName' => '1.3.6.1.4.1.9.9.156.1.14.1.1.2',
  'ccmSIPDevProductTypeIndex' => '1.3.6.1.4.1.9.9.156.1.14.1.1.3',
  'ccmSIPDevDescription' => '1.3.6.1.4.1.9.9.156.1.14.1.1.4',
  'ccmSIPDevInetAddressType' => '1.3.6.1.4.1.9.9.156.1.14.1.1.5',
  'ccmSIPDevInetAddress' => '1.3.6.1.4.1.9.9.156.1.14.1.1.6',
  'ccmSIPInTransportProtocolType' => '1.3.6.1.4.1.9.9.156.1.14.1.1.7',
  'ccmSIPInPortNumber' => '1.3.6.1.4.1.9.9.156.1.14.1.1.8',
  'ccmSIPOutTransportProtocolType' => '1.3.6.1.4.1.9.9.156.1.14.1.1.9',
  'ccmSIPOutPortNumber' => '1.3.6.1.4.1.9.9.156.1.14.1.1.10',
  'ccmSIPDevInetAddressIPv4' => '1.3.6.1.4.1.9.9.156.1.14.1.1.11',
  'ccmSIPDevInetAddressIPv6' => '1.3.6.1.4.1.9.9.156.1.14.1.1.12',
  'ccmMIBNotificationPrefix' => '1.3.6.1.4.1.9.9.156.2',
  'ccmMIBNotifications' => '1.3.6.1.4.1.9.9.156.2',
  'ciscoCcmMIBConformance' => '1.3.6.1.4.1.9.9.156.3',
  'ciscoCcmMIBCompliances' => '1.3.6.1.4.1.9.9.156.3.1',
  'ciscoCcmMIBCompliance' => '1.3.6.1.4.1.9.9.156.3.1.1',
  'ciscoCcmMIBComplianceRev1' => '1.3.6.1.4.1.9.9.156.3.1.2',
  'ciscoCcmMIBComplianceRev2' => '1.3.6.1.4.1.9.9.156.3.1.3',
  'ciscoCcmMIBComplianceRev3' => '1.3.6.1.4.1.9.9.156.3.1.4',
  'ciscoCcmMIBComplianceRev4' => '1.3.6.1.4.1.9.9.156.3.1.5',
  'ciscoCcmMIBComplianceRev5' => '1.3.6.1.4.1.9.9.156.3.1.6',
  'ciscoCcmMIBComplianceRev6' => '1.3.6.1.4.1.9.9.156.3.1.7',
  'ciscoCcmMIBComplianceRev7' => '1.3.6.1.4.1.9.9.156.3.1.8',
  'ciscoCcmMIBGroups' => '1.3.6.1.4.1.9.9.156.3.2',
  'ccmInfoGroup' => '1.3.6.1.4.1.9.9.156.3.2.1',
  'ccmPhoneInfoGroup' => '1.3.6.1.4.1.9.9.156.3.2.2',
  'ccmGatewayInfoGroup' => '1.3.6.1.4.1.9.9.156.3.2.3',
  'ccmInfoGroupRev1' => '1.3.6.1.4.1.9.9.156.3.2.4',
  'ccmPhoneInfoGroupRev1' => '1.3.6.1.4.1.9.9.156.3.2.5',
  'ccmGatewayInfoGroupRev1' => '1.3.6.1.4.1.9.9.156.3.2.6',
  'ccmMediaDeviceInfoGroup' => '1.3.6.1.4.1.9.9.156.3.2.7',
  'ccmGatekeeperInfoGroup' => '1.3.6.1.4.1.9.9.156.3.2.8',
  'ccmCTIDeviceInfoGroup' => '1.3.6.1.4.1.9.9.156.3.2.9',
  'ccmNotificationsInfoGroup' => '1.3.6.1.4.1.9.9.156.3.2.10',
  'ccmNotificationsGroup' => '1.3.6.1.4.1.9.9.156.3.2.11',
  'ccmInfoGroupRev2' => '1.3.6.1.4.1.9.9.156.3.2.12',
  'ccmPhoneInfoGroupRev2' => '1.3.6.1.4.1.9.9.156.3.2.13',
  'ccmGatewayInfoGroupRev2' => '1.3.6.1.4.1.9.9.156.3.2.14',
  'ccmMediaDeviceInfoGroupRev1' => '1.3.6.1.4.1.9.9.156.3.2.15',
  'ccmCTIDeviceInfoGroupRev1' => '1.3.6.1.4.1.9.9.156.3.2.16',
  'ccmH323DeviceInfoGroup' => '1.3.6.1.4.1.9.9.156.3.2.17',
  'ccmVoiceMailDeviceInfoGroup' => '1.3.6.1.4.1.9.9.156.3.2.18',
  'ccmNotificationsInfoGroupRev1' => '1.3.6.1.4.1.9.9.156.3.2.19',
  'ccmInfoGroupRev3' => '1.3.6.1.4.1.9.9.156.3.2.20',
  'ccmNotificationsInfoGroupRev2' => '1.3.6.1.4.1.9.9.156.3.2.21',
  'ccmNotificationsGroupRev1' => '1.3.6.1.4.1.9.9.156.3.2.22',
  'ccmSIPDeviceInfoGroup' => '1.3.6.1.4.1.9.9.156.3.2.23',
  'ccmPhoneInfoGroupRev3' => '1.3.6.1.4.1.9.9.156.3.2.24',
  'ccmGatewayInfoGroupRev3' => '1.3.6.1.4.1.9.9.156.3.2.25',
  'ccmMediaDeviceInfoGroupRev2' => '1.3.6.1.4.1.9.9.156.3.2.26',
  'ccmCTIDeviceInfoGroupRev2' => '1.3.6.1.4.1.9.9.156.3.2.27',
  'ccmH323DeviceInfoGroupRev1' => '1.3.6.1.4.1.9.9.156.3.2.28',
  'ccmVoiceMailDeviceInfoGroupRev1' => '1.3.6.1.4.1.9.9.156.3.2.29',
  'ccmPhoneInfoGroupRev4' => '1.3.6.1.4.1.9.9.156.3.2.30',
  'ccmSIPDeviceInfoGroupRev1' => '1.3.6.1.4.1.9.9.156.3.2.31',
  'ccmNotificationsInfoGroupRev3' => '1.3.6.1.4.1.9.9.156.3.2.32',
  'ccmNotificationsGroupRev2' => '1.3.6.1.4.1.9.9.156.3.2.33',
  'ccmInfoGroupRev4' => '1.3.6.1.4.1.9.9.156.3.2.34',
  'ccmPhoneInfoGroupRev5' => '1.3.6.1.4.1.9.9.156.3.2.35',
  'ccmMediaDeviceInfoGroupRev3' => '1.3.6.1.4.1.9.9.156.3.2.36',
  'ccmSIPDeviceInfoGroupRev2' => '1.3.6.1.4.1.9.9.156.3.2.37',
  'ccmNotificationsInfoGroupRev4' => '1.3.6.1.4.1.9.9.156.3.2.38',
  'ccmH323DeviceInfoGroupRev2' => '1.3.6.1.4.1.9.9.156.3.2.39',
  'ccmCTIDeviceInfoGroupRev3' => '1.3.6.1.4.1.9.9.156.3.2.40',
  'ccmPhoneInfoGroupRev6' => '1.3.6.1.4.1.9.9.156.3.2.41',
  'ccmNotificationsInfoGroupRev5' => '1.3.6.1.4.1.9.9.156.3.2.42',
  'ccmGatewayInfoGroupRev4' => '1.3.6.1.4.1.9.9.156.3.2.43',
  'ccmMediaDeviceInfoGroupRev4' => '1.3.6.1.4.1.9.9.156.3.2.44',
  'ccmCTIDeviceInfoGroupRev4' => '1.3.6.1.4.1.9.9.156.3.2.45',
  'ccmH323DeviceInfoGroupRev3' => '1.3.6.1.4.1.9.9.156.3.2.46',
  'ccmVoiceMailDeviceInfoGroupRev2' => '1.3.6.1.4.1.9.9.156.3.2.47',
  'ccmNotificationsGroupRev3' => '1.3.6.1.4.1.9.9.156.3.2.48',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOCONFIGMANMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCO-CONFIG-MAN-MIB'} = {
  url => '',
  name => 'CISCO-CONFIG-MAN-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCO-CONFIG-MAN-MIB'} = {
  'ciscoConfigManMIBObjects' => '1.3.6.1.4.1.9.9.43.1',
  'ccmHistory' => '1.3.6.1.4.1.9.9.43.1.1',
  'ccmHistoryRunningLastChanged' => '1.3.6.1.4.1.9.9.43.1.1.1.0',
  'ccmHistoryRunningLastSaved' => '1.3.6.1.4.1.9.9.43.1.1.2.0',
  'ccmHistoryStartupLastChanged' => '1.3.6.1.4.1.9.9.43.1.1.3.0',
  'ccmHistoryMaxEventEntries' => '1.3.6.1.4.1.9.9.43.1.1.4.0',
  'ccmHistoryEventEntriesBumped' => '1.3.6.1.4.1.9.9.43.1.1.5.0',
  'ccmCLIHistory' => '1.3.6.1.4.1.9.9.43.1.2',
  'ccmCLICfg' => '1.3.6.1.4.1.9.9.43.1.3',
  'ccmCTIDObjects' => '1.3.6.1.4.1.9.9.43.1.4',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOEIGRPMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCO-EIGRP-MIB'} = {
  url => '',
  name => 'CISCO-EIGRP-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'CISCO-EIGRP-MIB'} =
    '1.3.6.1.4.1.9.9.449';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCO-EIGRP-MIB'} = {
  ciscoEigrpMIB => '1.3.6.1.4.1.9.9.449',
  cEigrpMIBNotifications => '1.3.6.1.4.1.9.9.449.0',
  cEigrpMIBObjects => '1.3.6.1.4.1.9.9.449.1',
  cEigrpVpnInfo => '1.3.6.1.4.1.9.9.449.1.1',
  cEigrpVpnTable => '1.3.6.1.4.1.9.9.449.1.1.1',
  cEigrpVpnEntry => '1.3.6.1.4.1.9.9.449.1.1.1.1',
  cEigrpVpnId => '1.3.6.1.4.1.9.9.449.1.1.1.1.1',
  cEigrpVpnName => '1.3.6.1.4.1.9.9.449.1.1.1.1.2',
  cEigrpAsInfo => '1.3.6.1.4.1.9.9.449.1.2',
  cEigrpTraffStatsTable => '1.3.6.1.4.1.9.9.449.1.2.1',
  cEigrpTraffStatsEntry => '1.3.6.1.4.1.9.9.449.1.2.1.1',
  cEigrpAsNumber => '1.3.6.1.4.1.9.9.449.1.2.1.1.1',
  cEigrpNbrCount => '1.3.6.1.4.1.9.9.449.1.2.1.1.2',
  cEigrpHellosSent => '1.3.6.1.4.1.9.9.449.1.2.1.1.3',
  cEigrpHellosRcvd => '1.3.6.1.4.1.9.9.449.1.2.1.1.4',
  cEigrpUpdatesSent => '1.3.6.1.4.1.9.9.449.1.2.1.1.5',
  cEigrpUpdatesRcvd => '1.3.6.1.4.1.9.9.449.1.2.1.1.6',
  cEigrpQueriesSent => '1.3.6.1.4.1.9.9.449.1.2.1.1.7',
  cEigrpQueriesRcvd => '1.3.6.1.4.1.9.9.449.1.2.1.1.8',
  cEigrpRepliesSent => '1.3.6.1.4.1.9.9.449.1.2.1.1.9',
  cEigrpRepliesRcvd => '1.3.6.1.4.1.9.9.449.1.2.1.1.10',
  cEigrpAcksSent => '1.3.6.1.4.1.9.9.449.1.2.1.1.11',
  cEigrpAcksRcvd => '1.3.6.1.4.1.9.9.449.1.2.1.1.12',
  cEigrpInputQHighMark => '1.3.6.1.4.1.9.9.449.1.2.1.1.13',
  cEigrpInputQDrops => '1.3.6.1.4.1.9.9.449.1.2.1.1.14',
  cEigrpSiaQueriesSent => '1.3.6.1.4.1.9.9.449.1.2.1.1.15',
  cEigrpSiaQueriesRcvd => '1.3.6.1.4.1.9.9.449.1.2.1.1.16',
  cEigrpAsRouterIdType => '1.3.6.1.4.1.9.9.449.1.2.1.1.17',
  cEigrpAsRouterIdTypeDefinition => 'INET-ADDRESS-MIB::InetAddressType',
  cEigrpAsRouterId => '1.3.6.1.4.1.9.9.449.1.2.1.1.18',
  cEigrpAsRouterIdDefinition => 'INET-ADDRESS-MIB::InetAddress(cEigrpAsRouterIdType)',
  cEigrpTopoRoutes => '1.3.6.1.4.1.9.9.449.1.2.1.1.19',
  cEigrpHeadSerial => '1.3.6.1.4.1.9.9.449.1.2.1.1.20',
  cEigrpNextSerial => '1.3.6.1.4.1.9.9.449.1.2.1.1.21',
  cEigrpXmitPendReplies => '1.3.6.1.4.1.9.9.449.1.2.1.1.22',
  cEigrpXmitDummies => '1.3.6.1.4.1.9.9.449.1.2.1.1.23',
  cEigrpTopologyInfo => '1.3.6.1.4.1.9.9.449.1.3',
  cEigrpTopoTable => '1.3.6.1.4.1.9.9.449.1.3.1',
  cEigrpTopoEntry => '1.3.6.1.4.1.9.9.449.1.3.1.1',
  cEigrpDestNetType => '1.3.6.1.4.1.9.9.449.1.3.1.1.1',
  cEigrpDestNetTypeDefinition => 'INET-ADDRESS-MIB::InetAddressType',
  cEigrpDestNet => '1.3.6.1.4.1.9.9.449.1.3.1.1.2',
  cEigrpDestNetDefinition => 'INET-ADDRESS-MIB::InetAddress(cEigrpDestNetType)',
  cEigrpDestNetPrefixLen => '1.3.6.1.4.1.9.9.449.1.3.1.1.4',
  cEigrpActive => '1.3.6.1.4.1.9.9.449.1.3.1.1.5',
  cEigrpStuckInActive => '1.3.6.1.4.1.9.9.449.1.3.1.1.6',
  cEigrpDestSuccessors => '1.3.6.1.4.1.9.9.449.1.3.1.1.7',
  cEigrpFdistance => '1.3.6.1.4.1.9.9.449.1.3.1.1.8',
  cEigrpRouteOriginType => '1.3.6.1.4.1.9.9.449.1.3.1.1.9',
  cEigrpRouteOriginAddrType => '1.3.6.1.4.1.9.9.449.1.3.1.1.10',
  cEigrpRouteOriginAddrTypeDefinition => 'INET-ADDRESS-MIB::InetAddressType',
  cEigrpRouteOriginAddr => '1.3.6.1.4.1.9.9.449.1.3.1.1.11',
  cEigrpRouteOriginAddrDefinition => 'INET-ADDRESS-MIB::InetAddress(cEigrpRouteOriginAddrType)',
  cEigrpNextHopAddressType => '1.3.6.1.4.1.9.9.449.1.3.1.1.12',
  cEigrpNextHopAddressTypeDefinition => 'INET-ADDRESS-MIB::InetAddressType',
  cEigrpNextHopAddress => '1.3.6.1.4.1.9.9.449.1.3.1.1.13',
  cEigrpNextHopAddressDefinition => 'INET-ADDRESS-MIB::InetAddress(cEigrpNextHopAddressType)',
  cEigrpNextHopInterface => '1.3.6.1.4.1.9.9.449.1.3.1.1.14',
  cEigrpDistance => '1.3.6.1.4.1.9.9.449.1.3.1.1.15',
  cEigrpReportDistance => '1.3.6.1.4.1.9.9.449.1.3.1.1.16',
  cEigrpFdistanceWide => '1.3.6.1.4.1.9.9.449.1.3.1.1.17',
  cEigrpDistanceWide => '1.3.6.1.4.1.9.9.449.1.3.1.1.18',
  cEigrpReportDistanceWide => '1.3.6.1.4.1.9.9.449.1.3.1.1.19',
  cEigrpPeerInfo => '1.3.6.1.4.1.9.9.449.1.4',
  cEigrpPeerTable => '1.3.6.1.4.1.9.9.449.1.4.1',
  cEigrpPeerEntry => '1.3.6.1.4.1.9.9.449.1.4.1.1',
  cEigrpHandle => '1.3.6.1.4.1.9.9.449.1.4.1.1.1',
  cEigrpPeerAddrType => '1.3.6.1.4.1.9.9.449.1.4.1.1.2',
  cEigrpPeerAddrTypeDefinition => 'INET-ADDRESS-MIB::InetAddressType',
  cEigrpPeerAddr => '1.3.6.1.4.1.9.9.449.1.4.1.1.3',
  cEigrpPeerAddrDefinition => 'INET-ADDRESS-MIB::InetAddress(cEigrpPeerAddrType)',
  cEigrpPeerIfIndex => '1.3.6.1.4.1.9.9.449.1.4.1.1.4',
  cEigrpHoldTime => '1.3.6.1.4.1.9.9.449.1.4.1.1.5',
  cEigrpUpTime => '1.3.6.1.4.1.9.9.449.1.4.1.1.6',
  cEigrpSrtt => '1.3.6.1.4.1.9.9.449.1.4.1.1.7',
  cEigrpRto => '1.3.6.1.4.1.9.9.449.1.4.1.1.8',
  cEigrpPktsEnqueued => '1.3.6.1.4.1.9.9.449.1.4.1.1.9',
  cEigrpLastSeq => '1.3.6.1.4.1.9.9.449.1.4.1.1.10',
  cEigrpVersion => '1.3.6.1.4.1.9.9.449.1.4.1.1.11',
  cEigrpRetrans => '1.3.6.1.4.1.9.9.449.1.4.1.1.12',
  cEigrpRetries => '1.3.6.1.4.1.9.9.449.1.4.1.1.13',
  cEigrpInterfaceInfo => '1.3.6.1.4.1.9.9.449.1.5',
  cEigrpInterfaceTable => '1.3.6.1.4.1.9.9.449.1.5.1',
  cEigrpInterfaceEntry => '1.3.6.1.4.1.9.9.449.1.5.1.1',
  cEigrpPeerCount => '1.3.6.1.4.1.9.9.449.1.5.1.1.3',
  cEigrpXmitReliableQ => '1.3.6.1.4.1.9.9.449.1.5.1.1.4',
  cEigrpXmitUnreliableQ => '1.3.6.1.4.1.9.9.449.1.5.1.1.5',
  cEigrpMeanSrtt => '1.3.6.1.4.1.9.9.449.1.5.1.1.6',
  cEigrpPacingReliable => '1.3.6.1.4.1.9.9.449.1.5.1.1.7',
  cEigrpPacingUnreliable => '1.3.6.1.4.1.9.9.449.1.5.1.1.8',
  cEigrpMFlowTimer => '1.3.6.1.4.1.9.9.449.1.5.1.1.9',
  cEigrpPendingRoutes => '1.3.6.1.4.1.9.9.449.1.5.1.1.10',
  cEigrpHelloInterval => '1.3.6.1.4.1.9.9.449.1.5.1.1.11',
  cEigrpXmitNextSerial => '1.3.6.1.4.1.9.9.449.1.5.1.1.12',
  cEigrpUMcasts => '1.3.6.1.4.1.9.9.449.1.5.1.1.13',
  cEigrpRMcasts => '1.3.6.1.4.1.9.9.449.1.5.1.1.14',
  cEigrpUUcasts => '1.3.6.1.4.1.9.9.449.1.5.1.1.15',
  cEigrpRUcasts => '1.3.6.1.4.1.9.9.449.1.5.1.1.16',
  cEigrpMcastExcepts => '1.3.6.1.4.1.9.9.449.1.5.1.1.17',
  cEigrpCRpkts => '1.3.6.1.4.1.9.9.449.1.5.1.1.18',
  cEigrpAcksSuppressed => '1.3.6.1.4.1.9.9.449.1.5.1.1.19',
  cEigrpRetransSent => '1.3.6.1.4.1.9.9.449.1.5.1.1.20',
  cEigrpOOSrvcd => '1.3.6.1.4.1.9.9.449.1.5.1.1.21',
  cEigrpAuthMode => '1.3.6.1.4.1.9.9.449.1.5.1.1.22',
  cEigrpAuthModeDefinition => 'CISCO-EIGRP-MIB::cEigrpAuthMode',
  cEigrpAuthKeyChain => '1.3.6.1.4.1.9.9.449.1.5.1.1.23',
  cEigrpMIBConformance => '1.3.6.1.4.1.9.9.449.2',
  cEigrpMIBCompliances => '1.3.6.1.4.1.9.9.449.2.1',
  cEigrpMIBGroups => '1.3.6.1.4.1.9.9.449.2.2',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'CISCO-EIGRP-MIB'} = {
  cEigrpAuthMode => {
    '1' => 'none',
    '2' => 'md5',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOENHANCEDMEMPOOLMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCO-ENHANCED-MEMPOOL-MIB'} = {
  url => '',
  name => 'CISCO-ENHANCED-MEMPOOL-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'CISCO-ENHANCED-MEMPOOL-MIB'} =
  '1.3.6.1.4.1.9.9.221';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCO-ENHANCED-MEMPOOL-MIB'} = {
  ciscoEnhancedMemPoolMIB => '1.3.6.1.4.1.9.9.221',
  cempMIBNotifications => '1.3.6.1.4.1.9.9.221.0',
  cempMIBObjects => '1.3.6.1.4.1.9.9.221.1',
  cempMemPool => '1.3.6.1.4.1.9.9.221.1.1',
  cempMemPoolTable => '1.3.6.1.4.1.9.9.221.1.1.1',
  cempMemPoolEntry => '1.3.6.1.4.1.9.9.221.1.1.1.1',
  cempMemPoolIndex => '1.3.6.1.4.1.9.9.221.1.1.1.1.1',
  cempMemPoolType => '1.3.6.1.4.1.9.9.221.1.1.1.1.2',
  cempMemPoolTypeDefinition => 'CISCO-ENHANCED-MEMPOOL-MIB::CempMemPoolTypes',
  cempMemPoolName => '1.3.6.1.4.1.9.9.221.1.1.1.1.3',
  cempMemPoolPlatformMemory => '1.3.6.1.4.1.9.9.221.1.1.1.1.4',
  cempMemPoolAlternate => '1.3.6.1.4.1.9.9.221.1.1.1.1.5',
  cempMemPoolValid => '1.3.6.1.4.1.9.9.221.1.1.1.1.6',
  cempMemPoolUsed => '1.3.6.1.4.1.9.9.221.1.1.1.1.7',
  cempMemPoolFree => '1.3.6.1.4.1.9.9.221.1.1.1.1.8',
  cempMemPoolLargestFree => '1.3.6.1.4.1.9.9.221.1.1.1.1.9',
  cempMemPoolLowestFree => '1.3.6.1.4.1.9.9.221.1.1.1.1.10',
  cempMemPoolUsedLowWaterMark => '1.3.6.1.4.1.9.9.221.1.1.1.1.11',
  cempMemPoolAllocHit => '1.3.6.1.4.1.9.9.221.1.1.1.1.12',
  cempMemPoolAllocMiss => '1.3.6.1.4.1.9.9.221.1.1.1.1.13',
  cempMemPoolFreeHit => '1.3.6.1.4.1.9.9.221.1.1.1.1.14',
  cempMemPoolFreeMiss => '1.3.6.1.4.1.9.9.221.1.1.1.1.15',
  cempMemPoolShared => '1.3.6.1.4.1.9.9.221.1.1.1.1.16',
  cempMemPoolUsedOvrflw => '1.3.6.1.4.1.9.9.221.1.1.1.1.17',
  cempMemPoolHCUsed => '1.3.6.1.4.1.9.9.221.1.1.1.1.18',
  cempMemPoolFreeOvrflw => '1.3.6.1.4.1.9.9.221.1.1.1.1.19',
  cempMemPoolHCFree => '1.3.6.1.4.1.9.9.221.1.1.1.1.20',
  cempMemPoolLargestFreeOvrflw => '1.3.6.1.4.1.9.9.221.1.1.1.1.21',
  cempMemPoolHCLargestFree => '1.3.6.1.4.1.9.9.221.1.1.1.1.22',
  cempMemPoolLowestFreeOvrflw => '1.3.6.1.4.1.9.9.221.1.1.1.1.23',
  cempMemPoolHCLowestFree => '1.3.6.1.4.1.9.9.221.1.1.1.1.24',
  cempMemPoolUsedLowWaterMarkOvrflw => '1.3.6.1.4.1.9.9.221.1.1.1.1.25',
  cempMemPoolHCUsedLowWaterMark => '1.3.6.1.4.1.9.9.221.1.1.1.1.26',
  cempMemPoolSharedOvrflw => '1.3.6.1.4.1.9.9.221.1.1.1.1.27',
  cempMemPoolHCShared => '1.3.6.1.4.1.9.9.221.1.1.1.1.28',
  cempMemBufferPoolTable => '1.3.6.1.4.1.9.9.221.1.1.2',
  cempMemBufferPoolEntry => '1.3.6.1.4.1.9.9.221.1.1.2.1',
  cempMemBufferPoolIndex => '1.3.6.1.4.1.9.9.221.1.1.2.1.1',
  cempMemBufferMemPoolIndex => '1.3.6.1.4.1.9.9.221.1.1.2.1.2',
  cempMemBufferName => '1.3.6.1.4.1.9.9.221.1.1.2.1.3',
  cempMemBufferDynamic => '1.3.6.1.4.1.9.9.221.1.1.2.1.4',
  cempMemBufferSize => '1.3.6.1.4.1.9.9.221.1.1.2.1.5',
  cempMemBufferMin => '1.3.6.1.4.1.9.9.221.1.1.2.1.6',
  cempMemBufferMax => '1.3.6.1.4.1.9.9.221.1.1.2.1.7',
  cempMemBufferPermanent => '1.3.6.1.4.1.9.9.221.1.1.2.1.8',
  cempMemBufferTransient => '1.3.6.1.4.1.9.9.221.1.1.2.1.9',
  cempMemBufferTotal => '1.3.6.1.4.1.9.9.221.1.1.2.1.10',
  cempMemBufferFree => '1.3.6.1.4.1.9.9.221.1.1.2.1.11',
  cempMemBufferHit => '1.3.6.1.4.1.9.9.221.1.1.2.1.12',
  cempMemBufferMiss => '1.3.6.1.4.1.9.9.221.1.1.2.1.13',
  cempMemBufferFreeHit => '1.3.6.1.4.1.9.9.221.1.1.2.1.14',
  cempMemBufferFreeMiss => '1.3.6.1.4.1.9.9.221.1.1.2.1.15',
  cempMemBufferPermChange => '1.3.6.1.4.1.9.9.221.1.1.2.1.16',
  cempMemBufferPeak => '1.3.6.1.4.1.9.9.221.1.1.2.1.17',
  cempMemBufferPeakTime => '1.3.6.1.4.1.9.9.221.1.1.2.1.18',
  cempMemBufferTrim => '1.3.6.1.4.1.9.9.221.1.1.2.1.19',
  cempMemBufferGrow => '1.3.6.1.4.1.9.9.221.1.1.2.1.20',
  cempMemBufferFailures => '1.3.6.1.4.1.9.9.221.1.1.2.1.21',
  cempMemBufferNoStorage => '1.3.6.1.4.1.9.9.221.1.1.2.1.22',
  cempMemBufferCachePoolTable => '1.3.6.1.4.1.9.9.221.1.1.3',
  cempMemBufferCachePoolEntry => '1.3.6.1.4.1.9.9.221.1.1.3.1',
  cempMemBufferCacheSize => '1.3.6.1.4.1.9.9.221.1.1.3.1.1',
  cempMemBufferCacheTotal => '1.3.6.1.4.1.9.9.221.1.1.3.1.2',
  cempMemBufferCacheUsed => '1.3.6.1.4.1.9.9.221.1.1.3.1.3',
  cempMemBufferCacheHit => '1.3.6.1.4.1.9.9.221.1.1.3.1.4',
  cempMemBufferCacheMiss => '1.3.6.1.4.1.9.9.221.1.1.3.1.5',
  cempMemBufferCacheThreshold => '1.3.6.1.4.1.9.9.221.1.1.3.1.6',
  cempMemBufferCacheThresholdCount => '1.3.6.1.4.1.9.9.221.1.1.3.1.7',
  cempNotificationConfig => '1.3.6.1.4.1.9.9.221.1.2',
  cempMemBufferNotifyEnabled => '1.3.6.1.4.1.9.9.221.1.2.1',
  cempMIBConformance => '1.3.6.1.4.1.9.9.221.3',
  cempMIBCompliances => '1.3.6.1.4.1.9.9.221.3.1',
  cempMIBGroups => '1.3.6.1.4.1.9.9.221.3.2',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'CISCO-ENHANCED-MEMPOOL-MIB'} = {
  CempMemPoolTypes => {
    '1' => 'other',
    '2' => 'processorMemory',
    '3' => 'ioMemory',
    '4' => 'pciMemory',
    '5' => 'fastMemory',
    '6' => 'multibusMemory',
    '7' => 'interruptStackMemory',
    '8' => 'processStackMemory',
    '9' => 'localExceptionMemory',
    '10' => 'virtualMemory',
    '11' => 'reservedMemory',
    '12' => 'imageMemory',
    '13' => 'asicMemory',
    '14' => 'posixMemory',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOENTITYALARMMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCO-ENTITY-ALARM-MIB'} = {
  url => '',
  name => 'CISCO-ENTITY-ALARM-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'CISCO-ENTITY-ALARM-MIB'} = 
  '1.3.6.1.4.1.9.9.138.1';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCO-ENTITY-ALARM-MIB'} = {
  'ciscoEntityAlarmMIBObjects' => '1.3.6.1.4.1.9.9.138.1',
  'ceAlarmDescription' => '1.3.6.1.4.1.9.9.138.1.1',
  'ceAlarmDescrMapTable' => '1.3.6.1.4.1.9.9.138.1.1.1',
  'ceAlarmDescrMapEntry' => '1.3.6.1.4.1.9.9.138.1.1.1.1',
  'ceAlarmDescrIndex' => '1.3.6.1.4.1.9.9.138.1.1.1.1.1',
  'ceAlarmDescrVendorType' => '1.3.6.1.4.1.9.9.138.1.1.1.1.2',
  'ceAlarmDescrTable' => '1.3.6.1.4.1.9.9.138.1.1.2',
  'ceAlarmDescrEntry' => '1.3.6.1.4.1.9.9.138.1.1.2.1',
  'ceAlarmDescrAlarmType' => '1.3.6.1.4.1.9.9.138.1.1.2.1.1',
  'ceAlarmDescrSeverity' => '1.3.6.1.4.1.9.9.138.1.1.2.1.2',
  'ceAlarmDescrSeverityDefinition' => 'CISCO-ENTITY-ALARM-MIB::AlarmSeverityOrZero',
  'ceAlarmDescrText' => '1.3.6.1.4.1.9.9.138.1.1.2.1.3',
  'ceAlarmMonitoring' => '1.3.6.1.4.1.9.9.138.1.2',
  'ceAlarmCriticalCount' => '1.3.6.1.4.1.9.9.138.1.2.1.0',
  'ceAlarmMajorCount' => '1.3.6.1.4.1.9.9.138.1.2.2.0',
  'ceAlarmMinorCount' => '1.3.6.1.4.1.9.9.138.1.2.3.0',
  'ceAlarmCutOff' => '1.3.6.1.4.1.9.9.138.1.2.4.0',
  'ceAlarmTable' => '1.3.6.1.4.1.9.9.138.1.2.5',
  'ceAlarmEntry' => '1.3.6.1.4.1.9.9.138.1.2.5.1',
  'ceAlarmFilterProfile' => '1.3.6.1.4.1.9.9.138.1.2.5.1.1',
  'ceAlarmSeverity' => '1.3.6.1.4.1.9.9.138.1.2.5.1.2',
  'ceAlarmSeverityDefinition' => 'CISCO-ENTITY-ALARM-MIB::AlarmSeverityOrZero',
  'ceAlarmList' => '1.3.6.1.4.1.9.9.138.1.2.5.1.3',
  'ceAlarmHistory' => '1.3.6.1.4.1.9.9.138.1.3',
  'ceAlarmHistTableSize' => '1.3.6.1.4.1.9.9.138.1.3.1.0',
  'ceAlarmHistLastIndex' => '1.3.6.1.4.1.9.9.138.1.3.2.0',
  'ceAlarmHistTable' => '1.3.6.1.4.1.9.9.138.1.3.3',
  'ceAlarmHistEntry' => '1.3.6.1.4.1.9.9.138.1.3.3.1',
  'ceAlarmHistIndex' => '1.3.6.1.4.1.9.9.138.1.3.3.1.1',
  'ceAlarmHistType' => '1.3.6.1.4.1.9.9.138.1.3.3.1.2',
  'ceAlarmHistTypeDefinition' => {
    '1' => 'asserted',
    '2' => 'cleared',
  },
  'ceAlarmHistEntPhysicalIndex' => '1.3.6.1.4.1.9.9.138.1.3.3.1.3',
  'ceAlarmHistAlarmType' => '1.3.6.1.4.1.9.9.138.1.3.3.1.4',
  'ceAlarmHistSeverity' => '1.3.6.1.4.1.9.9.138.1.3.3.1.5',
  'ceAlarmHistSeverityDefinition' => 'CISCO-ENTITY-ALARM-MIB::AlarmSeverityOrZero',
  'ceAlarmHistTimeStamp' => '1.3.6.1.4.1.9.9.138.1.3.3.1.6',
  'ceAlarmFiltering' => '1.3.6.1.4.1.9.9.138.1.4',
  'ceAlarmNotifiesEnable' => '1.3.6.1.4.1.9.9.138.1.4.1.0',
  'ceAlarmSyslogEnable' => '1.3.6.1.4.1.9.9.138.1.4.2.0',
  'ceAlarmFilterProfileIndexNext' => '1.3.6.1.4.1.9.9.138.1.4.3.0',
  'ceAlarmFilterProfileTable' => '1.3.6.1.4.1.9.9.138.1.4.4',
  'ceAlarmFilterProfileEntry' => '1.3.6.1.4.1.9.9.138.1.4.4.1',
  'ceAlarmFilterIndex' => '1.3.6.1.4.1.9.9.138.1.4.4.1.1',
  'ceAlarmFilterStatus' => '1.3.6.1.4.1.9.9.138.1.4.4.1.2',
  'ceAlarmFilterAlias' => '1.3.6.1.4.1.9.9.138.1.4.4.1.3',
  'ceAlarmFilterAlarmsEnabled' => '1.3.6.1.4.1.9.9.138.1.4.4.1.4',
  'ceAlarmFilterNotifiesEnabled' => '1.3.6.1.4.1.9.9.138.1.4.4.1.5',
  'ceAlarmFilterSyslogEnabled' => '1.3.6.1.4.1.9.9.138.1.4.4.1.6',
  'ciscoEntityAlarmMIBNotificationsPrefix' => '1.3.6.1.4.1.9.9.138.2',
  'ciscoEntityAlarmMIBNotifications' => '1.3.6.1.4.1.9.9.138.2.0',
  'ceAlarmAsserted' => '1.3.6.1.4.1.9.9.138.2.0.1',
  'ceAlarmCleared' => '1.3.6.1.4.1.9.9.138.2.0.2',
  'ciscoEntityAlarmMIBConformance' => '1.3.6.1.4.1.9.9.138.3',
  'ciscoEntityAlarmMIBCompliances' => '1.3.6.1.4.1.9.9.138.3.1',
  'ciscoEntityAlarmMIBGroups' => '1.3.6.1.4.1.9.9.138.3.2',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'CISCO-ENTITY-ALARM-MIB'} = {
  'AlarmSeverity' => {
    '1' => 'critical',
    '2' => 'major',
    '3' => 'minor',
    '4' => 'info',
  },
  'AlarmSeverityOrZero' => {
    '0' => 'none',
    '1' => 'critical',
    '2' => 'major',
    '3' => 'minor',
    '4' => 'info',
  },
};



package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOENTITYFRUCONTROLMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCO-ENTITY-FRU-CONTROL-MIB'} = {
  url => '',
  name => 'CISCO-ENTITY-FRU-CONTROL-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'CISCO-ENTITY-FRU-CONTROL-MIB'} = 
  '1.3.6.1.4.1.9.9.117.1';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCO-ENTITY-FRU-CONTROL-MIB'} = {
  'cefcMIBObjects' => '1.3.6.1.4.1.9.9.117.1',
  'cefcFRUPower' => '1.3.6.1.4.1.9.9.117.1.1',
  'cefcFRUPowerSupplyGroupTable' => '1.3.6.1.4.1.9.9.117.1.1.1',
  'cefcFRUPowerSupplyGroupEntry' => '1.3.6.1.4.1.9.9.117.1.1.1.1',
  'cefcPowerRedundancyMode' => '1.3.6.1.4.1.9.9.117.1.1.1.1.1',
  'cefcPowerRedundancyModeDefinition' => 'CISCO-ENTITY-FRU-CONTROL-MIB::PowerRedundancyType',
  'cefcPowerUnits' => '1.3.6.1.4.1.9.9.117.1.1.1.1.2',
  'cefcTotalAvailableCurrent' => '1.3.6.1.4.1.9.9.117.1.1.1.1.3',
  'cefcTotalDrawnCurrent' => '1.3.6.1.4.1.9.9.117.1.1.1.1.4',
  'cefcPowerRedundancyOperMode' => '1.3.6.1.4.1.9.9.117.1.1.1.1.5',
  'cefcPowerRedundancyOperModeDefinition' => 'CISCO-ENTITY-FRU-CONTROL-MIB::PowerRedundancyType',
  'cefcPowerNonRedundantReason' => '1.3.6.1.4.1.9.9.117.1.1.1.1.6',
  'cefcPowerNonRedundantReasonDefinition' => 'CISCO-ENTITY-FRU-CONTROL-MIB::PowerRedundancyType',
  'cefcTotalDrawnInlineCurrent' => '1.3.6.1.4.1.9.9.117.1.1.1.1.7',
  'cefcFRUPowerStatusTable' => '1.3.6.1.4.1.9.9.117.1.1.2',
  'cefcFRUPowerStatusEntry' => '1.3.6.1.4.1.9.9.117.1.1.2.1',
  'cefcFRUPowerAdminStatus' => '1.3.6.1.4.1.9.9.117.1.1.2.1.1',
  'cefcFRUPowerAdminStatusDefinition' => 'CISCO-ENTITY-FRU-CONTROL-MIB::PowerAdminType',
  'cefcFRUPowerOperStatus' => '1.3.6.1.4.1.9.9.117.1.1.2.1.2',
  'cefcFRUPowerOperStatusDefinition' => 'CISCO-ENTITY-FRU-CONTROL-MIB::PowerOperType',
  'cefcFRUCurrent' => '1.3.6.1.4.1.9.9.117.1.1.2.1.3',
  'cefcFRUPowerCapability' => '1.3.6.1.4.1.9.9.117.1.1.2.1.4',
  'cefcFRURealTimeCurrent' => '1.3.6.1.4.1.9.9.117.1.1.2.1.5',
  'cefcMaxDefaultInLinePower' => '1.3.6.1.4.1.9.9.117.1.1.3.0',
  'cefcFRUPowerSupplyValueTable' => '1.3.6.1.4.1.9.9.117.1.1.4',
  'cefcFRUPowerSupplyValueEntry' => '1.3.6.1.4.1.9.9.117.1.1.4.1',
  'cefcFRUTotalSystemCurrent' => '1.3.6.1.4.1.9.9.117.1.1.4.1.1',
  'cefcFRUDrawnSystemCurrent' => '1.3.6.1.4.1.9.9.117.1.1.4.1.2',
  'cefcFRUTotalInlineCurrent' => '1.3.6.1.4.1.9.9.117.1.1.4.1.3',
  'cefcFRUDrawnInlineCurrent' => '1.3.6.1.4.1.9.9.117.1.1.4.1.4',
  'cefcMaxDefaultHighInLinePower' => '1.3.6.1.4.1.9.9.117.1.1.5.0',
  'cefcModule' => '1.3.6.1.4.1.9.9.117.1.2',
  'cefcModuleTable' => '1.3.6.1.4.1.9.9.117.1.2.1',
  'cefcModuleEntry' => '1.3.6.1.4.1.9.9.117.1.2.1.1',
  'cefcModuleAdminStatus' => '1.3.6.1.4.1.9.9.117.1.2.1.1.1',
  'cefcModuleAdminStatusDefinition' => 'CISCO-ENTITY-FRU-CONTROL-MIB::ModuleAdminType',
  'cefcModuleOperStatus' => '1.3.6.1.4.1.9.9.117.1.2.1.1.2',
  'cefcModuleOperStatusDefinition' => 'CISCO-ENTITY-FRU-CONTROL-MIB::ModuleOperType',
  'cefcModuleResetReason' => '1.3.6.1.4.1.9.9.117.1.2.1.1.3',
  'cefcModuleStatusLastChangeTime' => '1.3.6.1.4.1.9.9.117.1.2.1.1.4',
  'cefcModuleLastClearConfigTime' => '1.3.6.1.4.1.9.9.117.1.2.1.1.5',
  'cefcModuleResetReasonDescription' => '1.3.6.1.4.1.9.9.117.1.2.1.1.6',
  'cefcModuleStateChangeReasonDescr' => '1.3.6.1.4.1.9.9.117.1.2.1.1.7',
  'cefcModuleUpTime' => '1.3.6.1.4.1.9.9.117.1.2.1.1.8',
  'cefcIntelliModuleTable' => '1.3.6.1.4.1.9.9.117.1.2.2',
  'cefcIntelliModuleEntry' => '1.3.6.1.4.1.9.9.117.1.2.2.1',
  'cefcIntelliModuleIPAddrType' => '1.3.6.1.4.1.9.9.117.1.2.2.1.1',
  'cefcIntelliModuleIPAddr' => '1.3.6.1.4.1.9.9.117.1.2.2.1.2',
  'cefcModuleLocalSwitchingTable' => '1.3.6.1.4.1.9.9.117.1.2.3',
  'cefcModuleLocalSwitchingEntry' => '1.3.6.1.4.1.9.9.117.1.2.3.1',
  'cefcModuleLocalSwitchingMode' => '1.3.6.1.4.1.9.9.117.1.2.3.1.1',
  'cefcMIBNotificationEnables' => '1.3.6.1.4.1.9.9.117.1.3',
  'cefcMIBEnableStatusNotification' => '1.3.6.1.4.1.9.9.117.1.3.1.0',
  'cefcEnablePSOutputChangeNotif' => '1.3.6.1.4.1.9.9.117.1.3.2.0',
  'cefcFRUFan' => '1.3.6.1.4.1.9.9.117.1.4',
  'cefcFanTrayStatusTable' => '1.3.6.1.4.1.9.9.117.1.4.1',
  'cefcFanTrayStatusEntry' => '1.3.6.1.4.1.9.9.117.1.4.1.1',
  'cefcFanTrayOperStatus' => '1.3.6.1.4.1.9.9.117.1.4.1.1.1',
  'cefcFanTrayOperStatusDefinition' => {
    '1' => 'unknown',
    '2' => 'up',
    '3' => 'down',
    '4' => 'warning',
  },
  'cefcPhysical' => '1.3.6.1.4.1.9.9.117.1.5',
  'cefcPhysicalTable' => '1.3.6.1.4.1.9.9.117.1.5.1',
  'cefcPhysicalEntry' => '1.3.6.1.4.1.9.9.117.1.5.1.1',
  'cefcPhysicalStatus' => '1.3.6.1.4.1.9.9.117.1.5.1.1.1',
  'cefcPowerCapacity' => '1.3.6.1.4.1.9.9.117.1.6',
  'cefcPowerSupplyInputTable' => '1.3.6.1.4.1.9.9.117.1.6.1',
  'cefcPowerSupplyInputEntry' => '1.3.6.1.4.1.9.9.117.1.6.1.1',
  'cefcPowerSupplyInputIndex' => '1.3.6.1.4.1.9.9.117.1.6.1.1.1',
  'cefcPowerSupplyInputType' => '1.3.6.1.4.1.9.9.117.1.6.1.1.2',
  'cefcPowerSupplyOutputTable' => '1.3.6.1.4.1.9.9.117.1.6.2',
  'cefcPowerSupplyOutputEntry' => '1.3.6.1.4.1.9.9.117.1.6.2.1',
  'cefcPSOutputModeIndex' => '1.3.6.1.4.1.9.9.117.1.6.2.1.1',
  'cefcPSOutputModeCurrent' => '1.3.6.1.4.1.9.9.117.1.6.2.1.2',
  'cefcPSOutputModeInOperation' => '1.3.6.1.4.1.9.9.117.1.6.2.1.3',
  'cefcCooling' => '1.3.6.1.4.1.9.9.117.1.7',
  'cefcChassisCoolingTable' => '1.3.6.1.4.1.9.9.117.1.7.1',
  'cefcChassisCoolingEntry' => '1.3.6.1.4.1.9.9.117.1.7.1.1',
  'cefcChassisPerSlotCoolingCap' => '1.3.6.1.4.1.9.9.117.1.7.1.1.1',
  'cefcChassisPerSlotCoolingUnit' => '1.3.6.1.4.1.9.9.117.1.7.1.1.2',
  'cefcFanCoolingTable' => '1.3.6.1.4.1.9.9.117.1.7.2',
  'cefcFanCoolingEntry' => '1.3.6.1.4.1.9.9.117.1.7.2.1',
  'cefcFanCoolingCapacity' => '1.3.6.1.4.1.9.9.117.1.7.2.1.1',
  'cefcFanCoolingCapacityUnit' => '1.3.6.1.4.1.9.9.117.1.7.2.1.2',
  'cefcModuleCoolingTable' => '1.3.6.1.4.1.9.9.117.1.7.3',
  'cefcModuleCoolingEntry' => '1.3.6.1.4.1.9.9.117.1.7.3.1',
  'cefcModuleCooling' => '1.3.6.1.4.1.9.9.117.1.7.3.1.1',
  'cefcModuleCoolingUnit' => '1.3.6.1.4.1.9.9.117.1.7.3.1.2',
  'cefcFanCoolingCapTable' => '1.3.6.1.4.1.9.9.117.1.7.4',
  'cefcFanCoolingCapEntry' => '1.3.6.1.4.1.9.9.117.1.7.4.1',
  'cefcFanCoolingCapIndex' => '1.3.6.1.4.1.9.9.117.1.7.4.1.1',
  'cefcFanCoolingCapModeDescr' => '1.3.6.1.4.1.9.9.117.1.7.4.1.2',
  'cefcFanCoolingCapCapacity' => '1.3.6.1.4.1.9.9.117.1.7.4.1.3',
  'cefcFanCoolingCapCurrent' => '1.3.6.1.4.1.9.9.117.1.7.4.1.4',
  'cefcFanCoolingCapCapacityUnit' => '1.3.6.1.4.1.9.9.117.1.7.4.1.5',
  'cefcConnector' => '1.3.6.1.4.1.9.9.117.1.8',
  'cefcConnectorRatingTable' => '1.3.6.1.4.1.9.9.117.1.8.1',
  'cefcConnectorRatingEntry' => '1.3.6.1.4.1.9.9.117.1.8.1.1',
  'cefcConnectorRating' => '1.3.6.1.4.1.9.9.117.1.8.1.1.1',
  'cefcModulePowerConsumptionTable' => '1.3.6.1.4.1.9.9.117.1.8.2',
  'cefcModulePowerConsumptionEntry' => '1.3.6.1.4.1.9.9.117.1.8.2.1',
  'cefcModulePowerConsumption' => '1.3.6.1.4.1.9.9.117.1.8.2.1.1',
  'cefcFRUMIBNotificationPrefix' => '1.3.6.1.4.1.9.9.117.2',
  'cefcMIBConformance' => '1.3.6.1.4.1.9.9.117.3',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'CISCO-ENTITY-FRU-CONTROL-MIB'} = {
  'ModuleOperType' => {
    '1' => 'unknown',
    '2' => 'ok',
    '3' => 'disabled',
    '4' => 'okButDiagFailed',
    '5' => 'boot',
    '6' => 'selfTest',
    '7' => 'failed',
    '8' => 'missing',
    '9' => 'mismatchWithParent',
    '10' => 'mismatchConfig',
    '11' => 'diagFailed',
    '12' => 'dormant',
    '13' => 'outOfServiceAdmin',
    '14' => 'outOfServiceEnvTemp',
    '15' => 'poweredDown',
    '16' => 'poweredUp',
    '17' => 'powerDenied',
    '18' => 'powerCycled',
    '19' => 'okButPowerOverWarning',
    '20' => 'okButPowerOverCritical',
    '21' => 'syncInProgress',
    '22' => 'upgrading',
    '23' => 'okButAuthFailed',
  },
  'ModuleAdminType' => {
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'reset',
    '4' => 'outOfServiceAdmin',
  },
  'PowerOperType' => {
    '1' => 'offEnvOther',
    '2' => 'on',
    '3' => 'offAdmin',
    '4' => 'offDenied',
    '5' => 'offEnvPower',
    '6' => 'offEnvTemp',
    '7' => 'offEnvFan',
    '8' => 'failed',
    '9' => 'onButFanFail',
    '10' => 'offCooling',
    '11' => 'offConnectorRating',
    '12' => 'onButInlinePowerFail',
  },
  'PowerRedundancyType' => {
    '1' => 'notsupported',
    '2' => 'redundant',
    '3' => 'combined',
    '4' => 'nonRedundant',
    '5' => 'psRedundant',
    '6' => 'inPwrSrcRedundant',
    '7' => 'psRedundantSingleInput',
  },
  'PowerAdminType' => {
    '1' => 'on',
    '2' => 'off',
    '3' => 'inlineAuto',
    '4' => 'inlineOn',
    '5' => 'powerCycle',
  },
};



package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOENTITYSENSORMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCO-ENTITY-SENSOR-MIB'} = {
  url => '',
  name => 'CISCO-ENTITY-SENSOR-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::requirements->{'CISCO-ENTITY-SENSOR-MIB'} = [
  'SNMPv2-TC-v1-MIB',
];

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'CISCO-ENTITY-SENSOR-MIB'} = 
  '1.3.6.1.4.1.9.9.91';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCO-ENTITY-SENSOR-MIB'} = {
  'entSensorValueTable' => '1.3.6.1.4.1.9.9.91.1.1.1',
  'entSensorValueEntry' => '1.3.6.1.4.1.9.9.91.1.1.1.1',
  'entSensorType' => '1.3.6.1.4.1.9.9.91.1.1.1.1.1',
  'entSensorTypeDefinition' => 'CISCO-ENTITY-SENSOR-MIB::SensorDataType',
  'entSensorScale' => '1.3.6.1.4.1.9.9.91.1.1.1.1.2',
  'entSensorScaleDefinition' => 'CISCO-ENTITY-SENSOR-MIB::SensorDataScale',
  'entSensorPrecision' => '1.3.6.1.4.1.9.9.91.1.1.1.1.3',
  'entSensorValue' => '1.3.6.1.4.1.9.9.91.1.1.1.1.4',
  'entSensorStatus' => '1.3.6.1.4.1.9.9.91.1.1.1.1.5',
  'entSensorStatusDefinition' => 'CISCO-ENTITY-SENSOR-MIB::SensorStatus',
  'entSensorValueTimeStamp' => '1.3.6.1.4.1.9.9.91.1.1.1.1.6',
  'entSensorValueUpdateRate' => '1.3.6.1.4.1.9.9.91.1.1.1.1.7',
  'entSensorMeasuredEntity' => '1.3.6.1.4.1.9.9.91.1.1.1.1.8',
  'entSensorThresholdTable' => '1.3.6.1.4.1.9.9.91.1.2.1',
  'entSensorThresholdEntry' => '1.3.6.1.4.1.9.9.91.1.2.1.1',
  'entSensorThresholdIndex' => '1.3.6.1.4.1.9.9.91.1.2.1.1.1',
  'entSensorThresholdSeverity' => '1.3.6.1.4.1.9.9.91.1.2.1.1.2',
  'entSensorThresholdSeverityDefinition' => 'CISCO-ENTITY-SENSOR-MIB::SensorThresholdSeverity',
  'entSensorThresholdRelation' => '1.3.6.1.4.1.9.9.91.1.2.1.1.3',
  'entSensorThresholdRelationDefinition' => 'CISCO-ENTITY-SENSOR-MIB::SensorThresholdRelation',
  'entSensorThresholdValue' => '1.3.6.1.4.1.9.9.91.1.2.1.1.4',
  'entSensorThresholdEvaluation' => '1.3.6.1.4.1.9.9.91.1.2.1.1.5',
  'entSensorThresholdEvaluationDefinition' => 'SNMPv2-TC-v1-MIB::TruthValue',
  'entSensorThresholdNotificationEnable' => '1.3.6.1.4.1.9.9.91.1.2.1.1.6',
  'entSensorThresholdNotificationEnableDefinition' => 'SNMPv2-TC-v1-MIB::TruthValue',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'CISCO-ENTITY-SENSOR-MIB'} = {
  'SensorStatus' => {
    '1' => 'ok',
    '2' => 'unavailable',
    '3' => 'nonoperational',
  },
  'SensorThresholdSeverity' => {
    '1' => 'other',
    '10' => 'minor',
    '20' => 'major',
    '30' => 'critical',
  },
  'SensorThresholdRelation' => {
    '1' => 'lessThan',
    '2' => 'lessOrEqual',
    '3' => 'greaterThan',
    '4' => 'greaterOrEqual',
    '5' => 'equalTo',
    '6' => 'notEqualTo',
  },
  'SensorDataType' => {
    '1' => 'other',
    '2' => 'unknown',
    '3' => 'voltsAC',
    '4' => 'voltsDC',
    '5' => 'amperes',
    '6' => 'watts',
    '7' => 'hertz',
    '8' => 'celsius',
    '9' => 'percentRH',
    '10' => 'rpm',
    '11' => 'cmm',
    '12' => 'truthvalue',
    '13' => 'specialEnum',
    '14' => 'dBm',
  },
  'SensorDataScale' => {
    '1' => 'yocto',
    '2' => 'zepto',
    '3' => 'atto',
    '4' => 'femto',
    '5' => 'pico',
    '6' => 'nano',
    '7' => 'micro',
    '8' => 'milli',
    '9' => 'units',
    '10' => 'kilo',
    '11' => 'mega',
    '12' => 'giga',
    '13' => 'tera',
    '14' => 'exa',
    '15' => 'peta',
    '16' => 'zetta',
    '17' => 'yotta',
  },
};



package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOENVMONMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCO-ENVMON-MIB'} = {
  url => '',
  name => 'CISCO-ENVMON-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'CISCO-ENVMON-MIB'} = 
  '1.3.6.1.4.1.9.9.13';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCO-ENVMON-MIB'} = {
  'ciscoEnvMonPresent' => '1.3.6.1.4.1.9.9.13.1.1.0',
  'ciscoEnvMonPresentDefinition' => {
    '1' => 'oldAgs',
    '2' => 'ags',
    '3' => 'c7000',
    '4' => 'ci',
    '6' => 'cAccessMon',
    '7' => 'cat6000',
    '8' => 'ubr7200',
    '9' => 'cat4000',
    '10' => 'c10000',
    '11' => 'osr7600',
    '12' => 'c7600',
    '13' => 'c37xx',
    '14' => 'other',
  },
  'ciscoEnvMonVoltageStatusTable' => '1.3.6.1.4.1.9.9.13.1.2',
  'ciscoEnvMonVoltageStatusEntry' => '1.3.6.1.4.1.9.9.13.1.2.1',
  'ciscoEnvMonVoltageStatusIndex' => '1.3.6.1.4.1.9.9.13.1.2.1.1',
  'ciscoEnvMonVoltageStatusDescr' => '1.3.6.1.4.1.9.9.13.1.2.1.2',
  'ciscoEnvMonVoltageStatusValue' => '1.3.6.1.4.1.9.9.13.1.2.1.3',
  'ciscoEnvMonVoltageThresholdLow' => '1.3.6.1.4.1.9.9.13.1.2.1.4',
  'ciscoEnvMonVoltageThresholdHigh' => '1.3.6.1.4.1.9.9.13.1.2.1.5',
  'ciscoEnvMonVoltageLastShutdown' => '1.3.6.1.4.1.9.9.13.1.2.1.6',
  'ciscoEnvMonVoltageState' => '1.3.6.1.4.1.9.9.13.1.2.1.7',
  'ciscoEnvMonVoltageStateDefinition' => 'CISCO-ENVMON-MIB::ciscoEnvMonState',
  'ciscoEnvMonTemperatureStatusTable' => '1.3.6.1.4.1.9.9.13.1.3',
  'ciscoEnvMonTemperatureStatusEntry' => '1.3.6.1.4.1.9.9.13.1.3.1',
  'ciscoEnvMonTemperatureStatusIndex' => '1.3.6.1.4.1.9.9.13.1.3.1.1',
  'ciscoEnvMonTemperatureStatusDescr' => '1.3.6.1.4.1.9.9.13.1.3.1.2',
  'ciscoEnvMonTemperatureStatusValue' => '1.3.6.1.4.1.9.9.13.1.3.1.3',
  'ciscoEnvMonTemperatureThreshold' => '1.3.6.1.4.1.9.9.13.1.3.1.4',
  'ciscoEnvMonTemperatureLastShutdown' => '1.3.6.1.4.1.9.9.13.1.3.1.5',
  'ciscoEnvMonTemperatureState' => '1.3.6.1.4.1.9.9.13.1.3.1.6',
  'ciscoEnvMonTemperatureStateDefinition' => 'CISCO-ENVMON-MIB::ciscoEnvMonState',
  'ciscoEnvMonFanStatusTable' => '1.3.6.1.4.1.9.9.13.1.4',
  'ciscoEnvMonFanStatusEntry' => '1.3.6.1.4.1.9.9.13.1.4.1',
  'ciscoEnvMonFanStatusIndex' => '1.3.6.1.4.1.9.9.13.1.4.1.1',
  'ciscoEnvMonFanStatusDescr' => '1.3.6.1.4.1.9.9.13.1.4.1.2',
  'ciscoEnvMonFanState' => '1.3.6.1.4.1.9.9.13.1.4.1.3',
  'ciscoEnvMonFanStateDefinition' => 'CISCO-ENVMON-MIB::ciscoEnvMonState',
  'ciscoEnvMonSupplyStatusTable' => '1.3.6.1.4.1.9.9.13.1.5',
  'ciscoEnvMonSupplyStatusEntry' => '1.3.6.1.4.1.9.9.13.1.5.1',
  'ciscoEnvMonSupplyStatusIndex' => '1.3.6.1.4.1.9.9.13.1.5.1.1',
  'ciscoEnvMonSupplyStatusDescr' => '1.3.6.1.4.1.9.9.13.1.5.1.2',
  'ciscoEnvMonSupplyState' => '1.3.6.1.4.1.9.9.13.1.5.1.3',
  'ciscoEnvMonSupplyStateDefinition' => 'CISCO-ENVMON-MIB::ciscoEnvMonState',
  'ciscoEnvMonSupplySource' => '1.3.6.1.4.1.9.9.13.1.5.1.4',
  'ciscoEnvMonSupplySourceDefinition' => 'CISCO-ENVMON-MIB::ciscoEnvMonSupplySource',
  'ciscoEnvMonAlarmContacts' => '1.3.6.1.4.1.9.9.13.1.6.0',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'CISCO-ENVMON-MIB'} = {
  'ciscoEnvMonState' => {
    '1' => 'normal',
    '2' => 'warning',
    '3' => 'critical',
    '4' => 'shutdown',
    '5' => 'notPresent',
    '6' => 'notFunctioning',
  },
  'ciscoEnvMonSupplySource' => {
    '1' => 'unknown',
    '2' => 'ac',
    '3' => 'dc',
    '4' => 'externalPowerSupply',
    '5' => 'internalRedundant',
  },
};



package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOETHERNETFABRICEXTENDERMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCO-ETHERNET-FABRIC-EXTENDER-MIB'} = {
  url => '',
  name => 'CISCO-ETHERNET-FABRIC-EXTENDER-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::requirements->{'CISCO-ETHERNET-FABRIC-EXTENDER-MIB'} = [
  'SNMPv2-TC-v1-MIB',
];

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCO-ETHERNET-FABRIC-EXTENDER-MIB'} = {
  'enterprises' => '1.3.6.1.4.1',
  'cisco' => '1.3.6.1.4.1.9',
  'ciscoEthernetFabricExtenderMIB' => '1.3.6.1.4.1.9.9.691',
  'ciscoEthernetFabricExtenderMIBNotifs' => '1.3.6.1.4.1.9.9.691.0',
  'ciscoEthernetFabricExtenderObjects' => '1.3.6.1.4.1.9.9.691.1',
  'cefexConfig' => '1.3.6.1.4.1.9.9.691.1.1',
  'cefexConfigDefinition' => {
    '1' => 'static',
  },
  'cefexBindingTable' => '1.3.6.1.4.1.9.9.691.1.1.1',
  'cefexBindingEntry' => '1.3.6.1.4.1.9.9.691.1.1.1.1',
  'cefexBindingInterfaceOnCoreSwitch' => '1.3.6.1.4.1.9.9.691.1.1.1.1.1',
  'cefexBindingExtenderIndex' => '1.3.6.1.4.1.9.9.691.1.1.1.1.2',
  'cefexBindingCreationTime' => '1.3.6.1.4.1.9.9.691.1.1.1.1.3',
  'cefexBindingRowStatus' => '1.3.6.1.4.1.9.9.691.1.1.1.1.4',
  'cefexBindingRowStatusDefinition' => 'SNMPv2-TC-v1-MIB::RowStatus',
  'cefexConfigTable' => '1.3.6.1.4.1.9.9.691.1.1.2',
  'cefexConfigEntry' => '1.3.6.1.4.1.9.9.691.1.1.2.1',
  'cefexConfigExtenderName' => '1.3.6.1.4.1.9.9.691.1.1.2.1.1',
  'cefexConfigSerialNumCheck' => '1.3.6.1.4.1.9.9.691.1.1.2.1.2',
  'cefexConfigSerialNum' => '1.3.6.1.4.1.9.9.691.1.1.2.1.3',
  'cefexConfigPinningFailOverMode' => '1.3.6.1.4.1.9.9.691.1.1.2.1.4',
  'cefexConfigPinningFailOverModeDefinition' => 'CISCO-ETHERNET-FABRIC-EXTENDER-MIB::CiscoPortPinningMode',
  'cefexConfigPinningMaxLinks' => '1.3.6.1.4.1.9.9.691.1.1.2.1.5',
  'cefexConfigCreationTime' => '1.3.6.1.4.1.9.9.691.1.1.2.1.6',
  'cefexConfigRowStatus' => '1.3.6.1.4.1.9.9.691.1.1.2.1.7',
  'cefexConfigRowStatusDefinition' => 'SNMPv2-TC-v1-MIB::RowStatus',
  'ciscoEthernetFabricExtenderMIBConformance' => '1.3.6.1.4.1.9.9.691.2',
  'cEthernetFabricExtenderMIBCompliances' => '1.3.6.1.4.1.9.9.691.2.1',
  'cEthernetFabricExtenderMIBGroups' => '1.3.6.1.4.1.9.9.691.2.1.1.1',
  'hardware' => '1.3.6.1.4.1.3764.1.1.200',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'CISCO-ETHERNET-FABRIC-EXTENDER-MIB'} = {
  'CiscoPortPinningMode' => {
    '1' => 'static',
  },
};



package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOFEATURECONTROLMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCO-FEATURE-CONTROL-MIB'} = {
  url => '',
  name => 'CISCO-FEATURE-CONTROL-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCO-FEATURE-CONTROL-MIB'} = {
  'cfcFeatureCtrlOpStatus' => 'CISCO-FEATURE-CONTROL-MIB::CiscoFeatureStatus',
  'cfcFeatureCtrlLastActionResult' => 'CISCO-FEATURE-CONTROL-MIB::CiscoFeatureActionResult',
  'cfcFeatureCtrlAction' => 'CISCO-FEATURE-CONTROL-MIB::CiscoFeatureAction',
  'cfcFeatureCtrlIndex' => 'CISCO-FEATURE-CONTROL-MIB::CiscoOptionalFeature',
  'cfcFeatureCtrlLastAction' => 'CISCO-FEATURE-CONTROL-MIB::CiscoFeatureAction',
  'cfcFeatureCtrlTable' => '1.3.6.1.4.1.9.9.377.1.1.1',
  'cfcFeatureCtrlEntry' => '1.3.6.1.4.1.9.9.377.1.1.1.1',
  'cfcFeatureCtrlName' => '1.3.6.1.4.1.9.9.377.1.1.1.1.2',
  'cfcFeatureCtrlLastFailureReason' => '1.3.6.1.4.1.9.9.377.1.1.1.1.6',
  'cfcFeatureCtrlOpStatusReason' => '1.3.6.1.4.1.9.9.377.1.1.1.1.8',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'CISCO-FEATURE-CONTROL-MIB'} = {
  'CiscoOptionalFeature' => {
    '1' => 'ivr',
    '2' => 'fcip',
    '3' => 'fcsp',
    '4' => 'ficon',
    '5' => 'iscsi',
    '6' => 'tacacs',
    '7' => 'qosManager',
    '8' => 'portSecurity',
    '9' => 'fabricBinding',
    '10' => 'iscsiInterfaceVsanMembership',
    '11' => 'ike',
    '12' => 'isns',
    '13' => 'ipSec',
    '14' => 'portTracker',
    '15' => 'scheduler',
    '16' => 'npiv',
    '17' => 'sanExtTuner',
    '18' => 'dpvm',
    '19' => 'extenedCredit',
  },
  'CiscoFeatureStatus' => {
    '1' => 'unknown',
    '2' => 'enabled',
    '3' => 'disabled',
  },
  'CiscoFeatureActionResult' => {
    '1' => 'none',
    '2' => 'actionSuccess',
    '3' => 'actionFailed',
    '4' => 'actionInProgress',
  },
  'CiscoFeatureAction' => {
    '1' => 'noOp',
    '2' => 'enable',
    '3' => 'disable',
  },
};



package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOFIREWALLMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCO-FIREWALL-MIB'} = {
  url => '',
  name => 'CISCO-FIREWALL-MIB',
};

#$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'CISCO-FIREWALL-MIB'} = 

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCO-FIREWALL-MIB'} = {
  ciscoFirewallMIB => '1.3.6.1.4.1.9.9.147',
  ciscoFirewallMIBObjects => '1.3.6.1.4.1.9.9.147.1',
  cfwEvents => '1.3.6.1.4.1.9.9.147.1.1',
  cfwBasicEvents => '1.3.6.1.4.1.9.9.147.1.1.1',
  cfwBasicEventsTableLastRow => '1.3.6.1.4.1.9.9.147.1.1.1.1',
  cfwBasicEventsTable => '1.3.6.1.4.1.9.9.147.1.1.1.2',
  cfwBasicEventsEntry => '1.3.6.1.4.1.9.9.147.1.1.1.2.1',
  cfwBasicEventIndex => '1.3.6.1.4.1.9.9.147.1.1.1.2.1.1',
  cfwBasicEventTime => '1.3.6.1.4.1.9.9.147.1.1.1.2.1.2',
  cfwBasicSecurityEventType => '1.3.6.1.4.1.9.9.147.1.1.1.2.1.3',
  cfwBasicSecurityEventTypeDefinition => 'CISCO-FIREWALL-MIB::SecurityEvent',
  cfwBasicContentInspEventType => '1.3.6.1.4.1.9.9.147.1.1.1.2.1.4',
  cfwBasicContentInspEventTypeDefinition => 'CISCO-FIREWALL-MIB::ContentInspectionEvent',
  cfwBasicConnectionEventType => '1.3.6.1.4.1.9.9.147.1.1.1.2.1.5',
  cfwBasicConnectionEventTypeDefinition => 'CISCO-FIREWALL-MIB::ConnectionEvent',
  cfwBasicAccessEventType => '1.3.6.1.4.1.9.9.147.1.1.1.2.1.6',
  cfwBasicAccessEventTypeDefinition => 'CISCO-FIREWALL-MIB::AccessEvent',
  cfwBasicAuthenticationEventType => '1.3.6.1.4.1.9.9.147.1.1.1.2.1.7',
  cfwBasicAuthenticationEventTypeDefinition => 'CISCO-FIREWALL-MIB::AuthenticationEvent',
  cfwBasicGenericEventType => '1.3.6.1.4.1.9.9.147.1.1.1.2.1.8',
  cfwBasicGenericEventTypeDefinition => 'CISCO-FIREWALL-MIB::GenericEvent',
  cfwBasicEventDescription => '1.3.6.1.4.1.9.9.147.1.1.1.2.1.9',
  cfwBasicEventDetailsTableRow => '1.3.6.1.4.1.9.9.147.1.1.1.2.1.10',
  cfwNetEvents => '1.3.6.1.4.1.9.9.147.1.1.2',
  cfwNetEventsTableLastRow => '1.3.6.1.4.1.9.9.147.1.1.2.1',
  cfwNetEventsTable => '1.3.6.1.4.1.9.9.147.1.1.2.2',
  cfwNetEventsEntry => '1.3.6.1.4.1.9.9.147.1.1.2.2.1',
  cfwNetEventIndex => '1.3.6.1.4.1.9.9.147.1.1.2.2.1.1',
  cfwNetEventInterface => '1.3.6.1.4.1.9.9.147.1.1.2.2.1.2',
  cfwNetEventSrcIpAddress => '1.3.6.1.4.1.9.9.147.1.1.2.2.1.3',
  cfwNetEventInsideSrcIpAddress => '1.3.6.1.4.1.9.9.147.1.1.2.2.1.4',
  cfwNetEventDstIpAddress => '1.3.6.1.4.1.9.9.147.1.1.2.2.1.5',
  cfwNetEventInsideDstIpAddress => '1.3.6.1.4.1.9.9.147.1.1.2.2.1.6',
  cfwNetEventSrcIpPort => '1.3.6.1.4.1.9.9.147.1.1.2.2.1.7',
  cfwNetEventInsideSrcIpPort => '1.3.6.1.4.1.9.9.147.1.1.2.2.1.8',
  cfwNetEventDstIpPort => '1.3.6.1.4.1.9.9.147.1.1.2.2.1.9',
  cfwNetEventInsideDstIpPort => '1.3.6.1.4.1.9.9.147.1.1.2.2.1.10',
  cfwNetEventService => '1.3.6.1.4.1.9.9.147.1.1.2.2.1.11',
  cfwNetEventServiceDefinition => 'CISCO-FIREWALL-MIB::Services',
  cfwNetEventServiceInformation => '1.3.6.1.4.1.9.9.147.1.1.2.2.1.12',
  cfwNetEventIdentity => '1.3.6.1.4.1.9.9.147.1.1.2.2.1.13',
  cfwNetEventDescription => '1.3.6.1.4.1.9.9.147.1.1.2.2.1.14',
  cfwSystem => '1.3.6.1.4.1.9.9.147.1.2',
  cfwStatus => '1.3.6.1.4.1.9.9.147.1.2.1',
  cfwHardwareStatusTable => '1.3.6.1.4.1.9.9.147.1.2.1.1',
  cfwHardwareStatusEntry => '1.3.6.1.4.1.9.9.147.1.2.1.1.1',
  cfwHardwareType => '1.3.6.1.4.1.9.9.147.1.2.1.1.1.1',
  cfwHardwareTypeDefinition => 'CISCO-FIREWALL-MIB::Hardware',
  cfwHardwareInformation => '1.3.6.1.4.1.9.9.147.1.2.1.1.1.2',
  cfwHardwareStatusValue => '1.3.6.1.4.1.9.9.147.1.2.1.1.1.3',
  cfwHardwareStatusValueDefinition => 'CISCO-FIREWALL-MIB::HardwareStatus',
  cfwHardwareStatusDetail => '1.3.6.1.4.1.9.9.147.1.2.1.1.1.4',
  cfwStatistics => '1.3.6.1.4.1.9.9.147.1.2.2',
  cfwBufferStatsTable => '1.3.6.1.4.1.9.9.147.1.2.2.1',
  cfwBufferStatsEntry => '1.3.6.1.4.1.9.9.147.1.2.2.1.1',
  cfwBufferStatSize => '1.3.6.1.4.1.9.9.147.1.2.2.1.1.1',
  cfwBufferStatType => '1.3.6.1.4.1.9.9.147.1.2.2.1.1.2',
  cfwBufferStatTypeDefinition => 'CISCO-FIREWALL-MIB::ResourceStatistics',
  cfwBufferStatInformation => '1.3.6.1.4.1.9.9.147.1.2.2.1.1.3',
  cfwBufferStatValue => '1.3.6.1.4.1.9.9.147.1.2.2.1.1.4',
  cfwConnectionStatTable => '1.3.6.1.4.1.9.9.147.1.2.2.2',
  cfwConnectionStatEntry => '1.3.6.1.4.1.9.9.147.1.2.2.2.1',
  cfwConnectionStatService => '1.3.6.1.4.1.9.9.147.1.2.2.2.1.1',
  cfwConnectionStatServiceDefinition => 'CISCO-FIREWALL-MIB::Services',
  cfwConnectionStatType => '1.3.6.1.4.1.9.9.147.1.2.2.2.1.2',
  cfwConnectionStatTypeDefinition => 'CISCO-FIREWALL-MIB::ConnectionStat',
  cfwConnectionStatDescription => '1.3.6.1.4.1.9.9.147.1.2.2.2.1.3',
  cfwConnectionStatCount => '1.3.6.1.4.1.9.9.147.1.2.2.2.1.4',
  cfwConnectionStatValue => '1.3.6.1.4.1.9.9.147.1.2.2.2.1.5',
  ciscoFirewallMIBNotificationPrefix => '1.3.6.1.4.1.9.9.147.2',
  ciscoFirewallMIBNotifications => '1.3.6.1.4.1.9.9.147.2.0',
  ciscoFirewallMIBConformance => '1.3.6.1.4.1.9.9.147.3',
  ciscoFirewallMIBCompliances => '1.3.6.1.4.1.9.9.147.3.1',
  ciscoFirewallMIBGroups => '1.3.6.1.4.1.9.9.147.3.2',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'CISCO-FIREWALL-MIB'} = {
  AccessEvent => {
    '1' => 'other',
    '2' => 'grant',
    '3' => 'deny',
    '4' => 'denyMult',
    '5' => 'error',
  },
  GenericEvent => {
    '1' => 'abnormal',
    '2' => 'okay',
    '3' => 'error',
  },
  ResourceStatistics => {
    '1' => 'highUse',
    '2' => 'highLoad',
    '3' => 'maximum',
    '4' => 'minimum',
    '5' => 'low',
    '6' => 'high',
    '7' => 'average',
    '8' => 'free',
    '9' => 'inUse',
  },
  ConnectionEvent => {
    '1' => 'other',
    '2' => 'accept',
    '3' => 'error',
    '4' => 'drop',
    '5' => 'close',
    '6' => 'timeout',
    '7' => 'refused',
    '8' => 'reset',
    '9' => 'noResp',
  },
  AuthenticationEvent => {
    '1' => 'other',
    '2' => 'succ',
    '3' => 'error',
    '4' => 'fail',
    '5' => 'succPriv',
    '6' => 'failPriv',
    '7' => 'failMult',
  },
  ContentInspectionEvent => {
    '1' => 'other',
    '2' => 'okay',
    '3' => 'error',
    '4' => 'found',
    '5' => 'clean',
    '6' => 'reject',
    '7' => 'saved',
  },
  HardwareStatus => {
    '1' => 'other',
    '2' => 'up',
    '3' => 'down',
    '4' => 'error',
    '5' => 'overTemp',
    '6' => 'busy',
    '7' => 'noMedia',
    '8' => 'backup',
    '9' => 'active',
    '10' => 'standby',
  },
  Hardware => {
    '1' => 'memory',
    '2' => 'disk',
    '3' => 'power',
    '4' => 'netInterface',
    '5' => 'cpu',
    '6' => 'primaryUnit',
    '7' => 'secondaryUnit',
    '8' => 'other',
  },
  ConnectionStat => {
    '1' => 'other',
    '2' => 'totalOpen',
    '3' => 'currentOpen',
    '4' => 'currentClosing',
    '5' => 'currentHalfOpen',
    '6' => 'currentInUse',
    '7' => 'high',
  },
  Services => {
    '1' => 'otherFWService',
    '2' => 'fileXferFtp',
    '3' => 'fileXferTftp',
    '4' => 'fileXferFtps',
    '5' => 'loginTelnet',
    '6' => 'loginRlogin',
    '7' => 'loginTelnets',
    '8' => 'remoteExecSunRPC',
    '9' => 'remoteExecMSRPC',
    '10' => 'remoteExecRsh',
    '11' => 'remoteExecXserver',
    '12' => 'webHttp',
    '13' => 'webHttps',
    '14' => 'mailSmtp',
    '15' => 'multimediaStreamworks',
    '16' => 'multimediaH323',
    '17' => 'multimediaNetShow',
    '18' => 'multimediaVDOLive',
    '19' => 'multimediaRealAV',
    '20' => 'multimediaRTSP',
    '21' => 'dbOracle',
    '22' => 'dbMSsql',
    '23' => 'contInspProgLang',
    '24' => 'contInspUrl',
    '25' => 'directoryNis',
    '26' => 'directoryDns',
    '27' => 'directoryNetbiosns',
    '28' => 'directoryNetbiosdgm',
    '29' => 'directoryNetbiosssn',
    '30' => 'directoryWins',
    '31' => 'qryWhois',
    '32' => 'qryFinger',
    '33' => 'qryIdent',
    '34' => 'fsNfsStatus',
    '35' => 'fsNfs',
    '36' => 'fsCifs',
    '37' => 'protoIcmp',
    '38' => 'protoTcp',
    '39' => 'protoUdp',
    '40' => 'protoIp',
    '41' => 'protoSnmp',
  },
  SecurityEvent => {
    '1' => 'other',
    '2' => 'none',
    '3' => 'dos',
    '4' => 'recon',
    '5' => 'pakFwd',
    '6' => 'addrSpoof',
    '7' => 'svcSpoof',
    '8' => 'thirdParty',
    '9' => 'complete',
    '10' => 'invalPak',
    '11' => 'illegCom',
    '12' => 'policy',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOHSRPMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCO-HSRP-MIB'} = {
  url => '',
  name => 'CISCO-HSRP-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::requirements->{'CISCO-HSRP-MIB'} = [
  'SNMPv2-TC-v1-MIB',
];

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCO-HSRP-MIB'} = {
  'cHsrpGrpTable' => '1.3.6.1.4.1.9.9.106.1.2.1',
  'cHsrpGrpEntry' => '1.3.6.1.4.1.9.9.106.1.2.1.1',
  'cHsrpGrpNumber' => '1.3.6.1.4.1.9.9.106.1.2.1.1.1',
  'cHsrpGrpAuth' => '1.3.6.1.4.1.9.9.106.1.2.1.1.2',
  'cHsrpGrpPriority' => '1.3.6.1.4.1.9.9.106.1.2.1.1.3',
  'cHsrpGrpPreempt' => '1.3.6.1.4.1.9.9.106.1.2.1.1.4',
  'cHsrpGrpPreemptDelay' => '1.3.6.1.4.1.9.9.106.1.2.1.1.5',
  'cHsrpGrpUseConfiguredTimers' => '1.3.6.1.4.1.9.9.106.1.2.1.1.6',
  'cHsrpGrpConfiguredHelloTime' => '1.3.6.1.4.1.9.9.106.1.2.1.1.7',
  'cHsrpGrpConfiguredHoldTime' => '1.3.6.1.4.1.9.9.106.1.2.1.1.8',
  'cHsrpGrpLearnedHelloTime' => '1.3.6.1.4.1.9.9.106.1.2.1.1.9',
  'cHsrpGrpLearnedHoldTime' => '1.3.6.1.4.1.9.9.106.1.2.1.1.10',
  'cHsrpGrpVirtualIpAddr' => '1.3.6.1.4.1.9.9.106.1.2.1.1.11',
  'cHsrpGrpUseConfigVirtualIpAddr' => '1.3.6.1.4.1.9.9.106.1.2.1.1.12',
  'cHsrpGrpActiveRouter' => '1.3.6.1.4.1.9.9.106.1.2.1.1.13',
  'cHsrpGrpStandbyRouter' => '1.3.6.1.4.1.9.9.106.1.2.1.1.14',
  'cHsrpGrpStandbyState' => '1.3.6.1.4.1.9.9.106.1.2.1.1.15',
  'cHsrpGrpStandbyStateDefinition' => 'CISCO-HSRP-MIB::HsrpState',
  'cHsrpGrpVirtualMacAddr' => '1.3.6.1.4.1.9.9.106.1.2.1.1.16',
  'cHsrpGrpEntryRowStatus' => '1.3.6.1.4.1.9.9.106.1.2.1.1.17',
  'cHsrpGrpEntryRowStatusDefinition' => 'SNMPv2-TC-v1-MIB::RowStatus',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'CISCO-HSRP-MIB'} = {
  'HsrpState' => {
    '1' => 'initial',
    '2' => 'learn',
    '3' => 'listen',
    '4' => 'speak',
    '5' => 'standby',
    '6' => 'active',
  },
};



package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOIETFNATMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCO-IETF-NAT-MIB'} = {
  url => '',
  name => 'CISCO-IETF-NAT-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCO-IETF-NAT-MIB'} = {
  'ciscoNatMIBObjects' => '1.3.6.1.4.1.9.10.77.1',
  'cnatConfig' => '1.3.6.1.4.1.9.10.77.1.1',
  'cnatConfTable' => '1.3.6.1.4.1.9.10.77.1.1.1',
  'cnatConfEntry' => '1.3.6.1.4.1.9.10.77.1.1.1.1',
  'cnatConfName' => '1.3.6.1.4.1.9.10.77.1.1.1.1.1',
  'cnatConfServiceType' => '1.3.6.1.4.1.9.10.77.1.1.1.1.2',
  'cnatConfTimeoutIcmpIdle' => '1.3.6.1.4.1.9.10.77.1.1.1.1.3',
  'cnatConfTimeoutUdpIdle' => '1.3.6.1.4.1.9.10.77.1.1.1.1.4',
  'cnatConfTimeoutTcpIdle' => '1.3.6.1.4.1.9.10.77.1.1.1.1.5',
  'cnatConfTimeoutTcpNeg' => '1.3.6.1.4.1.9.10.77.1.1.1.1.6',
  'cnatConfTimeoutOther' => '1.3.6.1.4.1.9.10.77.1.1.1.1.7',
  'cnatConfMaxBindLeaseTime' => '1.3.6.1.4.1.9.10.77.1.1.1.1.8',
  'cnatConfMaxBindIdleTime' => '1.3.6.1.4.1.9.10.77.1.1.1.1.9',
  'cnatConfStorageType' => '1.3.6.1.4.1.9.10.77.1.1.1.1.10',
  'cnatConfStatus' => '1.3.6.1.4.1.9.10.77.1.1.1.1.11',
  'cnatConfStaticAddrMapTable' => '1.3.6.1.4.1.9.10.77.1.1.2',
  'cnatConfStaticAddrMapEntry' => '1.3.6.1.4.1.9.10.77.1.1.2.1',
  'cnatConfStaticAddrMapName' => '1.3.6.1.4.1.9.10.77.1.1.2.1.1',
  'cnatConfStaticAddrMapType' => '1.3.6.1.4.1.9.10.77.1.1.2.1.2',
  'cnatConfStaticLocalAddrFrom' => '1.3.6.1.4.1.9.10.77.1.1.2.1.3',
  'cnatConfStaticLocalAddrTo' => '1.3.6.1.4.1.9.10.77.1.1.2.1.4',
  'cnatConfStaticLocalPortFrom' => '1.3.6.1.4.1.9.10.77.1.1.2.1.5',
  'cnatConfStaticLocalPortTo' => '1.3.6.1.4.1.9.10.77.1.1.2.1.6',
  'cnatConfStaticGlobalAddrFrom' => '1.3.6.1.4.1.9.10.77.1.1.2.1.7',
  'cnatConfStaticGlobalAddrTo' => '1.3.6.1.4.1.9.10.77.1.1.2.1.8',
  'cnatConfStaticGlobalPortFrom' => '1.3.6.1.4.1.9.10.77.1.1.2.1.9',
  'cnatConfStaticGlobalPortTo' => '1.3.6.1.4.1.9.10.77.1.1.2.1.10',
  'cnatConfStaticProtocol' => '1.3.6.1.4.1.9.10.77.1.1.2.1.11',
  'cnatConfStaticAddrMapStorageType' => '1.3.6.1.4.1.9.10.77.1.1.2.1.12',
  'cnatConfStaticAddrMapStatus' => '1.3.6.1.4.1.9.10.77.1.1.2.1.13',
  'cnatConfDynAddrMapTable' => '1.3.6.1.4.1.9.10.77.1.1.3',
  'cnatConfDynAddrMapEntry' => '1.3.6.1.4.1.9.10.77.1.1.3.1',
  'cnatConfDynAddrMapName' => '1.3.6.1.4.1.9.10.77.1.1.3.1.1',
  'cnatConfDynAddressMapType' => '1.3.6.1.4.1.9.10.77.1.1.3.1.2',
  'cnatConfDynLocalAddrFrom' => '1.3.6.1.4.1.9.10.77.1.1.3.1.3',
  'cnatConfDynLocalAddrTo' => '1.3.6.1.4.1.9.10.77.1.1.3.1.4',
  'cnatConfDynLocalPortFrom' => '1.3.6.1.4.1.9.10.77.1.1.3.1.5',
  'cnatConfDynLocalPortTo' => '1.3.6.1.4.1.9.10.77.1.1.3.1.6',
  'cnatConfDynGlobalAddrFrom' => '1.3.6.1.4.1.9.10.77.1.1.3.1.7',
  'cnatConfDynGlobalAddrTo' => '1.3.6.1.4.1.9.10.77.1.1.3.1.8',
  'cnatConfDynGlobalPortFrom' => '1.3.6.1.4.1.9.10.77.1.1.3.1.9',
  'cnatConfDynGlobalPortTo' => '1.3.6.1.4.1.9.10.77.1.1.3.1.10',
  'cnatConfDynProtocol' => '1.3.6.1.4.1.9.10.77.1.1.3.1.11',
  'cnatConfDynAddrMapStorageType' => '1.3.6.1.4.1.9.10.77.1.1.3.1.12',
  'cnatConfDynAddrMapStatus' => '1.3.6.1.4.1.9.10.77.1.1.3.1.13',
  'cnatInterfaceTable' => '1.3.6.1.4.1.9.10.77.1.1.4',
  'cnatInterfaceEntry' => '1.3.6.1.4.1.9.10.77.1.1.4.1',
  'cnatInterfaceIndex' => '1.3.6.1.4.1.9.10.77.1.1.4.1.1',
  'cnatInterfaceRealm' => '1.3.6.1.4.1.9.10.77.1.1.4.1.2',
  'cnatInterfaceStorageType' => '1.3.6.1.4.1.9.10.77.1.1.4.1.3',
  'cnatInterfaceStatus' => '1.3.6.1.4.1.9.10.77.1.1.4.1.4',
  'cnatBind' => '1.3.6.1.4.1.9.10.77.1.2',
  'cnatAddrBindNumberOfEntries' => '1.3.6.1.4.1.9.10.77.1.2.1.0',
  'cnatAddrBindTable' => '1.3.6.1.4.1.9.10.77.1.2.2',
  'cnatAddrBindEntry' => '1.3.6.1.4.1.9.10.77.1.2.2.1',
  'cnatAddrBindLocalAddr' => '1.3.6.1.4.1.9.10.77.1.2.2.1.1',
  'cnatAddrBindGlobalAddr' => '1.3.6.1.4.1.9.10.77.1.2.2.1.2',
  'cnatAddrBindId' => '1.3.6.1.4.1.9.10.77.1.2.2.1.3',
  'cnatAddrBindDirection' => '1.3.6.1.4.1.9.10.77.1.2.2.1.4',
  'cnatAddrBindType' => '1.3.6.1.4.1.9.10.77.1.2.2.1.5',
  'cnatAddrBindConfName' => '1.3.6.1.4.1.9.10.77.1.2.2.1.6',
  'cnatAddrBindSessionCount' => '1.3.6.1.4.1.9.10.77.1.2.2.1.7',
  'cnatAddrBindCurrentIdleTime' => '1.3.6.1.4.1.9.10.77.1.2.2.1.8',
  'cnatAddrBindInTranslate' => '1.3.6.1.4.1.9.10.77.1.2.2.1.9',
  'cnatAddrBindOutTranslate' => '1.3.6.1.4.1.9.10.77.1.2.2.1.10',
  'cnatAddrPortBindNumberOfEntries' => '1.3.6.1.4.1.9.10.77.1.2.3.0',
  'cnatAddrPortBindTable' => '1.3.6.1.4.1.9.10.77.1.2.4',
  'cnatAddrPortBindEntry' => '1.3.6.1.4.1.9.10.77.1.2.4.1',
  'cnatAddrPortBindLocalAddr' => '1.3.6.1.4.1.9.10.77.1.2.4.1.1',
  'cnatAddrPortBindLocalPort' => '1.3.6.1.4.1.9.10.77.1.2.4.1.2',
  'cnatAddrPortBindProtocol' => '1.3.6.1.4.1.9.10.77.1.2.4.1.3',
  'cnatAddrPortBindGlobalAddr' => '1.3.6.1.4.1.9.10.77.1.2.4.1.4',
  'cnatAddrPortBindGlobalPort' => '1.3.6.1.4.1.9.10.77.1.2.4.1.5',
  'cnatAddrPortBindId' => '1.3.6.1.4.1.9.10.77.1.2.4.1.6',
  'cnatAddrPortBindDirection' => '1.3.6.1.4.1.9.10.77.1.2.4.1.7',
  'cnatAddrPortBindType' => '1.3.6.1.4.1.9.10.77.1.2.4.1.8',
  'cnatAddrPortBindConfName' => '1.3.6.1.4.1.9.10.77.1.2.4.1.9',
  'cnatAddrPortBindSessionCount' => '1.3.6.1.4.1.9.10.77.1.2.4.1.10',
  'cnatAddrPortBindCurrentIdleTime' => '1.3.6.1.4.1.9.10.77.1.2.4.1.11',
  'cnatAddrPortBindInTranslate' => '1.3.6.1.4.1.9.10.77.1.2.4.1.12',
  'cnatAddrPortBindOutTranslate' => '1.3.6.1.4.1.9.10.77.1.2.4.1.13',
  'cnatSessionTable' => '1.3.6.1.4.1.9.10.77.1.2.5',
  'cnatSessionEntry' => '1.3.6.1.4.1.9.10.77.1.2.5.1',
  'cnatSessionBindId' => '1.3.6.1.4.1.9.10.77.1.2.5.1.1',
  'cnatSessionId' => '1.3.6.1.4.1.9.10.77.1.2.5.1.2',
  'cnatSessionDirection' => '1.3.6.1.4.1.9.10.77.1.2.5.1.3',
  'cnatSessionUpTime' => '1.3.6.1.4.1.9.10.77.1.2.5.1.4',
  'cnatSessionProtocolType' => '1.3.6.1.4.1.9.10.77.1.2.5.1.5',
  'cnatSessionOrigPrivateAddr' => '1.3.6.1.4.1.9.10.77.1.2.5.1.6',
  'cnatSessionTransPrivateAddr' => '1.3.6.1.4.1.9.10.77.1.2.5.1.7',
  'cnatSessionOrigPrivatePort' => '1.3.6.1.4.1.9.10.77.1.2.5.1.8',
  'cnatSessionTransPrivatePort' => '1.3.6.1.4.1.9.10.77.1.2.5.1.9',
  'cnatSessionOrigPublicAddr' => '1.3.6.1.4.1.9.10.77.1.2.5.1.10',
  'cnatSessionTransPublicAddr' => '1.3.6.1.4.1.9.10.77.1.2.5.1.11',
  'cnatSessionOrigPublicPort' => '1.3.6.1.4.1.9.10.77.1.2.5.1.12',
  'cnatSessionTransPublicPort' => '1.3.6.1.4.1.9.10.77.1.2.5.1.13',
  'cnatSessionCurrentIdletime' => '1.3.6.1.4.1.9.10.77.1.2.5.1.14',
  'cnatSessionSecondBindId' => '1.3.6.1.4.1.9.10.77.1.2.5.1.15',
  'cnatSessionInTranslate' => '1.3.6.1.4.1.9.10.77.1.2.5.1.16',
  'cnatSessionOutTranslate' => '1.3.6.1.4.1.9.10.77.1.2.5.1.17',
  'cnatStatistics' => '1.3.6.1.4.1.9.10.77.1.3',
  'cnatProtocolStatsTable' => '1.3.6.1.4.1.9.10.77.1.3.1',
  'cnatProtocolStatsEntry' => '1.3.6.1.4.1.9.10.77.1.3.1.1',
  'cnatProtocolStatsName' => '1.3.6.1.4.1.9.10.77.1.3.1.1.1',
  'cnatProtocolStatsNameDefinition' => 'CISCO-IETF-NAT-MIB::NATProtocolType',
  'cnatProtocolStatsInTranslate' => '1.3.6.1.4.1.9.10.77.1.3.1.1.2',
  'cnatProtocolStatsOutTranslate' => '1.3.6.1.4.1.9.10.77.1.3.1.1.3',
  'cnatProtocolStatsRejectCount' => '1.3.6.1.4.1.9.10.77.1.3.1.1.4',
  'cnatAddrMapStatsTable' => '1.3.6.1.4.1.9.10.77.1.3.2',
  'cnatAddrMapStatsEntry' => '1.3.6.1.4.1.9.10.77.1.3.2.1',
  'cnatAddrMapStatsConfName' => '1.3.6.1.4.1.9.10.77.1.3.2.1.1',
  'cnatAddrMapStatsMapName' => '1.3.6.1.4.1.9.10.77.1.3.2.1.2',
  'cnatAddrMapStatsInTranslate' => '1.3.6.1.4.1.9.10.77.1.3.2.1.3',
  'cnatAddrMapStatsOutTranslate' => '1.3.6.1.4.1.9.10.77.1.3.2.1.4',
  'cnatAddrMapStatsNoResource' => '1.3.6.1.4.1.9.10.77.1.3.2.1.5',
  'cnatAddrMapStatsAddrUsed' => '1.3.6.1.4.1.9.10.77.1.3.2.1.6',
  'cnatInterfaceStatsTable' => '1.3.6.1.4.1.9.10.77.1.3.3',
  'cnatInterfaceStatsEntry' => '1.3.6.1.4.1.9.10.77.1.3.3.1',
  'cnatInterfacePktsIn' => '1.3.6.1.4.1.9.10.77.1.3.3.1.1',
  'cnatInterfacePktsOut' => '1.3.6.1.4.1.9.10.77.1.3.3.1.2',
  'ciscoNatMIBNotificationPrefix' => '1.3.6.1.4.1.9.10.77.2',
  'ciscoNatMIBNotifications' => '1.3.6.1.4.1.9.10.77.2.0',
  'ciscoNatMIBConformance' => '1.3.6.1.4.1.9.10.77.3',
  'ciscoNatMIBCompliances' => '1.3.6.1.4.1.9.10.77.3.1',
  'ciscoNatMIBGroups' => '1.3.6.1.4.1.9.10.77.3.2',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'CISCO-IETF-NAT-MIB'} = {
  'NATProtocolType' => {
    '1' => 'other',
    '2' => 'icmp',
    '3' => 'udp',
    '4' => 'tcp',
  },
};



package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOIPSECFLOWMONITORMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCO-IPSEC-FLOW-MONITOR-MIB'} = {
  url => '',
  name => 'CISCO-IPSEC-FLOW-MONITOR-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCO-IPSEC-FLOW-MONITOR-MIB'} = {
  'enterprises' => '1.3.6.1.4.1',
  'cisco' => '1.3.6.1.4.1.9',
  'ciscoMgmt' => '1.3.6.1.4.1.9.9',
  'ciscoIpSecFlowMonitorMIB' => '1.3.6.1.4.1.9.9.171',
  'ciscoIpSecFlowMonitorMIBDefinition' => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  'cipSecMIBObjects' => '1.3.6.1.4.1.9.9.171.1',
  'cipSecLevels' => '1.3.6.1.4.1.9.9.171.1.1',
  'cipSecMibLevel' => '1.3.6.1.4.1.9.9.171.1.1.1',
  'cipSecPhaseOne' => '1.3.6.1.4.1.9.9.171.1.2',
  'cikeGlobalStats' => '1.3.6.1.4.1.9.9.171.1.2.1',
  'cikeGlobalActiveTunnels' => '1.3.6.1.4.1.9.9.171.1.2.1.1',
  'cikeGlobalPreviousTunnels' => '1.3.6.1.4.1.9.9.171.1.2.1.2',
  'cikeGlobalInOctets' => '1.3.6.1.4.1.9.9.171.1.2.1.3',
  'cikeGlobalInPkts' => '1.3.6.1.4.1.9.9.171.1.2.1.4',
  'cikeGlobalInDropPkts' => '1.3.6.1.4.1.9.9.171.1.2.1.5',
  'cikeGlobalInNotifys' => '1.3.6.1.4.1.9.9.171.1.2.1.6',
  'cikeGlobalInP2Exchgs' => '1.3.6.1.4.1.9.9.171.1.2.1.7',
  'cikeGlobalInP2ExchgInvalids' => '1.3.6.1.4.1.9.9.171.1.2.1.8',
  'cikeGlobalInP2ExchgRejects' => '1.3.6.1.4.1.9.9.171.1.2.1.9',
  'cikeGlobalInP2SaDelRequests' => '1.3.6.1.4.1.9.9.171.1.2.1.10',
  'cikeGlobalOutOctets' => '1.3.6.1.4.1.9.9.171.1.2.1.11',
  'cikeGlobalOutPkts' => '1.3.6.1.4.1.9.9.171.1.2.1.12',
  'cikeGlobalOutDropPkts' => '1.3.6.1.4.1.9.9.171.1.2.1.13',
  'cikeGlobalOutNotifys' => '1.3.6.1.4.1.9.9.171.1.2.1.14',
  'cikeGlobalOutP2Exchgs' => '1.3.6.1.4.1.9.9.171.1.2.1.15',
  'cikeGlobalOutP2ExchgInvalids' => '1.3.6.1.4.1.9.9.171.1.2.1.16',
  'cikeGlobalOutP2ExchgRejects' => '1.3.6.1.4.1.9.9.171.1.2.1.17',
  'cikeGlobalOutP2SaDelRequests' => '1.3.6.1.4.1.9.9.171.1.2.1.18',
  'cikeGlobalInitTunnels' => '1.3.6.1.4.1.9.9.171.1.2.1.19',
  'cikeGlobalInitTunnelFails' => '1.3.6.1.4.1.9.9.171.1.2.1.20',
  'cikeGlobalRespTunnelFails' => '1.3.6.1.4.1.9.9.171.1.2.1.21',
  'cikeGlobalSysCapFails' => '1.3.6.1.4.1.9.9.171.1.2.1.22',
  'cikeGlobalAuthFails' => '1.3.6.1.4.1.9.9.171.1.2.1.23',
  'cikeGlobalDecryptFails' => '1.3.6.1.4.1.9.9.171.1.2.1.24',
  'cikeGlobalHashValidFails' => '1.3.6.1.4.1.9.9.171.1.2.1.25',
  'cikeGlobalNoSaFails' => '1.3.6.1.4.1.9.9.171.1.2.1.26',
  'cikePeerTable' => '1.3.6.1.4.1.9.9.171.1.2.2',
  'cikePeerEntry' => '1.3.6.1.4.1.9.9.171.1.2.2.1',
  'cikePeerLocalType' => '1.3.6.1.4.1.9.9.171.1.2.2.1.1',
  'cikePeerLocalTypeDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::IkePeerType',
  'cikePeerLocalValue' => '1.3.6.1.4.1.9.9.171.1.2.2.1.2',
  'cikePeerRemoteType' => '1.3.6.1.4.1.9.9.171.1.2.2.1.3',
  'cikePeerRemoteTypeDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::IkePeerType',
  'cikePeerRemoteValue' => '1.3.6.1.4.1.9.9.171.1.2.2.1.4',
  'cikePeerIntIndex' => '1.3.6.1.4.1.9.9.171.1.2.2.1.5',
  'cikePeerLocalAddr' => '1.3.6.1.4.1.9.9.171.1.2.2.1.6',
  'cikePeerRemoteAddr' => '1.3.6.1.4.1.9.9.171.1.2.2.1.7',
  'cikePeerActiveTime' => '1.3.6.1.4.1.9.9.171.1.2.2.1.8',
  'cikePeerActiveTunnelIndex' => '1.3.6.1.4.1.9.9.171.1.2.2.1.9',
  'cikeTunnelTable' => '1.3.6.1.4.1.9.9.171.1.2.3',
  'cikeTunnelEntry' => '1.3.6.1.4.1.9.9.171.1.2.3.1',
  'cikeTunIndex' => '1.3.6.1.4.1.9.9.171.1.2.3.1.1',
  'cikeTunLocalType' => '1.3.6.1.4.1.9.9.171.1.2.3.1.2',
  'cikeTunLocalTypeDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::IkePeerType',
  'cikeTunLocalValue' => '1.3.6.1.4.1.9.9.171.1.2.3.1.3',
  'cikeTunLocalAddr' => '1.3.6.1.4.1.9.9.171.1.2.3.1.4',
  'cikeTunLocalName' => '1.3.6.1.4.1.9.9.171.1.2.3.1.5',
  'cikeTunRemoteType' => '1.3.6.1.4.1.9.9.171.1.2.3.1.6',
  'cikeTunRemoteTypeDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::IkePeerType',
  'cikeTunRemoteValue' => '1.3.6.1.4.1.9.9.171.1.2.3.1.7',
  'cikeTunRemoteAddr' => '1.3.6.1.4.1.9.9.171.1.2.3.1.8',
  'cikeTunRemoteName' => '1.3.6.1.4.1.9.9.171.1.2.3.1.9',
  'cikeTunNegoMode' => '1.3.6.1.4.1.9.9.171.1.2.3.1.10',
  'cikeTunNegoModeDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::IkeNegoMode',
  'cikeTunDiffHellmanGrp' => '1.3.6.1.4.1.9.9.171.1.2.3.1.11',
  'cikeTunDiffHellmanGrpDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::DiffHellmanGrp',
  'cikeTunEncryptAlgo' => '1.3.6.1.4.1.9.9.171.1.2.3.1.12',
  'cikeTunEncryptAlgoDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::EncryptAlgo',
  'cikeTunHashAlgo' => '1.3.6.1.4.1.9.9.171.1.2.3.1.13',
  'cikeTunHashAlgoDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::IkeHashAlgo',
  'cikeTunAuthMethod' => '1.3.6.1.4.1.9.9.171.1.2.3.1.14',
  'cikeTunAuthMethodDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::IkeAuthMethod',
  'cikeTunLifeTime' => '1.3.6.1.4.1.9.9.171.1.2.3.1.15',
  'cikeTunActiveTime' => '1.3.6.1.4.1.9.9.171.1.2.3.1.16',
  'cikeTunSaRefreshThreshold' => '1.3.6.1.4.1.9.9.171.1.2.3.1.17',
  'cikeTunTotalRefreshes' => '1.3.6.1.4.1.9.9.171.1.2.3.1.18',
  'cikeTunInOctets' => '1.3.6.1.4.1.9.9.171.1.2.3.1.19',
  'cikeTunInPkts' => '1.3.6.1.4.1.9.9.171.1.2.3.1.20',
  'cikeTunInDropPkts' => '1.3.6.1.4.1.9.9.171.1.2.3.1.21',
  'cikeTunInNotifys' => '1.3.6.1.4.1.9.9.171.1.2.3.1.22',
  'cikeTunInP2Exchgs' => '1.3.6.1.4.1.9.9.171.1.2.3.1.23',
  'cikeTunInP2ExchgInvalids' => '1.3.6.1.4.1.9.9.171.1.2.3.1.24',
  'cikeTunInP2ExchgRejects' => '1.3.6.1.4.1.9.9.171.1.2.3.1.25',
  'cikeTunInP2SaDelRequests' => '1.3.6.1.4.1.9.9.171.1.2.3.1.26',
  'cikeTunOutOctets' => '1.3.6.1.4.1.9.9.171.1.2.3.1.27',
  'cikeTunOutPkts' => '1.3.6.1.4.1.9.9.171.1.2.3.1.28',
  'cikeTunOutDropPkts' => '1.3.6.1.4.1.9.9.171.1.2.3.1.29',
  'cikeTunOutNotifys' => '1.3.6.1.4.1.9.9.171.1.2.3.1.30',
  'cikeTunOutP2Exchgs' => '1.3.6.1.4.1.9.9.171.1.2.3.1.31',
  'cikeTunOutP2ExchgInvalids' => '1.3.6.1.4.1.9.9.171.1.2.3.1.32',
  'cikeTunOutP2ExchgRejects' => '1.3.6.1.4.1.9.9.171.1.2.3.1.33',
  'cikeTunOutP2SaDelRequests' => '1.3.6.1.4.1.9.9.171.1.2.3.1.34',
  'cikeTunStatus' => '1.3.6.1.4.1.9.9.171.1.2.3.1.35',
  'cikeTunStatusDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::TunnelStatus',
  'cikePeerCorrTable' => '1.3.6.1.4.1.9.9.171.1.2.4',
  'cikePeerCorrEntry' => '1.3.6.1.4.1.9.9.171.1.2.4.1',
  'cikePeerCorrLocalType' => '1.3.6.1.4.1.9.9.171.1.2.4.1.1',
  'cikePeerCorrLocalTypeDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::IkePeerType',
  'cikePeerCorrLocalValue' => '1.3.6.1.4.1.9.9.171.1.2.4.1.2',
  'cikePeerCorrRemoteType' => '1.3.6.1.4.1.9.9.171.1.2.4.1.3',
  'cikePeerCorrRemoteTypeDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::IkePeerType',
  'cikePeerCorrRemoteValue' => '1.3.6.1.4.1.9.9.171.1.2.4.1.4',
  'cikePeerCorrIntIndex' => '1.3.6.1.4.1.9.9.171.1.2.4.1.5',
  'cikePeerCorrSeqNum' => '1.3.6.1.4.1.9.9.171.1.2.4.1.6',
  'cikePeerCorrIpSecTunIndex' => '1.3.6.1.4.1.9.9.171.1.2.4.1.7',
  'cikePhase1GWStatsTable' => '1.3.6.1.4.1.9.9.171.1.2.5',
  'cikePhase1GWStatsEntry' => '1.3.6.1.4.1.9.9.171.1.2.5.1',
  'cikePhase1GWActiveTunnels' => '1.3.6.1.4.1.9.9.171.1.2.5.1.1',
  'cikePhase1GWPreviousTunnels' => '1.3.6.1.4.1.9.9.171.1.2.5.1.2',
  'cikePhase1GWInOctets' => '1.3.6.1.4.1.9.9.171.1.2.5.1.3',
  'cikePhase1GWInPkts' => '1.3.6.1.4.1.9.9.171.1.2.5.1.4',
  'cikePhase1GWInDropPkts' => '1.3.6.1.4.1.9.9.171.1.2.5.1.5',
  'cikePhase1GWInNotifys' => '1.3.6.1.4.1.9.9.171.1.2.5.1.6',
  'cikePhase1GWInP2Exchgs' => '1.3.6.1.4.1.9.9.171.1.2.5.1.7',
  'cikePhase1GWInP2ExchgInvalids' => '1.3.6.1.4.1.9.9.171.1.2.5.1.8',
  'cikePhase1GWInP2ExchgRejects' => '1.3.6.1.4.1.9.9.171.1.2.5.1.9',
  'cikePhase1GWInP2SaDelRequests' => '1.3.6.1.4.1.9.9.171.1.2.5.1.10',
  'cikePhase1GWOutOctets' => '1.3.6.1.4.1.9.9.171.1.2.5.1.11',
  'cikePhase1GWOutPkts' => '1.3.6.1.4.1.9.9.171.1.2.5.1.12',
  'cikePhase1GWOutDropPkts' => '1.3.6.1.4.1.9.9.171.1.2.5.1.13',
  'cikePhase1GWOutNotifys' => '1.3.6.1.4.1.9.9.171.1.2.5.1.14',
  'cikePhase1GWOutP2Exchgs' => '1.3.6.1.4.1.9.9.171.1.2.5.1.15',
  'cikePhase1GWOutP2ExchgInvalids' => '1.3.6.1.4.1.9.9.171.1.2.5.1.16',
  'cikePhase1GWOutP2ExchgRejects' => '1.3.6.1.4.1.9.9.171.1.2.5.1.17',
  'cikePhase1GWOutP2SaDelRequests' => '1.3.6.1.4.1.9.9.171.1.2.5.1.18',
  'cikePhase1GWInitTunnels' => '1.3.6.1.4.1.9.9.171.1.2.5.1.19',
  'cikePhase1GWInitTunnelFails' => '1.3.6.1.4.1.9.9.171.1.2.5.1.20',
  'cikePhase1GWRespTunnelFails' => '1.3.6.1.4.1.9.9.171.1.2.5.1.21',
  'cikePhase1GWSysCapFails' => '1.3.6.1.4.1.9.9.171.1.2.5.1.22',
  'cikePhase1GWAuthFails' => '1.3.6.1.4.1.9.9.171.1.2.5.1.23',
  'cikePhase1GWDecryptFails' => '1.3.6.1.4.1.9.9.171.1.2.5.1.24',
  'cikePhase1GWHashValidFails' => '1.3.6.1.4.1.9.9.171.1.2.5.1.25',
  'cikePhase1GWNoSaFails' => '1.3.6.1.4.1.9.9.171.1.2.5.1.26',
  'cipSecPhaseTwo' => '1.3.6.1.4.1.9.9.171.1.3',
  'cipSecGlobalStats' => '1.3.6.1.4.1.9.9.171.1.3.1',
  'cipSecGlobalActiveTunnels' => '1.3.6.1.4.1.9.9.171.1.3.1.1',
  'cipSecGlobalPreviousTunnels' => '1.3.6.1.4.1.9.9.171.1.3.1.2',
  'cipSecGlobalInOctets' => '1.3.6.1.4.1.9.9.171.1.3.1.3',
  'cipSecGlobalHcInOctets' => '1.3.6.1.4.1.9.9.171.1.3.1.4',
  'cipSecGlobalInOctWraps' => '1.3.6.1.4.1.9.9.171.1.3.1.5',
  'cipSecGlobalInDecompOctets' => '1.3.6.1.4.1.9.9.171.1.3.1.6',
  'cipSecGlobalHcInDecompOctets' => '1.3.6.1.4.1.9.9.171.1.3.1.7',
  'cipSecGlobalInDecompOctWraps' => '1.3.6.1.4.1.9.9.171.1.3.1.8',
  'cipSecGlobalInPkts' => '1.3.6.1.4.1.9.9.171.1.3.1.9',
  'cipSecGlobalInDrops' => '1.3.6.1.4.1.9.9.171.1.3.1.10',
  'cipSecGlobalInReplayDrops' => '1.3.6.1.4.1.9.9.171.1.3.1.11',
  'cipSecGlobalInAuths' => '1.3.6.1.4.1.9.9.171.1.3.1.12',
  'cipSecGlobalInAuthFails' => '1.3.6.1.4.1.9.9.171.1.3.1.13',
  'cipSecGlobalInDecrypts' => '1.3.6.1.4.1.9.9.171.1.3.1.14',
  'cipSecGlobalInDecryptFails' => '1.3.6.1.4.1.9.9.171.1.3.1.15',
  'cipSecGlobalOutOctets' => '1.3.6.1.4.1.9.9.171.1.3.1.16',
  'cipSecGlobalHcOutOctets' => '1.3.6.1.4.1.9.9.171.1.3.1.17',
  'cipSecGlobalOutOctWraps' => '1.3.6.1.4.1.9.9.171.1.3.1.18',
  'cipSecGlobalOutUncompOctets' => '1.3.6.1.4.1.9.9.171.1.3.1.19',
  'cipSecGlobalHcOutUncompOctets' => '1.3.6.1.4.1.9.9.171.1.3.1.20',
  'cipSecGlobalOutUncompOctWraps' => '1.3.6.1.4.1.9.9.171.1.3.1.21',
  'cipSecGlobalOutPkts' => '1.3.6.1.4.1.9.9.171.1.3.1.22',
  'cipSecGlobalOutDrops' => '1.3.6.1.4.1.9.9.171.1.3.1.23',
  'cipSecGlobalOutAuths' => '1.3.6.1.4.1.9.9.171.1.3.1.24',
  'cipSecGlobalOutAuthFails' => '1.3.6.1.4.1.9.9.171.1.3.1.25',
  'cipSecGlobalOutEncrypts' => '1.3.6.1.4.1.9.9.171.1.3.1.26',
  'cipSecGlobalOutEncryptFails' => '1.3.6.1.4.1.9.9.171.1.3.1.27',
  'cipSecGlobalProtocolUseFails' => '1.3.6.1.4.1.9.9.171.1.3.1.28',
  'cipSecGlobalNoSaFails' => '1.3.6.1.4.1.9.9.171.1.3.1.29',
  'cipSecGlobalSysCapFails' => '1.3.6.1.4.1.9.9.171.1.3.1.30',
  'cipSecTunnelTable' => '1.3.6.1.4.1.9.9.171.1.3.2',
  'cipSecTunnelEntry' => '1.3.6.1.4.1.9.9.171.1.3.2.1',
  'cipSecTunIndex' => '1.3.6.1.4.1.9.9.171.1.3.2.1.1',
  'cipSecTunIkeTunnelIndex' => '1.3.6.1.4.1.9.9.171.1.3.2.1.2',
  'cipSecTunIkeTunnelAlive' => '1.3.6.1.4.1.9.9.171.1.3.2.1.3',
  'cipSecTunLocalAddr' => '1.3.6.1.4.1.9.9.171.1.3.2.1.4',
  'cipSecTunRemoteAddr' => '1.3.6.1.4.1.9.9.171.1.3.2.1.5',
  'cipSecTunKeyType' => '1.3.6.1.4.1.9.9.171.1.3.2.1.6',
  'cipSecTunKeyTypeDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::KeyType',
  'cipSecTunEncapMode' => '1.3.6.1.4.1.9.9.171.1.3.2.1.7',
  'cipSecTunEncapModeDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::EncapMode',
  'cipSecTunLifeSize' => '1.3.6.1.4.1.9.9.171.1.3.2.1.8',
  'cipSecTunLifeTime' => '1.3.6.1.4.1.9.9.171.1.3.2.1.9',
  'cipSecTunActiveTime' => '1.3.6.1.4.1.9.9.171.1.3.2.1.10',
  'cipSecTunSaLifeSizeThreshold' => '1.3.6.1.4.1.9.9.171.1.3.2.1.11',
  'cipSecTunSaLifeTimeThreshold' => '1.3.6.1.4.1.9.9.171.1.3.2.1.12',
  'cipSecTunTotalRefreshes' => '1.3.6.1.4.1.9.9.171.1.3.2.1.13',
  'cipSecTunExpiredSaInstances' => '1.3.6.1.4.1.9.9.171.1.3.2.1.14',
  'cipSecTunCurrentSaInstances' => '1.3.6.1.4.1.9.9.171.1.3.2.1.15',
  'cipSecTunInSaDiffHellmanGrp' => '1.3.6.1.4.1.9.9.171.1.3.2.1.16',
  'cipSecTunInSaDiffHellmanGrpDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::DiffHellmanGrp',
  'cipSecTunInSaEncryptAlgo' => '1.3.6.1.4.1.9.9.171.1.3.2.1.17',
  'cipSecTunInSaEncryptAlgoDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::EncryptAlgo',
  'cipSecTunInSaAhAuthAlgo' => '1.3.6.1.4.1.9.9.171.1.3.2.1.18',
  'cipSecTunInSaAhAuthAlgoDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::AuthAlgo',
  'cipSecTunInSaEspAuthAlgo' => '1.3.6.1.4.1.9.9.171.1.3.2.1.19',
  'cipSecTunInSaEspAuthAlgoDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::AuthAlgo',
  'cipSecTunInSaDecompAlgo' => '1.3.6.1.4.1.9.9.171.1.3.2.1.20',
  'cipSecTunInSaDecompAlgoDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::CompAlgo',
  'cipSecTunOutSaDiffHellmanGrp' => '1.3.6.1.4.1.9.9.171.1.3.2.1.21',
  'cipSecTunOutSaDiffHellmanGrpDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::DiffHellmanGrp',
  'cipSecTunOutSaEncryptAlgo' => '1.3.6.1.4.1.9.9.171.1.3.2.1.22',
  'cipSecTunOutSaEncryptAlgoDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::EncryptAlgo',
  'cipSecTunOutSaAhAuthAlgo' => '1.3.6.1.4.1.9.9.171.1.3.2.1.23',
  'cipSecTunOutSaAhAuthAlgoDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::AuthAlgo',
  'cipSecTunOutSaEspAuthAlgo' => '1.3.6.1.4.1.9.9.171.1.3.2.1.24',
  'cipSecTunOutSaEspAuthAlgoDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::AuthAlgo',
  'cipSecTunOutSaCompAlgo' => '1.3.6.1.4.1.9.9.171.1.3.2.1.25',
  'cipSecTunOutSaCompAlgoDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::CompAlgo',
  'cipSecTunInOctets' => '1.3.6.1.4.1.9.9.171.1.3.2.1.26',
  'cipSecTunHcInOctets' => '1.3.6.1.4.1.9.9.171.1.3.2.1.27',
  'cipSecTunInOctWraps' => '1.3.6.1.4.1.9.9.171.1.3.2.1.28',
  'cipSecTunInDecompOctets' => '1.3.6.1.4.1.9.9.171.1.3.2.1.29',
  'cipSecTunHcInDecompOctets' => '1.3.6.1.4.1.9.9.171.1.3.2.1.30',
  'cipSecTunInDecompOctWraps' => '1.3.6.1.4.1.9.9.171.1.3.2.1.31',
  'cipSecTunInPkts' => '1.3.6.1.4.1.9.9.171.1.3.2.1.32',
  'cipSecTunInDropPkts' => '1.3.6.1.4.1.9.9.171.1.3.2.1.33',
  'cipSecTunInReplayDropPkts' => '1.3.6.1.4.1.9.9.171.1.3.2.1.34',
  'cipSecTunInAuths' => '1.3.6.1.4.1.9.9.171.1.3.2.1.35',
  'cipSecTunInAuthFails' => '1.3.6.1.4.1.9.9.171.1.3.2.1.36',
  'cipSecTunInDecrypts' => '1.3.6.1.4.1.9.9.171.1.3.2.1.37',
  'cipSecTunInDecryptFails' => '1.3.6.1.4.1.9.9.171.1.3.2.1.38',
  'cipSecTunOutOctets' => '1.3.6.1.4.1.9.9.171.1.3.2.1.39',
  'cipSecTunHcOutOctets' => '1.3.6.1.4.1.9.9.171.1.3.2.1.40',
  'cipSecTunOutOctWraps' => '1.3.6.1.4.1.9.9.171.1.3.2.1.41',
  'cipSecTunOutUncompOctets' => '1.3.6.1.4.1.9.9.171.1.3.2.1.42',
  'cipSecTunHcOutUncompOctets' => '1.3.6.1.4.1.9.9.171.1.3.2.1.43',
  'cipSecTunOutUncompOctWraps' => '1.3.6.1.4.1.9.9.171.1.3.2.1.44',
  'cipSecTunOutPkts' => '1.3.6.1.4.1.9.9.171.1.3.2.1.45',
  'cipSecTunOutDropPkts' => '1.3.6.1.4.1.9.9.171.1.3.2.1.46',
  'cipSecTunOutAuths' => '1.3.6.1.4.1.9.9.171.1.3.2.1.47',
  'cipSecTunOutAuthFails' => '1.3.6.1.4.1.9.9.171.1.3.2.1.48',
  'cipSecTunOutEncrypts' => '1.3.6.1.4.1.9.9.171.1.3.2.1.49',
  'cipSecTunOutEncryptFails' => '1.3.6.1.4.1.9.9.171.1.3.2.1.50',
  'cipSecTunStatus' => '1.3.6.1.4.1.9.9.171.1.3.2.1.51',
  'cipSecTunStatusDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::TunnelStatus',
  'cipSecEndPtTable' => '1.3.6.1.4.1.9.9.171.1.3.3',
  'cipSecEndPtEntry' => '1.3.6.1.4.1.9.9.171.1.3.3.1',
  'cipSecEndPtIndex' => '1.3.6.1.4.1.9.9.171.1.3.3.1.1',
  'cipSecEndPtLocalName' => '1.3.6.1.4.1.9.9.171.1.3.3.1.2',
  'cipSecEndPtLocalType' => '1.3.6.1.4.1.9.9.171.1.3.3.1.3',
  'cipSecEndPtLocalTypeDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::EndPtType',
  'cipSecEndPtLocalAddr1' => '1.3.6.1.4.1.9.9.171.1.3.3.1.4',
  'cipSecEndPtLocalAddr2' => '1.3.6.1.4.1.9.9.171.1.3.3.1.5',
  'cipSecEndPtLocalProtocol' => '1.3.6.1.4.1.9.9.171.1.3.3.1.6',
  'cipSecEndPtLocalPort' => '1.3.6.1.4.1.9.9.171.1.3.3.1.7',
  'cipSecEndPtRemoteName' => '1.3.6.1.4.1.9.9.171.1.3.3.1.8',
  'cipSecEndPtRemoteType' => '1.3.6.1.4.1.9.9.171.1.3.3.1.9',
  'cipSecEndPtRemoteTypeDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::EndPtType',
  'cipSecEndPtRemoteAddr1' => '1.3.6.1.4.1.9.9.171.1.3.3.1.10',
  'cipSecEndPtRemoteAddr2' => '1.3.6.1.4.1.9.9.171.1.3.3.1.11',
  'cipSecEndPtRemoteProtocol' => '1.3.6.1.4.1.9.9.171.1.3.3.1.12',
  'cipSecEndPtRemotePort' => '1.3.6.1.4.1.9.9.171.1.3.3.1.13',
  'cipSecSpiTable' => '1.3.6.1.4.1.9.9.171.1.3.4',
  'cipSecSpiEntry' => '1.3.6.1.4.1.9.9.171.1.3.4.1',
  'cipSecSpiIndex' => '1.3.6.1.4.1.9.9.171.1.3.4.1.1',
  'cipSecSpiDirection' => '1.3.6.1.4.1.9.9.171.1.3.4.1.2',
  'cipSecSpiDirectionDefinition' => {
    '1' => 'in',
    '2' => 'out',
  },
  'cipSecSpiValue' => '1.3.6.1.4.1.9.9.171.1.3.4.1.3',
  'cipSecSpiProtocol' => '1.3.6.1.4.1.9.9.171.1.3.4.1.4',
  'cipSecSpiProtocolDefinition' => {
    '1' => 'ah',
    '2' => 'esp',
    '3' => 'ipcomp',
  },
  'cipSecSpiStatus' => '1.3.6.1.4.1.9.9.171.1.3.4.1.5',
  'cipSecSpiStatusDefinition' => {
    '1' => 'active',
    '2' => 'expiring',
  },
  'cipSecPhase2GWStatsTable' => '1.3.6.1.4.1.9.9.171.1.3.5',
  'cipSecPhase2GWStatsEntry' => '1.3.6.1.4.1.9.9.171.1.3.5.1',
  'cipSecPhase2GWActiveTunnels' => '1.3.6.1.4.1.9.9.171.1.3.5.1.1',
  'cipSecPhase2GWPreviousTunnels' => '1.3.6.1.4.1.9.9.171.1.3.5.1.2',
  'cipSecPhase2GWInOctets' => '1.3.6.1.4.1.9.9.171.1.3.5.1.3',
  'cipSecPhase2GWInOctWraps' => '1.3.6.1.4.1.9.9.171.1.3.5.1.4',
  'cipSecPhase2GWInDecompOctets' => '1.3.6.1.4.1.9.9.171.1.3.5.1.5',
  'cipSecPhase2GWInDecompOctWraps' => '1.3.6.1.4.1.9.9.171.1.3.5.1.6',
  'cipSecPhase2GWInPkts' => '1.3.6.1.4.1.9.9.171.1.3.5.1.7',
  'cipSecPhase2GWInDrops' => '1.3.6.1.4.1.9.9.171.1.3.5.1.8',
  'cipSecPhase2GWInReplayDrops' => '1.3.6.1.4.1.9.9.171.1.3.5.1.9',
  'cipSecPhase2GWInAuths' => '1.3.6.1.4.1.9.9.171.1.3.5.1.10',
  'cipSecPhase2GWInAuthFails' => '1.3.6.1.4.1.9.9.171.1.3.5.1.11',
  'cipSecPhase2GWInDecrypts' => '1.3.6.1.4.1.9.9.171.1.3.5.1.12',
  'cipSecPhase2GWInDecryptFails' => '1.3.6.1.4.1.9.9.171.1.3.5.1.13',
  'cipSecPhase2GWOutOctets' => '1.3.6.1.4.1.9.9.171.1.3.5.1.14',
  'cipSecPhase2GWOutOctWraps' => '1.3.6.1.4.1.9.9.171.1.3.5.1.15',
  'cipSecPhase2GWOutUncompOctets' => '1.3.6.1.4.1.9.9.171.1.3.5.1.16',
  'cipSecPhase2GWOutUncompOctWraps' => '1.3.6.1.4.1.9.9.171.1.3.5.1.17',
  'cipSecPhase2GWOutPkts' => '1.3.6.1.4.1.9.9.171.1.3.5.1.18',
  'cipSecPhase2GWOutDrops' => '1.3.6.1.4.1.9.9.171.1.3.5.1.19',
  'cipSecPhase2GWOutAuths' => '1.3.6.1.4.1.9.9.171.1.3.5.1.20',
  'cipSecPhase2GWOutAuthFails' => '1.3.6.1.4.1.9.9.171.1.3.5.1.21',
  'cipSecPhase2GWOutEncrypts' => '1.3.6.1.4.1.9.9.171.1.3.5.1.22',
  'cipSecPhase2GWOutEncryptFails' => '1.3.6.1.4.1.9.9.171.1.3.5.1.23',
  'cipSecPhase2GWProtocolUseFails' => '1.3.6.1.4.1.9.9.171.1.3.5.1.24',
  'cipSecPhase2GWNoSaFails' => '1.3.6.1.4.1.9.9.171.1.3.5.1.25',
  'cipSecPhase2GWSysCapFails' => '1.3.6.1.4.1.9.9.171.1.3.5.1.26',
  'cipSecHistory' => '1.3.6.1.4.1.9.9.171.1.4',
  'cipSecHistGlobal' => '1.3.6.1.4.1.9.9.171.1.4.1',
  'cipSecHistGlobalCntl' => '1.3.6.1.4.1.9.9.171.1.4.1.1',
  'cipSecHistTableSize' => '1.3.6.1.4.1.9.9.171.1.4.1.1.1',
  'cipSecHistCheckPoint' => '1.3.6.1.4.1.9.9.171.1.4.1.1.2',
  'cipSecHistCheckPointDefinition' => {
    '1' => 'ready',
    '2' => 'checkPoint',
  },
  'cipSecHistPhaseOne' => '1.3.6.1.4.1.9.9.171.1.4.2',
  'cikeTunnelHistTable' => '1.3.6.1.4.1.9.9.171.1.4.2.1',
  'cikeTunnelHistEntry' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1',
  'cikeTunHistIndex' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.1',
  'cikeTunHistTermReason' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.2',
  'cikeTunHistTermReasonDefinition' => {
    '1' => 'other',
    '2' => 'normal',
    '3' => 'operRequest',
    '4' => 'peerDelRequest',
    '5' => 'peerLost',
    '6' => 'localFailure',
    '7' => 'checkPointReg',
  },
  'cikeTunHistActiveIndex' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.3',
  'cikeTunHistPeerLocalType' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.4',
  'cikeTunHistPeerLocalTypeDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::IkePeerType',
  'cikeTunHistPeerLocalValue' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.5',
  'cikeTunHistPeerIntIndex' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.6',
  'cikeTunHistPeerRemoteType' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.7',
  'cikeTunHistPeerRemoteTypeDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::IkePeerType',
  'cikeTunHistPeerRemoteValue' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.8',
  'cikeTunHistLocalAddr' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.9',
  'cikeTunHistLocalName' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.10',
  'cikeTunHistRemoteAddr' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.11',
  'cikeTunHistRemoteName' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.12',
  'cikeTunHistNegoMode' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.13',
  'cikeTunHistNegoModeDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::IkeNegoMode',
  'cikeTunHistDiffHellmanGrp' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.14',
  'cikeTunHistDiffHellmanGrpDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::DiffHellmanGrp',
  'cikeTunHistEncryptAlgo' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.15',
  'cikeTunHistEncryptAlgoDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::EncryptAlgo',
  'cikeTunHistHashAlgo' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.16',
  'cikeTunHistHashAlgoDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::IkeHashAlgo',
  'cikeTunHistAuthMethod' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.17',
  'cikeTunHistAuthMethodDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::IkeAuthMethod',
  'cikeTunHistLifeTime' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.18',
  'cikeTunHistStartTime' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.19',
  'cikeTunHistActiveTime' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.20',
  'cikeTunHistTotalRefreshes' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.21',
  'cikeTunHistTotalSas' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.22',
  'cikeTunHistInOctets' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.23',
  'cikeTunHistInPkts' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.24',
  'cikeTunHistInDropPkts' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.25',
  'cikeTunHistInNotifys' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.26',
  'cikeTunHistInP2Exchgs' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.27',
  'cikeTunHistInP2ExchgInvalids' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.28',
  'cikeTunHistInP2ExchgRejects' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.29',
  'cikeTunHistInP2SaDelRequests' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.30',
  'cikeTunHistOutOctets' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.31',
  'cikeTunHistOutPkts' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.32',
  'cikeTunHistOutDropPkts' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.33',
  'cikeTunHistOutNotifys' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.34',
  'cikeTunHistOutP2Exchgs' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.35',
  'cikeTunHistOutP2ExchgInvalids' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.36',
  'cikeTunHistOutP2ExchgRejects' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.37',
  'cikeTunHistOutP2SaDelRequests' => '1.3.6.1.4.1.9.9.171.1.4.2.1.1.38',
  'cipSecHistPhaseTwo' => '1.3.6.1.4.1.9.9.171.1.4.3',
  'cipSecTunnelHistTable' => '1.3.6.1.4.1.9.9.171.1.4.3.1',
  'cipSecTunnelHistEntry' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1',
  'cipSecTunHistIndex' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.1',
  'cipSecTunHistTermReason' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.2',
  'cipSecTunHistTermReasonDefinition' => {
    '1' => 'other',
    '2' => 'normal',
    '3' => 'operRequest',
    '4' => 'peerDelRequest',
    '5' => 'peerLost',
    '6' => 'seqNumRollOver',
    '7' => 'checkPointReq',
  },
  'cipSecTunHistActiveIndex' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.3',
  'cipSecTunHistLocalAddr' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.5',
  'cipSecTunHistRemoteAddr' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.6',
  'cipSecTunHistKeyType' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.7',
  'cipSecTunHistKeyTypeDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::KeyType',
  'cipSecTunHistEncapMode' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.8',
  'cipSecTunHistEncapModeDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::EncapMode',
  'cipSecTunHistLifeSize' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.9',
  'cipSecTunHistLifeTime' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.10',
  'cipSecTunHistStartTime' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.11',
  'cipSecTunHistActiveTime' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.12',
  'cipSecTunHistTotalRefreshes' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.13',
  'cipSecTunHistTotalSas' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.14',
  'cipSecTunHistInSaDiffHellmanGrp' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.15',
  'cipSecTunHistInSaDiffHellmanGrpDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::DiffHellmanGrp',
  'cipSecTunHistInSaEncryptAlgo' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.16',
  'cipSecTunHistInSaEncryptAlgoDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::EncryptAlgo',
  'cipSecTunHistInSaAhAuthAlgo' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.17',
  'cipSecTunHistInSaAhAuthAlgoDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::AuthAlgo',
  'cipSecTunHistInSaEspAuthAlgo' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.18',
  'cipSecTunHistInSaEspAuthAlgoDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::AuthAlgo',
  'cipSecTunHistInSaDecompAlgo' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.19',
  'cipSecTunHistInSaDecompAlgoDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::CompAlgo',
  'cipSecTunHistOutSaDiffHellmanGrp' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.20',
  'cipSecTunHistOutSaDiffHellmanGrpDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::DiffHellmanGrp',
  'cipSecTunHistOutSaEncryptAlgo' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.21',
  'cipSecTunHistOutSaEncryptAlgoDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::EncryptAlgo',
  'cipSecTunHistOutSaAhAuthAlgo' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.22',
  'cipSecTunHistOutSaAhAuthAlgoDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::AuthAlgo',
  'cipSecTunHistOutSaEspAuthAlgo' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.23',
  'cipSecTunHistOutSaEspAuthAlgoDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::AuthAlgo',
  'cipSecTunHistOutSaCompAlgo' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.24',
  'cipSecTunHistOutSaCompAlgoDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::CompAlgo',
  'cipSecTunHistInOctets' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.25',
  'cipSecTunHistHcInOctets' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.26',
  'cipSecTunHistInOctWraps' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.27',
  'cipSecTunHistInDecompOctets' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.28',
  'cipSecTunHistHcInDecompOctets' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.29',
  'cipSecTunHistInDecompOctWraps' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.30',
  'cipSecTunHistInPkts' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.31',
  'cipSecTunHistInDropPkts' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.32',
  'cipSecTunHistInReplayDropPkts' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.33',
  'cipSecTunHistInAuths' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.34',
  'cipSecTunHistInAuthFails' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.35',
  'cipSecTunHistInDecrypts' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.36',
  'cipSecTunHistInDecryptFails' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.37',
  'cipSecTunHistOutOctets' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.38',
  'cipSecTunHistHcOutOctets' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.39',
  'cipSecTunHistOutOctWraps' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.40',
  'cipSecTunHistOutUncompOctets' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.41',
  'cipSecTunHistHcOutUncompOctets' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.42',
  'cipSecTunHistOutUncompOctWraps' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.43',
  'cipSecTunHistOutPkts' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.44',
  'cipSecTunHistOutDropPkts' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.45',
  'cipSecTunHistOutAuths' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.46',
  'cipSecTunHistOutAuthFails' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.47',
  'cipSecTunHistOutEncrypts' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.48',
  'cipSecTunHistOutEncryptFails' => '1.3.6.1.4.1.9.9.171.1.4.3.1.1.49',
  'cipSecEndPtHistTable' => '1.3.6.1.4.1.9.9.171.1.4.3.2',
  'cipSecEndPtHistEntry' => '1.3.6.1.4.1.9.9.171.1.4.3.2.1',
  'cipSecEndPtHistIndex' => '1.3.6.1.4.1.9.9.171.1.4.3.2.1.1',
  'cipSecEndPtHistTunIndex' => '1.3.6.1.4.1.9.9.171.1.4.3.2.1.2',
  'cipSecEndPtHistActiveIndex' => '1.3.6.1.4.1.9.9.171.1.4.3.2.1.3',
  'cipSecEndPtHistLocalName' => '1.3.6.1.4.1.9.9.171.1.4.3.2.1.4',
  'cipSecEndPtHistLocalType' => '1.3.6.1.4.1.9.9.171.1.4.3.2.1.5',
  'cipSecEndPtHistLocalTypeDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::EndPtType',
  'cipSecEndPtHistLocalAddr1' => '1.3.6.1.4.1.9.9.171.1.4.3.2.1.6',
  'cipSecEndPtHistLocalAddr2' => '1.3.6.1.4.1.9.9.171.1.4.3.2.1.7',
  'cipSecEndPtHistLocalProtocol' => '1.3.6.1.4.1.9.9.171.1.4.3.2.1.8',
  'cipSecEndPtHistLocalPort' => '1.3.6.1.4.1.9.9.171.1.4.3.2.1.9',
  'cipSecEndPtHistRemoteName' => '1.3.6.1.4.1.9.9.171.1.4.3.2.1.10',
  'cipSecEndPtHistRemoteType' => '1.3.6.1.4.1.9.9.171.1.4.3.2.1.11',
  'cipSecEndPtHistRemoteTypeDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::EndPtType',
  'cipSecEndPtHistRemoteAddr1' => '1.3.6.1.4.1.9.9.171.1.4.3.2.1.12',
  'cipSecEndPtHistRemoteAddr2' => '1.3.6.1.4.1.9.9.171.1.4.3.2.1.13',
  'cipSecEndPtHistRemoteProtocol' => '1.3.6.1.4.1.9.9.171.1.4.3.2.1.14',
  'cipSecEndPtHistRemotePort' => '1.3.6.1.4.1.9.9.171.1.4.3.2.1.15',
  'cipSecFailures' => '1.3.6.1.4.1.9.9.171.1.5',
  'cipSecFailGlobal' => '1.3.6.1.4.1.9.9.171.1.5.1',
  'cipSecFailGlobalCntl' => '1.3.6.1.4.1.9.9.171.1.5.1.1',
  'cipSecFailTableSize' => '1.3.6.1.4.1.9.9.171.1.5.1.1.1',
  'cipSecFailPhaseOne' => '1.3.6.1.4.1.9.9.171.1.5.2',
  'cikeFailTable' => '1.3.6.1.4.1.9.9.171.1.5.2.1',
  'cikeFailEntry' => '1.3.6.1.4.1.9.9.171.1.5.2.1.1',
  'cikeFailIndex' => '1.3.6.1.4.1.9.9.171.1.5.2.1.1.1',
  'cikeFailReason' => '1.3.6.1.4.1.9.9.171.1.5.2.1.1.2',
  'cikeFailReasonDefinition' => {
    '1' => 'other',
    '2' => 'peerDelRequest',
    '3' => 'peerLost',
    '4' => 'localFailure',
    '5' => 'authFailure',
    '6' => 'hashValidation',
    '7' => 'encryptFailure',
    '8' => 'internalError',
    '9' => 'sysCapExceeded',
    '10' => 'proposalFailure',
    '11' => 'peerCertUnavailable',
    '12' => 'peerCertNotValid',
    '13' => 'localCertExpired',
    '14' => 'crlFailure',
    '15' => 'peerEncodingError',
    '16' => 'nonExistentSa',
    '17' => 'operRequest',
  },
  'cikeFailTime' => '1.3.6.1.4.1.9.9.171.1.5.2.1.1.3',
  'cikeFailLocalType' => '1.3.6.1.4.1.9.9.171.1.5.2.1.1.4',
  'cikeFailLocalTypeDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::IkePeerType',
  'cikeFailLocalValue' => '1.3.6.1.4.1.9.9.171.1.5.2.1.1.5',
  'cikeFailRemoteType' => '1.3.6.1.4.1.9.9.171.1.5.2.1.1.6',
  'cikeFailRemoteTypeDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::IkePeerType',
  'cikeFailRemoteValue' => '1.3.6.1.4.1.9.9.171.1.5.2.1.1.7',
  'cikeFailLocalAddr' => '1.3.6.1.4.1.9.9.171.1.5.2.1.1.8',
  'cikeFailRemoteAddr' => '1.3.6.1.4.1.9.9.171.1.5.2.1.1.9',
  'cipSecFailPhaseTwo' => '1.3.6.1.4.1.9.9.171.1.5.3',
  'cipSecFailTable' => '1.3.6.1.4.1.9.9.171.1.5.3.1',
  'cipSecFailEntry' => '1.3.6.1.4.1.9.9.171.1.5.3.1.1',
  'cipSecFailIndex' => '1.3.6.1.4.1.9.9.171.1.5.3.1.1.1',
  'cipSecFailReason' => '1.3.6.1.4.1.9.9.171.1.5.3.1.1.2',
  'cipSecFailReasonDefinition' => {
    '1' => 'other',
    '2' => 'internalError',
    '3' => 'peerEncodingError',
    '4' => 'proposalFailure',
    '5' => 'protocolUseFail',
    '6' => 'nonExistentSa',
    '7' => 'decryptFailure',
    '8' => 'encryptFailure',
    '9' => 'inAuthFailure',
    '10' => 'outAuthFailure',
    '11' => 'compression',
    '12' => 'sysCapExceeded',
    '13' => 'peerDelRequest',
    '14' => 'peerLost',
    '15' => 'seqNumRollOver',
    '16' => 'operRequest',
  },
  'cipSecFailTime' => '1.3.6.1.4.1.9.9.171.1.5.3.1.1.3',
  'cipSecFailTunnelIndex' => '1.3.6.1.4.1.9.9.171.1.5.3.1.1.4',
  'cipSecFailSaSpi' => '1.3.6.1.4.1.9.9.171.1.5.3.1.1.5',
  'cipSecFailPktSrcAddr' => '1.3.6.1.4.1.9.9.171.1.5.3.1.1.6',
  'cipSecFailPktDstAddr' => '1.3.6.1.4.1.9.9.171.1.5.3.1.1.7',
  'cipSecTrapCntl' => '1.3.6.1.4.1.9.9.171.1.6',
  'cipSecTrapCntlIkeTunnelStart' => '1.3.6.1.4.1.9.9.171.1.6.1',
  'cipSecTrapCntlIkeTunnelStartDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::TrapStatus',
  'cipSecTrapCntlIkeTunnelStop' => '1.3.6.1.4.1.9.9.171.1.6.2',
  'cipSecTrapCntlIkeTunnelStopDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::TrapStatus',
  'cipSecTrapCntlIkeSysFailure' => '1.3.6.1.4.1.9.9.171.1.6.3',
  'cipSecTrapCntlIkeSysFailureDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::TrapStatus',
  'cipSecTrapCntlIkeCertCrlFailure' => '1.3.6.1.4.1.9.9.171.1.6.4',
  'cipSecTrapCntlIkeCertCrlFailureDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::TrapStatus',
  'cipSecTrapCntlIkeProtocolFail' => '1.3.6.1.4.1.9.9.171.1.6.5',
  'cipSecTrapCntlIkeProtocolFailDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::TrapStatus',
  'cipSecTrapCntlIkeNoSa' => '1.3.6.1.4.1.9.9.171.1.6.6',
  'cipSecTrapCntlIkeNoSaDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::TrapStatus',
  'cipSecTrapCntlIpSecTunnelStart' => '1.3.6.1.4.1.9.9.171.1.6.7',
  'cipSecTrapCntlIpSecTunnelStartDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::TrapStatus',
  'cipSecTrapCntlIpSecTunnelStop' => '1.3.6.1.4.1.9.9.171.1.6.8',
  'cipSecTrapCntlIpSecTunnelStopDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::TrapStatus',
  'cipSecTrapCntlIpSecSysFailure' => '1.3.6.1.4.1.9.9.171.1.6.9',
  'cipSecTrapCntlIpSecSysFailureDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::TrapStatus',
  'cipSecTrapCntlIpSecSetUpFailure' => '1.3.6.1.4.1.9.9.171.1.6.10',
  'cipSecTrapCntlIpSecSetUpFailureDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::TrapStatus',
  'cipSecTrapCntlIpSecEarlyTunTerm' => '1.3.6.1.4.1.9.9.171.1.6.11',
  'cipSecTrapCntlIpSecEarlyTunTermDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::TrapStatus',
  'cipSecTrapCntlIpSecProtocolFail' => '1.3.6.1.4.1.9.9.171.1.6.12',
  'cipSecTrapCntlIpSecProtocolFailDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::TrapStatus',
  'cipSecTrapCntlIpSecNoSa' => '1.3.6.1.4.1.9.9.171.1.6.13',
  'cipSecTrapCntlIpSecNoSaDefinition' => 'CISCO-IPSEC-FLOW-MONITOR-MIB::TrapStatus',
  'cipSecMIBNotificationPrefix' => '1.3.6.1.4.1.9.9.171.2',
  'cipSecMIBNotifications' => '1.3.6.1.4.1.9.9.171.2.0.1.2.3.4.5.6.7.8.9.10.11.12.13',
  'cipSecMIBConformance' => '1.3.6.1.4.1.9.9.171.3',
  'cipSecMIBGroups' => '1.3.6.1.4.1.9.9.171.3.1',
  'cipSecMIBCompliances' => '1.3.6.1.4.1.9.9.171.3.1.8',
  'hardware' => '1.3.6.1.4.1.3764.1.1.200',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'CISCO-IPSEC-FLOW-MONITOR-MIB'} = {
  'IkeNegoMode' => {
    '1' => 'main',
    '2' => 'aggressive',
  },
  'DiffHellmanGrp' => {
    '1' => 'none',
    '2' => 'dhGroup1',
    '3' => 'dhGroup2',
  },
  'cipSecHistCheckPoint' => {
    '1' => 'ready',
    '2' => 'checkPoint',
  },
  'AuthAlgo' => {
    '1' => 'none',
    '2' => 'hmacMd5',
    '3' => 'hmacSha',
  },
  'EncryptAlgo' => {
    '1' => 'none',
    '2' => 'des',
    '3' => 'des3',
  },
  'CompAlgo' => {
    '1' => 'none',
    '2' => 'ldf',
  },
  'cipSecSpiStatus' => {
    '1' => 'active',
    '2' => 'expiring',
  },
  'cipSecTunHistTermReason' => {
    '1' => 'other',
    '2' => 'normal',
    '3' => 'operRequest',
    '4' => 'peerDelRequest',
    '5' => 'peerLost',
    '6' => 'seqNumRollOver',
    '7' => 'checkPointReq',
  },
  'cikeTunHistTermReason' => {
    '1' => 'other',
    '2' => 'normal',
    '3' => 'operRequest',
    '4' => 'peerDelRequest',
    '5' => 'peerLost',
    '6' => 'localFailure',
    '7' => 'checkPointReg',
  },
  'TunnelStatus' => {
    '1' => 'active',
    '2' => 'destroy',
  },
  'EndPtType' => {
    '1' => 'singleIpAddr',
    '2' => 'ipAddrRange',
    '3' => 'ipSubnet',
  },
  'IkePeerType' => {
    '1' => 'ipAddrPeer',
    '2' => 'namePeer',
  },
  'IkeAuthMethod' => {
    '1' => 'none',
    '2' => 'preSharedKey',
    '3' => 'rsaSig',
    '4' => 'rsaEncrypt',
    '5' => 'revPublicKey',
  },
  'EncapMode' => {
    '1' => 'tunnel',
    '2' => 'transport',
  },
  'cipSecSpiProtocol' => {
    '1' => 'ah',
    '2' => 'esp',
    '3' => 'ipcomp',
  },
  'IkeHashAlgo' => {
    '1' => 'none',
    '2' => 'md5',
    '3' => 'sha',
  },
  'cipSecSpiDirection' => {
    '1' => 'in',
    '2' => 'out',
  },
  'KeyType' => {
    '1' => 'ike',
    '2' => 'manual',
  },
  'cikeFailReason' => {
    '1' => 'other',
    '2' => 'peerDelRequest',
    '3' => 'peerLost',
    '4' => 'localFailure',
    '5' => 'authFailure',
    '6' => 'hashValidation',
    '7' => 'encryptFailure',
    '8' => 'internalError',
    '9' => 'sysCapExceeded',
    '10' => 'proposalFailure',
    '11' => 'peerCertUnavailable',
    '12' => 'peerCertNotValid',
    '13' => 'localCertExpired',
    '14' => 'crlFailure',
    '15' => 'peerEncodingError',
    '16' => 'nonExistentSa',
    '17' => 'operRequest',
  },
  'TrapStatus' => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  'cipSecFailReason' => {
    '1' => 'other',
    '2' => 'internalError',
    '3' => 'peerEncodingError',
    '4' => 'proposalFailure',
    '5' => 'protocolUseFail',
    '6' => 'nonExistentSa',
    '7' => 'decryptFailure',
    '8' => 'encryptFailure',
    '9' => 'inAuthFailure',
    '10' => 'outAuthFailure',
    '11' => 'compression',
    '12' => 'sysCapExceeded',
    '13' => 'peerDelRequest',
    '14' => 'peerLost',
    '15' => 'seqNumRollOver',
    '16' => 'operRequest',
  },
};



package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOL2L3INTERFACECONFIGMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCO-L2L3-INTERFACE-CONFIG-MIB'} = {
  url => '',
  name => 'CISCO-L2L3-INTERFACE-CONFIG-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCO-L2L3-INTERFACE-CONFIG-MIB'} = {
  'cL2L3IfTable' => '1.3.6.1.4.1.9.9.151.1.1.1',
  'cL2L3IfEntry' => '1.3.6.1.4.1.9.9.151.1.1.1.1',
  'cL2L3IfModeAdmin' => '1.3.6.1.4.1.9.9.151.1.1.1.1.1',
  'cL2L3IfModeAdminDefinition' => 'CISCO-L2L3-INTERFACE-CONFIG-MIB::CL2L3InterfaceMode',
  'cL2L3IfModeOper' => '1.3.6.1.4.1.9.9.151.1.1.1.1.2',
  'cL2L3IfModeOperDefinition' => 'CISCO-L2L3-INTERFACE-CONFIG-MIB::CL2L3InterfaceMode',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'CISCO-L2L3-INTERFACE-CONFIG-MIB'} = {
  'CL2L3InterfaceMode' => {
    '1' => 'routed',
    '2' => 'switchport',
  },
};



package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOLWAPPAPMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCO-LWAPP-AP-MIB'} = {
  url => '',
  name => 'CISCO-LWAPP-AP-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'CISCO-LWAPP-AP-MIB'} =
    '1.3.6.1.4.1.9.9.513';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCO-LWAPP-AP-MIB'} = {
  ciscoLwappApMIB => '1.3.6.1.4.1.9.9.513',
  ciscoLwappApMIBNotifs => '1.3.6.1.4.1.9.9.513.0',
  ciscoLwappApMIBObjects => '1.3.6.1.4.1.9.9.513.1',
  ciscoLwappAp => '1.3.6.1.4.1.9.9.513.1.1',
  cLApTable => '1.3.6.1.4.1.9.9.513.1.1.1',
  cLApEntry => '1.3.6.1.4.1.9.9.513.1.1.1.1',
  cLApSysMacAddress => '1.3.6.1.4.1.9.9.513.1.1.1.1.1',
  cLApIfMacAddress => '1.3.6.1.4.1.9.9.513.1.1.1.1.2',
  cLApMaxNumberOfDot11Slots => '1.3.6.1.4.1.9.9.513.1.1.1.1.3',
  cLApEntPhysicalIndex => '1.3.6.1.4.1.9.9.513.1.1.1.1.4',
  cLApName => '1.3.6.1.4.1.9.9.513.1.1.1.1.5',
  cLApUpTime => '1.3.6.1.4.1.9.9.513.1.1.1.1.6',
  cLLwappUpTime => '1.3.6.1.4.1.9.9.513.1.1.1.1.7',
  cLLwappJoinTakenTime => '1.3.6.1.4.1.9.9.513.1.1.1.1.8',
  cLApMaxNumberOfEthernetSlots => '1.3.6.1.4.1.9.9.513.1.1.1.1.9',
  cLApPrimaryControllerAddressType => '1.3.6.1.4.1.9.9.513.1.1.1.1.10',
  cLApPrimaryControllerAddress => '1.3.6.1.4.1.9.9.513.1.1.1.1.11',
  cLApSecondaryControllerAddressType => '1.3.6.1.4.1.9.9.513.1.1.1.1.12',
  cLApSecondaryControllerAddress => '1.3.6.1.4.1.9.9.513.1.1.1.1.13',
  cLApTertiaryControllerAddressType => '1.3.6.1.4.1.9.9.513.1.1.1.1.14',
  cLApTertiaryControllerAddress => '1.3.6.1.4.1.9.9.513.1.1.1.1.15',
  cLApLastRebootReason => '1.3.6.1.4.1.9.9.513.1.1.1.1.16',
  cLApLastRebootReasonDefinition => 'CISCO-LWAPP-AP-MIB::cLApLastRebootReason',
  cLApEncryptionEnable => '1.3.6.1.4.1.9.9.513.1.1.1.1.18',
  cLApFailoverPriority => '1.3.6.1.4.1.9.9.513.1.1.1.1.19',
  cLApFailoverPriorityDefinition => 'CISCO-LWAPP-AP-MIB::cLApFailoverPriority',
  cLApPowerStatus => '1.3.6.1.4.1.9.9.513.1.1.1.1.20',
  cLApPowerStatusDefinition => 'CISCO-LWAPP-AP-MIB::cLApPowerStatus',
  cLApTelnetEnable => '1.3.6.1.4.1.9.9.513.1.1.1.1.21',
  cLApSshEnable => '1.3.6.1.4.1.9.9.513.1.1.1.1.22',
  cLApPreStdStateEnabled => '1.3.6.1.4.1.9.9.513.1.1.1.1.23',
  cLApPwrInjectorStateEnabled => '1.3.6.1.4.1.9.9.513.1.1.1.1.24',
  cLApPwrInjectorSelection => '1.3.6.1.4.1.9.9.513.1.1.1.1.25',
  cLApPwrInjectorSelectionDefinition => 'CISCO-LWAPP-AP-MIB::cLApPwrInjectorSelection',
  cLApPwrInjectorSwMacAddr => '1.3.6.1.4.1.9.9.513.1.1.1.1.26',
  cLApWipsEnable => '1.3.6.1.4.1.9.9.513.1.1.1.1.27',
  cLApMonitorModeOptimization => '1.3.6.1.4.1.9.9.513.1.1.1.1.28',
  cLApMonitorModeOptimizationDefinition => 'CISCO-LWAPP-AP-MIB::cLApMonitorModeOptimization',
  cLApDomainName => '1.3.6.1.4.1.9.9.513.1.1.1.1.29',
  cLApNameServerAddressType => '1.3.6.1.4.1.9.9.513.1.1.1.1.30',
  cLApNameServerAddress => '1.3.6.1.4.1.9.9.513.1.1.1.1.31',
  cLApAMSDUEnable => '1.3.6.1.4.1.9.9.513.1.1.1.1.32',
  cLApEncryptionSupported => '1.3.6.1.4.1.9.9.513.1.1.1.1.33',
  cLApRogueDetectionEnabled => '1.3.6.1.4.1.9.9.513.1.1.1.1.34',
  cLApTcpMss => '1.3.6.1.4.1.9.9.513.1.1.1.1.35',
  cLApDataEncryptionStatus => '1.3.6.1.4.1.9.9.513.1.1.1.1.36',
  cLApNsiKey => '1.3.6.1.4.1.9.9.513.1.1.1.1.37',
  cLApAdminStatus => '1.3.6.1.4.1.9.9.513.1.1.1.1.38',
  cLApPortNumber => '1.3.6.1.4.1.9.9.513.1.1.1.1.39',
  cLApRetransmitCount => '1.3.6.1.4.1.9.9.513.1.1.1.1.40',
  cLApRetransmitTimeout => '1.3.6.1.4.1.9.9.513.1.1.1.1.41',
  cLApIfSmtParamTable => '1.3.6.1.4.1.9.9.513.1.1.2',
  cLApIfSmtParamEntry => '1.3.6.1.4.1.9.9.513.1.1.2.1',
  cLApIfSmtDot11Bssid => '1.3.6.1.4.1.9.9.513.1.1.2.1.1',
  cLApCountryTable => '1.3.6.1.4.1.9.9.513.1.1.3',
  cLApCountryEntry => '1.3.6.1.4.1.9.9.513.1.1.3.1',
  cLApCountryCode => '1.3.6.1.4.1.9.9.513.1.1.3.1.1',
  cLApCountryAllowed => '1.3.6.1.4.1.9.9.513.1.1.3.1.2',
  ciscoLwappApIfRegulatoryDomainMismatchNotifEnabled => '1.3.6.1.4.1.9.9.513.1.1.4',
  ciscoLwappApCrashEnabled => '1.3.6.1.4.1.9.9.513.1.1.5',
  ciscoLwappApUnsupportedEnabled => '1.3.6.1.4.1.9.9.513.1.1.6',
  ciscoLwappApAssociatedEnabled => '1.3.6.1.4.1.9.9.513.1.1.7',
  ciscoLwappApIf => '1.3.6.1.4.1.9.9.513.1.2',
  cLApDot11IfTable => '1.3.6.1.4.1.9.9.513.1.2.1',
  cLApDot11IfEntry => '1.3.6.1.4.1.9.9.513.1.2.1.1',
  cLApDot11IfSlotId => '1.3.6.1.4.1.9.9.513.1.2.1.1.1',
  cLApDot11IfType => '1.3.6.1.4.1.9.9.513.1.2.1.1.2',
  cLApDot11IfRegDomain => '1.3.6.1.4.1.9.9.513.1.2.1.1.3',
  cLApDot11nSupport => '1.3.6.1.4.1.9.9.513.1.2.1.1.4',
  cLAp11nChannelBandwidth => '1.3.6.1.4.1.9.9.513.1.2.1.1.5',
  cLAp11nChannelBandwidthDefinition => 'CISCO-LWAPP-AP-MIB::cLAp11nChannelBandwidth',
  cLApLomEnabled => '1.3.6.1.4.1.9.9.513.1.2.1.1.6',
  cLApLomFirstChannel => '1.3.6.1.4.1.9.9.513.1.2.1.1.7',
  cLApLomSecondChannel => '1.3.6.1.4.1.9.9.513.1.2.1.1.8',
  cLApLomThirdChannel => '1.3.6.1.4.1.9.9.513.1.2.1.1.9',
  cLApLomFourthChannel => '1.3.6.1.4.1.9.9.513.1.2.1.1.10',
  cLApExtensionChannel => '1.3.6.1.4.1.9.9.513.1.2.1.1.11',
  cLApLegacyBeamForming => '1.3.6.1.4.1.9.9.513.1.2.1.1.12',
  cLApLegacyBeamFormingDefinition => 'CISCO-LWAPP-AP-MIB::cLApLegacyBeamForming',
  cLApCdpOverAirEnabled => '1.3.6.1.4.1.9.9.513.1.2.1.1.13',
  cLApDot11IfAdminStatus => '1.3.6.1.4.1.9.9.513.1.2.1.1.14',
  cLApEthernetIfTable => '1.3.6.1.4.1.9.9.513.1.2.2',
  cLApEthernetIfEntry => '1.3.6.1.4.1.9.9.513.1.2.2.1',
  cLApEthernetIfSlotId => '1.3.6.1.4.1.9.9.513.1.2.2.1.1',
  cLApEthernetIfName => '1.3.6.1.4.1.9.9.513.1.2.2.1.2',
  cLApEthernetIfMacAddress => '1.3.6.1.4.1.9.9.513.1.2.2.1.3',
  cLApEthernetIfAdminStatus => '1.3.6.1.4.1.9.9.513.1.2.2.1.4',
  cLApEthernetIfAdminStatusDefinition => 'CISCO-LWAPP-AP-MIB::cLApEthernetIfAdminStatus',
  cLApEthernetIfOperStatus => '1.3.6.1.4.1.9.9.513.1.2.2.1.5',
  cLApEthernetIfOperStatusDefinition => 'CISCO-LWAPP-AP-MIB::cLApEthernetIfOperStatus',
  cLApEthernetIfRxUcastPkts => '1.3.6.1.4.1.9.9.513.1.2.2.1.6',
  cLApEthernetIfRxNUcastPkts => '1.3.6.1.4.1.9.9.513.1.2.2.1.7',
  cLApEthernetIfTxUcastPkts => '1.3.6.1.4.1.9.9.513.1.2.2.1.8',
  cLApEthernetIfTxNUcastPkts => '1.3.6.1.4.1.9.9.513.1.2.2.1.9',
  cLApEthernetIfDuplex => '1.3.6.1.4.1.9.9.513.1.2.2.1.10',
  cLApEthernetIfDuplexDefinition => 'CISCO-LWAPP-AP-MIB::cLApEthernetIfDuplex',
  cLApEthernetIfLinkSpeed => '1.3.6.1.4.1.9.9.513.1.2.2.1.11',
  cLApEthernetIfPOEPower => '1.3.6.1.4.1.9.9.513.1.2.2.1.12',
  cLApEthernetIfPOEPowerDefinition => 'CISCO-LWAPP-AP-MIB::cLApEthernetIfPOEPower',
  cLApEthernetIfRxTotalBytes => '1.3.6.1.4.1.9.9.513.1.2.2.1.13',
  cLApEthernetIfTxTotalBytes => '1.3.6.1.4.1.9.9.513.1.2.2.1.14',
  cLApEthernetIfInputCrc => '1.3.6.1.4.1.9.9.513.1.2.2.1.15',
  cLApEthernetIfInputAborts => '1.3.6.1.4.1.9.9.513.1.2.2.1.16',
  cLApEthernetIfInputErrors => '1.3.6.1.4.1.9.9.513.1.2.2.1.17',
  cLApEthernetIfInputFrames => '1.3.6.1.4.1.9.9.513.1.2.2.1.18',
  cLApEthernetIfInputOverrun => '1.3.6.1.4.1.9.9.513.1.2.2.1.19',
  cLApEthernetIfInputDrops => '1.3.6.1.4.1.9.9.513.1.2.2.1.20',
  cLApEthernetIfInputResource => '1.3.6.1.4.1.9.9.513.1.2.2.1.21',
  cLApEthernetIfUnknownProtocol => '1.3.6.1.4.1.9.9.513.1.2.2.1.22',
  cLApEthernetIfRunts => '1.3.6.1.4.1.9.9.513.1.2.2.1.23',
  cLApEthernetIfGiants => '1.3.6.1.4.1.9.9.513.1.2.2.1.24',
  cLApEthernetIfThrottle => '1.3.6.1.4.1.9.9.513.1.2.2.1.25',
  cLApEthernetIfResets => '1.3.6.1.4.1.9.9.513.1.2.2.1.26',
  cLApEthernetIfOutputCollision => '1.3.6.1.4.1.9.9.513.1.2.2.1.27',
  cLApEthernetIfOutputNoBuffer => '1.3.6.1.4.1.9.9.513.1.2.2.1.28',
  cLApEthernetIfOutputResource => '1.3.6.1.4.1.9.9.513.1.2.2.1.29',
  cLApEthernetIfOutputUnderrun => '1.3.6.1.4.1.9.9.513.1.2.2.1.30',
  cLApEthernetIfOutputErrors => '1.3.6.1.4.1.9.9.513.1.2.2.1.31',
  cLApEthernetIfOutputTotalDrops => '1.3.6.1.4.1.9.9.513.1.2.2.1.32',
  cLApEthernetIfCdpEnabled => '1.3.6.1.4.1.9.9.513.1.2.2.1.33',
  cLApDot11RadioTable => '1.3.6.1.4.1.9.9.513.1.2.3',
  cLApDot11RadioEntry => '1.3.6.1.4.1.9.9.513.1.2.3.1',
  cLApDot11RadioMACAddress => '1.3.6.1.4.1.9.9.513.1.2.3.1.1',
  cLApDot11RadioSubBand => '1.3.6.1.4.1.9.9.513.1.2.3.1.2',
  cLApDot11RadioVersion => '1.3.6.1.4.1.9.9.513.1.2.3.1.3',
  cLApDot11IsBackhaul => '1.3.6.1.4.1.9.9.513.1.2.3.1.4',
  cLApDot11RadioRole => '1.3.6.1.4.1.9.9.513.1.2.3.1.5',
  cLApDot11IfAntennaTable => '1.3.6.1.4.1.9.9.513.1.2.4',
  cLApDot11IfAntennaEntry => '1.3.6.1.4.1.9.9.513.1.2.4.1',
  cLApDot11IfAntennaId => '1.3.6.1.4.1.9.9.513.1.2.4.1.1',
  cLApDot11IfAntennaTxEnable => '1.3.6.1.4.1.9.9.513.1.2.4.1.2',
  cLApDot11IfAntennaRxEnable => '1.3.6.1.4.1.9.9.513.1.2.4.1.3',
  cLApDot11IfAntennaEnable => '1.3.6.1.4.1.9.9.513.1.2.4.1.4',
  cLApVlanIfTable => '1.3.6.1.4.1.9.9.513.1.2.5',
  cLApVlanIfEntry => '1.3.6.1.4.1.9.9.513.1.2.5.1',
  cLApVlanIfEthernetId => '1.3.6.1.4.1.9.9.513.1.2.5.1.1',
  cLApVlanIfMode => '1.3.6.1.4.1.9.9.513.1.2.5.1.2',
  cLApVlanIfModeDefinition => 'CISCO-LWAPP-AP-MIB::cLApVlanIfMode',
  cLApVlanIfEnable => '1.3.6.1.4.1.9.9.513.1.2.5.1.3',
  cLApVlanIfNativeVlanId => '1.3.6.1.4.1.9.9.513.1.2.5.1.4',
  cLApVlanListTable => '1.3.6.1.4.1.9.9.513.1.2.6',
  cLApVlanListEntry => '1.3.6.1.4.1.9.9.513.1.2.6.1',
  cLApVlanListVlanId => '1.3.6.1.4.1.9.9.513.1.2.6.1.1',
  cLApVlanListRowStatus => '1.3.6.1.4.1.9.9.513.1.2.6.1.2',
  cLApDot11GlobalConfigTable => '1.3.6.1.4.1.9.9.513.1.2.7',
  cLApDot11GlobalConfigEntry => '1.3.6.1.4.1.9.9.513.1.2.7.1',
  cLApNwLegacyBeamForming => '1.3.6.1.4.1.9.9.513.1.2.7.1.1',
  cLApNwLegacyBeamFormingDefinition => 'CISCO-LWAPP-AP-MIB::cLApNwLegacyBeamForming',
  cLApNwTxPowerThreshold => '1.3.6.1.4.1.9.9.513.1.2.7.1.2',
  ciscoLwappApGlobal => '1.3.6.1.4.1.9.9.513.1.3',
  cLApFastHbTimerTable => '1.3.6.1.4.1.9.9.513.1.3.1',
  cLApFastHbTimerEntry => '1.3.6.1.4.1.9.9.513.1.3.1.1',
  cLApFastHbTimerApType => '1.3.6.1.4.1.9.9.513.1.3.1.1.1',
  cLApFastHbTimerApTypeDefinition => 'CISCO-LWAPP-AP-MIB::cLApFastHbTimerApType',
  cLApFastHbTimerTimeout => '1.3.6.1.4.1.9.9.513.1.3.1.1.2',
  cLApFastHbTimerEnabled => '1.3.6.1.4.1.9.9.513.1.3.1.1.3',
  cLApPrimaryDiscoveryTimeout => '1.3.6.1.4.1.9.9.513.1.3.3',
  cLApGlobalPrimaryControllerAddressType => '1.3.6.1.4.1.9.9.513.1.3.4',
  cLApGlobalPrimaryControllerAddress => '1.3.6.1.4.1.9.9.513.1.3.5',
  cLApGlobalPrimaryControllerName => '1.3.6.1.4.1.9.9.513.1.3.6',
  cLApGlobalSecondaryControllerAddressType => '1.3.6.1.4.1.9.9.513.1.3.7',
  cLApGlobalSecondaryControllerAddress => '1.3.6.1.4.1.9.9.513.1.3.8',
  cLApGlobalSecondaryControllerName => '1.3.6.1.4.1.9.9.513.1.3.9',
  cLApGlobalFailoverPriority => '1.3.6.1.4.1.9.9.513.1.3.10',
  cLApGlobalTcpMss => '1.3.6.1.4.1.9.9.513.1.3.11',
  cLApGlobalDot11IfTable => '1.3.6.1.4.1.9.9.513.1.3.12',
  cLApGlobalDot11IfEntry => '1.3.6.1.4.1.9.9.513.1.3.12.1',
  cLApGlobalDot11IfCdpEnabled => '1.3.6.1.4.1.9.9.513.1.3.12.1.1',
  cLApGlobalEthernetIfTable => '1.3.6.1.4.1.9.9.513.1.3.13',
  cLApGlobalEthernetIfEntry => '1.3.6.1.4.1.9.9.513.1.3.13.1',
  cLApGlobalEthernetIfCdpEnabled => '1.3.6.1.4.1.9.9.513.1.3.13.1.1',
  cLApGlobalRetransmitCount => '1.3.6.1.4.1.9.9.513.1.3.14',
  cLApGlobalRetransmitTimeout => '1.3.6.1.4.1.9.9.513.1.3.15',
  ciscoLwappApCredentials => '1.3.6.1.4.1.9.9.513.1.4',
  cLApCredentialGlobalUserName => '1.3.6.1.4.1.9.9.513.1.4.1',
  cLApCredentialGlobalPassword => '1.3.6.1.4.1.9.9.513.1.4.2',
  cLApCredentialGlobalSecret => '1.3.6.1.4.1.9.9.513.1.4.3',
  cLApCredentialsTable => '1.3.6.1.4.1.9.9.513.1.4.4',
  cLApCredentialsEntry => '1.3.6.1.4.1.9.9.513.1.4.4.1',
  cLApCredentialUserName => '1.3.6.1.4.1.9.9.513.1.4.4.1.1',
  cLApCredentialPassword => '1.3.6.1.4.1.9.9.513.1.4.4.1.2',
  cLApCredentialSecret => '1.3.6.1.4.1.9.9.513.1.4.4.1.3',
  cLApCredentialEnableGlobalCredentials => '1.3.6.1.4.1.9.9.513.1.4.4.1.4',
  ciscoLwappLinkLatency => '1.3.6.1.4.1.9.9.513.1.5',
  cLApLinkLatencyTable => '1.3.6.1.4.1.9.9.513.1.5.1',
  cLApLinkLatencyEntry => '1.3.6.1.4.1.9.9.513.1.5.1.1',
  cLApLinkLatencyEnable => '1.3.6.1.4.1.9.9.513.1.5.1.1.1',
  cLApLinkLatencyReset => '1.3.6.1.4.1.9.9.513.1.5.1.1.2',
  cLApLinkLatencyStatsTable => '1.3.6.1.4.1.9.9.513.1.5.2',
  cLApLinkLatencyStatsEntry => '1.3.6.1.4.1.9.9.513.1.5.2.1',
  cLApLinkLatencyStatsCurrent => '1.3.6.1.4.1.9.9.513.1.5.2.1.1',
  cLApLinkLatencyStatsMin => '1.3.6.1.4.1.9.9.513.1.5.2.1.2',
  cLApLinkLatencyStatsMax => '1.3.6.1.4.1.9.9.513.1.5.2.1.3',
  cLApLinkLatencyTimeStamp => '1.3.6.1.4.1.9.9.513.1.5.2.1.4',
  cLApDataLinkLatencyStatsCurrent => '1.3.6.1.4.1.9.9.513.1.5.2.1.5',
  cLApDataLinkLatencyStatsMin => '1.3.6.1.4.1.9.9.513.1.5.2.1.6',
  cLApDataLinkLatencyStatsMax => '1.3.6.1.4.1.9.9.513.1.5.2.1.7',
  cLApDataLinkLatencyTimeStamp => '1.3.6.1.4.1.9.9.513.1.5.2.1.8',
  ciscoLwappSpectrum => '1.3.6.1.4.1.9.9.513.1.6',
  ciscoLwappAp802dot1xSupplicant => '1.3.6.1.4.1.9.9.513.1.7',
  cLApGlobal802dot1xAuthenticationEnabled => '1.3.6.1.4.1.9.9.513.1.7.1',
  cLApGlobal802dot1xSupplicantUsername => '1.3.6.1.4.1.9.9.513.1.7.2',
  cLApGlobal802dot1xSupplicantPassword => '1.3.6.1.4.1.9.9.513.1.7.3',
  cLAp802dot1xSupplicantTable => '1.3.6.1.4.1.9.9.513.1.7.4',
  cLAp802dot1xSupplicantEntry => '1.3.6.1.4.1.9.9.513.1.7.4.1',
  cLAp802dot1xSupplicantOverrideEnabled => '1.3.6.1.4.1.9.9.513.1.7.4.1.1',
  cLAp802dot1xSupplicantOverrideUsername => '1.3.6.1.4.1.9.9.513.1.7.4.1.2',
  cLAp802dot1xSupplicantOverridePassword => '1.3.6.1.4.1.9.9.513.1.7.4.1.3',
  cLApSeClientTable => '1.3.6.1.4.1.9.9.513.1.8',
  cLApSeClientEntry => '1.3.6.1.4.1.9.9.513.1.8.1',
  cLApSeIndex => '1.3.6.1.4.1.9.9.513.1.8.1.1',
  cLApSeClientUserName => '1.3.6.1.4.1.9.9.513.1.8.1.2',
  cLApSeClientIPAddrType => '1.3.6.1.4.1.9.9.513.1.8.1.3',
  cLApSeClientIPAddr => '1.3.6.1.4.1.9.9.513.1.8.1.4',
  cLApSeClientDuration => '1.3.6.1.4.1.9.9.513.1.8.1.5',
  cLApSeClientPort => '1.3.6.1.4.1.9.9.513.1.8.1.6',
  ciscoLwappApMIBConform => '1.3.6.1.4.1.9.9.513.2',
  ciscoLwappApMIBCompliances => '1.3.6.1.4.1.9.9.513.2.1',
  ciscoLwappApMIBGroups => '1.3.6.1.4.1.9.9.513.2.2',
  ciscoLwappApMIBNotifObjects => '1.3.6.1.4.1.9.9.513.3',
  cLApAssocFailureReason => '1.3.6.1.4.1.9.9.513.3.1',
  cLApRogueApMacAddress => '1.3.6.1.4.1.9.9.513.3.2',
  cLApDot11RadioChannelNumber => '1.3.6.1.4.1.9.9.513.3.3',
  cLApRogueApSsid => '1.3.6.1.4.1.9.9.513.3.4',
  cLApRogueType => '1.3.6.1.4.1.9.9.513.3.5',
  cLApRogueTypeDefinition => 'CISCO-LWAPP-AP-MIB::cLApRogueType',
  cLApWipsReason => '1.3.6.1.4.1.9.9.513.3.6',
  cLApWipsReasonDefinition => 'CISCO-LWAPP-AP-MIB::cLApWipsReason',
  cLApWipsClear => '1.3.6.1.4.1.9.9.513.3.7',
  cLApIfUpDownFailureType => '1.3.6.1.4.1.9.9.513.3.8',
  cLApIfUpDownFailureTypeDefinition => 'CISCO-LWAPP-AP-MIB::cLApIfUpDownFailureType',
  cLApIfUpDownCause => '1.3.6.1.4.1.9.9.513.3.9',
  cLApIfUpDownFailureCode => '1.3.6.1.4.1.9.9.513.3.10',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'CISCO-LWAPP-AP-MIB'} = {
  cLApPwrInjectorSelection => {
    '1' => 'unknown',
    '2' => 'installed',
    '3' => 'override',
  },
  cLApLegacyBeamForming => {
    '1' => 'enable',
    '2' => 'disable',
    '3' => 'notApplicable',
  },
  cLApVlanIfMode => {
    '1' => 'normal',
    '2' => 'access',
    '3' => 'trunk',
  },
  cLApWipsReason => {
    '1' => 'noMonitoringDevice',
  },
  cLApIfUpDownFailureType => {
    '1' => 'detectedFailure',
    '2' => 'configuredReset',
  },
  cLApRogueType => {
    '1' => 'asleap',
    '2' => 'honeypot',
    '3' => 'other',
  },
  cLApMonitorModeOptimization => {
    '1' => 'all',
    '2' => 'tracking',
    '3' => 'wips',
    '4' => 'none',
  },
  cLApPowerStatus => {
    '1' => 'low',
    '2' => 'fifteendotfour',
    '3' => 'sixteendoteight',
    '4' => 'full',
    '5' => 'external',
    '6' => 'mixedmode',
  },
  cLApFailoverPriority => {
    '1' => 'low',
    '2' => 'medium',
    '3' => 'high',
    '4' => 'critical',
  },
  cLApEthernetIfOperStatus => {
    '1' => 'up',
    '2' => 'down',
  },
  cLApEthernetIfPOEPower => {
    '1' => 'none',
    '2' => 'drawn',
    '3' => 'notdrawn',
  },
  cLApNwLegacyBeamForming => {
    '1' => 'enable',
    '2' => 'disable',
    '3' => 'notApplicable',
  },
  cLApEthernetIfDuplex => {
    '1' => 'unknown',
    '2' => 'halfduplex',
    '3' => 'fullduplex',
    '4' => 'auto',
  },
  cLApFastHbTimerApType => {
    '1' => 'local',
    '2' => 'hreap',
  },
  cLApEthernetIfAdminStatus => {
    '1' => 'up',
    '2' => 'down',
  },
  cLAp11nChannelBandwidth => {
    '1' => 'five',
    '2' => 'ten',
    '3' => 'twenty',
    '4' => 'forty',
  },
  cLApLastRebootReason => {
    '0' => 'none',
    '1' => 'dot11gModeChange',
    '2' => 'ipAddressSet',
    '3' => 'ipAddressReset',
    '4' => 'rebootFromController',
    '5' => 'dhcpFallbackFail',
    '6' => 'discoveryFail',
    '7' => 'noJoinResponse',
    '8' => 'denyJoin',
    '9' => 'noConfigResponse',
    '10' => 'configController',
    '11' => 'imageUpgradeSuccess',
    '12' => 'imageOpcodeInvalid',
    '13' => 'imageCheckSumInvalid',
    '14' => 'imageDataTimeout',
    '15' => 'configFileInvalid',
    '16' => 'imageDownloadError',
    '17' => 'rebootFromConsole',
    '18' => 'rapOverAir',
    '19' => 'powerLow',
    '20' => 'crash',
    '21' => 'powerHigh',
    '22' => 'powerLoss',
    '23' => 'powerChange',
    '24' => 'componentFailure',
    '25' => 'watchdog',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOLWAPPHAMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCO-LWAPP-HA-MIB'} = {
  url => '',
  name => 'CISCO-LWAPP-HA-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'CISCO-LWAPP-HA-MIB'} =
    '1.3.6.1.4.1.9.9.198888';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCO-LWAPP-HA-MIB'} = {
  ciscoLwappHaMIB => '1.3.6.1.4.1.9.9.198888',
  ciscoLwappHaMIBObjects => '1.3.6.1.4.1.9.9.198888.0',
  ciscoLwappHaGlobalConfig => '1.3.6.1.4.1.9.9.198888.0.1',
  cLHaApSsoConfig => '1.3.6.1.4.1.9.9.198888.0.1.1',
  cLHaPeerIpAddressType => '1.3.6.1.4.1.9.9.198888.0.1.2',
  cLHaPeerIpAddressTypeDefinition => 'INET-ADDRESS-MIB::InetAddressType',
  cLHaPeerIpAddress => '1.3.6.1.4.1.9.9.198888.0.1.3',
  cLHaPeerIpAddressDefinition => 'INET-ADDRESS-MIB::InetAddress(cLHaPeerIpAddressType)',
  cLHaServicePortPeerIpAddressType => '1.3.6.1.4.1.9.9.198888.0.1.4',
  cLHaServicePortPeerIpAddressTypeDefinition => 'INET-ADDRESS-MIB::InetAddressType',
  cLHaServicePortPeerIpAddress => '1.3.6.1.4.1.9.9.198888.0.1.5',
  cLHaServicePortPeerIpAddressDefinition => 'INET-ADDRESS-MIB::InetAddress(cLHaServicePortPeerIpAddressType)',
  cLHaServicePortPeerIpNetMaskType => '1.3.6.1.4.1.9.9.198888.0.1.6',
  cLHaServicePortPeerIpNetMaskTypeDefinition => 'INET-ADDRESS-MIB::InetAddressType',
  cLHaServicePortPeerIpNetMask => '1.3.6.1.4.1.9.9.198888.0.1.7',
  cLHaServicePortPeerIpNetMaskDefinition => 'INET-ADDRESS-MIB::InetAddress(cLHaServicePortPeerIpNetMaskType)',
  cLHaRedundancyIpAddressType => '1.3.6.1.4.1.9.9.198888.0.1.8',
  cLHaRedundancyIpAddressTypeDefinition => 'INET-ADDRESS-MIB::InetAddressType',
  cLHaRedundancyIpAddress => '1.3.6.1.4.1.9.9.198888.0.1.9',
  cLHaRedundancyIpAddressDefinition => 'INET-ADDRESS-MIB::InetAddress(cLHaRedundancyIpAddressType)',
  cLHaPeerMacAddress => '1.3.6.1.4.1.9.9.198888.0.1.10',
  cLHaVirtualMacAddress => '1.3.6.1.4.1.9.9.198888.0.1.11',
  cLHaPrimaryUnit => '1.3.6.1.4.1.9.9.198888.0.1.12',
  cLHaPrimaryUnitDefinition => 'SNMPv2-TC-v1-MIB::TruthValue',
  cLHaLinkEncryption => '1.3.6.1.4.1.9.9.198888.0.1.13',
  cLHaNetworkFailOver => '1.3.6.1.4.1.9.9.198888.0.1.14',
  cLHaNetworkFailOverDefinition => 'SNMPv2-TC-v1-MIB::TruthValue',
  cLHaRFStatusUnitIp => '1.3.6.1.4.1.9.9.198888.0.1.15',
  cLHaKATimeout => '1.3.6.1.4.1.9.9.198888.0.1.16',
  cLHaKARetryCount => '1.3.6.1.4.1.9.9.198888.0.1.17',
  cLHaGwRetryCount => '1.3.6.1.4.1.9.9.198888.0.1.18',
  cLHaPeerSearchTimeout => '1.3.6.1.4.1.9.9.198888.0.1.19',
  ciscoLwappHaNetworkConfig => '1.3.6.1.4.1.9.9.198888.0.2',
  cLHaNetworkRoutePeerConfigTable => '1.3.6.1.4.1.9.9.198888.0.2.1',
  cLHaNetworkRoutePeerConfigEntry => '1.3.6.1.4.1.9.9.198888.0.2.1.1',
  cLHaNetworkRoutePeerIPAddressType => '1.3.6.1.4.1.9.9.198888.0.2.1.1.1',
  cLHaNetworkRoutePeerIPAddressTypeDefinition => 'INET-ADDRESS-MIB::InetAddressType',
  cLHaNetworkRoutePeerIPAddress => '1.3.6.1.4.1.9.9.198888.0.2.1.1.2',
  cLHaNetworkRoutePeerIPAddressDefinition => 'INET-ADDRESS-MIB::InetAddress(cLHaNetworkRoutePeerIPAddressType)',
  cLHaNetworkRoutePeerIPNetmaskType => '1.3.6.1.4.1.9.9.198888.0.2.1.1.3',
  cLHaNetworkRoutePeerIPNetmaskTypeDefinition => 'INET-ADDRESS-MIB::InetAddressType',
  cLHaNetworkRoutePeerIPNetmask => '1.3.6.1.4.1.9.9.198888.0.2.1.1.4',
  cLHaNetworkRoutePeerIPNetmaskDefinition => 'INET-ADDRESS-MIB::InetAddress(cLHaNetworkRoutePeerIPNetmaskType)',
  cLHaNetworkRoutePeerGatewayType => '1.3.6.1.4.1.9.9.198888.0.2.1.1.5',
  cLHaNetworkRoutePeerGatewayTypeDefinition => 'INET-ADDRESS-MIB::InetAddressType',
  cLHaNetworkRoutePeerGateway => '1.3.6.1.4.1.9.9.198888.0.2.1.1.6',
  cLHaNetworkRoutePeerGatewayDefinition => 'INET-ADDRESS-MIB::InetAddress(cLHaNetworkRoutePeerGatewayType)',
  cLHaNetworkRoutePeerTransferStatus => '1.3.6.1.4.1.9.9.198888.0.2.1.1.7',
  cLHaNetworkRoutePeerTransferStatusDefinition => 'CISCO-LWAPP-HA-MIB::cLHaNetworkRoutePeerTransferStatus',
  cLHaNetworkRoutePeerRowStatus => '1.3.6.1.4.1.9.9.198888.0.2.1.1.8',
  ciscoLwappHaMIBNotifs => '1.3.6.1.4.1.9.9.198888.0.3',
  ciscoLwappHaNotificationVariable => '1.3.6.1.4.1.9.9.198888.0.4',
  cLHaSecondaryControllerUsageTrapType => '1.3.6.1.4.1.9.9.198888.0.4.1',
  cLHaSecondaryControllerUsageTrapTypeDefinition => 'CISCO-LWAPP-HA-MIB::cLHaSecondaryControllerUsageTrapType',
  cLHaSecondaryControllerUsageDayCounter => '1.3.6.1.4.1.9.9.198888.0.4.2',
  cLHaBulkSyncCompleteEventStr => '1.3.6.1.4.1.9.9.198888.0.4.3',
  cLHaPeerHotStandbyEventStr => '1.3.6.1.4.1.9.9.198888.0.4.4',
  ciscoLwappHaPeerStatisticsVariable => '1.3.6.1.4.1.9.9.198888.0.5',
  cLHaSystemStatistics => '1.3.6.1.4.1.9.9.198888.0.5.1',
  cLHaCpuStatistics => '1.3.6.1.4.1.9.9.198888.0.5.1.1',
  cLHaAllCpuUsage => '1.3.6.1.4.1.9.9.198888.0.5.1.1.1',
  cLHaPowerSupplyStatistics => '1.3.6.1.4.1.9.9.198888.0.5.1.2',
  cLHaPowerSupply1Present => '1.3.6.1.4.1.9.9.198888.0.5.1.2.1',
  cLHaPowerSupply1PresentDefinition => 'CISCO-LWAPP-HA-MIB::cLHaPowerSupply1Present',
  cLHaPowerSupply1Operational => '1.3.6.1.4.1.9.9.198888.0.5.1.2.2',
  cLHaPowerSupply1OperationalDefinition => 'CISCO-LWAPP-HA-MIB::cLHaPowerSupply1Operational',
  cLHaPowerSupply2Present => '1.3.6.1.4.1.9.9.198888.0.5.1.2.3',
  cLHaPowerSupply2PresentDefinition => 'CISCO-LWAPP-HA-MIB::cLHaPowerSupply2Present',
  cLHaPowerSupply2Operational => '1.3.6.1.4.1.9.9.198888.0.5.1.2.4',
  cLHaPowerSupply2OperationalDefinition => 'CISCO-LWAPP-HA-MIB::cLHaPowerSupply2Operational',
  cLHaMemoryStatistics => '1.3.6.1.4.1.9.9.198888.0.5.1.3',
  cLHaTotalSystemMemory => '1.3.6.1.4.1.9.9.198888.0.5.1.3.1',
  cLHaFreeSystemMemory => '1.3.6.1.4.1.9.9.198888.0.5.1.3.2',
  cLHaUsedSystemMemory => '1.3.6.1.4.1.9.9.198888.0.5.1.3.3',
  cLHaAllocatedFromRtos => '1.3.6.1.4.1.9.9.198888.0.5.1.3.4',
  cLHaChunksFree => '1.3.6.1.4.1.9.9.198888.0.5.1.3.5',
  cLHaMmappedRegions => '1.3.6.1.4.1.9.9.198888.0.5.1.3.6',
  cLHaSpaceInMmappedRegions => '1.3.6.1.4.1.9.9.198888.0.5.1.3.7',
  cLHaTotalAllocatedSpace => '1.3.6.1.4.1.9.9.198888.0.5.1.3.8',
  cLHaTotalNotInUseSpace => '1.3.6.1.4.1.9.9.198888.0.5.1.3.9',
  cLHaTopMostReleasableSpace => '1.3.6.1.4.1.9.9.198888.0.5.1.3.10',
  cLHaTotalAllocatedInclMmap => '1.3.6.1.4.1.9.9.198888.0.5.1.3.11',
  cLHaTotalUsedInclMmap => '1.3.6.1.4.1.9.9.198888.0.5.1.3.12',
  cLHaTotalFreeInclMmap => '1.3.6.1.4.1.9.9.198888.0.5.1.3.13',
  ciscoLwappHaStatisticsVariable => '1.3.6.1.4.1.9.9.198888.0.6',
  cLHaAvgPeerReachLatency => '1.3.6.1.4.1.9.9.198888.0.6.1',
  cLHaAvgGwReachLatency => '1.3.6.1.4.1.9.9.198888.0.6.2',
  cLHaBulkSyncStatus => '1.3.6.1.4.1.9.9.198888.0.6.3',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'CISCO-LWAPP-HA-MIB'} = {
  cLHaSecondaryControllerUsageTrapType => {
    '1' => 'usageStart',
    '2' => 'usageComplete',
    '3' => 'overUsage',
  },
  cLHaPowerSupply1Present => {
    '0' => 'false',
    '1' => 'true',
  },
  cLHaPowerSupply1Operational => {
    '0' => 'false',
    '1' => 'true',
  },
  cLHaPowerSupply2Present => {
    '0' => 'false',
    '1' => 'true',
  },
  cLHaPowerSupply2Operational => {
    '0' => 'false',
    '1' => 'true',
  },
  cLHaNetworkRoutePeerTransferStatus => {
    '1' => 'initiate',
    '2' => 'inProgress',
    '3' => 'success',
    '4' => 'failure',
    '5' => 'timeout',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOMEMORYPOOLMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCO-MEMORY-POOL-MIB'} = {
  url => '',
  name => 'CISCO-MEMORY-POOL-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCO-MEMORY-POOL-MIB'} = {
  'ciscoMemoryPoolTable' => '1.3.6.1.4.1.9.9.48.1.1',
  'ciscoMemoryPoolEntry' => '1.3.6.1.4.1.9.9.48.1.1.1',
  'ciscoMemoryPoolType' => '1.3.6.1.4.1.9.9.48.1.1.1.1',
  'ciscoMemoryPoolTypeDefinition' => {
    '1' => 'processor memory',
    '2' => 'i/o memory',
    '3' => 'pci memory',
    '4' => 'fast memory',
    '5' => 'multibus memory',
  },
  'ciscoMemoryPoolName' => '1.3.6.1.4.1.9.9.48.1.1.1.2',
  'ciscoMemoryPoolAlternate' => '1.3.6.1.4.1.9.9.48.1.1.1.3',
  'ciscoMemoryPoolValid' => '1.3.6.1.4.1.9.9.48.1.1.1.4',
  'ciscoMemoryPoolUsed' => '1.3.6.1.4.1.9.9.48.1.1.1.5',
  'ciscoMemoryPoolFree' => '1.3.6.1.4.1.9.9.48.1.1.1.6',
  'ciscoMemoryPoolLargestFree' => '1.3.6.1.4.1.9.9.48.1.1.1.7',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOPORTCHANNELMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCO-PORT-CHANNEL-MIB'} = {
  url => '',
  name => 'CISCO-PORT-CHANNEL-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'CISCO-PORT-CHANNEL-MIB'} =
    '1.3.6.1.4.1.9.9.285';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCO-PORT-CHANNEL-MIB'} = {
  ciscoPortChannelMIB => '1.3.6.1.4.1.9.9.285',
  ciscoPortChannelObjects => '1.3.6.1.4.1.9.9.285.1',
  portChannelConfig => '1.3.6.1.4.1.9.9.285.1.1',
  portChannelTable => '1.3.6.1.4.1.9.9.285.1.1.1',
  portChannelEntry => '1.3.6.1.4.1.9.9.285.1.1.1.1',
  portChannelIndex => '1.3.6.1.4.1.9.9.285.1.1.1.1.1',
  portChannelIfIndex => '1.3.6.1.4.1.9.9.285.1.1.1.1.2',
  portChannelAdminChannelMode => '1.3.6.1.4.1.9.9.285.1.1.1.1.3',
  portChannelAdminChannelModeDefinition => 'CISCO-PORT-CHANNEL-MIB::PortChannelMode',
  portChannelOperChannelMode => '1.3.6.1.4.1.9.9.285.1.1.1.1.4',
  portChannelOperChannelModeDefinition => 'CISCO-PORT-CHANNEL-MIB::PortChannelMode',
  portChannelAddType => '1.3.6.1.4.1.9.9.285.1.1.1.1.5',
  portChannelAddTypeDefinition => 'CISCO-PORT-CHANNEL-MIB::portChannelAddType',
  portChannelLastActionStatus => '1.3.6.1.4.1.9.9.285.1.1.1.1.6',
  portChannelLastActionStatusDefinition => 'CISCO-PORT-CHANNEL-MIB::portChannelLastActionStatus',
  portChannelLastActionStatusCause => '1.3.6.1.4.1.9.9.285.1.1.1.1.7',
  portChannelLastActionTime => '1.3.6.1.4.1.9.9.285.1.1.1.1.8',
  portChannelMemberList => '1.3.6.1.4.1.9.9.285.1.1.1.1.9',
  portChannelCreationTime => '1.3.6.1.4.1.9.9.285.1.1.1.1.10',
  portChannelRowStatus => '1.3.6.1.4.1.9.9.285.1.1.1.1.11',
  portChannelMemberOperStatus => '1.3.6.1.4.1.9.9.285.1.1.1.1.12',
  portChannelProtocolEnable => '1.3.6.1.4.1.9.9.285.1.1.2',
  portChannelGrpIfExtTable => '1.3.6.1.4.1.9.9.285.1.1.3',
  portChannelGrpIfExtEntry => '1.3.6.1.4.1.9.9.285.1.1.3.1',
  portChannelGrpIfAutoCreation => '1.3.6.1.4.1.9.9.285.1.1.3.1.1',
  portChannelExtTable => '1.3.6.1.4.1.9.9.285.1.1.4',
  portChannelExtEntry => '1.3.6.1.4.1.9.9.285.1.1.4.1',
  portChannelExtChannelGrpMode => '1.3.6.1.4.1.9.9.285.1.1.4.1.1',
  portChannelExtChannelGrpModeDefinition => 'CISCO-PORT-CHANNEL-MIB::PortChannelGroupMode',
  portChannelExtAutoCreated => '1.3.6.1.4.1.9.9.285.1.1.4.1.2',
  portChannelExtPersistent => '1.3.6.1.4.1.9.9.285.1.1.4.1.3',
  portChannelExtPersistentDefinition => 'CISCO-PORT-CHANNEL-MIB::portChannelExtPersistent',
  portChannelExtOperChannelGrpMode => '1.3.6.1.4.1.9.9.285.1.1.4.1.4',
  portChannelExtOperChannelGrpModeDefinition => 'CISCO-PORT-CHANNEL-MIB::PortChannelGroupMode',
  portChannelStatistics => '1.3.6.1.4.1.9.9.285.1.2',
  portChannelNotification => '1.3.6.1.4.1.9.9.285.1.3',
  portChannelNotifications => '1.3.6.1.4.1.9.9.285.1.3.0',
  portChannelMIBConformance => '1.3.6.1.4.1.9.9.285.2',
  portChannelMIBCompliances => '1.3.6.1.4.1.9.9.285.2.1',
  portChannelMIBGroups => '1.3.6.1.4.1.9.9.285.2.2',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'CISCO-PORT-CHANNEL-MIB'} = {
  PortChannelGroupMode => {
    '1' => 'on',
    '2' => 'active',
  },
  PortChannelMode => {
    '1' => 'auto',
    '2' => 'on',
    '3' => 'off',
    '4' => 'desirable',
  },
  portChannelLastActionStatus => {
    '1' => 'successful',
    '2' => 'failed',
  },
  portChannelExtPersistent => {
    '1' => 'noOp',
    '2' => 'enable',
  },
  portChannelAddType => {
    '1' => 'normal',
    '2' => 'force',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOPORTSECURITYMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCO-PORT-SECURITY-MIB'} = {
  url => '',
  name => 'CISCO-PORT-SECURITY-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'CISCO-PORT-SECURITY-MIB'} =
    '1.3.6.1.4.1.9.9.315';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCO-PORT-SECURITY-MIB'} = {
  ciscoPortSecurityMIB => '1.3.6.1.4.1.9.9.315',
  ciscoPortSecurityMIBNotifs => '1.3.6.1.4.1.9.9.315.0',
  cpsInterfaceNotifs => '1.3.6.1.4.1.9.9.315.0.0',
  ciscoPortSecurityMIBObjects => '1.3.6.1.4.1.9.9.315.1',
  cpsGlobalObjects => '1.3.6.1.4.1.9.9.315.1.1',
  cpsGlobalMaxSecureAddress => '1.3.6.1.4.1.9.9.315.1.1.1',
  cpsGlobalTotalSecureAddress => '1.3.6.1.4.1.9.9.315.1.1.2',
  cpsGlobalPortSecurityEnable => '1.3.6.1.4.1.9.9.315.1.1.3',
  cpsGlobalPortSecurityEnableDefinition => 'SNMPv2-TC-v1-MIB::TruthValue',
  cpsGlobalSNMPNotifRate => '1.3.6.1.4.1.9.9.315.1.1.4',
  cpsGlobalSNMPNotifControl => '1.3.6.1.4.1.9.9.315.1.1.5',
  cpsGlobalClearSecureMacAddresses => '1.3.6.1.4.1.9.9.315.1.1.6',
  cpsGlobalClearSecureMacAddressesDefinition => 'CISCO-PORT-SECURITY-MIB::ClearSecureMacAddrType',
  cpsInterfaceObjects => '1.3.6.1.4.1.9.9.315.1.2',
  cpsIfConfigTable => '1.3.6.1.4.1.9.9.315.1.2.1',
  cpsIfConfigEntry => '1.3.6.1.4.1.9.9.315.1.2.1.1',
  cpsIfPortSecurityEnable => '1.3.6.1.4.1.9.9.315.1.2.1.1.1',
  cpsIfPortSecurityEnableDefinition => 'SNMPv2-TC-v1-MIB::TruthValue',
  cpsIfPortSecurityStatus => '1.3.6.1.4.1.9.9.315.1.2.1.1.2',
  cpsIfPortSecurityStatusDefinition => 'CISCO-PORT-SECURITY-MIB::cpsIfPortSecurityStatus',
  cpsIfMaxSecureMacAddr => '1.3.6.1.4.1.9.9.315.1.2.1.1.3',
  cpsIfCurrentSecureMacAddrCount => '1.3.6.1.4.1.9.9.315.1.2.1.1.4',
  cpsIfSecureMacAddrAgingTime => '1.3.6.1.4.1.9.9.315.1.2.1.1.5',
  cpsIfSecureMacAddrAgingType => '1.3.6.1.4.1.9.9.315.1.2.1.1.6',
  cpsIfSecureMacAddrAgingTypeDefinition => 'CISCO-PORT-SECURITY-MIB::cpsIfSecureMacAddrAgingType',
  cpsIfStaticMacAddrAgingEnable => '1.3.6.1.4.1.9.9.315.1.2.1.1.7',
  cpsIfStaticMacAddrAgingEnableDefinition => 'SNMPv2-TC-v1-MIB::TruthValue',
  cpsIfViolationAction => '1.3.6.1.4.1.9.9.315.1.2.1.1.8',
  cpsIfViolationActionDefinition => 'CISCO-PORT-SECURITY-MIB::cpsIfViolationAction',
  cpsIfViolationCount => '1.3.6.1.4.1.9.9.315.1.2.1.1.9',
  cpsIfSecureLastMacAddress => '1.3.6.1.4.1.9.9.315.1.2.1.1.10',
  cpsIfClearSecureAddresses => '1.3.6.1.4.1.9.9.315.1.2.1.1.11',
  cpsIfClearSecureAddressesDefinition => 'SNMPv2-TC-v1-MIB::TruthValue',
  cpsIfUnicastFloodingEnable => '1.3.6.1.4.1.9.9.315.1.2.1.1.12',
  cpsIfUnicastFloodingEnableDefinition => 'SNMPv2-TC-v1-MIB::TruthValue',
  cpsIfShutdownTimeout => '1.3.6.1.4.1.9.9.315.1.2.1.1.13',
  cpsIfClearSecureMacAddresses => '1.3.6.1.4.1.9.9.315.1.2.1.1.14',
  cpsIfClearSecureMacAddressesDefinition => 'CISCO-PORT-SECURITY-MIB::ClearSecureMacAddrType',
  cpsIfStickyEnable => '1.3.6.1.4.1.9.9.315.1.2.1.1.15',
  cpsIfStickyEnableDefinition => 'SNMPv2-TC-v1-MIB::TruthValue',
  cpsIfInvalidSrcRateLimitEnable => '1.3.6.1.4.1.9.9.315.1.2.1.1.16',
  cpsIfInvalidSrcRateLimitEnableDefinition => 'SNMPv2-TC-v1-MIB::TruthValue',
  cpsIfInvalidSrcRateLimitValue => '1.3.6.1.4.1.9.9.315.1.2.1.1.17',
  cpsIfSecureLastMacAddrVlanId => '1.3.6.1.4.1.9.9.315.1.2.1.1.18',
  cpsSecureMacAddressTable => '1.3.6.1.4.1.9.9.315.1.2.2',
  cpsSecureMacAddressEntry => '1.3.6.1.4.1.9.9.315.1.2.2.1',
  cpsSecureMacAddress => '1.3.6.1.4.1.9.9.315.1.2.2.1.1',
  cpsSecureMacAddrType => '1.3.6.1.4.1.9.9.315.1.2.2.1.2',
  cpsSecureMacAddrTypeDefinition => 'CISCO-PORT-SECURITY-MIB::cpsSecureMacAddrType',
  cpsSecureMacAddrRemainingAge => '1.3.6.1.4.1.9.9.315.1.2.2.1.3',
  cpsSecureMacAddrRowStatus => '1.3.6.1.4.1.9.9.315.1.2.2.1.4',
  cpsIfVlanSecureMacAddrTable => '1.3.6.1.4.1.9.9.315.1.2.3',
  cpsIfVlanSecureMacAddrEntry => '1.3.6.1.4.1.9.9.315.1.2.3.1',
  cpsIfVlanSecureMacAddress => '1.3.6.1.4.1.9.9.315.1.2.3.1.1',
  cpsIfVlanSecureVlanIndex => '1.3.6.1.4.1.9.9.315.1.2.3.1.2',
  cpsIfVlanSecureMacAddrType => '1.3.6.1.4.1.9.9.315.1.2.3.1.3',
  cpsIfVlanSecureMacAddrTypeDefinition => 'CISCO-PORT-SECURITY-MIB::cpsIfVlanSecureMacAddrType',
  cpsIfVlanSecureMacAddrRemainAge => '1.3.6.1.4.1.9.9.315.1.2.3.1.4',
  cpsIfVlanSecureMacAddrRowStatus => '1.3.6.1.4.1.9.9.315.1.2.3.1.5',
  cpsIfVlanTable => '1.3.6.1.4.1.9.9.315.1.2.4',
  cpsIfVlanEntry => '1.3.6.1.4.1.9.9.315.1.2.4.1',
  cpsIfVlanIndex => '1.3.6.1.4.1.9.9.315.1.2.4.1.1',
  cpsIfVlanMaxSecureMacAddr => '1.3.6.1.4.1.9.9.315.1.2.4.1.2',
  cpsIfVlanCurSecureMacAddrCount => '1.3.6.1.4.1.9.9.315.1.2.4.1.3',
  cpsIfMultiVlanTable => '1.3.6.1.4.1.9.9.315.1.2.5',
  cpsIfMultiVlanEntry => '1.3.6.1.4.1.9.9.315.1.2.5.1',
  cpsIfMultiVlanIndex => '1.3.6.1.4.1.9.9.315.1.2.5.1.1',
  cpsIfMultiVlanMaxSecureMacAddr => '1.3.6.1.4.1.9.9.315.1.2.5.1.2',
  cpsIfMultiVlanSecureMacAddrCount => '1.3.6.1.4.1.9.9.315.1.2.5.1.3',
  cpsIfMultiVlanClearSecureMacAddr => '1.3.6.1.4.1.9.9.315.1.2.5.1.4',
  cpsIfMultiVlanClearSecureMacAddrDefinition => 'CISCO-PORT-SECURITY-MIB::ClearSecureMacAddrType',
  cpsIfMultiVlanRowStatus => '1.3.6.1.4.1.9.9.315.1.2.5.1.5',
  ciscoPortSecurityMIBConform => '1.3.6.1.4.1.9.9.315.2',
  ciscoPortSecurityMIBCompliances => '1.3.6.1.4.1.9.9.315.2.1',
  ciscoPortSecurityMIBGroups => '1.3.6.1.4.1.9.9.315.2.2',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'CISCO-PORT-SECURITY-MIB'} = {
  cpsIfPortSecurityStatus => {
    '1' => 'secureup',
    '2' => 'securedown',
    '3' => 'shutdown',
  },
  cpsIfVlanSecureMacAddrType => {
    '1' => 'static',
    '2' => 'dynamic',
    '3' => 'sticky',
  },
  cpsIfSecureMacAddrAgingType => {
    '1' => 'absolute',
    '2' => 'inactivity',
  },
  cpsIfViolationAction => {
    '1' => 'shutdown',
    '2' => 'dropNotify',
    '3' => 'drop',
  },
  ClearSecureMacAddrType => {
    '0' => 'done',
    '1' => 'dynamic',
    '2' => 'static',
    '3' => 'sticky',
    '4' => 'all',
  },
  cpsSecureMacAddrType => {
    '1' => 'static',
    '2' => 'dynamic',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOPROCESSMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCO-PROCESS-MIB'} = {
  url => '',
  name => 'CISCO-PROCESS-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCO-PROCESS-MIB'} = {
  'cpmCPUTotalTable' => '1.3.6.1.4.1.9.9.109.1.1.1',
  'cpmCPUTotalEntry' => '1.3.6.1.4.1.9.9.109.1.1.1.1',
  'cpmCPUTotalIndex' => '1.3.6.1.4.1.9.9.109.1.1.1.1.1',
  'cpmCPUTotalPhysicalIndex' => '1.3.6.1.4.1.9.9.109.1.1.1.1.2',
  'cpmCPUTotal5sec' => '1.3.6.1.4.1.9.9.109.1.1.1.1.3',
  'cpmCPUTotal1min' => '1.3.6.1.4.1.9.9.109.1.1.1.1.4',
  'cpmCPUTotal5min' => '1.3.6.1.4.1.9.9.109.1.1.1.1.5',
  'cpmCPUTotal5secRev' => '1.3.6.1.4.1.9.9.109.1.1.1.1.6',
  'cpmCPUTotal1minRev' => '1.3.6.1.4.1.9.9.109.1.1.1.1.7',
  'cpmCPUTotal5minRev' => '1.3.6.1.4.1.9.9.109.1.1.1.1.8',
  'cpmCPUMonInterval' => '1.3.6.1.4.1.9.9.109.1.1.1.1.9',
  'cpmCPUTotalMonIntervalDefinition' => '1.3.6.1.4.1.9.9.109.1.1.1.1.10',
  'cpmCPUInterruptMonIntervalDefinition' => '1.3.6.1.4.1.9.9.109.1.1.1.1.11',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOSBHWENVIROMENT;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCOSB-HWENVIROMENT'} = {
  url => '',
  name => 'CISCOSB-HWENVIROMENT',
};

#$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'CISCOSB-HWENVIROMENT'} = 

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCOSB-HWENVIROMENT'} = {
  rlEnv => '1.3.6.1.4.1.9.6.1.101.83',
  rlEnvPhysicalDescription => '1.3.6.1.4.1.9.6.1.101.83.1',
  rlEnvMonFanStatusTable => '1.3.6.1.4.1.9.6.1.101.83.1.1',
  rlEnvMonFanStatusEntry => '1.3.6.1.4.1.9.6.1.101.83.1.1.1',
  rlEnvMonFanStatusIndex => '1.3.6.1.4.1.9.6.1.101.83.1.1.1.1',
  rlEnvMonFanStatusDescr => '1.3.6.1.4.1.9.6.1.101.83.1.1.1.2',
  rlEnvMonFanState => '1.3.6.1.4.1.9.6.1.101.83.1.1.1.3',
  rlEnvMonFanStateDefinition => 'CISCOSB-HWENVIROMENT::RlEnvMonState',
  rlEnvMonSupplyStatusTable => '1.3.6.1.4.1.9.6.1.101.83.1.2',
  rlEnvMonSupplyStatusEntry => '1.3.6.1.4.1.9.6.1.101.83.1.2.1',
  rlEnvMonSupplyStatusIndex => '1.3.6.1.4.1.9.6.1.101.83.1.2.1.1',
  rlEnvMonSupplyStatusDescr => '1.3.6.1.4.1.9.6.1.101.83.1.2.1.2',
  rlEnvMonSupplyState => '1.3.6.1.4.1.9.6.1.101.83.1.2.1.3',
  rlEnvMonSupplyStateDefinition => 'CISCOSB-HWENVIROMENT::RlEnvMonState',
  rlEnvMonSupplySource => '1.3.6.1.4.1.9.6.1.101.83.1.2.1.4',
  rlEnvMonSupplySourceDefinition => 'CISCOSB-HWENVIROMENT::rlEnvMonSupplySource',
  rlEnvMonSupplyFanDirection => '1.3.6.1.4.1.9.6.1.101.83.1.2.1.5',
  rlEnvMonSupplyFanDirectionDefinition => 'CISCOSB-HWENVIROMENT::RlEnvMonDirection',
  rlEnvFanData => '1.3.6.1.4.1.9.6.1.101.83.5',
  rlEnvFanDataTable => '1.3.6.1.4.1.9.6.1.101.83.5.1',
  rlEnvFanDataEntry => '1.3.6.1.4.1.9.6.1.101.83.5.1.1',
  rlEnvFanDataStackUnit => '1.3.6.1.4.1.9.6.1.101.83.5.1.1.1',
  rlEnvFanDataTemp => '1.3.6.1.4.1.9.6.1.101.83.5.1.1.2',
  rlEnvFanDataSpeed => '1.3.6.1.4.1.9.6.1.101.83.5.1.1.3',
  rlEnvFanDataOperLevel => '1.3.6.1.4.1.9.6.1.101.83.5.1.1.4',
  rlEnvFanDataAdminLevel => '1.3.6.1.4.1.9.6.1.101.83.5.1.1.5',
  rlEnvFanDataDirection => '1.3.6.1.4.1.9.6.1.101.83.5.1.1.6',
  rlEnvFanDataDirectionDefinition => 'CISCOSB-HWENVIROMENT::RlEnvMonDirection',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'CISCOSB-HWENVIROMENT'} = {
  rlEnvMonSupplySource => {
    '1' => 'unknown',
    '2' => 'ac',
    '3' => 'dc',
    '4' => 'externalPowerSupply',
    '5' => 'internalRedundant',
  },
  RlEnvMonDirection => {
    '1' => 'unKnown',
    '2' => 'frontToBack',
    '3' => 'backToFront',
    '4' => 'clockwise',
    '5' => 'unClockwise',
    '6' => 'insideOut',
    '7' => 'outsideIn',
    '8' => 'rightToLeft',
    '9' => 'leftToRight',
  },
  RlEnvMonState => {
    '1' => 'normal',
    '2' => 'warning',
    '3' => 'critical',
    '4' => 'shutdown',
    '5' => 'notPresent',
    '6' => 'notFunctioning',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOSBRNDMNG;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCOSB-RNDMNG'} = {
  url => '',
  name => 'CISCOSB-RNDMNG',
};

#$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'CISCOSB-RNDMNG'} = 

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCOSB-RNDMNG'} = {
  rndMng => '1.3.6.1.4.1.9.6.1.101.1',
  rndSysId => '1.3.6.1.4.1.9.6.1.101.1.1',
  rndAction => '1.3.6.1.4.1.9.6.1.101.1.2',
  rndActionDefinition => 'CISCOSB-rndMng::rndAction',
  rndFileName => '1.3.6.1.4.1.9.6.1.101.1.3',
  rlSnmpVersionSupported => '1.3.6.1.4.1.9.6.1.101.1.4',
  rlSnmpMibVersion => '1.3.6.1.4.1.9.6.1.101.1.5',
  rlCpuUtilEnable => '1.3.6.1.4.1.9.6.1.101.1.6',
  rlCpuUtilDuringLastSecond => '1.3.6.1.4.1.9.6.1.101.1.7',
  rlCpuUtilDuringLastMinute => '1.3.6.1.4.1.9.6.1.101.1.8',
  rlCpuUtilDuringLast5Minutes => '1.3.6.1.4.1.9.6.1.101.1.9',
  rlRebootDelay => '1.3.6.1.4.1.9.6.1.101.1.10',
  rlGroupManagement => '1.3.6.1.4.1.9.6.1.101.1.11',
  rlGroupMngQuery => '1.3.6.1.4.1.9.6.1.101.1.11.1',
  rlGroupMngQueryDefinition => 'CISCOSB-rndMng::rlGroupMngQuery',
  rlGroupMngQueryPeriod => '1.3.6.1.4.1.9.6.1.101.1.11.2',
  rlGroupMngLastUpdate => '1.3.6.1.4.1.9.6.1.101.1.11.3',
  rlGroupMngDevicesTable => '1.3.6.1.4.1.9.6.1.101.1.11.4',
  rlGroupMngDeviceEntry => '1.3.6.1.4.1.9.6.1.101.1.11.4.1',
  rlGroupMngDeviceIdType => '1.3.6.1.4.1.9.6.1.101.1.11.4.1.1',
  rlGroupMngDeviceId => '1.3.6.1.4.1.9.6.1.101.1.11.4.1.2',
  rlGroupMngSubdevice => '1.3.6.1.4.1.9.6.1.101.1.11.4.1.3',
  rlGroupMngDeviceDescription => '1.3.6.1.4.1.9.6.1.101.1.11.4.1.4',
  rlGroupMngGroupMngEnabled => '1.3.6.1.4.1.9.6.1.101.1.11.4.1.5',
  rlGroupMngGroupLLDPDeviceId => '1.3.6.1.4.1.9.6.1.101.1.11.4.1.6',
  rlGroupMngDeviceVendor => '1.3.6.1.4.1.9.6.1.101.1.11.4.1.7',
  rlGroupMngDeviceAdvertisedCachingTime => '1.3.6.1.4.1.9.6.1.101.1.11.4.1.8',
  rlGroupMngDeviceLocationURL => '1.3.6.1.4.1.9.6.1.101.1.11.4.1.9',
  rlGroupMngDeviceLastSeen => '1.3.6.1.4.1.9.6.1.101.1.11.4.1.10',
  rlRunningCDBequalToStartupCDB => '1.3.6.1.4.1.9.6.1.101.1.13',
  rlClearMib => '1.3.6.1.4.1.9.6.1.101.1.14',
  rlScheduledReload => '1.3.6.1.4.1.9.6.1.101.1.15',
  rlScheduledReloadPendingDate => '1.3.6.1.4.1.9.6.1.101.1.16',
  rlScheduledReloadApprovedDate => '1.3.6.1.4.1.9.6.1.101.1.17',
  rlScheduledReloadCommit => '1.3.6.1.4.1.9.6.1.101.1.18',
  rlSysNameTable => '1.3.6.1.4.1.9.6.1.101.1.19',
  rlSysNameEntry => '1.3.6.1.4.1.9.6.1.101.1.19.1',
  rlSysNameSource => '1.3.6.1.4.1.9.6.1.101.1.19.1.1',
  rlSysNameSourceDefinition => 'CISCOSB-rndMng::rlSysNameSource',
  rlSysNameIfIndex => '1.3.6.1.4.1.9.6.1.101.1.19.1.2',
  rlSysNameName => '1.3.6.1.4.1.9.6.1.101.1.19.1.3',
  rlSysNameRowStatus => '1.3.6.1.4.1.9.6.1.101.1.19.1.4',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'CISCOSB-RNDMNG'} = {
  rlSysNameSource => {
    '1' => 'dhcpv6',
    '2' => 'dhcpv4',
    '3' => 'static',
  },
  rlGroupMngQuery => {
    '1' => 'query',
    '2' => 'idle',
  },
  rndAction => {
    '1' => 'reset',
    '2' => 'sendNetworkTab',
    '3' => 'deleteNetworkTab',
    '4' => 'sendRoutingTab',
    '5' => 'deleteRoutingTab',
    '6' => 'sendLanTab',
    '7' => 'deleteLanTab',
    '8' => 'deleteArpTab',
    '9' => 'sendArpTab',
    '10' => 'deleteRouteTab',
    '11' => 'sendRouteTab',
    '12' => 'backupSPFRoutingTab',
    '13' => 'backupIPRoutingTab',
    '14' => 'backupNetworkTab',
    '15' => 'backupLanTab',
    '16' => 'backupArpTab',
    '17' => 'backupIPXRipTab',
    '18' => 'backupIPXSAPTab',
    '19' => 'resetStartupCDB',
    '20' => 'eraseStartupCDB',
    '21' => 'deleteZeroHopRoutingAllocTab',
    '22' => 'slipDisconnect',
    '23' => 'deleteDynamicLanTab',
    '24' => 'eraseRunningCDB',
    '25' => 'copyStartupToRunning',
    '26' => 'none',
    '27' => 'resetToFactoryDefaults',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOSBSYSMNGMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCOSB-SYSMNG-MIB'} = {
  url => '',
  name => 'CISCOSB-SYSMNG-MIB',
};

#$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'CISCOSB-SYSMNG-MIB'} = 

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCOSB-SYSMNG-MIB'} = {
  rlSysmngMib => '1.3.6.1.4.1.9.6.1.101.204',
  rlSysmngTcamAllocations => '1.3.6.1.4.1.9.6.1.101.204.1',
  rlSysmngTcamAllocationsTable => '1.3.6.1.4.1.9.6.1.101.204.1.1',
  rlSysmngTcamAllocationsEntry => '1.3.6.1.4.1.9.6.1.101.204.1.1.1',
  rlSysmngTcamAllocProfileName => '1.3.6.1.4.1.9.6.1.101.204.1.1.1.1',
  rlSysmngTcamAllocPoolType => '1.3.6.1.4.1.9.6.1.101.204.1.1.1.2',
  rlSysmngTcamAllocPoolTypeDefinition => 'CISCOSB-SYSMNG-MIB::SysmngPoolType',
  rlSysmngTcamAllocMinRequiredEntries => '1.3.6.1.4.1.9.6.1.101.204.1.1.1.3',
  rlSysmngTcamAllocStaticConfigEntries => '1.3.6.1.4.1.9.6.1.101.204.1.1.1.4',
  rlSysmngTcamAllocInUseEntries => '1.3.6.1.4.1.9.6.1.101.204.1.1.1.5',
  rlSysmngTcamAllocPoolSize => '1.3.6.1.4.1.9.6.1.101.204.1.1.1.6',
  rlSysmngResource => '1.3.6.1.4.1.9.6.1.101.204.2',
  rlSysmngResourceTable => '1.3.6.1.4.1.9.6.1.101.204.2.1',
  rlSysmngResourceEntry => '1.3.6.1.4.1.9.6.1.101.204.2.1.1',
  rlSysmngResourceRouteType => '1.3.6.1.4.1.9.6.1.101.204.2.1.1.1',
  rlSysmngResourceRouteTypeDefinition => 'CISCOSB-SYSMNG-MIB::SysmngResourceRouteType',
  rlSysmngResourceCurrentUse => '1.3.6.1.4.1.9.6.1.101.204.2.1.1.2',
  rlSysmngResourceCurrentUseHw => '1.3.6.1.4.1.9.6.1.101.204.2.1.1.3',
  rlSysmngResourceCurrentMax => '1.3.6.1.4.1.9.6.1.101.204.2.1.1.4',
  rlSysmngResourceCurrentMaxHw => '1.3.6.1.4.1.9.6.1.101.204.2.1.1.5',
  rlSysmngResourceTemporaryMax => '1.3.6.1.4.1.9.6.1.101.204.2.1.1.6',
  rlSysmngResourceTemporaryMaxHw => '1.3.6.1.4.1.9.6.1.101.204.2.1.1.7',
  rlSysmngResourceCurrentNexthopMax => '1.3.6.1.4.1.9.6.1.101.204.2.1.1.8',
  rlSysmngResourceCurrentNexthopMaxHw => '1.3.6.1.4.1.9.6.1.101.204.2.1.1.9',
  rlSysmngResourceCurrentNexthopUse => '1.3.6.1.4.1.9.6.1.101.204.2.1.1.10',
  rlSysmngResourceCurrentNexthopUseHw => '1.3.6.1.4.1.9.6.1.101.204.2.1.1.11',
  rlSysmngRouterResourceAction => '1.3.6.1.4.1.9.6.1.101.204.3',
  rlSysmngResourceUsage => '1.3.6.1.4.1.9.6.1.101.204.4',
  rlSysmngResourceUsageTable => '1.3.6.1.4.1.9.6.1.101.204.4.1',
  rlSysmngResourceUsageEntry => '1.3.6.1.4.1.9.6.1.101.204.4.1.1',
  rlSysmngResourceUsageType => '1.3.6.1.4.1.9.6.1.101.204.4.1.1.1',
  rlSysmngResourceUsageTypeDefinition => 'CISCOSB-SYSMNG-MIB::SysmngResourceRouteUsageType',
  rlSysmngResourceUsageNum => '1.3.6.1.4.1.9.6.1.101.204.4.1.1.2',
  rlSysmngResourcePerUnit => '1.3.6.1.4.1.9.6.1.101.204.5',
  rlSysmngResourcePerUnitTable => '1.3.6.1.4.1.9.6.1.101.204.5.1',
  rlSysmngResourcePerUnitEntry => '1.3.6.1.4.1.9.6.1.101.204.5.1.1',
  rlSysmngResourcePerUnitRouteType => '1.3.6.1.4.1.9.6.1.101.204.5.1.1.1',
  rlSysmngResourcePerUnitRouteTypeDefinition => 'CISCOSB-SYSMNG-MIB::SysmngResourceRouteType',
  rlSysmngResourcePerUnitUnitId => '1.3.6.1.4.1.9.6.1.101.204.5.1.1.2',
  rlSysmngResourcePerUnitCurrentUse => '1.3.6.1.4.1.9.6.1.101.204.5.1.1.3',
  rlSysmngResourcePerUnitCurrentUseHw => '1.3.6.1.4.1.9.6.1.101.204.5.1.1.4',
  rlSysmngResourcePerUnitCurrentMax => '1.3.6.1.4.1.9.6.1.101.204.5.1.1.5',
  rlSysmngResourcePerUnitCurrentMaxHw => '1.3.6.1.4.1.9.6.1.101.204.5.1.1.6',
  rlSysmngResourcePerUnitTemporaryMax => '1.3.6.1.4.1.9.6.1.101.204.5.1.1.7',
  rlSysmngResourcePerUnitTemporaryMaxHw => '1.3.6.1.4.1.9.6.1.101.204.5.1.1.8',
  rlSysmngResourcePerUnitCurrentNexthopMax => '1.3.6.1.4.1.9.6.1.101.204.5.1.1.9',
  rlSysmngResourcePerUnitCurrentNexthopMaxHw => '1.3.6.1.4.1.9.6.1.101.204.5.1.1.10',
  rlSysmngResourcePerUnitCurrentNexthopUse => '1.3.6.1.4.1.9.6.1.101.204.5.1.1.11',
  rlSysmngResourcePerUnitCurrentNexthopUseHw => '1.3.6.1.4.1.9.6.1.101.204.5.1.1.12',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'CISCOSB-SYSMNG-MIB'} = {
  SysmngPoolType => {
    '1' => 'router',
    '2' => 'iscsi',
    '3' => 'voip',
    '4' => 'misc',
  },
  SysmngResourceRouteUsageType => {
    '1' => 'ipv4Neighbor',
    '2' => 'ipv4Address',
    '3' => 'ipv4Route',
    '4' => 'ipv6Neighbor',
    '5' => 'ipv6Address',
    '6' => 'ipv6OnlinkPrefix',
    '7' => 'ipv6Route',
    '8' => 'ipmv4Route',
    '9' => 'ipmv4RouteStarG',
    '10' => 'ipmv6Route',
    '11' => 'ipmv6RouteStarG',
  },
  SysmngResourceRouteType => {
    '1' => 'ipv4',
    '2' => 'ipv6',
    '3' => 'ipmv4',
    '4' => 'ipmv6',
    '5' => 'nonIp',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOSBTUNING;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCOSB-TUNING'} = {
  url => '',
  name => 'CISCOSB-TUNING',
};

#$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'CISCOSB-TUNING'} = 

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCOSB-TUNING'} = {
  rsTunning => '1.3.6.1.4.1.9.6.1.101.29',
  rsHighPriority => '1.3.6.1.4.1.9.6.1.101.29.1',
  rsLowPriority => '1.3.6.1.4.1.9.6.1.101.29.2',
  rsDbgLevel => '1.3.6.1.4.1.9.6.1.101.29.3',
  rsDiagnosticsTable => '1.3.6.1.4.1.9.6.1.101.29.4',
  rsDiagnosticsEntry => '1.3.6.1.4.1.9.6.1.101.29.4.1',
  rsDiagnosticsRequestId => '1.3.6.1.4.1.9.6.1.101.29.4.1.1',
  rsDiagnosticsCode => '1.3.6.1.4.1.9.6.1.101.29.4.1.2',
  rsDiagnosticsLocation => '1.3.6.1.4.1.9.6.1.101.29.4.1.3',
  rsDiagnosticsText => '1.3.6.1.4.1.9.6.1.101.29.4.1.4',
  rsConfirmMessagTab => '1.3.6.1.4.1.9.6.1.101.29.5',
  eventMessageTable => '1.3.6.1.4.1.9.6.1.101.29.6',
  eventMessageEntry => '1.3.6.1.4.1.9.6.1.101.29.6.1',
  eventNum => '1.3.6.1.4.1.9.6.1.101.29.6.1.1',
  eventDesc => '1.3.6.1.4.1.9.6.1.101.29.6.1.2',
  reaTunning => '1.3.6.1.4.1.9.6.1.101.29.7',
  reaIpForwardEnable => '1.3.6.1.4.1.9.6.1.101.29.7.4',
  reaIpForwardEnableDefinition => 'CISCOSB-Tuning::reaIpForwardEnable',
  reaIpxForwardEnable => '1.3.6.1.4.1.9.6.1.101.29.7.5',
  reaIpxForwardEnableDefinition => 'CISCOSB-Tuning::reaIpxForwardEnable',
  rsMaxEntriesTuning => '1.3.6.1.4.1.9.6.1.101.29.8',
  rsMaxBridgeForwardingEntriesTuning => '1.3.6.1.4.1.9.6.1.101.29.8.1',
  rsMaxBrgFrwEntries => '1.3.6.1.4.1.9.6.1.101.29.8.1.1',
  rsMaxBrgFrwEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.1.2',
  rsMaxIpForwardingEntriesTuning => '1.3.6.1.4.1.9.6.1.101.29.8.2',
  rsMaxIpFrwEntries => '1.3.6.1.4.1.9.6.1.101.29.8.2.1',
  rsMaxIpFrwEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.2.2',
  rsMaxArpEntriesTuning => '1.3.6.1.4.1.9.6.1.101.29.8.3',
  rsMaxArpEntries => '1.3.6.1.4.1.9.6.1.101.29.8.3.1',
  rsMaxArpEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.3.2',
  rsMaxIpxForwardingEntriesTuning => '1.3.6.1.4.1.9.6.1.101.29.8.4',
  rsMaxIpxFrwEntries => '1.3.6.1.4.1.9.6.1.101.29.8.4.1',
  rsMaxIpxFrwEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.4.2',
  rsMaxIpxSapEntriesTuning => '1.3.6.1.4.1.9.6.1.101.29.8.5',
  rsMaxIpxSapEntries => '1.3.6.1.4.1.9.6.1.101.29.8.5.1',
  rsMaxIpxSapEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.5.2',
  rsMaxDspClntEntriesTuning => '1.3.6.1.4.1.9.6.1.101.29.8.6',
  rsMaxDspClntEntries => '1.3.6.1.4.1.9.6.1.101.29.8.6.1',
  rsMaxDspClntEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.6.2',
  rsMaxIpFftEntriesTuning => '1.3.6.1.4.1.9.6.1.101.29.8.9',
  rsMaxIpSFftEntries => '1.3.6.1.4.1.9.6.1.101.29.8.9.1',
  rsMaxIpSFftEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.9.2',
  rsMaxIpNFftEntries => '1.3.6.1.4.1.9.6.1.101.29.8.9.3',
  rsMaxIpNFftEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.9.4',
  rsMaxIpSFftSysEntries => '1.3.6.1.4.1.9.6.1.101.29.8.9.5',
  rsMaxIpSFftSysEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.9.6',
  rsMaxIpNFftSysEntries => '1.3.6.1.4.1.9.6.1.101.29.8.9.7',
  rsMaxIpNFftSysEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.9.8',
  rsMaxIpNextHopEntries => '1.3.6.1.4.1.9.6.1.101.29.8.9.9',
  rsMaxIpNextHopEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.9.10',
  rsMaxIpxFftEntriesTuning => '1.3.6.1.4.1.9.6.1.101.29.8.10',
  rsMaxIpxSFftEntries => '1.3.6.1.4.1.9.6.1.101.29.8.10.1',
  rsMaxIpxSFftEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.10.2',
  rsMaxIpxNFftEntries => '1.3.6.1.4.1.9.6.1.101.29.8.10.3',
  rsMaxIpxNFftEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.10.4',
  rsMaxIpxSFftSysEntries => '1.3.6.1.4.1.9.6.1.101.29.8.10.5',
  rsMaxIpxSFftSysEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.10.6',
  rsMaxIpxNFftSysEntries => '1.3.6.1.4.1.9.6.1.101.29.8.10.7',
  rsMaxIpxNFftSysEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.10.8',
  rsMaxDhcpTuning => '1.3.6.1.4.1.9.6.1.101.29.8.11',
  rsMaxDhcpConns => '1.3.6.1.4.1.9.6.1.101.29.8.11.1',
  rsMaxDhcpConnsAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.11.2',
  rsMaxIpmTuning => '1.3.6.1.4.1.9.6.1.101.29.8.12',
  rsMaxIpmFftEntriesTuning => '1.3.6.1.4.1.9.6.1.101.29.8.12.1',
  rsMaxIpmFftEntries => '1.3.6.1.4.1.9.6.1.101.29.8.12.1.1',
  rsMaxIpmFftEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.12.1.2',
  rsIpmFftAging => '1.3.6.1.4.1.9.6.1.101.29.8.12.1.3',
  rsMaxIgmpTuning => '1.3.6.1.4.1.9.6.1.101.29.8.12.2',
  rsMaxIgmpInterfaceEntries => '1.3.6.1.4.1.9.6.1.101.29.8.12.2.1',
  rsMaxIgmpInterfaceEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.12.2.2',
  rsMaxIgmpCacheEntries => '1.3.6.1.4.1.9.6.1.101.29.8.12.2.3',
  rsMaxIgmpCacheEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.12.2.4',
  rsMaxPimTuning => '1.3.6.1.4.1.9.6.1.101.29.8.12.3',
  rsMaxPimNeighborEntries => '1.3.6.1.4.1.9.6.1.101.29.8.12.3.1',
  rsMaxPimNeighborEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.12.3.2',
  rsMaxPimRouteEntries => '1.3.6.1.4.1.9.6.1.101.29.8.12.3.3',
  rsMaxPimRouteEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.12.3.4',
  rsMaxPimRouteNextHopEntries => '1.3.6.1.4.1.9.6.1.101.29.8.12.3.5',
  rsMaxPimRouteNextHopEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.12.3.6',
  rsMaxPimInterfaceEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.12.3.7',
  rsMaxPimInterfaceEntries => '1.3.6.1.4.1.9.6.1.101.29.8.12.3.8',
  rsMaxDvmrpTuning => '1.3.6.1.4.1.9.6.1.101.29.8.12.4',
  rsMaxDvmrpNeighborEntries => '1.3.6.1.4.1.9.6.1.101.29.8.12.4.1',
  rsMaxDvmrpNeighborEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.12.4.2',
  rsMaxDvmrpRouteEntries => '1.3.6.1.4.1.9.6.1.101.29.8.12.4.3',
  rsMaxDvmrpRouteEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.12.4.4',
  rsMaxDvmrpMRouteEntries => '1.3.6.1.4.1.9.6.1.101.29.8.12.4.5',
  rsMaxDvmrpMRouteEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.12.4.6',
  rsMaxDvmrpInterfaceEntries => '1.3.6.1.4.1.9.6.1.101.29.8.12.4.7',
  rsMaxDvmrpInterfaceEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.12.4.8',
  rsMaxPigmpTuning => '1.3.6.1.4.1.9.6.1.101.29.8.12.5',
  rsMaxPigmpRouteEntries => '1.3.6.1.4.1.9.6.1.101.29.8.12.5.1',
  rsMaxPigmpRouteEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.12.5.2',
  rsMaxPimSmTuning => '1.3.6.1.4.1.9.6.1.101.29.8.12.6',
  rsMaxPimSmNeighborEntries => '1.3.6.1.4.1.9.6.1.101.29.8.12.6.1',
  rsMaxPimSmNeighborEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.12.6.2',
  rsMaxPimSmRouteEntries => '1.3.6.1.4.1.9.6.1.101.29.8.12.6.3',
  rsMaxPimSmRouteEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.12.6.4',
  rsMaxPimSmInterfaceEntries => '1.3.6.1.4.1.9.6.1.101.29.8.12.6.5',
  rsMaxPimSmInterfaceEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.12.6.6',
  rsMaxPimSmRPSetEntries => '1.3.6.1.4.1.9.6.1.101.29.8.12.6.7',
  rsMaxPimSmRPSetEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.12.6.8',
  rsMaxPimSmCRPEntries => '1.3.6.1.4.1.9.6.1.101.29.8.12.6.9',
  rsMaxPimSmCRPEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.12.6.10',
  rsMaxNumberRpAddresesInGroupRange => '1.3.6.1.4.1.9.6.1.101.29.8.12.6.11',
  rsMaxNumberRpAddresesInGroupRangeAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.12.6.12',
  rsMaxRmonTuning => '1.3.6.1.4.1.9.6.1.101.29.8.13',
  rsMaxRmonLogEntries => '1.3.6.1.4.1.9.6.1.101.29.8.13.1',
  rsMaxRmonLogEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.13.2',
  rsMaxRmonEtherHistoryEntries => '1.3.6.1.4.1.9.6.1.101.29.8.13.3',
  rsMaxRmonEtherHistoryEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.13.4',
  rsMaxIgmpSnoopTuning => '1.3.6.1.4.1.9.6.1.101.29.8.14',
  rsMaxIgmpSnoopGroupEntries => '1.3.6.1.4.1.9.6.1.101.29.8.14.1',
  rsMaxIgmpSnoopGroupEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.14.2',
  rsMaxVlansTuning => '1.3.6.1.4.1.9.6.1.101.29.8.15',
  rsMaxVlansEntries => '1.3.6.1.4.1.9.6.1.101.29.8.15.1',
  rsMaxVlansEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.15.2',
  rsMaxPolicyTuning => '1.3.6.1.4.1.9.6.1.101.29.8.16',
  rsMaxPolicyMaxRulesEntries => '1.3.6.1.4.1.9.6.1.101.29.8.16.1',
  rsMaxPolicyMaxRulesEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.16.2',
  rsMaxPolicySimpleMibMaxRulesEntries => '1.3.6.1.4.1.9.6.1.101.29.8.16.3',
  rsMaxPolicySimpleMibMaxRulesEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.16.4',
  rsMaxPolicySimpleMibMaxProfilesEntries => '1.3.6.1.4.1.9.6.1.101.29.8.16.5',
  rsMaxPolicySimpleMibMaxProfilesEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.16.6',
  rsMaxGvrpVlansTuning => '1.3.6.1.4.1.9.6.1.101.29.8.17',
  rsMaxGvrpVlans => '1.3.6.1.4.1.9.6.1.101.29.8.17.1',
  rsMaxGvrpVlansAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.17.2',
  rsMaxTraceRouteTuning => '1.3.6.1.4.1.9.6.1.101.29.8.18',
  rsMaxTraceRouteControlEntries => '1.3.6.1.4.1.9.6.1.101.29.8.18.1',
  rsMaxTraceRouteControlEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.18.2',
  rsMaxTraceRouteProbeHistoryEntries => '1.3.6.1.4.1.9.6.1.101.29.8.18.3',
  rsMaxTraceRouteProbeHistoryEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.18.4',
  rsMaxSnmpTuning => '1.3.6.1.4.1.9.6.1.101.29.8.19',
  rsMaxSnmpCommunityEntries => '1.3.6.1.4.1.9.6.1.101.29.8.19.1',
  rsMaxSnmpCommunityEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.19.2',
  rsMaxSocketTuning => '1.3.6.1.4.1.9.6.1.101.29.8.20',
  rsMaxNumberOfSockets => '1.3.6.1.4.1.9.6.1.101.29.8.20.1',
  rsMaxNumberOfSocketsAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.20.2',
  rsMaxSizeOfSocketDataPool => '1.3.6.1.4.1.9.6.1.101.29.8.20.3',
  rsMaxSizeOfSocketDataPoolAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.20.4',
  rsMaxIpRouteTuning => '1.3.6.1.4.1.9.6.1.101.29.8.21',
  rsMaxIpPrefixes => '1.3.6.1.4.1.9.6.1.101.29.8.21.1',
  rsMaxIpPrefixesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.21.2',
  rsMaxIpNextHopSetTuning => '1.3.6.1.4.1.9.6.1.101.29.8.22',
  rsMaxIpNextHopSetEntries => '1.3.6.1.4.1.9.6.1.101.29.8.22.1',
  rsMaxIpNextHopSetEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.22.2',
  rsMaxIpEcmpTuning => '1.3.6.1.4.1.9.6.1.101.29.8.23',
  rsMaxIpEcmpEntrySize => '1.3.6.1.4.1.9.6.1.101.29.8.23.1',
  rsMaxIpEcmpEntrySizeAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.23.2',
  rsMaxdot1xEapRequestTuning => '1.3.6.1.4.1.9.6.1.101.29.8.24',
  rsMaxdot1xEapRequestEntries => '1.3.6.1.4.1.9.6.1.101.29.8.24.1',
  rsMaxdot1xEapRequestEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.24.2',
  rsMaxIpInterfaceTuning => '1.3.6.1.4.1.9.6.1.101.29.8.25',
  rsMaxIpInterfaces => '1.3.6.1.4.1.9.6.1.101.29.8.25.1',
  rsMaxIpInterfacesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.25.2',
  rsMaxIpv6FftEntriesTuning => '1.3.6.1.4.1.9.6.1.101.29.8.26',
  rsMaxIpv6SFftEntries => '1.3.6.1.4.1.9.6.1.101.29.8.26.1',
  rsMaxIpv6SFftEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.26.2',
  rsMaxIpv6SFftSysEntries => '1.3.6.1.4.1.9.6.1.101.29.8.26.3',
  rsMaxIpv6SFftSysEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.26.4',
  rsMaxIpv6Prefixes => '1.3.6.1.4.1.9.6.1.101.29.8.26.5',
  rsMaxIpv6PrefixesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.26.6',
  rsMaxIpv6NextHopEntries => '1.3.6.1.4.1.9.6.1.101.29.8.26.7',
  rsMaxIpv6NextHopEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.26.8',
  rsMaxIpv6NextHopSetEntries => '1.3.6.1.4.1.9.6.1.101.29.8.26.9',
  rsMaxIpv6NextHopSetEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.26.10',
  rsMaxIpv6GlobalAddresses => '1.3.6.1.4.1.9.6.1.101.29.8.26.11',
  rsMaxIpv6GlobalAddressesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.26.12',
  rsMaxArpTunnelStartEntries => '1.3.6.1.4.1.9.6.1.101.29.8.26.13',
  rsMaxArpTunnelStartEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.26.14',
  rsMaxIpv6InterfaceTuning => '1.3.6.1.4.1.9.6.1.101.29.8.27',
  rsMaxIpv6Interfaces => '1.3.6.1.4.1.9.6.1.101.29.8.27.1',
  rsMaxIpv6InterfacesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.27.2',
  rsMaxIpv6AddrPerInterfaces => '1.3.6.1.4.1.9.6.1.101.29.8.27.3',
  rsMaxIpv6AddrPerInterfacesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.27.4',
  rsMaxIpRoutesTuning => '1.3.6.1.4.1.9.6.1.101.29.8.28',
  rsMaxIpv4Routes => '1.3.6.1.4.1.9.6.1.101.29.8.28.1',
  rsMaxIpv4RoutesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.28.2',
  rsMaxIpv6Routes => '1.3.6.1.4.1.9.6.1.101.29.8.28.3',
  rsMaxIpv6RoutesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.28.4',
  rsMaxIpmv4Routes => '1.3.6.1.4.1.9.6.1.101.29.8.28.5',
  rsMaxIpmv4RoutesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.28.6',
  rsMaxIpmv6Routes => '1.3.6.1.4.1.9.6.1.101.29.8.28.7',
  rsMaxIpmv6RoutesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.8.28.8',
  rsTcpTuning => '1.3.6.1.4.1.9.6.1.101.29.11',
  rsTcpMemoryPoolSizeAfterReset => '1.3.6.1.4.1.9.6.1.101.29.11.1',
  rsTcpMemoryPoolSize => '1.3.6.1.4.1.9.6.1.101.29.11.2',
  rsRadiusTuning => '1.3.6.1.4.1.9.6.1.101.29.12',
  rsRadiusMemoryPoolSizeAfterReset => '1.3.6.1.4.1.9.6.1.101.29.12.1',
  rsRadiusMemoryPoolSize => '1.3.6.1.4.1.9.6.1.101.29.12.2',
  rlSyslogTuning => '1.3.6.1.4.1.9.6.1.101.29.13',
  rlSyslogFilePercentToDeleteWhenCompacting => '1.3.6.1.4.1.9.6.1.101.29.13.3',
  rlSyslogFilePercentToDeleteWhenCompactingAfterReset => '1.3.6.1.4.1.9.6.1.101.29.13.4',
  rlSyslogCacheSize => '1.3.6.1.4.1.9.6.1.101.29.13.5',
  rlSyslogCacheSizeAfterReset => '1.3.6.1.4.1.9.6.1.101.29.13.6',
  rlMngInfTuning => '1.3.6.1.4.1.9.6.1.101.29.14',
  rlMaxNumberOfAccessRules => '1.3.6.1.4.1.9.6.1.101.29.14.1',
  rlMaxNumberOfAccessRulesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.14.2',
  rsDiagnosticTextSource => '1.3.6.1.4.1.9.6.1.101.29.16',
  rsDiagnosticTextSourceDefinition => 'CISCOSB-Tuning::rsDiagnosticTextSource',
  rsMultiSession => '1.3.6.1.4.1.9.6.1.101.29.17',
  rsMultiSessionMaxSessionsAfterReset => '1.3.6.1.4.1.9.6.1.101.29.17.1',
  rsMultiSessionMaxSessions => '1.3.6.1.4.1.9.6.1.101.29.17.2',
  rlDnsClTuning => '1.3.6.1.4.1.9.6.1.101.29.18',
  rlMaxDnsClCacheRREntries => '1.3.6.1.4.1.9.6.1.101.29.18.1',
  rlMaxDnsClCacheRREntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.18.2',
  rlMaxDnsClNCacheErrEntries => '1.3.6.1.4.1.9.6.1.101.29.18.3',
  rlMaxDnsClNCacheErrEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.18.4',
  rlMaxDnsClNamesEntries => '1.3.6.1.4.1.9.6.1.101.29.18.5',
  rlMaxDnsClNamesEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.18.6',
  rlTuningParamsTable => '1.3.6.1.4.1.9.6.1.101.29.19',
  rlTuningParamsEntry => '1.3.6.1.4.1.9.6.1.101.29.19.1',
  rlTuningParamsName => '1.3.6.1.4.1.9.6.1.101.29.19.1.1',
  rlTuningParamsCurrentValue => '1.3.6.1.4.1.9.6.1.101.29.19.1.2',
  rlTuningParamsAfterResetValue => '1.3.6.1.4.1.9.6.1.101.29.19.1.3',
  rlTuningParamsDefaultValue => '1.3.6.1.4.1.9.6.1.101.29.19.1.4',
  rlTuningParamsMinimalValue => '1.3.6.1.4.1.9.6.1.101.29.19.1.5',
  rlTuningParamsMaximalValue => '1.3.6.1.4.1.9.6.1.101.29.19.1.6',
  rlHostParamTable => '1.3.6.1.4.1.9.6.1.101.29.20',
  rlHostParamEntry => '1.3.6.1.4.1.9.6.1.101.29.20.1',
  rlHostParamName => '1.3.6.1.4.1.9.6.1.101.29.20.1.1',
  rlHostParamValue => '1.3.6.1.4.1.9.6.1.101.29.20.1.2',
  rlHostParamType => '1.3.6.1.4.1.9.6.1.101.29.20.1.3',
  rlHostParamTypeDefinition => 'CISCOSB-Tuning::rlHostParamType',
  rlHostParamUINT => '1.3.6.1.4.1.9.6.1.101.29.20.1.4',
  rlHostParamOctetString => '1.3.6.1.4.1.9.6.1.101.29.20.1.5',
  rlHostParamIpAddress => '1.3.6.1.4.1.9.6.1.101.29.20.1.6',
  rlHostParamObjectId => '1.3.6.1.4.1.9.6.1.101.29.20.1.7',
  rlOspfTuning => '1.3.6.1.4.1.9.6.1.101.29.21',
  rlMaxOspfInterfaces => '1.3.6.1.4.1.9.6.1.101.29.21.1',
  rlMaxOspfInterfacesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.21.2',
  rlMaxOspfAreas => '1.3.6.1.4.1.9.6.1.101.29.21.3',
  rlMaxOspfAreasAfterReset => '1.3.6.1.4.1.9.6.1.101.29.21.4',
  rlMaxOspfNeighbors => '1.3.6.1.4.1.9.6.1.101.29.21.5',
  rlMaxOspfNeighborsAfterReset => '1.3.6.1.4.1.9.6.1.101.29.21.6',
  rlMaxOspfAbrPerArea => '1.3.6.1.4.1.9.6.1.101.29.21.7',
  rlMaxOspfAbrPerAreaAfterReset => '1.3.6.1.4.1.9.6.1.101.29.21.8',
  rlMaxOspfNetsInAs => '1.3.6.1.4.1.9.6.1.101.29.21.9',
  rlMaxOspfNetsInAsAfterReset => '1.3.6.1.4.1.9.6.1.101.29.21.10',
  rlVlanTuning => '1.3.6.1.4.1.9.6.1.101.29.22',
  rlVlanDefaultVID => '1.3.6.1.4.1.9.6.1.101.29.22.1',
  rlVlanDefaultVIDAfterReset => '1.3.6.1.4.1.9.6.1.101.29.22.2',
  rlVlanUsageForbiddenListTable => '1.3.6.1.4.1.9.6.1.101.29.22.3',
  rlVlanUsageForbiddenListEntry => '1.3.6.1.4.1.9.6.1.101.29.22.3.1',
  rlVlanUsageForbiddenListIndex => '1.3.6.1.4.1.9.6.1.101.29.22.3.1.1',
  rlVlanUsageForbiddenList1to1024 => '1.3.6.1.4.1.9.6.1.101.29.22.3.1.2',
  rlVlanUsageForbiddenList1025to2048 => '1.3.6.1.4.1.9.6.1.101.29.22.3.1.3',
  rlVlanUsageForbiddenList2049to3072 => '1.3.6.1.4.1.9.6.1.101.29.22.3.1.4',
  rlVlanUsageForbiddenList3073to4094 => '1.3.6.1.4.1.9.6.1.101.29.22.3.1.5',
  rlVlanUsageForbiddenListAfterResetTable => '1.3.6.1.4.1.9.6.1.101.29.22.4',
  rlVlanUsageForbiddenListAfterResetEntry => '1.3.6.1.4.1.9.6.1.101.29.22.4.1',
  rlVlanUsageForbiddenListAfterResetIndex => '1.3.6.1.4.1.9.6.1.101.29.22.4.1.1',
  rlVlanUsageForbiddenListAfterReset1to1024 => '1.3.6.1.4.1.9.6.1.101.29.22.4.1.2',
  rlVlanUsageForbiddenListAfterReset1025to2048 => '1.3.6.1.4.1.9.6.1.101.29.22.4.1.3',
  rlVlanUsageForbiddenListAfterReset2049to3072 => '1.3.6.1.4.1.9.6.1.101.29.22.4.1.4',
  rlVlanUsageForbiddenListAfterReset3073to4094 => '1.3.6.1.4.1.9.6.1.101.29.22.4.1.5',
  rlDependendFeaturesEnableTuning => '1.3.6.1.4.1.9.6.1.101.29.23',
  rlDependendFeaturesEnabled => '1.3.6.1.4.1.9.6.1.101.29.23.1',
  rlDependendFeaturesEnabledAfterReset => '1.3.6.1.4.1.9.6.1.101.29.23.2',
  rlIpDhcpSnoopingTuning => '1.3.6.1.4.1.9.6.1.101.29.24',
  rlMaxIpDhcpSnoopingEntries => '1.3.6.1.4.1.9.6.1.101.29.24.1',
  rlMaxIpDhcpSnoopingEntriesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.24.2',
  rlIscsiSnoopTuning => '1.3.6.1.4.1.9.6.1.101.29.25',
  rlIscsiSnoopMaxNumOfConnections => '1.3.6.1.4.1.9.6.1.101.29.25.1',
  rlIscsiSnoopMaxNumOfConnectionsAfterReset => '1.3.6.1.4.1.9.6.1.101.29.25.2',
  rlDhcpServerTuning => '1.3.6.1.4.1.9.6.1.101.29.26',
  rlDhcpSrvMaxAllocatedAddresses => '1.3.6.1.4.1.9.6.1.101.29.26.1',
  rlDhcpSrvMaxAllocatedAddressesAfterReset => '1.3.6.1.4.1.9.6.1.101.29.26.2',
  rlBrgMacHashChainLen => '1.3.6.1.4.1.9.6.1.101.29.27',
  rlBrgMacHashChainLenAfterReset => '1.3.6.1.4.1.9.6.1.101.29.28',
  rlBrgMacHashFunction => '1.3.6.1.4.1.9.6.1.101.29.29',
  rlBrgMacHashFunctionDefinition => 'CISCOSB-Tuning::rlBrgMacHashFunction',
  rlBrgMacHashFunctionAfterReset => '1.3.6.1.4.1.9.6.1.101.29.30',
  rlBrgMacHashFunctionAfterResetDefinition => 'CISCOSB-Tuning::rlBrgMacHashFunctionAfterReset',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'CISCOSB-TUNING'} = {
  rlBrgMacHashFunctionAfterReset => {
    '0' => 'macSqnVlanSqn',
    '1' => 'macRndVlanSqn',
    '2' => 'macSqnVlanRnd',
    '3' => 'macRndVlanRnd',
  },
  rlBrgMacHashFunction => {
    '0' => 'macSqnVlanSqn',
    '1' => 'macRndVlanSqn',
    '2' => 'macSqnVlanRnd',
    '3' => 'macRndVlanRnd',
  },
  reaIpxForwardEnable => {
    '1' => 'enable',
    '2' => 'disable',
  },
  rlHostParamType => {
    '1' => 'int',
    '2' => 'uint',
    '3' => 'octetString',
    '4' => 'ipV4address',
    '5' => 'ipV6address',
    '6' => 'ipV6zAddress',
    '7' => 'inetAddress',
    '8' => 'macAddress',
    '9' => 'objectIdentifier',
    '10' => 'displayString',
    '11' => 'truthValue',
    '12' => 'portlist',
  },
  rsDiagnosticTextSource => {
    '1' => 'fromCLI',
    '2' => 'fromDiagnosticsTable',
  },
  reaIpForwardEnable => {
    '1' => 'enable',
    '2' => 'disable',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOSTACKMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCO-STACK-MIB'} = {
  url => '',
  name => 'CISCO-STACK-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'CISCO-STACK-MIB'} =
    '1.3.6.1.4.1.9.5.1';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCO-STACK-MIB'} = {
  ciscoStackNotificationsPrefix => '1.3.6.1.4.1.9.5.0',
  ciscoStackMIB => '1.3.6.1.4.1.9.5.1',
  systemGrp => '1.3.6.1.4.1.9.5.1.1',
  sysMgmtType => '1.3.6.1.4.1.9.5.1.1.1',
  sysMgmtTypeDefinition => 'CISCO-STACK-MIB::sysMgmtType',
  sysIpAddr => '1.3.6.1.4.1.9.5.1.1.2',
  sysNetMask => '1.3.6.1.4.1.9.5.1.1.3',
  sysBroadcast => '1.3.6.1.4.1.9.5.1.1.4',
  sysTrapReceiverTable => '1.3.6.1.4.1.9.5.1.1.5',
  sysTrapReceiverEntry => '1.3.6.1.4.1.9.5.1.1.5.1',
  sysTrapReceiverType => '1.3.6.1.4.1.9.5.1.1.5.1.1',
  sysTrapReceiverTypeDefinition => 'CISCO-STACK-MIB::sysTrapReceiverType',
  sysTrapReceiverAddr => '1.3.6.1.4.1.9.5.1.1.5.1.2',
  sysTrapReceiverComm => '1.3.6.1.4.1.9.5.1.1.5.1.3',
  sysCommunityTable => '1.3.6.1.4.1.9.5.1.1.6',
  sysCommunityEntry => '1.3.6.1.4.1.9.5.1.1.6.1',
  sysCommunityAccess => '1.3.6.1.4.1.9.5.1.1.6.1.1',
  sysCommunityAccessDefinition => 'CISCO-STACK-MIB::sysCommunityAccess',
  sysCommunityString => '1.3.6.1.4.1.9.5.1.1.6.1.2',
  sysAttachType => '1.3.6.1.4.1.9.5.1.1.7',
  sysAttachTypeDefinition => 'CISCO-STACK-MIB::sysAttachType',
  sysTraffic => '1.3.6.1.4.1.9.5.1.1.8',
  sysReset => '1.3.6.1.4.1.9.5.1.1.9',
  sysResetDefinition => 'CISCO-STACK-MIB::sysReset',
  sysBaudRate => '1.3.6.1.4.1.9.5.1.1.10',
  sysBaudRateDefinition => 'CISCO-STACK-MIB::sysBaudRate',
  sysInsertMode => '1.3.6.1.4.1.9.5.1.1.11',
  sysInsertModeDefinition => 'CISCO-STACK-MIB::sysInsertMode',
  sysClearMacTime => '1.3.6.1.4.1.9.5.1.1.12',
  sysClearPortTime => '1.3.6.1.4.1.9.5.1.1.13',
  sysFddiRingTable => '1.3.6.1.4.1.9.5.1.1.14',
  sysFddiRingEntry => '1.3.6.1.4.1.9.5.1.1.14.1',
  sysFddiRingSMTIndex => '1.3.6.1.4.1.9.5.1.1.14.1.1',
  sysFddiRingAddress => '1.3.6.1.4.1.9.5.1.1.14.1.2',
  sysFddiRingNext => '1.3.6.1.4.1.9.5.1.1.14.1.3',
  sysEnableModem => '1.3.6.1.4.1.9.5.1.1.15',
  sysEnableModemDefinition => 'CISCO-STACK-MIB::sysEnableModem',
  sysEnableRedirects => '1.3.6.1.4.1.9.5.1.1.16',
  sysEnableRedirectsDefinition => 'CISCO-STACK-MIB::sysEnableRedirects',
  sysEnableRmon => '1.3.6.1.4.1.9.5.1.1.17',
  sysEnableRmonDefinition => 'CISCO-STACK-MIB::sysEnableRmon',
  sysArpAgingTime => '1.3.6.1.4.1.9.5.1.1.18',
  sysTrafficPeak => '1.3.6.1.4.1.9.5.1.1.19',
  sysTrafficPeakTime => '1.3.6.1.4.1.9.5.1.1.20',
  sysCommunityRwa => '1.3.6.1.4.1.9.5.1.1.21',
  sysCommunityRw => '1.3.6.1.4.1.9.5.1.1.22',
  sysCommunityRo => '1.3.6.1.4.1.9.5.1.1.23',
  sysEnableChassisTraps => '1.3.6.1.4.1.9.5.1.1.24',
  sysEnableChassisTrapsDefinition => 'CISCO-STACK-MIB::sysEnableChassisTraps',
  sysEnableModuleTraps => '1.3.6.1.4.1.9.5.1.1.25',
  sysEnableModuleTrapsDefinition => 'CISCO-STACK-MIB::sysEnableModuleTraps',
  sysEnableBridgeTraps => '1.3.6.1.4.1.9.5.1.1.26',
  sysEnableBridgeTrapsDefinition => 'CISCO-STACK-MIB::sysEnableBridgeTraps',
  sysIpVlan => '1.3.6.1.4.1.9.5.1.1.27',
  sysConfigChangeTime => '1.3.6.1.4.1.9.5.1.1.28',
  sysEnableRepeaterTraps => '1.3.6.1.4.1.9.5.1.1.29',
  sysEnableRepeaterTrapsDefinition => 'CISCO-STACK-MIB::sysEnableRepeaterTraps',
  sysBannerMotd => '1.3.6.1.4.1.9.5.1.1.30',
  sysEnableIpPermitTraps => '1.3.6.1.4.1.9.5.1.1.31',
  sysEnableIpPermitTrapsDefinition => 'CISCO-STACK-MIB::sysEnableIpPermitTraps',
  sysTrafficMeterTable => '1.3.6.1.4.1.9.5.1.1.32',
  sysTrafficMeterEntry => '1.3.6.1.4.1.9.5.1.1.32.1',
  sysTrafficMeterType => '1.3.6.1.4.1.9.5.1.1.32.1.1',
  sysTrafficMeterTypeDefinition => 'CISCO-STACK-MIB::sysTrafficMeterType',
  sysTrafficMeter => '1.3.6.1.4.1.9.5.1.1.32.1.2',
  sysTrafficMeterPeak => '1.3.6.1.4.1.9.5.1.1.32.1.3',
  sysTrafficMeterPeakTime => '1.3.6.1.4.1.9.5.1.1.32.1.4',
  sysEnableVmpsTraps => '1.3.6.1.4.1.9.5.1.1.33',
  sysEnableVmpsTrapsDefinition => 'CISCO-STACK-MIB::sysEnableVmpsTraps',
  sysConfigChangeInfo => '1.3.6.1.4.1.9.5.1.1.34',
  sysEnableConfigTraps => '1.3.6.1.4.1.9.5.1.1.35',
  sysEnableConfigTrapsDefinition => 'CISCO-STACK-MIB::sysEnableConfigTraps',
  sysConfigRegister => '1.3.6.1.4.1.9.5.1.1.36',
  sysBootVariable => '1.3.6.1.4.1.9.5.1.1.37',
  sysBootedImage => '1.3.6.1.4.1.9.5.1.1.38',
  sysEnableEntityTrap => '1.3.6.1.4.1.9.5.1.1.39',
  sysEnableEntityTrapDefinition => 'CISCO-STACK-MIB::sysEnableEntityTrap',
  sysEnableStpxTrap => '1.3.6.1.4.1.9.5.1.1.40',
  sysEnableStpxTrapDefinition => 'CISCO-STACK-MIB::sysEnableStpxTrap',
  sysExtendedRmonVlanModeEnable => '1.3.6.1.4.1.9.5.1.1.41',
  sysExtendedRmonVlanModeEnableDefinition => 'CISCO-STACK-MIB::sysExtendedRmonVlanModeEnable',
  sysExtendedRmonNetflowPassword => '1.3.6.1.4.1.9.5.1.1.42',
  sysExtendedRmonNetflowEnable => '1.3.6.1.4.1.9.5.1.1.43',
  sysExtendedRmonNetflowEnableDefinition => 'CISCO-STACK-MIB::sysExtendedRmonNetflowEnable',
  sysExtendedRmonVlanAgentEnable => '1.3.6.1.4.1.9.5.1.1.44',
  sysExtendedRmonVlanAgentEnableDefinition => 'CISCO-STACK-MIB::sysExtendedRmonVlanAgentEnable',
  sysExtendedRmonEnable => '1.3.6.1.4.1.9.5.1.1.45',
  sysExtendedRmonEnableDefinition => 'CISCO-STACK-MIB::sysExtendedRmonEnable',
  sysConsolePrimaryLoginAuthentication => '1.3.6.1.4.1.9.5.1.1.46',
  sysConsolePrimaryLoginAuthenticationDefinition => 'CISCO-STACK-MIB::sysConsolePrimaryLoginAuthentication',
  sysConsolePrimaryEnableAuthentication => '1.3.6.1.4.1.9.5.1.1.47',
  sysConsolePrimaryEnableAuthenticationDefinition => 'CISCO-STACK-MIB::sysConsolePrimaryEnableAuthentication',
  sysTelnetPrimaryLoginAuthentication => '1.3.6.1.4.1.9.5.1.1.48',
  sysTelnetPrimaryLoginAuthenticationDefinition => 'CISCO-STACK-MIB::sysTelnetPrimaryLoginAuthentication',
  sysTelnetPrimaryEnableAuthentication => '1.3.6.1.4.1.9.5.1.1.49',
  sysTelnetPrimaryEnableAuthenticationDefinition => 'CISCO-STACK-MIB::sysTelnetPrimaryEnableAuthentication',
  sysStartupConfigSource => '1.3.6.1.4.1.9.5.1.1.50',
  sysStartupConfigSourceDefinition => 'CISCO-STACK-MIB::sysStartupConfigSource',
  sysStartupConfigSourceFile => '1.3.6.1.4.1.9.5.1.1.51',
  sysConfigSupervisorModuleNo => '1.3.6.1.4.1.9.5.1.1.52',
  sysStandbyPortEnable => '1.3.6.1.4.1.9.5.1.1.53',
  sysStandbyPortEnableDefinition => 'CISCO-STACK-MIB::sysStandbyPortEnable',
  sysPortFastBpduGuard => '1.3.6.1.4.1.9.5.1.1.54',
  sysPortFastBpduGuardDefinition => 'CISCO-STACK-MIB::sysPortFastBpduGuard',
  sysErrDisableTimeoutEnable => '1.3.6.1.4.1.9.5.1.1.55',
  sysErrDisableTimeoutInterval => '1.3.6.1.4.1.9.5.1.1.56',
  sysTrafficMonitorHighWaterMark => '1.3.6.1.4.1.9.5.1.1.57',
  sysHighAvailabilityEnable => '1.3.6.1.4.1.9.5.1.1.58',
  sysHighAvailabilityVersioningEnable => '1.3.6.1.4.1.9.5.1.1.59',
  sysHighAvailabilityOperStatus => '1.3.6.1.4.1.9.5.1.1.60',
  sysHighAvailabilityOperStatusDefinition => 'CISCO-STACK-MIB::sysHighAvailabilityOperStatus',
  sysHighAvailabilityNotRunningReason => '1.3.6.1.4.1.9.5.1.1.61',
  sysExtendedRmonNetflowModuleMask => '1.3.6.1.4.1.9.5.1.1.62',
  sshPublicKeySize => '1.3.6.1.4.1.9.5.1.1.63',
  sysMaxRmonMemory => '1.3.6.1.4.1.9.5.1.1.64',
  sysMacReductionAdminEnable => '1.3.6.1.4.1.9.5.1.1.65',
  sysMacReductionOperEnable => '1.3.6.1.4.1.9.5.1.1.66',
  sysStatus => '1.3.6.1.4.1.9.5.1.1.67',
  sysStatusDefinition => 'CISCO-STACK-MIB::sysStatus',
  chassisGrp => '1.3.6.1.4.1.9.5.1.2',
  chassisSysType => '1.3.6.1.4.1.9.5.1.2.1',
  chassisSysTypeDefinition => 'CISCO-STACK-MIB::chassisSysType',
  chassisBkplType => '1.3.6.1.4.1.9.5.1.2.2',
  chassisBkplTypeDefinition => 'CISCO-STACK-MIB::chassisBkplType',
  chassisPs1Type => '1.3.6.1.4.1.9.5.1.2.3',
  chassisPs1TypeDefinition => 'CISCO-STACK-MIB::chassisPs1Type',
  chassisPs1Status => '1.3.6.1.4.1.9.5.1.2.4',
  chassisPs1StatusDefinition => 'CISCO-STACK-MIB::chassisPs1Status',
  chassisPs1TestResult => '1.3.6.1.4.1.9.5.1.2.5',
  chassisPs2Type => '1.3.6.1.4.1.9.5.1.2.6',
  chassisPs2TypeDefinition => 'CISCO-STACK-MIB::chassisPs2Type',
  chassisPs2Status => '1.3.6.1.4.1.9.5.1.2.7',
  chassisPs2StatusDefinition => 'CISCO-STACK-MIB::chassisPs2Status',
  chassisPs2TestResult => '1.3.6.1.4.1.9.5.1.2.8',
  chassisFanStatus => '1.3.6.1.4.1.9.5.1.2.9',
  chassisFanStatusDefinition => 'CISCO-STACK-MIB::chassisFanStatus',
  chassisFanTestResult => '1.3.6.1.4.1.9.5.1.2.10',
  chassisMinorAlarm => '1.3.6.1.4.1.9.5.1.2.11',
  chassisMinorAlarmDefinition => 'CISCO-STACK-MIB::chassisMinorAlarm',
  chassisMajorAlarm => '1.3.6.1.4.1.9.5.1.2.12',
  chassisMajorAlarmDefinition => 'CISCO-STACK-MIB::chassisMajorAlarm',
  chassisTempAlarm => '1.3.6.1.4.1.9.5.1.2.13',
  chassisTempAlarmDefinition => 'CISCO-STACK-MIB::chassisTempAlarm',
  chassisNumSlots => '1.3.6.1.4.1.9.5.1.2.14',
  chassisSlotConfig => '1.3.6.1.4.1.9.5.1.2.15',
  chassisModel => '1.3.6.1.4.1.9.5.1.2.16',
  chassisSerialNumber => '1.3.6.1.4.1.9.5.1.2.17',
  chassisComponentTable => '1.3.6.1.4.1.9.5.1.2.18',
  chassisComponentEntry => '1.3.6.1.4.1.9.5.1.2.18.1',
  chassisComponentIndex => '1.3.6.1.4.1.9.5.1.2.18.1.1',
  chassisComponentType => '1.3.6.1.4.1.9.5.1.2.18.1.2',
  chassisComponentTypeDefinition => 'CISCO-STACK-MIB::chassisComponentType',
  chassisComponentSerialNumber => '1.3.6.1.4.1.9.5.1.2.18.1.3',
  chassisComponentHwVersion => '1.3.6.1.4.1.9.5.1.2.18.1.4',
  chassisComponentModel => '1.3.6.1.4.1.9.5.1.2.18.1.5',
  chassisSerialNumberString => '1.3.6.1.4.1.9.5.1.2.19',
  chassisPs3Type => '1.3.6.1.4.1.9.5.1.2.20',
  chassisPs3TypeDefinition => 'CISCO-STACK-MIB::chassisPs3Type',
  chassisPs3Status => '1.3.6.1.4.1.9.5.1.2.21',
  chassisPs3StatusDefinition => 'CISCO-STACK-MIB::chassisPs3Status',
  chassisPs3TestResult => '1.3.6.1.4.1.9.5.1.2.22',
  chassisPEMInstalled => '1.3.6.1.4.1.9.5.1.2.23',
  moduleGrp => '1.3.6.1.4.1.9.5.1.3',
  moduleTable => '1.3.6.1.4.1.9.5.1.3.1',
  moduleEntry => '1.3.6.1.4.1.9.5.1.3.1.1',
  moduleIndex => '1.3.6.1.4.1.9.5.1.3.1.1.1',
  moduleType => '1.3.6.1.4.1.9.5.1.3.1.1.2',
  moduleTypeDefinition => 'CISCO-STACK-MIB::moduleType',
  moduleSerialNumber => '1.3.6.1.4.1.9.5.1.3.1.1.3',
  moduleHwHiVersion => '1.3.6.1.4.1.9.5.1.3.1.1.4',
  moduleHwLoVersion => '1.3.6.1.4.1.9.5.1.3.1.1.5',
  moduleFwHiVersion => '1.3.6.1.4.1.9.5.1.3.1.1.6',
  moduleFwLoVersion => '1.3.6.1.4.1.9.5.1.3.1.1.7',
  moduleSwHiVersion => '1.3.6.1.4.1.9.5.1.3.1.1.8',
  moduleSwLoVersion => '1.3.6.1.4.1.9.5.1.3.1.1.9',
  moduleStatus => '1.3.6.1.4.1.9.5.1.3.1.1.10',
  moduleStatusDefinition => 'CISCO-STACK-MIB::moduleStatus',
  moduleTestResult => '1.3.6.1.4.1.9.5.1.3.1.1.11',
  moduleAction => '1.3.6.1.4.1.9.5.1.3.1.1.12',
  moduleActionDefinition => 'CISCO-STACK-MIB::moduleAction',
  moduleName => '1.3.6.1.4.1.9.5.1.3.1.1.13',
  moduleNumPorts => '1.3.6.1.4.1.9.5.1.3.1.1.14',
  modulePortStatus => '1.3.6.1.4.1.9.5.1.3.1.1.15',
  moduleSubType => '1.3.6.1.4.1.9.5.1.3.1.1.16',
  moduleSubTypeDefinition => 'CISCO-STACK-MIB::moduleSubType',
  moduleModel => '1.3.6.1.4.1.9.5.1.3.1.1.17',
  moduleHwVersion => '1.3.6.1.4.1.9.5.1.3.1.1.18',
  moduleFwVersion => '1.3.6.1.4.1.9.5.1.3.1.1.19',
  moduleSwVersion => '1.3.6.1.4.1.9.5.1.3.1.1.20',
  moduleStandbyStatus => '1.3.6.1.4.1.9.5.1.3.1.1.21',
  moduleStandbyStatusDefinition => 'CISCO-STACK-MIB::moduleStandbyStatus',
  moduleIPAddress => '1.3.6.1.4.1.9.5.1.3.1.1.22',
  moduleIPAddressVlan => '1.3.6.1.4.1.9.5.1.3.1.1.23',
  moduleSubType2 => '1.3.6.1.4.1.9.5.1.3.1.1.24',
  moduleSubType2Definition => 'CISCO-STACK-MIB::moduleSubType2',
  moduleSlotNum => '1.3.6.1.4.1.9.5.1.3.1.1.25',
  moduleSerialNumberString => '1.3.6.1.4.1.9.5.1.3.1.1.26',
  moduleEntPhysicalIndex => '1.3.6.1.4.1.9.5.1.3.1.1.27',
  moduleAdditionalStatus => '1.3.6.1.4.1.9.5.1.3.1.1.28',
  portGrp => '1.3.6.1.4.1.9.5.1.4',
  portTable => '1.3.6.1.4.1.9.5.1.4.1',
  portEntry => '1.3.6.1.4.1.9.5.1.4.1.1',
  portModuleIndex => '1.3.6.1.4.1.9.5.1.4.1.1.1',
  portIndex => '1.3.6.1.4.1.9.5.1.4.1.1.2',
  portCrossIndex => '1.3.6.1.4.1.9.5.1.4.1.1.3',
  portName => '1.3.6.1.4.1.9.5.1.4.1.1.4',
  portType => '1.3.6.1.4.1.9.5.1.4.1.1.5',
  portTypeDefinition => 'CISCO-STACK-MIB::portType',
  portOperStatus => '1.3.6.1.4.1.9.5.1.4.1.1.6',
  portOperStatusDefinition => 'CISCO-STACK-MIB::portOperStatus',
  portCrossGroupIndex => '1.3.6.1.4.1.9.5.1.4.1.1.7',
  portAdditionalStatus => '1.3.6.1.4.1.9.5.1.4.1.1.8',
  portAdminSpeed => '1.3.6.1.4.1.9.5.1.4.1.1.9',
  portAdminSpeedDefinition => 'CISCO-STACK-MIB::portAdminSpeed',
  portDuplex => '1.3.6.1.4.1.9.5.1.4.1.1.10',
  portDuplexDefinition => 'CISCO-STACK-MIB::portDuplex',
  portIfIndex => '1.3.6.1.4.1.9.5.1.4.1.1.11',
  portSpantreeFastStart => '1.3.6.1.4.1.9.5.1.4.1.1.12',
  portSpantreeFastStartDefinition => 'CISCO-STACK-MIB::portSpantreeFastStart',
  portAdminRxFlowControl => '1.3.6.1.4.1.9.5.1.4.1.1.13',
  portAdminRxFlowControlDefinition => 'CISCO-STACK-MIB::portAdminRxFlowControl',
  portOperRxFlowControl => '1.3.6.1.4.1.9.5.1.4.1.1.14',
  portOperRxFlowControlDefinition => 'CISCO-STACK-MIB::portOperRxFlowControl',
  portAdminTxFlowControl => '1.3.6.1.4.1.9.5.1.4.1.1.15',
  portAdminTxFlowControlDefinition => 'CISCO-STACK-MIB::portAdminTxFlowControl',
  portOperTxFlowControl => '1.3.6.1.4.1.9.5.1.4.1.1.16',
  portOperTxFlowControlDefinition => 'CISCO-STACK-MIB::portOperTxFlowControl',
  portMacControlTransmitFrames => '1.3.6.1.4.1.9.5.1.4.1.1.17',
  portMacControlReceiveFrames => '1.3.6.1.4.1.9.5.1.4.1.1.18',
  portMacControlPauseTransmitFrames => '1.3.6.1.4.1.9.5.1.4.1.1.19',
  portMacControlPauseReceiveFrames => '1.3.6.1.4.1.9.5.1.4.1.1.20',
  portMacControlUnknownProtocolFrames => '1.3.6.1.4.1.9.5.1.4.1.1.21',
  portLinkFaultStatus => '1.3.6.1.4.1.9.5.1.4.1.1.22',
  portLinkFaultStatusDefinition => 'CISCO-STACK-MIB::portLinkFaultStatus',
  portAdditionalOperStatus => '1.3.6.1.4.1.9.5.1.4.1.1.23',
  portInlinePowerDetect => '1.3.6.1.4.1.9.5.1.4.1.1.24',
  portEntPhysicalIndex => '1.3.6.1.4.1.9.5.1.4.1.1.25',
  portErrDisableTimeOutEnable => '1.3.6.1.4.1.9.5.1.4.1.1.26',
  portErrDisableTimeOutEnableDefinition => 'CISCO-STACK-MIB::portErrDisableTimeOutEnable',
  tftpGrp => '1.3.6.1.4.1.9.5.1.5',
  tftpHost => '1.3.6.1.4.1.9.5.1.5.1',
  tftpFile => '1.3.6.1.4.1.9.5.1.5.2',
  tftpModule => '1.3.6.1.4.1.9.5.1.5.3',
  tftpAction => '1.3.6.1.4.1.9.5.1.5.4',
  tftpActionDefinition => 'CISCO-STACK-MIB::tftpAction',
  tftpResult => '1.3.6.1.4.1.9.5.1.5.5',
  tftpResultDefinition => 'CISCO-STACK-MIB::tftpResult',
  brouterGrp => '1.3.6.1.4.1.9.5.1.6',
  brouterEnableRip => '1.3.6.1.4.1.9.5.1.6.1',
  brouterEnableRipDefinition => 'CISCO-STACK-MIB::brouterEnableRip',
  brouterEnableSpantree => '1.3.6.1.4.1.9.5.1.6.2',
  brouterEnableSpantreeDefinition => 'CISCO-STACK-MIB::brouterEnableSpantree',
  brouterEnableGiantCheck => '1.3.6.1.4.1.9.5.1.6.3',
  brouterEnableGiantCheckDefinition => 'CISCO-STACK-MIB::brouterEnableGiantCheck',
  brouterEnableIpFragmentation => '1.3.6.1.4.1.9.5.1.6.4',
  brouterEnableIpFragmentationDefinition => 'CISCO-STACK-MIB::brouterEnableIpFragmentation',
  brouterEnableUnreachables => '1.3.6.1.4.1.9.5.1.6.5',
  brouterEnableUnreachablesDefinition => 'CISCO-STACK-MIB::brouterEnableUnreachables',
  brouterCamAgingTime => '1.3.6.1.4.1.9.5.1.6.6',
  brouterCamMode => '1.3.6.1.4.1.9.5.1.6.7',
  brouterCamModeDefinition => 'CISCO-STACK-MIB::brouterCamMode',
  brouterIpxSnapToEther => '1.3.6.1.4.1.9.5.1.6.8',
  brouterIpxSnapToEtherDefinition => 'CISCO-STACK-MIB::brouterIpxSnapToEther',
  brouterIpx8023RawToFddi => '1.3.6.1.4.1.9.5.1.6.9',
  brouterIpx8023RawToFddiDefinition => 'CISCO-STACK-MIB::brouterIpx8023RawToFddi',
  brouterEthernetReceiveMax => '1.3.6.1.4.1.9.5.1.6.10',
  brouterEthernetTransmitMax => '1.3.6.1.4.1.9.5.1.6.11',
  brouterFddiReceiveMax => '1.3.6.1.4.1.9.5.1.6.12',
  brouterFddiTransmitMax => '1.3.6.1.4.1.9.5.1.6.13',
  brouterPortTable => '1.3.6.1.4.1.9.5.1.6.14',
  brouterPortEntry => '1.3.6.1.4.1.9.5.1.6.14.1',
  brouterPortModule => '1.3.6.1.4.1.9.5.1.6.14.1.1',
  brouterPort => '1.3.6.1.4.1.9.5.1.6.14.1.2',
  brouterPortIpVlan => '1.3.6.1.4.1.9.5.1.6.14.1.3',
  brouterPortIpAddr => '1.3.6.1.4.1.9.5.1.6.14.1.4',
  brouterPortNetMask => '1.3.6.1.4.1.9.5.1.6.14.1.5',
  brouterPortBroadcast => '1.3.6.1.4.1.9.5.1.6.14.1.6',
  brouterPortBridgeVlan => '1.3.6.1.4.1.9.5.1.6.14.1.7',
  brouterPortIpHelpers => '1.3.6.1.4.1.9.5.1.6.14.1.8',
  brouterIpx8022ToEther => '1.3.6.1.4.1.9.5.1.6.15',
  brouterIpx8022ToEtherDefinition => 'CISCO-STACK-MIB::brouterIpx8022ToEther',
  brouterEnableTransitEncapsulation => '1.3.6.1.4.1.9.5.1.6.16',
  brouterEnableTransitEncapsulationDefinition => 'CISCO-STACK-MIB::brouterEnableTransitEncapsulation',
  brouterEnableFddiCheck => '1.3.6.1.4.1.9.5.1.6.17',
  brouterEnableFddiCheckDefinition => 'CISCO-STACK-MIB::brouterEnableFddiCheck',
  brouterEnableAPaRT => '1.3.6.1.4.1.9.5.1.6.18',
  brouterEnableAPaRTDefinition => 'CISCO-STACK-MIB::brouterEnableAPaRT',
  filterGrp => '1.3.6.1.4.1.9.5.1.7',
  filterMacTable => '1.3.6.1.4.1.9.5.1.7.1',
  filterMacEntry => '1.3.6.1.4.1.9.5.1.7.1.1',
  filterMacModule => '1.3.6.1.4.1.9.5.1.7.1.1.1',
  filterMacPort => '1.3.6.1.4.1.9.5.1.7.1.1.2',
  filterMacAddress => '1.3.6.1.4.1.9.5.1.7.1.1.3',
  filterMacType => '1.3.6.1.4.1.9.5.1.7.1.1.4',
  filterMacTypeDefinition => 'CISCO-STACK-MIB::filterMacType',
  filterVendorTable => '1.3.6.1.4.1.9.5.1.7.2',
  filterVendorEntry => '1.3.6.1.4.1.9.5.1.7.2.1',
  filterVendorModule => '1.3.6.1.4.1.9.5.1.7.2.1.1',
  filterVendorPort => '1.3.6.1.4.1.9.5.1.7.2.1.2',
  filterVendorId => '1.3.6.1.4.1.9.5.1.7.2.1.3',
  filterVendorType => '1.3.6.1.4.1.9.5.1.7.2.1.4',
  filterVendorTypeDefinition => 'CISCO-STACK-MIB::filterVendorType',
  filterProtocolTable => '1.3.6.1.4.1.9.5.1.7.3',
  filterProtocolEntry => '1.3.6.1.4.1.9.5.1.7.3.1',
  filterProtocolModule => '1.3.6.1.4.1.9.5.1.7.3.1.1',
  filterProtocolPort => '1.3.6.1.4.1.9.5.1.7.3.1.2',
  filterProtocolValue => '1.3.6.1.4.1.9.5.1.7.3.1.3',
  filterProtocolType => '1.3.6.1.4.1.9.5.1.7.3.1.4',
  filterProtocolTypeDefinition => 'CISCO-STACK-MIB::filterProtocolType',
  filterTestTable => '1.3.6.1.4.1.9.5.1.7.4',
  filterTestEntry => '1.3.6.1.4.1.9.5.1.7.4.1',
  filterTestModule => '1.3.6.1.4.1.9.5.1.7.4.1.1',
  filterTestPort => '1.3.6.1.4.1.9.5.1.7.4.1.2',
  filterTestIndex => '1.3.6.1.4.1.9.5.1.7.4.1.3',
  filterTestType => '1.3.6.1.4.1.9.5.1.7.4.1.4',
  filterTestTypeDefinition => 'CISCO-STACK-MIB::filterTestType',
  filterTestOffset => '1.3.6.1.4.1.9.5.1.7.4.1.5',
  filterTestValue => '1.3.6.1.4.1.9.5.1.7.4.1.6',
  filterTestMask => '1.3.6.1.4.1.9.5.1.7.4.1.7',
  filterPortTable => '1.3.6.1.4.1.9.5.1.7.5',
  filterPortEntry => '1.3.6.1.4.1.9.5.1.7.5.1',
  filterPortModule => '1.3.6.1.4.1.9.5.1.7.5.1.1',
  filterPort => '1.3.6.1.4.1.9.5.1.7.5.1.2',
  filterPortComplex => '1.3.6.1.4.1.9.5.1.7.5.1.3',
  filterPortBroadcastThrottle => '1.3.6.1.4.1.9.5.1.7.5.1.4',
  filterPortBroadcastThreshold => '1.3.6.1.4.1.9.5.1.7.5.1.5',
  filterPortBroadcastDiscards => '1.3.6.1.4.1.9.5.1.7.5.1.6',
  filterPortBroadcastThresholdFraction => '1.3.6.1.4.1.9.5.1.7.5.1.7',
  filterPortSuppressionOption => '1.3.6.1.4.1.9.5.1.7.5.1.8',
  filterPortSuppressionViolation => '1.3.6.1.4.1.9.5.1.7.5.1.9',
  filterPortSuppressionViolationDefinition => 'CISCO-STACK-MIB::filterPortSuppressionViolation',
  monitorGrp => '1.3.6.1.4.1.9.5.1.8',
  monitorSourceModule => '1.3.6.1.4.1.9.5.1.8.1',
  monitorSourcePort => '1.3.6.1.4.1.9.5.1.8.2',
  monitorDestinationModule => '1.3.6.1.4.1.9.5.1.8.3',
  monitorDestinationPort => '1.3.6.1.4.1.9.5.1.8.4',
  monitorDirection => '1.3.6.1.4.1.9.5.1.8.5',
  monitorDirectionDefinition => 'CISCO-STACK-MIB::monitorDirection',
  monitorEnable => '1.3.6.1.4.1.9.5.1.8.6',
  monitorEnableDefinition => 'CISCO-STACK-MIB::monitorEnable',
  monitorAdminSourcePorts => '1.3.6.1.4.1.9.5.1.8.7',
  monitorOperSourcePorts => '1.3.6.1.4.1.9.5.1.8.8',
  vlanGrp => '1.3.6.1.4.1.9.5.1.9',
  vlanTable => '1.3.6.1.4.1.9.5.1.9.2',
  vlanEntry => '1.3.6.1.4.1.9.5.1.9.2.1',
  vlanIndex => '1.3.6.1.4.1.9.5.1.9.2.1.1',
  vlanSpantreeEnable => '1.3.6.1.4.1.9.5.1.9.2.1.2',
  vlanSpantreeEnableDefinition => 'CISCO-STACK-MIB::vlanSpantreeEnable',
  vlanIfIndex => '1.3.6.1.4.1.9.5.1.9.2.1.3',
  vlanPortTable => '1.3.6.1.4.1.9.5.1.9.3',
  vlanPortEntry => '1.3.6.1.4.1.9.5.1.9.3.1',
  vlanPortModule => '1.3.6.1.4.1.9.5.1.9.3.1.1',
  vlanPort => '1.3.6.1.4.1.9.5.1.9.3.1.2',
  vlanPortVlan => '1.3.6.1.4.1.9.5.1.9.3.1.3',
  vlanPortIslVlansAllowed => '1.3.6.1.4.1.9.5.1.9.3.1.5',
  vlanPortSwitchLevel => '1.3.6.1.4.1.9.5.1.9.3.1.6',
  vlanPortSwitchLevelDefinition => 'CISCO-STACK-MIB::vlanPortSwitchLevel',
  vlanPortIslAdminStatus => '1.3.6.1.4.1.9.5.1.9.3.1.7',
  vlanPortIslAdminStatusDefinition => 'CISCO-STACK-MIB::vlanPortIslAdminStatus',
  vlanPortIslOperStatus => '1.3.6.1.4.1.9.5.1.9.3.1.8',
  vlanPortIslOperStatusDefinition => 'CISCO-STACK-MIB::vlanPortIslOperStatus',
  vlanPortIslPriorityVlans => '1.3.6.1.4.1.9.5.1.9.3.1.9',
  vlanPortAdminStatus => '1.3.6.1.4.1.9.5.1.9.3.1.10',
  vlanPortAdminStatusDefinition => 'CISCO-STACK-MIB::vlanPortAdminStatus',
  vlanPortOperStatus => '1.3.6.1.4.1.9.5.1.9.3.1.11',
  vlanPortOperStatusDefinition => 'CISCO-STACK-MIB::vlanPortOperStatus',
  vlanPortAuxiliaryVlan => '1.3.6.1.4.1.9.5.1.9.3.1.12',
  vmpsTable => '1.3.6.1.4.1.9.5.1.9.4',
  vmpsEntry => '1.3.6.1.4.1.9.5.1.9.4.1',
  vmpsAddr => '1.3.6.1.4.1.9.5.1.9.4.1.1',
  vmpsType => '1.3.6.1.4.1.9.5.1.9.4.1.2',
  vmpsTypeDefinition => 'CISCO-STACK-MIB::vmpsType',
  vmpsAction => '1.3.6.1.4.1.9.5.1.9.5',
  vmpsActionDefinition => 'CISCO-STACK-MIB::vmpsAction',
  vmpsAccessed => '1.3.6.1.4.1.9.5.1.9.6',
  vlanTrunkMappingMax => '1.3.6.1.4.1.9.5.1.9.7',
  vlanTrunkMappingTable => '1.3.6.1.4.1.9.5.1.9.8',
  vlanTrunkMappingEntry => '1.3.6.1.4.1.9.5.1.9.8.1',
  vlanTrunkMappingFromVlan => '1.3.6.1.4.1.9.5.1.9.8.1.1',
  vlanTrunkMappingToVlan => '1.3.6.1.4.1.9.5.1.9.8.1.2',
  vlanTrunkMappingType => '1.3.6.1.4.1.9.5.1.9.8.1.3',
  vlanTrunkMappingTypeDefinition => 'CISCO-STACK-MIB::vlanTrunkMappingType',
  vlanTrunkMappingOper => '1.3.6.1.4.1.9.5.1.9.8.1.4',
  vlanTrunkMappingStatus => '1.3.6.1.4.1.9.5.1.9.8.1.5',
  securityGrp => '1.3.6.1.4.1.9.5.1.10',
  portSecurityTable => '1.3.6.1.4.1.9.5.1.10.1',
  portSecurityEntry => '1.3.6.1.4.1.9.5.1.10.1.1',
  portSecurityModuleIndex => '1.3.6.1.4.1.9.5.1.10.1.1.1',
  portSecurityPortIndex => '1.3.6.1.4.1.9.5.1.10.1.1.2',
  portSecurityAdminStatus => '1.3.6.1.4.1.9.5.1.10.1.1.3',
  portSecurityAdminStatusDefinition => 'CISCO-STACK-MIB::portSecurityAdminStatus',
  portSecurityOperStatus => '1.3.6.1.4.1.9.5.1.10.1.1.4',
  portSecurityOperStatusDefinition => 'CISCO-STACK-MIB::portSecurityOperStatus',
  portSecurityLastSrcAddr => '1.3.6.1.4.1.9.5.1.10.1.1.5',
  portSecuritySecureSrcAddr => '1.3.6.1.4.1.9.5.1.10.1.1.6',
  portSecurityMaxSrcAddr => '1.3.6.1.4.1.9.5.1.10.1.1.7',
  portSecurityAgingTime => '1.3.6.1.4.1.9.5.1.10.1.1.8',
  portSecurityShutdownTimeOut => '1.3.6.1.4.1.9.5.1.10.1.1.9',
  portSecurityViolationPolicy => '1.3.6.1.4.1.9.5.1.10.1.1.10',
  portSecurityViolationPolicyDefinition => 'CISCO-STACK-MIB::portSecurityViolationPolicy',
  portSecurityExtTable => '1.3.6.1.4.1.9.5.1.10.2',
  portSecurityExtEntry => '1.3.6.1.4.1.9.5.1.10.2.1',
  portSecurityExtModuleIndex => '1.3.6.1.4.1.9.5.1.10.2.1.1',
  portSecurityExtPortIndex => '1.3.6.1.4.1.9.5.1.10.2.1.2',
  portSecurityExtSecureSrcAddr => '1.3.6.1.4.1.9.5.1.10.2.1.3',
  portSecurityExtControlStatus => '1.3.6.1.4.1.9.5.1.10.2.1.4',
  portSecurityExtControlStatusDefinition => 'CISCO-STACK-MIB::portSecurityExtControlStatus',
  tokenRingGrp => '1.3.6.1.4.1.9.5.1.11',
  tokenRingPortTable => '1.3.6.1.4.1.9.5.1.11.1',
  tokenRingPortEntry => '1.3.6.1.4.1.9.5.1.11.1.1',
  tokenRingModuleIndex => '1.3.6.1.4.1.9.5.1.11.1.1.1',
  tokenRingPortIndex => '1.3.6.1.4.1.9.5.1.11.1.1.2',
  tokenRingPortSetACbits => '1.3.6.1.4.1.9.5.1.11.1.1.3',
  tokenRingPortSetACbitsDefinition => 'CISCO-STACK-MIB::tokenRingPortSetACbits',
  tokenRingPortMode => '1.3.6.1.4.1.9.5.1.11.1.1.4',
  tokenRingPortModeDefinition => 'CISCO-STACK-MIB::tokenRingPortMode',
  tokenRingPortEarlyTokenRel => '1.3.6.1.4.1.9.5.1.11.1.1.9',
  tokenRingPortEarlyTokenRelDefinition => 'CISCO-STACK-MIB::tokenRingPortEarlyTokenRel',
  tokenRingPortPriorityThresh => '1.3.6.1.4.1.9.5.1.11.1.1.10',
  tokenRingPortPriorityMinXmit => '1.3.6.1.4.1.9.5.1.11.1.1.11',
  tokenRingPortCfgLossThresh => '1.3.6.1.4.1.9.5.1.11.1.1.12',
  tokenRingPortCfgLossInterval => '1.3.6.1.4.1.9.5.1.11.1.1.13',
  tokenRingDripDistCrfMode => '1.3.6.1.4.1.9.5.1.11.2',
  tokenRingDripDistCrfModeDefinition => 'CISCO-STACK-MIB::tokenRingDripDistCrfMode',
  tokenRingDripAreReductionMode => '1.3.6.1.4.1.9.5.1.11.3',
  tokenRingDripAreReductionModeDefinition => 'CISCO-STACK-MIB::tokenRingDripAreReductionMode',
  tokenRingDripLocalNodeID => '1.3.6.1.4.1.9.5.1.11.4',
  tokenRingDripLastRevision => '1.3.6.1.4.1.9.5.1.11.5',
  tokenRingDripLastChangedRevision => '1.3.6.1.4.1.9.5.1.11.6',
  tokenRingDripAdvertsReceived => '1.3.6.1.4.1.9.5.1.11.7',
  tokenRingDripAdvertsTransmitted => '1.3.6.1.4.1.9.5.1.11.8',
  tokenRingDripAdvertsProcessed => '1.3.6.1.4.1.9.5.1.11.9',
  tokenRingDripInputQueueDrops => '1.3.6.1.4.1.9.5.1.11.10',
  tokenRingDripOutputQueueDrops => '1.3.6.1.4.1.9.5.1.11.11',
  tokenRingDripLocalVlanStatusTable => '1.3.6.1.4.1.9.5.1.11.12',
  tokenRingDripLocalVlanStatusEntry => '1.3.6.1.4.1.9.5.1.11.12.1',
  tokenRingDripVlan => '1.3.6.1.4.1.9.5.1.11.12.1.1',
  tokenRingDripLocalPortStatus => '1.3.6.1.4.1.9.5.1.11.12.1.2',
  tokenRingDripLocalPortStatusDefinition => 'CISCO-STACK-MIB::tokenRingDripLocalPortStatus',
  tokenRingDripRemotePortStatus => '1.3.6.1.4.1.9.5.1.11.12.1.3',
  tokenRingDripRemotePortStatusDefinition => 'CISCO-STACK-MIB::tokenRingDripRemotePortStatus',
  tokenRingDripRemotePortConfigured => '1.3.6.1.4.1.9.5.1.11.12.1.4',
  tokenRingDripRemotePortConfiguredDefinition => 'CISCO-STACK-MIB::tokenRingDripRemotePortConfigured',
  tokenRingDripDistributedCrf => '1.3.6.1.4.1.9.5.1.11.12.1.5',
  tokenRingDripDistributedCrfDefinition => 'CISCO-STACK-MIB::tokenRingDripDistributedCrf',
  tokenRingDripBackupCrf => '1.3.6.1.4.1.9.5.1.11.12.1.6',
  tokenRingDripBackupCrfDefinition => 'CISCO-STACK-MIB::tokenRingDripBackupCrf',
  tokenRingDripOwnerNodeID => '1.3.6.1.4.1.9.5.1.11.12.1.7',
  tokenRingPortSoftErrTable => '1.3.6.1.4.1.9.5.1.11.14',
  tokenRingPortSoftErrEntry => '1.3.6.1.4.1.9.5.1.11.14.1',
  tokenRingPortSoftErrThresh => '1.3.6.1.4.1.9.5.1.11.14.1.1',
  tokenRingPortSoftErrReportInterval => '1.3.6.1.4.1.9.5.1.11.14.1.2',
  tokenRingPortSoftErrResetCounters => '1.3.6.1.4.1.9.5.1.11.14.1.3',
  tokenRingPortSoftErrResetCountersDefinition => 'CISCO-STACK-MIB::tokenRingPortSoftErrResetCounters',
  tokenRingPortSoftErrLastCounterReset => '1.3.6.1.4.1.9.5.1.11.14.1.4',
  tokenRingPortSoftErrEnable => '1.3.6.1.4.1.9.5.1.11.14.1.5',
  tokenRingPortSoftErrEnableDefinition => 'CISCO-STACK-MIB::tokenRingPortSoftErrEnable',
  multicastGrp => '1.3.6.1.4.1.9.5.1.12',
  mcastRouterTable => '1.3.6.1.4.1.9.5.1.12.1',
  mcastRouterEntry => '1.3.6.1.4.1.9.5.1.12.1.1',
  mcastRouterModuleIndex => '1.3.6.1.4.1.9.5.1.12.1.1.1',
  mcastRouterPortIndex => '1.3.6.1.4.1.9.5.1.12.1.1.2',
  mcastRouterAdminStatus => '1.3.6.1.4.1.9.5.1.12.1.1.3',
  mcastRouterAdminStatusDefinition => 'CISCO-STACK-MIB::mcastRouterAdminStatus',
  mcastRouterOperStatus => '1.3.6.1.4.1.9.5.1.12.1.1.4',
  mcastRouterOperStatusDefinition => 'CISCO-STACK-MIB::mcastRouterOperStatus',
  mcastEnableCgmp => '1.3.6.1.4.1.9.5.1.12.2',
  mcastEnableCgmpDefinition => 'CISCO-STACK-MIB::mcastEnableCgmp',
  mcastEnableIgmp => '1.3.6.1.4.1.9.5.1.12.3',
  mcastEnableIgmpDefinition => 'CISCO-STACK-MIB::mcastEnableIgmp',
  mcastEnableRgmp => '1.3.6.1.4.1.9.5.1.12.4',
  mcastEnableRgmpDefinition => 'CISCO-STACK-MIB::mcastEnableRgmp',
  dnsGrp => '1.3.6.1.4.1.9.5.1.13',
  dnsEnable => '1.3.6.1.4.1.9.5.1.13.1',
  dnsEnableDefinition => 'CISCO-STACK-MIB::dnsEnable',
  dnsServerTable => '1.3.6.1.4.1.9.5.1.13.2',
  dnsServerEntry => '1.3.6.1.4.1.9.5.1.13.2.1',
  dnsServerAddr => '1.3.6.1.4.1.9.5.1.13.2.1.1',
  dnsServerType => '1.3.6.1.4.1.9.5.1.13.2.1.2',
  dnsServerTypeDefinition => 'CISCO-STACK-MIB::dnsServerType',
  dnsDomainName => '1.3.6.1.4.1.9.5.1.13.3',
  syslogGrp => '1.3.6.1.4.1.9.5.1.14',
  syslogServerTable => '1.3.6.1.4.1.9.5.1.14.1',
  syslogServerEntry => '1.3.6.1.4.1.9.5.1.14.1.1',
  syslogServerAddr => '1.3.6.1.4.1.9.5.1.14.1.1.1',
  syslogServerType => '1.3.6.1.4.1.9.5.1.14.1.1.2',
  syslogServerTypeDefinition => 'CISCO-STACK-MIB::syslogServerType',
  syslogConsoleEnable => '1.3.6.1.4.1.9.5.1.14.2',
  syslogConsoleEnableDefinition => 'CISCO-STACK-MIB::syslogConsoleEnable',
  syslogHostEnable => '1.3.6.1.4.1.9.5.1.14.3',
  syslogHostEnableDefinition => 'CISCO-STACK-MIB::syslogHostEnable',
  syslogMessageControlTable => '1.3.6.1.4.1.9.5.1.14.4',
  syslogMessageControlEntry => '1.3.6.1.4.1.9.5.1.14.4.1',
  syslogMessageFacility => '1.3.6.1.4.1.9.5.1.14.4.1.1',
  syslogMessageFacilityDefinition => 'CISCO-STACK-MIB::syslogMessageFacility',
  syslogMessageSeverity => '1.3.6.1.4.1.9.5.1.14.4.1.2',
  syslogMessageSeverityDefinition => 'CISCO-STACK-MIB::syslogMessageSeverity',
  syslogTimeStampOption => '1.3.6.1.4.1.9.5.1.14.5',
  syslogTimeStampOptionDefinition => 'CISCO-STACK-MIB::syslogTimeStampOption',
  syslogTelnetEnable => '1.3.6.1.4.1.9.5.1.14.6',
  syslogTelnetEnableDefinition => 'CISCO-STACK-MIB::syslogTelnetEnable',
  ntpGrp => '1.3.6.1.4.1.9.5.1.15',
  ntpBcastClient => '1.3.6.1.4.1.9.5.1.15.1',
  ntpBcastClientDefinition => 'CISCO-STACK-MIB::ntpBcastClient',
  ntpBcastDelay => '1.3.6.1.4.1.9.5.1.15.2',
  ntpClient => '1.3.6.1.4.1.9.5.1.15.3',
  ntpClientDefinition => 'CISCO-STACK-MIB::ntpClient',
  ntpServerTable => '1.3.6.1.4.1.9.5.1.15.4',
  ntpServerEntry => '1.3.6.1.4.1.9.5.1.15.4.1',
  ntpServerAddress => '1.3.6.1.4.1.9.5.1.15.4.1.1',
  ntpServerType => '1.3.6.1.4.1.9.5.1.15.4.1.2',
  ntpServerTypeDefinition => 'CISCO-STACK-MIB::ntpServerType',
  ntpServerPublicKey => '1.3.6.1.4.1.9.5.1.15.4.1.3',
  ntpSummertimeStatus => '1.3.6.1.4.1.9.5.1.15.5',
  ntpSummertimeStatusDefinition => 'CISCO-STACK-MIB::ntpSummertimeStatus',
  ntpSummerTimezoneName => '1.3.6.1.4.1.9.5.1.15.6',
  ntpTimezoneName => '1.3.6.1.4.1.9.5.1.15.7',
  ntpTimezoneOffsetHour => '1.3.6.1.4.1.9.5.1.15.8',
  ntpTimezoneOffsetMinute => '1.3.6.1.4.1.9.5.1.15.9',
  ntpAuthenticationEnable => '1.3.6.1.4.1.9.5.1.15.10',
  ntpAuthenticationEnableDefinition => 'CISCO-STACK-MIB::ntpAuthenticationEnable',
  ntpAuthenticationTable => '1.3.6.1.4.1.9.5.1.15.11',
  ntpAuthenticationEntry => '1.3.6.1.4.1.9.5.1.15.11.1',
  ntpAuthenticationPublicKey => '1.3.6.1.4.1.9.5.1.15.11.1.1',
  ntpAuthenticationSecretKey => '1.3.6.1.4.1.9.5.1.15.11.1.2',
  ntpAuthenticationTrustedMode => '1.3.6.1.4.1.9.5.1.15.11.1.3',
  ntpAuthenticationTrustedModeDefinition => 'CISCO-STACK-MIB::ntpAuthenticationTrustedMode',
  ntpAuthenticationType => '1.3.6.1.4.1.9.5.1.15.11.1.4',
  ntpAuthenticationTypeDefinition => 'CISCO-STACK-MIB::ntpAuthenticationType',
  tacacsGrp => '1.3.6.1.4.1.9.5.1.16',
  tacacsLoginAuthentication => '1.3.6.1.4.1.9.5.1.16.1',
  tacacsLoginAuthenticationDefinition => 'CISCO-STACK-MIB::tacacsLoginAuthentication',
  tacacsEnableAuthentication => '1.3.6.1.4.1.9.5.1.16.2',
  tacacsEnableAuthenticationDefinition => 'CISCO-STACK-MIB::tacacsEnableAuthentication',
  tacacsLocalLoginAuthentication => '1.3.6.1.4.1.9.5.1.16.3',
  tacacsLocalLoginAuthenticationDefinition => 'CISCO-STACK-MIB::tacacsLocalLoginAuthentication',
  tacacsLocalEnableAuthentication => '1.3.6.1.4.1.9.5.1.16.4',
  tacacsLocalEnableAuthenticationDefinition => 'CISCO-STACK-MIB::tacacsLocalEnableAuthentication',
  tacacsNumLoginAttempts => '1.3.6.1.4.1.9.5.1.16.5',
  tacacsDirectedRequest => '1.3.6.1.4.1.9.5.1.16.6',
  tacacsDirectedRequestDefinition => 'CISCO-STACK-MIB::tacacsDirectedRequest',
  tacacsTimeout => '1.3.6.1.4.1.9.5.1.16.7',
  tacacsAuthKey => '1.3.6.1.4.1.9.5.1.16.8',
  tacacsServerTable => '1.3.6.1.4.1.9.5.1.16.9',
  tacacsServerEntry => '1.3.6.1.4.1.9.5.1.16.9.1',
  tacacsServerAddr => '1.3.6.1.4.1.9.5.1.16.9.1.1',
  tacacsServerType => '1.3.6.1.4.1.9.5.1.16.9.1.2',
  tacacsServerTypeDefinition => 'CISCO-STACK-MIB::tacacsServerType',
  ipPermitListGrp => '1.3.6.1.4.1.9.5.1.17',
  ipPermitEnable => '1.3.6.1.4.1.9.5.1.17.1',
  ipPermitEnableDefinition => 'CISCO-STACK-MIB::ipPermitEnable',
  ipPermitListTable => '1.3.6.1.4.1.9.5.1.17.2',
  ipPermitListEntry => '1.3.6.1.4.1.9.5.1.17.2.1',
  ipPermitAddress => '1.3.6.1.4.1.9.5.1.17.2.1.1',
  ipPermitMask => '1.3.6.1.4.1.9.5.1.17.2.1.2',
  ipPermitType => '1.3.6.1.4.1.9.5.1.17.2.1.3',
  ipPermitTypeDefinition => 'CISCO-STACK-MIB::ipPermitType',
  ipPermitAccessType => '1.3.6.1.4.1.9.5.1.17.2.1.4',
  ipPermitTelnetConnectLimit => '1.3.6.1.4.1.9.5.1.17.2.1.5',
  ipPermitSshConnectLimit => '1.3.6.1.4.1.9.5.1.17.2.1.6',
  ipPermitDeniedListTable => '1.3.6.1.4.1.9.5.1.17.3',
  ipPermitDeniedListEntry => '1.3.6.1.4.1.9.5.1.17.3.1',
  ipPermitDeniedAddress => '1.3.6.1.4.1.9.5.1.17.3.1.1',
  ipPermitDeniedAccess => '1.3.6.1.4.1.9.5.1.17.3.1.2',
  ipPermitDeniedAccessDefinition => 'CISCO-STACK-MIB::ipPermitDeniedAccess',
  ipPermitDeniedTime => '1.3.6.1.4.1.9.5.1.17.3.1.3',
  ipPermitAccessTypeEnable => '1.3.6.1.4.1.9.5.1.17.4',
  portChannelGrp => '1.3.6.1.4.1.9.5.1.18',
  portChannelTable => '1.3.6.1.4.1.9.5.1.18.1',
  portChannelEntry => '1.3.6.1.4.1.9.5.1.18.1.1',
  portChannelModuleIndex => '1.3.6.1.4.1.9.5.1.18.1.1.1',
  portChannelPortIndex => '1.3.6.1.4.1.9.5.1.18.1.1.2',
  portChannelPorts => '1.3.6.1.4.1.9.5.1.18.1.1.3',
  portChannelAdminStatus => '1.3.6.1.4.1.9.5.1.18.1.1.4',
  portChannelAdminStatusDefinition => 'CISCO-STACK-MIB::portChannelAdminStatus',
  portChannelOperStatus => '1.3.6.1.4.1.9.5.1.18.1.1.5',
  portChannelOperStatusDefinition => 'CISCO-STACK-MIB::portChannelOperStatus',
  portChannelNeighbourDeviceId => '1.3.6.1.4.1.9.5.1.18.1.1.6',
  portChannelNeighbourPortId => '1.3.6.1.4.1.9.5.1.18.1.1.7',
  portChannelProtInPackets => '1.3.6.1.4.1.9.5.1.18.1.1.8',
  portChannelProtOutPackets => '1.3.6.1.4.1.9.5.1.18.1.1.9',
  portChannelIfIndex => '1.3.6.1.4.1.9.5.1.18.1.1.10',
  portCpbGrp => '1.3.6.1.4.1.9.5.1.19',
  portCpbTable => '1.3.6.1.4.1.9.5.1.19.1',
  portCpbEntry => '1.3.6.1.4.1.9.5.1.19.1.1',
  portCpbModuleIndex => '1.3.6.1.4.1.9.5.1.19.1.1.1',
  portCpbPortIndex => '1.3.6.1.4.1.9.5.1.19.1.1.2',
  portCpbSpeed => '1.3.6.1.4.1.9.5.1.19.1.1.3',
  portCpbDuplex => '1.3.6.1.4.1.9.5.1.19.1.1.4',
  portCpbTrunkEncapsulationType => '1.3.6.1.4.1.9.5.1.19.1.1.5',
  portCpbTrunkMode => '1.3.6.1.4.1.9.5.1.19.1.1.6',
  portCpbChannel => '1.3.6.1.4.1.9.5.1.19.1.1.7',
  portCpbBroadcastSuppression => '1.3.6.1.4.1.9.5.1.19.1.1.8',
  portCpbFlowControl => '1.3.6.1.4.1.9.5.1.19.1.1.9',
  portCpbSecurity => '1.3.6.1.4.1.9.5.1.19.1.1.10',
  portCpbSecurityDefinition => 'CISCO-STACK-MIB::portCpbSecurity',
  portCpbVlanMembership => '1.3.6.1.4.1.9.5.1.19.1.1.11',
  portCpbPortfast => '1.3.6.1.4.1.9.5.1.19.1.1.12',
  portCpbPortfastDefinition => 'CISCO-STACK-MIB::portCpbPortfast',
  portCpbUdld => '1.3.6.1.4.1.9.5.1.19.1.1.13',
  portCpbUdldDefinition => 'CISCO-STACK-MIB::portCpbUdld',
  portCpbInlinePower => '1.3.6.1.4.1.9.5.1.19.1.1.14',
  portCpbAuxiliaryVlan => '1.3.6.1.4.1.9.5.1.19.1.1.15',
  portCpbSpan => '1.3.6.1.4.1.9.5.1.19.1.1.16',
  portCpbCosRewrite => '1.3.6.1.4.1.9.5.1.19.1.1.17',
  portCpbCosRewriteDefinition => 'CISCO-STACK-MIB::portCpbCosRewrite',
  portCpbTosRewrite => '1.3.6.1.4.1.9.5.1.19.1.1.18',
  portCpbCopsGrouping => '1.3.6.1.4.1.9.5.1.19.1.1.19',
  portCpbDot1x => '1.3.6.1.4.1.9.5.1.19.1.1.20',
  portCpbDot1xDefinition => 'CISCO-STACK-MIB::portCpbDot1x',
  portCpbIgmpFilter => '1.3.6.1.4.1.9.5.1.19.1.1.21',
  portCpbIgmpFilterDefinition => 'CISCO-STACK-MIB::portCpbIgmpFilter',
  portTopNGrp => '1.3.6.1.4.1.9.5.1.20',
  portTopNControlTable => '1.3.6.1.4.1.9.5.1.20.1',
  portTopNControlEntry => '1.3.6.1.4.1.9.5.1.20.1.1',
  portTopNControlIndex => '1.3.6.1.4.1.9.5.1.20.1.1.1',
  portTopNRateBase => '1.3.6.1.4.1.9.5.1.20.1.1.2',
  portTopNRateBaseDefinition => 'CISCO-STACK-MIB::portTopNRateBase',
  portTopNType => '1.3.6.1.4.1.9.5.1.20.1.1.3',
  portTopNTypeDefinition => 'CISCO-STACK-MIB::portTopNType',
  portTopNMode => '1.3.6.1.4.1.9.5.1.20.1.1.4',
  portTopNModeDefinition => 'CISCO-STACK-MIB::portTopNMode',
  portTopNReportStatus => '1.3.6.1.4.1.9.5.1.20.1.1.5',
  portTopNReportStatusDefinition => 'CISCO-STACK-MIB::portTopNReportStatus',
  portTopNDuration => '1.3.6.1.4.1.9.5.1.20.1.1.6',
  portTopNTimeRemaining => '1.3.6.1.4.1.9.5.1.20.1.1.7',
  portTopNStartTime => '1.3.6.1.4.1.9.5.1.20.1.1.8',
  portTopNRequestedSize => '1.3.6.1.4.1.9.5.1.20.1.1.9',
  portTopNGrantedSize => '1.3.6.1.4.1.9.5.1.20.1.1.10',
  portTopNOwner => '1.3.6.1.4.1.9.5.1.20.1.1.11',
  portTopNStatus => '1.3.6.1.4.1.9.5.1.20.1.1.12',
  portTopNTable => '1.3.6.1.4.1.9.5.1.20.2',
  portTopNEntry => '1.3.6.1.4.1.9.5.1.20.2.1',
  portTopNIndex => '1.3.6.1.4.1.9.5.1.20.2.1.1',
  portTopNModuleNumber => '1.3.6.1.4.1.9.5.1.20.2.1.2',
  portTopNPortNumber => '1.3.6.1.4.1.9.5.1.20.2.1.3',
  portTopNUtilization => '1.3.6.1.4.1.9.5.1.20.2.1.4',
  portTopNIOOctets => '1.3.6.1.4.1.9.5.1.20.2.1.5',
  portTopNIOPkts => '1.3.6.1.4.1.9.5.1.20.2.1.6',
  portTopNIOBroadcast => '1.3.6.1.4.1.9.5.1.20.2.1.7',
  portTopNIOMulticast => '1.3.6.1.4.1.9.5.1.20.2.1.8',
  portTopNInErrors => '1.3.6.1.4.1.9.5.1.20.2.1.9',
  portTopNBufferOverFlow => '1.3.6.1.4.1.9.5.1.20.2.1.10',
  mdgGrp => '1.3.6.1.4.1.9.5.1.21',
  mdgGatewayTable => '1.3.6.1.4.1.9.5.1.21.1',
  mdgGatewayEntry => '1.3.6.1.4.1.9.5.1.21.1.1',
  mdgGatewayAddr => '1.3.6.1.4.1.9.5.1.21.1.1.1',
  mdgGatewayType => '1.3.6.1.4.1.9.5.1.21.1.1.2',
  mdgGatewayTypeDefinition => 'CISCO-STACK-MIB::mdgGatewayType',
  radiusGrp => '1.3.6.1.4.1.9.5.1.22',
  radiusLoginAuthentication => '1.3.6.1.4.1.9.5.1.22.1',
  radiusLoginAuthenticationDefinition => 'CISCO-STACK-MIB::radiusLoginAuthentication',
  radiusEnableAuthentication => '1.3.6.1.4.1.9.5.1.22.2',
  radiusEnableAuthenticationDefinition => 'CISCO-STACK-MIB::radiusEnableAuthentication',
  radiusDeadtime => '1.3.6.1.4.1.9.5.1.22.3',
  radiusAuthKey => '1.3.6.1.4.1.9.5.1.22.4',
  radiusTimeout => '1.3.6.1.4.1.9.5.1.22.5',
  radiusRetransmits => '1.3.6.1.4.1.9.5.1.22.6',
  radiusServerTable => '1.3.6.1.4.1.9.5.1.22.7',
  radiusServerEntry => '1.3.6.1.4.1.9.5.1.22.7.1',
  radiusServerAddr => '1.3.6.1.4.1.9.5.1.22.7.1.1',
  radiusServerAuthPort => '1.3.6.1.4.1.9.5.1.22.7.1.2',
  radiusServerType => '1.3.6.1.4.1.9.5.1.22.7.1.3',
  radiusServerTypeDefinition => 'CISCO-STACK-MIB::radiusServerType',
  traceRouteGrp => '1.3.6.1.4.1.9.5.1.24',
  traceRouteMaxQueries => '1.3.6.1.4.1.9.5.1.24.1',
  traceRouteQueryTable => '1.3.6.1.4.1.9.5.1.24.2',
  traceRouteQueryEntry => '1.3.6.1.4.1.9.5.1.24.2.1',
  traceRouteQueryIndex => '1.3.6.1.4.1.9.5.1.24.2.1.1',
  traceRouteHost => '1.3.6.1.4.1.9.5.1.24.2.1.2',
  traceRouteQueryDNSEnable => '1.3.6.1.4.1.9.5.1.24.2.1.3',
  traceRouteQueryDNSEnableDefinition => 'CISCO-STACK-MIB::traceRouteQueryDNSEnable',
  traceRouteQueryWaitingTime => '1.3.6.1.4.1.9.5.1.24.2.1.4',
  traceRouteQueryInitTTL => '1.3.6.1.4.1.9.5.1.24.2.1.5',
  traceRouteQueryMaxTTL => '1.3.6.1.4.1.9.5.1.24.2.1.6',
  traceRouteQueryUDPPort => '1.3.6.1.4.1.9.5.1.24.2.1.7',
  traceRouteQueryPacketCount => '1.3.6.1.4.1.9.5.1.24.2.1.8',
  traceRouteQueryPacketSize => '1.3.6.1.4.1.9.5.1.24.2.1.9',
  traceRouteQueryTOS => '1.3.6.1.4.1.9.5.1.24.2.1.10',
  traceRouteQueryResult => '1.3.6.1.4.1.9.5.1.24.2.1.21',
  traceRouteQueryTime => '1.3.6.1.4.1.9.5.1.24.2.1.22',
  traceRouteQueryOwner => '1.3.6.1.4.1.9.5.1.24.2.1.23',
  traceRouteQueryStatus => '1.3.6.1.4.1.9.5.1.24.2.1.24',
  traceRouteQueryStatusDefinition => 'CISCO-STACK-MIB::traceRouteQueryStatus',
  traceRouteDataTable => '1.3.6.1.4.1.9.5.1.24.3',
  traceRouteDataEntry => '1.3.6.1.4.1.9.5.1.24.3.1',
  traceRouteDataIndex => '1.3.6.1.4.1.9.5.1.24.3.1.1',
  traceRouteDataGatewayName => '1.3.6.1.4.1.9.5.1.24.3.1.2',
  traceRouteDataGatewayIp => '1.3.6.1.4.1.9.5.1.24.3.1.3',
  traceRouteDataRtt => '1.3.6.1.4.1.9.5.1.24.3.1.4',
  traceRouteDataHopCount => '1.3.6.1.4.1.9.5.1.24.3.1.5',
  traceRouteDataErrors => '1.3.6.1.4.1.9.5.1.24.3.1.6',
  traceRouteDataErrorsDefinition => 'CISCO-STACK-MIB::traceRouteDataErrors',
  fileCopyGrp => '1.3.6.1.4.1.9.5.1.25',
  fileCopyProtocol => '1.3.6.1.4.1.9.5.1.25.1',
  fileCopyProtocolDefinition => 'CISCO-STACK-MIB::fileCopyProtocol',
  fileCopyRemoteServer => '1.3.6.1.4.1.9.5.1.25.2',
  fileCopySrcFileName => '1.3.6.1.4.1.9.5.1.25.3',
  fileCopyDstFileName => '1.3.6.1.4.1.9.5.1.25.4',
  fileCopyModuleNumber => '1.3.6.1.4.1.9.5.1.25.5',
  fileCopyUserName => '1.3.6.1.4.1.9.5.1.25.6',
  fileCopyAction => '1.3.6.1.4.1.9.5.1.25.7',
  fileCopyActionDefinition => 'CISCO-STACK-MIB::fileCopyAction',
  fileCopyResult => '1.3.6.1.4.1.9.5.1.25.8',
  fileCopyResultDefinition => 'CISCO-STACK-MIB::fileCopyResult',
  fileCopyResultRcpErrorMessage => '1.3.6.1.4.1.9.5.1.25.9',
  fileCopyRuntimeConfigPart => '1.3.6.1.4.1.9.5.1.25.10',
  fileCopyRuntimeConfigPartDefinition => 'CISCO-STACK-MIB::fileCopyRuntimeConfigPart',
  voiceGrp => '1.3.6.1.4.1.9.5.1.26',
  voicePortIfConfigTable => '1.3.6.1.4.1.9.5.1.26.1',
  voicePortIfConfigEntry => '1.3.6.1.4.1.9.5.1.26.1.1',
  voicePortIfConfigModuleIndex => '1.3.6.1.4.1.9.5.1.26.1.1.1',
  voicePortIfConfigPortIndex => '1.3.6.1.4.1.9.5.1.26.1.1.2',
  voicePortIfDHCPEnabled => '1.3.6.1.4.1.9.5.1.26.1.1.3',
  voicePortIfIpAddress => '1.3.6.1.4.1.9.5.1.26.1.1.4',
  voicePortIfIpNetMask => '1.3.6.1.4.1.9.5.1.26.1.1.5',
  voicePortIfTftpServerAddress => '1.3.6.1.4.1.9.5.1.26.1.1.6',
  voicePortIfGatewayAddress => '1.3.6.1.4.1.9.5.1.26.1.1.7',
  voicePortIfDnsServerAddress => '1.3.6.1.4.1.9.5.1.26.1.1.8',
  voicePortIfDnsDomain => '1.3.6.1.4.1.9.5.1.26.1.1.9',
  voicePortIfOperDnsDomain => '1.3.6.1.4.1.9.5.1.26.1.1.10',
  voicePortCallManagerTable => '1.3.6.1.4.1.9.5.1.26.2',
  voicePortCallManagerEntry => '1.3.6.1.4.1.9.5.1.26.2.1',
  voicePortModuleIndex => '1.3.6.1.4.1.9.5.1.26.2.1.1',
  voicePortIndex => '1.3.6.1.4.1.9.5.1.26.2.1.2',
  voicePortCallManagerIndex => '1.3.6.1.4.1.9.5.1.26.2.1.3',
  voicePortCallManagerIpAddr => '1.3.6.1.4.1.9.5.1.26.2.1.4',
  voicePortOperDnsServerTable => '1.3.6.1.4.1.9.5.1.26.3',
  voicePortOperDnsServerEntry => '1.3.6.1.4.1.9.5.1.26.3.1',
  voicePortDnsModuleIndex => '1.3.6.1.4.1.9.5.1.26.3.1.1',
  voicePortDnsPortIndex => '1.3.6.1.4.1.9.5.1.26.3.1.2',
  voicePortOperDnsServerIndex => '1.3.6.1.4.1.9.5.1.26.3.1.3',
  voicePortOperDnsServerIpAddr => '1.3.6.1.4.1.9.5.1.26.3.1.4',
  voicePortOperDnsServerSource => '1.3.6.1.4.1.9.5.1.26.3.1.5',
  voicePortOperDnsServerSourceDefinition => 'CISCO-STACK-MIB::voicePortOperDnsServerSource',
  portJumboFrameGrp => '1.3.6.1.4.1.9.5.1.27',
  portJumboFrameTable => '1.3.6.1.4.1.9.5.1.27.1',
  portJumboFrameEntry => '1.3.6.1.4.1.9.5.1.27.1.1',
  portJumboFrameModuleIndex => '1.3.6.1.4.1.9.5.1.27.1.1.1',
  portJumboFramePortIndex => '1.3.6.1.4.1.9.5.1.27.1.1.2',
  portJumboFrameEnable => '1.3.6.1.4.1.9.5.1.27.1.1.3',
  portJumboFrameEnableDefinition => 'CISCO-STACK-MIB::portJumboFrameEnable',
  switchAccelerationGrp => '1.3.6.1.4.1.9.5.1.28',
  switchAccelerationModuleTable => '1.3.6.1.4.1.9.5.1.28.1',
  switchAccelerationModuleEntry => '1.3.6.1.4.1.9.5.1.28.1.1',
  switchAccelerationModuleIndex => '1.3.6.1.4.1.9.5.1.28.1.1.1',
  switchAccelerationModuleEnable => '1.3.6.1.4.1.9.5.1.28.1.1.2',
  configGrp => '1.3.6.1.4.1.9.5.1.29',
  configMode => '1.3.6.1.4.1.9.5.1.29.1',
  configModeDefinition => 'CISCO-STACK-MIB::configMode',
  configTextFileLocation => '1.3.6.1.4.1.9.5.1.29.2',
  configWriteMem => '1.3.6.1.4.1.9.5.1.29.3',
  configWriteMemStatus => '1.3.6.1.4.1.9.5.1.29.4',
  configWriteMemStatusDefinition => 'CISCO-STACK-MIB::configWriteMemStatus',
  ciscoStackMIBConformance => '1.3.6.1.4.1.9.5.1.31',
  ciscoStackMIBCompliances => '1.3.6.1.4.1.9.5.1.31.1',
  ciscoStackMIBGroups => '1.3.6.1.4.1.9.5.1.31.2',
  adapterCard => '1.3.6.1.4.1.9.5.2',
  wsc1000sysID => '1.3.6.1.4.1.9.5.3',
  wsc1100sysID => '1.3.6.1.4.1.9.5.4',
  wsc1200sysID => '1.3.6.1.4.1.9.5.5',
  wsc1400sysID => '1.3.6.1.4.1.9.5.6',
  wsc5000sysID => '1.3.6.1.4.1.9.5.7',
  wsc1600sysID => '1.3.6.1.4.1.9.5.8',
  cpw1600sysID => '1.3.6.1.4.1.9.5.9',
  wsc3000sysID => '1.3.6.1.4.1.9.5.10',
  wsc2900sysID => '1.3.6.1.4.1.9.5.12',
  cpw2200sysID => '1.3.6.1.4.1.9.5.13',
  esStack => '1.3.6.1.4.1.9.5.14',
  wsc3200sysID => '1.3.6.1.4.1.9.5.15',
  cpw1900sysID => '1.3.6.1.4.1.9.5.16',
  wsc5500sysID => '1.3.6.1.4.1.9.5.17',
  wsc1900sysID => '1.3.6.1.4.1.9.5.18',
  cpw1220sysID => '1.3.6.1.4.1.9.5.19',
  wsc2820sysID => '1.3.6.1.4.1.9.5.20',
  cpw1420sysID => '1.3.6.1.4.1.9.5.21',
  dcd => '1.3.6.1.4.1.9.5.22',
  wsc3100sysID => '1.3.6.1.4.1.9.5.23',
  cpw1800sysID => '1.3.6.1.4.1.9.5.24',
  cpw1601sysID => '1.3.6.1.4.1.9.5.25',
  wsc3001sysID => '1.3.6.1.4.1.9.5.26',
  cpw1220csysID => '1.3.6.1.4.1.9.5.27',
  wsc1900csysID => '1.3.6.1.4.1.9.5.28',
  wsc5002sysID => '1.3.6.1.4.1.9.5.29',
  cpw1220isysID => '1.3.6.1.4.1.9.5.30',
  wsc1900isysID => '1.3.6.1.4.1.9.5.31',
  tsStack => '1.3.6.1.4.1.9.5.32',
  wsc3900sysID => '1.3.6.1.4.1.9.5.33',
  wsc5505sysID => '1.3.6.1.4.1.9.5.34',
  wsc2926sysID => '1.3.6.1.4.1.9.5.35',
  wsc5509sysID => '1.3.6.1.4.1.9.5.36',
  wsc3920sysID => '1.3.6.1.4.1.9.5.37',
  wsc6006sysID => '1.3.6.1.4.1.9.5.38',
  wsc6009sysID => '1.3.6.1.4.1.9.5.39',
  wsc4003sysID => '1.3.6.1.4.1.9.5.40',
  wsc4912gsysID => '1.3.6.1.4.1.9.5.41',
  wsc2948gsysID => '1.3.6.1.4.1.9.5.42',
  wsc6509sysID => '1.3.6.1.4.1.9.5.44',
  wsc6506sysID => '1.3.6.1.4.1.9.5.45',
  wsc4006sysID => '1.3.6.1.4.1.9.5.46',
  wsc6509nebsysID => '1.3.6.1.4.1.9.5.47',
  wsc6knamsysID => '1.3.6.1.4.1.9.5.48',
  wsc2980gsysID => '1.3.6.1.4.1.9.5.49',
  wsc6513sysID => '1.3.6.1.4.1.9.5.50',
  wsc2980gasysID => '1.3.6.1.4.1.9.5.51',
  cisco7603sysID => '1.3.6.1.4.1.9.5.53',
  cisco7606sysID => '1.3.6.1.4.1.9.5.54',
  cisco7609sysID => '1.3.6.1.4.1.9.5.55',
  wsc6503sysID => '1.3.6.1.4.1.9.5.56',
  wsc4503sysID => '1.3.6.1.4.1.9.5.58',
  wsc4506sysID => '1.3.6.1.4.1.9.5.59',
  cisco7613sysID => '1.3.6.1.4.1.9.5.60',
  wsc6509nebasysID => '1.3.6.1.4.1.9.5.61',
  wsc2948ggetxsysID => '1.3.6.1.4.1.9.5.62',
  cisco7604sysID => '1.3.6.1.4.1.9.5.63',
  wsc6504esysID => '1.3.6.1.4.1.9.5.64',
  wsc1900LiteFxsysID => '1.3.6.1.4.1.9.5.175',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'CISCO-STACK-MIB'} = {
  sysTelnetPrimaryEnableAuthentication => {
    '1' => 'tacacs',
    '2' => 'radius',
    '3' => 'local',
  },
  sysPortFastBpduGuard => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  brouterEnableGiantCheck => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  vlanTrunkMappingType => {
    '1' => 'reservedToNonReserved',
    '2' => 'dot1qToisl',
  },
  brouterEnableFddiCheck => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  filterMacType => {
    '1' => 'deny',
    '2' => 'invalid',
    '3' => 'permit',
    '4' => 'permitSrc',
    '5' => 'permitDst',
    '6' => 'denySrc',
    '7' => 'denyDst',
    '8' => 'denySrcLearn',
  },
  radiusServerType => {
    '1' => 'invalid',
    '2' => 'primary',
    '3' => 'other',
  },
  tacacsServerType => {
    '1' => 'invalid',
    '2' => 'primary',
    '3' => 'other',
  },
  tftpAction => {
    '1' => 'other',
    '2' => 'downloadConfig',
    '3' => 'uploadConfig',
    '4' => 'downloadSw',
    '5' => 'uploadSw',
    '6' => 'downloadFw',
    '7' => 'uploadFw',
  },
  configMode => {
    '1' => 'binary',
    '2' => 'text',
  },
  sysEnableConfigTraps => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  ipPermitEnable => {
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'enabledForTelnetOnly',
    '4' => 'enabledForSnmpOnly',
  },
  radiusEnableAuthentication => {
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'enabledForTelnetOnly',
    '4' => 'enabledForConsoleOnly',
  },
  portSecurityViolationPolicy => {
    '1' => 'restrict',
    '2' => 'shutdown',
  },
  brouterEnableUnreachables => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  brouterIpx8023RawToFddi => {
    '1' => 'snap',
    '5' => 'iso8022',
    '6' => 'fddiRaw',
  },
  sysExtendedRmonNetflowEnable => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  brouterEnableSpantree => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  portTopNRateBase => {
    '1' => 'portTopNUtilization',
    '2' => 'portTopNIOOctets',
    '3' => 'portTopNIOPkts',
    '4' => 'portTopNIOBroadcastPkts',
    '5' => 'portTopNIOMulticastPkts',
    '6' => 'portTopNInErrors',
    '7' => 'portTopNBufferOverflow',
  },
  brouterEnableIpFragmentation => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  mcastRouterAdminStatus => {
    '1' => 'routerPresent',
    '3' => 'dynamic',
  },
  filterVendorType => {
    '1' => 'deny',
    '2' => 'invalid',
    '3' => 'permit',
  },
  traceRouteQueryDNSEnable => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  portTopNReportStatus => {
    '1' => 'progressing',
    '2' => 'ready',
  },
  syslogMessageFacility => {
    '1' => 'cdp',
    '2' => 'mcast',
    '3' => 'dtp',
    '4' => 'dvlan',
    '5' => 'earl',
    '6' => 'fddi',
    '7' => 'ip',
    '8' => 'pruning',
    '9' => 'snmp',
    '10' => 'spantree',
    '11' => 'system',
    '12' => 'tac',
    '13' => 'tcp',
    '14' => 'telnet',
    '15' => 'tftp',
    '16' => 'vtp',
    '17' => 'vmps',
    '18' => 'kernel',
    '19' => 'filesys',
    '20' => 'drip',
    '21' => 'pagp',
    '22' => 'mgmt',
    '23' => 'mls',
    '24' => 'protfilt',
    '25' => 'security',
    '26' => 'radius',
    '27' => 'udld',
    '28' => 'gvrp',
    '29' => 'cops',
    '30' => 'qos',
    '31' => 'acl',
    '32' => 'rsvp',
    '33' => 'ld',
    '34' => 'privatevlan',
    '35' => 'ethc',
    '36' => 'gl2pt',
    '37' => 'callhome',
    '38' => 'dhcpsnooping',
    '40' => 'diags',
    '42' => 'eou',
    '43' => 'backup',
    '44' => 'eoam',
    '45' => 'webauth',
    '46' => 'dom',
    '47' => 'mvrp',
  },
  portSecurityExtControlStatus => {
    '1' => 'valid',
    '2' => 'invalid',
  },
  chassisPs3Type => {
    '1' => 'other',
    '2' => 'none',
    '25' => 'wsx4008',
    '32' => 'wsx4008dc',
    '42' => 'wsx4008ac650w',
    '43' => 'wsx4008dc650w',
  },
  tacacsDirectedRequest => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  tacacsEnableAuthentication => {
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'enabledForTelnetOnly',
    '4' => 'enabledForConsoleOnly',
  },
  tacacsLocalEnableAuthentication => {
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'enabledForTelnetOnly',
    '4' => 'enabledForConsoleOnly',
  },
  chassisPs3Status => {
    '1' => 'other',
    '2' => 'ok',
    '3' => 'minorFault',
    '4' => 'majorFault',
  },
  tacacsLocalLoginAuthentication => {
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'enabledForTelnetOnly',
    '4' => 'enabledForConsoleOnly',
  },
  filterTestType => {
    '1' => 'valid',
    '2' => 'invalid',
  },
  mcastEnableCgmp => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  sysConsolePrimaryLoginAuthentication => {
    '1' => 'tacacs',
    '2' => 'radius',
    '3' => 'local',
  },
  sysInsertMode => {
    '1' => 'other',
    '2' => 'standard',
    '3' => 'scheduled',
    '4' => 'graceful',
  },
  sysStartupConfigSource => {
    '1' => 'flashFileRecurring',
    '2' => 'flashFileNonRecurring',
  },
  ntpAuthenticationTrustedMode => {
    '1' => 'trusted',
    '2' => 'untrusted',
  },
  vlanPortIslOperStatus => {
    '1' => 'trunking',
    '2' => 'notTrunking',
  },
  sysExtendedRmonVlanAgentEnable => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  sysEnableEntityTrap => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  ntpAuthenticationType => {
    '1' => 'valid',
    '2' => 'invalid',
  },
  sysTelnetPrimaryLoginAuthentication => {
    '1' => 'tacacs',
    '2' => 'radius',
    '3' => 'local',
  },
  portCpbPortfast => {
    '1' => 'yes',
    '2' => 'no',
  },
  sysEnableModem => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  vmpsAction => {
    '1' => 'other',
    '2' => 'inProgress',
    '3' => 'success',
    '4' => 'noResponse',
    '5' => 'noPrimaryVmps',
    '6' => 'noDynamicPort',
    '7' => 'noHostConnected',
    '8' => 'reconfirm',
  },
  syslogTimeStampOption => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  portLinkFaultStatus => {
    '1' => 'noFault',
    '2' => 'nearEndFault',
    '3' => 'nearEndConfigFail',
    '4' => 'farEndDisable',
    '5' => 'farEndFault',
    '6' => 'farEndConfigFail',
    '7' => 'notApplicable',
  },
  syslogTelnetEnable => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  filterPortSuppressionViolation => {
    '1' => 'dropPackets',
    '2' => 'errdisable',
  },
  tftpResult => {
    '1' => 'inProgress',
    '2' => 'success',
    '3' => 'noResponse',
    '4' => 'tooManyRetries',
    '5' => 'noBuffers',
    '6' => 'noProcesses',
    '7' => 'badChecksum',
    '8' => 'badLength',
    '9' => 'badFlash',
    '10' => 'serverError',
    '11' => 'userCanceled',
    '12' => 'wrongCode',
    '13' => 'fileNotFound',
    '14' => 'invalidTftpHost',
    '15' => 'invalidTftpModule',
    '16' => 'accessViolation',
    '17' => 'unknownStatus',
    '18' => 'invalidStorageDevice',
    '19' => 'insufficientSpaceOnStorageDevice',
    '20' => 'insufficientDramSize',
    '21' => 'incompatibleImage',
  },
  ipPermitDeniedAccess => {
    '1' => 'telnet',
    '2' => 'snmp',
    '3' => 'ssh',
    '4' => 'http',
  },
  tokenRingPortSetACbits => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  portAdminTxFlowControl => {
    '1' => 'on',
    '2' => 'off',
    '3' => 'desired',
  },
  chassisBkplType => {
    '1' => 'other',
    '2' => 'fddi',
    '3' => 'fddiEthernet',
    '4' => 'giga',
    '5' => 'giga3',
    '6' => 'giga3E',
    '7' => 'giga12',
    '8' => 'giga16',
    '9' => 'giga40',
  },
  portSecurityOperStatus => {
    '1' => 'notShutdown',
    '2' => 'shutdown',
  },
  brouterCamMode => {
    '1' => 'filtering',
    '2' => 'forwarding',
  },
  tokenRingPortEarlyTokenRel => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  sysEnableModuleTraps => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  chassisFanStatus => {
    '1' => 'other',
    '2' => 'ok',
    '3' => 'minorFault',
    '4' => 'majorFault',
  },
  ipPermitType => {
    '1' => 'valid',
    '2' => 'invalid',
  },
  vmpsType => {
    '1' => 'invalid',
    '2' => 'primary',
    '3' => 'other',
  },
  chassisPs1Type => {
    '1' => 'other',
    '2' => 'none',
    '3' => 'w50',
    '4' => 'w200',
    '5' => 'w600',
    '6' => 'w80',
    '7' => 'w130',
    '8' => 'wsc5008',
    '9' => 'wsc5008a',
    '10' => 'w175',
    '11' => 'wsc5068',
    '12' => 'wsc5508',
    '13' => 'wsc5568',
    '14' => 'wsc5508a',
    '15' => 'w155',
    '16' => 'w175pfc',
    '17' => 'w175dc',
    '18' => 'wsc5008b',
    '19' => 'wsc5008c',
    '20' => 'wsc5068b',
    '21' => 'wscac1000',
    '22' => 'wscac1300',
    '23' => 'wscdc1000',
    '24' => 'wscdc1360',
    '25' => 'wsx4008',
    '26' => 'wsc5518',
    '27' => 'wsc5598',
    '28' => 'w120',
    '29' => 'externalPS',
    '30' => 'wscac2500w',
    '31' => 'wscdc2500w',
    '32' => 'wsx4008dc',
    '33' => 'wscac4000w',
    '34' => 'pwr4000dc',
    '35' => 'pwr950ac',
    '36' => 'pwr950dc',
    '37' => 'pwr1900ac',
    '38' => 'pwr1900dc',
    '39' => 'pwr1900ac6',
    '42' => 'wsx4008ac650w',
    '43' => 'wsx4008dc650w',
    '44' => 'wscac3000w',
    '46' => 'pwrc451000ac',
    '47' => 'pwrc452800acv',
    '48' => 'pwrc451300acv',
    '49' => 'pwrc451400dcp',
    '50' => 'wscdc3000w',
    '51' => 'pwr1400ac',
    '52' => 'w156',
    '53' => 'wscac6000w',
    '54' => 'pwr2700ac',
    '55' => 'pwr2700dc',
    '58' => 'wscac8700we',
    '59' => 'pwr2700ac4',
    '60' => 'pwr2700dc4',
    '63' => 'pwr400dc',
    '64' => 'pwr400ac',
    '105' => 'pwr6000dc',
    '106' => 'pwr1500dc',
    '150' => 'c6880x3kwac',
    '151' => 'c6880x3kwdc',
    '152' => 'c6800xl3kwac',
  },
  monitorDirection => {
    '1' => 'transmit',
    '2' => 'receive',
    '3' => 'transmitAndReceive',
  },
  filterProtocolType => {
    '1' => 'deny',
    '2' => 'invalid',
    '3' => 'permit',
  },
  tokenRingDripBackupCrf => {
    '1' => 'true',
    '2' => 'false',
  },
  chassisPs2Type => {
    '1' => 'other',
    '2' => 'none',
    '3' => 'w50',
    '4' => 'w200',
    '5' => 'w600',
    '6' => 'w80',
    '7' => 'w130',
    '8' => 'wsc5008',
    '9' => 'wsc5008a',
    '10' => 'w175',
    '11' => 'wsc5068',
    '12' => 'wsc5508',
    '13' => 'wsc5568',
    '14' => 'wsc5508a',
    '15' => 'w155',
    '16' => 'w175pfc',
    '17' => 'w175dc',
    '18' => 'wsc5008b',
    '19' => 'wsc5008c',
    '20' => 'wsc5068b',
    '21' => 'wscac1000',
    '22' => 'wscac1300',
    '23' => 'wscdc1000',
    '24' => 'wscdc1360',
    '25' => 'wsx4008',
    '26' => 'wsc5518',
    '27' => 'wsc5598',
    '28' => 'w120',
    '29' => 'externalPS',
    '30' => 'wscac2500w',
    '31' => 'wscdc2500w',
    '32' => 'wsx4008dc',
    '33' => 'wscac4000w',
    '34' => 'pwr4000dc',
    '35' => 'pwr950ac',
    '36' => 'pwr950dc',
    '37' => 'pwr1900ac',
    '38' => 'pwr1900dc',
    '39' => 'pwr1900ac6',
    '42' => 'wsx4008ac650w',
    '43' => 'wsx4008dc650w',
    '44' => 'wscac3000w',
    '46' => 'pwrc451000ac',
    '47' => 'pwrc452800acv',
    '48' => 'pwrc451300acv',
    '49' => 'pwrc451400dcp',
    '50' => 'wscdc3000w',
    '51' => 'pwr1400ac',
    '52' => 'w156',
    '53' => 'wscac6000w',
    '54' => 'pwr2700ac',
    '55' => 'pwr2700dc',
    '58' => 'wscac8700we',
    '59' => 'pwr2700ac4',
    '60' => 'pwr2700dc4',
    '63' => 'pwr400dc',
    '64' => 'pwr400ac',
    '105' => 'pwr6000dc',
    '106' => 'pwr1500dc',
    '150' => 'c6880x3kwac',
    '151' => 'c6880x3kwdc',
    '152' => 'c6800xl3kwac',
  },
  portChannelOperStatus => {
    '1' => 'channelling',
    '2' => 'notChannelling',
  },
  fileCopyAction => {
    '1' => 'other',
    '2' => 'copyConfigFromHostToRuntime',
    '3' => 'copyConfigFromRuntimeToHost',
    '4' => 'copyImageFromHostToFlash',
    '5' => 'copyImageFromFlashToHost',
    '8' => 'copyConfigFromFlashToRuntime',
    '9' => 'copyConfigFromRuntimeToFlash',
    '10' => 'copyConfigFileFromHostToFlash',
    '11' => 'copyConfigFileFromFlashToHost',
    '12' => 'copyTechReportFromRuntimeToHost',
  },
  ntpAuthenticationEnable => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  moduleSubType2 => {
    '1' => 'other',
    '2' => 'empty',
    '3' => 'wsu5531',
    '5' => 'wsu5533',
    '6' => 'wsu5534',
    '7' => 'wsu5535',
    '8' => 'wsu5536',
    '9' => 'wsu5537',
    '10' => 'wsu5538',
    '11' => 'wsu5539',
    '102' => 'wsg6488',
    '103' => 'wsg6489',
    '104' => 'wsg6483',
    '105' => 'wsg6485',
    '106' => 'wsf6kFe48af',
    '107' => 'wsf6kGe48af',
    '108' => 'wsf6kVpwrGe',
    '109' => 'wsf6kFe48x2af',
    '207' => 'wsf6kmsfc',
    '234' => 'wsf6kmsfc2',
    '314' => 'wsu4504fxmt',
    '315' => 'wsu4502gb',
    '402' => 'wssvcidsupg',
    '403' => 'wssvccmm6e1',
    '404' => 'wssvccmm6t1',
    '405' => 'wssvccmm24fxs',
    '406' => 'wssvccmmact',
    '410' => 'aceModExpnDc',
    '411' => 'wsSvcAppProc1',
    '597' => 'wssvcpisa32',
    '598' => 'me6524msfc2a',
    '599' => 'wsf6kmsfc2a',
    '618' => 'c7600Es4Tg',
    '620' => 'c7600Es2Tg',
    '625' => 'c7600EsItu4TgLk',
    '626' => 'c7600EsItu2TgLk',
    '1001' => 'wssup720',
    '1005' => 'vsf6kmsfc5',
    '1026' => 'vsf6kmsfc3',
    '1701' => 'esm2x10ge',
    '1805' => 'c7600msfc4',
  },
  sysMgmtType => {
    '1' => 'other',
    '2' => 'snmpV1',
    '3' => 'smux',
    '4' => 'snmpV2V1',
    '5' => 'snmpV2cV1',
    '6' => 'snmpV3V2cV1',
  },
  moduleStandbyStatus => {
    '1' => 'other',
    '2' => 'active',
    '3' => 'standby',
    '4' => 'error',
  },
  sysEnableChassisTraps => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  tokenRingDripRemotePortConfigured => {
    '1' => 'true',
    '2' => 'false',
  },
  portChannelAdminStatus => {
    '1' => 'on',
    '2' => 'off',
    '3' => 'desirable',
    '4' => 'auto',
    '5' => 'desirableSilent',
    '6' => 'autoSilent',
  },
  brouterIpxSnapToEther => {
    '1' => 'snap',
    '2' => 'ethernetII',
    '3' => 'iso8023',
    '4' => 'raw8023',
  },
  chassisMajorAlarm => {
    '1' => 'off',
    '2' => 'on',
  },
  brouterEnableRip => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  portCpbCosRewrite => {
    '1' => 'yes',
    '2' => 'no',
  },
  radiusLoginAuthentication => {
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'enabledForTelnetOnly',
    '4' => 'enabledForConsoleOnly',
  },
  tokenRingDripAreReductionMode => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  mcastEnableIgmp => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  sysEnableRmon => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  moduleAction => {
    '1' => 'other',
    '2' => 'reset',
    '3' => 'enable',
    '4' => 'disable',
  },
  fileCopyRuntimeConfigPart => {
    '1' => 'all',
    '2' => 'nonDefault',
  },
  sysEnableRedirects => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  portCpbSecurity => {
    '1' => 'yes',
    '2' => 'no',
  },
  ntpClient => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  dnsEnable => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  sysStandbyPortEnable => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  dnsServerType => {
    '1' => 'invalid',
    '2' => 'primary',
    '3' => 'other',
  },
  portTopNType => {
    '1' => 'portTopNAllPorts',
    '2' => 'portTopNEthernet',
    '3' => 'portTopNFastEthernet',
    '4' => 'portTopNGigaEthernet',
    '5' => 'portTopNTokenRing',
    '6' => 'portTopNFDDI',
    '7' => 'portTopNAllEthernetPorts',
    '8' => 'portTopN10GigaEthernet',
  },
  sysHighAvailabilityOperStatus => {
    '1' => 'running',
    '2' => 'notRunning',
  },
  portErrDisableTimeOutEnable => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  sysEnableRepeaterTraps => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  portCpbIgmpFilter => {
    '1' => 'yes',
    '2' => 'no',
  },
  chassisTempAlarm => {
    '1' => 'off',
    '2' => 'on',
    '3' => 'critical',
  },
  portCpbUdld => {
    '1' => 'yes',
    '2' => 'no',
  },
  mcastRouterOperStatus => {
    '1' => 'routerPresent',
    '2' => 'noRouter',
  },
  brouterIpx8022ToEther => {
    '1' => 'snap',
    '2' => 'ethernetII',
    '3' => 'iso8023',
    '4' => 'raw8023',
  },
  sysTrafficMeterType => {
    '1' => 'systemSwitchingBus',
    '2' => 'switchingBusA',
    '3' => 'switchingBusB',
    '4' => 'switchingBusC',
  },
  traceRouteQueryStatus => {
    '1' => 'valid',
    '2' => 'invalid',
  },
  fileCopyProtocol => {
    '1' => 'tftp',
    '2' => 'rcp',
  },
  portAdminRxFlowControl => {
    '1' => 'on',
    '2' => 'off',
    '3' => 'desired',
  },
  mdgGatewayType => {
    '1' => 'invalid',
    '2' => 'primary',
    '3' => 'other',
  },
  configWriteMemStatus => {
    '1' => 'inProgress',
    '2' => 'succeeded',
    '3' => 'resourceUnavailable',
    '4' => 'badFileName',
    '5' => 'someOtherError',
  },
  ntpServerType => {
    '1' => 'valid',
    '2' => 'invalid',
  },
  sysAttachType => {
    '1' => 'other',
    '2' => 'dualAttach',
    '3' => 'singleAttach',
    '4' => 'nullAttach',
    '5' => 'dualPrio',
  },
  sysCommunityAccess => {
    '1' => 'other',
    '2' => 'readOnly',
    '3' => 'readWrite',
    '4' => 'readWriteAll',
  },
  syslogHostEnable => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  sysEnableIpPermitTraps => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  vlanPortAdminStatus => {
    '1' => 'static',
    '2' => 'dynamic',
  },
  tokenRingDripDistCrfMode => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  moduleSubType => {
    '1' => 'other',
    '2' => 'empty',
    '3' => 'wsf5510',
    '4' => 'wsf5511',
    '6' => 'wsx5304',
    '7' => 'wsf5520',
    '8' => 'wsf5521',
    '9' => 'wsf5531',
    '100' => 'wsf6020',
    '101' => 'wsf6020a',
    '102' => 'wsf6kpfc',
    '103' => 'wsf6kpfc2',
    '104' => 'wsf6kvpwr',
    '105' => 'wsf6kdfc',
    '106' => 'wsf6kpfc2a',
    '107' => 'wsf6kdfca',
    '200' => 'vsp300dfc',
    '201' => 'wsf6kpfc3a',
    '202' => 'wsf6kdfc3a',
    '203' => 'wsf6700dfc3a',
    '205' => 'wsf6kdfc3bxl',
    '206' => 'wsf6kpfc3bxl',
    '207' => 'wsf6700dfc3bxl',
    '208' => 'wsf6700cfc',
    '213' => 'm7600pfc3c',
    '216' => 'wsf6kpfc3b',
    '217' => 'wsf6700dfc3b',
    '218' => 'wsf6700dfc3c',
    '221' => 'wsf6700dfc3cxl',
    '223' => 'wsf6kdfc3b',
    '224' => 'mec6524pfc3c',
    '225' => 'sip600earl',
    '226' => 'vsf6kpfc3cxl',
    '227' => 'vsf6kpfc3c',
    '228' => 'c7600esmdfc3cxl',
    '229' => 'vsf6kpfc4',
    '230' => 'c7600esmdfc3c',
    '231' => 'wsf6kdfc4exl',
    '232' => 'c7600Es3cxl',
    '233' => 'c7600Es3c',
    '234' => 'wsf6kdfc4e',
    '235' => 'vsf6kpfc4xl',
    '236' => 'wsf6kdfc4axl',
    '237' => 'wsf6kdfc4a',
    '238' => 'c6880xpfc',
    '239' => 'c6880xlepfc',
    '240' => 'c6880xdfc',
    '241' => 'c6880xledfc',
  },
  ntpSummertimeStatus => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  moduleStatus => {
    '1' => 'other',
    '2' => 'ok',
    '3' => 'minorFault',
    '4' => 'majorFault',
  },
  sysEnableStpxTrap => {
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'enabledForInconOnly',
    '4' => 'enabledForRootOnly',
    '5' => 'enabledForLoopOnly',
    '6' => 'enabledForInconRootOnly',
    '7' => 'enabledForInconLoopOnly',
    '8' => 'enabledForRootLoopOnly',
  },
  sysExtendedRmonVlanModeEnable => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  portJumboFrameEnable => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  chassisPs2Status => {
    '1' => 'other',
    '2' => 'ok',
    '3' => 'minorFault',
    '4' => 'majorFault',
  },
  vlanPortOperStatus => {
    '1' => 'inactive',
    '2' => 'active',
    '3' => 'shutdown',
    '4' => 'vlanActiveFault',
  },
  sysBaudRate => {
    '600' => 'b600',
    '1200' => 'b1200',
    '2400' => 'b2400',
    '4800' => 'b4800',
    '9600' => 'b9600',
    '19200' => 'b19200',
    '38400' => 'b38400',
  },
  mcastEnableRgmp => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  traceRouteDataErrors => {
    '1' => 'icmpUnreachNet',
    '2' => 'icmpUnreachHost',
    '3' => 'icmpUnreachProtocol',
    '4' => 'icmpUnreachPort',
    '5' => 'icmpUnreachNeedFrag',
    '6' => 'icmpUnreachSrcFail',
    '7' => 'icmpUnreachNoNet',
    '8' => 'icmpUnreachNoHost',
    '9' => 'icmpUnreachHostIsolated',
    '10' => 'icmpUnreachNetProhib',
    '11' => 'icmpUnreachProhib',
    '12' => 'icmpUnreachNetTos',
    '13' => 'icmpUnreachHostTos',
    '14' => 'icmpUnreachAdmin',
    '15' => 'icmpUnreachHostPrec',
    '16' => 'icmpUnreachPrecedence',
    '17' => 'icmpUnknown',
    '18' => 'icmpTimeOut',
    '19' => 'icmpTTLExpired',
  },
  tokenRingDripDistributedCrf => {
    '1' => 'true',
    '2' => 'false',
  },
  vlanPortIslAdminStatus => {
    '1' => 'on',
    '2' => 'off',
    '3' => 'desirable',
    '4' => 'auto',
    '5' => 'onNoNegotiate',
  },
  chassisSysType => {
    '1' => 'other',
    '3' => 'wsc1000',
    '4' => 'wsc1001',
    '5' => 'wsc1100',
    '6' => 'wsc5000',
    '7' => 'wsc2900',
    '8' => 'wsc5500',
    '9' => 'wsc5002',
    '10' => 'wsc5505',
    '11' => 'wsc1200',
    '12' => 'wsc1400',
    '13' => 'wsc2926',
    '14' => 'wsc5509',
    '15' => 'wsc6006',
    '16' => 'wsc6009',
    '17' => 'wsc4003',
    '18' => 'wsc5500e',
    '19' => 'wsc4912g',
    '20' => 'wsc2948g',
    '22' => 'wsc6509',
    '23' => 'wsc6506',
    '24' => 'wsc4006',
    '25' => 'wsc6509NEB',
    '26' => 'wsc2980g',
    '27' => 'wsc6513',
    '28' => 'wsc2980ga',
    '30' => 'cisco7603',
    '31' => 'cisco7606',
    '32' => 'cisco7609',
    '33' => 'wsc6503',
    '34' => 'wsc6509NEBA',
    '35' => 'wsc4507',
    '36' => 'wsc4503',
    '37' => 'wsc4506',
    '38' => 'wsc65509',
    '40' => 'cisco7613',
    '41' => 'wsc2948ggetx',
    '42' => 'cisco7604',
    '43' => 'wsc6504e',
    '45' => 'mec6524gs8s',
    '48' => 'mec6524gt8s',
    '51' => 'wsc6509ve',
    '52' => 'cisco7603s',
    '54' => 'c6880xle',
    '55' => 'c6807xl',
    '56' => 'c6880x',
  },
  ntpBcastClient => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  portTopNMode => {
    '1' => 'portTopNForeground',
    '2' => 'portTopNBackground',
  },
  portOperStatus => {
    '1' => 'other',
    '2' => 'ok',
    '3' => 'minorFault',
    '4' => 'majorFault',
  },
  sysStatus => {
    '1' => 'other',
    '2' => 'ok',
    '3' => 'minorFault',
    '4' => 'majorFault',
  },
  vlanSpantreeEnable => {
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'notApplicable',
  },
  tacacsLoginAuthentication => {
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'enabledForTelnetOnly',
    '4' => 'enabledForConsoleOnly',
  },
  fileCopyResult => {
    '1' => 'inProgress',
    '2' => 'success',
    '3' => 'noResponse',
    '4' => 'tooManyRetries',
    '5' => 'noBuffers',
    '6' => 'noProcesses',
    '7' => 'badChecksum',
    '8' => 'badLength',
    '9' => 'badFlash',
    '10' => 'serverError',
    '11' => 'userCanceled',
    '12' => 'wrongCode',
    '13' => 'fileNotFound',
    '14' => 'invalidHost',
    '15' => 'invalidModule',
    '16' => 'accessViolation',
    '17' => 'unknownStatus',
    '18' => 'invalidStorageDevice',
    '19' => 'insufficientSpaceOnStorageDevice',
    '20' => 'insufficientDramSize',
    '21' => 'incompatibleImage',
    '22' => 'rcpError',
  },
  portOperTxFlowControl => {
    '1' => 'on',
    '2' => 'off',
    '3' => 'disagree',
  },
  voicePortOperDnsServerSource => {
    '1' => 'fromDhcp',
    '2' => 'fromPortConfig',
    '3' => 'fromSystemConfig',
  },
  portSpantreeFastStart => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  brouterEnableAPaRT => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  portCpbDot1x => {
    '1' => 'yes',
    '2' => 'no',
  },
  tokenRingPortSoftErrResetCounters => {
    '1' => 'noop',
    '2' => 'reset',
  },
  portType => {
    '1' => 'other',
    '2' => 'cddi',
    '3' => 'fddi',
    '4' => 'tppmd',
    '5' => 'mlt3',
    '6' => 'sddi',
    '7' => 'smf',
    '8' => 'e10BaseT',
    '9' => 'e10BaseF',
    '10' => 'scf',
    '11' => 'e100BaseTX',
    '12' => 'e100BaseT4',
    '13' => 'e100BaseF',
    '14' => 'atmOc3mmf',
    '15' => 'atmOc3smf',
    '16' => 'atmOc3utp',
    '17' => 'e100BaseFsm',
    '18' => 'e10a100BaseTX',
    '19' => 'mii',
    '20' => 'vlanRouter',
    '21' => 'remoteRouter',
    '22' => 'tokenring',
    '23' => 'atmOc12mmf',
    '24' => 'atmOc12smf',
    '25' => 'atmDs3',
    '26' => 'tokenringMmf',
    '27' => 'e1000BaseLX',
    '28' => 'e1000BaseSX',
    '29' => 'e1000BaseCX',
    '30' => 'networkAnalysis',
    '31' => 'e1000Empty',
    '32' => 'e1000BaseLH',
    '33' => 'e1000BaseT',
    '34' => 'e1000UnsupportedGbic',
    '35' => 'e1000BaseZX',
    '36' => 'depi2',
    '37' => 't1',
    '38' => 'e1',
    '39' => 'fxs',
    '40' => 'fxo',
    '41' => 'transcoding',
    '42' => 'conferencing',
    '43' => 'atmOc12mm',
    '44' => 'atmOc12smi',
    '45' => 'atmOc12sml',
    '46' => 'posOc12mm',
    '47' => 'posOc12smi',
    '48' => 'posOc12sml',
    '49' => 'posOc48sms',
    '50' => 'posOc48smi',
    '51' => 'posOc48sml',
    '52' => 'posOc3mm',
    '53' => 'posOc3smi',
    '54' => 'posOc3sml',
    '55' => 'intrusionDetect',
    '56' => 'e10GBaseCPX',
    '57' => 'e10GBaseLX4',
    '59' => 'e10GBaseEX4',
    '60' => 'e10GEmpty',
    '61' => 'e10a100a1000BaseT',
    '62' => 'dptOc48mm',
    '63' => 'dptOc48smi',
    '64' => 'dptOc48sml',
    '65' => 'e10GBaseLR',
    '66' => 'chOc12smi',
    '67' => 'chOc12mm',
    '68' => 'chOc48ss',
    '69' => 'chOc48smi',
    '70' => 'e10GBaseSX4',
    '71' => 'e10GBaseER',
    '72' => 'contentEngine',
    '73' => 'ssl',
    '74' => 'firewall',
    '75' => 'vpnIpSec',
    '76' => 'ct3',
    '77' => 'e1000BaseCwdm1470',
    '78' => 'e1000BaseCwdm1490',
    '79' => 'e1000BaseCwdm1510',
    '80' => 'e1000BaseCwdm1530',
    '81' => 'e1000BaseCwdm1550',
    '82' => 'e1000BaseCwdm1570',
    '83' => 'e1000BaseCwdm1590',
    '84' => 'e1000BaseCwdm1610',
    '85' => 'e1000BaseBT',
    '86' => 'e1000BaseUnapproved',
    '87' => 'chOc3smi',
    '88' => 'mcr',
    '89' => 'coe',
    '90' => 'mwa',
    '91' => 'psd',
    '92' => 'e100BaseLX',
    '93' => 'e10GBaseSR',
    '94' => 'e10GBaseCX4',
    '95' => 'e10GBaseWdm1550',
    '96' => 'e10GBaseEdc1310',
    '97' => 'e10GBaseSW',
    '98' => 'e10GBaseLW',
    '99' => 'e10GBaseEW',
    '100' => 'lwa',
    '101' => 'aons',
    '102' => 'sslVpn',
    '103' => 'e100BaseEmpty',
    '104' => 'adsm',
    '105' => 'agsm',
    '106' => 'aces',
    '109' => 'intrusionProtect',
    '110' => 'e1000BaseSvc',
    '111' => 'e10GBaseSvc',
    '113' => 'e40GBaseEmpty',
    '1000' => 'e1000BaseUnknown',
    '1001' => 'e10GBaseUnknown',
    '1002' => 'e10GBaseUnapproved',
    '1003' => 'e1000BaseWdmRxOnly',
    '1004' => 'e1000BaseDwdm3033',
    '1005' => 'e1000BaseDwdm3112',
    '1006' => 'e1000BaseDwdm3190',
    '1007' => 'e1000BaseDwdm3268',
    '1008' => 'e1000BaseDwdm3425',
    '1009' => 'e1000BaseDwdm3504',
    '1010' => 'e1000BaseDwdm3582',
    '1011' => 'e1000BaseDwdm3661',
    '1012' => 'e1000BaseDwdm3819',
    '1013' => 'e1000BaseDwdm3898',
    '1014' => 'e1000BaseDwdm3977',
    '1015' => 'e1000BaseDwdm4056',
    '1016' => 'e1000BaseDwdm4214',
    '1017' => 'e1000BaseDwdm4294',
    '1018' => 'e1000BaseDwdm4373',
    '1019' => 'e1000BaseDwdm4453',
    '1020' => 'e1000BaseDwdm4612',
    '1021' => 'e1000BaseDwdm4692',
    '1022' => 'e1000BaseDwdm4772',
    '1023' => 'e1000BaseDwdm4851',
    '1024' => 'e1000BaseDwdm5012',
    '1025' => 'e1000BaseDwdm5092',
    '1026' => 'e1000BaseDwdm5172',
    '1027' => 'e1000BaseDwdm5252',
    '1028' => 'e1000BaseDwdm5413',
    '1029' => 'e1000BaseDwdm5494',
    '1030' => 'e1000BaseDwdm5575',
    '1031' => 'e1000BaseDwdm5655',
    '1032' => 'e1000BaseDwdm5817',
    '1033' => 'e1000BaseDwdm5898',
    '1034' => 'e1000BaseDwdm5979',
    '1035' => 'e1000BaseDwdm6061',
    '1036' => 'e10GBaseWdmRxOnly',
    '1037' => 'e10GBaseDwdm3033',
    '1038' => 'e10GBaseDwdm3112',
    '1039' => 'e10GBaseDwdm3190',
    '1040' => 'e10GBaseDwdm3268',
    '1041' => 'e10GBaseDwdm3425',
    '1042' => 'e10GBaseDwdm3504',
    '1043' => 'e10GBaseDwdm3582',
    '1044' => 'e10GBaseDwdm3661',
    '1045' => 'e10GBaseDwdm3819',
    '1046' => 'e10GBaseDwdm3898',
    '1047' => 'e10GBaseDwdm3977',
    '1048' => 'e10GBaseDwdm4056',
    '1049' => 'e10GBaseDwdm4214',
    '1050' => 'e10GBaseDwdm4294',
    '1051' => 'e10GBaseDwdm4373',
    '1052' => 'e10GBaseDwdm4453',
    '1053' => 'e10GBaseDwdm4612',
    '1054' => 'e10GBaseDwdm4692',
    '1055' => 'e10GBaseDwdm4772',
    '1056' => 'e10GBaseDwdm4851',
    '1057' => 'e10GBaseDwdm5012',
    '1058' => 'e10GBaseDwdm5092',
    '1059' => 'e10GBaseDwdm5172',
    '1060' => 'e10GBaseDwdm5252',
    '1061' => 'e10GBaseDwdm5413',
    '1062' => 'e10GBaseDwdm5494',
    '1063' => 'e10GBaseDwdm5575',
    '1064' => 'e10GBaseDwdm5655',
    '1065' => 'e10GBaseDwdm5817',
    '1066' => 'e10GBaseDwdm5898',
    '1067' => 'e10GBaseDwdm5979',
    '1068' => 'e10GBaseDwdm6061',
    '1069' => 'e1000BaseBX10D',
    '1070' => 'e1000BaseBX10U',
    '1071' => 'e100BaseUnknown',
    '1072' => 'e100BaseUnapproved',
    '1073' => 'e100BaseSX',
    '1074' => 'e100BaseBX10D',
    '1075' => 'e100BaseBX10U',
    '1076' => 'e10GBaseBad',
    '1077' => 'e10GBaseZR',
    '1078' => 'e100BaseEX',
    '1079' => 'e100BaseZX',
    '1080' => 'e10GBaseLRM',
    '1081' => 'e10GBaseTPluggable',
    '1082' => 'e10GBaseCU1M',
    '1083' => 'e10GBaseCU3M',
    '1084' => 'e10GBaseCU5M',
    '1085' => 'e10GBaseCU7M',
    '1086' => 'e10GBaseCUdot3M',
    '1087' => 'e10GBaseCU2M',
    '1088' => 'e10GBaseCU4M',
    '1089' => 'e10GBaseCU6M',
    '1090' => 'e10GBaseUSR',
    '1091' => 'e10GBaseLRMSM',
    '1092' => 'e1000BaseDwdm3346',
    '1093' => 'e1000BaseDwdm3739',
    '1094' => 'e1000BaseDwdm4134',
    '1095' => 'e1000BaseDwdm4532',
    '1096' => 'e1000BaseDwdm4931',
    '1097' => 'e1000BaseDwdm5332',
    '1098' => 'e1000BaseDwdm5736',
    '1099' => 'e1000BaseDwdm6141',
    '1100' => 'e40GBaseLR',
    '1101' => 'e40GBaseSR',
    '1102' => 'e40GBaseUnapproved',
    '1104' => 'e10GBaseDwdm3347',
    '1105' => 'e10GBaseDwdm3740',
    '1106' => 'e10GBaseDwdm4135',
    '1107' => 'e10GBaseDwdm4532',
    '1108' => 'e10GBaseDwdm4932',
    '1109' => 'e10GBaseDwdm5333',
    '1110' => 'e10GBaseDwdm5736',
    '1111' => 'e10GBaseDwdm6141',
    '1112' => 'e10GBaseACU7M',
    '1113' => 'e10GBaseACU10M',
    '1114' => 'e1000BaseEXSMD',
    '1115' => 'e1000BaseZXSMD',
    '1116' => 'e1000BaseTE',
    '1117' => 'e1000BaseSXMMD',
    '1118' => 'e1000BaseLHSMD',
    '1119' => 'e100BaseFXGE',
  },
  syslogMessageSeverity => {
    '1' => 'emergencies',
    '2' => 'alerts',
    '3' => 'critical',
    '4' => 'errors',
    '5' => 'warnings',
    '6' => 'notification',
    '7' => 'informational',
    '8' => 'debugging',
  },
  tokenRingPortSoftErrEnable => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  sysExtendedRmonEnable => {
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'noNAMPresent',
  },
  sysTrapReceiverType => {
    '1' => 'valid',
    '2' => 'invalid',
  },
  portDuplex => {
    '1' => 'half',
    '2' => 'full',
    '3' => 'disagree',
    '4' => 'auto',
  },
  tokenRingPortMode => {
    '1' => 'auto',
    '2' => 'fdxCport',
    '3' => 'fdxStation',
    '4' => 'hdxCport',
    '5' => 'hdxStation',
    '7' => 'riro',
  },
  sysEnableBridgeTraps => {
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'enabledForNewRootOnly',
    '4' => 'enabledForTopoChangeOnly',
  },
  chassisPs1Status => {
    '1' => 'other',
    '2' => 'ok',
    '3' => 'minorFault',
    '4' => 'majorFault',
  },
  syslogServerType => {
    '1' => 'valid',
    '2' => 'invalid',
  },
  portAdminSpeed => {
    '1' => 'autoDetect',
    '2' => 'autoDetect10100',
    '10' => 's10G',
    '64000' => 's64000',
    '1544000' => 's1544000',
    '2000000' => 's2000000',
    '2048000' => 's2048000',
    '4000000' => 's4000000',
    '10000000' => 's10000000',
    '16000000' => 's16000000',
    '45000000' => 's45000000',
    '64000000' => 's64000000',
    '100000000' => 's100000000',
    '155000000' => 's155000000',
    '400000000' => 's400000000',
    '622000000' => 's622000000',
    '1000000000' => 's1000000000',
  },
  sysEnableVmpsTraps => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  portOperRxFlowControl => {
    '1' => 'on',
    '2' => 'off',
    '3' => 'disagree',
  },
  brouterEnableTransitEncapsulation => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  tokenRingDripRemotePortStatus => {
    '1' => 'active',
    '2' => 'inactive',
  },
  syslogConsoleEnable => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  moduleType => {
    '1' => 'other',
    '2' => 'empty',
    '3' => 'wsc1000',
    '4' => 'wsc1001',
    '5' => 'wsc1100',
    '11' => 'wsc1200',
    '12' => 'wsc1400',
    '13' => 'wsx1441',
    '14' => 'wsx1444',
    '15' => 'wsx1450',
    '16' => 'wsx1483',
    '17' => 'wsx1454',
    '18' => 'wsx1455',
    '19' => 'wsx1431',
    '20' => 'wsx1465',
    '21' => 'wsx1436',
    '22' => 'wsx1434',
    '23' => 'wsx5009',
    '24' => 'wsx5013',
    '25' => 'wsx5011',
    '26' => 'wsx5010',
    '27' => 'wsx5113',
    '28' => 'wsx5101',
    '29' => 'wsx5103',
    '30' => 'wsx5104',
    '32' => 'wsx5155',
    '33' => 'wsx5154',
    '34' => 'wsx5153',
    '35' => 'wsx5111',
    '36' => 'wsx5213',
    '37' => 'wsx5020',
    '38' => 'wsx5006',
    '39' => 'wsx5005',
    '40' => 'wsx5509',
    '41' => 'wsx5506',
    '42' => 'wsx5505',
    '43' => 'wsx5156',
    '44' => 'wsx5157',
    '45' => 'wsx5158',
    '46' => 'wsx5030',
    '47' => 'wsx5114',
    '48' => 'wsx5223',
    '49' => 'wsx5224',
    '50' => 'wsx5012',
    '52' => 'wsx5302',
    '53' => 'wsx5213a',
    '54' => 'wsx5380',
    '55' => 'wsx5201',
    '56' => 'wsx5203',
    '57' => 'wsx5530',
    '61' => 'wsx5161',
    '62' => 'wsx5162',
    '65' => 'wsx5165',
    '66' => 'wsx5166',
    '67' => 'wsx5031',
    '68' => 'wsx5410',
    '69' => 'wsx5403',
    '73' => 'wsx5201r',
    '74' => 'wsx5225r',
    '75' => 'wsx5014',
    '76' => 'wsx5015',
    '77' => 'wsx5236',
    '78' => 'wsx5540',
    '79' => 'wsx5234',
    '81' => 'wsx5012a',
    '82' => 'wsx5167',
    '83' => 'wsx5239',
    '84' => 'wsx5168',
    '85' => 'wsx5305',
    '87' => 'wsx5550',
    '88' => 'wsf5541',
    '91' => 'wsx5534',
    '92' => 'wsx5536',
    '96' => 'wsx5237',
    '200' => 'wsx6ksup12ge',
    '201' => 'wsx6408gbic',
    '202' => 'wsx6224mmmt',
    '203' => 'wsx6248rj45',
    '204' => 'wsx6248tel',
    '206' => 'wsx6302msm',
    '207' => 'wsf6kmsfc',
    '208' => 'wsx6024flmt',
    '209' => 'wsx6101oc12mmf',
    '210' => 'wsx6101oc12smf',
    '211' => 'wsx6416gemt',
    '212' => 'wsx61822pa',
    '213' => 'osm2oc12AtmMM',
    '214' => 'osm2oc12AtmSI',
    '216' => 'osm4oc12PosMM',
    '217' => 'osm4oc12PosSI',
    '218' => 'osm4oc12PosSL',
    '219' => 'wsx6ksup1a2ge',
    '220' => 'wsx6302amsm',
    '221' => 'wsx6416gbic',
    '222' => 'wsx6224ammmt',
    '223' => 'wsx6380nam',
    '224' => 'wsx6248arj45',
    '225' => 'wsx6248atel',
    '226' => 'wsx6408agbic',
    '229' => 'wsx6608t1',
    '230' => 'wsx6608e1',
    '231' => 'wsx6624fxs',
    '233' => 'wsx6316getx',
    '234' => 'wsf6kmsfc2',
    '235' => 'wsx6324mmmt',
    '236' => 'wsx6348rj45',
    '237' => 'wsx6ksup22ge',
    '238' => 'wsx6324sm',
    '239' => 'wsx6516gbic',
    '240' => 'osm4geWanGbic',
    '241' => 'osm1oc48PosSS',
    '242' => 'osm1oc48PosSI',
    '243' => 'osm1oc48PosSL',
    '244' => 'wsx6381ids',
    '245' => 'wsc6500sfm',
    '246' => 'osm16oc3PosMM',
    '247' => 'osm16oc3PosSI',
    '248' => 'osm16oc3PosSL',
    '249' => 'osm2oc12PosMM',
    '250' => 'osm2oc12PosSI',
    '251' => 'osm2oc12PosSL',
    '252' => 'wsx650210ge',
    '253' => 'osm8oc3PosMM',
    '254' => 'osm8oc3PosSI',
    '255' => 'osm8oc3PosSL',
    '258' => 'wsx6548rj45',
    '259' => 'wsx6524mmmt',
    '260' => 'wsx6066SlbApc',
    '261' => 'wsx6516getx',
    '265' => 'osm2oc48OneDptSS',
    '266' => 'osm2oc48OneDptSI',
    '267' => 'osm2oc48OneDptSL',
    '268' => 'osm2oc48OneDptSSDual',
    '269' => 'osm2oc48OneDptSIDual',
    '270' => 'osm2oc48OneDptSLDual',
    '271' => 'wsx6816gbic',
    '272' => 'osm4choc12T3MM',
    '273' => 'osm4choc12T3SI',
    '274' => 'osm8choc12T3MM',
    '275' => 'osm8choc12T3SI',
    '276' => 'osm1choc48T3SS',
    '277' => 'osm2choc48T3SS',
    '278' => 'wsx6500sfm2',
    '279' => 'osm1choc48T3SI',
    '280' => 'osm2choc48T3SI',
    '281' => 'wsx6348rj21',
    '282' => 'wsx6548rj21',
    '284' => 'wsSvcCmm',
    '285' => 'wsx650110gex4',
    '286' => 'osm4oc3PosSI',
    '289' => 'osm4oc3PosMM',
    '290' => 'wsSvcIdsm2',
    '291' => 'wsSvcNam2',
    '292' => 'wsSvcFwm1',
    '293' => 'wsSvcCe1',
    '294' => 'wsSvcSsl1',
    '295' => 'osm8choc3DS0SI',
    '296' => 'osm4choc3DS0SI',
    '297' => 'osm1choc12T1SI',
    '300' => 'wsx4012',
    '301' => 'wsx4148rj',
    '302' => 'wsx4232gbrj',
    '303' => 'wsx4306gb',
    '304' => 'wsx4418gb',
    '305' => 'wsx44162gbtx',
    '306' => 'wsx4912gb',
    '307' => 'wsx2948gbrj',
    '309' => 'wsx2948',
    '310' => 'wsx4912',
    '311' => 'wsx4424sxmt',
    '312' => 'wsx4232rjxx',
    '313' => 'wsx4148rj21',
    '317' => 'wsx4124fxmt',
    '318' => 'wsx4013',
    '319' => 'wsx4232l3',
    '320' => 'wsx4604gwy',
    '321' => 'wsx44122Gbtx',
    '322' => 'wsx2980',
    '323' => 'wsx2980rj',
    '324' => 'wsx2980gbrj',
    '325' => 'wsx4019',
    '326' => 'wsx4148rj45v',
    '330' => 'wsx4424gbrj45',
    '331' => 'wsx4148fxmt',
    '332' => 'wsx4448gblx',
    '334' => 'wsx4448gbrj45',
    '337' => 'wsx4148lxmt',
    '339' => 'wsx4548gbrj45',
    '340' => 'wsx4548gbrj45v',
    '341' => 'wsx4248rj21v',
    '342' => 'wsx4302gb',
    '343' => 'wsx4248rj45v',
    '345' => 'wsx2948ggetx',
    '346' => 'wsx2948ggetxgbrj',
    '502' => 'wsx6516aGbic',
    '503' => 'wsx6148getx',
    '506' => 'wsx6148x2rj45',
    '507' => 'wsx6196rj21',
    '509' => 'wssup32ge3b',
    '510' => 'wssup3210ge3b',
    '511' => 'mec6524gs8s',
    '512' => 'mec6524gt8s',
    '515' => 'wssup32pge',
    '516' => 'wssup32p10ge',
    '597' => 'wssvcpisa32',
    '598' => 'me6524msfc2a',
    '599' => 'wsf6kmsfc2a',
    '600' => 'osm12ct3T1',
    '601' => 'osm12t3e3',
    '602' => 'osm24t3e3',
    '603' => 'osm4GeWanGbicPlus',
    '604' => 'osm1choc12T3SI',
    '605' => 'osm2choc12T3SI',
    '606' => 'osm2oc12AtmMMPlus',
    '607' => 'osm2oc12AtmSIPlus',
    '608' => 'osm2oc12PosMMPlus',
    '609' => 'osm2oc12PosSIPlus',
    '610' => 'osm16oc3PosSIPlus',
    '611' => 'osm1oc48PosSSPlus',
    '612' => 'osm1oc48PosSIPlus',
    '613' => 'osm1oc48PosSLPlus',
    '614' => 'osm4oc3PosSIPlus',
    '615' => 'osm8oc3PosSLPlus',
    '616' => 'osm8oc3PosSIPlus',
    '617' => 'osm4oc12PosSIPlus',
    '618' => 'c7600Es4Tg3cxl',
    '620' => 'c7600Es2Tg3cxl',
    '625' => 'c76EsXt4Tg3cxl',
    '626' => 'c76EsXt2Tg3cxl',
    '627' => 'c7600Es4Tg3c',
    '629' => 'c7600Es2Tg3c',
    '633' => 'c76EsXt4Tg3c',
    '634' => 'c76EsXt2Tg3c',
    '903' => 'wsSvcIpSec1',
    '910' => 'wsSvcMwam1',
    '911' => 'wsSvcCsg1',
    '912' => 'wsx6148rj45v',
    '913' => 'wsx6148rj21v',
    '914' => 'wsSvcNam1',
    '915' => 'wsx6548getx',
    '919' => 'wsSvcPsd1',
    '920' => 'wsx6066SlbSk9',
    '921' => 'wsx6148agetx',
    '923' => 'wsx6148arj45',
    '924' => 'wsSvcWlan1k9',
    '925' => 'wsSvcAon1k9',
    '926' => 'ace106500k9',
    '927' => 'wsSvcWebVpnk9',
    '928' => 'wsx6148FeSfp',
    '929' => 'wsSvcAdm1k9',
    '930' => 'wsSvcAgm1k9',
    '936' => 'ace046500k9',
    '940' => 'wsSvcSamiBb',
    '946' => 'wsSvcWism2k9',
    '947' => 'wsSvcAsaSm1',
    '949' => 'wsSvcNam3k9',
    '950' => 'wsSvcAsaSm1k7',
    '951' => 'wsSvcVse1k9',
    '1001' => 'wssup720',
    '1002' => 'wssup720base',
    '1004' => 'm7600Sip600',
    '1007' => 'wsx6748getx',
    '1008' => 'wsx670410ge',
    '1009' => 'wsx6748sfp',
    '1010' => 'wsx6724sfp',
    '1016' => 'wsx670810ge',
    '1021' => 'vss72010g',
    '1023' => 'wsx6708a10ge',
    '1027' => 'wsx671610ge',
    '1031' => 'vssup2t10g',
    '1032' => 'wsx6148ege45at',
    '1033' => 'wsx671610t',
    '1034' => 'wsx690810g',
    '1035' => 'wsx690440g',
    '1036' => 'wsx6148egetx',
    '1037' => 'wsx6848tx',
    '1039' => 'wsx6848sfp',
    '1040' => 'wsx6824sfp',
    '1042' => 'wsx681610ge',
    '1043' => 'wsx681610t',
    '1101' => 'wsx65822pa',
    '1102' => 'm7600Sip200',
    '1103' => 'm7600Sip400',
    '1104' => 'c7600ssc400',
    '1105' => 'c7600ssc600',
    '1106' => 'esm2x10ge',
    '1301' => 'c6800ia48td',
    '1304' => 'c6800ia48fpd',
    '1400' => 'c6880x16p10g',
    '1401' => 'c6880x',
    '1402' => 'c6880xle16p10g',
    '1403' => 'c6880xle',
    '1800' => 'rsp720',
    '1801' => 'rsp720base',
    '1805' => 'c7600msfc4',
  },
  chassisMinorAlarm => {
    '1' => 'off',
    '2' => 'on',
  },
  sysConsolePrimaryEnableAuthentication => {
    '1' => 'tacacs',
    '2' => 'radius',
    '3' => 'local',
  },
  vlanPortSwitchLevel => {
    '1' => 'normal',
    '2' => 'high',
    '3' => 'notApplicable',
  },
  tokenRingDripLocalPortStatus => {
    '1' => 'active',
    '2' => 'inactive',
  },
  portSecurityAdminStatus => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  sysReset => {
    '1' => 'other',
    '2' => 'reset',
    '3' => 'resetMinDown',
  },
  chassisComponentType => {
    '1' => 'unknown',
    '2' => 'wsc6000cl',
    '3' => 'wsc6000vtt',
    '4' => 'wsc6000tempSensor',
    '5' => 'wsc6513Clock',
    '6' => 'clk7600',
    '7' => 'ws9SlotFan',
    '8' => 'fanMod9',
    '10' => 'wsc6506eFan',
    '11' => 'wsc6509eFan',
    '13' => 'wsc6503eFan',
    '14' => 'wsc6000vtte',
    '15' => 'fanMod4Hs',
    '16' => 'fan6524',
    '17' => 'fanMod6Shs',
    '18' => 'fanMod9Shs',
    '19' => 'fanMod9St',
    '20' => 'wsc6509veFan',
    '21' => 'fanMod3Hs',
    '25' => 'c6880xFan',
    '26' => 'c6807xlFan',
    '27' => 'c6800xl33vcon',
  },
  monitorEnable => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOSTACKWISEMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCO-STACKWISE-MIB'} = {
  url => '',
  name => 'CISCO-STACKWISE-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'CISCO-STACKWISE-MIB'} =
    '1.3.6.1.4.1.9.9.500.1';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCO-STACKWISE-MIB'} = {
  ciscoStackWiseMIB => '1.3.6.1.4.1.9.9.500',
  ciscoStackWiseMIBNotifs => '1.3.6.1.4.1.9.9.500.0',
  cswMIBNotifications => '1.3.6.1.4.1.9.9.500.0.0',
  ciscoStackWiseMIBObjects => '1.3.6.1.4.1.9.9.500.1',
  cswGlobals => '1.3.6.1.4.1.9.9.500.1.1',
  cswMaxSwitchNum => '1.3.6.1.4.1.9.9.500.1.1.1',
  cswMaxSwitchConfigPriority => '1.3.6.1.4.1.9.9.500.1.1.2',
  cswRingRedundant => '1.3.6.1.4.1.9.9.500.1.1.3',
  cswRingRedundantDefinition => 'SNMPv2-TC-v1-MIB::TruthValue',
  cswEnableStackNotifications => '1.3.6.1.4.1.9.9.500.1.1.4',
  cswEnableIndividualStackNotifications => '1.3.6.1.4.1.9.9.500.1.1.5',
  cswStackDomainNum => '1.3.6.1.4.1.9.9.500.1.1.6',
  cswStackType => '1.3.6.1.4.1.9.9.500.1.1.7',
  cswStackBandWidth => '1.3.6.1.4.1.9.9.500.1.1.8',
  cswStackInfo => '1.3.6.1.4.1.9.9.500.1.2',
  cswSwitchInfoTable => '1.3.6.1.4.1.9.9.500.1.2.1',
  cswSwitchInfoEntry => '1.3.6.1.4.1.9.9.500.1.2.1.1',
  cswSwitchNumCurrent => '1.3.6.1.4.1.9.9.500.1.2.1.1.1',
  cswSwitchNumNextReload => '1.3.6.1.4.1.9.9.500.1.2.1.1.2',
  cswSwitchRole => '1.3.6.1.4.1.9.9.500.1.2.1.1.3',
  cswSwitchRoleDefinition => 'CISCO-STACKWISE-MIB::cswSwitchRole',
  cswSwitchSwPriority => '1.3.6.1.4.1.9.9.500.1.2.1.1.4',
  cswSwitchHwPriority => '1.3.6.1.4.1.9.9.500.1.2.1.1.5',
  cswSwitchState => '1.3.6.1.4.1.9.9.500.1.2.1.1.6',
  cswSwitchStateDefinition => 'CISCO-STACKWISE-MIB::cswSwitchState',
  cswSwitchMacAddress => '1.3.6.1.4.1.9.9.500.1.2.1.1.7',
  cswSwitchSoftwareImage => '1.3.6.1.4.1.9.9.500.1.2.1.1.8',
  cswSwitchPowerBudget => '1.3.6.1.4.1.9.9.500.1.2.1.1.9',
  cswSwitchPowerCommited => '1.3.6.1.4.1.9.9.500.1.2.1.1.10',
  cswSwitchSystemPowerPriority => '1.3.6.1.4.1.9.9.500.1.2.1.1.11',
  cswSwitchPoeDevicesLowPriority => '1.3.6.1.4.1.9.9.500.1.2.1.1.12',
  cswSwitchPoeDevicesHighPriority => '1.3.6.1.4.1.9.9.500.1.2.1.1.13',
  cswSwitchPowerAllocated => '1.3.6.1.4.1.9.9.500.1.2.1.1.14',
  cswStackPortInfoTable => '1.3.6.1.4.1.9.9.500.1.2.2',
  cswStackPortInfoEntry => '1.3.6.1.4.1.9.9.500.1.2.2.1',
  cswStackPortOperStatus => '1.3.6.1.4.1.9.9.500.1.2.2.1.1',
  cswStackPortOperStatusDefinition => 'CISCO-STACKWISE-MIB::cswStackPortOperStatus',
  cswStackPortNeighbor => '1.3.6.1.4.1.9.9.500.1.2.2.1.2',
  cswDistrStackLinkInfoTable => '1.3.6.1.4.1.9.9.500.1.2.3',
  cswDistrStackLinkInfoEntry => '1.3.6.1.4.1.9.9.500.1.2.3.1',
  cswDSLindex => '1.3.6.1.4.1.9.9.500.1.2.3.1.1',
  cswDistrStackLinkBundleOperStatus => '1.3.6.1.4.1.9.9.500.1.2.3.1.2',
  cswDistrStackLinkBundleOperStatusDefinition => 'CISCO-STACKWISE-MIB::cswDistrStackLinkBundleOperStatus',
  cswDistrStackPhyPortInfoTable => '1.3.6.1.4.1.9.9.500.1.2.4',
  cswDistrStackPhyPortInfoEntry => '1.3.6.1.4.1.9.9.500.1.2.4.1',
  cswDistrStackPhyPort => '1.3.6.1.4.1.9.9.500.1.2.4.1.1',
  cswDistrStackPhyPortOperStatus => '1.3.6.1.4.1.9.9.500.1.2.4.1.2',
  cswDistrStackPhyPortOperStatusDefinition => 'CISCO-STACKWISE-MIB::cswDistrStackPhyPortOperStatus',
  cswDistrStackPhyPortNbr => '1.3.6.1.4.1.9.9.500.1.2.4.1.3',
  cswDistrStackPhyPortNbrsw => '1.3.6.1.4.1.9.9.500.1.2.4.1.4',
  cswStackPowerInfo => '1.3.6.1.4.1.9.9.500.1.3',
  cswStackPowerInfoTable => '1.3.6.1.4.1.9.9.500.1.3.1',
  cswStackPowerInfoEntry => '1.3.6.1.4.1.9.9.500.1.3.1.1',
  cswStackPowerStackNumber => '1.3.6.1.4.1.9.9.500.1.3.1.1.1',
  cswStackPowerMode => '1.3.6.1.4.1.9.9.500.1.3.1.1.2',
  cswStackPowerModeDefinition => 'CISCO-STACKWISE-MIB::CswPowerStackMode',
  cswStackPowerMasterMacAddress => '1.3.6.1.4.1.9.9.500.1.3.1.1.3',
  cswStackPowerMasterSwitchNum => '1.3.6.1.4.1.9.9.500.1.3.1.1.4',
  cswStackPowerNumMembers => '1.3.6.1.4.1.9.9.500.1.3.1.1.5',
  cswStackPowerType => '1.3.6.1.4.1.9.9.500.1.3.1.1.6',
  cswStackPowerTypeDefinition => 'CISCO-STACKWISE-MIB::CswPowerStackType',
  cswStackPowerName => '1.3.6.1.4.1.9.9.500.1.3.1.1.7',
  cswStackPowerPortInfoTable => '1.3.6.1.4.1.9.9.500.1.3.2',
  cswStackPowerPortInfoEntry => '1.3.6.1.4.1.9.9.500.1.3.2.1',
  cswStackPowerPortIndex => '1.3.6.1.4.1.9.9.500.1.3.2.1.1',
  cswStackPowerPortOperStatus => '1.3.6.1.4.1.9.9.500.1.3.2.1.2',
  cswStackPowerPortOperStatusDefinition => 'CISCO-STACKWISE-MIB::cswStackPowerPortOperStatus',
  cswStackPowerPortNeighborMacAddress => '1.3.6.1.4.1.9.9.500.1.3.2.1.3',
  cswStackPowerPortNeighborSwitchNum => '1.3.6.1.4.1.9.9.500.1.3.2.1.4',
  cswStackPowerPortLinkStatus => '1.3.6.1.4.1.9.9.500.1.3.2.1.5',
  cswStackPowerPortLinkStatusDefinition => 'CISCO-STACKWISE-MIB::cswStackPowerPortLinkStatus',
  cswStackPowerPortOverCurrentThreshold => '1.3.6.1.4.1.9.9.500.1.3.2.1.6',
  cswStackPowerPortName => '1.3.6.1.4.1.9.9.500.1.3.2.1.7',
  ciscoStackWiseMIBConform => '1.3.6.1.4.1.9.9.500.2',
  cswStackWiseMIBCompliances => '1.3.6.1.4.1.9.9.500.2.1',
  cswStackWiseMIBGroups => '1.3.6.1.4.1.9.9.500.2.2',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'CISCO-STACKWISE-MIB'} = {
  CswPowerStackType => {
    '1' => 'ring',
    '2' => 'star',
  },
  CswPowerStackMode => {
    '1' => 'powerSharing',
    '2' => 'redundant',
    '3' => 'powerSharingStrict',
    '4' => 'redundantStrict',
  },
  cswDistrStackPhyPortOperStatus => {
    '1' => 'up',
    '2' => 'down',
  },
  cswStackPowerPortLinkStatus => {
    '1' => 'up',
    '2' => 'down',
  },
  cswSwitchState => {
    '1' => 'waiting',
    '2' => 'progressing',
    '3' => 'added',
    '4' => 'ready',
    '5' => 'sdmMismatch',
    '6' => 'verMismatch',
    '7' => 'featureMismatch',
    '8' => 'newMasterInit',
    '9' => 'provisioned',
    '10' => 'invalid',
    '11' => 'removed',
  },
  cswDistrStackLinkBundleOperStatus => {
    '1' => 'up',
    '2' => 'down',
  },
  cswStackPortOperStatus => {
    '1' => 'up',
    '2' => 'down',
    '3' => 'forcedDown',
  },
  cswSwitchRole => {
    '1' => 'master',
    '2' => 'member',
    '3' => 'notMember',
    '4' => 'standby',
  },
  cswStackPowerPortOperStatus => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOSYSTEMEXTMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCO-SYSTEM-EXT-MIB'} = {
  url => '',
  name => 'CISCO-SYSTEM-EXT-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCO-SYSTEM-EXT-MIB'} = {
  'cseSysCPUUtilization' => '1.3.6.1.4.1.9.9.305.1.1.1.0',
  'cseSysMemoryUtilization' => '1.3.6.1.4.1.9.9.305.1.1.2.0',
  'cseSysConfLastChange' => '1.3.6.1.4.1.9.9.305.1.1.3.0',
  'cseSysAutoSync' => '1.3.6.1.4.1.9.9.305.1.1.4.0',
  'cseSysAutoSyncState' => '1.3.6.1.4.1.9.9.305.1.1.5.0',
  'cseWriteErase' => '1.3.6.1.4.1.9.9.305.1.1.6.0',
  'cseSysConsolePortStatus' => '1.3.6.1.4.1.9.9.305.1.1.7.0',
  'cseSysTelnetServiceActivation' => '1.3.6.1.4.1.9.9.305.1.1.8.0',
  'cseSysFIPSModeActivation' => '1.3.6.1.4.1.9.9.305.1.1.9.0',
  'cseSysUpTime' => '1.3.6.1.4.1.9.9.305.1.1.10.0',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::CISCOVTPMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CISCO-VTP-MIB'} = {
  url => '',
  name => 'CISCO-VTP-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CISCO-VTP-MIB'} = {
  'vlanTrunkPortTable' => '1.3.6.1.4.1.9.9.46.1.6.1',
  'vlanTrunkPortEntry' => '1.3.6.1.4.1.9.9.46.1.6.1.1',
  'vlanTrunkPortIfIndex' => '1.3.6.1.4.1.9.9.46.1.6.1.1.1',
  'vlanTrunkPortManagementDomain' => '1.3.6.1.4.1.9.9.46.1.6.1.1.2',
  'vlanTrunkPortEncapsulationType' => '1.3.6.1.4.1.9.9.46.1.6.1.1.3',
  'vlanTrunkPortVlansEnabled' => '1.3.6.1.4.1.9.9.46.1.6.1.1.4',
  'vlanTrunkPortNativeVlan' => '1.3.6.1.4.1.9.9.46.1.6.1.1.5',
  'vlanTrunkPortRowStatus' => '1.3.6.1.4.1.9.9.46.1.6.1.1.6',
  'vlanTrunkPortInJoins' => '1.3.6.1.4.1.9.9.46.1.6.1.1.7',
  'vlanTrunkPortOutJoins' => '1.3.6.1.4.1.9.9.46.1.6.1.1.8',
  'vlanTrunkPortOldAdverts' => '1.3.6.1.4.1.9.9.46.1.6.1.1.9',
  'vlanTrunkPortVlansPruningEligible' => '1.3.6.1.4.1.9.9.46.1.6.1.1.10',
  'vlanTrunkPortVlansXmitJoined' => '1.3.6.1.4.1.9.9.46.1.6.1.1.11',
  'vlanTrunkPortVlansRcvJoined' => '1.3.6.1.4.1.9.9.46.1.6.1.1.12',
  'vlanTrunkPortDynamicState' => '1.3.6.1.4.1.9.9.46.1.6.1.1.13',
  'vlanTrunkPortDynamicStatus' => '1.3.6.1.4.1.9.9.46.1.6.1.1.14',
  'vlanTrunkPortDynamicStatusDefinition' => {
    '1' => 'trunking',
    '2' => 'notTrunking',
  },
  'vlanTrunkPortVtpEnabled' => '1.3.6.1.4.1.9.9.46.1.6.1.1.15',
  'vlanTrunkPortEncapsulationOperType' => '1.3.6.1.4.1.9.9.46.1.6.1.1.16',
  'vlanTrunkPortVlansEnabled2k' => '1.3.6.1.4.1.9.9.46.1.6.1.1.17',
  'vlanTrunkPortVlansEnabled3k' => '1.3.6.1.4.1.9.9.46.1.6.1.1.18',
  'vlanTrunkPortVlansEnabled4k' => '1.3.6.1.4.1.9.9.46.1.6.1.1.19',
  'vtpVlansPruningEligible2k' => '1.3.6.1.4.1.9.9.46.1.6.1.1.20',
  'vtpVlansPruningEligible3k' => '1.3.6.1.4.1.9.9.46.1.6.1.1.21',
  'vtpVlansPruningEligible4k' => '1.3.6.1.4.1.9.9.46.1.6.1.1.22',
  'vlanTrunkPortVlansXmitJoined2k' => '1.3.6.1.4.1.9.9.46.1.6.1.1.23',
  'vlanTrunkPortVlansXmitJoined3k' => '1.3.6.1.4.1.9.9.46.1.6.1.1.24',
  'vlanTrunkPortVlansXmitJoined4k' => '1.3.6.1.4.1.9.9.46.1.6.1.1.25',
  'vlanTrunkPortVlansRcvJoined2k' => '1.3.6.1.4.1.9.9.46.1.6.1.1.26',
  'vlanTrunkPortVlansRcvJoined3k' => '1.3.6.1.4.1.9.9.46.1.6.1.1.27',
  'vlanTrunkPortVlansRcvJoined4k' => '1.3.6.1.4.1.9.9.46.1.6.1.1.28',
  'vlanTrunkPortDot1qTunnel' => '1.3.6.1.4.1.9.9.46.1.6.1.1.29',
  'vlanTrunkPortVlansActiveFirst2k' => '1.3.6.1.4.1.9.9.46.1.6.1.1.30',
  'vlanTrunkPortVlansActiveSecond2k' => '1.3.6.1.4.1.9.9.46.1.6.1.1.31',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::CLAVISTERMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'CLAVISTER-MIB'} = {
  url => '',
  name => 'CLAVISTER-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'CLAVISTER-MIB'} = {
  'clvSystem' => '1.3.6.1.4.1.5089.1.2.1',
  'clvSysCpuLoad' => '1.3.6.1.4.1.5089.1.2.1.1.0',
  'clvHWSensorTable' => '1.3.6.1.4.1.5089.1.2.1.11',
  'clvHWSensorEntry' => '1.3.6.1.4.1.5089.1.2.1.11.1',
  'clvHWSensorIndex' => '1.3.6.1.4.1.5089.1.2.1.11.1.1',
  'clvHWSensorName' => '1.3.6.1.4.1.5089.1.2.1.11.1.2',
  'clvHWSensorValue' => '1.3.6.1.4.1.5089.1.2.1.11.1.3',
  'clvHWSensorUnit' => '1.3.6.1.4.1.5089.1.2.1.11.1.4',
  'clvSysMemUsage' => '1.3.6.1.4.1.5089.1.2.1.12.0',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::DISKMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'DISK-MIB'} = {
  url => '',
  name => 'DISK-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'DISK-MIB'} = {
  'deviceDiskValueTable' => '1.3.6.1.4.1.3417.2.2.1.1.1',
  'deviceDiskValueEntry' => '1.3.6.1.4.1.3417.2.2.1.1.1.1',
  'deviceDiskIndex' => '1.3.6.1.4.1.3417.2.2.1.1.1.1.1',
  'deviceDiskTrapEnabled' => '1.3.6.1.4.1.3417.2.2.1.1.1.1.2',
  'deviceDiskStatus' => '1.3.6.1.4.1.3417.2.2.1.1.1.1.3',
  'deviceDiskStatusDefinition' => {
    '1' => 'present',
    '2' => 'initializing',
    '3' => 'inserted',
    '4' => 'offline',
    '5' => 'removed',
    '6' => 'not-present',
    '7' => 'empty',
    '8' => 'bad',
    '9' => 'unknown',
  },
  'deviceDiskTimeStamp' => '1.3.6.1.4.1.3417.2.2.1.1.1.1.4',
  'deviceDiskVendor' => '1.3.6.1.4.1.3417.2.2.1.1.1.1.5',
  'deviceDiskProduct' => '1.3.6.1.4.1.3417.2.2.1.1.1.1.6',
  'deviceDiskRevision' => '1.3.6.1.4.1.3417.2.2.1.1.1.1.7',
  'deviceDiskSerialN' => '1.3.6.1.4.1.3417.2.2.1.1.1.1.8',
  'deviceDiskBlockSize' => '1.3.6.1.4.1.3417.2.2.1.1.1.1.9',
  'deviceDiskBlockCount' => '1.3.6.1.4.1.3417.2.2.1.1.1.1.10',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::ELTEXMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'ELTEX-MIB'} = {
  url => '',
  name => 'ELTEX-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'ELTEX-MIB'} = {
# The table of power supply status maintained by the environmental monitor card.
  'eltexPowerSupplyTable' => '1.3.6.1.4.1.89.83.1.2',
# An entry in the power supply status table, representing the status of the
# associated power supply maintained by the environmental monitor card.
  'eltexPowerSupplyEntry' => '1.3.6.1.4.1.89.83.1.2.1',
# An entry in the power supply status table, representing the status of the
# associated power supply maintained by the environmental monitor card.
  'eltexPowerSupplyId' => '1.3.6.1.4.1.89.83.1.2.1.5',
# Textual description of the power supply being instrumented. This description
# is a short textual label, suitable as a human-sensible identification for the
# rest of the information in the entry.
  'eltexPowerSupplyDescription' => '1.3.6.1.4.1.89.83.1.2.1.2',
# The mandatory state of the power supply being instrumented.eltexSensorDescription
  'eltexPowerSupplyStatus' => '1.3.6.1.4.1.89.83.1.2.1.3',
  'eltexPowerSupplyStatusDefinition' => {
    '1' => 'normal',
    '2' => 'warning',
    '3' => 'critical',
    '4' => 'shutdown',
    '5' => 'notPresent',
    '6' => 'notFunctioning',
  },
  'eltexSensorTable' => '1.3.6.1.4.1.89.83.2.1.1',
# Information about a particular physical sensor. An entry in this table
# describes the present reading of a sensor, the measurement units and scale,
# and sensor operational status. Entries are created in this table by the agent.
# An entry for each physical sensor SHOULD be created at the same time as the
# associated entPhysicalEntry. An entry SHOULD be destroyed if the associated
# entPhysicalEntry is destroyed.
  'eltexSensorEntry' => '1.3.6.1.4.1.89.83.2.1.1.1',
# The number of decimal places of precision in fixed-point sensor values
# returned by the associated entPhySensorValue object. This object SHOULD be set
# to '0' when the associated entPhySensorType value is not a fixed-point
# type: e.g., 'percentRH(9)', 'rpm(10)', 'cmm(11)', or 'truthvalue(12)'. This
# object SHOULD be set by the agent during entry creation, and the value SHOULD
# NOT change during operation.
  'eltexSensorId' => '1.3.6.1.4.1.89.83.2.1.1.1.3',
# A textual description of the data units that should be used in the display of
# entPhySensorValue.
  'eltexSensorDescription' => '1.3.6.1.4.1.89.83.2.1.1.1.6',
# The most recent measurement obtained by the agent for this sensor. To
# correctly interpret the value of this object, the associated entPhySensorType,
# entPhySensorScale, and entPhySensorPrecision objects must also be examined.
  'eltexSensorStatus' => '1.3.6.1.4.1.89.83.2.1.1.1.4',
# Type of sensor
  'eltexSensorType' => '1.3.6.1.4.1.89.83.2.1.1.1.1',
  'eltexSensorTypeDefinition' => {
    '8' => 'C',
    '10' => 'rpm',
},
# The table of fan status maintained by the environmental monitor.
  'eltexFanTable' => '1.3.6.1.4.1.89.83.1.1',
# An entry in the fan status table, representing the status of the associated
# fan maintained by the environmental monitor.
  'eltexFanEntry' => '1.3.6.1.4.1.89.83.1.1.1',
# All fans here with statuses
  'eltexFanId' => '1.3.6.1.4.1.89.83.1.1.1.3',
# Textual description of the fan being instrumented. This description is a short
# textual label, suitable as a human-sensible identification for the rest of the
# information in the entry.
  'eltexFanDescription' => '1.3.6.1.4.1.89.83.1.1.1.2',
# The mandatory state of the fan being instrumented.
  'eltexFanStatus' => '1.3.6.1.4.1.89.83.1.1.1.3',
  'eltexFanStatusDefinition' => {
    '1' => 'normal',
    '5' => 'unknown',
    '6' => 'notPresent',
  },
# Percentage of the device CPU utilization during last second. The value 101 is
# a dummy value, indicating that the CPU utilization was not measured (since
# measurement is disabled or was disabled during last second).
  'eltexCpuUtilisationLastSecond' => '1.3.6.1.4.1.89.1.7.0',
# Percentage of the device CPU utilization during last minute. The value 101 is
# a dummy value, indicating that the CPU utilization was not measured (since
# measurement is disabled or was disabled during last minute).
  'eltexCpuUtilisationOneMinute' => '1.3.6.1.4.1.89.1.8.0',
# Percentage of the device CPU utilization during the last 5 minutes. The value
# 101 is a dummy value, indicating that the CPU utilization was not measured
# (since measurement is disabled or was disabled during last 5 minutes).
  'eltexCpuUtilisationFiveMinutes' => '1.3.6.1.4.1.89.1.9.0',
# Show unit type standalone or stack.
  'eltexStackUnitType' => '1.3.6.1.4.1.89.107.3.0',
# Shows the current number of units in the stack.
  'eltexStackUnitsNumber' => '1.3.6.1.4.1.89.53.8.0'
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::ENTITYMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'ENTITY-MIB'} = {
  url => '',
  name => 'ENTITY-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'ENTITY-MIB'} = {
  'entPhysicalTable' => '1.3.6.1.2.1.47.1.1.1',
  'entPhysicalEntry' => '1.3.6.1.2.1.47.1.1.1.1',
  'entPhysicalIndex' => '1.3.6.1.2.1.47.1.1.1.1.1',
  'entPhysicalDescr' => '1.3.6.1.2.1.47.1.1.1.1.2',
  'entPhysicalVendorType' => '1.3.6.1.2.1.47.1.1.1.1.3',
  'entPhysicalContainedIn' => '1.3.6.1.2.1.47.1.1.1.1.4',
  'entPhysicalClass' => '1.3.6.1.2.1.47.1.1.1.1.5',
  'entPhysicalClassDefinition' => 'ENTITY-MIB::PhysicalClass',
  'entPhysicalParentRelPos' => '1.3.6.1.2.1.47.1.1.1.1.6',
  'entPhysicalName' => '1.3.6.1.2.1.47.1.1.1.1.7',
  'entPhysicalHardwareRev' => '1.3.6.1.2.1.47.1.1.1.1.8',
  'entPhysicalFirmwareRev' => '1.3.6.1.2.1.47.1.1.1.1.9',
  'entPhysicalSoftwareRev' => '1.3.6.1.2.1.47.1.1.1.1.10',
  'entPhysicalSerialNum' => '1.3.6.1.2.1.47.1.1.1.1.11',
  'entPhysicalMfgName' => '1.3.6.1.2.1.47.1.1.1.1.12',
  'entPhysicalModelName' => '1.3.6.1.2.1.47.1.1.1.1.13',
  'entPhysicalAlias' => '1.3.6.1.2.1.47.1.1.1.1.14',
  'entPhysicalAssetID' => '1.3.6.1.2.1.47.1.1.1.1.15',
  'entPhysicalIsFRU' => '1.3.6.1.2.1.47.1.1.1.1.16',
  'entPhysicalIsFRUDefinition' => {
    '1' => 'true',
    '2' => 'false',
  },
  'entPhysicalMfgDate' => '1.3.6.1.2.1.47.1.1.1.1.17',
  'entPhysicalUris' => '1.3.6.1.2.1.47.1.1.1.1.18',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'ENTITY-MIB'} = {
  'PhysicalClass' => {
    '1' => 'other',
    '2' => 'unknown',
    '3' => 'chassis',
    '4' => 'backplane',
    '5' => 'container',
    '6' => 'powerSupply',
    '7' => 'fan',
    '8' => 'sensor',
    '9' => 'module',
    '10' => 'port',
    '11' => 'stack',
    '12' => 'cpu',
  },
};



package Monitoring::GLPlugin::SNMP::MibsAndOids::ENTITYSENSORMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'ENTITY-SENSOR-MIB'} = {
  url => '',
  name => 'ENTITY-SENSOR-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'ENTITY-SENSOR-MIB'} = {
  'entitySensorObjects' => '1.3.6.1.2.1.99.1',
  'entPhySensorTable' => '1.3.6.1.2.1.99.1.1',
  'entPhySensorEntry' => '1.3.6.1.2.1.99.1.1.1',
  'entPhySensorType' => '1.3.6.1.2.1.99.1.1.1.1',
  'entPhySensorTypeDefinition' => {
    '1' => 'other',
    '2' => 'unknown',
    '3' => 'voltsAC',
    '4' => 'voltsDC',
    '5' => 'amperes',
    '6' => 'watts',
    '7' => 'hertz',
    '8' => 'celsius',
    '9' => 'percentRH',
    '10' => 'rpm',
    '11' => 'cmm',
    '12' => 'truthvalue',
  },
  'entPhySensorScale' => '1.3.6.1.2.1.99.1.1.1.2',
  'entPhySensorScaleDefinition' => {
    '1' => 'yocto',
    '2' => 'zepto',
    '3' => 'atto',
    '4' => 'femto',
    '5' => 'pico',
    '6' => 'nano',
    '7' => 'micro',
    '8' => 'milli',
    '9' => 'units',
    '10' => 'kilo',
    '11' => 'mega',
    '12' => 'giga',
    '13' => 'tera',
    '14' => 'exa',
    '15' => 'peta',
    '16' => 'zetta',
    '17' => 'yotta',
  },
  'entPhySensorPrecision' => '1.3.6.1.2.1.99.1.1.1.3',
  'entPhySensorValue' => '1.3.6.1.2.1.99.1.1.1.4',
  'entPhySensorOperStatus' => '1.3.6.1.2.1.99.1.1.1.5',
  'entPhySensorOperStatusDefinition' => {
    '1' => 'ok',
    '2' => 'unavailable',
    '3' => 'nonoperational',
  },
  'entPhySensorUnitsDisplay' => '1.3.6.1.2.1.99.1.1.1.6',
  'entPhySensorValueTimeStamp' => '1.3.6.1.2.1.99.1.1.1.7',
  'entPhySensorValueUpdateRate' => '1.3.6.1.2.1.99.1.1.1.8',
  'entitySensorConformance' => '1.3.6.1.2.1.99.3',
  'entitySensorCompliances' => '1.3.6.1.2.1.99.3.1',
  'entitySensorGroups' => '1.3.6.1.2.1.99.3.2',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::ENTITYSTATEMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'ENTITY-STATE-MIB'} = {
  url => '',
  name => 'ENTITY-STATE-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'ENTITY-STATE-MIB'} =
    '1.3.6.1.2.1.131';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'ENTITY-STATE-MIB'} =
{
  entityStateMIB => '1.3.6.1.2.1.131',
  entStateNotifications => '1.3.6.1.2.1.131.0',
  entStateObjects => '1.3.6.1.2.1.131.1',
  entStateTable => '1.3.6.1.2.1.131.1.1',
  entStateEntry => '1.3.6.1.2.1.131.1.1.1',
  entStateLastChanged => '1.3.6.1.2.1.131.1.1.1.1',
  entStateAdmin => '1.3.6.1.2.1.131.1.1.1.2',
  entStateAdminDefinition => 'ENTITY-STATE-TC-MIB::EntityAdminState',
  entStateOper => '1.3.6.1.2.1.131.1.1.1.3',
  entStateOperDefinition => 'ENTITY-STATE-TC-MIB::EntityOperState',
  entStateUsage => '1.3.6.1.2.1.131.1.1.1.4',
  entStateUsageDefinition => 'ENTITY-STATE-TC-MIB::EntityUsageState',
  entStateAlarm => '1.3.6.1.2.1.131.1.1.1.5',
  entStateAlarmDefinition => 'ENTITY-STATE-TC-MIB::EntityAlarmStatus',
  entStateStandby => '1.3.6.1.2.1.131.1.1.1.6',
  entStateStandbyDefinition => 'ENTITY-STATE-TC-MIB::EntityStandbyStatus',
  entStateConformance => '1.3.6.1.2.1.131.2',
  entStateCompliances => '1.3.6.1.2.1.131.2.1',
  entStateGroups => '1.3.6.1.2.1.131.2.2',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'ENTITY-STATE-TC-MIB'} = {
  EntityAdminState => {
    1 => 'unknown',
    2 => 'locked',
    3 => 'shuttingDown',
    4 => 'unlocked',
  },
  EntityOperState => {
    1 => 'unknown',
    2 => 'disabled',
    3 => 'enabled',
    4 => 'testing',
  },
  EntityUsageState => {
    1 => 'unknown',
    2 => 'idle',
    3 => 'active',
    4 => 'busy',
  },
  EntityAlarmStatus => sub {
    my $val = shift;
    # einstweilen wurscht, muss noch genauer angeschaut werden
    my $dec = unpack("B*", $val);
    return {
    0 => 'unknown',
    1 => 'underRepair',
    2 => 'critical',
    3 => 'major',
    4 => 'minor',
    5 => 'warning',
    6 => 'indeterminate',
    }->{$dec};
  },
  EntityStandbyStatus => {
    1 => 'unknown',
    2 => 'hotStandby',
    3 => 'coldStandby',
    4 => 'providingService',
  },
};

package Monitoring::GLPlugin::SNMP::MibsAndOids::ETHERLIKEMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'EtherLike-MIB'} = {
  url => '',
  name => 'EtherLike-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'EtherLike-MIB'} =
    '1.3.6.1.2.1.10.7.2';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'EtherLike-MIB'} = {
  dot3 => '1.3.6.1.2.1.10.7',
  dot3StatsTable => '1.3.6.1.2.1.10.7.2',
  dot3StatsEntry => '1.3.6.1.2.1.10.7.2.1',
  dot3StatsIndex => '1.3.6.1.2.1.10.7.2.1.1',
  dot3StatsAlignmentErrors => '1.3.6.1.2.1.10.7.2.1.2',
  dot3StatsFCSErrors => '1.3.6.1.2.1.10.7.2.1.3',
  dot3StatsSingleCollisionFrames => '1.3.6.1.2.1.10.7.2.1.4',
  dot3StatsMultipleCollisionFrames => '1.3.6.1.2.1.10.7.2.1.5',
  dot3StatsSQETestErrors => '1.3.6.1.2.1.10.7.2.1.6',
  dot3StatsDeferredTransmissions => '1.3.6.1.2.1.10.7.2.1.7',
  dot3StatsLateCollisions => '1.3.6.1.2.1.10.7.2.1.8',
  dot3StatsExcessiveCollisions => '1.3.6.1.2.1.10.7.2.1.9',
  dot3StatsInternalMacTransmitErrors => '1.3.6.1.2.1.10.7.2.1.10',
  dot3StatsCarrierSenseErrors => '1.3.6.1.2.1.10.7.2.1.11',
  dot3StatsFrameTooLongs => '1.3.6.1.2.1.10.7.2.1.13',
  dot3StatsInternalMacReceiveErrors => '1.3.6.1.2.1.10.7.2.1.16',
  dot3StatsEtherChipSet => '1.3.6.1.2.1.10.7.2.1.17',
  dot3StatsSymbolErrors => '1.3.6.1.2.1.10.7.2.1.18',
  dot3StatsDuplexStatus => '1.3.6.1.2.1.10.7.2.1.19',
  dot3StatsDuplexStatusDefinition => 'EtherLike-MIB::dot3StatsDuplexStatus',
  dot3StatsRateControlAbility => '1.3.6.1.2.1.10.7.2.1.20',
  dot3StatsRateControlStatus => '1.3.6.1.2.1.10.7.2.1.21',
  dot3StatsRateControlStatusDefinition => 'EtherLike-MIB::dot3StatsRateControlStatus',
  dot3CollTable => '1.3.6.1.2.1.10.7.5',
  dot3CollEntry => '1.3.6.1.2.1.10.7.5.1',
  dot3CollCount => '1.3.6.1.2.1.10.7.5.1.2',
  dot3CollFrequencies => '1.3.6.1.2.1.10.7.5.1.3',
  dot3Tests => '1.3.6.1.2.1.10.7.6',
  dot3TestTdr => '1.3.6.1.2.1.10.7.6.1',
  dot3TestLoopBack => '1.3.6.1.2.1.10.7.6.2',
  dot3Errors => '1.3.6.1.2.1.10.7.7',
  dot3ErrorInitError => '1.3.6.1.2.1.10.7.7.1',
  dot3ErrorLoopbackError => '1.3.6.1.2.1.10.7.7.2',
  dot3ControlTable => '1.3.6.1.2.1.10.7.9',
  dot3ControlEntry => '1.3.6.1.2.1.10.7.9.1',
  dot3ControlFunctionsSupported => '1.3.6.1.2.1.10.7.9.1.1',
  dot3ControlInUnknownOpcodes => '1.3.6.1.2.1.10.7.9.1.2',
  dot3HCControlInUnknownOpcodes => '1.3.6.1.2.1.10.7.9.1.3',
  dot3PauseTable => '1.3.6.1.2.1.10.7.10',
  dot3PauseEntry => '1.3.6.1.2.1.10.7.10.1',
  dot3PauseAdminMode => '1.3.6.1.2.1.10.7.10.1.1',
  dot3PauseAdminModeDefinition => 'EtherLike-MIB::dot3PauseAdminMode',
  dot3PauseOperMode => '1.3.6.1.2.1.10.7.10.1.2',
  dot3PauseOperModeDefinition => 'EtherLike-MIB::dot3PauseOperMode',
  dot3InPauseFrames => '1.3.6.1.2.1.10.7.10.1.3',
  dot3OutPauseFrames => '1.3.6.1.2.1.10.7.10.1.4',
  dot3HCInPauseFrames => '1.3.6.1.2.1.10.7.10.1.5',
  dot3HCOutPauseFrames => '1.3.6.1.2.1.10.7.10.1.6',
  dot3HCStatsTable => '1.3.6.1.2.1.10.7.11',
  dot3HCStatsEntry => '1.3.6.1.2.1.10.7.11.1',
  dot3HCStatsAlignmentErrors => '1.3.6.1.2.1.10.7.11.1.1',
  dot3HCStatsFCSErrors => '1.3.6.1.2.1.10.7.11.1.2',
  dot3HCStatsInternalMacTransmitErrors => '1.3.6.1.2.1.10.7.11.1.3',
  dot3HCStatsFrameTooLongs => '1.3.6.1.2.1.10.7.11.1.4',
  dot3HCStatsInternalMacReceiveErrors => '1.3.6.1.2.1.10.7.11.1.5',
  dot3HCStatsSymbolErrors => '1.3.6.1.2.1.10.7.11.1.6',
  etherMIB => '1.3.6.1.2.1.35',
  etherMIBObjects => '1.3.6.1.2.1.35.1',
  etherConformance => '1.3.6.1.2.1.35.2',
  etherGroups => '1.3.6.1.2.1.35.2.1',
  etherCompliances => '1.3.6.1.2.1.35.2.2',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'EtherLike-MIB'} = {
  dot3PauseOperMode => {
    '1' => 'disabled',
    '2' => 'enabledXmit',
    '3' => 'enabledRcv',
    '4' => 'enabledXmitAndRcv',
  },
  dot3StatsDuplexStatus => {
    '1' => 'unknown',
    '2' => 'halfDuplex',
    '3' => 'fullDuplex',
  },
  dot3PauseAdminMode => {
    '1' => 'disabled',
    '2' => 'enabledXmit',
    '3' => 'enabledRcv',
    '4' => 'enabledXmitAndRcv',
  },
  dot3StatsRateControlStatus => {
    '1' => 'rateControlOff',
    '2' => 'rateControlOn',
    '3' => 'unknown',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::F5BIGIPAPMMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'F5-BIGIP-APM-MIB'} = {
  url => '',
  name => 'F5-BIGIP-APM-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'F5-BIGIP-APM-MIB'} =
    '1.3.6.1.4.1.3375.2.6';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'F5-BIGIP-APM-MIB'} = {
  bigipApm => '1.3.6.1.4.1.3375.2.6',
  apmProfiles => '1.3.6.1.4.1.3375.2.6.1',
  apmProfileAccessStat => '1.3.6.1.4.1.3375.2.6.1.1',
  apmPaStatResetStats => '1.3.6.1.4.1.3375.2.6.1.1.1',
  apmPaStatNumber => '1.3.6.1.4.1.3375.2.6.1.1.2',
  apmPaStatTable => '1.3.6.1.4.1.3375.2.6.1.1.3',
  apmPaStatEntry => '1.3.6.1.4.1.3375.2.6.1.1.3.1',
  apmPaStatName => '1.3.6.1.4.1.3375.2.6.1.1.3.1.1',
  apmPaStatConfigSyncState => '1.3.6.1.4.1.3375.2.6.1.1.3.1.2',
  apmPaStatTotalSessions => '1.3.6.1.4.1.3375.2.6.1.1.3.1.3',
  apmPaStatTotalEstablishedStateSessions => '1.3.6.1.4.1.3375.2.6.1.1.3.1.4',
  apmPaStatCurrentActiveSessions => '1.3.6.1.4.1.3375.2.6.1.1.3.1.5',
  apmPaStatCurrentPendingSessions => '1.3.6.1.4.1.3375.2.6.1.1.3.1.6',
  apmPaStatCurrentCompletedSessions => '1.3.6.1.4.1.3375.2.6.1.1.3.1.7',
  apmPaStatUserLoggedoutSessions => '1.3.6.1.4.1.3375.2.6.1.1.3.1.8',
  apmPaStatAdminTerminatedSessions => '1.3.6.1.4.1.3375.2.6.1.1.3.1.9',
  apmPaStatMiscTerminatedSessions => '1.3.6.1.4.1.3375.2.6.1.1.3.1.10',
  apmPaStatAccessPolicyResultAllow => '1.3.6.1.4.1.3375.2.6.1.1.3.1.11',
  apmPaStatAccessPolicyResultDeny => '1.3.6.1.4.1.3375.2.6.1.1.3.1.12',
  apmPaStatAccessPolicyResultRedirect => '1.3.6.1.4.1.3375.2.6.1.1.3.1.13',
  apmPaStatAccessPolicyResultRedirectWithSession => '1.3.6.1.4.1.3375.2.6.1.1.3.1.14',
  apmPaStatEndingDenyAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.15',
  apmPaStatEndingDenyAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.16',
  apmPaStatEndingDenyAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.17',
  apmPaStatEndingDenyAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.18',
  apmPaStatEndingDenyAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.19',
  apmPaStatEndingDenyAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.20',
  apmPaStatEndingRedirectAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.21',
  apmPaStatEndingRedirectAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.22',
  apmPaStatEndingRedirectAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.23',
  apmPaStatEndingRedirectAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.24',
  apmPaStatEndingRedirectAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.25',
  apmPaStatEndingRedirectAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.26',
  apmPaStatEndingAllowAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.27',
  apmPaStatEndingAllowAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.28',
  apmPaStatEndingAllowAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.29',
  apmPaStatEndingAllowAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.30',
  apmPaStatEndingAllowAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.31',
  apmPaStatEndingAllowAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.32',
  apmPaStatAdAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.33',
  apmPaStatAdAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.34',
  apmPaStatAdAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.35',
  apmPaStatAdAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.36',
  apmPaStatAdAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.37',
  apmPaStatAdAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.38',
  apmPaStatClientCertAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.39',
  apmPaStatClientCertAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.40',
  apmPaStatClientCertAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.41',
  apmPaStatClientCertAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.42',
  apmPaStatClientCertAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.43',
  apmPaStatClientCertAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.44',
  apmPaStatHttpAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.45',
  apmPaStatHttpAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.46',
  apmPaStatHttpAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.47',
  apmPaStatHttpAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.48',
  apmPaStatHttpAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.49',
  apmPaStatHttpAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.50',
  apmPaStatLdapAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.51',
  apmPaStatLdapAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.52',
  apmPaStatLdapAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.53',
  apmPaStatLdapAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.54',
  apmPaStatLdapAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.55',
  apmPaStatLdapAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.56',
  apmPaStatRadiusAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.57',
  apmPaStatRadiusAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.58',
  apmPaStatRadiusAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.59',
  apmPaStatRadiusAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.60',
  apmPaStatRadiusAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.61',
  apmPaStatRadiusAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.62',
  apmPaStatSecuridAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.63',
  apmPaStatSecuridAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.64',
  apmPaStatSecuridAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.65',
  apmPaStatSecuridAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.66',
  apmPaStatSecuridAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.67',
  apmPaStatSecuridAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.68',
  apmPaStatRadiusAcctAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.69',
  apmPaStatRadiusAcctAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.70',
  apmPaStatRadiusAcctAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.71',
  apmPaStatRadiusAcctAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.72',
  apmPaStatRadiusAcctAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.73',
  apmPaStatRadiusAcctAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.74',
  apmPaStatEpsLinuxFcAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.75',
  apmPaStatEpsLinuxFcAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.76',
  apmPaStatEpsLinuxFcAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.77',
  apmPaStatEpsLinuxFcAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.78',
  apmPaStatEpsLinuxFcAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.79',
  apmPaStatEpsLinuxFcAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.80',
  apmPaStatEpsLinuxPcAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.81',
  apmPaStatEpsLinuxPcAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.82',
  apmPaStatEpsLinuxPcAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.83',
  apmPaStatEpsLinuxPcAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.84',
  apmPaStatEpsLinuxPcAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.85',
  apmPaStatEpsLinuxPcAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.86',
  apmPaStatEpsMacFcAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.87',
  apmPaStatEpsMacFcAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.88',
  apmPaStatEpsMacFcAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.89',
  apmPaStatEpsMacFcAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.90',
  apmPaStatEpsMacFcAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.91',
  apmPaStatEpsMacFcAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.92',
  apmPaStatEpsMacPcAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.93',
  apmPaStatEpsMacPcAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.94',
  apmPaStatEpsMacPcAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.95',
  apmPaStatEpsMacPcAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.96',
  apmPaStatEpsMacPcAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.97',
  apmPaStatEpsMacPcAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.98',
  apmPaStatEpsWinCcAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.99',
  apmPaStatEpsWinCcAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.100',
  apmPaStatEpsWinCcAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.101',
  apmPaStatEpsWinCcAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.102',
  apmPaStatEpsWinCcAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.103',
  apmPaStatEpsWinCcAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.104',
  apmPaStatEpsAvAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.105',
  apmPaStatEpsAvAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.106',
  apmPaStatEpsAvAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.107',
  apmPaStatEpsAvAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.108',
  apmPaStatEpsAvAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.109',
  apmPaStatEpsAvAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.110',
  apmPaStatEpsWinOsInfoAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.111',
  apmPaStatEpsWinOsInfoAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.112',
  apmPaStatEpsWinOsInfoAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.113',
  apmPaStatEpsWinOsInfoAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.114',
  apmPaStatEpsWinOsInfoAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.115',
  apmPaStatEpsWinOsInfoAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.116',
  apmPaStatEpsWinFcAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.117',
  apmPaStatEpsWinFcAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.118',
  apmPaStatEpsWinFcAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.119',
  apmPaStatEpsWinFcAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.120',
  apmPaStatEpsWinFcAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.121',
  apmPaStatEpsWinFcAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.122',
  apmPaStatEpsWinMcAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.123',
  apmPaStatEpsWinMcAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.124',
  apmPaStatEpsWinMcAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.125',
  apmPaStatEpsWinMcAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.126',
  apmPaStatEpsWinMcAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.127',
  apmPaStatEpsWinMcAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.128',
  apmPaStatEpsFwcAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.129',
  apmPaStatEpsFwcAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.130',
  apmPaStatEpsFwcAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.131',
  apmPaStatEpsFwcAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.132',
  apmPaStatEpsFwcAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.133',
  apmPaStatEpsFwcAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.134',
  apmPaStatEpsWinPcTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.135',
  apmPaStatEpsWinPcTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.136',
  apmPaStatEpsWinPcTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.137',
  apmPaStatEpsWinPcTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.138',
  apmPaStatEpsWinPcTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.139',
  apmPaStatEpsWinPcTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.140',
  apmPaStatEpsWinPwTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.141',
  apmPaStatEpsWinPwTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.142',
  apmPaStatEpsWinPwTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.143',
  apmPaStatEpsWinPwTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.144',
  apmPaStatEpsWinPwTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.145',
  apmPaStatEpsWinPwTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.146',
  apmPaStatEpsWinRcAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.147',
  apmPaStatEpsWinRcAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.148',
  apmPaStatEpsWinRcAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.149',
  apmPaStatEpsWinRcAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.150',
  apmPaStatEpsWinRcAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.151',
  apmPaStatEpsWinRcAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.152',
  apmPaStatEpsWinGpAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.153',
  apmPaStatEpsWinGpAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.154',
  apmPaStatEpsWinGpAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.155',
  apmPaStatEpsWinGpAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.156',
  apmPaStatEpsWinGpAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.157',
  apmPaStatEpsWinGpAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.158',
  apmPaStatExternalLogonAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.159',
  apmPaStatExternalLogonAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.160',
  apmPaStatExternalLogonAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.161',
  apmPaStatExternalLogonAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.162',
  apmPaStatExternalLogonAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.163',
  apmPaStatExternalLogonAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.164',
  apmPaStatLogonAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.165',
  apmPaStatLogonAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.166',
  apmPaStatLogonAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.167',
  apmPaStatLogonAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.168',
  apmPaStatLogonAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.169',
  apmPaStatLogonAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.170',
  apmPaStatRaAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.171',
  apmPaStatRaAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.172',
  apmPaStatRaAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.173',
  apmPaStatRaAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.174',
  apmPaStatRaAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.175',
  apmPaStatRaAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.176',
  apmPaStatRdsAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.177',
  apmPaStatRdsAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.178',
  apmPaStatRdsAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.179',
  apmPaStatRdsAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.180',
  apmPaStatRdsAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.181',
  apmPaStatRdsAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.182',
  apmPaStatVaAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.183',
  apmPaStatVaAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.184',
  apmPaStatVaAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.185',
  apmPaStatVaAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.186',
  apmPaStatVaAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.187',
  apmPaStatVaAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.188',
  apmPaStatIeAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.189',
  apmPaStatIeAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.190',
  apmPaStatIeAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.191',
  apmPaStatIeAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.192',
  apmPaStatIeAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.193',
  apmPaStatIeAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.194',
  apmPaStatLoggingAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.195',
  apmPaStatLoggingAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.196',
  apmPaStatLoggingAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.197',
  apmPaStatLoggingAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.198',
  apmPaStatLoggingAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.199',
  apmPaStatLoggingAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.200',
  apmPaStatDecnBoxAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.201',
  apmPaStatDecnBoxAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.202',
  apmPaStatDecnBoxAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.203',
  apmPaStatDecnBoxAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.204',
  apmPaStatDecnBoxAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.205',
  apmPaStatDecnBoxAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.206',
  apmPaStatMesgBoxAgentTotalInstances => '1.3.6.1.4.1.3375.2.6.1.1.3.1.207',
  apmPaStatMesgBoxAgentTotalUsages => '1.3.6.1.4.1.3375.2.6.1.1.3.1.208',
  apmPaStatMesgBoxAgentTotalSuccesses => '1.3.6.1.4.1.3375.2.6.1.1.3.1.209',
  apmPaStatMesgBoxAgentTotalFailures => '1.3.6.1.4.1.3375.2.6.1.1.3.1.210',
  apmPaStatMesgBoxAgentTotalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.211',
  apmPaStatMesgBoxAgentTotalSessVars => '1.3.6.1.4.1.3375.2.6.1.1.3.1.212',
  apmPaStatApdNoResultErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.213',
  apmPaStatApdNoSessionErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.214',
  apmPaStatApdNoDeviceInfoErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.215',
  apmPaStatApdNoTokenErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.216',
  apmPaStatApdNoSigErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.217',
  apmPaStatApdTotalMismatchErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.218',
  apmPaStatApdInvalidSigErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.219',
  apmPaStatApdMcPipelineInitErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.220',
  apmPaStatApdMcSetSessVarErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.221',
  apmPaStatApdMcPipelineCloseErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.222',
  apmPaStatApdApResultErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.223',
  apmPaStatApdApInternalErrors => '1.3.6.1.4.1.3375.2.6.1.1.3.1.224',
  apmPaStatAllowedRequests => '1.3.6.1.4.1.3375.2.6.1.1.3.1.225',
  apmPaStatDeniedRequests => '1.3.6.1.4.1.3375.2.6.1.1.3.1.226',
  apmPaStatVsName => '1.3.6.1.4.1.3375.2.6.1.1.3.1.227',
  apmPaStatSessionsEvalTimedOut => '1.3.6.1.4.1.3375.2.6.1.1.3.1.228',
  apmPaStatSessionsEstabTimedOut => '1.3.6.1.4.1.3375.2.6.1.1.3.1.229',
  apmProfileConnectivityStat => '1.3.6.1.4.1.3375.2.6.1.2',
  apmPcStatResetStats => '1.3.6.1.4.1.3375.2.6.1.2.1',
  apmPcStatNumber => '1.3.6.1.4.1.3375.2.6.1.2.2',
  apmPcStatTable => '1.3.6.1.4.1.3375.2.6.1.2.3',
  apmPcStatEntry => '1.3.6.1.4.1.3375.2.6.1.2.3.1',
  apmPcStatName => '1.3.6.1.4.1.3375.2.6.1.2.3.1.1',
  apmPcStatTotConns => '1.3.6.1.4.1.3375.2.6.1.2.3.1.2',
  apmPcStatCurConns => '1.3.6.1.4.1.3375.2.6.1.2.3.1.3',
  apmPcStatMaxConns => '1.3.6.1.4.1.3375.2.6.1.2.3.1.4',
  apmPcStatIngressRaw => '1.3.6.1.4.1.3375.2.6.1.2.3.1.5',
  apmPcStatEgressRaw => '1.3.6.1.4.1.3375.2.6.1.2.3.1.6',
  apmPcStatIngressCompressed => '1.3.6.1.4.1.3375.2.6.1.2.3.1.7',
  apmPcStatEgressCompressed => '1.3.6.1.4.1.3375.2.6.1.2.3.1.8',
  apmProfileRewriteStat => '1.3.6.1.4.1.3375.2.6.1.3',
  apmPrStatResetStats => '1.3.6.1.4.1.3375.2.6.1.3.1',
  apmPrStatNumber => '1.3.6.1.4.1.3375.2.6.1.3.2',
  apmPrStatTable => '1.3.6.1.4.1.3375.2.6.1.3.3',
  apmPrStatEntry => '1.3.6.1.4.1.3375.2.6.1.3.3.1',
  apmPrStatName => '1.3.6.1.4.1.3375.2.6.1.3.3.1.1',
  apmPrStatClientReqBytes => '1.3.6.1.4.1.3375.2.6.1.3.3.1.2',
  apmPrStatClientRespBytes => '1.3.6.1.4.1.3375.2.6.1.3.3.1.3',
  apmPrStatServerReqBytes => '1.3.6.1.4.1.3375.2.6.1.3.3.1.4',
  apmPrStatServerRespBytes => '1.3.6.1.4.1.3375.2.6.1.3.3.1.5',
  apmPrStatClientReqs => '1.3.6.1.4.1.3375.2.6.1.3.3.1.6',
  apmPrStatClientResps => '1.3.6.1.4.1.3375.2.6.1.3.3.1.7',
  apmPrStatServerReqs => '1.3.6.1.4.1.3375.2.6.1.3.3.1.8',
  apmPrStatServerResps => '1.3.6.1.4.1.3375.2.6.1.3.3.1.9',
  apmAccessStat => '1.3.6.1.4.1.3375.2.6.1.4',
  apmAccessStatResetStats => '1.3.6.1.4.1.3375.2.6.1.4.1',
  apmAccessStatTotalSessions => '1.3.6.1.4.1.3375.2.6.1.4.2',
  apmAccessStatCurrentActiveSessions => '1.3.6.1.4.1.3375.2.6.1.4.3',
  apmAccessStatCurrentPendingSessions => '1.3.6.1.4.1.3375.2.6.1.4.4',
  apmAccessStatCurrentEndedSessions => '1.3.6.1.4.1.3375.2.6.1.4.5',
  apmAccessStatUserLoggedoutSessions => '1.3.6.1.4.1.3375.2.6.1.4.6',
  apmAccessStatAdminTerminatedSessions => '1.3.6.1.4.1.3375.2.6.1.4.7',
  apmAccessStatMiscTerminatedSessions => '1.3.6.1.4.1.3375.2.6.1.4.8',
  apmAccessStatResultAllow => '1.3.6.1.4.1.3375.2.6.1.4.9',
  apmAccessStatResultDeny => '1.3.6.1.4.1.3375.2.6.1.4.10',
  apmAccessStatResultRedirect => '1.3.6.1.4.1.3375.2.6.1.4.11',
  apmAccessStatResultRedirectWithSession => '1.3.6.1.4.1.3375.2.6.1.4.12',
  apmAccessStatSessionsEvalTimedOut => '1.3.6.1.4.1.3375.2.6.1.4.13',
  apmAccessStatSessionsEstabTimedOut => '1.3.6.1.4.1.3375.2.6.1.4.14',
  apmGlobalConnectivityStat => '1.3.6.1.4.1.3375.2.6.1.5',
  apmGlobalConnectivityStatResetStats => '1.3.6.1.4.1.3375.2.6.1.5.1',
  apmGlobalConnectivityStatTotConns => '1.3.6.1.4.1.3375.2.6.1.5.2',
  apmGlobalConnectivityStatCurConns => '1.3.6.1.4.1.3375.2.6.1.5.3',
  apmGlobalConnectivityStatMaxConns => '1.3.6.1.4.1.3375.2.6.1.5.4',
  apmGlobalConnectivityStatIngressRaw => '1.3.6.1.4.1.3375.2.6.1.5.5',
  apmGlobalConnectivityStatEgressRaw => '1.3.6.1.4.1.3375.2.6.1.5.6',
  apmGlobalConnectivityStatIngressCompressed => '1.3.6.1.4.1.3375.2.6.1.5.7',
  apmGlobalConnectivityStatEgressCompressed => '1.3.6.1.4.1.3375.2.6.1.5.8',
  apmGlobalRewriteStat => '1.3.6.1.4.1.3375.2.6.1.6',
  apmGlobalRewriteStatResetStats => '1.3.6.1.4.1.3375.2.6.1.6.1',
  apmGlobalRewriteStatClientReqBytes => '1.3.6.1.4.1.3375.2.6.1.6.2',
  apmGlobalRewriteStatClientRespBytes => '1.3.6.1.4.1.3375.2.6.1.6.3',
  apmGlobalRewriteStatServerReqBytes => '1.3.6.1.4.1.3375.2.6.1.6.4',
  apmGlobalRewriteStatServerRespBytes => '1.3.6.1.4.1.3375.2.6.1.6.5',
  apmGlobalRewriteStatClientReqs => '1.3.6.1.4.1.3375.2.6.1.6.6',
  apmGlobalRewriteStatClientResps => '1.3.6.1.4.1.3375.2.6.1.6.7',
  apmGlobalRewriteStatServerReqs => '1.3.6.1.4.1.3375.2.6.1.6.8',
  apmGlobalRewriteStatServerResps => '1.3.6.1.4.1.3375.2.6.1.6.9',
  apmProfileAccessAgentStat => '1.3.6.1.4.1.3375.2.6.1.7',
  apmPgStatResetStats => '1.3.6.1.4.1.3375.2.6.1.7.1',
  apmPgStatNumber => '1.3.6.1.4.1.3375.2.6.1.7.2',
  apmPgStatTable => '1.3.6.1.4.1.3375.2.6.1.7.3',
  apmPgStatEntry => '1.3.6.1.4.1.3375.2.6.1.7.3.1',
  apmPgStatName => '1.3.6.1.4.1.3375.2.6.1.7.3.1.1',
  apmPgStatAgentName => '1.3.6.1.4.1.3375.2.6.1.7.3.1.2',
  apmPgStatInstances => '1.3.6.1.4.1.3375.2.6.1.7.3.1.3',
  apmPgStatUsages => '1.3.6.1.4.1.3375.2.6.1.7.3.1.4',
  apmPgStatSuccesses => '1.3.6.1.4.1.3375.2.6.1.7.3.1.5',
  apmPgStatFailures => '1.3.6.1.4.1.3375.2.6.1.7.3.1.6',
  apmPgStatErrors => '1.3.6.1.4.1.3375.2.6.1.7.3.1.7',
  apmPgStatSessionVars => '1.3.6.1.4.1.3375.2.6.1.7.3.1.8',
  apmProfileAccessMiscStat => '1.3.6.1.4.1.3375.2.6.1.8',
  apmPmStatResetStats => '1.3.6.1.4.1.3375.2.6.1.8.1',
  apmPmStatNumber => '1.3.6.1.4.1.3375.2.6.1.8.2',
  apmPmStatTable => '1.3.6.1.4.1.3375.2.6.1.8.3',
  apmPmStatEntry => '1.3.6.1.4.1.3375.2.6.1.8.3.1',
  apmPmStatName => '1.3.6.1.4.1.3375.2.6.1.8.3.1.1',
  apmPmStatConfigSyncState => '1.3.6.1.4.1.3375.2.6.1.8.3.1.2',
  apmPmStatInspResultError => '1.3.6.1.4.1.3375.2.6.1.8.3.1.3',
  apmPmStatInspSessionError => '1.3.6.1.4.1.3375.2.6.1.8.3.1.4',
  apmPmStatInspDeviceInfoError => '1.3.6.1.4.1.3375.2.6.1.8.3.1.5',
  apmPmStatInspTokenError => '1.3.6.1.4.1.3375.2.6.1.8.3.1.6',
  apmPmStatInspSignatureError => '1.3.6.1.4.1.3375.2.6.1.8.3.1.7',
  apmPmStatInspDataMsmtchError => '1.3.6.1.4.1.3375.2.6.1.8.3.1.8',
  apmPmStatInspClientSignError => '1.3.6.1.4.1.3375.2.6.1.8.3.1.9',
  apmPmStatMemInitError => '1.3.6.1.4.1.3375.2.6.1.8.3.1.10',
  apmPmStatMemSessionVarError => '1.3.6.1.4.1.3375.2.6.1.8.3.1.11',
  apmPmStatMemCloseError => '1.3.6.1.4.1.3375.2.6.1.8.3.1.12',
  apmPmStatResultError => '1.3.6.1.4.1.3375.2.6.1.8.3.1.13',
  apmPmStatInternalError => '1.3.6.1.4.1.3375.2.6.1.8.3.1.14',
  apmGlobalLicenseStat => '1.3.6.1.4.1.3375.2.6.1.9',
  apmGlobalLicenseStatResetStats => '1.3.6.1.4.1.3375.2.6.1.9.1',
  apmGlobalLicenseStatTotalAccessSessions => '1.3.6.1.4.1.3375.2.6.1.9.2',
  apmGlobalLicenseStatTotalConnectivitySessions => '1.3.6.1.4.1.3375.2.6.1.9.3',
  apmGlobalLicenseStatTotalSwgSessions => '1.3.6.1.4.1.3375.2.6.1.9.4',
  apmGlobalLicenseStatTotalSwgLimitedSessions => '1.3.6.1.4.1.3375.2.6.1.9.5',
  apmLeasepool => '1.3.6.1.4.1.3375.2.6.2',
  apmLeasepoolStat => '1.3.6.1.4.1.3375.2.6.2.1',
  apmLeasepoolStatResetStats => '1.3.6.1.4.1.3375.2.6.2.1.1',
  apmLeasepoolStatNumber => '1.3.6.1.4.1.3375.2.6.2.1.2',
  apmLeasepoolStatTable => '1.3.6.1.4.1.3375.2.6.2.1.3',
  apmLeasepoolStatEntry => '1.3.6.1.4.1.3375.2.6.2.1.3.1',
  apmLeasepoolStatName => '1.3.6.1.4.1.3375.2.6.2.1.3.1.1',
  apmLeasepoolStatCurMembers => '1.3.6.1.4.1.3375.2.6.2.1.3.1.2',
  apmLeasepoolStatCurAssigned => '1.3.6.1.4.1.3375.2.6.2.1.3.1.3',
  apmLeasepoolStatCurFree => '1.3.6.1.4.1.3375.2.6.2.1.3.1.4',
  apmLeasepoolStatMaxAssigned => '1.3.6.1.4.1.3375.2.6.2.1.3.1.5',
  apmLeasepoolStatTotPickRequests => '1.3.6.1.4.1.3375.2.6.2.1.3.1.6',
  apmLeasepoolStatTotPickFailure => '1.3.6.1.4.1.3375.2.6.2.1.3.1.7',
  apmLeasepoolStatTotReserveRequests => '1.3.6.1.4.1.3375.2.6.2.1.3.1.8',
  apmLeasepoolStatTotReserveFailure => '1.3.6.1.4.1.3375.2.6.2.1.3.1.9',
  apmLeasepoolStatTotReleaseRequests => '1.3.6.1.4.1.3375.2.6.2.1.3.1.10',
  apmLeasepoolStatTotReleaseFailure => '1.3.6.1.4.1.3375.2.6.2.1.3.1.11',
  apmAcl => '1.3.6.1.4.1.3375.2.6.3',
  apmAclStat => '1.3.6.1.4.1.3375.2.6.3.1',
  apmAclStatResetStats => '1.3.6.1.4.1.3375.2.6.3.1.1',
  apmAclStatNumber => '1.3.6.1.4.1.3375.2.6.3.1.2',
  apmAclStatTable => '1.3.6.1.4.1.3375.2.6.3.1.3',
  apmAclStatEntry => '1.3.6.1.4.1.3375.2.6.3.1.3.1',
  apmAclStatName => '1.3.6.1.4.1.3375.2.6.3.1.3.1.1',
  apmAclStatActionAllow => '1.3.6.1.4.1.3375.2.6.3.1.3.1.2',
  apmAclStatActionContinue => '1.3.6.1.4.1.3375.2.6.3.1.3.1.3',
  apmAclStatActionDiscard => '1.3.6.1.4.1.3375.2.6.3.1.3.1.4',
  apmAclStatActionReject => '1.3.6.1.4.1.3375.2.6.3.1.3.1.5',
  apmIpv6Leasepool => '1.3.6.1.4.1.3375.2.6.4',
  apmIpv6LeasepoolStat => '1.3.6.1.4.1.3375.2.6.4.1',
  apmIpv6LeasepoolStatResetStats => '1.3.6.1.4.1.3375.2.6.4.1.1',
  apmIpv6LeasepoolStatNumber => '1.3.6.1.4.1.3375.2.6.4.1.2',
  apmIpv6LeasepoolStatTable => '1.3.6.1.4.1.3375.2.6.4.1.3',
  apmIpv6LeasepoolStatEntry => '1.3.6.1.4.1.3375.2.6.4.1.3.1',
  apmIpv6LeasepoolStatName => '1.3.6.1.4.1.3375.2.6.4.1.3.1.1',
  apmIpv6LeasepoolStatCurMembers => '1.3.6.1.4.1.3375.2.6.4.1.3.1.2',
  apmIpv6LeasepoolStatCurAssigned => '1.3.6.1.4.1.3375.2.6.4.1.3.1.3',
  apmIpv6LeasepoolStatCurFree => '1.3.6.1.4.1.3375.2.6.4.1.3.1.4',
  apmIpv6LeasepoolStatMaxAssigned => '1.3.6.1.4.1.3375.2.6.4.1.3.1.5',
  apmIpv6LeasepoolStatTotPickRequests => '1.3.6.1.4.1.3375.2.6.4.1.3.1.6',
  apmIpv6LeasepoolStatTotPickFailure => '1.3.6.1.4.1.3375.2.6.4.1.3.1.7',
  apmIpv6LeasepoolStatTotReserveRequests => '1.3.6.1.4.1.3375.2.6.4.1.3.1.8',
  apmIpv6LeasepoolStatTotReserveFailure => '1.3.6.1.4.1.3375.2.6.4.1.3.1.9',
  apmIpv6LeasepoolStatTotReleaseRequests => '1.3.6.1.4.1.3375.2.6.4.1.3.1.10',
  apmIpv6LeasepoolStatTotReleaseFailure => '1.3.6.1.4.1.3375.2.6.4.1.3.1.11',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'F5-BIGIP-APM-MIB'} = {
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::F5BIGIPGLOBALMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'F5-BIGIP-GLOBAL-MIB'} = {
  url => '',
  name => 'F5-BIGIP-GLOBAL-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'F5-BIGIP-GLOBAL-MIB'} =
    '1.3.6.1.4.1.3375.2.3';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'F5-BIGIP-GLOBAL-MIB'} = {
  bigipGlobalTM => '1.3.6.1.4.1.3375.2.3',
  gtmGlobals => '1.3.6.1.4.1.3375.2.3.1',
  gtmGlobalAttrs => '1.3.6.1.4.1.3375.2.3.1.1',
  gtmGlobalAttr => '1.3.6.1.4.1.3375.2.3.1.1.1',
  gtmAttrDumpTopology => '1.3.6.1.4.1.3375.2.3.1.1.1.1',
  gtmAttrDumpTopologyDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttrDumpTopology',
  gtmAttrCacheLdns => '1.3.6.1.4.1.3375.2.3.1.1.1.2',
  gtmAttrCacheLdnsDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttrCacheLdns',
  gtmAttrAolAware => '1.3.6.1.4.1.3375.2.3.1.1.1.3',
  gtmAttrAolAwareDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttrAolAware',
  gtmAttrCheckStaticDepends => '1.3.6.1.4.1.3375.2.3.1.1.1.4',
  gtmAttrCheckStaticDependsDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttrCheckStaticDepends',
  gtmAttrCheckDynamicDepends => '1.3.6.1.4.1.3375.2.3.1.1.1.5',
  gtmAttrCheckDynamicDependsDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttrCheckDynamicDepends',
  gtmAttrDrainRequests => '1.3.6.1.4.1.3375.2.3.1.1.1.6',
  gtmAttrDrainRequestsDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttrDrainRequests',
  gtmAttrEnableResetsRipeness => '1.3.6.1.4.1.3375.2.3.1.1.1.7',
  gtmAttrEnableResetsRipenessDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttrEnableResetsRipeness',
  gtmAttrFbRespectDepends => '1.3.6.1.4.1.3375.2.3.1.1.1.8',
  gtmAttrFbRespectDependsDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttrFbRespectDepends',
  gtmAttrFbRespectAcl => '1.3.6.1.4.1.3375.2.3.1.1.1.9',
  gtmAttrFbRespectAclDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttrFbRespectAcl',
  gtmAttrDefaultAlternate => '1.3.6.1.4.1.3375.2.3.1.1.1.10',
  gtmAttrDefaultAlternateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttrDefaultAlternate',
  gtmAttrDefaultFallback => '1.3.6.1.4.1.3375.2.3.1.1.1.11',
  gtmAttrDefaultFallbackDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttrDefaultFallback',
  gtmAttrPersistMask => '1.3.6.1.4.1.3375.2.3.1.1.1.12',
  gtmAttrGtmSetsRecursion => '1.3.6.1.4.1.3375.2.3.1.1.1.13',
  gtmAttrGtmSetsRecursionDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttrGtmSetsRecursion',
  gtmAttrQosFactorLcs => '1.3.6.1.4.1.3375.2.3.1.1.1.14',
  gtmAttrQosFactorRtt => '1.3.6.1.4.1.3375.2.3.1.1.1.15',
  gtmAttrQosFactorHops => '1.3.6.1.4.1.3375.2.3.1.1.1.16',
  gtmAttrQosFactorHitRatio => '1.3.6.1.4.1.3375.2.3.1.1.1.17',
  gtmAttrQosFactorPacketRate => '1.3.6.1.4.1.3375.2.3.1.1.1.18',
  gtmAttrQosFactorBps => '1.3.6.1.4.1.3375.2.3.1.1.1.19',
  gtmAttrQosFactorVsCapacity => '1.3.6.1.4.1.3375.2.3.1.1.1.20',
  gtmAttrQosFactorTopology => '1.3.6.1.4.1.3375.2.3.1.1.1.21',
  gtmAttrQosFactorConnRate => '1.3.6.1.4.1.3375.2.3.1.1.1.22',
  gtmAttrTimerRetryPathData => '1.3.6.1.4.1.3375.2.3.1.1.1.23',
  gtmAttrTimerGetAutoconfigData => '1.3.6.1.4.1.3375.2.3.1.1.1.24',
  gtmAttrTimerPersistCache => '1.3.6.1.4.1.3375.2.3.1.1.1.25',
  gtmAttrDefaultProbeLimit => '1.3.6.1.4.1.3375.2.3.1.1.1.26',
  gtmAttrDownThreshold => '1.3.6.1.4.1.3375.2.3.1.1.1.27',
  gtmAttrDownMultiple => '1.3.6.1.4.1.3375.2.3.1.1.1.28',
  gtmAttrPathTtl => '1.3.6.1.4.1.3375.2.3.1.1.1.29',
  gtmAttrTraceTtl => '1.3.6.1.4.1.3375.2.3.1.1.1.30',
  gtmAttrLdnsDuration => '1.3.6.1.4.1.3375.2.3.1.1.1.31',
  gtmAttrPathDuration => '1.3.6.1.4.1.3375.2.3.1.1.1.32',
  gtmAttrRttSampleCount => '1.3.6.1.4.1.3375.2.3.1.1.1.33',
  gtmAttrRttPacketLength => '1.3.6.1.4.1.3375.2.3.1.1.1.34',
  gtmAttrRttTimeout => '1.3.6.1.4.1.3375.2.3.1.1.1.35',
  gtmAttrMaxMonReqs => '1.3.6.1.4.1.3375.2.3.1.1.1.36',
  gtmAttrTraceroutePort => '1.3.6.1.4.1.3375.2.3.1.1.1.37',
  gtmAttrPathsNeverDie => '1.3.6.1.4.1.3375.2.3.1.1.1.38',
  gtmAttrPathsNeverDieDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttrPathsNeverDie',
  gtmAttrProbeDisabledObjects => '1.3.6.1.4.1.3375.2.3.1.1.1.39',
  gtmAttrProbeDisabledObjectsDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttrProbeDisabledObjects',
  gtmAttrLinkLimitFactor => '1.3.6.1.4.1.3375.2.3.1.1.1.40',
  gtmAttrOverLimitLinkLimitFactor => '1.3.6.1.4.1.3375.2.3.1.1.1.41',
  gtmAttrLinkPrepaidFactor => '1.3.6.1.4.1.3375.2.3.1.1.1.42',
  gtmAttrLinkCompensateInbound => '1.3.6.1.4.1.3375.2.3.1.1.1.43',
  gtmAttrLinkCompensateOutbound => '1.3.6.1.4.1.3375.2.3.1.1.1.44',
  gtmAttrLinkCompensationHistory => '1.3.6.1.4.1.3375.2.3.1.1.1.45',
  gtmAttrMaxLinkOverLimitCount => '1.3.6.1.4.1.3375.2.3.1.1.1.46',
  gtmAttrLowerBoundPctRow => '1.3.6.1.4.1.3375.2.3.1.1.1.47',
  gtmAttrLowerBoundPctCol => '1.3.6.1.4.1.3375.2.3.1.1.1.48',
  gtmAttrAutoconf => '1.3.6.1.4.1.3375.2.3.1.1.1.49',
  gtmAttrAutoconfDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttrAutoconf',
  gtmAttrAutosync => '1.3.6.1.4.1.3375.2.3.1.1.1.50',
  gtmAttrAutosyncDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttrAutosync',
  gtmAttrSyncNamedConf => '1.3.6.1.4.1.3375.2.3.1.1.1.51',
  gtmAttrSyncNamedConfDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttrSyncNamedConf',
  gtmAttrSyncGroup => '1.3.6.1.4.1.3375.2.3.1.1.1.52',
  gtmAttrSyncTimeout => '1.3.6.1.4.1.3375.2.3.1.1.1.53',
  gtmAttrSyncZonesTimeout => '1.3.6.1.4.1.3375.2.3.1.1.1.54',
  gtmAttrTimeTolerance => '1.3.6.1.4.1.3375.2.3.1.1.1.55',
  gtmAttrTopologyLongestMatch => '1.3.6.1.4.1.3375.2.3.1.1.1.56',
  gtmAttrTopologyLongestMatchDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttrTopologyLongestMatch',
  gtmAttrTopologyAclThreshold => '1.3.6.1.4.1.3375.2.3.1.1.1.57',
  gtmAttrStaticPersistCidr => '1.3.6.1.4.1.3375.2.3.1.1.1.58',
  gtmAttrStaticPersistV6Cidr => '1.3.6.1.4.1.3375.2.3.1.1.1.59',
  gtmAttrQosFactorVsScore => '1.3.6.1.4.1.3375.2.3.1.1.1.60',
  gtmAttrTimerSendKeepAlive => '1.3.6.1.4.1.3375.2.3.1.1.1.61',
  gtmAttrCertificateDepth => '1.3.6.1.4.1.3375.2.3.1.1.1.62',
  gtmAttrMaxMemoryUsage => '1.3.6.1.4.1.3375.2.3.1.1.1.63',
  gtmGlobalLdnsProbeProto => '1.3.6.1.4.1.3375.2.3.1.1.2',
  gtmGlobalLdnsProbeProtoNumber => '1.3.6.1.4.1.3375.2.3.1.1.2.1',
  gtmGlobalLdnsProbeProtoTable => '1.3.6.1.4.1.3375.2.3.1.1.2.2',
  gtmGlobalLdnsProbeProtoEntry => '1.3.6.1.4.1.3375.2.3.1.1.2.2.1',
  gtmGlobalLdnsProbeProtoIndex => '1.3.6.1.4.1.3375.2.3.1.1.2.2.1.1',
  gtmGlobalLdnsProbeProtoType => '1.3.6.1.4.1.3375.2.3.1.1.2.2.1.2',
  gtmGlobalLdnsProbeProtoTypeDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmGlobalLdnsProbeProtoType',
  gtmGlobalLdnsProbeProtoName => '1.3.6.1.4.1.3375.2.3.1.1.2.2.1.3',
  gtmGlobalAttr2 => '1.3.6.1.4.1.3375.2.3.1.1.3',
  gtmAttr2Number => '1.3.6.1.4.1.3375.2.3.1.1.3.1',
  gtmAttr2Table => '1.3.6.1.4.1.3375.2.3.1.1.3.2',
  gtmAttr2Entry => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1',
  gtmAttr2DumpTopology => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.1',
  gtmAttr2DumpTopologyDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttr2DumpTopology',
  gtmAttr2CacheLdns => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.2',
  gtmAttr2CacheLdnsDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttr2CacheLdns',
  gtmAttr2AolAware => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.3',
  gtmAttr2AolAwareDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttr2AolAware',
  gtmAttr2CheckStaticDepends => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.4',
  gtmAttr2CheckStaticDependsDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttr2CheckStaticDepends',
  gtmAttr2CheckDynamicDepends => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.5',
  gtmAttr2CheckDynamicDependsDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttr2CheckDynamicDepends',
  gtmAttr2DrainRequests => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.6',
  gtmAttr2DrainRequestsDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttr2DrainRequests',
  gtmAttr2EnableResetsRipeness => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.7',
  gtmAttr2EnableResetsRipenessDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttr2EnableResetsRipeness',
  gtmAttr2FbRespectDepends => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.8',
  gtmAttr2FbRespectDependsDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttr2FbRespectDepends',
  gtmAttr2FbRespectAcl => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.9',
  gtmAttr2FbRespectAclDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttr2FbRespectAcl',
  gtmAttr2DefaultAlternate => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.10',
  gtmAttr2DefaultAlternateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttr2DefaultAlternate',
  gtmAttr2DefaultFallback => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.11',
  gtmAttr2DefaultFallbackDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttr2DefaultFallback',
  gtmAttr2PersistMask => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.12',
  gtmAttr2GtmSetsRecursion => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.13',
  gtmAttr2GtmSetsRecursionDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttr2GtmSetsRecursion',
  gtmAttr2QosFactorLcs => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.14',
  gtmAttr2QosFactorRtt => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.15',
  gtmAttr2QosFactorHops => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.16',
  gtmAttr2QosFactorHitRatio => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.17',
  gtmAttr2QosFactorPacketRate => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.18',
  gtmAttr2QosFactorBps => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.19',
  gtmAttr2QosFactorVsCapacity => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.20',
  gtmAttr2QosFactorTopology => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.21',
  gtmAttr2QosFactorConnRate => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.22',
  gtmAttr2TimerRetryPathData => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.23',
  gtmAttr2TimerGetAutoconfigData => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.24',
  gtmAttr2TimerPersistCache => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.25',
  gtmAttr2DefaultProbeLimit => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.26',
  gtmAttr2DownThreshold => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.27',
  gtmAttr2DownMultiple => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.28',
  gtmAttr2PathTtl => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.29',
  gtmAttr2TraceTtl => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.30',
  gtmAttr2LdnsDuration => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.31',
  gtmAttr2PathDuration => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.32',
  gtmAttr2RttSampleCount => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.33',
  gtmAttr2RttPacketLength => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.34',
  gtmAttr2RttTimeout => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.35',
  gtmAttr2MaxMonReqs => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.36',
  gtmAttr2TraceroutePort => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.37',
  gtmAttr2PathsNeverDie => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.38',
  gtmAttr2PathsNeverDieDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttr2PathsNeverDie',
  gtmAttr2ProbeDisabledObjects => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.39',
  gtmAttr2ProbeDisabledObjectsDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttr2ProbeDisabledObjects',
  gtmAttr2LinkLimitFactor => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.40',
  gtmAttr2OverLimitLinkLimitFactor => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.41',
  gtmAttr2LinkPrepaidFactor => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.42',
  gtmAttr2LinkCompensateInbound => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.43',
  gtmAttr2LinkCompensateOutbound => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.44',
  gtmAttr2LinkCompensationHistory => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.45',
  gtmAttr2MaxLinkOverLimitCount => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.46',
  gtmAttr2LowerBoundPctRow => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.47',
  gtmAttr2LowerBoundPctCol => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.48',
  gtmAttr2Autoconf => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.49',
  gtmAttr2AutoconfDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttr2Autoconf',
  gtmAttr2Autosync => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.50',
  gtmAttr2AutosyncDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttr2Autosync',
  gtmAttr2SyncNamedConf => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.51',
  gtmAttr2SyncNamedConfDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttr2SyncNamedConf',
  gtmAttr2SyncGroup => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.52',
  gtmAttr2SyncTimeout => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.53',
  gtmAttr2SyncZonesTimeout => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.54',
  gtmAttr2TimeTolerance => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.55',
  gtmAttr2TopologyLongestMatch => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.56',
  gtmAttr2TopologyLongestMatchDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttr2TopologyLongestMatch',
  gtmAttr2TopologyAclThreshold => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.57',
  gtmAttr2StaticPersistCidr => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.58',
  gtmAttr2StaticPersistV6Cidr => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.59',
  gtmAttr2QosFactorVsScore => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.60',
  gtmAttr2TimerSendKeepAlive => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.61',
  gtmAttr2CertificateDepth => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.62',
  gtmAttr2MaxMemoryUsage => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.63',
  gtmAttr2Name => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.64',
  gtmAttr2ForwardStatus => '1.3.6.1.4.1.3375.2.3.1.1.3.2.1.65',
  gtmAttr2ForwardStatusDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAttr2ForwardStatus',
  gtmGlobalStats => '1.3.6.1.4.1.3375.2.3.1.2',
  gtmGlobalStat => '1.3.6.1.4.1.3375.2.3.1.2.1',
  gtmStatResetStats => '1.3.6.1.4.1.3375.2.3.1.2.1.1',
  gtmStatRequests => '1.3.6.1.4.1.3375.2.3.1.2.1.2',
  gtmStatResolutions => '1.3.6.1.4.1.3375.2.3.1.2.1.3',
  gtmStatPersisted => '1.3.6.1.4.1.3375.2.3.1.2.1.4',
  gtmStatPreferred => '1.3.6.1.4.1.3375.2.3.1.2.1.5',
  gtmStatAlternate => '1.3.6.1.4.1.3375.2.3.1.2.1.6',
  gtmStatFallback => '1.3.6.1.4.1.3375.2.3.1.2.1.7',
  gtmStatDropped => '1.3.6.1.4.1.3375.2.3.1.2.1.8',
  gtmStatExplicitIp => '1.3.6.1.4.1.3375.2.3.1.2.1.9',
  gtmStatReturnToDns => '1.3.6.1.4.1.3375.2.3.1.2.1.10',
  gtmStatReconnects => '1.3.6.1.4.1.3375.2.3.1.2.1.11',
  gtmStatBytesReceived => '1.3.6.1.4.1.3375.2.3.1.2.1.12',
  gtmStatBytesSent => '1.3.6.1.4.1.3375.2.3.1.2.1.13',
  gtmStatNumBacklogged => '1.3.6.1.4.1.3375.2.3.1.2.1.14',
  gtmStatBytesDropped => '1.3.6.1.4.1.3375.2.3.1.2.1.15',
  gtmStatLdnses => '1.3.6.1.4.1.3375.2.3.1.2.1.16',
  gtmStatPaths => '1.3.6.1.4.1.3375.2.3.1.2.1.17',
  gtmStatReturnFromDns => '1.3.6.1.4.1.3375.2.3.1.2.1.18',
  gtmStatCnameResolutions => '1.3.6.1.4.1.3375.2.3.1.2.1.19',
  gtmStatARequests => '1.3.6.1.4.1.3375.2.3.1.2.1.20',
  gtmStatAaaaRequests => '1.3.6.1.4.1.3375.2.3.1.2.1.21',
  gtmGlobalDnssecStat => '1.3.6.1.4.1.3375.2.3.1.2.2',
  gtmDnssecStatResetStats => '1.3.6.1.4.1.3375.2.3.1.2.2.1',
  gtmDnssecStatNsec3s => '1.3.6.1.4.1.3375.2.3.1.2.2.2',
  gtmDnssecStatNsec3Nodata => '1.3.6.1.4.1.3375.2.3.1.2.2.3',
  gtmDnssecStatNsec3Nxdomain => '1.3.6.1.4.1.3375.2.3.1.2.2.4',
  gtmDnssecStatNsec3Referral => '1.3.6.1.4.1.3375.2.3.1.2.2.5',
  gtmDnssecStatNsec3Resalt => '1.3.6.1.4.1.3375.2.3.1.2.2.6',
  gtmDnssecStatDnssecResponses => '1.3.6.1.4.1.3375.2.3.1.2.2.7',
  gtmDnssecStatDnssecDnskeyQueries => '1.3.6.1.4.1.3375.2.3.1.2.2.8',
  gtmDnssecStatDnssecNsec3paramQueries => '1.3.6.1.4.1.3375.2.3.1.2.2.9',
  gtmDnssecStatDnssecDsQueries => '1.3.6.1.4.1.3375.2.3.1.2.2.10',
  gtmDnssecStatSigCryptoFailed => '1.3.6.1.4.1.3375.2.3.1.2.2.11',
  gtmDnssecStatSigSuccess => '1.3.6.1.4.1.3375.2.3.1.2.2.12',
  gtmDnssecStatSigFailed => '1.3.6.1.4.1.3375.2.3.1.2.2.13',
  gtmDnssecStatSigRrsetFailed => '1.3.6.1.4.1.3375.2.3.1.2.2.14',
  gtmDnssecStatConnectFlowFailed => '1.3.6.1.4.1.3375.2.3.1.2.2.15',
  gtmDnssecStatTowireFailed => '1.3.6.1.4.1.3375.2.3.1.2.2.16',
  gtmDnssecStatAxfrQueries => '1.3.6.1.4.1.3375.2.3.1.2.2.17',
  gtmDnssecStatIxfrQueries => '1.3.6.1.4.1.3375.2.3.1.2.2.18',
  gtmDnssecStatXfrStarts => '1.3.6.1.4.1.3375.2.3.1.2.2.19',
  gtmDnssecStatXfrCompletes => '1.3.6.1.4.1.3375.2.3.1.2.2.20',
  gtmDnssecStatXfrMsgs => '1.3.6.1.4.1.3375.2.3.1.2.2.21',
  gtmDnssecStatXfrMasterMsgs => '1.3.6.1.4.1.3375.2.3.1.2.2.22',
  gtmDnssecStatXfrResponseAverageSize => '1.3.6.1.4.1.3375.2.3.1.2.2.23',
  gtmDnssecStatXfrSerial => '1.3.6.1.4.1.3375.2.3.1.2.2.24',
  gtmDnssecStatXfrMasterSerial => '1.3.6.1.4.1.3375.2.3.1.2.2.25',
  gtmApplications => '1.3.6.1.4.1.3375.2.3.2',
  gtmApplication => '1.3.6.1.4.1.3375.2.3.2.1',
  gtmAppNumber => '1.3.6.1.4.1.3375.2.3.2.1.1',
  gtmAppTable => '1.3.6.1.4.1.3375.2.3.2.1.2',
  gtmAppEntry => '1.3.6.1.4.1.3375.2.3.2.1.2.1',
  gtmAppName => '1.3.6.1.4.1.3375.2.3.2.1.2.1.1',
  gtmAppPersist => '1.3.6.1.4.1.3375.2.3.2.1.2.1.2',
  gtmAppPersistDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAppPersist',
  gtmAppTtlPersist => '1.3.6.1.4.1.3375.2.3.2.1.2.1.3',
  gtmAppAvailability => '1.3.6.1.4.1.3375.2.3.2.1.2.1.4',
  gtmAppAvailabilityDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAppAvailability',
  gtmApplicationStatus => '1.3.6.1.4.1.3375.2.3.2.2',
  gtmAppStatusNumber => '1.3.6.1.4.1.3375.2.3.2.2.1',
  gtmAppStatusTable => '1.3.6.1.4.1.3375.2.3.2.2.2',
  gtmAppStatusEntry => '1.3.6.1.4.1.3375.2.3.2.2.2.1',
  gtmAppStatusName => '1.3.6.1.4.1.3375.2.3.2.2.2.1.1',
  gtmAppStatusAvailState => '1.3.6.1.4.1.3375.2.3.2.2.2.1.2',
  gtmAppStatusAvailStateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAppStatusAvailState',
  gtmAppStatusEnabledState => '1.3.6.1.4.1.3375.2.3.2.2.2.1.3',
  gtmAppStatusEnabledStateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAppStatusEnabledState',
  gtmAppStatusParentType => '1.3.6.1.4.1.3375.2.3.2.2.2.1.4',
  gtmAppStatusDetailReason => '1.3.6.1.4.1.3375.2.3.2.2.2.1.5',
  gtmAppContextStat => '1.3.6.1.4.1.3375.2.3.2.3',
  gtmAppContStatNumber => '1.3.6.1.4.1.3375.2.3.2.3.1',
  gtmAppContStatTable => '1.3.6.1.4.1.3375.2.3.2.3.2',
  gtmAppContStatEntry => '1.3.6.1.4.1.3375.2.3.2.3.2.1',
  gtmAppContStatAppName => '1.3.6.1.4.1.3375.2.3.2.3.2.1.1',
  gtmAppContStatType => '1.3.6.1.4.1.3375.2.3.2.3.2.1.2',
  gtmAppContStatTypeDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAppContStatType',
  gtmAppContStatName => '1.3.6.1.4.1.3375.2.3.2.3.2.1.3',
  gtmAppContStatNumAvail => '1.3.6.1.4.1.3375.2.3.2.3.2.1.4',
  gtmAppContStatAvailState => '1.3.6.1.4.1.3375.2.3.2.3.2.1.5',
  gtmAppContStatAvailStateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAppContStatAvailState',
  gtmAppContStatEnabledState => '1.3.6.1.4.1.3375.2.3.2.3.2.1.6',
  gtmAppContStatEnabledStateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAppContStatEnabledState',
  gtmAppContStatParentType => '1.3.6.1.4.1.3375.2.3.2.3.2.1.7',
  gtmAppContStatDetailReason => '1.3.6.1.4.1.3375.2.3.2.3.2.1.8',
  gtmAppContextDisable => '1.3.6.1.4.1.3375.2.3.2.4',
  gtmAppContDisNumber => '1.3.6.1.4.1.3375.2.3.2.4.1',
  gtmAppContDisTable => '1.3.6.1.4.1.3375.2.3.2.4.2',
  gtmAppContDisEntry => '1.3.6.1.4.1.3375.2.3.2.4.2.1',
  gtmAppContDisAppName => '1.3.6.1.4.1.3375.2.3.2.4.2.1.1',
  gtmAppContDisType => '1.3.6.1.4.1.3375.2.3.2.4.2.1.2',
  gtmAppContDisTypeDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmAppContDisType',
  gtmAppContDisName => '1.3.6.1.4.1.3375.2.3.2.4.2.1.3',
  gtmDataCenters => '1.3.6.1.4.1.3375.2.3.3',
  gtmDataCenter => '1.3.6.1.4.1.3375.2.3.3.1',
  gtmDcNumber => '1.3.6.1.4.1.3375.2.3.3.1.1',
  gtmDcTable => '1.3.6.1.4.1.3375.2.3.3.1.2',
  gtmDcEntry => '1.3.6.1.4.1.3375.2.3.3.1.2.1',
  gtmDcName => '1.3.6.1.4.1.3375.2.3.3.1.2.1.1',
  gtmDcLocation => '1.3.6.1.4.1.3375.2.3.3.1.2.1.2',
  gtmDcContact => '1.3.6.1.4.1.3375.2.3.3.1.2.1.3',
  gtmDcEnabled => '1.3.6.1.4.1.3375.2.3.3.1.2.1.4',
  gtmDcEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmDcEnabled',
  gtmDataCenterStat => '1.3.6.1.4.1.3375.2.3.3.2',
  gtmDcStatResetStats => '1.3.6.1.4.1.3375.2.3.3.2.1',
  gtmDcStatNumber => '1.3.6.1.4.1.3375.2.3.3.2.2',
  gtmDcStatTable => '1.3.6.1.4.1.3375.2.3.3.2.3',
  gtmDcStatEntry => '1.3.6.1.4.1.3375.2.3.3.2.3.1',
  gtmDcStatName => '1.3.6.1.4.1.3375.2.3.3.2.3.1.1',
  gtmDcStatCpuUsage => '1.3.6.1.4.1.3375.2.3.3.2.3.1.2',
  gtmDcStatMemAvail => '1.3.6.1.4.1.3375.2.3.3.2.3.1.3',
  gtmDcStatBitsPerSecIn => '1.3.6.1.4.1.3375.2.3.3.2.3.1.4',
  gtmDcStatBitsPerSecOut => '1.3.6.1.4.1.3375.2.3.3.2.3.1.5',
  gtmDcStatPktsPerSecIn => '1.3.6.1.4.1.3375.2.3.3.2.3.1.6',
  gtmDcStatPktsPerSecOut => '1.3.6.1.4.1.3375.2.3.3.2.3.1.7',
  gtmDcStatConnections => '1.3.6.1.4.1.3375.2.3.3.2.3.1.8',
  gtmDcStatConnRate => '1.3.6.1.4.1.3375.2.3.3.2.3.1.9',
  gtmDataCenterStatus => '1.3.6.1.4.1.3375.2.3.3.3',
  gtmDcStatusNumber => '1.3.6.1.4.1.3375.2.3.3.3.1',
  gtmDcStatusTable => '1.3.6.1.4.1.3375.2.3.3.3.2',
  gtmDcStatusEntry => '1.3.6.1.4.1.3375.2.3.3.3.2.1',
  gtmDcStatusName => '1.3.6.1.4.1.3375.2.3.3.3.2.1.1',
  gtmDcStatusAvailState => '1.3.6.1.4.1.3375.2.3.3.3.2.1.2',
  gtmDcStatusAvailStateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmDcStatusAvailState',
  gtmDcStatusEnabledState => '1.3.6.1.4.1.3375.2.3.3.3.2.1.3',
  gtmDcStatusEnabledStateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmDcStatusEnabledState',
  gtmDcStatusParentType => '1.3.6.1.4.1.3375.2.3.3.3.2.1.4',
  gtmDcStatusDetailReason => '1.3.6.1.4.1.3375.2.3.3.3.2.1.5',
  gtmIps => '1.3.6.1.4.1.3375.2.3.4',
  gtmIp => '1.3.6.1.4.1.3375.2.3.4.1',
  gtmIpNumber => '1.3.6.1.4.1.3375.2.3.4.1.1',
  gtmIpTable => '1.3.6.1.4.1.3375.2.3.4.1.2',
  gtmIpEntry => '1.3.6.1.4.1.3375.2.3.4.1.2.1',
  gtmIpIpType => '1.3.6.1.4.1.3375.2.3.4.1.2.1.1',
  gtmIpIp => '1.3.6.1.4.1.3375.2.3.4.1.2.1.2',
  gtmIpLinkName => '1.3.6.1.4.1.3375.2.3.4.1.2.1.3',
  gtmIpServerName => '1.3.6.1.4.1.3375.2.3.4.1.2.1.4',
  gtmIpUnitId => '1.3.6.1.4.1.3375.2.3.4.1.2.1.5',
  gtmIpIpXlatedType => '1.3.6.1.4.1.3375.2.3.4.1.2.1.6',
  gtmIpIpXlated => '1.3.6.1.4.1.3375.2.3.4.1.2.1.7',
  gtmIpDeviceName => '1.3.6.1.4.1.3375.2.3.4.1.2.1.8',
  gtmLinks => '1.3.6.1.4.1.3375.2.3.5',
  gtmLink => '1.3.6.1.4.1.3375.2.3.5.1',
  gtmLinkNumber => '1.3.6.1.4.1.3375.2.3.5.1.1',
  gtmLinkTable => '1.3.6.1.4.1.3375.2.3.5.1.2',
  gtmLinkEntry => '1.3.6.1.4.1.3375.2.3.5.1.2.1',
  gtmLinkName => '1.3.6.1.4.1.3375.2.3.5.1.2.1.1',
  gtmLinkDcName => '1.3.6.1.4.1.3375.2.3.5.1.2.1.2',
  gtmLinkIspName => '1.3.6.1.4.1.3375.2.3.5.1.2.1.3',
  gtmLinkUplinkAddressType => '1.3.6.1.4.1.3375.2.3.5.1.2.1.4',
  gtmLinkUplinkAddress => '1.3.6.1.4.1.3375.2.3.5.1.2.1.5',
  gtmLinkLimitInCpuUsageEnabled => '1.3.6.1.4.1.3375.2.3.5.1.2.1.6',
  gtmLinkLimitInCpuUsageEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmLinkLimitInCpuUsageEnabled',
  gtmLinkLimitInMemAvailEnabled => '1.3.6.1.4.1.3375.2.3.5.1.2.1.7',
  gtmLinkLimitInMemAvailEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmLinkLimitInMemAvailEnabled',
  gtmLinkLimitInBitsPerSecEnabled => '1.3.6.1.4.1.3375.2.3.5.1.2.1.8',
  gtmLinkLimitInBitsPerSecEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmLinkLimitInBitsPerSecEnabled',
  gtmLinkLimitInPktsPerSecEnabled => '1.3.6.1.4.1.3375.2.3.5.1.2.1.9',
  gtmLinkLimitInPktsPerSecEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmLinkLimitInPktsPerSecEnabled',
  gtmLinkLimitInConnEnabled => '1.3.6.1.4.1.3375.2.3.5.1.2.1.10',
  gtmLinkLimitInConnEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmLinkLimitInConnEnabled',
  gtmLinkLimitInConnPerSecEnabled => '1.3.6.1.4.1.3375.2.3.5.1.2.1.11',
  gtmLinkLimitInConnPerSecEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmLinkLimitInConnPerSecEnabled',
  gtmLinkLimitInCpuUsage => '1.3.6.1.4.1.3375.2.3.5.1.2.1.12',
  gtmLinkLimitInMemAvail => '1.3.6.1.4.1.3375.2.3.5.1.2.1.13',
  gtmLinkLimitInBitsPerSec => '1.3.6.1.4.1.3375.2.3.5.1.2.1.14',
  gtmLinkLimitInPktsPerSec => '1.3.6.1.4.1.3375.2.3.5.1.2.1.15',
  gtmLinkLimitInConn => '1.3.6.1.4.1.3375.2.3.5.1.2.1.16',
  gtmLinkLimitInConnPerSec => '1.3.6.1.4.1.3375.2.3.5.1.2.1.17',
  gtmLinkLimitOutCpuUsageEnabled => '1.3.6.1.4.1.3375.2.3.5.1.2.1.18',
  gtmLinkLimitOutCpuUsageEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmLinkLimitOutCpuUsageEnabled',
  gtmLinkLimitOutMemAvailEnabled => '1.3.6.1.4.1.3375.2.3.5.1.2.1.19',
  gtmLinkLimitOutMemAvailEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmLinkLimitOutMemAvailEnabled',
  gtmLinkLimitOutBitsPerSecEnabled => '1.3.6.1.4.1.3375.2.3.5.1.2.1.20',
  gtmLinkLimitOutBitsPerSecEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmLinkLimitOutBitsPerSecEnabled',
  gtmLinkLimitOutPktsPerSecEnabled => '1.3.6.1.4.1.3375.2.3.5.1.2.1.21',
  gtmLinkLimitOutPktsPerSecEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmLinkLimitOutPktsPerSecEnabled',
  gtmLinkLimitOutConnEnabled => '1.3.6.1.4.1.3375.2.3.5.1.2.1.22',
  gtmLinkLimitOutConnEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmLinkLimitOutConnEnabled',
  gtmLinkLimitOutConnPerSecEnabled => '1.3.6.1.4.1.3375.2.3.5.1.2.1.23',
  gtmLinkLimitOutConnPerSecEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmLinkLimitOutConnPerSecEnabled',
  gtmLinkLimitOutCpuUsage => '1.3.6.1.4.1.3375.2.3.5.1.2.1.24',
  gtmLinkLimitOutMemAvail => '1.3.6.1.4.1.3375.2.3.5.1.2.1.25',
  gtmLinkLimitOutBitsPerSec => '1.3.6.1.4.1.3375.2.3.5.1.2.1.26',
  gtmLinkLimitOutPktsPerSec => '1.3.6.1.4.1.3375.2.3.5.1.2.1.27',
  gtmLinkLimitOutConn => '1.3.6.1.4.1.3375.2.3.5.1.2.1.28',
  gtmLinkLimitOutConnPerSec => '1.3.6.1.4.1.3375.2.3.5.1.2.1.29',
  gtmLinkLimitTotalCpuUsageEnabled => '1.3.6.1.4.1.3375.2.3.5.1.2.1.30',
  gtmLinkLimitTotalCpuUsageEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmLinkLimitTotalCpuUsageEnabled',
  gtmLinkLimitTotalMemAvailEnabled => '1.3.6.1.4.1.3375.2.3.5.1.2.1.31',
  gtmLinkLimitTotalMemAvailEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmLinkLimitTotalMemAvailEnabled',
  gtmLinkLimitTotalBitsPerSecEnabled => '1.3.6.1.4.1.3375.2.3.5.1.2.1.32',
  gtmLinkLimitTotalBitsPerSecEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmLinkLimitTotalBitsPerSecEnabled',
  gtmLinkLimitTotalPktsPerSecEnabled => '1.3.6.1.4.1.3375.2.3.5.1.2.1.33',
  gtmLinkLimitTotalPktsPerSecEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmLinkLimitTotalPktsPerSecEnabled',
  gtmLinkLimitTotalConnEnabled => '1.3.6.1.4.1.3375.2.3.5.1.2.1.34',
  gtmLinkLimitTotalConnEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmLinkLimitTotalConnEnabled',
  gtmLinkLimitTotalConnPerSecEnabled => '1.3.6.1.4.1.3375.2.3.5.1.2.1.35',
  gtmLinkLimitTotalConnPerSecEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmLinkLimitTotalConnPerSecEnabled',
  gtmLinkLimitTotalCpuUsage => '1.3.6.1.4.1.3375.2.3.5.1.2.1.36',
  gtmLinkLimitTotalMemAvail => '1.3.6.1.4.1.3375.2.3.5.1.2.1.37',
  gtmLinkLimitTotalBitsPerSec => '1.3.6.1.4.1.3375.2.3.5.1.2.1.38',
  gtmLinkLimitTotalPktsPerSec => '1.3.6.1.4.1.3375.2.3.5.1.2.1.39',
  gtmLinkLimitTotalConn => '1.3.6.1.4.1.3375.2.3.5.1.2.1.40',
  gtmLinkLimitTotalConnPerSec => '1.3.6.1.4.1.3375.2.3.5.1.2.1.41',
  gtmLinkMonitorRule => '1.3.6.1.4.1.3375.2.3.5.1.2.1.42',
  gtmLinkDuplex => '1.3.6.1.4.1.3375.2.3.5.1.2.1.43',
  gtmLinkDuplexDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmLinkDuplex',
  gtmLinkEnabled => '1.3.6.1.4.1.3375.2.3.5.1.2.1.44',
  gtmLinkEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmLinkEnabled',
  gtmLinkRatio => '1.3.6.1.4.1.3375.2.3.5.1.2.1.45',
  gtmLinkPrepaid => '1.3.6.1.4.1.3375.2.3.5.1.2.1.46',
  gtmLinkPrepaidInDollars => '1.3.6.1.4.1.3375.2.3.5.1.2.1.47',
  gtmLinkWeightingType => '1.3.6.1.4.1.3375.2.3.5.1.2.1.48',
  gtmLinkWeightingTypeDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmLinkWeightingType',
  gtmLinkCost => '1.3.6.1.4.1.3375.2.3.5.2',
  gtmLinkCostNumber => '1.3.6.1.4.1.3375.2.3.5.2.1',
  gtmLinkCostTable => '1.3.6.1.4.1.3375.2.3.5.2.2',
  gtmLinkCostEntry => '1.3.6.1.4.1.3375.2.3.5.2.2.1',
  gtmLinkCostName => '1.3.6.1.4.1.3375.2.3.5.2.2.1.1',
  gtmLinkCostIndex => '1.3.6.1.4.1.3375.2.3.5.2.2.1.2',
  gtmLinkCostUptoBps => '1.3.6.1.4.1.3375.2.3.5.2.2.1.3',
  gtmLinkCostDollarsPerMbps => '1.3.6.1.4.1.3375.2.3.5.2.2.1.4',
  gtmLinkStat => '1.3.6.1.4.1.3375.2.3.5.3',
  gtmLinkStatResetStats => '1.3.6.1.4.1.3375.2.3.5.3.1',
  gtmLinkStatNumber => '1.3.6.1.4.1.3375.2.3.5.3.2',
  gtmLinkStatTable => '1.3.6.1.4.1.3375.2.3.5.3.3',
  gtmLinkStatEntry => '1.3.6.1.4.1.3375.2.3.5.3.3.1',
  gtmLinkStatName => '1.3.6.1.4.1.3375.2.3.5.3.3.1.1',
  gtmLinkStatRate => '1.3.6.1.4.1.3375.2.3.5.3.3.1.2',
  gtmLinkStatRateIn => '1.3.6.1.4.1.3375.2.3.5.3.3.1.3',
  gtmLinkStatRateOut => '1.3.6.1.4.1.3375.2.3.5.3.3.1.4',
  gtmLinkStatRateNode => '1.3.6.1.4.1.3375.2.3.5.3.3.1.5',
  gtmLinkStatRateNodeIn => '1.3.6.1.4.1.3375.2.3.5.3.3.1.6',
  gtmLinkStatRateNodeOut => '1.3.6.1.4.1.3375.2.3.5.3.3.1.7',
  gtmLinkStatRateVses => '1.3.6.1.4.1.3375.2.3.5.3.3.1.8',
  gtmLinkStatRateVsesIn => '1.3.6.1.4.1.3375.2.3.5.3.3.1.9',
  gtmLinkStatRateVsesOut => '1.3.6.1.4.1.3375.2.3.5.3.3.1.10',
  gtmLinkStatLcsIn => '1.3.6.1.4.1.3375.2.3.5.3.3.1.11',
  gtmLinkStatLcsOut => '1.3.6.1.4.1.3375.2.3.5.3.3.1.12',
  gtmLinkStatPaths => '1.3.6.1.4.1.3375.2.3.5.3.3.1.13',
  gtmLinkStatus => '1.3.6.1.4.1.3375.2.3.5.4',
  gtmLinkStatusNumber => '1.3.6.1.4.1.3375.2.3.5.4.1',
  gtmLinkStatusTable => '1.3.6.1.4.1.3375.2.3.5.4.2',
  gtmLinkStatusEntry => '1.3.6.1.4.1.3375.2.3.5.4.2.1',
  gtmLinkStatusName => '1.3.6.1.4.1.3375.2.3.5.4.2.1.1',
  gtmLinkStatusAvailState => '1.3.6.1.4.1.3375.2.3.5.4.2.1.2',
  gtmLinkStatusAvailStateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmLinkStatusAvailState',
  gtmLinkStatusEnabledState => '1.3.6.1.4.1.3375.2.3.5.4.2.1.3',
  gtmLinkStatusEnabledStateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmLinkStatusEnabledState',
  gtmLinkStatusParentType => '1.3.6.1.4.1.3375.2.3.5.4.2.1.4',
  gtmLinkStatusDetailReason => '1.3.6.1.4.1.3375.2.3.5.4.2.1.5',
  gtmPools => '1.3.6.1.4.1.3375.2.3.6',
  gtmPool => '1.3.6.1.4.1.3375.2.3.6.1',
  gtmPoolNumber => '1.3.6.1.4.1.3375.2.3.6.1.1',
  gtmPoolTable => '1.3.6.1.4.1.3375.2.3.6.1.2',
  gtmPoolEntry => '1.3.6.1.4.1.3375.2.3.6.1.2.1',
  gtmPoolName => '1.3.6.1.4.1.3375.2.3.6.1.2.1.1',
  gtmPoolTtl => '1.3.6.1.4.1.3375.2.3.6.1.2.1.2',
  gtmPoolEnabled => '1.3.6.1.4.1.3375.2.3.6.1.2.1.3',
  gtmPoolEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmPoolEnabled',
  gtmPoolVerifyMember => '1.3.6.1.4.1.3375.2.3.6.1.2.1.4',
  gtmPoolVerifyMemberDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmPoolVerifyMember',
  gtmPoolDynamicRatio => '1.3.6.1.4.1.3375.2.3.6.1.2.1.5',
  gtmPoolDynamicRatioDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmPoolDynamicRatio',
  gtmPoolAnswersToReturn => '1.3.6.1.4.1.3375.2.3.6.1.2.1.6',
  gtmPoolLbMode => '1.3.6.1.4.1.3375.2.3.6.1.2.1.7',
  gtmPoolLbModeDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmPoolLbMode',
  gtmPoolAlternate => '1.3.6.1.4.1.3375.2.3.6.1.2.1.8',
  gtmPoolAlternateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmPoolAlternate',
  gtmPoolFallback => '1.3.6.1.4.1.3375.2.3.6.1.2.1.9',
  gtmPoolFallbackDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmPoolFallback',
  gtmPoolManualResume => '1.3.6.1.4.1.3375.2.3.6.1.2.1.10',
  gtmPoolManualResumeDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmPoolManualResume',
  gtmPoolQosCoeffRtt => '1.3.6.1.4.1.3375.2.3.6.1.2.1.11',
  gtmPoolQosCoeffHops => '1.3.6.1.4.1.3375.2.3.6.1.2.1.12',
  gtmPoolQosCoeffTopology => '1.3.6.1.4.1.3375.2.3.6.1.2.1.13',
  gtmPoolQosCoeffHitRatio => '1.3.6.1.4.1.3375.2.3.6.1.2.1.14',
  gtmPoolQosCoeffPacketRate => '1.3.6.1.4.1.3375.2.3.6.1.2.1.15',
  gtmPoolQosCoeffVsCapacity => '1.3.6.1.4.1.3375.2.3.6.1.2.1.16',
  gtmPoolQosCoeffBps => '1.3.6.1.4.1.3375.2.3.6.1.2.1.17',
  gtmPoolQosCoeffLcs => '1.3.6.1.4.1.3375.2.3.6.1.2.1.18',
  gtmPoolQosCoeffConnRate => '1.3.6.1.4.1.3375.2.3.6.1.2.1.19',
  gtmPoolFallbackIpType => '1.3.6.1.4.1.3375.2.3.6.1.2.1.20',
  gtmPoolFallbackIp => '1.3.6.1.4.1.3375.2.3.6.1.2.1.21',
  gtmPoolCname => '1.3.6.1.4.1.3375.2.3.6.1.2.1.22',
  gtmPoolLimitCpuUsageEnabled => '1.3.6.1.4.1.3375.2.3.6.1.2.1.23',
  gtmPoolLimitCpuUsageEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmPoolLimitCpuUsageEnabled',
  gtmPoolLimitMemAvailEnabled => '1.3.6.1.4.1.3375.2.3.6.1.2.1.24',
  gtmPoolLimitMemAvailEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmPoolLimitMemAvailEnabled',
  gtmPoolLimitBitsPerSecEnabled => '1.3.6.1.4.1.3375.2.3.6.1.2.1.25',
  gtmPoolLimitBitsPerSecEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmPoolLimitBitsPerSecEnabled',
  gtmPoolLimitPktsPerSecEnabled => '1.3.6.1.4.1.3375.2.3.6.1.2.1.26',
  gtmPoolLimitPktsPerSecEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmPoolLimitPktsPerSecEnabled',
  gtmPoolLimitConnEnabled => '1.3.6.1.4.1.3375.2.3.6.1.2.1.27',
  gtmPoolLimitConnEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmPoolLimitConnEnabled',
  gtmPoolLimitConnPerSecEnabled => '1.3.6.1.4.1.3375.2.3.6.1.2.1.28',
  gtmPoolLimitConnPerSecEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmPoolLimitConnPerSecEnabled',
  gtmPoolLimitCpuUsage => '1.3.6.1.4.1.3375.2.3.6.1.2.1.29',
  gtmPoolLimitMemAvail => '1.3.6.1.4.1.3375.2.3.6.1.2.1.30',
  gtmPoolLimitBitsPerSec => '1.3.6.1.4.1.3375.2.3.6.1.2.1.31',
  gtmPoolLimitPktsPerSec => '1.3.6.1.4.1.3375.2.3.6.1.2.1.32',
  gtmPoolLimitConn => '1.3.6.1.4.1.3375.2.3.6.1.2.1.33',
  gtmPoolLimitConnPerSec => '1.3.6.1.4.1.3375.2.3.6.1.2.1.34',
  gtmPoolMonitorRule => '1.3.6.1.4.1.3375.2.3.6.1.2.1.35',
  gtmPoolQosCoeffVsScore => '1.3.6.1.4.1.3375.2.3.6.1.2.1.36',
  gtmPoolFallbackIpv6Type => '1.3.6.1.4.1.3375.2.3.6.1.2.1.37',
  gtmPoolFallbackIpv6 => '1.3.6.1.4.1.3375.2.3.6.1.2.1.38',
  gtmPoolStat => '1.3.6.1.4.1.3375.2.3.6.2',
  gtmPoolStatResetStats => '1.3.6.1.4.1.3375.2.3.6.2.1',
  gtmPoolStatNumber => '1.3.6.1.4.1.3375.2.3.6.2.2',
  gtmPoolStatTable => '1.3.6.1.4.1.3375.2.3.6.2.3',
  gtmPoolStatEntry => '1.3.6.1.4.1.3375.2.3.6.2.3.1',
  gtmPoolStatName => '1.3.6.1.4.1.3375.2.3.6.2.3.1.1',
  gtmPoolStatPreferred => '1.3.6.1.4.1.3375.2.3.6.2.3.1.2',
  gtmPoolStatAlternate => '1.3.6.1.4.1.3375.2.3.6.2.3.1.3',
  gtmPoolStatFallback => '1.3.6.1.4.1.3375.2.3.6.2.3.1.4',
  gtmPoolStatDropped => '1.3.6.1.4.1.3375.2.3.6.2.3.1.5',
  gtmPoolStatExplicitIp => '1.3.6.1.4.1.3375.2.3.6.2.3.1.6',
  gtmPoolStatReturnToDns => '1.3.6.1.4.1.3375.2.3.6.2.3.1.7',
  gtmPoolStatReturnFromDns => '1.3.6.1.4.1.3375.2.3.6.2.3.1.8',
  gtmPoolStatCnameResolutions => '1.3.6.1.4.1.3375.2.3.6.2.3.1.9',
  gtmPoolStatus => '1.3.6.1.4.1.3375.2.3.6.3',
  gtmPoolStatusNumber => '1.3.6.1.4.1.3375.2.3.6.3.1',
  gtmPoolStatusTable => '1.3.6.1.4.1.3375.2.3.6.3.2',
  gtmPoolStatusEntry => '1.3.6.1.4.1.3375.2.3.6.3.2.1',
  gtmPoolStatusName => '1.3.6.1.4.1.3375.2.3.6.3.2.1.1',
  gtmPoolStatusAvailState => '1.3.6.1.4.1.3375.2.3.6.3.2.1.2',
  gtmPoolStatusAvailStateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmPoolStatusAvailState',
  gtmPoolStatusEnabledState => '1.3.6.1.4.1.3375.2.3.6.3.2.1.3',
  gtmPoolStatusEnabledStateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmPoolStatusEnabledState',
  gtmPoolStatusParentType => '1.3.6.1.4.1.3375.2.3.6.3.2.1.4',
  gtmPoolStatusDetailReason => '1.3.6.1.4.1.3375.2.3.6.3.2.1.5',
  gtmPoolMember => '1.3.6.1.4.1.3375.2.3.6.4',
  gtmPoolMbrNumber => '1.3.6.1.4.1.3375.2.3.6.4.1',
  gtmPoolMbrTable => '1.3.6.1.4.1.3375.2.3.6.4.2',
  gtmPoolMbrEntry => '1.3.6.1.4.1.3375.2.3.6.4.2.1',
  gtmPoolMbrPoolName => '1.3.6.1.4.1.3375.2.3.6.4.2.1.1',
  gtmPoolMbrIpType => '1.3.6.1.4.1.3375.2.3.6.4.2.1.2',
  gtmPoolMbrIp => '1.3.6.1.4.1.3375.2.3.6.4.2.1.3',
  gtmPoolMbrPort => '1.3.6.1.4.1.3375.2.3.6.4.2.1.4',
  gtmPoolMbrVsName => '1.3.6.1.4.1.3375.2.3.6.4.2.1.5',
  gtmPoolMbrOrder => '1.3.6.1.4.1.3375.2.3.6.4.2.1.6',
  gtmPoolMbrLimitCpuUsageEnabled => '1.3.6.1.4.1.3375.2.3.6.4.2.1.7',
  gtmPoolMbrLimitCpuUsageEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmPoolMbrLimitCpuUsageEnabled',
  gtmPoolMbrLimitMemAvailEnabled => '1.3.6.1.4.1.3375.2.3.6.4.2.1.8',
  gtmPoolMbrLimitMemAvailEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmPoolMbrLimitMemAvailEnabled',
  gtmPoolMbrLimitBitsPerSecEnabled => '1.3.6.1.4.1.3375.2.3.6.4.2.1.9',
  gtmPoolMbrLimitBitsPerSecEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmPoolMbrLimitBitsPerSecEnabled',
  gtmPoolMbrLimitPktsPerSecEnabled => '1.3.6.1.4.1.3375.2.3.6.4.2.1.10',
  gtmPoolMbrLimitPktsPerSecEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmPoolMbrLimitPktsPerSecEnabled',
  gtmPoolMbrLimitConnEnabled => '1.3.6.1.4.1.3375.2.3.6.4.2.1.11',
  gtmPoolMbrLimitConnEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmPoolMbrLimitConnEnabled',
  gtmPoolMbrLimitConnPerSecEnabled => '1.3.6.1.4.1.3375.2.3.6.4.2.1.12',
  gtmPoolMbrLimitConnPerSecEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmPoolMbrLimitConnPerSecEnabled',
  gtmPoolMbrLimitCpuUsage => '1.3.6.1.4.1.3375.2.3.6.4.2.1.13',
  gtmPoolMbrLimitMemAvail => '1.3.6.1.4.1.3375.2.3.6.4.2.1.14',
  gtmPoolMbrLimitBitsPerSec => '1.3.6.1.4.1.3375.2.3.6.4.2.1.15',
  gtmPoolMbrLimitPktsPerSec => '1.3.6.1.4.1.3375.2.3.6.4.2.1.16',
  gtmPoolMbrLimitConn => '1.3.6.1.4.1.3375.2.3.6.4.2.1.17',
  gtmPoolMbrLimitConnPerSec => '1.3.6.1.4.1.3375.2.3.6.4.2.1.18',
  gtmPoolMbrMonitorRule => '1.3.6.1.4.1.3375.2.3.6.4.2.1.19',
  gtmPoolMbrEnabled => '1.3.6.1.4.1.3375.2.3.6.4.2.1.20',
  gtmPoolMbrEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmPoolMbrEnabled',
  gtmPoolMbrRatio => '1.3.6.1.4.1.3375.2.3.6.4.2.1.21',
  gtmPoolMbrServerName => '1.3.6.1.4.1.3375.2.3.6.4.2.1.22',
  gtmPoolMemberDepends => '1.3.6.1.4.1.3375.2.3.6.5',
  gtmPoolMbrDepsNumber => '1.3.6.1.4.1.3375.2.3.6.5.1',
  gtmPoolMbrDepsTable => '1.3.6.1.4.1.3375.2.3.6.5.2',
  gtmPoolMbrDepsEntry => '1.3.6.1.4.1.3375.2.3.6.5.2.1',
  gtmPoolMbrDepsIpType => '1.3.6.1.4.1.3375.2.3.6.5.2.1.1',
  gtmPoolMbrDepsIp => '1.3.6.1.4.1.3375.2.3.6.5.2.1.2',
  gtmPoolMbrDepsPort => '1.3.6.1.4.1.3375.2.3.6.5.2.1.3',
  gtmPoolMbrDepsPoolName => '1.3.6.1.4.1.3375.2.3.6.5.2.1.4',
  gtmPoolMbrDepsVipType => '1.3.6.1.4.1.3375.2.3.6.5.2.1.5',
  gtmPoolMbrDepsVip => '1.3.6.1.4.1.3375.2.3.6.5.2.1.6',
  gtmPoolMbrDepsVport => '1.3.6.1.4.1.3375.2.3.6.5.2.1.7',
  gtmPoolMbrDepsServerName => '1.3.6.1.4.1.3375.2.3.6.5.2.1.8',
  gtmPoolMbrDepsVsName => '1.3.6.1.4.1.3375.2.3.6.5.2.1.9',
  gtmPoolMbrDepsDependServerName => '1.3.6.1.4.1.3375.2.3.6.5.2.1.10',
  gtmPoolMbrDepsDependVsName => '1.3.6.1.4.1.3375.2.3.6.5.2.1.11',
  gtmPoolMemberStat => '1.3.6.1.4.1.3375.2.3.6.6',
  gtmPoolMbrStatResetStats => '1.3.6.1.4.1.3375.2.3.6.6.1',
  gtmPoolMbrStatNumber => '1.3.6.1.4.1.3375.2.3.6.6.2',
  gtmPoolMbrStatTable => '1.3.6.1.4.1.3375.2.3.6.6.3',
  gtmPoolMbrStatEntry => '1.3.6.1.4.1.3375.2.3.6.6.3.1',
  gtmPoolMbrStatPoolName => '1.3.6.1.4.1.3375.2.3.6.6.3.1.1',
  gtmPoolMbrStatIpType => '1.3.6.1.4.1.3375.2.3.6.6.3.1.2',
  gtmPoolMbrStatIp => '1.3.6.1.4.1.3375.2.3.6.6.3.1.3',
  gtmPoolMbrStatPort => '1.3.6.1.4.1.3375.2.3.6.6.3.1.4',
  gtmPoolMbrStatPreferred => '1.3.6.1.4.1.3375.2.3.6.6.3.1.5',
  gtmPoolMbrStatAlternate => '1.3.6.1.4.1.3375.2.3.6.6.3.1.6',
  gtmPoolMbrStatFallback => '1.3.6.1.4.1.3375.2.3.6.6.3.1.7',
  gtmPoolMbrStatServerName => '1.3.6.1.4.1.3375.2.3.6.6.3.1.8',
  gtmPoolMbrStatVsName => '1.3.6.1.4.1.3375.2.3.6.6.3.1.9',
  gtmPoolMemberStatus => '1.3.6.1.4.1.3375.2.3.6.7',
  gtmPoolMbrStatusNumber => '1.3.6.1.4.1.3375.2.3.6.7.1',
  gtmPoolMbrStatusTable => '1.3.6.1.4.1.3375.2.3.6.7.2',
  gtmPoolMbrStatusEntry => '1.3.6.1.4.1.3375.2.3.6.7.2.1',
  gtmPoolMbrStatusPoolName => '1.3.6.1.4.1.3375.2.3.6.7.2.1.1',
  gtmPoolMbrStatusIpType => '1.3.6.1.4.1.3375.2.3.6.7.2.1.2',
  gtmPoolMbrStatusIp => '1.3.6.1.4.1.3375.2.3.6.7.2.1.3',
  gtmPoolMbrStatusPort => '1.3.6.1.4.1.3375.2.3.6.7.2.1.4',
  gtmPoolMbrStatusAvailState => '1.3.6.1.4.1.3375.2.3.6.7.2.1.5',
  gtmPoolMbrStatusAvailStateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmPoolMbrStatusAvailState',
  gtmPoolMbrStatusEnabledState => '1.3.6.1.4.1.3375.2.3.6.7.2.1.6',
  gtmPoolMbrStatusEnabledStateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmPoolMbrStatusEnabledState',
  gtmPoolMbrStatusParentType => '1.3.6.1.4.1.3375.2.3.6.7.2.1.7',
  gtmPoolMbrStatusDetailReason => '1.3.6.1.4.1.3375.2.3.6.7.2.1.8',
  gtmPoolMbrStatusVsName => '1.3.6.1.4.1.3375.2.3.6.7.2.1.9',
  gtmPoolMbrStatusServerName => '1.3.6.1.4.1.3375.2.3.6.7.2.1.10',
  gtmRegions => '1.3.6.1.4.1.3375.2.3.7',
  gtmRegionEntry => '1.3.6.1.4.1.3375.2.3.7.1',
  gtmRegionEntryNumber => '1.3.6.1.4.1.3375.2.3.7.1.1',
  gtmRegionEntryTable => '1.3.6.1.4.1.3375.2.3.7.1.2',
  gtmRegionEntryEntry => '1.3.6.1.4.1.3375.2.3.7.1.2.1',
  gtmRegionEntryName => '1.3.6.1.4.1.3375.2.3.7.1.2.1.1',
  gtmRegionEntryRegionDbType => '1.3.6.1.4.1.3375.2.3.7.1.2.1.2',
  gtmRegionEntryRegionDbTypeDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmRegionEntryRegionDbType',
  gtmRegItem => '1.3.6.1.4.1.3375.2.3.7.2',
  gtmRegItemNumber => '1.3.6.1.4.1.3375.2.3.7.2.1',
  gtmRegItemTable => '1.3.6.1.4.1.3375.2.3.7.2.2',
  gtmRegItemEntry => '1.3.6.1.4.1.3375.2.3.7.2.2.1',
  gtmRegItemRegionDbType => '1.3.6.1.4.1.3375.2.3.7.2.2.1.1',
  gtmRegItemRegionDbTypeDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmRegItemRegionDbType',
  gtmRegItemRegionName => '1.3.6.1.4.1.3375.2.3.7.2.2.1.2',
  gtmRegItemType => '1.3.6.1.4.1.3375.2.3.7.2.2.1.3',
  gtmRegItemTypeDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmRegItemType',
  gtmRegItemNegate => '1.3.6.1.4.1.3375.2.3.7.2.2.1.4',
  gtmRegItemNegateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmRegItemNegate',
  gtmRegItemRegEntry => '1.3.6.1.4.1.3375.2.3.7.2.2.1.5',
  gtmRules => '1.3.6.1.4.1.3375.2.3.8',
  gtmRule => '1.3.6.1.4.1.3375.2.3.8.1',
  gtmRuleNumber => '1.3.6.1.4.1.3375.2.3.8.1.1',
  gtmRuleTable => '1.3.6.1.4.1.3375.2.3.8.1.2',
  gtmRuleEntry => '1.3.6.1.4.1.3375.2.3.8.1.2.1',
  gtmRuleName => '1.3.6.1.4.1.3375.2.3.8.1.2.1.1',
  gtmRuleDefinition => '1.3.6.1.4.1.3375.2.3.8.1.2.1.2',
  gtmRuleConfigSource => '1.3.6.1.4.1.3375.2.3.8.1.2.1.3',
  gtmRuleConfigSourceDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmRuleConfigSource',
  gtmRuleEvent => '1.3.6.1.4.1.3375.2.3.8.2',
  gtmRuleEventNumber => '1.3.6.1.4.1.3375.2.3.8.2.1',
  gtmRuleEventTable => '1.3.6.1.4.1.3375.2.3.8.2.2',
  gtmRuleEventEntry => '1.3.6.1.4.1.3375.2.3.8.2.2.1',
  gtmRuleEventName => '1.3.6.1.4.1.3375.2.3.8.2.2.1.1',
  gtmRuleEventEventType => '1.3.6.1.4.1.3375.2.3.8.2.2.1.2',
  gtmRuleEventPriority => '1.3.6.1.4.1.3375.2.3.8.2.2.1.3',
  gtmRuleEventScript => '1.3.6.1.4.1.3375.2.3.8.2.2.1.4',
  gtmRuleEventStat => '1.3.6.1.4.1.3375.2.3.8.3',
  gtmRuleEventStatResetStats => '1.3.6.1.4.1.3375.2.3.8.3.1',
  gtmRuleEventStatNumber => '1.3.6.1.4.1.3375.2.3.8.3.2',
  gtmRuleEventStatTable => '1.3.6.1.4.1.3375.2.3.8.3.3',
  gtmRuleEventStatEntry => '1.3.6.1.4.1.3375.2.3.8.3.3.1',
  gtmRuleEventStatName => '1.3.6.1.4.1.3375.2.3.8.3.3.1.1',
  gtmRuleEventStatEventType => '1.3.6.1.4.1.3375.2.3.8.3.3.1.2',
  gtmRuleEventStatPriority => '1.3.6.1.4.1.3375.2.3.8.3.3.1.3',
  gtmRuleEventStatFailures => '1.3.6.1.4.1.3375.2.3.8.3.3.1.4',
  gtmRuleEventStatAborts => '1.3.6.1.4.1.3375.2.3.8.3.3.1.5',
  gtmRuleEventStatTotalExecutions => '1.3.6.1.4.1.3375.2.3.8.3.3.1.6',
  gtmServers => '1.3.6.1.4.1.3375.2.3.9',
  gtmServer => '1.3.6.1.4.1.3375.2.3.9.1',
  gtmServerNumber => '1.3.6.1.4.1.3375.2.3.9.1.1',
  gtmServerTable => '1.3.6.1.4.1.3375.2.3.9.1.2',
  gtmServerEntry => '1.3.6.1.4.1.3375.2.3.9.1.2.1',
  gtmServerName => '1.3.6.1.4.1.3375.2.3.9.1.2.1.1',
  gtmServerDcName => '1.3.6.1.4.1.3375.2.3.9.1.2.1.2',
  gtmServerType => '1.3.6.1.4.1.3375.2.3.9.1.2.1.3',
  gtmServerTypeDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmServerType',
  gtmServerEnabled => '1.3.6.1.4.1.3375.2.3.9.1.2.1.4',
  gtmServerEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmServerEnabled',
  gtmServerLimitCpuUsageEnabled => '1.3.6.1.4.1.3375.2.3.9.1.2.1.5',
  gtmServerLimitCpuUsageEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmServerLimitCpuUsageEnabled',
  gtmServerLimitMemAvailEnabled => '1.3.6.1.4.1.3375.2.3.9.1.2.1.6',
  gtmServerLimitMemAvailEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmServerLimitMemAvailEnabled',
  gtmServerLimitBitsPerSecEnabled => '1.3.6.1.4.1.3375.2.3.9.1.2.1.7',
  gtmServerLimitBitsPerSecEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmServerLimitBitsPerSecEnabled',
  gtmServerLimitPktsPerSecEnabled => '1.3.6.1.4.1.3375.2.3.9.1.2.1.8',
  gtmServerLimitPktsPerSecEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmServerLimitPktsPerSecEnabled',
  gtmServerLimitConnEnabled => '1.3.6.1.4.1.3375.2.3.9.1.2.1.9',
  gtmServerLimitConnEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmServerLimitConnEnabled',
  gtmServerLimitConnPerSecEnabled => '1.3.6.1.4.1.3375.2.3.9.1.2.1.10',
  gtmServerLimitConnPerSecEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmServerLimitConnPerSecEnabled',
  gtmServerLimitCpuUsage => '1.3.6.1.4.1.3375.2.3.9.1.2.1.11',
  gtmServerLimitMemAvail => '1.3.6.1.4.1.3375.2.3.9.1.2.1.12',
  gtmServerLimitBitsPerSec => '1.3.6.1.4.1.3375.2.3.9.1.2.1.13',
  gtmServerLimitPktsPerSec => '1.3.6.1.4.1.3375.2.3.9.1.2.1.14',
  gtmServerLimitConn => '1.3.6.1.4.1.3375.2.3.9.1.2.1.15',
  gtmServerLimitConnPerSec => '1.3.6.1.4.1.3375.2.3.9.1.2.1.16',
  gtmServerProberType => '1.3.6.1.4.1.3375.2.3.9.1.2.1.17',
  gtmServerProber => '1.3.6.1.4.1.3375.2.3.9.1.2.1.18',
  gtmServerMonitorRule => '1.3.6.1.4.1.3375.2.3.9.1.2.1.19',
  gtmServerAllowSvcChk => '1.3.6.1.4.1.3375.2.3.9.1.2.1.20',
  gtmServerAllowSvcChkDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmServerAllowSvcChk',
  gtmServerAllowPath => '1.3.6.1.4.1.3375.2.3.9.1.2.1.21',
  gtmServerAllowPathDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmServerAllowPath',
  gtmServerAllowSnmp => '1.3.6.1.4.1.3375.2.3.9.1.2.1.22',
  gtmServerAllowSnmpDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmServerAllowSnmp',
  gtmServerAutoconfState => '1.3.6.1.4.1.3375.2.3.9.1.2.1.23',
  gtmServerAutoconfStateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmServerAutoconfState',
  gtmServerLinkAutoconfState => '1.3.6.1.4.1.3375.2.3.9.1.2.1.24',
  gtmServerLinkAutoconfStateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmServerLinkAutoconfState',
  gtmServerStat => '1.3.6.1.4.1.3375.2.3.9.2',
  gtmServerStatResetStats => '1.3.6.1.4.1.3375.2.3.9.2.1',
  gtmServerStatNumber => '1.3.6.1.4.1.3375.2.3.9.2.2',
  gtmServerStatTable => '1.3.6.1.4.1.3375.2.3.9.2.3',
  gtmServerStatEntry => '1.3.6.1.4.1.3375.2.3.9.2.3.1',
  gtmServerStatName => '1.3.6.1.4.1.3375.2.3.9.2.3.1.1',
  gtmServerStatUnitId => '1.3.6.1.4.1.3375.2.3.9.2.3.1.2',
  gtmServerStatVsPicks => '1.3.6.1.4.1.3375.2.3.9.2.3.1.3',
  gtmServerStatCpuUsage => '1.3.6.1.4.1.3375.2.3.9.2.3.1.4',
  gtmServerStatMemAvail => '1.3.6.1.4.1.3375.2.3.9.2.3.1.5',
  gtmServerStatBitsPerSecIn => '1.3.6.1.4.1.3375.2.3.9.2.3.1.6',
  gtmServerStatBitsPerSecOut => '1.3.6.1.4.1.3375.2.3.9.2.3.1.7',
  gtmServerStatPktsPerSecIn => '1.3.6.1.4.1.3375.2.3.9.2.3.1.8',
  gtmServerStatPktsPerSecOut => '1.3.6.1.4.1.3375.2.3.9.2.3.1.9',
  gtmServerStatConnections => '1.3.6.1.4.1.3375.2.3.9.2.3.1.10',
  gtmServerStatConnRate => '1.3.6.1.4.1.3375.2.3.9.2.3.1.11',
  gtmServerStatus => '1.3.6.1.4.1.3375.2.3.9.3',
  gtmServerStatusNumber => '1.3.6.1.4.1.3375.2.3.9.3.1',
  gtmServerStatusTable => '1.3.6.1.4.1.3375.2.3.9.3.2',
  gtmServerStatusEntry => '1.3.6.1.4.1.3375.2.3.9.3.2.1',
  gtmServerStatusName => '1.3.6.1.4.1.3375.2.3.9.3.2.1.1',
  gtmServerStatusAvailState => '1.3.6.1.4.1.3375.2.3.9.3.2.1.2',
  gtmServerStatusAvailStateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmServerStatusAvailState',
  gtmServerStatusEnabledState => '1.3.6.1.4.1.3375.2.3.9.3.2.1.3',
  gtmServerStatusEnabledStateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmServerStatusEnabledState',
  gtmServerStatusParentType => '1.3.6.1.4.1.3375.2.3.9.3.2.1.4',
  gtmServerStatusDetailReason => '1.3.6.1.4.1.3375.2.3.9.3.2.1.5',
  gtmServerStat2 => '1.3.6.1.4.1.3375.2.3.9.4',
  gtmServerStat2ResetStats => '1.3.6.1.4.1.3375.2.3.9.4.1',
  gtmServerStat2Number => '1.3.6.1.4.1.3375.2.3.9.4.2',
  gtmServerStat2Table => '1.3.6.1.4.1.3375.2.3.9.4.3',
  gtmServerStat2Entry => '1.3.6.1.4.1.3375.2.3.9.4.3.1',
  gtmServerStat2Name => '1.3.6.1.4.1.3375.2.3.9.4.3.1.1',
  gtmServerStat2UnitId => '1.3.6.1.4.1.3375.2.3.9.4.3.1.2',
  gtmServerStat2VsPicks => '1.3.6.1.4.1.3375.2.3.9.4.3.1.3',
  gtmServerStat2CpuUsage => '1.3.6.1.4.1.3375.2.3.9.4.3.1.4',
  gtmServerStat2MemAvail => '1.3.6.1.4.1.3375.2.3.9.4.3.1.5',
  gtmServerStat2BitsPerSecIn => '1.3.6.1.4.1.3375.2.3.9.4.3.1.6',
  gtmServerStat2BitsPerSecOut => '1.3.6.1.4.1.3375.2.3.9.4.3.1.7',
  gtmServerStat2PktsPerSecIn => '1.3.6.1.4.1.3375.2.3.9.4.3.1.8',
  gtmServerStat2PktsPerSecOut => '1.3.6.1.4.1.3375.2.3.9.4.3.1.9',
  gtmServerStat2Connections => '1.3.6.1.4.1.3375.2.3.9.4.3.1.10',
  gtmServerStat2ConnRate => '1.3.6.1.4.1.3375.2.3.9.4.3.1.11',
  gtmTopologies => '1.3.6.1.4.1.3375.2.3.10',
  gtmTopItem => '1.3.6.1.4.1.3375.2.3.10.1',
  gtmTopItemNumber => '1.3.6.1.4.1.3375.2.3.10.1.1',
  gtmTopItemTable => '1.3.6.1.4.1.3375.2.3.10.1.2',
  gtmTopItemEntry => '1.3.6.1.4.1.3375.2.3.10.1.2.1',
  gtmTopItemLdnsType => '1.3.6.1.4.1.3375.2.3.10.1.2.1.1',
  gtmTopItemLdnsTypeDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmTopItemLdnsType',
  gtmTopItemLdnsNegate => '1.3.6.1.4.1.3375.2.3.10.1.2.1.2',
  gtmTopItemLdnsNegateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmTopItemLdnsNegate',
  gtmTopItemLdnsEntry => '1.3.6.1.4.1.3375.2.3.10.1.2.1.3',
  gtmTopItemServerType => '1.3.6.1.4.1.3375.2.3.10.1.2.1.4',
  gtmTopItemServerTypeDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmTopItemServerType',
  gtmTopItemServerNegate => '1.3.6.1.4.1.3375.2.3.10.1.2.1.5',
  gtmTopItemServerNegateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmTopItemServerNegate',
  gtmTopItemServerEntry => '1.3.6.1.4.1.3375.2.3.10.1.2.1.6',
  gtmTopItemWeight => '1.3.6.1.4.1.3375.2.3.10.1.2.1.7',
  gtmTopItemOrder => '1.3.6.1.4.1.3375.2.3.10.1.2.1.8',
  gtmVirtualServers => '1.3.6.1.4.1.3375.2.3.11',
  gtmVirtualServ => '1.3.6.1.4.1.3375.2.3.11.1',
  gtmVsNumber => '1.3.6.1.4.1.3375.2.3.11.1.1',
  gtmVsTable => '1.3.6.1.4.1.3375.2.3.11.1.2',
  gtmVsEntry => '1.3.6.1.4.1.3375.2.3.11.1.2.1',
  gtmVsIpType => '1.3.6.1.4.1.3375.2.3.11.1.2.1.1',
  gtmVsIp => '1.3.6.1.4.1.3375.2.3.11.1.2.1.2',
  gtmVsPort => '1.3.6.1.4.1.3375.2.3.11.1.2.1.3',
  gtmVsName => '1.3.6.1.4.1.3375.2.3.11.1.2.1.4',
  gtmVsServerName => '1.3.6.1.4.1.3375.2.3.11.1.2.1.5',
  gtmVsIpXlatedType => '1.3.6.1.4.1.3375.2.3.11.1.2.1.6',
  gtmVsIpXlated => '1.3.6.1.4.1.3375.2.3.11.1.2.1.7',
  gtmVsPortXlated => '1.3.6.1.4.1.3375.2.3.11.1.2.1.8',
  gtmVsLimitCpuUsageEnabled => '1.3.6.1.4.1.3375.2.3.11.1.2.1.9',
  gtmVsLimitCpuUsageEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmVsLimitCpuUsageEnabled',
  gtmVsLimitMemAvailEnabled => '1.3.6.1.4.1.3375.2.3.11.1.2.1.10',
  gtmVsLimitMemAvailEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmVsLimitMemAvailEnabled',
  gtmVsLimitBitsPerSecEnabled => '1.3.6.1.4.1.3375.2.3.11.1.2.1.11',
  gtmVsLimitBitsPerSecEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmVsLimitBitsPerSecEnabled',
  gtmVsLimitPktsPerSecEnabled => '1.3.6.1.4.1.3375.2.3.11.1.2.1.12',
  gtmVsLimitPktsPerSecEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmVsLimitPktsPerSecEnabled',
  gtmVsLimitConnEnabled => '1.3.6.1.4.1.3375.2.3.11.1.2.1.13',
  gtmVsLimitConnEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmVsLimitConnEnabled',
  gtmVsLimitConnPerSecEnabled => '1.3.6.1.4.1.3375.2.3.11.1.2.1.14',
  gtmVsLimitConnPerSecEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmVsLimitConnPerSecEnabled',
  gtmVsLimitCpuUsage => '1.3.6.1.4.1.3375.2.3.11.1.2.1.15',
  gtmVsLimitMemAvail => '1.3.6.1.4.1.3375.2.3.11.1.2.1.16',
  gtmVsLimitBitsPerSec => '1.3.6.1.4.1.3375.2.3.11.1.2.1.17',
  gtmVsLimitPktsPerSec => '1.3.6.1.4.1.3375.2.3.11.1.2.1.18',
  gtmVsLimitConn => '1.3.6.1.4.1.3375.2.3.11.1.2.1.19',
  gtmVsLimitConnPerSec => '1.3.6.1.4.1.3375.2.3.11.1.2.1.20',
  gtmVsMonitorRule => '1.3.6.1.4.1.3375.2.3.11.1.2.1.21',
  gtmVsEnabled => '1.3.6.1.4.1.3375.2.3.11.1.2.1.22',
  gtmVsEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmVsEnabled',
  gtmVsLinkName => '1.3.6.1.4.1.3375.2.3.11.1.2.1.23',
  gtmVirtualServDepends => '1.3.6.1.4.1.3375.2.3.11.2',
  gtmVsDepsNumber => '1.3.6.1.4.1.3375.2.3.11.2.1',
  gtmVsDepsTable => '1.3.6.1.4.1.3375.2.3.11.2.2',
  gtmVsDepsEntry => '1.3.6.1.4.1.3375.2.3.11.2.2.1',
  gtmVsDepsIpType => '1.3.6.1.4.1.3375.2.3.11.2.2.1.1',
  gtmVsDepsIp => '1.3.6.1.4.1.3375.2.3.11.2.2.1.2',
  gtmVsDepsPort => '1.3.6.1.4.1.3375.2.3.11.2.2.1.3',
  gtmVsDepsVipType => '1.3.6.1.4.1.3375.2.3.11.2.2.1.4',
  gtmVsDepsVip => '1.3.6.1.4.1.3375.2.3.11.2.2.1.5',
  gtmVsDepsVport => '1.3.6.1.4.1.3375.2.3.11.2.2.1.6',
  gtmVsDepsServerName => '1.3.6.1.4.1.3375.2.3.11.2.2.1.7',
  gtmVsDepsVsName => '1.3.6.1.4.1.3375.2.3.11.2.2.1.8',
  gtmVsDepsDependServerName => '1.3.6.1.4.1.3375.2.3.11.2.2.1.9',
  gtmVsDepsDependVsName => '1.3.6.1.4.1.3375.2.3.11.2.2.1.10',
  gtmVirtualServStat => '1.3.6.1.4.1.3375.2.3.11.3',
  gtmVsStatResetStats => '1.3.6.1.4.1.3375.2.3.11.3.1',
  gtmVsStatNumber => '1.3.6.1.4.1.3375.2.3.11.3.2',
  gtmVsStatTable => '1.3.6.1.4.1.3375.2.3.11.3.3',
  gtmVsStatEntry => '1.3.6.1.4.1.3375.2.3.11.3.3.1',
  gtmVsStatIpType => '1.3.6.1.4.1.3375.2.3.11.3.3.1.1',
  gtmVsStatIp => '1.3.6.1.4.1.3375.2.3.11.3.3.1.2',
  gtmVsStatPort => '1.3.6.1.4.1.3375.2.3.11.3.3.1.3',
  gtmVsStatName => '1.3.6.1.4.1.3375.2.3.11.3.3.1.4',
  gtmVsStatCpuUsage => '1.3.6.1.4.1.3375.2.3.11.3.3.1.5',
  gtmVsStatMemAvail => '1.3.6.1.4.1.3375.2.3.11.3.3.1.6',
  gtmVsStatBitsPerSecIn => '1.3.6.1.4.1.3375.2.3.11.3.3.1.7',
  gtmVsStatBitsPerSecOut => '1.3.6.1.4.1.3375.2.3.11.3.3.1.8',
  gtmVsStatPktsPerSecIn => '1.3.6.1.4.1.3375.2.3.11.3.3.1.9',
  gtmVsStatPktsPerSecOut => '1.3.6.1.4.1.3375.2.3.11.3.3.1.10',
  gtmVsStatConnections => '1.3.6.1.4.1.3375.2.3.11.3.3.1.11',
  gtmVsStatConnRate => '1.3.6.1.4.1.3375.2.3.11.3.3.1.12',
  gtmVsStatVsScore => '1.3.6.1.4.1.3375.2.3.11.3.3.1.13',
  gtmVsStatServerName => '1.3.6.1.4.1.3375.2.3.11.3.3.1.14',
  gtmVirtualServStatus => '1.3.6.1.4.1.3375.2.3.11.4',
  gtmVsStatusNumber => '1.3.6.1.4.1.3375.2.3.11.4.1',
  gtmVsStatusTable => '1.3.6.1.4.1.3375.2.3.11.4.2',
  gtmVsStatusEntry => '1.3.6.1.4.1.3375.2.3.11.4.2.1',
  gtmVsStatusIpType => '1.3.6.1.4.1.3375.2.3.11.4.2.1.1',
  gtmVsStatusIp => '1.3.6.1.4.1.3375.2.3.11.4.2.1.2',
  gtmVsStatusPort => '1.3.6.1.4.1.3375.2.3.11.4.2.1.3',
  gtmVsStatusAvailState => '1.3.6.1.4.1.3375.2.3.11.4.2.1.4',
  gtmVsStatusAvailStateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmVsStatusAvailState',
  gtmVsStatusEnabledState => '1.3.6.1.4.1.3375.2.3.11.4.2.1.5',
  gtmVsStatusEnabledStateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmVsStatusEnabledState',
  gtmVsStatusParentType => '1.3.6.1.4.1.3375.2.3.11.4.2.1.6',
  gtmVsStatusDetailReason => '1.3.6.1.4.1.3375.2.3.11.4.2.1.7',
  gtmVsStatusVsName => '1.3.6.1.4.1.3375.2.3.11.4.2.1.8',
  gtmVsStatusServerName => '1.3.6.1.4.1.3375.2.3.11.4.2.1.9',
  gtmWideips => '1.3.6.1.4.1.3375.2.3.12',
  gtmWideip => '1.3.6.1.4.1.3375.2.3.12.1',
  gtmWideipNumber => '1.3.6.1.4.1.3375.2.3.12.1.1',
  gtmWideipTable => '1.3.6.1.4.1.3375.2.3.12.1.2',
  gtmWideipEntry => '1.3.6.1.4.1.3375.2.3.12.1.2.1',
  gtmWideipName => '1.3.6.1.4.1.3375.2.3.12.1.2.1.1',
  gtmWideipPersist => '1.3.6.1.4.1.3375.2.3.12.1.2.1.2',
  gtmWideipPersistDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmWideipPersist',
  gtmWideipTtlPersist => '1.3.6.1.4.1.3375.2.3.12.1.2.1.3',
  gtmWideipEnabled => '1.3.6.1.4.1.3375.2.3.12.1.2.1.4',
  gtmWideipEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmWideipEnabled',
  gtmWideipLbmodePool => '1.3.6.1.4.1.3375.2.3.12.1.2.1.5',
  gtmWideipLbmodePoolDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmWideipLbmodePool',
  gtmWideipApplication => '1.3.6.1.4.1.3375.2.3.12.1.2.1.6',
  gtmWideipLastResortPool => '1.3.6.1.4.1.3375.2.3.12.1.2.1.7',
  gtmWideipIpv6Noerror => '1.3.6.1.4.1.3375.2.3.12.1.2.1.8',
  gtmWideipIpv6NoerrorDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmWideipIpv6Noerror',
  gtmWideipLoadBalancingDecisionLogVerbosity => '1.3.6.1.4.1.3375.2.3.12.1.2.1.9',
  gtmWideipStat => '1.3.6.1.4.1.3375.2.3.12.2',
  gtmWideipStatResetStats => '1.3.6.1.4.1.3375.2.3.12.2.1',
  gtmWideipStatNumber => '1.3.6.1.4.1.3375.2.3.12.2.2',
  gtmWideipStatTable => '1.3.6.1.4.1.3375.2.3.12.2.3',
  gtmWideipStatEntry => '1.3.6.1.4.1.3375.2.3.12.2.3.1',
  gtmWideipStatName => '1.3.6.1.4.1.3375.2.3.12.2.3.1.1',
  gtmWideipStatRequests => '1.3.6.1.4.1.3375.2.3.12.2.3.1.2',
  gtmWideipStatResolutions => '1.3.6.1.4.1.3375.2.3.12.2.3.1.3',
  gtmWideipStatPersisted => '1.3.6.1.4.1.3375.2.3.12.2.3.1.4',
  gtmWideipStatPreferred => '1.3.6.1.4.1.3375.2.3.12.2.3.1.5',
  gtmWideipStatFallback => '1.3.6.1.4.1.3375.2.3.12.2.3.1.6',
  gtmWideipStatDropped => '1.3.6.1.4.1.3375.2.3.12.2.3.1.7',
  gtmWideipStatExplicitIp => '1.3.6.1.4.1.3375.2.3.12.2.3.1.8',
  gtmWideipStatReturnToDns => '1.3.6.1.4.1.3375.2.3.12.2.3.1.9',
  gtmWideipStatReturnFromDns => '1.3.6.1.4.1.3375.2.3.12.2.3.1.10',
  gtmWideipStatCnameResolutions => '1.3.6.1.4.1.3375.2.3.12.2.3.1.11',
  gtmWideipStatARequests => '1.3.6.1.4.1.3375.2.3.12.2.3.1.12',
  gtmWideipStatAaaaRequests => '1.3.6.1.4.1.3375.2.3.12.2.3.1.13',
  gtmWideipStatus => '1.3.6.1.4.1.3375.2.3.12.3',
  gtmWideipStatusNumber => '1.3.6.1.4.1.3375.2.3.12.3.1',
  gtmWideipStatusTable => '1.3.6.1.4.1.3375.2.3.12.3.2',
  gtmWideipStatusEntry => '1.3.6.1.4.1.3375.2.3.12.3.2.1',
  gtmWideipStatusName => '1.3.6.1.4.1.3375.2.3.12.3.2.1.1',
  gtmWideipStatusAvailState => '1.3.6.1.4.1.3375.2.3.12.3.2.1.2',
  gtmWideipStatusAvailStateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmWideipStatusAvailState',
  gtmWideipStatusEnabledState => '1.3.6.1.4.1.3375.2.3.12.3.2.1.3',
  gtmWideipStatusEnabledStateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmWideipStatusEnabledState',
  gtmWideipStatusParentType => '1.3.6.1.4.1.3375.2.3.12.3.2.1.4',
  gtmWideipStatusDetailReason => '1.3.6.1.4.1.3375.2.3.12.3.2.1.5',
  gtmWideipAlias => '1.3.6.1.4.1.3375.2.3.12.4',
  gtmWideipAliasNumber => '1.3.6.1.4.1.3375.2.3.12.4.1',
  gtmWideipAliasTable => '1.3.6.1.4.1.3375.2.3.12.4.2',
  gtmWideipAliasEntry => '1.3.6.1.4.1.3375.2.3.12.4.2.1',
  gtmWideipAliasWipName => '1.3.6.1.4.1.3375.2.3.12.4.2.1.1',
  gtmWideipAliasName => '1.3.6.1.4.1.3375.2.3.12.4.2.1.2',
  gtmWideipPool => '1.3.6.1.4.1.3375.2.3.12.5',
  gtmWideipPoolNumber => '1.3.6.1.4.1.3375.2.3.12.5.1',
  gtmWideipPoolTable => '1.3.6.1.4.1.3375.2.3.12.5.2',
  gtmWideipPoolEntry => '1.3.6.1.4.1.3375.2.3.12.5.2.1',
  gtmWideipPoolWipName => '1.3.6.1.4.1.3375.2.3.12.5.2.1.1',
  gtmWideipPoolPoolName => '1.3.6.1.4.1.3375.2.3.12.5.2.1.2',
  gtmWideipPoolOrder => '1.3.6.1.4.1.3375.2.3.12.5.2.1.3',
  gtmWideipPoolRatio => '1.3.6.1.4.1.3375.2.3.12.5.2.1.4',
  gtmWideipRule => '1.3.6.1.4.1.3375.2.3.12.6',
  gtmWideipRuleNumber => '1.3.6.1.4.1.3375.2.3.12.6.1',
  gtmWideipRuleTable => '1.3.6.1.4.1.3375.2.3.12.6.2',
  gtmWideipRuleEntry => '1.3.6.1.4.1.3375.2.3.12.6.2.1',
  gtmWideipRuleWipName => '1.3.6.1.4.1.3375.2.3.12.6.2.1.1',
  gtmWideipRuleRuleName => '1.3.6.1.4.1.3375.2.3.12.6.2.1.2',
  gtmWideipRulePriority => '1.3.6.1.4.1.3375.2.3.12.6.2.1.3',
  gtmProberPools => '1.3.6.1.4.1.3375.2.3.13',
  gtmProberPool => '1.3.6.1.4.1.3375.2.3.13.1',
  gtmProberPoolNumber => '1.3.6.1.4.1.3375.2.3.13.1.1',
  gtmProberPoolTable => '1.3.6.1.4.1.3375.2.3.13.1.2',
  gtmProberPoolEntry => '1.3.6.1.4.1.3375.2.3.13.1.2.1',
  gtmProberPoolName => '1.3.6.1.4.1.3375.2.3.13.1.2.1.1',
  gtmProberPoolLbMode => '1.3.6.1.4.1.3375.2.3.13.1.2.1.2',
  gtmProberPoolLbModeDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmProberPoolLbMode',
  gtmProberPoolEnabled => '1.3.6.1.4.1.3375.2.3.13.1.2.1.3',
  gtmProberPoolEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmProberPoolEnabled',
  gtmProberPoolStat => '1.3.6.1.4.1.3375.2.3.13.2',
  gtmProberPoolStatResetStats => '1.3.6.1.4.1.3375.2.3.13.2.1',
  gtmProberPoolStatNumber => '1.3.6.1.4.1.3375.2.3.13.2.2',
  gtmProberPoolStatTable => '1.3.6.1.4.1.3375.2.3.13.2.3',
  gtmProberPoolStatEntry => '1.3.6.1.4.1.3375.2.3.13.2.3.1',
  gtmProberPoolStatName => '1.3.6.1.4.1.3375.2.3.13.2.3.1.1',
  gtmProberPoolStatTotalProbes => '1.3.6.1.4.1.3375.2.3.13.2.3.1.2',
  gtmProberPoolStatSuccessfulProbes => '1.3.6.1.4.1.3375.2.3.13.2.3.1.3',
  gtmProberPoolStatFailedProbes => '1.3.6.1.4.1.3375.2.3.13.2.3.1.4',
  gtmProberPoolStatus => '1.3.6.1.4.1.3375.2.3.13.3',
  gtmProberPoolStatusNumber => '1.3.6.1.4.1.3375.2.3.13.3.1',
  gtmProberPoolStatusTable => '1.3.6.1.4.1.3375.2.3.13.3.2',
  gtmProberPoolStatusEntry => '1.3.6.1.4.1.3375.2.3.13.3.2.1',
  gtmProberPoolStatusName => '1.3.6.1.4.1.3375.2.3.13.3.2.1.1',
  gtmProberPoolStatusAvailState => '1.3.6.1.4.1.3375.2.3.13.3.2.1.2',
  gtmProberPoolStatusAvailStateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmProberPoolStatusAvailState',
  gtmProberPoolStatusEnabledState => '1.3.6.1.4.1.3375.2.3.13.3.2.1.3',
  gtmProberPoolStatusEnabledStateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmProberPoolStatusEnabledState',
  gtmProberPoolStatusDetailReason => '1.3.6.1.4.1.3375.2.3.13.3.2.1.4',
  gtmProberPoolMember => '1.3.6.1.4.1.3375.2.3.13.4',
  gtmProberPoolMbrNumber => '1.3.6.1.4.1.3375.2.3.13.4.1',
  gtmProberPoolMbrTable => '1.3.6.1.4.1.3375.2.3.13.4.2',
  gtmProberPoolMbrEntry => '1.3.6.1.4.1.3375.2.3.13.4.2.1',
  gtmProberPoolMbrPoolName => '1.3.6.1.4.1.3375.2.3.13.4.2.1.1',
  gtmProberPoolMbrServerName => '1.3.6.1.4.1.3375.2.3.13.4.2.1.2',
  gtmProberPoolMbrPmbrOrder => '1.3.6.1.4.1.3375.2.3.13.4.2.1.3',
  gtmProberPoolMbrEnabled => '1.3.6.1.4.1.3375.2.3.13.4.2.1.4',
  gtmProberPoolMbrEnabledDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmProberPoolMbrEnabled',
  gtmProberPoolMemberStat => '1.3.6.1.4.1.3375.2.3.13.5',
  gtmProberPoolMbrStatResetStats => '1.3.6.1.4.1.3375.2.3.13.5.1',
  gtmProberPoolMbrStatNumber => '1.3.6.1.4.1.3375.2.3.13.5.2',
  gtmProberPoolMbrStatTable => '1.3.6.1.4.1.3375.2.3.13.5.3',
  gtmProberPoolMbrStatEntry => '1.3.6.1.4.1.3375.2.3.13.5.3.1',
  gtmProberPoolMbrStatPoolName => '1.3.6.1.4.1.3375.2.3.13.5.3.1.1',
  gtmProberPoolMbrStatServerName => '1.3.6.1.4.1.3375.2.3.13.5.3.1.2',
  gtmProberPoolMbrStatTotalProbes => '1.3.6.1.4.1.3375.2.3.13.5.3.1.3',
  gtmProberPoolMbrStatSuccessfulProbes => '1.3.6.1.4.1.3375.2.3.13.5.3.1.4',
  gtmProberPoolMbrStatFailedProbes => '1.3.6.1.4.1.3375.2.3.13.5.3.1.5',
  gtmProberPoolMemberStatus => '1.3.6.1.4.1.3375.2.3.13.6',
  gtmProberPoolMbrStatusNumber => '1.3.6.1.4.1.3375.2.3.13.6.1',
  gtmProberPoolMbrStatusTable => '1.3.6.1.4.1.3375.2.3.13.6.2',
  gtmProberPoolMbrStatusEntry => '1.3.6.1.4.1.3375.2.3.13.6.2.1',
  gtmProberPoolMbrStatusPoolName => '1.3.6.1.4.1.3375.2.3.13.6.2.1.1',
  gtmProberPoolMbrStatusServerName => '1.3.6.1.4.1.3375.2.3.13.6.2.1.2',
  gtmProberPoolMbrStatusAvailState => '1.3.6.1.4.1.3375.2.3.13.6.2.1.3',
  gtmProberPoolMbrStatusAvailStateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmProberPoolMbrStatusAvailState',
  gtmProberPoolMbrStatusEnabledState => '1.3.6.1.4.1.3375.2.3.13.6.2.1.4',
  gtmProberPoolMbrStatusEnabledStateDefinition => 'F5-BIGIP-GLOBAL-MIB::gtmProberPoolMbrStatusEnabledState',
  gtmProberPoolMbrStatusDetailReason => '1.3.6.1.4.1.3375.2.3.13.6.2.1.5',
  gtmDNSSEC => '1.3.6.1.4.1.3375.2.3.14',
  gtmDnssecZoneStat => '1.3.6.1.4.1.3375.2.3.14.1',
  gtmDnssecZoneStatResetStats => '1.3.6.1.4.1.3375.2.3.14.1.1',
  gtmDnssecZoneStatNumber => '1.3.6.1.4.1.3375.2.3.14.1.2',
  gtmDnssecZoneStatTable => '1.3.6.1.4.1.3375.2.3.14.1.3',
  gtmDnssecZoneStatEntry => '1.3.6.1.4.1.3375.2.3.14.1.3.1',
  gtmDnssecZoneStatName => '1.3.6.1.4.1.3375.2.3.14.1.3.1.1',
  gtmDnssecZoneStatNsec3s => '1.3.6.1.4.1.3375.2.3.14.1.3.1.2',
  gtmDnssecZoneStatNsec3Nodata => '1.3.6.1.4.1.3375.2.3.14.1.3.1.3',
  gtmDnssecZoneStatNsec3Nxdomain => '1.3.6.1.4.1.3375.2.3.14.1.3.1.4',
  gtmDnssecZoneStatNsec3Referral => '1.3.6.1.4.1.3375.2.3.14.1.3.1.5',
  gtmDnssecZoneStatNsec3Resalt => '1.3.6.1.4.1.3375.2.3.14.1.3.1.6',
  gtmDnssecZoneStatDnssecResponses => '1.3.6.1.4.1.3375.2.3.14.1.3.1.7',
  gtmDnssecZoneStatDnssecDnskeyQueries => '1.3.6.1.4.1.3375.2.3.14.1.3.1.8',
  gtmDnssecZoneStatDnssecNsec3paramQueries => '1.3.6.1.4.1.3375.2.3.14.1.3.1.9',
  gtmDnssecZoneStatDnssecDsQueries => '1.3.6.1.4.1.3375.2.3.14.1.3.1.10',
  gtmDnssecZoneStatSigCryptoFailed => '1.3.6.1.4.1.3375.2.3.14.1.3.1.11',
  gtmDnssecZoneStatSigSuccess => '1.3.6.1.4.1.3375.2.3.14.1.3.1.12',
  gtmDnssecZoneStatSigFailed => '1.3.6.1.4.1.3375.2.3.14.1.3.1.13',
  gtmDnssecZoneStatSigRrsetFailed => '1.3.6.1.4.1.3375.2.3.14.1.3.1.14',
  gtmDnssecZoneStatConnectFlowFailed => '1.3.6.1.4.1.3375.2.3.14.1.3.1.15',
  gtmDnssecZoneStatTowireFailed => '1.3.6.1.4.1.3375.2.3.14.1.3.1.16',
  gtmDnssecZoneStatAxfrQueries => '1.3.6.1.4.1.3375.2.3.14.1.3.1.17',
  gtmDnssecZoneStatIxfrQueries => '1.3.6.1.4.1.3375.2.3.14.1.3.1.18',
  gtmDnssecZoneStatXfrStarts => '1.3.6.1.4.1.3375.2.3.14.1.3.1.19',
  gtmDnssecZoneStatXfrCompletes => '1.3.6.1.4.1.3375.2.3.14.1.3.1.20',
  gtmDnssecZoneStatXfrMsgs => '1.3.6.1.4.1.3375.2.3.14.1.3.1.21',
  gtmDnssecZoneStatXfrMasterMsgs => '1.3.6.1.4.1.3375.2.3.14.1.3.1.22',
  gtmDnssecZoneStatXfrResponseAverageSize => '1.3.6.1.4.1.3375.2.3.14.1.3.1.23',
  gtmDnssecZoneStatXfrSerial => '1.3.6.1.4.1.3375.2.3.14.1.3.1.24',
  gtmDnssecZoneStatXfrMasterSerial => '1.3.6.1.4.1.3375.2.3.14.1.3.1.25',
  bigipGlobalTMGroups => '1.3.6.1.4.1.3375.2.5.2.3',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'F5-BIGIP-GLOBAL-MIB'} = {
  gtmAttr2ForwardStatus => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  gtmAttr2Autosync => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmVsStatusEnabledState => {
    '0' => 'none',
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'disabledbyparent',
  },
  gtmAttrCheckDynamicDepends => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmLinkLimitInConnPerSecEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmServerLimitCpuUsageEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmAppStatusAvailState => {
    '0' => 'none',
    '1' => 'green',
    '2' => 'yellow',
    '3' => 'red',
    '4' => 'blue',
    '5' => 'gray',
  },
  gtmWideipPersist => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmVsLimitBitsPerSecEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmDcStatusAvailState => {
    '0' => 'none',
    '1' => 'green',
    '2' => 'yellow',
    '3' => 'red',
    '4' => 'blue',
    '5' => 'gray',
  },
  gtmPoolMbrStatusAvailState => {
    '0' => 'none',
    '1' => 'green',
    '2' => 'yellow',
    '3' => 'red',
    '4' => 'blue',
    '5' => 'gray',
  },
  gtmPoolMbrEnabled => {
    '0' => 'disable',
    '1' => 'enable',
  },
  gtmRegItemType => {
    '0' => 'cidr',
    '1' => 'region',
    '2' => 'continent',
    '3' => 'country',
    '4' => 'state',
    '5' => 'pool',
    '6' => 'datacenter',
    '7' => 'ispregion',
    '8' => 'geoip-isp',
  },
  gtmAttr2FbRespectAcl => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmAppContStatEnabledState => {
    '0' => 'none',
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'disabledbyparent',
  },
  gtmWideipStatusEnabledState => {
    '0' => 'none',
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'disabledbyparent',
  },
  gtmDcEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmPoolLbMode => {
    '0' => 'returntodns',
    '1' => 'null',
    '2' => 'roundrobin',
    '3' => 'ratio',
    '4' => 'topology',
    '5' => 'statpersit',
    '6' => 'ga',
    '7' => 'vscapacity',
    '8' => 'leastconn',
    '9' => 'lowestrtt',
    '10' => 'lowesthops',
    '11' => 'packetrate',
    '12' => 'cpu',
    '13' => 'hitratio',
    '14' => 'qos',
    '15' => 'bps',
    '16' => 'droppacket',
    '17' => 'explicitip',
    '18' => 'vsscore',
  },
  gtmPoolManualResume => {
    '0' => 'disable',
    '1' => 'enable',
  },
  gtmAttrAutoconf => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmAttr2CacheLdns => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmAttr2TopologyLongestMatch => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmAppContDisType => {
    '0' => 'datacenter',
    '1' => 'server',
    '2' => 'link',
  },
  gtmLinkLimitOutConnEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmAppAvailability => {
    '0' => 'none',
    '1' => 'server',
    '2' => 'link',
    '3' => 'datacenter',
  },
  gtmPoolStatusEnabledState => {
    '0' => 'none',
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'disabledbyparent',
  },
  gtmLinkLimitOutMemAvailEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmProberPoolMbrStatusEnabledState => {
    '0' => 'none',
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'disabledbyparent',
  },
  gtmPoolMbrLimitConnPerSecEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmWideipStatusAvailState => {
    '0' => 'none',
    '1' => 'green',
    '2' => 'yellow',
    '3' => 'red',
    '4' => 'blue',
    '5' => 'gray',
  },
  gtmAttr2DrainRequests => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmAppContStatType => {
    '0' => 'datacenter',
    '1' => 'server',
    '2' => 'link',
  },
  gtmLinkEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmPoolLimitPktsPerSecEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmLinkLimitTotalBitsPerSecEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmTopItemLdnsNegate => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmLinkLimitOutPktsPerSecEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmLinkLimitOutCpuUsageEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmRegItemRegionDbType => {
    '0' => 'user',
    '1' => 'acl',
    '2' => 'isp',
  },
  gtmVsLimitPktsPerSecEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmServerStatusAvailState => {
    '0' => 'none',
    '1' => 'green',
    '2' => 'yellow',
    '3' => 'red',
    '4' => 'blue',
    '5' => 'gray',
  },
  gtmTopItemServerType => {
    '0' => 'cidr',
    '1' => 'region',
    '2' => 'continent',
    '3' => 'country',
    '4' => 'state',
    '5' => 'pool',
    '6' => 'datacenter',
    '7' => 'ispregion',
    '8' => 'geoip-isp',
  },
  gtmVsLimitConnEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmPoolLimitCpuUsageEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmLinkLimitTotalPktsPerSecEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmAttr2CheckStaticDepends => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmServerAllowSvcChk => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmAttrCacheLdns => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmPoolMbrLimitConnEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmDcStatusEnabledState => {
    '0' => 'none',
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'disabledbyparent',
  },
  gtmServerAllowSnmp => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmServerEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmTopItemLdnsType => {
    '0' => 'cidr',
    '1' => 'region',
    '2' => 'continent',
    '3' => 'country',
    '4' => 'state',
    '5' => 'pool',
    '6' => 'datacenter',
    '7' => 'ispregion',
    '8' => 'geoip-isp',
  },
  gtmProberPoolStatusAvailState => {
    '0' => 'none',
    '1' => 'green',
    '2' => 'yellow',
    '3' => 'red',
    '4' => 'blue',
    '5' => 'gray',
  },
  gtmAttr2PathsNeverDie => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmLinkLimitTotalMemAvailEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmServerLinkAutoconfState => {
    '0' => 'disabled',
    '1' => 'enabled',
    '2' => 'enablednoautodelete',
  },
  gtmAttrDumpTopology => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmLinkStatusEnabledState => {
    '0' => 'none',
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'disabledbyparent',
  },
  gtmLinkLimitInCpuUsageEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmRuleConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  gtmAttr2CheckDynamicDepends => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmPoolAlternate => {
    '0' => 'returntodns',
    '1' => 'null',
    '2' => 'roundrobin',
    '3' => 'ratio',
    '4' => 'topology',
    '5' => 'statpersit',
    '6' => 'ga',
    '7' => 'vscapacity',
    '8' => 'leastconn',
    '9' => 'lowestrtt',
    '10' => 'lowesthops',
    '11' => 'packetrate',
    '12' => 'cpu',
    '13' => 'hitratio',
    '14' => 'qos',
    '15' => 'bps',
    '16' => 'droppacket',
    '17' => 'explicitip',
    '18' => 'vsscore',
  },
  gtmWideipLbmodePool => {
    '0' => 'returntodns',
    '1' => 'null',
    '2' => 'roundrobin',
    '3' => 'ratio',
    '4' => 'topology',
    '5' => 'statpersit',
    '6' => 'ga',
    '7' => 'vscapacity',
    '8' => 'leastconn',
    '9' => 'lowestrtt',
    '10' => 'lowesthops',
    '11' => 'packetrate',
    '12' => 'cpu',
    '13' => 'hitratio',
    '14' => 'qos',
    '15' => 'bps',
    '16' => 'droppacket',
    '17' => 'explicitip',
    '18' => 'vsscore',
  },
  gtmAttrEnableResetsRipeness => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmAttr2SyncNamedConf => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmProberPoolLbMode => {
    '2' => 'roundrobin',
    '6' => 'ga',
  },
  gtmAttrTopologyLongestMatch => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmAttrSyncNamedConf => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmServerStatusEnabledState => {
    '0' => 'none',
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'disabledbyparent',
  },
  gtmAttr2Autoconf => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmPoolMbrLimitPktsPerSecEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmServerLimitBitsPerSecEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmPoolLimitBitsPerSecEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmAttrCheckStaticDepends => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmPoolEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmAttrPathsNeverDie => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmAppStatusEnabledState => {
    '0' => 'none',
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'disabledbyparent',
  },
  gtmRegItemNegate => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmLinkLimitOutBitsPerSecEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmAttr2DefaultAlternate => {
    '0' => 'returntodns',
    '1' => 'null',
    '2' => 'roundrobin',
    '3' => 'ratio',
    '4' => 'topology',
    '5' => 'statpersist',
    '6' => 'ga',
    '7' => 'vscapacity',
    '8' => 'leastconn',
    '9' => 'lowestrtt',
    '10' => 'lowesthops',
    '11' => 'packetrate',
    '12' => 'cpu',
    '13' => 'hitratio',
    '14' => 'qos',
    '15' => 'bps',
    '16' => 'droppacket',
    '17' => 'explicitip',
    '18' => 'vssore',
  },
  gtmAttrAutosync => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmServerLimitConnEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmAttr2EnableResetsRipeness => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmPoolMbrLimitBitsPerSecEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmPoolLimitConnPerSecEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmServerLimitConnPerSecEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmAttr2ProbeDisabledObjects => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmPoolDynamicRatio => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmVsLimitConnPerSecEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmLinkLimitTotalCpuUsageEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmProberPoolMbrEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmLinkWeightingType => {
    '0' => 'ratio',
    '1' => 'cost',
  },
  gtmAttrDrainRequests => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmAttr2GtmSetsRecursion => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmServerType => {
    '0' => 'bigipstandalone',
    '1' => 'bigipredundant',
    '2' => 'genericloadbalancer',
    '3' => 'alteonacedirector',
    '4' => 'ciscocss',
    '5' => 'ciscolocaldirectorv2',
    '6' => 'ciscolocaldirectorv3',
    '7' => 'ciscoserverloadbalancer',
    '8' => 'extreme',
    '9' => 'foundryserveriron',
    '10' => 'generichost',
    '11' => 'cacheflow',
    '12' => 'netapp',
    '13' => 'windows2000',
    '14' => 'windowsnt4',
    '15' => 'solaris',
    '16' => 'radware',
  },
  gtmLinkDuplex => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmAttrProbeDisabledObjects => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmWideipIpv6Noerror => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmLinkLimitInConnEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmVsLimitMemAvailEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmAttrAolAware => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmProberPoolStatusEnabledState => {
    '0' => 'none',
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'disabledbyparent',
  },
  gtmProberPoolEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmLinkLimitInBitsPerSecEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmPoolMbrLimitCpuUsageEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmServerAutoconfState => {
    '0' => 'disabled',
    '1' => 'enabled',
    '2' => 'enablednoautodelete',
  },
  gtmLinkStatusAvailState => {
    '0' => 'none',
    '1' => 'green',
    '2' => 'yellow',
    '3' => 'red',
    '4' => 'blue',
    '5' => 'gray',
  },
  gtmAttrGtmSetsRecursion => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmAppPersist => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmPoolVerifyMember => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmVsLimitCpuUsageEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmServerLimitMemAvailEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmPoolLimitConnEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmVsEnabled => {
    '0' => 'disable',
    '1' => 'enable',
  },
  gtmGlobalLdnsProbeProtoType => {
    '0' => 'icmp',
    '1' => 'tcp',
    '2' => 'udp',
    '3' => 'dnsdot',
    '4' => 'dnsrev',
  },
  gtmVsStatusAvailState => {
    '0' => 'none',
    '1' => 'green',
    '2' => 'yellow',
    '3' => 'red',
    '4' => 'blue',
    '5' => 'gray',
  },
  gtmServerAllowPath => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmLinkLimitTotalConnEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmLinkLimitTotalConnPerSecEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmAttr2AolAware => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmPoolStatusAvailState => {
    '0' => 'none',
    '1' => 'green',
    '2' => 'yellow',
    '3' => 'red',
    '4' => 'blue',
    '5' => 'gray',
  },
  gtmAppContStatAvailState => {
    '0' => 'none',
    '1' => 'green',
    '2' => 'yellow',
    '3' => 'red',
    '4' => 'blue',
    '5' => 'gray',
  },
  gtmProberPoolMbrStatusAvailState => {
    '0' => 'none',
    '1' => 'green',
    '2' => 'yellow',
    '3' => 'red',
    '4' => 'blue',
    '5' => 'gray',
  },
  gtmServerLimitPktsPerSecEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmAttr2FbRespectDepends => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmAttrFbRespectDepends => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmWideipEnabled => {
    '0' => 'disable',
    '1' => 'enable',
  },
  gtmPoolFallback => {
    '0' => 'returntodns',
    '1' => 'null',
    '2' => 'roundrobin',
    '3' => 'ratio',
    '4' => 'topology',
    '5' => 'statpersit',
    '6' => 'ga',
    '7' => 'vscapacity',
    '8' => 'leastconn',
    '9' => 'lowestrtt',
    '10' => 'lowesthops',
    '11' => 'packetrate',
    '12' => 'cpu',
    '13' => 'hitratio',
    '14' => 'qos',
    '15' => 'bps',
    '16' => 'droppacket',
    '17' => 'explicitip',
    '18' => 'vsscore',
  },
  gtmPoolLimitMemAvailEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmAttrDefaultFallback => {
    '0' => 'returntodns',
    '1' => 'null',
    '2' => 'roundrobin',
    '3' => 'ratio',
    '4' => 'topology',
    '5' => 'statpersit',
    '6' => 'ga',
    '7' => 'vscapacity',
    '8' => 'leastconn',
    '9' => 'lowestrtt',
    '10' => 'lowesthops',
    '11' => 'packetrate',
    '12' => 'cpu',
    '13' => 'hitratio',
    '14' => 'qos',
    '15' => 'bps',
    '16' => 'droppacket',
    '17' => 'explicitip',
    '18' => 'vsscore',
  },
  gtmAttrFbRespectAcl => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmAttr2DefaultFallback => {
    '0' => 'returntodns',
    '1' => 'null',
    '2' => 'roundrobin',
    '3' => 'ratio',
    '4' => 'topology',
    '5' => 'statpersit',
    '6' => 'ga',
    '7' => 'vscapacity',
    '8' => 'leastconn',
    '9' => 'lowestrtt',
    '10' => 'lowesthops',
    '11' => 'packetrate',
    '12' => 'cpu',
    '13' => 'hitratio',
    '14' => 'qos',
    '15' => 'bps',
    '16' => 'droppacket',
    '17' => 'explicitip',
    '18' => 'vsscore',
  },
  gtmLinkLimitOutConnPerSecEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmLinkLimitInMemAvailEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmPoolMbrLimitMemAvailEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmPoolMbrStatusEnabledState => {
    '0' => 'none',
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'disabledbyparent',
  },
  gtmAttr2DumpTopology => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmRegionEntryRegionDbType => {
    '0' => 'user',
    '1' => 'acl',
    '2' => 'isp',
  },
  gtmTopItemServerNegate => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmLinkLimitInPktsPerSecEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  gtmAttrDefaultAlternate => {
    '0' => 'returntodns',
    '1' => 'null',
    '2' => 'roundrobin',
    '3' => 'ratio',
    '4' => 'topology',
    '5' => 'statpersist',
    '6' => 'ga',
    '7' => 'vscapacity',
    '8' => 'leastconn',
    '9' => 'lowestrtt',
    '10' => 'lowesthops',
    '11' => 'packetrate',
    '12' => 'cpu',
    '13' => 'hitratio',
    '14' => 'qos',
    '15' => 'bps',
    '16' => 'droppacket',
    '17' => 'explicitip',
    '18' => 'vssore',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::F5BIGIPLOCALMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'F5-BIGIP-LOCAL-MIB'} = {
  url => '',
  name => 'F5-BIGIP-LOCAL-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'F5-BIGIP-LOCAL-MIB'} =
  '1.3.6.1.4.1.3375.2.2';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'F5-BIGIP-LOCAL-MIB'} = {
  bigipLocalTM => '1.3.6.1.4.1.3375.2.2',
  ltmGlobals => '1.3.6.1.4.1.3375.2.2.1',
  ltmGlobalAttr => '1.3.6.1.4.1.3375.2.2.1.1',
  ltmAttrLbmodeFastestMaxIdleTime => '1.3.6.1.4.1.3375.2.2.1.1.1',
  ltmAttrMirrorState => '1.3.6.1.4.1.3375.2.2.1.1.2',
  ltmAttrMirrorStateDefinition => 'F5-BIGIP-LOCAL-MIB::ltmAttrMirrorState',
  ltmAttrPersistDestAddrLimitMode => '1.3.6.1.4.1.3375.2.2.1.1.3',
  ltmAttrPersistDestAddrLimitModeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmAttrPersistDestAddrLimitMode',
  ltmAttrPersistDestAddrMaxCount => '1.3.6.1.4.1.3375.2.2.1.1.4',
  ltmAttrSnatAnyIpProtocol => '1.3.6.1.4.1.3375.2.2.1.1.5',
  ltmAttrSnatAnyIpProtocolDefinition => 'F5-BIGIP-LOCAL-MIB::ltmAttrSnatAnyIpProtocol',
  ltmAttrMirrorPeerIpAddr => '1.3.6.1.4.1.3375.2.2.1.1.6',
  ltmDosAttackDataStat => '1.3.6.1.4.1.3375.2.2.1.2',
  ltmDosAttackDataStatResetStats => '1.3.6.1.4.1.3375.2.2.1.2.1',
  ltmDosAttackDataStatNumber => '1.3.6.1.4.1.3375.2.2.1.2.2',
  ltmDosAttackDataStatTable => '1.3.6.1.4.1.3375.2.2.1.2.3',
  ltmDosAttackDataStatEntry => '1.3.6.1.4.1.3375.2.2.1.2.3.1',
  ltmDosAttackDataStatDeviceName => '1.3.6.1.4.1.3375.2.2.1.2.3.1.1',
  ltmDosAttackDataStatVectorName => '1.3.6.1.4.1.3375.2.2.1.2.3.1.2',
  ltmDosAttackDataStatAttackType => '1.3.6.1.4.1.3375.2.2.1.2.3.1.3',
  ltmDosAttackDataStatAttackTypeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDosAttackDataStatAttackType',
  ltmDosAttackDataStatAttackDetected => '1.3.6.1.4.1.3375.2.2.1.2.3.1.4',
  ltmDosAttackDataStatAttackCount => '1.3.6.1.4.1.3375.2.2.1.2.3.1.5',
  ltmDosAttackDataStatStats => '1.3.6.1.4.1.3375.2.2.1.2.3.1.6',
  ltmDosAttackDataStatStatsRate => '1.3.6.1.4.1.3375.2.2.1.2.3.1.7',
  ltmDosAttackDataStatStats1m => '1.3.6.1.4.1.3375.2.2.1.2.3.1.8',
  ltmDosAttackDataStatStats1h => '1.3.6.1.4.1.3375.2.2.1.2.3.1.9',
  ltmDosAttackDataStatDrops => '1.3.6.1.4.1.3375.2.2.1.2.3.1.10',
  ltmDosAttackDataStatDropsRate => '1.3.6.1.4.1.3375.2.2.1.2.3.1.11',
  ltmDosAttackDataStatDrops1m => '1.3.6.1.4.1.3375.2.2.1.2.3.1.12',
  ltmDosAttackDataStatDrops1h => '1.3.6.1.4.1.3375.2.2.1.2.3.1.13',
  ltmDosAttackDataStatWlCount => '1.3.6.1.4.1.3375.2.2.1.2.3.1.14',
  ltmFwAdminIpRuleStat => '1.3.6.1.4.1.3375.2.2.1.3',
  ltmFwAdminIpRuleStatNumber => '1.3.6.1.4.1.3375.2.2.1.3.1',
  ltmFwAdminIpRuleStatTable => '1.3.6.1.4.1.3375.2.2.1.3.2',
  ltmFwAdminIpRuleStatEntry => '1.3.6.1.4.1.3375.2.2.1.3.2.1',
  ltmFwAdminIpRuleStatRuleName => '1.3.6.1.4.1.3375.2.2.1.3.2.1.1',
  ltmFwAdminIpRuleStatContainerName => '1.3.6.1.4.1.3375.2.2.1.3.2.1.2',
  ltmFwAdminIpRuleStatCounter => '1.3.6.1.4.1.3375.2.2.1.3.2.1.3',
  ltmFwIpintGlobalStat => '1.3.6.1.4.1.3375.2.2.1.4',
  ltmFwIpintGlobalStatResetStats => '1.3.6.1.4.1.3375.2.2.1.4.1',
  ltmFwIpintGlobalStatNumber => '1.3.6.1.4.1.3375.2.2.1.4.2',
  ltmFwIpintGlobalStatTable => '1.3.6.1.4.1.3375.2.2.1.4.3',
  ltmFwIpintGlobalStatEntry => '1.3.6.1.4.1.3375.2.2.1.4.3.1',
  ltmFwIpintGlobalStatBlClassName => '1.3.6.1.4.1.3375.2.2.1.4.3.1.1',
  ltmFwIpintGlobalStatCounter => '1.3.6.1.4.1.3375.2.2.1.4.3.1.2',
  ltmFwRuleStat => '1.3.6.1.4.1.3375.2.2.1.5',
  ltmFwRuleStatNumber => '1.3.6.1.4.1.3375.2.2.1.5.1',
  ltmFwRuleStatTable => '1.3.6.1.4.1.3375.2.2.1.5.2',
  ltmFwRuleStatEntry => '1.3.6.1.4.1.3375.2.2.1.5.2.1',
  ltmFwRuleStatContextType => '1.3.6.1.4.1.3375.2.2.1.5.2.1.1',
  ltmFwRuleStatContextName => '1.3.6.1.4.1.3375.2.2.1.5.2.1.2',
  ltmFwRuleStatRuleName => '1.3.6.1.4.1.3375.2.2.1.5.2.1.3',
  ltmFwRuleStatRuleListName => '1.3.6.1.4.1.3375.2.2.1.5.2.1.4',
  ltmFwRuleStatPolicyName => '1.3.6.1.4.1.3375.2.2.1.5.2.1.5',
  ltmFwRuleStatRuleStatType => '1.3.6.1.4.1.3375.2.2.1.5.2.1.6',
  ltmFwRuleStatRuleStatTypeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFwRuleStatRuleStatType',
  ltmFwRuleStatActualRule => '1.3.6.1.4.1.3375.2.2.1.5.2.1.7',
  ltmFwRuleStatCounter => '1.3.6.1.4.1.3375.2.2.1.5.2.1.8',
  ltmFwRuleStatLastHitTime => '1.3.6.1.4.1.3375.2.2.1.5.2.1.9',
  ltmFwRuleStatLastHitTimeFmt => '1.3.6.1.4.1.3375.2.2.1.5.2.1.10',
  ltmFwRuleStatOverlapper => '1.3.6.1.4.1.3375.2.2.1.5.2.1.11',
  ltmFwRuleStatOverlapType => '1.3.6.1.4.1.3375.2.2.1.5.2.1.12',
  ltmMirrors => '1.3.6.1.4.1.3375.2.2.2',
  ltmMirrorPort => '1.3.6.1.4.1.3375.2.2.2.1',
  ltmMirrorPortNumber => '1.3.6.1.4.1.3375.2.2.2.1.1',
  ltmMirrorPortTable => '1.3.6.1.4.1.3375.2.2.2.1.2',
  ltmMirrorPortEntry => '1.3.6.1.4.1.3375.2.2.2.1.2.1',
  ltmMirrorPortName => '1.3.6.1.4.1.3375.2.2.2.1.2.1.1',
  ltmMirrorPortMember => '1.3.6.1.4.1.3375.2.2.2.2',
  ltmMirrorPortMemberNumber => '1.3.6.1.4.1.3375.2.2.2.2.1',
  ltmMirrorPortMemberTable => '1.3.6.1.4.1.3375.2.2.2.2.2',
  ltmMirrorPortMemberEntry => '1.3.6.1.4.1.3375.2.2.2.2.2.1',
  ltmMirrorPortMemberToName => '1.3.6.1.4.1.3375.2.2.2.2.2.1.1',
  ltmMirrorPortMemberName => '1.3.6.1.4.1.3375.2.2.2.2.2.1.2',
  ltmMirrorPortMemberConduitName => '1.3.6.1.4.1.3375.2.2.2.2.2.1.3',
  ltmNATs => '1.3.6.1.4.1.3375.2.2.3',
  ltmNat => '1.3.6.1.4.1.3375.2.2.3.1',
  ltmNatNumber => '1.3.6.1.4.1.3375.2.2.3.1.1',
  ltmNatTable => '1.3.6.1.4.1.3375.2.2.3.1.2',
  ltmNatEntry => '1.3.6.1.4.1.3375.2.2.3.1.2.1',
  ltmNatTransAddrType => '1.3.6.1.4.1.3375.2.2.3.1.2.1.1',
  ltmNatTransAddr => '1.3.6.1.4.1.3375.2.2.3.1.2.1.2',
  ltmNatOrigAddrType => '1.3.6.1.4.1.3375.2.2.3.1.2.1.3',
  ltmNatOrigAddr => '1.3.6.1.4.1.3375.2.2.3.1.2.1.4',
  ltmNatEnabled => '1.3.6.1.4.1.3375.2.2.3.1.2.1.5',
  ltmNatEnabledDefinition => 'F5-BIGIP-LOCAL-MIB::ltmNatEnabled',
  ltmNatArpEnabled => '1.3.6.1.4.1.3375.2.2.3.1.2.1.6',
  ltmNatArpEnabledDefinition => 'F5-BIGIP-LOCAL-MIB::ltmNatArpEnabled',
  ltmNatUnitId => '1.3.6.1.4.1.3375.2.2.3.1.2.1.7',
  ltmNatListedEnabledVlans => '1.3.6.1.4.1.3375.2.2.3.1.2.1.8',
  ltmNatListedEnabledVlansDefinition => 'F5-BIGIP-LOCAL-MIB::ltmNatListedEnabledVlans',
  ltmNatName => '1.3.6.1.4.1.3375.2.2.3.1.2.1.9',
  ltmNatStat => '1.3.6.1.4.1.3375.2.2.3.2',
  ltmNatStatResetStats => '1.3.6.1.4.1.3375.2.2.3.2.1',
  ltmNatStatNumber => '1.3.6.1.4.1.3375.2.2.3.2.2',
  ltmNatStatTable => '1.3.6.1.4.1.3375.2.2.3.2.3',
  ltmNatStatEntry => '1.3.6.1.4.1.3375.2.2.3.2.3.1',
  ltmNatStatTransAddrType => '1.3.6.1.4.1.3375.2.2.3.2.3.1.1',
  ltmNatStatTransAddr => '1.3.6.1.4.1.3375.2.2.3.2.3.1.2',
  ltmNatStatServerPktsIn => '1.3.6.1.4.1.3375.2.2.3.2.3.1.3',
  ltmNatStatServerBytesIn => '1.3.6.1.4.1.3375.2.2.3.2.3.1.4',
  ltmNatStatServerPktsOut => '1.3.6.1.4.1.3375.2.2.3.2.3.1.5',
  ltmNatStatServerBytesOut => '1.3.6.1.4.1.3375.2.2.3.2.3.1.6',
  ltmNatStatServerMaxConns => '1.3.6.1.4.1.3375.2.2.3.2.3.1.7',
  ltmNatStatServerTotConns => '1.3.6.1.4.1.3375.2.2.3.2.3.1.8',
  ltmNatStatServerCurConns => '1.3.6.1.4.1.3375.2.2.3.2.3.1.9',
  ltmNatStatName => '1.3.6.1.4.1.3375.2.2.3.2.3.1.10',
  ltmNatVlan => '1.3.6.1.4.1.3375.2.2.3.3',
  ltmNatVlanNumber => '1.3.6.1.4.1.3375.2.2.3.3.1',
  ltmNatVlanTable => '1.3.6.1.4.1.3375.2.2.3.3.2',
  ltmNatVlanEntry => '1.3.6.1.4.1.3375.2.2.3.3.2.1',
  ltmNatVlanTransAddrType => '1.3.6.1.4.1.3375.2.2.3.3.2.1.1',
  ltmNatVlanTransAddr => '1.3.6.1.4.1.3375.2.2.3.3.2.1.2',
  ltmNatVlanVlanName => '1.3.6.1.4.1.3375.2.2.3.3.2.1.3',
  ltmNatVlanNatName => '1.3.6.1.4.1.3375.2.2.3.3.2.1.4',
  ltmNodes => '1.3.6.1.4.1.3375.2.2.4',
  ltmNodeAddr => '1.3.6.1.4.1.3375.2.2.4.1',
  ltmNodeAddrNumber => '1.3.6.1.4.1.3375.2.2.4.1.1',
  ltmNodeAddrTable => '1.3.6.1.4.1.3375.2.2.4.1.2',
  ltmNodeAddrEntry => '1.3.6.1.4.1.3375.2.2.4.1.2.1',
  ltmNodeAddrAddrType => '1.3.6.1.4.1.3375.2.2.4.1.2.1.1',
  ltmNodeAddrAddr => '1.3.6.1.4.1.3375.2.2.4.1.2.1.2',
  ltmNodeAddrConnLimit => '1.3.6.1.4.1.3375.2.2.4.1.2.1.3',
  ltmNodeAddrRatio => '1.3.6.1.4.1.3375.2.2.4.1.2.1.4',
  ltmNodeAddrDynamicRatio => '1.3.6.1.4.1.3375.2.2.4.1.2.1.5',
  ltmNodeAddrMonitorState => '1.3.6.1.4.1.3375.2.2.4.1.2.1.6',
  ltmNodeAddrMonitorStateDefinition => 'F5-BIGIP-LOCAL-MIB::ltmNodeAddrMonitorState',
  ltmNodeAddrMonitorStatus => '1.3.6.1.4.1.3375.2.2.4.1.2.1.7',
  ltmNodeAddrMonitorStatusDefinition => 'F5-BIGIP-LOCAL-MIB::ltmNodeAddrMonitorStatus',
  ltmNodeAddrMonitorRule => '1.3.6.1.4.1.3375.2.2.4.1.2.1.8',
  ltmNodeAddrNewSessionEnable => '1.3.6.1.4.1.3375.2.2.4.1.2.1.9',
  ltmNodeAddrNewSessionEnableDefinition => 'F5-BIGIP-LOCAL-MIB::ltmNodeAddrNewSessionEnable',
  ltmNodeAddrSessionStatus => '1.3.6.1.4.1.3375.2.2.4.1.2.1.10',
  ltmNodeAddrSessionStatusDefinition => 'F5-BIGIP-LOCAL-MIB::ltmNodeAddrSessionStatus',
  ltmNodeAddrPoolMemberRefCount => '1.3.6.1.4.1.3375.2.2.4.1.2.1.11',
  ltmNodeAddrScreenName => '1.3.6.1.4.1.3375.2.2.4.1.2.1.12',
  ltmNodeAddrAvailabilityState => '1.3.6.1.4.1.3375.2.2.4.1.2.1.13',
  ltmNodeAddrAvailabilityStateDefinition => 'F5-BIGIP-LOCAL-MIB::ltmNodeAddrAvailabilityState',
  ltmNodeAddrEnabledState => '1.3.6.1.4.1.3375.2.2.4.1.2.1.14',
  ltmNodeAddrEnabledStateDefinition => 'F5-BIGIP-LOCAL-MIB::ltmNodeAddrEnabledState',
  ltmNodeAddrDisabledParentType => '1.3.6.1.4.1.3375.2.2.4.1.2.1.15',
  ltmNodeAddrStatusReason => '1.3.6.1.4.1.3375.2.2.4.1.2.1.16',
  ltmNodeAddrName => '1.3.6.1.4.1.3375.2.2.4.1.2.1.17',
  ltmNodeAddrStat => '1.3.6.1.4.1.3375.2.2.4.2',
  ltmNodeAddrStatResetStats => '1.3.6.1.4.1.3375.2.2.4.2.1',
  ltmNodeAddrStatNumber => '1.3.6.1.4.1.3375.2.2.4.2.2',
  ltmNodeAddrStatTable => '1.3.6.1.4.1.3375.2.2.4.2.3',
  ltmNodeAddrStatEntry => '1.3.6.1.4.1.3375.2.2.4.2.3.1',
  ltmNodeAddrStatAddrType => '1.3.6.1.4.1.3375.2.2.4.2.3.1.1',
  ltmNodeAddrStatAddr => '1.3.6.1.4.1.3375.2.2.4.2.3.1.2',
  ltmNodeAddrStatServerPktsIn => '1.3.6.1.4.1.3375.2.2.4.2.3.1.3',
  ltmNodeAddrStatServerBytesIn => '1.3.6.1.4.1.3375.2.2.4.2.3.1.4',
  ltmNodeAddrStatServerPktsOut => '1.3.6.1.4.1.3375.2.2.4.2.3.1.5',
  ltmNodeAddrStatServerBytesOut => '1.3.6.1.4.1.3375.2.2.4.2.3.1.6',
  ltmNodeAddrStatServerMaxConns => '1.3.6.1.4.1.3375.2.2.4.2.3.1.7',
  ltmNodeAddrStatServerTotConns => '1.3.6.1.4.1.3375.2.2.4.2.3.1.8',
  ltmNodeAddrStatServerCurConns => '1.3.6.1.4.1.3375.2.2.4.2.3.1.9',
  ltmNodeAddrStatPvaPktsIn => '1.3.6.1.4.1.3375.2.2.4.2.3.1.10',
  ltmNodeAddrStatPvaBytesIn => '1.3.6.1.4.1.3375.2.2.4.2.3.1.11',
  ltmNodeAddrStatPvaPktsOut => '1.3.6.1.4.1.3375.2.2.4.2.3.1.12',
  ltmNodeAddrStatPvaBytesOut => '1.3.6.1.4.1.3375.2.2.4.2.3.1.13',
  ltmNodeAddrStatPvaMaxConns => '1.3.6.1.4.1.3375.2.2.4.2.3.1.14',
  ltmNodeAddrStatPvaTotConns => '1.3.6.1.4.1.3375.2.2.4.2.3.1.15',
  ltmNodeAddrStatPvaCurConns => '1.3.6.1.4.1.3375.2.2.4.2.3.1.16',
  ltmNodeAddrStatTotRequests => '1.3.6.1.4.1.3375.2.2.4.2.3.1.17',
  ltmNodeAddrStatTotPvaAssistConn => '1.3.6.1.4.1.3375.2.2.4.2.3.1.18',
  ltmNodeAddrStatCurrPvaAssistConn => '1.3.6.1.4.1.3375.2.2.4.2.3.1.19',
  ltmNodeAddrStatNodeName => '1.3.6.1.4.1.3375.2.2.4.2.3.1.20',
  ltmNodeAddrStatCurSessions => '1.3.6.1.4.1.3375.2.2.4.2.3.1.21',
  ltmNodeAddrStatCurrentConnsPerSec => '1.3.6.1.4.1.3375.2.2.4.2.3.1.22',
  ltmNodeAddrStatDurationRateExceeded => '1.3.6.1.4.1.3375.2.2.4.2.3.1.23',
  ltmNodeAddrStatus => '1.3.6.1.4.1.3375.2.2.4.3',
  ltmNodeAddrStatusNumber => '1.3.6.1.4.1.3375.2.2.4.3.1',
  ltmNodeAddrStatusTable => '1.3.6.1.4.1.3375.2.2.4.3.2',
  ltmNodeAddrStatusEntry => '1.3.6.1.4.1.3375.2.2.4.3.2.1',
  ltmNodeAddrStatusAddrType => '1.3.6.1.4.1.3375.2.2.4.3.2.1.1',
  ltmNodeAddrStatusAddr => '1.3.6.1.4.1.3375.2.2.4.3.2.1.2',
  ltmNodeAddrStatusAvailState => '1.3.6.1.4.1.3375.2.2.4.3.2.1.3',
  ltmNodeAddrStatusAvailStateDefinition => 'F5-BIGIP-LOCAL-MIB::ltmNodeAddrStatusAvailState',
  ltmNodeAddrStatusEnabledState => '1.3.6.1.4.1.3375.2.2.4.3.2.1.4',
  ltmNodeAddrStatusEnabledStateDefinition => 'F5-BIGIP-LOCAL-MIB::ltmNodeAddrStatusEnabledState',
  ltmNodeAddrStatusParentType => '1.3.6.1.4.1.3375.2.2.4.3.2.1.5',
  ltmNodeAddrStatusDetailReason => '1.3.6.1.4.1.3375.2.2.4.3.2.1.6',
  ltmNodeAddrStatusName => '1.3.6.1.4.1.3375.2.2.4.3.2.1.7',
  ltmPools => '1.3.6.1.4.1.3375.2.2.5',
  ltmPool => '1.3.6.1.4.1.3375.2.2.5.1',
  ltmPoolNumber => '1.3.6.1.4.1.3375.2.2.5.1.1',
  ltmPoolTable => '1.3.6.1.4.1.3375.2.2.5.1.2',
  ltmPoolEntry => '1.3.6.1.4.1.3375.2.2.5.1.2.1',
  ltmPoolName => '1.3.6.1.4.1.3375.2.2.5.1.2.1.1',
  ltmPoolLbMode => '1.3.6.1.4.1.3375.2.2.5.1.2.1.2',
  ltmPoolLbModeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPoolLbMode',
  ltmPoolActionOnServiceDown => '1.3.6.1.4.1.3375.2.2.5.1.2.1.3',
  ltmPoolActionOnServiceDownDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPoolActionOnServiceDown',
  ltmPoolMinUpMembers => '1.3.6.1.4.1.3375.2.2.5.1.2.1.4',
  ltmPoolMinUpMembersEnable => '1.3.6.1.4.1.3375.2.2.5.1.2.1.5',
  ltmPoolMinUpMembersEnableDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPoolMinUpMembersEnable',
  ltmPoolMinUpMemberAction => '1.3.6.1.4.1.3375.2.2.5.1.2.1.6',
  ltmPoolMinUpMemberActionDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPoolMinUpMemberAction',
  ltmPoolMinActiveMembers => '1.3.6.1.4.1.3375.2.2.5.1.2.1.7',
  ltmPoolActiveMemberCnt => '1.3.6.1.4.1.3375.2.2.5.1.2.1.8',
  ltmPoolDisallowSnat => '1.3.6.1.4.1.3375.2.2.5.1.2.1.9',
  ltmPoolDisallowSnatDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPoolDisallowSnat',
  ltmPoolDisallowNat => '1.3.6.1.4.1.3375.2.2.5.1.2.1.10',
  ltmPoolDisallowNatDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPoolDisallowNat',
  ltmPoolSimpleTimeout => '1.3.6.1.4.1.3375.2.2.5.1.2.1.11',
  ltmPoolIpTosToClient => '1.3.6.1.4.1.3375.2.2.5.1.2.1.12',
  ltmPoolIpTosToServer => '1.3.6.1.4.1.3375.2.2.5.1.2.1.13',
  ltmPoolLinkQosToClient => '1.3.6.1.4.1.3375.2.2.5.1.2.1.14',
  ltmPoolLinkQosToServer => '1.3.6.1.4.1.3375.2.2.5.1.2.1.15',
  ltmPoolDynamicRatioSum => '1.3.6.1.4.1.3375.2.2.5.1.2.1.16',
  ltmPoolMonitorRule => '1.3.6.1.4.1.3375.2.2.5.1.2.1.17',
  ltmPoolAvailabilityState => '1.3.6.1.4.1.3375.2.2.5.1.2.1.18',
  ltmPoolAvailabilityStateDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPoolAvailabilityState',
  ltmPoolEnabledState => '1.3.6.1.4.1.3375.2.2.5.1.2.1.19',
  ltmPoolEnabledStateDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPoolEnabledState',
  ltmPoolDisabledParentType => '1.3.6.1.4.1.3375.2.2.5.1.2.1.20',
  ltmPoolStatusReason => '1.3.6.1.4.1.3375.2.2.5.1.2.1.21',
  ltmPoolSlowRampTime => '1.3.6.1.4.1.3375.2.2.5.1.2.1.22',
  ltmPoolMemberCnt => '1.3.6.1.4.1.3375.2.2.5.1.2.1.23',
  ltmPoolQueueOnConnectionLimit => '1.3.6.1.4.1.3375.2.2.5.1.2.1.24',
  ltmPoolQueueOnConnectionLimitDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPoolQueueOnConnectionLimit',
  ltmPoolQueueDepthLimit => '1.3.6.1.4.1.3375.2.2.5.1.2.1.25',
  ltmPoolQueueTimeLimit => '1.3.6.1.4.1.3375.2.2.5.1.2.1.26',
  ltmPoolStat => '1.3.6.1.4.1.3375.2.2.5.2',
  ltmPoolStatResetStats => '1.3.6.1.4.1.3375.2.2.5.2.1',
  ltmPoolStatNumber => '1.3.6.1.4.1.3375.2.2.5.2.2',
  ltmPoolStatTable => '1.3.6.1.4.1.3375.2.2.5.2.3',
  ltmPoolStatEntry => '1.3.6.1.4.1.3375.2.2.5.2.3.1',
  ltmPoolStatName => '1.3.6.1.4.1.3375.2.2.5.2.3.1.1',
  ltmPoolStatServerPktsIn => '1.3.6.1.4.1.3375.2.2.5.2.3.1.2',
  ltmPoolStatServerBytesIn => '1.3.6.1.4.1.3375.2.2.5.2.3.1.3',
  ltmPoolStatServerPktsOut => '1.3.6.1.4.1.3375.2.2.5.2.3.1.4',
  ltmPoolStatServerBytesOut => '1.3.6.1.4.1.3375.2.2.5.2.3.1.5',
  ltmPoolStatServerMaxConns => '1.3.6.1.4.1.3375.2.2.5.2.3.1.6',
  ltmPoolStatServerTotConns => '1.3.6.1.4.1.3375.2.2.5.2.3.1.7',
  ltmPoolStatServerCurConns => '1.3.6.1.4.1.3375.2.2.5.2.3.1.8',
  ltmPoolStatPvaPktsIn => '1.3.6.1.4.1.3375.2.2.5.2.3.1.9',
  ltmPoolStatPvaBytesIn => '1.3.6.1.4.1.3375.2.2.5.2.3.1.10',
  ltmPoolStatPvaPktsOut => '1.3.6.1.4.1.3375.2.2.5.2.3.1.11',
  ltmPoolStatPvaBytesOut => '1.3.6.1.4.1.3375.2.2.5.2.3.1.12',
  ltmPoolStatPvaMaxConns => '1.3.6.1.4.1.3375.2.2.5.2.3.1.13',
  ltmPoolStatPvaTotConns => '1.3.6.1.4.1.3375.2.2.5.2.3.1.14',
  ltmPoolStatPvaCurConns => '1.3.6.1.4.1.3375.2.2.5.2.3.1.15',
  ltmPoolStatTotPvaAssistConn => '1.3.6.1.4.1.3375.2.2.5.2.3.1.16',
  ltmPoolStatCurrPvaAssistConn => '1.3.6.1.4.1.3375.2.2.5.2.3.1.17',
  ltmPoolStatConnqDepth => '1.3.6.1.4.1.3375.2.2.5.2.3.1.18',
  ltmPoolStatConnqAgeHead => '1.3.6.1.4.1.3375.2.2.5.2.3.1.19',
  ltmPoolStatConnqAgeMax => '1.3.6.1.4.1.3375.2.2.5.2.3.1.20',
  ltmPoolStatConnqAgeEma => '1.3.6.1.4.1.3375.2.2.5.2.3.1.21',
  ltmPoolStatConnqAgeEdm => '1.3.6.1.4.1.3375.2.2.5.2.3.1.22',
  ltmPoolStatConnqServiced => '1.3.6.1.4.1.3375.2.2.5.2.3.1.23',
  ltmPoolStatConnqAllDepth => '1.3.6.1.4.1.3375.2.2.5.2.3.1.24',
  ltmPoolStatConnqAllAgeHead => '1.3.6.1.4.1.3375.2.2.5.2.3.1.25',
  ltmPoolStatConnqAllAgeMax => '1.3.6.1.4.1.3375.2.2.5.2.3.1.26',
  ltmPoolStatConnqAllAgeEma => '1.3.6.1.4.1.3375.2.2.5.2.3.1.27',
  ltmPoolStatConnqAllAgeEdm => '1.3.6.1.4.1.3375.2.2.5.2.3.1.28',
  ltmPoolStatConnqAllServiced => '1.3.6.1.4.1.3375.2.2.5.2.3.1.29',
  ltmPoolStatTotRequests => '1.3.6.1.4.1.3375.2.2.5.2.3.1.30',
  ltmPoolStatCurSessions => '1.3.6.1.4.1.3375.2.2.5.2.3.1.31',
  ltmPoolMember => '1.3.6.1.4.1.3375.2.2.5.3',
  ltmPoolMemberNumber => '1.3.6.1.4.1.3375.2.2.5.3.1',
  ltmPoolMemberTable => '1.3.6.1.4.1.3375.2.2.5.3.2',
  ltmPoolMemberEntry => '1.3.6.1.4.1.3375.2.2.5.3.2.1',
  ltmPoolMemberPoolName => '1.3.6.1.4.1.3375.2.2.5.3.2.1.1',
  ltmPoolMemberAddrType => '1.3.6.1.4.1.3375.2.2.5.3.2.1.2',
  ltmPoolMemberAddr => '1.3.6.1.4.1.3375.2.2.5.3.2.1.3',
  ltmPoolMemberPort => '1.3.6.1.4.1.3375.2.2.5.3.2.1.4',
  ltmPoolMemberConnLimit => '1.3.6.1.4.1.3375.2.2.5.3.2.1.5',
  ltmPoolMemberRatio => '1.3.6.1.4.1.3375.2.2.5.3.2.1.6',
  ltmPoolMemberWeight => '1.3.6.1.4.1.3375.2.2.5.3.2.1.7',
  ltmPoolMemberPriority => '1.3.6.1.4.1.3375.2.2.5.3.2.1.8',
  ltmPoolMemberDynamicRatio => '1.3.6.1.4.1.3375.2.2.5.3.2.1.9',
  ltmPoolMemberMonitorState => '1.3.6.1.4.1.3375.2.2.5.3.2.1.10',
  ltmPoolMemberMonitorStateDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPoolMemberMonitorState',
  ltmPoolMemberMonitorStatus => '1.3.6.1.4.1.3375.2.2.5.3.2.1.11',
  ltmPoolMemberMonitorStatusDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPoolMemberMonitorStatus',
  ltmPoolMemberNewSessionEnable => '1.3.6.1.4.1.3375.2.2.5.3.2.1.12',
  ltmPoolMemberNewSessionEnableDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPoolMemberNewSessionEnable',
  ltmPoolMemberSessionStatus => '1.3.6.1.4.1.3375.2.2.5.3.2.1.13',
  ltmPoolMemberSessionStatusDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPoolMemberSessionStatus',
  ltmPoolMemberMonitorRule => '1.3.6.1.4.1.3375.2.2.5.3.2.1.14',
  ltmPoolMemberAvailabilityState => '1.3.6.1.4.1.3375.2.2.5.3.2.1.15',
  ltmPoolMemberAvailabilityStateDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPoolMemberAvailabilityState',
  ltmPoolMemberEnabledState => '1.3.6.1.4.1.3375.2.2.5.3.2.1.16',
  ltmPoolMemberEnabledStateDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPoolMemberEnabledState',
  ltmPoolMemberDisabledParentType => '1.3.6.1.4.1.3375.2.2.5.3.2.1.17',
  ltmPoolMemberStatusReason => '1.3.6.1.4.1.3375.2.2.5.3.2.1.18',
  ltmPoolMemberNodeName => '1.3.6.1.4.1.3375.2.2.5.3.2.1.19',
  ltmPoolMemberStat => '1.3.6.1.4.1.3375.2.2.5.4',
  ltmPoolMemberStatResetStats => '1.3.6.1.4.1.3375.2.2.5.4.1',
  ltmPoolMemberStatNumber => '1.3.6.1.4.1.3375.2.2.5.4.2',
  ltmPoolMemberStatTable => '1.3.6.1.4.1.3375.2.2.5.4.3',
  ltmPoolMemberStatEntry => '1.3.6.1.4.1.3375.2.2.5.4.3.1',
  ltmPoolMemberStatPoolName => '1.3.6.1.4.1.3375.2.2.5.4.3.1.1',
  ltmPoolMemberStatAddrType => '1.3.6.1.4.1.3375.2.2.5.4.3.1.2',
  ltmPoolMemberStatAddr => '1.3.6.1.4.1.3375.2.2.5.4.3.1.3',
  ltmPoolMemberStatPort => '1.3.6.1.4.1.3375.2.2.5.4.3.1.4',
  ltmPoolMemberStatServerPktsIn => '1.3.6.1.4.1.3375.2.2.5.4.3.1.5',
  ltmPoolMemberStatServerBytesIn => '1.3.6.1.4.1.3375.2.2.5.4.3.1.6',
  ltmPoolMemberStatServerPktsOut => '1.3.6.1.4.1.3375.2.2.5.4.3.1.7',
  ltmPoolMemberStatServerBytesOut => '1.3.6.1.4.1.3375.2.2.5.4.3.1.8',
  ltmPoolMemberStatServerMaxConns => '1.3.6.1.4.1.3375.2.2.5.4.3.1.9',
  ltmPoolMemberStatServerTotConns => '1.3.6.1.4.1.3375.2.2.5.4.3.1.10',
  ltmPoolMemberStatServerCurConns => '1.3.6.1.4.1.3375.2.2.5.4.3.1.11',
  ltmPoolMemberStatPvaPktsIn => '1.3.6.1.4.1.3375.2.2.5.4.3.1.12',
  ltmPoolMemberStatPvaBytesIn => '1.3.6.1.4.1.3375.2.2.5.4.3.1.13',
  ltmPoolMemberStatPvaPktsOut => '1.3.6.1.4.1.3375.2.2.5.4.3.1.14',
  ltmPoolMemberStatPvaBytesOut => '1.3.6.1.4.1.3375.2.2.5.4.3.1.15',
  ltmPoolMemberStatPvaMaxConns => '1.3.6.1.4.1.3375.2.2.5.4.3.1.16',
  ltmPoolMemberStatPvaTotConns => '1.3.6.1.4.1.3375.2.2.5.4.3.1.17',
  ltmPoolMemberStatPvaCurConns => '1.3.6.1.4.1.3375.2.2.5.4.3.1.18',
  ltmPoolMemberStatTotRequests => '1.3.6.1.4.1.3375.2.2.5.4.3.1.19',
  ltmPoolMemberStatTotPvaAssistConn => '1.3.6.1.4.1.3375.2.2.5.4.3.1.20',
  ltmPoolMemberStatCurrPvaAssistConn => '1.3.6.1.4.1.3375.2.2.5.4.3.1.21',
  ltmPoolMemberStatConnqDepth => '1.3.6.1.4.1.3375.2.2.5.4.3.1.22',
  ltmPoolMemberStatConnqAgeHead => '1.3.6.1.4.1.3375.2.2.5.4.3.1.23',
  ltmPoolMemberStatConnqAgeMax => '1.3.6.1.4.1.3375.2.2.5.4.3.1.24',
  ltmPoolMemberStatConnqAgeEma => '1.3.6.1.4.1.3375.2.2.5.4.3.1.25',
  ltmPoolMemberStatConnqAgeEdm => '1.3.6.1.4.1.3375.2.2.5.4.3.1.26',
  ltmPoolMemberStatConnqServiced => '1.3.6.1.4.1.3375.2.2.5.4.3.1.27',
  ltmPoolMemberStatNodeName => '1.3.6.1.4.1.3375.2.2.5.4.3.1.28',
  ltmPoolMemberStatCurSessions => '1.3.6.1.4.1.3375.2.2.5.4.3.1.29',
  ltmPoolMemberStatCurrentConnsPerSec => '1.3.6.1.4.1.3375.2.2.5.4.3.1.30',
  ltmPoolMemberStatDurationRateExceeded => '1.3.6.1.4.1.3375.2.2.5.4.3.1.31',
  ltmPoolStatus => '1.3.6.1.4.1.3375.2.2.5.5',
  ltmPoolStatusNumber => '1.3.6.1.4.1.3375.2.2.5.5.1',
  ltmPoolStatusTable => '1.3.6.1.4.1.3375.2.2.5.5.2',
  ltmPoolStatusEntry => '1.3.6.1.4.1.3375.2.2.5.5.2.1',
  ltmPoolStatusName => '1.3.6.1.4.1.3375.2.2.5.5.2.1.1',
  ltmPoolStatusAvailState => '1.3.6.1.4.1.3375.2.2.5.5.2.1.2',
  ltmPoolStatusAvailStateDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPoolStatusAvailState',
  ltmPoolStatusEnabledState => '1.3.6.1.4.1.3375.2.2.5.5.2.1.3',
  ltmPoolStatusEnabledStateDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPoolStatusEnabledState',
  ltmPoolStatusParentType => '1.3.6.1.4.1.3375.2.2.5.5.2.1.4',
  ltmPoolStatusDetailReason => '1.3.6.1.4.1.3375.2.2.5.5.2.1.5',
  ltmPoolMemberStatus => '1.3.6.1.4.1.3375.2.2.5.6',
  ltmPoolMbrStatusNumber => '1.3.6.1.4.1.3375.2.2.5.6.1',
  ltmPoolMbrStatusTable => '1.3.6.1.4.1.3375.2.2.5.6.2',
  ltmPoolMbrStatusEntry => '1.3.6.1.4.1.3375.2.2.5.6.2.1',
  ltmPoolMbrStatusPoolName => '1.3.6.1.4.1.3375.2.2.5.6.2.1.1',
  ltmPoolMbrStatusAddrType => '1.3.6.1.4.1.3375.2.2.5.6.2.1.2',
  ltmPoolMbrStatusAddr => '1.3.6.1.4.1.3375.2.2.5.6.2.1.3',
  ltmPoolMbrStatusPort => '1.3.6.1.4.1.3375.2.2.5.6.2.1.4',
  ltmPoolMbrStatusAvailState => '1.3.6.1.4.1.3375.2.2.5.6.2.1.5',
  ltmPoolMbrStatusAvailStateDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPoolMbrStatusAvailState',
  ltmPoolMbrStatusEnabledState => '1.3.6.1.4.1.3375.2.2.5.6.2.1.6',
  ltmPoolMbrStatusEnabledStateDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPoolMbrStatusEnabledState',
  ltmPoolMbrStatusParentType => '1.3.6.1.4.1.3375.2.2.5.6.2.1.7',
  ltmPoolMbrStatusDetailReason => '1.3.6.1.4.1.3375.2.2.5.6.2.1.8',
  ltmPoolMbrStatusNodeName => '1.3.6.1.4.1.3375.2.2.5.6.2.1.9',
  ltmProfiles => '1.3.6.1.4.1.3375.2.2.6',
  ltmAuth => '1.3.6.1.4.1.3375.2.2.6.1',
  ltmAuthProfile => '1.3.6.1.4.1.3375.2.2.6.1.1',
  ltmAuthProfileNumber => '1.3.6.1.4.1.3375.2.2.6.1.1.1',
  ltmAuthProfileTable => '1.3.6.1.4.1.3375.2.2.6.1.1.2',
  ltmAuthProfileEntry => '1.3.6.1.4.1.3375.2.2.6.1.1.2.1',
  ltmAuthProfileName => '1.3.6.1.4.1.3375.2.2.6.1.1.2.1.1',
  ltmAuthProfileConfigSource => '1.3.6.1.4.1.3375.2.2.6.1.1.2.1.2',
  ltmAuthProfileConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmAuthProfileConfigSource',
  ltmAuthProfileDefaultName => '1.3.6.1.4.1.3375.2.2.6.1.1.2.1.3',
  ltmAuthProfileConfigName => '1.3.6.1.4.1.3375.2.2.6.1.1.2.1.4',
  ltmAuthProfileType => '1.3.6.1.4.1.3375.2.2.6.1.1.2.1.5',
  ltmAuthProfileTypeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmAuthProfileType',
  ltmAuthProfileMode => '1.3.6.1.4.1.3375.2.2.6.1.1.2.1.6',
  ltmAuthProfileModeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmAuthProfileMode',
  ltmAuthProfileCredentialSource => '1.3.6.1.4.1.3375.2.2.6.1.1.2.1.7',
  ltmAuthProfileCredentialSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmAuthProfileCredentialSource',
  ltmAuthProfileRuleName => '1.3.6.1.4.1.3375.2.2.6.1.1.2.1.8',
  ltmAuthProfileIdleTimeout => '1.3.6.1.4.1.3375.2.2.6.1.1.2.1.9',
  ltmAuthProfileStat => '1.3.6.1.4.1.3375.2.2.6.1.2',
  ltmAuthProfileStatResetStats => '1.3.6.1.4.1.3375.2.2.6.1.2.1',
  ltmAuthProfileStatNumber => '1.3.6.1.4.1.3375.2.2.6.1.2.2',
  ltmAuthProfileStatTable => '1.3.6.1.4.1.3375.2.2.6.1.2.3',
  ltmAuthProfileStatEntry => '1.3.6.1.4.1.3375.2.2.6.1.2.3.1',
  ltmAuthProfileStatName => '1.3.6.1.4.1.3375.2.2.6.1.2.3.1.1',
  ltmAuthProfileStatTotSessions => '1.3.6.1.4.1.3375.2.2.6.1.2.3.1.2',
  ltmAuthProfileStatCurSessions => '1.3.6.1.4.1.3375.2.2.6.1.2.3.1.3',
  ltmAuthProfileStatMaxSessions => '1.3.6.1.4.1.3375.2.2.6.1.2.3.1.4',
  ltmAuthProfileStatSuccessResults => '1.3.6.1.4.1.3375.2.2.6.1.2.3.1.5',
  ltmAuthProfileStatFailureResults => '1.3.6.1.4.1.3375.2.2.6.1.2.3.1.6',
  ltmAuthProfileStatWantcredentialResults => '1.3.6.1.4.1.3375.2.2.6.1.2.3.1.7',
  ltmAuthProfileStatErrorResults => '1.3.6.1.4.1.3375.2.2.6.1.2.3.1.8',
  ltmClientSsl => '1.3.6.1.4.1.3375.2.2.6.2',
  ltmClientSslProfile => '1.3.6.1.4.1.3375.2.2.6.2.1',
  ltmClientSslNumber => '1.3.6.1.4.1.3375.2.2.6.2.1.1',
  ltmClientSslTable => '1.3.6.1.4.1.3375.2.2.6.2.1.2',
  ltmClientSslEntry => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1',
  ltmClientSslName => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.1',
  ltmClientSslConfigSource => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.2',
  ltmClientSslConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmClientSslConfigSource',
  ltmClientSslDefaultName => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.3',
  ltmClientSslMode => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.4',
  ltmClientSslModeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmClientSslMode',
  ltmClientSslKey => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.5',
  ltmClientSslCert => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.6',
  ltmClientSslChain => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.7',
  ltmClientSslCafile => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.8',
  ltmClientSslCrlfile => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.9',
  ltmClientSslClientcertca => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.10',
  ltmClientSslCiphers => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.11',
  ltmClientSslPassphrase => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.12',
  ltmClientSslOptions => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.13',
  ltmClientSslModsslmethods => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.14',
  ltmClientSslModsslmethodsDefinition => 'F5-BIGIP-LOCAL-MIB::ltmClientSslModsslmethods',
  ltmClientSslCacheSize => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.15',
  ltmClientSslCacheTimeout => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.16',
  ltmClientSslRenegotiatePeriod => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.17',
  ltmClientSslRenegotiateSize => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.18',
  ltmClientSslRenegotiateMaxRecordDelay => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.19',
  ltmClientSslHandshakeTimeout => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.20',
  ltmClientSslAlertTimeout => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.21',
  ltmClientSslPeerCertMode => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.22',
  ltmClientSslPeerCertModeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmClientSslPeerCertMode',
  ltmClientSslAuthenticateOnce => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.23',
  ltmClientSslAuthenticateOnceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmClientSslAuthenticateOnce',
  ltmClientSslAuthenticateDepth => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.24',
  ltmClientSslUncleanShutdown => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.25',
  ltmClientSslUncleanShutdownDefinition => 'F5-BIGIP-LOCAL-MIB::ltmClientSslUncleanShutdown',
  ltmClientSslStrictResume => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.26',
  ltmClientSslStrictResumeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmClientSslStrictResume',
  ltmClientSslAllowNonssl => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.27',
  ltmClientSslAllowNonsslDefinition => 'F5-BIGIP-LOCAL-MIB::ltmClientSslAllowNonssl',
  ltmClientSslSessionTicket => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.28',
  ltmClientSslSessionTicketDefinition => 'F5-BIGIP-LOCAL-MIB::ltmClientSslSessionTicket',
  ltmClientSslFwdpEnabled => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.29',
  ltmClientSslFwdpEnabledDefinition => 'F5-BIGIP-LOCAL-MIB::ltmClientSslFwdpEnabled',
  ltmClientSslFwdpCaKey => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.30',
  ltmClientSslFwdpCaCert => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.31',
  ltmClientSslFwdpCaPassphrase => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.32',
  ltmClientSslFwdpCertLifespan => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.33',
  ltmClientSslFwdpCertExtensionIncludes => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.34',
  ltmClientSslFwdpLookupByIpaddrPort => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.35',
  ltmClientSslFwdpLookupByIpaddrPortDefinition => 'F5-BIGIP-LOCAL-MIB::ltmClientSslFwdpLookupByIpaddrPort',
  ltmClientSslGenericAlert => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.36',
  ltmClientSslGenericAlertDefinition => 'F5-BIGIP-LOCAL-MIB::ltmClientSslGenericAlert',
  ltmClientSslSslSignHash => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.37',
  ltmClientSslSslSignHashDefinition => 'F5-BIGIP-LOCAL-MIB::ltmClientSslSslSignHash',
  ltmClientSslFwdpBypassEnabled => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.38',
  ltmClientSslFwdpBypassEnabledDefinition => 'F5-BIGIP-LOCAL-MIB::ltmClientSslFwdpBypassEnabled',
  ltmClientSslFwdpBypassDipBList => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.39',
  ltmClientSslFwdpBypassDipWList => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.40',
  ltmClientSslFwdpBypassSipBList => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.41',
  ltmClientSslFwdpBypassSipWList => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.42',
  ltmClientSslFwdpBypassHnBList => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.43',
  ltmClientSslFwdpBypassHnWList => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.44',
  ltmClientSslProxySsl => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.45',
  ltmClientSslProxySslDefinition => 'F5-BIGIP-LOCAL-MIB::ltmClientSslProxySsl',
  ltmClientSslProxySslPassthrough => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.46',
  ltmClientSslProxySslPassthroughDefinition => 'F5-BIGIP-LOCAL-MIB::ltmClientSslProxySslPassthrough',
  ltmClientSslPeerNoRenegotiateTimeout => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.47',
  ltmClientSslMaxRenegotiationsPerMin => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.48',
  ltmClientSslSessionMirroring => '1.3.6.1.4.1.3375.2.2.6.2.1.2.1.49',
  ltmClientSslSessionMirroringDefinition => 'F5-BIGIP-LOCAL-MIB::ltmClientSslSessionMirroring',
  ltmClientSslProfileStat => '1.3.6.1.4.1.3375.2.2.6.2.2',
  ltmClientSslStatResetStats => '1.3.6.1.4.1.3375.2.2.6.2.2.1',
  ltmClientSslStatNumber => '1.3.6.1.4.1.3375.2.2.6.2.2.2',
  ltmClientSslStatTable => '1.3.6.1.4.1.3375.2.2.6.2.2.3',
  ltmClientSslStatEntry => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1',
  ltmClientSslStatName => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.1',
  ltmClientSslStatCurConns => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.2',
  ltmClientSslStatMaxConns => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.3',
  ltmClientSslStatCurNativeConns => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.4',
  ltmClientSslStatMaxNativeConns => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.5',
  ltmClientSslStatTotNativeConns => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.6',
  ltmClientSslStatCurCompatConns => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.7',
  ltmClientSslStatMaxCompatConns => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.8',
  ltmClientSslStatTotCompatConns => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.9',
  ltmClientSslStatEncryptedBytesIn => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.10',
  ltmClientSslStatEncryptedBytesOut => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.11',
  ltmClientSslStatDecryptedBytesIn => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.12',
  ltmClientSslStatDecryptedBytesOut => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.13',
  ltmClientSslStatRecordsIn => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.14',
  ltmClientSslStatRecordsOut => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.15',
  ltmClientSslStatFullyHwAcceleratedConns => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.16',
  ltmClientSslStatPartiallyHwAcceleratedConns => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.17',
  ltmClientSslStatNonHwAcceleratedConns => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.18',
  ltmClientSslStatPrematureDisconnects => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.19',
  ltmClientSslStatMidstreamRenegotiations => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.20',
  ltmClientSslStatSessCacheCurEntries => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.21',
  ltmClientSslStatSessCacheHits => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.22',
  ltmClientSslStatSessCacheLookups => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.23',
  ltmClientSslStatSessCacheOverflows => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.24',
  ltmClientSslStatSessCacheInvalidations => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.25',
  ltmClientSslStatPeercertValid => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.26',
  ltmClientSslStatPeercertInvalid => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.27',
  ltmClientSslStatPeercertNone => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.28',
  ltmClientSslStatHandshakeFailures => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.29',
  ltmClientSslStatBadRecords => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.30',
  ltmClientSslStatFatalAlerts => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.31',
  ltmClientSslStatSslv2 => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.32',
  ltmClientSslStatSslv3 => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.33',
  ltmClientSslStatTlsv1 => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.34',
  ltmClientSslStatAdhKeyxchg => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.35',
  ltmClientSslStatDhDssKeyxchg => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.36',
  ltmClientSslStatDhRsaKeyxchg => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.37',
  ltmClientSslStatDssKeyxchg => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.38',
  ltmClientSslStatEdhDssKeyxchg => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.39',
  ltmClientSslStatRsaKeyxchg => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.40',
  ltmClientSslStatNullBulk => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.41',
  ltmClientSslStatAesBulk => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.42',
  ltmClientSslStatDesBulk => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.43',
  ltmClientSslStatIdeaBulk => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.44',
  ltmClientSslStatRc2Bulk => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.45',
  ltmClientSslStatRc4Bulk => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.46',
  ltmClientSslStatNullDigest => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.47',
  ltmClientSslStatMd5Digest => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.48',
  ltmClientSslStatShaDigest => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.49',
  ltmClientSslStatNotssl => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.50',
  ltmClientSslStatEdhRsaKeyxchg => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.51',
  ltmClientSslStatSecureHandshakes => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.52',
  ltmClientSslStatInsecureHandshakeAccepts => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.53',
  ltmClientSslStatInsecureHandshakeRejects => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.54',
  ltmClientSslStatInsecureRenegotiationRejects => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.55',
  ltmClientSslStatSniRejects => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.56',
  ltmClientSslStatTlsv11 => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.57',
  ltmClientSslStatTlsv12 => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.58',
  ltmClientSslStatDtlsv1 => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.59',
  ltmClientSslStatReused => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.60',
  ltmClientSslStatReuseFailed => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.61',
  ltmClientSslStatEcdheRsaKeyxchg => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.62',
  ltmClientSslStatConns => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.63',
  ltmClientSslStatCachedCerts => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.64',
  ltmClientSslStatEcdhRsaKeyxchg => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.65',
  ltmClientSslStatEcdheEcdsaKeyxchg => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.66',
  ltmClientSslStatEcdhEcdsaKeyxchg => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.67',
  ltmClientSslStatDheDssKeyxchg => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.68',
  ltmClientSslStatAesGcmBulk => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.69',
  ltmClientSslStatDestinationIpBypasses => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.70',
  ltmClientSslStatSourceIpBypasses => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.71',
  ltmClientSslStatHostnameBypasses => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.72',
  ltmClientSslStatRenegotiationsRejected => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.73',
  ltmClientSslStatOcspStaplingConns => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.74',
  ltmClientSslStatOcspStaplingResponseStatusErrors => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.75',
  ltmClientSslStatOcspStaplingResponseValidationErrors => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.76',
  ltmClientSslStatOcspStaplingCertStatusErrors => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.77',
  ltmClientSslStatOcspStaplingOcspConnHttpErrors => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.78',
  ltmClientSslStatOcspStaplingOcspConnTimeouts => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.79',
  ltmClientSslStatOcspStaplingOcspConnFailures => '1.3.6.1.4.1.3375.2.2.6.2.2.3.1.80',
  ltmClientSslCertKeyChain => '1.3.6.1.4.1.3375.2.2.6.2.3',
  ltmClientSslCertKeyChainNumber => '1.3.6.1.4.1.3375.2.2.6.2.3.1',
  ltmClientSslCertKeyChainTable => '1.3.6.1.4.1.3375.2.2.6.2.3.2',
  ltmClientSslCertKeyChainEntry => '1.3.6.1.4.1.3375.2.2.6.2.3.2.1',
  ltmClientSslCertKeyChainName => '1.3.6.1.4.1.3375.2.2.6.2.3.2.1.1',
  ltmClientSslCertKeyChainClientssl => '1.3.6.1.4.1.3375.2.2.6.2.3.2.1.2',
  ltmClientSslCertKeyChainCert => '1.3.6.1.4.1.3375.2.2.6.2.3.2.1.3',
  ltmClientSslCertKeyChainKey => '1.3.6.1.4.1.3375.2.2.6.2.3.2.1.4',
  ltmClientSslCertKeyChainChain => '1.3.6.1.4.1.3375.2.2.6.2.3.2.1.5',
  ltmClientSslCertKeyChainOcspStplParams => '1.3.6.1.4.1.3375.2.2.6.2.3.2.1.6',
  ltmServerSsl => '1.3.6.1.4.1.3375.2.2.6.3',
  ltmServerSslProfile => '1.3.6.1.4.1.3375.2.2.6.3.1',
  ltmServerSslNumber => '1.3.6.1.4.1.3375.2.2.6.3.1.1',
  ltmServerSslTable => '1.3.6.1.4.1.3375.2.2.6.3.1.2',
  ltmServerSslEntry => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1',
  ltmServerSslName => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.1',
  ltmServerSslConfigSource => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.2',
  ltmServerSslConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmServerSslConfigSource',
  ltmServerSslDefaultName => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.3',
  ltmServerSslMode => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.4',
  ltmServerSslModeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmServerSslMode',
  ltmServerSslKey => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.5',
  ltmServerSslCert => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.6',
  ltmServerSslChain => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.7',
  ltmServerSslCafile => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.8',
  ltmServerSslCrlfile => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.9',
  ltmServerSslCiphers => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.10',
  ltmServerSslPassphrase => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.11',
  ltmServerSslOptions => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.12',
  ltmServerSslModsslmethods => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.13',
  ltmServerSslModsslmethodsDefinition => 'F5-BIGIP-LOCAL-MIB::ltmServerSslModsslmethods',
  ltmServerSslRenegotiatePeriod => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.14',
  ltmServerSslRenegotiateSize => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.15',
  ltmServerSslPeerCertMode => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.16',
  ltmServerSslPeerCertModeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmServerSslPeerCertMode',
  ltmServerSslAuthenticateOnce => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.17',
  ltmServerSslAuthenticateOnceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmServerSslAuthenticateOnce',
  ltmServerSslAuthenticateDepth => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.18',
  ltmServerSslAuthenticateName => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.19',
  ltmServerSslUncleanShutdown => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.20',
  ltmServerSslUncleanShutdownDefinition => 'F5-BIGIP-LOCAL-MIB::ltmServerSslUncleanShutdown',
  ltmServerSslStrictResume => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.21',
  ltmServerSslStrictResumeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmServerSslStrictResume',
  ltmServerSslHandshakeTimeout => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.22',
  ltmServerSslAlertTimeout => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.23',
  ltmServerSslCacheSize => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.24',
  ltmServerSslCacheTimeout => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.25',
  ltmServerSslSessionTicket => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.26',
  ltmServerSslSessionTicketDefinition => 'F5-BIGIP-LOCAL-MIB::ltmServerSslSessionTicket',
  ltmServerSslFwdpEnabled => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.27',
  ltmServerSslFwdpEnabledDefinition => 'F5-BIGIP-LOCAL-MIB::ltmServerSslFwdpEnabled',
  ltmServerSslDropExpCert => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.28',
  ltmServerSslDropExpCertDefinition => 'F5-BIGIP-LOCAL-MIB::ltmServerSslDropExpCert',
  ltmServerSslDropUntrustCa => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.29',
  ltmServerSslDropUntrustCaDefinition => 'F5-BIGIP-LOCAL-MIB::ltmServerSslDropUntrustCa',
  ltmServerSslGenericAlert => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.30',
  ltmServerSslGenericAlertDefinition => 'F5-BIGIP-LOCAL-MIB::ltmServerSslGenericAlert',
  ltmServerSslSslSignHash => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.31',
  ltmServerSslSslSignHashDefinition => 'F5-BIGIP-LOCAL-MIB::ltmServerSslSslSignHash',
  ltmServerSslFwdpBypassEnabled => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.32',
  ltmServerSslFwdpBypassEnabledDefinition => 'F5-BIGIP-LOCAL-MIB::ltmServerSslFwdpBypassEnabled',
  ltmServerSslProxySsl => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.33',
  ltmServerSslProxySslDefinition => 'F5-BIGIP-LOCAL-MIB::ltmServerSslProxySsl',
  ltmServerSslProxySslPassthrough => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.34',
  ltmServerSslProxySslPassthroughDefinition => 'F5-BIGIP-LOCAL-MIB::ltmServerSslProxySslPassthrough',
  ltmServerSslSessionMirroring => '1.3.6.1.4.1.3375.2.2.6.3.1.2.1.35',
  ltmServerSslSessionMirroringDefinition => 'F5-BIGIP-LOCAL-MIB::ltmServerSslSessionMirroring',
  ltmServerSslProfileStat => '1.3.6.1.4.1.3375.2.2.6.3.2',
  ltmServerSslStatResetStats => '1.3.6.1.4.1.3375.2.2.6.3.2.1',
  ltmServerSslStatNumber => '1.3.6.1.4.1.3375.2.2.6.3.2.2',
  ltmServerSslStatTable => '1.3.6.1.4.1.3375.2.2.6.3.2.3',
  ltmServerSslStatEntry => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1',
  ltmServerSslStatName => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.1',
  ltmServerSslStatCurConns => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.2',
  ltmServerSslStatMaxConns => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.3',
  ltmServerSslStatCurNativeConns => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.4',
  ltmServerSslStatMaxNativeConns => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.5',
  ltmServerSslStatTotNativeConns => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.6',
  ltmServerSslStatCurCompatConns => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.7',
  ltmServerSslStatMaxCompatConns => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.8',
  ltmServerSslStatTotCompatConns => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.9',
  ltmServerSslStatEncryptedBytesIn => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.10',
  ltmServerSslStatEncryptedBytesOut => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.11',
  ltmServerSslStatDecryptedBytesIn => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.12',
  ltmServerSslStatDecryptedBytesOut => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.13',
  ltmServerSslStatRecordsIn => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.14',
  ltmServerSslStatRecordsOut => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.15',
  ltmServerSslStatFullyHwAcceleratedConns => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.16',
  ltmServerSslStatPartiallyHwAcceleratedConns => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.17',
  ltmServerSslStatNonHwAcceleratedConns => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.18',
  ltmServerSslStatPrematureDisconnects => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.19',
  ltmServerSslStatMidstreamRenegotiations => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.20',
  ltmServerSslStatSessCacheCurEntries => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.21',
  ltmServerSslStatSessCacheHits => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.22',
  ltmServerSslStatSessCacheLookups => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.23',
  ltmServerSslStatSessCacheOverflows => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.24',
  ltmServerSslStatSessCacheInvalidations => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.25',
  ltmServerSslStatPeercertValid => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.26',
  ltmServerSslStatPeercertInvalid => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.27',
  ltmServerSslStatPeercertNone => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.28',
  ltmServerSslStatHandshakeFailures => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.29',
  ltmServerSslStatBadRecords => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.30',
  ltmServerSslStatFatalAlerts => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.31',
  ltmServerSslStatSslv2 => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.32',
  ltmServerSslStatSslv3 => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.33',
  ltmServerSslStatTlsv1 => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.34',
  ltmServerSslStatAdhKeyxchg => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.35',
  ltmServerSslStatDhDssKeyxchg => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.36',
  ltmServerSslStatDhRsaKeyxchg => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.37',
  ltmServerSslStatDssKeyxchg => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.38',
  ltmServerSslStatEdhDssKeyxchg => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.39',
  ltmServerSslStatRsaKeyxchg => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.40',
  ltmServerSslStatNullBulk => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.41',
  ltmServerSslStatAesBulk => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.42',
  ltmServerSslStatDesBulk => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.43',
  ltmServerSslStatIdeaBulk => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.44',
  ltmServerSslStatRc2Bulk => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.45',
  ltmServerSslStatRc4Bulk => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.46',
  ltmServerSslStatNullDigest => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.47',
  ltmServerSslStatMd5Digest => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.48',
  ltmServerSslStatShaDigest => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.49',
  ltmServerSslStatNotssl => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.50',
  ltmServerSslStatEdhRsaKeyxchg => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.51',
  ltmServerSslStatSecureHandshakes => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.52',
  ltmServerSslStatInsecureHandshakeAccepts => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.53',
  ltmServerSslStatInsecureHandshakeRejects => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.54',
  ltmServerSslStatInsecureRenegotiationRejects => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.55',
  ltmServerSslStatSniRejects => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.56',
  ltmServerSslStatTlsv11 => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.57',
  ltmServerSslStatTlsv12 => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.58',
  ltmServerSslStatDtlsv1 => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.59',
  ltmServerSslStatReused => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.60',
  ltmServerSslStatReuseFailed => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.61',
  ltmServerSslStatEcdheRsaKeyxchg => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.62',
  ltmServerSslStatConns => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.63',
  ltmServerSslStatEcdhRsaKeyxchg => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.64',
  ltmServerSslStatEcdheEcdsaKeyxchg => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.65',
  ltmServerSslStatEcdhEcdsaKeyxchg => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.66',
  ltmServerSslStatDheDssKeyxchg => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.67',
  ltmServerSslStatAesGcmBulk => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.68',
  ltmServerSslStatDestinationIpBypasses => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.69',
  ltmServerSslStatSourceIpBypasses => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.70',
  ltmServerSslStatHostnameBypasses => '1.3.6.1.4.1.3375.2.2.6.3.2.3.1.71',
  ltmConnPool => '1.3.6.1.4.1.3375.2.2.6.4',
  ltmConnPoolProfile => '1.3.6.1.4.1.3375.2.2.6.4.1',
  ltmConnPoolProfileNumber => '1.3.6.1.4.1.3375.2.2.6.4.1.1',
  ltmConnPoolProfileTable => '1.3.6.1.4.1.3375.2.2.6.4.1.2',
  ltmConnPoolProfileEntry => '1.3.6.1.4.1.3375.2.2.6.4.1.2.1',
  ltmConnPoolProfileName => '1.3.6.1.4.1.3375.2.2.6.4.1.2.1.1',
  ltmConnPoolProfileConfigSource => '1.3.6.1.4.1.3375.2.2.6.4.1.2.1.2',
  ltmConnPoolProfileConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmConnPoolProfileConfigSource',
  ltmConnPoolProfileDefaultName => '1.3.6.1.4.1.3375.2.2.6.4.1.2.1.3',
  ltmConnPoolProfileSrcMaskType => '1.3.6.1.4.1.3375.2.2.6.4.1.2.1.4',
  ltmConnPoolProfileSrcMask => '1.3.6.1.4.1.3375.2.2.6.4.1.2.1.5',
  ltmConnPoolProfileMaxSize => '1.3.6.1.4.1.3375.2.2.6.4.1.2.1.6',
  ltmConnPoolProfileMaxAge => '1.3.6.1.4.1.3375.2.2.6.4.1.2.1.7',
  ltmConnPoolProfileMaxReuse => '1.3.6.1.4.1.3375.2.2.6.4.1.2.1.8',
  ltmConnPoolProfileIdleTimeout => '1.3.6.1.4.1.3375.2.2.6.4.1.2.1.9',
  ltmConnPoolProfileStat => '1.3.6.1.4.1.3375.2.2.6.4.2',
  ltmConnPoolProfileStatResetStats => '1.3.6.1.4.1.3375.2.2.6.4.2.1',
  ltmConnPoolProfileStatNumber => '1.3.6.1.4.1.3375.2.2.6.4.2.2',
  ltmConnPoolProfileStatTable => '1.3.6.1.4.1.3375.2.2.6.4.2.3',
  ltmConnPoolProfileStatEntry => '1.3.6.1.4.1.3375.2.2.6.4.2.3.1',
  ltmConnPoolProfileStatName => '1.3.6.1.4.1.3375.2.2.6.4.2.3.1.1',
  ltmConnPoolProfileStatCurSize => '1.3.6.1.4.1.3375.2.2.6.4.2.3.1.2',
  ltmConnPoolProfileStatMaxSize => '1.3.6.1.4.1.3375.2.2.6.4.2.3.1.3',
  ltmConnPoolProfileStatReuses => '1.3.6.1.4.1.3375.2.2.6.4.2.3.1.4',
  ltmConnPoolProfileStatConnects => '1.3.6.1.4.1.3375.2.2.6.4.2.3.1.5',
  ltmFastL4 => '1.3.6.1.4.1.3375.2.2.6.5',
  ltmFastL4Profile => '1.3.6.1.4.1.3375.2.2.6.5.1',
  ltmFastL4ProfileNumber => '1.3.6.1.4.1.3375.2.2.6.5.1.1',
  ltmFastL4ProfileTable => '1.3.6.1.4.1.3375.2.2.6.5.1.2',
  ltmFastL4ProfileEntry => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1',
  ltmFastL4ProfileName => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.1',
  ltmFastL4ProfileConfigSource => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.2',
  ltmFastL4ProfileConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFastL4ProfileConfigSource',
  ltmFastL4ProfileDefaultName => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.3',
  ltmFastL4ProfileResetOnTimeout => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.4',
  ltmFastL4ProfileResetOnTimeoutDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFastL4ProfileResetOnTimeout',
  ltmFastL4ProfileIpFragReass => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.5',
  ltmFastL4ProfileIpFragReassDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFastL4ProfileIpFragReass',
  ltmFastL4ProfileIdleTimeout => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.6',
  ltmFastL4ProfileTcpHandshakeTimeout => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.7',
  ltmFastL4ProfileMssOverride => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.8',
  ltmFastL4ProfilePvaAccelMode => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.9',
  ltmFastL4ProfilePvaAccelModeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFastL4ProfilePvaAccelMode',
  ltmFastL4ProfileTcpTimestampMode => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.10',
  ltmFastL4ProfileTcpTimestampModeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFastL4ProfileTcpTimestampMode',
  ltmFastL4ProfileTcpWscaleMode => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.11',
  ltmFastL4ProfileTcpWscaleModeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFastL4ProfileTcpWscaleMode',
  ltmFastL4ProfileTcpGenerateIsn => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.12',
  ltmFastL4ProfileTcpGenerateIsnDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFastL4ProfileTcpGenerateIsn',
  ltmFastL4ProfileTcpStripSack => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.13',
  ltmFastL4ProfileTcpStripSackDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFastL4ProfileTcpStripSack',
  ltmFastL4ProfileIpTosToClient => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.14',
  ltmFastL4ProfileIpTosToServer => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.15',
  ltmFastL4ProfileLinkQosToClient => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.16',
  ltmFastL4ProfileLinkQosToServer => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.17',
  ltmFastL4ProfileRttFromClient => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.18',
  ltmFastL4ProfileRttFromClientDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFastL4ProfileRttFromClient',
  ltmFastL4ProfileRttFromServer => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.19',
  ltmFastL4ProfileRttFromServerDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFastL4ProfileRttFromServer',
  ltmFastL4ProfileTcpCloseTimeout => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.20',
  ltmFastL4ProfileLooseInitiation => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.21',
  ltmFastL4ProfileLooseInitiationDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFastL4ProfileLooseInitiation',
  ltmFastL4ProfileLooseClose => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.22',
  ltmFastL4ProfileLooseCloseDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFastL4ProfileLooseClose',
  ltmFastL4ProfileHardSyncookie => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.23',
  ltmFastL4ProfileHardSyncookieDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFastL4ProfileHardSyncookie',
  ltmFastL4ProfileSoftSyncookie => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.24',
  ltmFastL4ProfileSoftSyncookieDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFastL4ProfileSoftSyncookie',
  ltmFastL4ProfileLateBinding => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.25',
  ltmFastL4ProfileLateBindingDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFastL4ProfileLateBinding',
  ltmFastL4ProfileExplicitFlowMigration => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.26',
  ltmFastL4ProfileExplicitFlowMigrationDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFastL4ProfileExplicitFlowMigration',
  ltmFastL4ProfileClientTimeout => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.27',
  ltmFastL4ProfileTimeoutRecovery => '1.3.6.1.4.1.3375.2.2.6.5.1.2.1.28',
  ltmFastL4ProfileTimeoutRecoveryDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFastL4ProfileTimeoutRecovery',
  ltmFastL4ProfileStat => '1.3.6.1.4.1.3375.2.2.6.5.2',
  ltmFastL4ProfileStatResetStats => '1.3.6.1.4.1.3375.2.2.6.5.2.1',
  ltmFastL4ProfileStatNumber => '1.3.6.1.4.1.3375.2.2.6.5.2.2',
  ltmFastL4ProfileStatTable => '1.3.6.1.4.1.3375.2.2.6.5.2.3',
  ltmFastL4ProfileStatEntry => '1.3.6.1.4.1.3375.2.2.6.5.2.3.1',
  ltmFastL4ProfileStatName => '1.3.6.1.4.1.3375.2.2.6.5.2.3.1.1',
  ltmFastL4ProfileStatOpen => '1.3.6.1.4.1.3375.2.2.6.5.2.3.1.2',
  ltmFastL4ProfileStatAccepts => '1.3.6.1.4.1.3375.2.2.6.5.2.3.1.3',
  ltmFastL4ProfileStatAcceptfails => '1.3.6.1.4.1.3375.2.2.6.5.2.3.1.4',
  ltmFastL4ProfileStatExpires => '1.3.6.1.4.1.3375.2.2.6.5.2.3.1.5',
  ltmFastL4ProfileStatRxbadpkt => '1.3.6.1.4.1.3375.2.2.6.5.2.3.1.6',
  ltmFastL4ProfileStatRxunreach => '1.3.6.1.4.1.3375.2.2.6.5.2.3.1.7',
  ltmFastL4ProfileStatRxbadunreach => '1.3.6.1.4.1.3375.2.2.6.5.2.3.1.8',
  ltmFastL4ProfileStatRxbadsum => '1.3.6.1.4.1.3375.2.2.6.5.2.3.1.9',
  ltmFastL4ProfileStatTxerrors => '1.3.6.1.4.1.3375.2.2.6.5.2.3.1.10',
  ltmFastL4ProfileStatSyncookIssue => '1.3.6.1.4.1.3375.2.2.6.5.2.3.1.11',
  ltmFastL4ProfileStatSyncookAccept => '1.3.6.1.4.1.3375.2.2.6.5.2.3.1.12',
  ltmFastL4ProfileStatSyncookReject => '1.3.6.1.4.1.3375.2.2.6.5.2.3.1.13',
  ltmFastL4ProfileStatServersynrtx => '1.3.6.1.4.1.3375.2.2.6.5.2.3.1.14',
  ltmFastL4ProfileStatLbcSuccessful => '1.3.6.1.4.1.3375.2.2.6.5.2.3.1.15',
  ltmFastL4ProfileStatLbcTimedout => '1.3.6.1.4.1.3375.2.2.6.5.2.3.1.16',
  ltmFtp => '1.3.6.1.4.1.3375.2.2.6.6',
  ltmFtpProfile => '1.3.6.1.4.1.3375.2.2.6.6.1',
  ltmFtpProfileNumber => '1.3.6.1.4.1.3375.2.2.6.6.1.1',
  ltmFtpProfileTable => '1.3.6.1.4.1.3375.2.2.6.6.1.2',
  ltmFtpProfileEntry => '1.3.6.1.4.1.3375.2.2.6.6.1.2.1',
  ltmFtpProfileName => '1.3.6.1.4.1.3375.2.2.6.6.1.2.1.1',
  ltmFtpProfileConfigSource => '1.3.6.1.4.1.3375.2.2.6.6.1.2.1.2',
  ltmFtpProfileConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFtpProfileConfigSource',
  ltmFtpProfileDefaultName => '1.3.6.1.4.1.3375.2.2.6.6.1.2.1.3',
  ltmFtpProfileTranslateExtended => '1.3.6.1.4.1.3375.2.2.6.6.1.2.1.4',
  ltmFtpProfileTranslateExtendedDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFtpProfileTranslateExtended',
  ltmFtpProfileDataPort => '1.3.6.1.4.1.3375.2.2.6.6.1.2.1.5',
  ltmFtpProfileLogPublisher => '1.3.6.1.4.1.3375.2.2.6.6.1.2.1.6',
  ltmFtpProfileLogProfile => '1.3.6.1.4.1.3375.2.2.6.6.1.2.1.7',
  ltmFtpProfileStat => '1.3.6.1.4.1.3375.2.2.6.6.2',
  ltmFtpProfileStatResetStats => '1.3.6.1.4.1.3375.2.2.6.6.2.1',
  ltmFtpProfileStatNumber => '1.3.6.1.4.1.3375.2.2.6.6.2.2',
  ltmFtpProfileStatTable => '1.3.6.1.4.1.3375.2.2.6.6.2.3',
  ltmFtpProfileStatEntry => '1.3.6.1.4.1.3375.2.2.6.6.2.3.1',
  ltmFtpProfileStatName => '1.3.6.1.4.1.3375.2.2.6.6.2.3.1.1',
  ltmFtpProfileStatLoginRequests => '1.3.6.1.4.1.3375.2.2.6.6.2.3.1.2',
  ltmFtpProfileStatDownloadRequests => '1.3.6.1.4.1.3375.2.2.6.6.2.3.1.3',
  ltmFtpProfileStatUploadRequests => '1.3.6.1.4.1.3375.2.2.6.6.2.3.1.4',
  ltmHttp => '1.3.6.1.4.1.3375.2.2.6.7',
  ltmHttpProfile => '1.3.6.1.4.1.3375.2.2.6.7.1',
  ltmHttpProfileNumber => '1.3.6.1.4.1.3375.2.2.6.7.1.1',
  ltmHttpProfileTable => '1.3.6.1.4.1.3375.2.2.6.7.1.2',
  ltmHttpProfileEntry => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1',
  ltmHttpProfileName => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.1',
  ltmHttpProfileConfigSource => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.2',
  ltmHttpProfileConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpProfileConfigSource',
  ltmHttpProfileDefaultName => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.3',
  ltmHttpProfileBasicAuthRealm => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.4',
  ltmHttpProfileOneConnect => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.5',
  ltmHttpProfileOneConnectDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpProfileOneConnect',
  ltmHttpProfileHeaderInsert => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.6',
  ltmHttpProfileHeaderErase => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.7',
  ltmHttpProfileFallbackHost => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.8',
  ltmHttpProfileCompressMode => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.9',
  ltmHttpProfileCompressModeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpProfileCompressMode',
  ltmHttpProfileCompressMinSize => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.10',
  ltmHttpProfileCompressBufferSize => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.11',
  ltmHttpProfileCompressVaryHeader => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.12',
  ltmHttpProfileCompressVaryHeaderDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpProfileCompressVaryHeader',
  ltmHttpProfileCompressAllowHttp10 => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.13',
  ltmHttpProfileCompressAllowHttp10Definition => 'F5-BIGIP-LOCAL-MIB::ltmHttpProfileCompressAllowHttp10',
  ltmHttpProfileCompressGzipMemlevel => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.14',
  ltmHttpProfileCompressGzipWindowsize => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.15',
  ltmHttpProfileCompressGzipLevel => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.16',
  ltmHttpProfileCompressKeepAcceptEncoding => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.17',
  ltmHttpProfileCompressKeepAcceptEncodingDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpProfileCompressKeepAcceptEncoding',
  ltmHttpProfileCompressBrowserWorkarounds => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.18',
  ltmHttpProfileCompressBrowserWorkaroundsDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpProfileCompressBrowserWorkarounds',
  ltmHttpProfileResponseChunking => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.19',
  ltmHttpProfileResponseChunkingDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpProfileResponseChunking',
  ltmHttpProfileLwsMaxColumn => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.20',
  ltmHttpProfileLwsSeparator => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.21',
  ltmHttpProfileRedirectRewrite => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.22',
  ltmHttpProfileRedirectRewriteDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpProfileRedirectRewrite',
  ltmHttpProfileMaxHeaderSize => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.23',
  ltmHttpProfilePipelining => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.24',
  ltmHttpProfilePipeliningDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpProfilePipelining',
  ltmHttpProfileInsertXforwardedFor => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.25',
  ltmHttpProfileInsertXforwardedForDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpProfileInsertXforwardedFor',
  ltmHttpProfileMaxRequests => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.26',
  ltmHttpProfileCompressCpusaver => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.27',
  ltmHttpProfileCompressCpusaverDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpProfileCompressCpusaver',
  ltmHttpProfileCompressCpusaverHigh => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.28',
  ltmHttpProfileCompressCpusaverLow => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.29',
  ltmHttpProfileRamcache => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.30',
  ltmHttpProfileRamcacheDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpProfileRamcache',
  ltmHttpProfileRamcacheSize => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.31',
  ltmHttpProfileRamcacheMaxEntries => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.32',
  ltmHttpProfileRamcacheMaxAge => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.33',
  ltmHttpProfileRamcacheObjectMinSize => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.34',
  ltmHttpProfileRamcacheObjectMaxSize => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.35',
  ltmHttpProfileRamcacheIgnoreClient => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.36',
  ltmHttpProfileRamcacheIgnoreClientDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpProfileRamcacheIgnoreClient',
  ltmHttpProfileRamcacheAgingRate => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.37',
  ltmHttpProfileRamcacheInsertAgeHeader => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.38',
  ltmHttpProfileRamcacheInsertAgeHeaderDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpProfileRamcacheInsertAgeHeader',
  ltmHttpProfileCompressPreferredMethod => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.39',
  ltmHttpProfileCompressPreferredMethodDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpProfileCompressPreferredMethod',
  ltmHttpProfileServerAgentName => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.40',
  ltmHttpProfilePassthroughPipeline => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.41',
  ltmHttpProfilePassthroughPipelineDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpProfilePassthroughPipeline',
  ltmHttpProfileTruncatedRedirects => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.42',
  ltmHttpProfileTruncatedRedirectsDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpProfileTruncatedRedirects',
  ltmHttpProfilePassthroughOversizeClientHeaders => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.43',
  ltmHttpProfilePassthroughOversizeClientHeadersDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpProfilePassthroughOversizeClientHeaders',
  ltmHttpProfilePassthroughOversizeServerHeaders => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.44',
  ltmHttpProfilePassthroughOversizeServerHeadersDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpProfilePassthroughOversizeServerHeaders',
  ltmHttpProfilePassthroughExcessClientHeaders => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.45',
  ltmHttpProfilePassthroughExcessClientHeadersDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpProfilePassthroughExcessClientHeaders',
  ltmHttpProfilePassthroughExcessServerHeaders => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.46',
  ltmHttpProfilePassthroughExcessServerHeadersDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpProfilePassthroughExcessServerHeaders',
  ltmHttpProfilePassthroughUnknownMethod => '1.3.6.1.4.1.3375.2.2.6.7.1.2.1.47',
  ltmHttpProfilePassthroughUnknownMethodDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpProfilePassthroughUnknownMethod',
  ltmHttpProfileCompUriIncl => '1.3.6.1.4.1.3375.2.2.6.7.2',
  ltmCompUriInclNumber => '1.3.6.1.4.1.3375.2.2.6.7.2.1',
  ltmCompUriInclTable => '1.3.6.1.4.1.3375.2.2.6.7.2.2',
  ltmCompUriInclEntry => '1.3.6.1.4.1.3375.2.2.6.7.2.2.1',
  ltmCompUriInclName => '1.3.6.1.4.1.3375.2.2.6.7.2.2.1.1',
  ltmCompUriInclIndex => '1.3.6.1.4.1.3375.2.2.6.7.2.2.1.2',
  ltmCompUriInclUri => '1.3.6.1.4.1.3375.2.2.6.7.2.2.1.3',
  ltmHttpProfileCompUriExcl => '1.3.6.1.4.1.3375.2.2.6.7.3',
  ltmCompUriExclNumber => '1.3.6.1.4.1.3375.2.2.6.7.3.1',
  ltmCompUriExclTable => '1.3.6.1.4.1.3375.2.2.6.7.3.2',
  ltmCompUriExclEntry => '1.3.6.1.4.1.3375.2.2.6.7.3.2.1',
  ltmCompUriExclName => '1.3.6.1.4.1.3375.2.2.6.7.3.2.1.1',
  ltmCompUriExclIndex => '1.3.6.1.4.1.3375.2.2.6.7.3.2.1.2',
  ltmCompUriExclUri => '1.3.6.1.4.1.3375.2.2.6.7.3.2.1.3',
  ltmHttpProfileCompContTypeIncl => '1.3.6.1.4.1.3375.2.2.6.7.4',
  ltmCompContTypeInclNumber => '1.3.6.1.4.1.3375.2.2.6.7.4.1',
  ltmCompContTypeInclTable => '1.3.6.1.4.1.3375.2.2.6.7.4.2',
  ltmCompContTypeInclEntry => '1.3.6.1.4.1.3375.2.2.6.7.4.2.1',
  ltmCompContTypeInclName => '1.3.6.1.4.1.3375.2.2.6.7.4.2.1.1',
  ltmCompContTypeInclIndex => '1.3.6.1.4.1.3375.2.2.6.7.4.2.1.2',
  ltmCompContTypeInclContentType => '1.3.6.1.4.1.3375.2.2.6.7.4.2.1.3',
  ltmHttpProfileCompContTypeExcl => '1.3.6.1.4.1.3375.2.2.6.7.5',
  ltmCompContTypeExclNumber => '1.3.6.1.4.1.3375.2.2.6.7.5.1',
  ltmCompContTypeExclTable => '1.3.6.1.4.1.3375.2.2.6.7.5.2',
  ltmCompContTypeExclEntry => '1.3.6.1.4.1.3375.2.2.6.7.5.2.1',
  ltmCompContTypeExclName => '1.3.6.1.4.1.3375.2.2.6.7.5.2.1.1',
  ltmCompContTypeExclIndex => '1.3.6.1.4.1.3375.2.2.6.7.5.2.1.2',
  ltmCompContTypeExclContentType => '1.3.6.1.4.1.3375.2.2.6.7.5.2.1.3',
  ltmHttpProfileStat => '1.3.6.1.4.1.3375.2.2.6.7.6',
  ltmHttpProfileStatResetStats => '1.3.6.1.4.1.3375.2.2.6.7.6.1',
  ltmHttpProfileStatNumber => '1.3.6.1.4.1.3375.2.2.6.7.6.2',
  ltmHttpProfileStatTable => '1.3.6.1.4.1.3375.2.2.6.7.6.3',
  ltmHttpProfileStatEntry => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1',
  ltmHttpProfileStatName => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.1',
  ltmHttpProfileStatCookiePersistInserts => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.2',
  ltmHttpProfileStatResp2xxCnt => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.3',
  ltmHttpProfileStatResp3xxCnt => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.4',
  ltmHttpProfileStatResp4xxCnt => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.5',
  ltmHttpProfileStatResp5xxCnt => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.6',
  ltmHttpProfileStatNumberReqs => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.7',
  ltmHttpProfileStatGetReqs => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.8',
  ltmHttpProfileStatPostReqs => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.9',
  ltmHttpProfileStatV9Reqs => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.10',
  ltmHttpProfileStatV10Reqs => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.11',
  ltmHttpProfileStatV11Reqs => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.12',
  ltmHttpProfileStatV9Resp => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.13',
  ltmHttpProfileStatV10Resp => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.14',
  ltmHttpProfileStatV11Resp => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.15',
  ltmHttpProfileStatMaxKeepaliveReq => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.16',
  ltmHttpProfileStatRespBucket1k => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.17',
  ltmHttpProfileStatRespBucket4k => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.18',
  ltmHttpProfileStatRespBucket16k => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.19',
  ltmHttpProfileStatRespBucket32k => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.20',
  ltmHttpProfileStatPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.21',
  ltmHttpProfileStatPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.22',
  ltmHttpProfileStatNullCompressBytes => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.23',
  ltmHttpProfileStatHtmlPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.24',
  ltmHttpProfileStatHtmlPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.25',
  ltmHttpProfileStatCssPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.26',
  ltmHttpProfileStatCssPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.27',
  ltmHttpProfileStatJsPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.28',
  ltmHttpProfileStatJsPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.29',
  ltmHttpProfileStatXmlPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.30',
  ltmHttpProfileStatXmlPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.31',
  ltmHttpProfileStatSgmlPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.32',
  ltmHttpProfileStatSgmlPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.33',
  ltmHttpProfileStatPlainPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.34',
  ltmHttpProfileStatPlainPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.35',
  ltmHttpProfileStatOctetPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.36',
  ltmHttpProfileStatOctetPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.37',
  ltmHttpProfileStatImagePrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.38',
  ltmHttpProfileStatImagePostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.39',
  ltmHttpProfileStatVideoPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.40',
  ltmHttpProfileStatVideoPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.41',
  ltmHttpProfileStatAudioPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.42',
  ltmHttpProfileStatAudioPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.43',
  ltmHttpProfileStatOtherPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.44',
  ltmHttpProfileStatOtherPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.45',
  ltmHttpProfileStatRamcacheHits => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.46',
  ltmHttpProfileStatRamcacheMisses => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.47',
  ltmHttpProfileStatRamcacheMissesAll => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.48',
  ltmHttpProfileStatRamcacheHitBytes => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.49',
  ltmHttpProfileStatRamcacheMissBytes => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.50',
  ltmHttpProfileStatRamcacheMissBytesAll => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.51',
  ltmHttpProfileStatRamcacheSize => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.52',
  ltmHttpProfileStatRamcacheCount => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.53',
  ltmHttpProfileStatRamcacheEvictions => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.54',
  ltmHttpProfileStatRespBucket64k => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.55',
  ltmHttpProfileStatPassthroughIrule => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.56',
  ltmHttpProfileStatPassthroughConnect => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.57',
  ltmHttpProfileStatPassthroughWebSockets => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.58',
  ltmHttpProfileStatPassthroughOversizeClientHeaders => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.59',
  ltmHttpProfileStatPassthroughOversizeServerHeaders => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.60',
  ltmHttpProfileStatPassthroughExcessClientHeaders => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.61',
  ltmHttpProfileStatPassthroughExcessServerHeaders => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.62',
  ltmHttpProfileStatPassthroughUnknownMethod => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.63',
  ltmHttpProfileStatPassthroughPipeline => '1.3.6.1.4.1.3375.2.2.6.7.6.3.1.64',
  ltmHttpProfileRamUriExcl => '1.3.6.1.4.1.3375.2.2.6.7.7',
  ltmRamUriExclNumber => '1.3.6.1.4.1.3375.2.2.6.7.7.1',
  ltmRamUriExclTable => '1.3.6.1.4.1.3375.2.2.6.7.7.2',
  ltmRamUriExclEntry => '1.3.6.1.4.1.3375.2.2.6.7.7.2.1',
  ltmRamUriExclName => '1.3.6.1.4.1.3375.2.2.6.7.7.2.1.1',
  ltmRamUriExclIndex => '1.3.6.1.4.1.3375.2.2.6.7.7.2.1.2',
  ltmRamUriExclUri => '1.3.6.1.4.1.3375.2.2.6.7.7.2.1.3',
  ltmHttpProfileRamUriIncl => '1.3.6.1.4.1.3375.2.2.6.7.8',
  ltmRamUriInclNumber => '1.3.6.1.4.1.3375.2.2.6.7.8.1',
  ltmRamUriInclTable => '1.3.6.1.4.1.3375.2.2.6.7.8.2',
  ltmRamUriInclEntry => '1.3.6.1.4.1.3375.2.2.6.7.8.2.1',
  ltmRamUriInclName => '1.3.6.1.4.1.3375.2.2.6.7.8.2.1.1',
  ltmRamUriInclIndex => '1.3.6.1.4.1.3375.2.2.6.7.8.2.1.2',
  ltmRamUriInclUri => '1.3.6.1.4.1.3375.2.2.6.7.8.2.1.3',
  ltmHttpProfileRamUriPin => '1.3.6.1.4.1.3375.2.2.6.7.9',
  ltmRamUriPinNumber => '1.3.6.1.4.1.3375.2.2.6.7.9.1',
  ltmRamUriPinTable => '1.3.6.1.4.1.3375.2.2.6.7.9.2',
  ltmRamUriPinEntry => '1.3.6.1.4.1.3375.2.2.6.7.9.2.1',
  ltmRamUriPinName => '1.3.6.1.4.1.3375.2.2.6.7.9.2.1.1',
  ltmRamUriPinIndex => '1.3.6.1.4.1.3375.2.2.6.7.9.2.1.2',
  ltmRamUriPinUri => '1.3.6.1.4.1.3375.2.2.6.7.9.2.1.3',
  ltmHttpProfileFallbackStatus => '1.3.6.1.4.1.3375.2.2.6.7.10',
  ltmFallbackStatusNumber => '1.3.6.1.4.1.3375.2.2.6.7.10.1',
  ltmFallbackStatusTable => '1.3.6.1.4.1.3375.2.2.6.7.10.2',
  ltmFallbackStatusEntry => '1.3.6.1.4.1.3375.2.2.6.7.10.2.1',
  ltmFallbackStatusName => '1.3.6.1.4.1.3375.2.2.6.7.10.2.1.1',
  ltmFallbackStatusIndex => '1.3.6.1.4.1.3375.2.2.6.7.10.2.1.2',
  ltmFallbackStatusCode => '1.3.6.1.4.1.3375.2.2.6.7.10.2.1.3',
  ltmHttpProfileRespHeadersPerm => '1.3.6.1.4.1.3375.2.2.6.7.11',
  ltmRespHeadersPermNumber => '1.3.6.1.4.1.3375.2.2.6.7.11.1',
  ltmRespHeadersPermTable => '1.3.6.1.4.1.3375.2.2.6.7.11.2',
  ltmRespHeadersPermEntry => '1.3.6.1.4.1.3375.2.2.6.7.11.2.1',
  ltmRespHeadersPermName => '1.3.6.1.4.1.3375.2.2.6.7.11.2.1.1',
  ltmRespHeadersPermIndex => '1.3.6.1.4.1.3375.2.2.6.7.11.2.1.2',
  ltmRespHeadersPermStr => '1.3.6.1.4.1.3375.2.2.6.7.11.2.1.3',
  ltmHttpProfileEncCookies => '1.3.6.1.4.1.3375.2.2.6.7.12',
  ltmEncCookiesNumber => '1.3.6.1.4.1.3375.2.2.6.7.12.1',
  ltmEncCookiesTable => '1.3.6.1.4.1.3375.2.2.6.7.12.2',
  ltmEncCookiesEntry => '1.3.6.1.4.1.3375.2.2.6.7.12.2.1',
  ltmEncCookiesName => '1.3.6.1.4.1.3375.2.2.6.7.12.2.1.1',
  ltmEncCookiesIndex => '1.3.6.1.4.1.3375.2.2.6.7.12.2.1.2',
  ltmEncCookiesStr => '1.3.6.1.4.1.3375.2.2.6.7.12.2.1.3',
  ltmPersist => '1.3.6.1.4.1.3375.2.2.6.8',
  ltmPersistProfile => '1.3.6.1.4.1.3375.2.2.6.8.1',
  ltmPersistProfileNumber => '1.3.6.1.4.1.3375.2.2.6.8.1.1',
  ltmPersistProfileTable => '1.3.6.1.4.1.3375.2.2.6.8.1.2',
  ltmPersistProfileEntry => '1.3.6.1.4.1.3375.2.2.6.8.1.2.1',
  ltmPersistProfileName => '1.3.6.1.4.1.3375.2.2.6.8.1.2.1.1',
  ltmPersistProfileConfigSource => '1.3.6.1.4.1.3375.2.2.6.8.1.2.1.2',
  ltmPersistProfileConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPersistProfileConfigSource',
  ltmPersistProfileDefaultName => '1.3.6.1.4.1.3375.2.2.6.8.1.2.1.3',
  ltmPersistProfileMode => '1.3.6.1.4.1.3375.2.2.6.8.1.2.1.4',
  ltmPersistProfileModeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPersistProfileMode',
  ltmPersistProfileMirror => '1.3.6.1.4.1.3375.2.2.6.8.1.2.1.5',
  ltmPersistProfileMirrorDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPersistProfileMirror',
  ltmPersistProfileTimeout => '1.3.6.1.4.1.3375.2.2.6.8.1.2.1.6',
  ltmPersistProfileMaskType => '1.3.6.1.4.1.3375.2.2.6.8.1.2.1.7',
  ltmPersistProfileMask => '1.3.6.1.4.1.3375.2.2.6.8.1.2.1.8',
  ltmPersistProfileCookieMethod => '1.3.6.1.4.1.3375.2.2.6.8.1.2.1.9',
  ltmPersistProfileCookieMethodDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPersistProfileCookieMethod',
  ltmPersistProfileCookieName => '1.3.6.1.4.1.3375.2.2.6.8.1.2.1.10',
  ltmPersistProfileCookieExpiration => '1.3.6.1.4.1.3375.2.2.6.8.1.2.1.11',
  ltmPersistProfileCookieHashOffset => '1.3.6.1.4.1.3375.2.2.6.8.1.2.1.12',
  ltmPersistProfileCookieHashLength => '1.3.6.1.4.1.3375.2.2.6.8.1.2.1.13',
  ltmPersistProfileMsrdpNoSessionDir => '1.3.6.1.4.1.3375.2.2.6.8.1.2.1.14',
  ltmPersistProfileMsrdpNoSessionDirDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPersistProfileMsrdpNoSessionDir',
  ltmPersistProfileMapProxies => '1.3.6.1.4.1.3375.2.2.6.8.1.2.1.15',
  ltmPersistProfileMapProxiesDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPersistProfileMapProxies',
  ltmPersistProfileAcrossServices => '1.3.6.1.4.1.3375.2.2.6.8.1.2.1.16',
  ltmPersistProfileAcrossServicesDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPersistProfileAcrossServices',
  ltmPersistProfileAcrossVirtuals => '1.3.6.1.4.1.3375.2.2.6.8.1.2.1.17',
  ltmPersistProfileAcrossVirtualsDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPersistProfileAcrossVirtuals',
  ltmPersistProfileAcrossPools => '1.3.6.1.4.1.3375.2.2.6.8.1.2.1.18',
  ltmPersistProfileAcrossPoolsDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPersistProfileAcrossPools',
  ltmPersistProfileUieRule => '1.3.6.1.4.1.3375.2.2.6.8.1.2.1.19',
  ltmPersistProfileSipInfo => '1.3.6.1.4.1.3375.2.2.6.8.1.2.1.20',
  ltmStream => '1.3.6.1.4.1.3375.2.2.6.9',
  ltmStreamProfile => '1.3.6.1.4.1.3375.2.2.6.9.1',
  ltmStreamProfileNumber => '1.3.6.1.4.1.3375.2.2.6.9.1.1',
  ltmStreamProfileTable => '1.3.6.1.4.1.3375.2.2.6.9.1.2',
  ltmStreamProfileEntry => '1.3.6.1.4.1.3375.2.2.6.9.1.2.1',
  ltmStreamProfileName => '1.3.6.1.4.1.3375.2.2.6.9.1.2.1.1',
  ltmStreamProfileConfigSource => '1.3.6.1.4.1.3375.2.2.6.9.1.2.1.2',
  ltmStreamProfileConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmStreamProfileConfigSource',
  ltmStreamProfileDefaultName => '1.3.6.1.4.1.3375.2.2.6.9.1.2.1.3',
  ltmStreamProfileSource => '1.3.6.1.4.1.3375.2.2.6.9.1.2.1.4',
  ltmStreamProfileTarget => '1.3.6.1.4.1.3375.2.2.6.9.1.2.1.5',
  ltmStreamProfileStat => '1.3.6.1.4.1.3375.2.2.6.9.2',
  ltmStreamProfileStatResetStats => '1.3.6.1.4.1.3375.2.2.6.9.2.1',
  ltmStreamProfileStatNumber => '1.3.6.1.4.1.3375.2.2.6.9.2.2',
  ltmStreamProfileStatTable => '1.3.6.1.4.1.3375.2.2.6.9.2.3',
  ltmStreamProfileStatEntry => '1.3.6.1.4.1.3375.2.2.6.9.2.3.1',
  ltmStreamProfileStatName => '1.3.6.1.4.1.3375.2.2.6.9.2.3.1.1',
  ltmStreamProfileStatReplaces => '1.3.6.1.4.1.3375.2.2.6.9.2.3.1.2',
  ltmTcp => '1.3.6.1.4.1.3375.2.2.6.10',
  ltmTcpProfile => '1.3.6.1.4.1.3375.2.2.6.10.1',
  ltmTcpProfileNumber => '1.3.6.1.4.1.3375.2.2.6.10.1.1',
  ltmTcpProfileTable => '1.3.6.1.4.1.3375.2.2.6.10.1.2',
  ltmTcpProfileEntry => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1',
  ltmTcpProfileName => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.1',
  ltmTcpProfileConfigSource => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.2',
  ltmTcpProfileConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileConfigSource',
  ltmTcpProfileDefaultName => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.3',
  ltmTcpProfileResetOnTimeout => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.4',
  ltmTcpProfileResetOnTimeoutDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileResetOnTimeout',
  ltmTcpProfileTimeWaitRecycle => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.5',
  ltmTcpProfileTimeWaitRecycleDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileTimeWaitRecycle',
  ltmTcpProfileDelayedAcks => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.6',
  ltmTcpProfileDelayedAcksDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileDelayedAcks',
  ltmTcpProfileProxyMss => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.7',
  ltmTcpProfileProxyMssDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileProxyMss',
  ltmTcpProfileProxyOptions => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.8',
  ltmTcpProfileProxyOptionsDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileProxyOptions',
  ltmTcpProfileProxyBufferLow => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.9',
  ltmTcpProfileProxyBufferHigh => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.10',
  ltmTcpProfileIdleTimeout => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.11',
  ltmTcpProfileTimeWaitTimeout => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.12',
  ltmTcpProfileFinWaitTimeout => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.13',
  ltmTcpProfileCloseWaitTimeout => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.14',
  ltmTcpProfileSndbuf => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.15',
  ltmTcpProfileRcvwnd => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.16',
  ltmTcpProfileKeepAliveInterval => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.17',
  ltmTcpProfileSynMaxrtx => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.18',
  ltmTcpProfileMaxrtx => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.19',
  ltmTcpProfileIpTosToClient => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.20',
  ltmTcpProfileLinkQosToClient => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.21',
  ltmTcpProfileDeferredAccept => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.22',
  ltmTcpProfileDeferredAcceptDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileDeferredAccept',
  ltmTcpProfileSelectiveAcks => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.23',
  ltmTcpProfileSelectiveAcksDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileSelectiveAcks',
  ltmTcpProfileEcn => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.24',
  ltmTcpProfileEcnDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileEcn',
  ltmTcpProfileLimitedTransmit => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.25',
  ltmTcpProfileLimitedTransmitDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileLimitedTransmit',
  ltmTcpProfileHighPerfTcpExt => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.26',
  ltmTcpProfileHighPerfTcpExtDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileHighPerfTcpExt',
  ltmTcpProfileSlowStart => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.27',
  ltmTcpProfileSlowStartDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileSlowStart',
  ltmTcpProfileBandwidthDelay => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.28',
  ltmTcpProfileBandwidthDelayDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileBandwidthDelay',
  ltmTcpProfileNagle => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.29',
  ltmTcpProfileNagleDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileNagle',
  ltmTcpProfileAckOnPush => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.30',
  ltmTcpProfileAckOnPushDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileAckOnPush',
  ltmTcpProfileMd5Sig => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.31',
  ltmTcpProfileMd5SigDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileMd5Sig',
  ltmTcpProfileMd5SigPass => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.32',
  ltmTcpProfileAbc => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.33',
  ltmTcpProfileAbcDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileAbc',
  ltmTcpProfileCongestionCtrl => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.34',
  ltmTcpProfileCongestionCtrlDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileCongestionCtrl',
  ltmTcpProfileDsack => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.35',
  ltmTcpProfileDsackDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileDsack',
  ltmTcpProfileCmetricsCache => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.36',
  ltmTcpProfileCmetricsCacheDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileCmetricsCache',
  ltmTcpProfileVerifiedAccept => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.37',
  ltmTcpProfileVerifiedAcceptDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileVerifiedAccept',
  ltmTcpProfilePktLossIgnoreRate => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.38',
  ltmTcpProfilePktLossIgnoreBurst => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.39',
  ltmTcpProfileZeroWindowTimeout => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.40',
  ltmTcpProfileInitCwnd => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.41',
  ltmTcpProfileInitRwnd => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.42',
  ltmTcpProfileDelayWindowControl => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.43',
  ltmTcpProfileDelayWindowControlDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileDelayWindowControl',
  ltmTcpProfileSynRtoBase => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.44',
  ltmTcpProfileTimestamps => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.45',
  ltmTcpProfileTimestampsDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileTimestamps',
  ltmTcpProfileMinRto => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.46',
  ltmTcpProfileMptcp => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.47',
  ltmTcpProfileMptcpDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileMptcp',
  ltmTcpProfileRatePace => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.48',
  ltmTcpProfileRatePaceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileRatePace',
  ltmTcpProfileMptcpCsum => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.49',
  ltmTcpProfileMptcpCsumDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileMptcpCsum',
  ltmTcpProfileMptcpCsumVerify => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.50',
  ltmTcpProfileMptcpCsumVerifyDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileMptcpCsumVerify',
  ltmTcpProfileMptcpDebug => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.51',
  ltmTcpProfileMptcpDebugDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileMptcpDebug',
  ltmTcpProfileMptcpFallback => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.52',
  ltmTcpProfileMptcpFallbackDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileMptcpFallback',
  ltmTcpProfileMptcpJoinmax => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.53',
  ltmTcpProfileMptcpNojoindssack => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.54',
  ltmTcpProfileMptcpNojoindssackDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileMptcpNojoindssack',
  ltmTcpProfileMptcpRtomax => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.55',
  ltmTcpProfileMptcpRxmitmin => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.56',
  ltmTcpProfileMptcpSubflowmax => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.57',
  ltmTcpProfileMptcpMakeafterbreak => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.58',
  ltmTcpProfileMptcpMakeafterbreakDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileMptcpMakeafterbreak',
  ltmTcpProfileMptcpTimeout => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.59',
  ltmTcpProfileMptcpFastjoin => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.60',
  ltmTcpProfileMptcpFastjoinDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileMptcpFastjoin',
  ltmTcpProfileEarlyRetransmit => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.61',
  ltmTcpProfileEarlyRetransmitDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileEarlyRetransmit',
  ltmTcpProfileTailLossProbe => '1.3.6.1.4.1.3375.2.2.6.10.1.2.1.62',
  ltmTcpProfileTailLossProbeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTcpProfileTailLossProbe',
  ltmTcpProfileStat => '1.3.6.1.4.1.3375.2.2.6.10.2',
  ltmTcpProfileStatResetStats => '1.3.6.1.4.1.3375.2.2.6.10.2.1',
  ltmTcpProfileStatNumber => '1.3.6.1.4.1.3375.2.2.6.10.2.2',
  ltmTcpProfileStatTable => '1.3.6.1.4.1.3375.2.2.6.10.2.3',
  ltmTcpProfileStatEntry => '1.3.6.1.4.1.3375.2.2.6.10.2.3.1',
  ltmTcpProfileStatName => '1.3.6.1.4.1.3375.2.2.6.10.2.3.1.1',
  ltmTcpProfileStatOpen => '1.3.6.1.4.1.3375.2.2.6.10.2.3.1.2',
  ltmTcpProfileStatCloseWait => '1.3.6.1.4.1.3375.2.2.6.10.2.3.1.3',
  ltmTcpProfileStatFinWait => '1.3.6.1.4.1.3375.2.2.6.10.2.3.1.4',
  ltmTcpProfileStatTimeWait => '1.3.6.1.4.1.3375.2.2.6.10.2.3.1.5',
  ltmTcpProfileStatAccepts => '1.3.6.1.4.1.3375.2.2.6.10.2.3.1.6',
  ltmTcpProfileStatAcceptfails => '1.3.6.1.4.1.3375.2.2.6.10.2.3.1.7',
  ltmTcpProfileStatConnects => '1.3.6.1.4.1.3375.2.2.6.10.2.3.1.8',
  ltmTcpProfileStatConnfails => '1.3.6.1.4.1.3375.2.2.6.10.2.3.1.9',
  ltmTcpProfileStatExpires => '1.3.6.1.4.1.3375.2.2.6.10.2.3.1.10',
  ltmTcpProfileStatAbandons => '1.3.6.1.4.1.3375.2.2.6.10.2.3.1.11',
  ltmTcpProfileStatRxrst => '1.3.6.1.4.1.3375.2.2.6.10.2.3.1.12',
  ltmTcpProfileStatRxbadsum => '1.3.6.1.4.1.3375.2.2.6.10.2.3.1.13',
  ltmTcpProfileStatRxbadseg => '1.3.6.1.4.1.3375.2.2.6.10.2.3.1.14',
  ltmTcpProfileStatRxooseg => '1.3.6.1.4.1.3375.2.2.6.10.2.3.1.15',
  ltmTcpProfileStatRxcookie => '1.3.6.1.4.1.3375.2.2.6.10.2.3.1.16',
  ltmTcpProfileStatRxbadcookie => '1.3.6.1.4.1.3375.2.2.6.10.2.3.1.17',
  ltmTcpProfileStatSyncacheover => '1.3.6.1.4.1.3375.2.2.6.10.2.3.1.18',
  ltmTcpProfileStatTxrexmits => '1.3.6.1.4.1.3375.2.2.6.10.2.3.1.19',
  ltmUdp => '1.3.6.1.4.1.3375.2.2.6.11',
  ltmUdpProfile => '1.3.6.1.4.1.3375.2.2.6.11.1',
  ltmUdpProfileNumber => '1.3.6.1.4.1.3375.2.2.6.11.1.1',
  ltmUdpProfileTable => '1.3.6.1.4.1.3375.2.2.6.11.1.2',
  ltmUdpProfileEntry => '1.3.6.1.4.1.3375.2.2.6.11.1.2.1',
  ltmUdpProfileName => '1.3.6.1.4.1.3375.2.2.6.11.1.2.1.1',
  ltmUdpProfileConfigSource => '1.3.6.1.4.1.3375.2.2.6.11.1.2.1.2',
  ltmUdpProfileConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmUdpProfileConfigSource',
  ltmUdpProfileDefaultName => '1.3.6.1.4.1.3375.2.2.6.11.1.2.1.3',
  ltmUdpProfileIdleTimeout => '1.3.6.1.4.1.3375.2.2.6.11.1.2.1.4',
  ltmUdpProfileIpTosToClient => '1.3.6.1.4.1.3375.2.2.6.11.1.2.1.5',
  ltmUdpProfileLinkQosToClient => '1.3.6.1.4.1.3375.2.2.6.11.1.2.1.6',
  ltmUdpProfileDatagramLb => '1.3.6.1.4.1.3375.2.2.6.11.1.2.1.7',
  ltmUdpProfileDatagramLbDefinition => 'F5-BIGIP-LOCAL-MIB::ltmUdpProfileDatagramLb',
  ltmUdpProfileAllowNoPayload => '1.3.6.1.4.1.3375.2.2.6.11.1.2.1.8',
  ltmUdpProfileAllowNoPayloadDefinition => 'F5-BIGIP-LOCAL-MIB::ltmUdpProfileAllowNoPayload',
  ltmUdpProfileStat => '1.3.6.1.4.1.3375.2.2.6.11.2',
  ltmUdpProfileStatResetStats => '1.3.6.1.4.1.3375.2.2.6.11.2.1',
  ltmUdpProfileStatNumber => '1.3.6.1.4.1.3375.2.2.6.11.2.2',
  ltmUdpProfileStatTable => '1.3.6.1.4.1.3375.2.2.6.11.2.3',
  ltmUdpProfileStatEntry => '1.3.6.1.4.1.3375.2.2.6.11.2.3.1',
  ltmUdpProfileStatName => '1.3.6.1.4.1.3375.2.2.6.11.2.3.1.1',
  ltmUdpProfileStatOpen => '1.3.6.1.4.1.3375.2.2.6.11.2.3.1.2',
  ltmUdpProfileStatAccepts => '1.3.6.1.4.1.3375.2.2.6.11.2.3.1.3',
  ltmUdpProfileStatAcceptfails => '1.3.6.1.4.1.3375.2.2.6.11.2.3.1.4',
  ltmUdpProfileStatConnects => '1.3.6.1.4.1.3375.2.2.6.11.2.3.1.5',
  ltmUdpProfileStatConnfails => '1.3.6.1.4.1.3375.2.2.6.11.2.3.1.6',
  ltmUdpProfileStatExpires => '1.3.6.1.4.1.3375.2.2.6.11.2.3.1.7',
  ltmUdpProfileStatRxdgram => '1.3.6.1.4.1.3375.2.2.6.11.2.3.1.8',
  ltmUdpProfileStatRxbaddgram => '1.3.6.1.4.1.3375.2.2.6.11.2.3.1.9',
  ltmUdpProfileStatRxunreach => '1.3.6.1.4.1.3375.2.2.6.11.2.3.1.10',
  ltmUdpProfileStatRxbadsum => '1.3.6.1.4.1.3375.2.2.6.11.2.3.1.11',
  ltmUdpProfileStatRxnosum => '1.3.6.1.4.1.3375.2.2.6.11.2.3.1.12',
  ltmUdpProfileStatTxdgram => '1.3.6.1.4.1.3375.2.2.6.11.2.3.1.13',
  ltmFastHttp => '1.3.6.1.4.1.3375.2.2.6.12',
  ltmFastHttpProfile => '1.3.6.1.4.1.3375.2.2.6.12.1',
  ltmFastHttpProfileNumber => '1.3.6.1.4.1.3375.2.2.6.12.1.1',
  ltmFastHttpProfileTable => '1.3.6.1.4.1.3375.2.2.6.12.1.2',
  ltmFastHttpProfileEntry => '1.3.6.1.4.1.3375.2.2.6.12.1.2.1',
  ltmFastHttpProfileName => '1.3.6.1.4.1.3375.2.2.6.12.1.2.1.1',
  ltmFastHttpProfileConfigSource => '1.3.6.1.4.1.3375.2.2.6.12.1.2.1.2',
  ltmFastHttpProfileConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFastHttpProfileConfigSource',
  ltmFastHttpProfileDefaultName => '1.3.6.1.4.1.3375.2.2.6.12.1.2.1.3',
  ltmFastHttpProfileResetOnTimeout => '1.3.6.1.4.1.3375.2.2.6.12.1.2.1.4',
  ltmFastHttpProfileResetOnTimeoutDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFastHttpProfileResetOnTimeout',
  ltmFastHttpProfileIdleTimeout => '1.3.6.1.4.1.3375.2.2.6.12.1.2.1.5',
  ltmFastHttpProfileMssOverride => '1.3.6.1.4.1.3375.2.2.6.12.1.2.1.6',
  ltmFastHttpProfileClientCloseTimeout => '1.3.6.1.4.1.3375.2.2.6.12.1.2.1.7',
  ltmFastHttpProfileServerCloseTimeout => '1.3.6.1.4.1.3375.2.2.6.12.1.2.1.8',
  ltmFastHttpProfileConnpoolMaxSize => '1.3.6.1.4.1.3375.2.2.6.12.1.2.1.9',
  ltmFastHttpProfileConnpoolMinSize => '1.3.6.1.4.1.3375.2.2.6.12.1.2.1.10',
  ltmFastHttpProfileConnpoolStep => '1.3.6.1.4.1.3375.2.2.6.12.1.2.1.11',
  ltmFastHttpProfileConnpoolMaxReuse => '1.3.6.1.4.1.3375.2.2.6.12.1.2.1.12',
  ltmFastHttpProfileConnpoolIdleTimeout => '1.3.6.1.4.1.3375.2.2.6.12.1.2.1.13',
  ltmFastHttpProfileMaxHeaderSize => '1.3.6.1.4.1.3375.2.2.6.12.1.2.1.14',
  ltmFastHttpProfileMaxRequests => '1.3.6.1.4.1.3375.2.2.6.12.1.2.1.15',
  ltmFastHttpProfileInsertXforwardedFor => '1.3.6.1.4.1.3375.2.2.6.12.1.2.1.16',
  ltmFastHttpProfileInsertXforwardedForDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFastHttpProfileInsertXforwardedFor',
  ltmFastHttpProfileHttp11CloseWorkarounds => '1.3.6.1.4.1.3375.2.2.6.12.1.2.1.17',
  ltmFastHttpProfileHttp11CloseWorkaroundsDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFastHttpProfileHttp11CloseWorkarounds',
  ltmFastHttpProfileHeaderInsert => '1.3.6.1.4.1.3375.2.2.6.12.1.2.1.18',
  ltmFastHttpProfileUncleanShutdown => '1.3.6.1.4.1.3375.2.2.6.12.1.2.1.19',
  ltmFastHttpProfileUncleanShutdownDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFastHttpProfileUncleanShutdown',
  ltmFastHttpProfileForceHttp10Response => '1.3.6.1.4.1.3375.2.2.6.12.1.2.1.20',
  ltmFastHttpProfileForceHttp10ResponseDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFastHttpProfileForceHttp10Response',
  ltmFastHttpProfileLayer7 => '1.3.6.1.4.1.3375.2.2.6.12.1.2.1.21',
  ltmFastHttpProfileLayer7Definition => 'F5-BIGIP-LOCAL-MIB::ltmFastHttpProfileLayer7',
  ltmFastHttpProfileConnpoolReplenish => '1.3.6.1.4.1.3375.2.2.6.12.1.2.1.22',
  ltmFastHttpProfileConnpoolReplenishDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFastHttpProfileConnpoolReplenish',
  ltmFastHttpProfileStat => '1.3.6.1.4.1.3375.2.2.6.12.2',
  ltmFastHttpProfileStatResetStats => '1.3.6.1.4.1.3375.2.2.6.12.2.1',
  ltmFastHttpProfileStatNumber => '1.3.6.1.4.1.3375.2.2.6.12.2.2',
  ltmFastHttpProfileStatTable => '1.3.6.1.4.1.3375.2.2.6.12.2.3',
  ltmFastHttpProfileStatEntry => '1.3.6.1.4.1.3375.2.2.6.12.2.3.1',
  ltmFastHttpProfileStatName => '1.3.6.1.4.1.3375.2.2.6.12.2.3.1.1',
  ltmFastHttpProfileStatClientSyns => '1.3.6.1.4.1.3375.2.2.6.12.2.3.1.2',
  ltmFastHttpProfileStatClientAccepts => '1.3.6.1.4.1.3375.2.2.6.12.2.3.1.3',
  ltmFastHttpProfileStatServerConnects => '1.3.6.1.4.1.3375.2.2.6.12.2.3.1.4',
  ltmFastHttpProfileStatConnpoolCurSize => '1.3.6.1.4.1.3375.2.2.6.12.2.3.1.5',
  ltmFastHttpProfileStatConnpoolMaxSize => '1.3.6.1.4.1.3375.2.2.6.12.2.3.1.6',
  ltmFastHttpProfileStatConnpoolReuses => '1.3.6.1.4.1.3375.2.2.6.12.2.3.1.7',
  ltmFastHttpProfileStatConnpoolExhausted => '1.3.6.1.4.1.3375.2.2.6.12.2.3.1.8',
  ltmFastHttpProfileStatNumberReqs => '1.3.6.1.4.1.3375.2.2.6.12.2.3.1.9',
  ltmFastHttpProfileStatUnbufferedReqs => '1.3.6.1.4.1.3375.2.2.6.12.2.3.1.10',
  ltmFastHttpProfileStatGetReqs => '1.3.6.1.4.1.3375.2.2.6.12.2.3.1.11',
  ltmFastHttpProfileStatPostReqs => '1.3.6.1.4.1.3375.2.2.6.12.2.3.1.12',
  ltmFastHttpProfileStatV9Reqs => '1.3.6.1.4.1.3375.2.2.6.12.2.3.1.13',
  ltmFastHttpProfileStatV10Reqs => '1.3.6.1.4.1.3375.2.2.6.12.2.3.1.14',
  ltmFastHttpProfileStatV11Reqs => '1.3.6.1.4.1.3375.2.2.6.12.2.3.1.15',
  ltmFastHttpProfileStatResp2xxCnt => '1.3.6.1.4.1.3375.2.2.6.12.2.3.1.16',
  ltmFastHttpProfileStatResp3xxCnt => '1.3.6.1.4.1.3375.2.2.6.12.2.3.1.17',
  ltmFastHttpProfileStatResp4xxCnt => '1.3.6.1.4.1.3375.2.2.6.12.2.3.1.18',
  ltmFastHttpProfileStatResp5xxCnt => '1.3.6.1.4.1.3375.2.2.6.12.2.3.1.19',
  ltmFastHttpProfileStatReqParseErrors => '1.3.6.1.4.1.3375.2.2.6.12.2.3.1.20',
  ltmFastHttpProfileStatRespParseErrors => '1.3.6.1.4.1.3375.2.2.6.12.2.3.1.21',
  ltmFastHttpProfileStatClientRxBad => '1.3.6.1.4.1.3375.2.2.6.12.2.3.1.22',
  ltmFastHttpProfileStatServerRxBad => '1.3.6.1.4.1.3375.2.2.6.12.2.3.1.23',
  ltmFastHttpProfileStatPipelinedReqs => '1.3.6.1.4.1.3375.2.2.6.12.2.3.1.24',
  ltmXml => '1.3.6.1.4.1.3375.2.2.6.13',
  ltmXmlProfile => '1.3.6.1.4.1.3375.2.2.6.13.1',
  ltmXmlProfileNumber => '1.3.6.1.4.1.3375.2.2.6.13.1.1',
  ltmXmlProfileTable => '1.3.6.1.4.1.3375.2.2.6.13.1.2',
  ltmXmlProfileEntry => '1.3.6.1.4.1.3375.2.2.6.13.1.2.1',
  ltmXmlProfileName => '1.3.6.1.4.1.3375.2.2.6.13.1.2.1.1',
  ltmXmlProfileConfigSource => '1.3.6.1.4.1.3375.2.2.6.13.1.2.1.2',
  ltmXmlProfileConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmXmlProfileConfigSource',
  ltmXmlProfileDefaultName => '1.3.6.1.4.1.3375.2.2.6.13.1.2.1.3',
  ltmXmlProfileAbortOnError => '1.3.6.1.4.1.3375.2.2.6.13.1.2.1.4',
  ltmXmlProfileAbortOnErrorDefinition => 'F5-BIGIP-LOCAL-MIB::ltmXmlProfileAbortOnError',
  ltmXmlProfileMaxBufferSize => '1.3.6.1.4.1.3375.2.2.6.13.1.2.1.5',
  ltmXmlProfileMultipleQueryMatches => '1.3.6.1.4.1.3375.2.2.6.13.1.2.1.6',
  ltmXmlProfileMultipleQueryMatchesDefinition => 'F5-BIGIP-LOCAL-MIB::ltmXmlProfileMultipleQueryMatches',
  ltmXmlProfileStat => '1.3.6.1.4.1.3375.2.2.6.13.2',
  ltmXmlProfileStatResetStats => '1.3.6.1.4.1.3375.2.2.6.13.2.1',
  ltmXmlProfileStatNumber => '1.3.6.1.4.1.3375.2.2.6.13.2.2',
  ltmXmlProfileStatTable => '1.3.6.1.4.1.3375.2.2.6.13.2.3',
  ltmXmlProfileStatEntry => '1.3.6.1.4.1.3375.2.2.6.13.2.3.1',
  ltmXmlProfileStatName => '1.3.6.1.4.1.3375.2.2.6.13.2.3.1.1',
  ltmXmlProfileStatNumErrors => '1.3.6.1.4.1.3375.2.2.6.13.2.3.1.2',
  ltmXmlProfileStatNumInspectedDocuments => '1.3.6.1.4.1.3375.2.2.6.13.2.3.1.3',
  ltmXmlProfileStatNumDocumentsWithOneMatch => '1.3.6.1.4.1.3375.2.2.6.13.2.3.1.4',
  ltmXmlProfileStatNumDocumentsWithTwoMatches => '1.3.6.1.4.1.3375.2.2.6.13.2.3.1.5',
  ltmXmlProfileStatNumDocumentsWithThreeMatches => '1.3.6.1.4.1.3375.2.2.6.13.2.3.1.6',
  ltmXmlProfileStatNumDocumentsWithNoMatches => '1.3.6.1.4.1.3375.2.2.6.13.2.3.1.7',
  ltmXmlProfileStatNumMalformedDocuments => '1.3.6.1.4.1.3375.2.2.6.13.2.3.1.8',
  ltmXmlProfileXpathQueries => '1.3.6.1.4.1.3375.2.2.6.13.3',
  ltmXmlProfileXpathQueriesNumber => '1.3.6.1.4.1.3375.2.2.6.13.3.1',
  ltmXmlProfileXpathQueriesTable => '1.3.6.1.4.1.3375.2.2.6.13.3.2',
  ltmXmlProfileXpathQueriesEntry => '1.3.6.1.4.1.3375.2.2.6.13.3.2.1',
  ltmXmlProfileXpathQueriesName => '1.3.6.1.4.1.3375.2.2.6.13.3.2.1.1',
  ltmXmlProfileXpathQueriesIndex => '1.3.6.1.4.1.3375.2.2.6.13.3.2.1.2',
  ltmXmlProfileXpathQueriesString => '1.3.6.1.4.1.3375.2.2.6.13.3.2.1.3',
  ltmXmlProfileNamespaceMappings => '1.3.6.1.4.1.3375.2.2.6.13.4',
  ltmXmlProfileNamespaceMappingsNumber => '1.3.6.1.4.1.3375.2.2.6.13.4.1',
  ltmXmlProfileNamespaceMappingsTable => '1.3.6.1.4.1.3375.2.2.6.13.4.2',
  ltmXmlProfileNamespaceMappingsEntry => '1.3.6.1.4.1.3375.2.2.6.13.4.2.1',
  ltmXmlProfileNamespaceMappingsName => '1.3.6.1.4.1.3375.2.2.6.13.4.2.1.1',
  ltmXmlProfileNamespaceMappingsIndex => '1.3.6.1.4.1.3375.2.2.6.13.4.2.1.2',
  ltmXmlProfileNamespaceMappingsMappingPrefix => '1.3.6.1.4.1.3375.2.2.6.13.4.2.1.3',
  ltmXmlProfileNamespaceMappingsMappingNamespace => '1.3.6.1.4.1.3375.2.2.6.13.4.2.1.4',
  ltmDns => '1.3.6.1.4.1.3375.2.2.6.14',
  ltmDnsProfile => '1.3.6.1.4.1.3375.2.2.6.14.1',
  ltmDnsProfileNumber => '1.3.6.1.4.1.3375.2.2.6.14.1.1',
  ltmDnsProfileTable => '1.3.6.1.4.1.3375.2.2.6.14.1.2',
  ltmDnsProfileEntry => '1.3.6.1.4.1.3375.2.2.6.14.1.2.1',
  ltmDnsProfileName => '1.3.6.1.4.1.3375.2.2.6.14.1.2.1.1',
  ltmDnsProfileConfigSource => '1.3.6.1.4.1.3375.2.2.6.14.1.2.1.2',
  ltmDnsProfileConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDnsProfileConfigSource',
  ltmDnsProfileDefaultName => '1.3.6.1.4.1.3375.2.2.6.14.1.2.1.3',
  ltmDnsProfileGtmEnabled => '1.3.6.1.4.1.3375.2.2.6.14.1.2.1.4',
  ltmDnsProfileGtmEnabledDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDnsProfileGtmEnabled',
  ltmDnsProfileDns64Mode => '1.3.6.1.4.1.3375.2.2.6.14.1.2.1.5',
  ltmDnsProfileDns64ModeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDnsProfileDns64Mode',
  ltmDnsProfileDns64PrefixType => '1.3.6.1.4.1.3375.2.2.6.14.1.2.1.6',
  ltmDnsProfileDns64Prefix => '1.3.6.1.4.1.3375.2.2.6.14.1.2.1.7',
  ltmDnsProfileDns64AdditionalRewrite => '1.3.6.1.4.1.3375.2.2.6.14.1.2.1.8',
  ltmDnsProfileDns64AdditionalRewriteDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDnsProfileDns64AdditionalRewrite',
  ltmDnsProfileDnsLastAction => '1.3.6.1.4.1.3375.2.2.6.14.1.2.1.9',
  ltmDnsProfileDnsLastActionDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDnsProfileDnsLastAction',
  ltmDnsProfileUseLocalBind => '1.3.6.1.4.1.3375.2.2.6.14.1.2.1.10',
  ltmDnsProfileUseLocalBindDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDnsProfileUseLocalBind',
  ltmDnsProfileDnsExpressEnabled => '1.3.6.1.4.1.3375.2.2.6.14.1.2.1.11',
  ltmDnsProfileDnsExpressEnabledDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDnsProfileDnsExpressEnabled',
  ltmDnsProfileDnssecEnabled => '1.3.6.1.4.1.3375.2.2.6.14.1.2.1.12',
  ltmDnsProfileDnssecEnabledDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDnsProfileDnssecEnabled',
  ltmDnsProfileCacheEnabled => '1.3.6.1.4.1.3375.2.2.6.14.1.2.1.13',
  ltmDnsProfileCacheEnabledDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDnsProfileCacheEnabled',
  ltmDnsProfileDnsCache => '1.3.6.1.4.1.3375.2.2.6.14.1.2.1.14',
  ltmDnsProfileProcessRd => '1.3.6.1.4.1.3375.2.2.6.14.1.2.1.15',
  ltmDnsProfileProcessRdDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDnsProfileProcessRd',
  ltmDnsProfileAvrDnsStatSampleRate => '1.3.6.1.4.1.3375.2.2.6.14.1.2.1.16',
  ltmDnsProfileSecurity => '1.3.6.1.4.1.3375.2.2.6.14.1.2.1.17',
  ltmDnsProfileSecurityEnabled => '1.3.6.1.4.1.3375.2.2.6.14.1.2.1.18',
  ltmDnsProfileSecurityEnabledDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDnsProfileSecurityEnabled',
  ltmDnsProfileLoggingProfile => '1.3.6.1.4.1.3375.2.2.6.14.1.2.1.19',
  ltmDnsProfileLoggingEnabled => '1.3.6.1.4.1.3375.2.2.6.14.1.2.1.20',
  ltmDnsProfileLoggingEnabledDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDnsProfileLoggingEnabled',
  ltmDnsProfileFastDnsEnabled => '1.3.6.1.4.1.3375.2.2.6.14.1.2.1.21',
  ltmDnsProfileFastDnsEnabledDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDnsProfileFastDnsEnabled',
  ltmDnsProfileStat => '1.3.6.1.4.1.3375.2.2.6.14.2',
  ltmDnsProfileStatResetStats => '1.3.6.1.4.1.3375.2.2.6.14.2.1',
  ltmDnsProfileStatNumber => '1.3.6.1.4.1.3375.2.2.6.14.2.2',
  ltmDnsProfileStatTable => '1.3.6.1.4.1.3375.2.2.6.14.2.3',
  ltmDnsProfileStatEntry => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1',
  ltmDnsProfileStatName => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.1',
  ltmDnsProfileStatQueries => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.2',
  ltmDnsProfileStatResponses => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.3',
  ltmDnsProfileStatResponsesPerSec => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.4',
  ltmDnsProfileStatToGtm => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.5',
  ltmDnsProfileStatDnsExpressReqs => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.6',
  ltmDnsProfileStatDnsExpressNotifies => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.7',
  ltmDnsProfileStatToCache => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.8',
  ltmDnsProfileStatToDns => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.9',
  ltmDnsProfileStatDns64Reqs => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.10',
  ltmDnsProfileStatDns64Rewrites => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.11',
  ltmDnsProfileStatDns64Failures => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.12',
  ltmDnsProfileStatHints => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.13',
  ltmDnsProfileStatRejects => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.14',
  ltmDnsProfileStatNoErrors => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.15',
  ltmDnsProfileStatDrops => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.16',
  ltmDnsProfileStatMalformed => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.17',
  ltmDnsProfileStatTclSuspends => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.18',
  ltmDnsProfileStatRecursionDesired => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.19',
  ltmDnsProfileStatCheckingDisabled => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.20',
  ltmDnsProfileStatEdns0 => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.21',
  ltmDnsProfileStatOpcodeQuery => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.22',
  ltmDnsProfileStatOpcodeNotify => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.23',
  ltmDnsProfileStatOpcodeUpdate => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.24',
  ltmDnsProfileStatZoneIxfr => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.25',
  ltmDnsProfileStatZoneAxfr => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.26',
  ltmDnsProfileStatAuthoritativeAnswer => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.27',
  ltmDnsProfileStatRecursionAvailable => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.28',
  ltmDnsProfileStatAuthenticatedData => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.29',
  ltmDnsProfileStatTruncated => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.30',
  ltmDnsProfileStatRcodeNoerror => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.31',
  ltmDnsProfileStatRcodeNxdomain => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.32',
  ltmDnsProfileStatRcodeServfail => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.33',
  ltmDnsProfileStatRcodeRefused => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.34',
  ltmDnsProfileStatMalicious => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.35',
  ltmDnsProfileStatAReqs => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.36',
  ltmDnsProfileStatAaaaReqs => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.37',
  ltmDnsProfileStatAnyReqs => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.38',
  ltmDnsProfileStatCnameReqs => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.39',
  ltmDnsProfileStatMxReqs => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.40',
  ltmDnsProfileStatNsReqs => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.41',
  ltmDnsProfileStatPtrReqs => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.42',
  ltmDnsProfileStatSoaReqs => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.43',
  ltmDnsProfileStatSrvReqs => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.44',
  ltmDnsProfileStatTxtReqs => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.45',
  ltmDnsProfileStatOtherReqs => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.46',
  ltmDnsProfileStatDnsEffectiveRateLimit => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.47',
  ltmDnsProfileStatDnsConfiguredObjects => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.48',
  ltmDnsProfileStatDnsRateRejectedRequests => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.49',
  ltmDnsProfileStatGtmEffectiveRateLimit => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.50',
  ltmDnsProfileStatGtmConfiguredObjects => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.51',
  ltmDnsProfileStatGtmRateRejectedRequests => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.52',
  ltmDnsProfileStatGtmRewrites => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.53',
  ltmDnsProfileStatOpcodeOther => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.54',
  ltmDnsProfileStatFastDnsQueries => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.55',
  ltmDnsProfileStatFastDnsResponses => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.56',
  ltmDnsProfileStatFastDnsAllowed => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.57',
  ltmDnsProfileStatFastDnsDrops => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.58',
  ltmDnsProfileStatFastDnsRespTc => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.59',
  ltmDnsProfileStatFastDnsRespNx => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.60',
  ltmDnsProfileStatFastDnsRespNe => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.61',
  ltmDnsProfileStatFastDnsRespRf => '1.3.6.1.4.1.3375.2.2.6.14.2.3.1.62',
  ltmHttpClass => '1.3.6.1.4.1.3375.2.2.6.15',
  ltmHttpClassProfile => '1.3.6.1.4.1.3375.2.2.6.15.1',
  ltmHttpClassNumber => '1.3.6.1.4.1.3375.2.2.6.15.1.1',
  ltmHttpClassTable => '1.3.6.1.4.1.3375.2.2.6.15.1.2',
  ltmHttpClassEntry => '1.3.6.1.4.1.3375.2.2.6.15.1.2.1',
  ltmHttpClassName => '1.3.6.1.4.1.3375.2.2.6.15.1.2.1.1',
  ltmHttpClassConfigSource => '1.3.6.1.4.1.3375.2.2.6.15.1.2.1.2',
  ltmHttpClassConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpClassConfigSource',
  ltmHttpClassDefaultName => '1.3.6.1.4.1.3375.2.2.6.15.1.2.1.3',
  ltmHttpClassPoolName => '1.3.6.1.4.1.3375.2.2.6.15.1.2.1.4',
  ltmHttpClassAsmEnabled => '1.3.6.1.4.1.3375.2.2.6.15.1.2.1.5',
  ltmHttpClassAsmEnabledDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpClassAsmEnabled',
  ltmHttpClassWaEnabled => '1.3.6.1.4.1.3375.2.2.6.15.1.2.1.6',
  ltmHttpClassWaEnabledDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpClassWaEnabled',
  ltmHttpClassRedirectLocation => '1.3.6.1.4.1.3375.2.2.6.15.1.2.1.7',
  ltmHttpClassUrlRewrite => '1.3.6.1.4.1.3375.2.2.6.15.1.2.1.8',
  ltmHttpClassProfileHost => '1.3.6.1.4.1.3375.2.2.6.15.2',
  ltmHttpClassHostNumber => '1.3.6.1.4.1.3375.2.2.6.15.2.1',
  ltmHttpClassHostTable => '1.3.6.1.4.1.3375.2.2.6.15.2.2',
  ltmHttpClassHostEntry => '1.3.6.1.4.1.3375.2.2.6.15.2.2.1',
  ltmHttpClassHostName => '1.3.6.1.4.1.3375.2.2.6.15.2.2.1.1',
  ltmHttpClassHostIndex => '1.3.6.1.4.1.3375.2.2.6.15.2.2.1.2',
  ltmHttpClassHostString => '1.3.6.1.4.1.3375.2.2.6.15.2.2.1.3',
  ltmHttpClassProfileUri => '1.3.6.1.4.1.3375.2.2.6.15.3',
  ltmHttpClassUriNumber => '1.3.6.1.4.1.3375.2.2.6.15.3.1',
  ltmHttpClassUriTable => '1.3.6.1.4.1.3375.2.2.6.15.3.2',
  ltmHttpClassUriEntry => '1.3.6.1.4.1.3375.2.2.6.15.3.2.1',
  ltmHttpClassUriName => '1.3.6.1.4.1.3375.2.2.6.15.3.2.1.1',
  ltmHttpClassUriIndex => '1.3.6.1.4.1.3375.2.2.6.15.3.2.1.2',
  ltmHttpClassUriString => '1.3.6.1.4.1.3375.2.2.6.15.3.2.1.3',
  ltmHttpClassProfileHead => '1.3.6.1.4.1.3375.2.2.6.15.4',
  ltmHttpClassHeadNumber => '1.3.6.1.4.1.3375.2.2.6.15.4.1',
  ltmHttpClassHeadTable => '1.3.6.1.4.1.3375.2.2.6.15.4.2',
  ltmHttpClassHeadEntry => '1.3.6.1.4.1.3375.2.2.6.15.4.2.1',
  ltmHttpClassHeadName => '1.3.6.1.4.1.3375.2.2.6.15.4.2.1.1',
  ltmHttpClassHeadIndex => '1.3.6.1.4.1.3375.2.2.6.15.4.2.1.2',
  ltmHttpClassHeadString => '1.3.6.1.4.1.3375.2.2.6.15.4.2.1.3',
  ltmHttpClassProfileCook => '1.3.6.1.4.1.3375.2.2.6.15.5',
  ltmHttpClassCookNumber => '1.3.6.1.4.1.3375.2.2.6.15.5.1',
  ltmHttpClassCookTable => '1.3.6.1.4.1.3375.2.2.6.15.5.2',
  ltmHttpClassCookEntry => '1.3.6.1.4.1.3375.2.2.6.15.5.2.1',
  ltmHttpClassCookName => '1.3.6.1.4.1.3375.2.2.6.15.5.2.1.1',
  ltmHttpClassCookIndex => '1.3.6.1.4.1.3375.2.2.6.15.5.2.1.2',
  ltmHttpClassCookString => '1.3.6.1.4.1.3375.2.2.6.15.5.2.1.3',
  ltmHttpClassProfileStat => '1.3.6.1.4.1.3375.2.2.6.15.6',
  ltmHttpClassStatResetStats => '1.3.6.1.4.1.3375.2.2.6.15.6.1',
  ltmHttpClassStatNumber => '1.3.6.1.4.1.3375.2.2.6.15.6.2',
  ltmHttpClassStatTable => '1.3.6.1.4.1.3375.2.2.6.15.6.3',
  ltmHttpClassStatEntry => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1',
  ltmHttpClassStatName => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.1',
  ltmHttpClassStatCookiePersistInserts => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.2',
  ltmHttpClassStatResp2xxCnt => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.3',
  ltmHttpClassStatResp3xxCnt => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.4',
  ltmHttpClassStatResp4xxCnt => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.5',
  ltmHttpClassStatResp5xxCnt => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.6',
  ltmHttpClassStatNumberReqs => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.7',
  ltmHttpClassStatGetReqs => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.8',
  ltmHttpClassStatPostReqs => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.9',
  ltmHttpClassStatV9Reqs => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.10',
  ltmHttpClassStatV10Reqs => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.11',
  ltmHttpClassStatV11Reqs => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.12',
  ltmHttpClassStatV9Resp => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.13',
  ltmHttpClassStatV10Resp => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.14',
  ltmHttpClassStatV11Resp => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.15',
  ltmHttpClassStatMaxKeepaliveReq => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.16',
  ltmHttpClassStatRespBucket1k => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.17',
  ltmHttpClassStatRespBucket4k => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.18',
  ltmHttpClassStatRespBucket16k => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.19',
  ltmHttpClassStatRespBucket32k => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.20',
  ltmHttpClassStatRespBucket64k => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.21',
  ltmHttpClassStatPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.22',
  ltmHttpClassStatPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.23',
  ltmHttpClassStatNullCompressBytes => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.24',
  ltmHttpClassStatHtmlPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.25',
  ltmHttpClassStatHtmlPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.26',
  ltmHttpClassStatCssPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.27',
  ltmHttpClassStatCssPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.28',
  ltmHttpClassStatJsPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.29',
  ltmHttpClassStatJsPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.30',
  ltmHttpClassStatXmlPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.31',
  ltmHttpClassStatXmlPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.32',
  ltmHttpClassStatSgmlPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.33',
  ltmHttpClassStatSgmlPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.34',
  ltmHttpClassStatPlainPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.35',
  ltmHttpClassStatPlainPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.36',
  ltmHttpClassStatOctetPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.37',
  ltmHttpClassStatOctetPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.38',
  ltmHttpClassStatImagePrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.39',
  ltmHttpClassStatImagePostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.40',
  ltmHttpClassStatVideoPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.41',
  ltmHttpClassStatVideoPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.42',
  ltmHttpClassStatAudioPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.43',
  ltmHttpClassStatAudioPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.44',
  ltmHttpClassStatOtherPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.45',
  ltmHttpClassStatOtherPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.46',
  ltmHttpClassStatRamcacheHits => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.47',
  ltmHttpClassStatRamcacheMisses => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.48',
  ltmHttpClassStatRamcacheMissesAll => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.49',
  ltmHttpClassStatRamcacheHitBytes => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.50',
  ltmHttpClassStatRamcacheMissBytes => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.51',
  ltmHttpClassStatRamcacheMissBytesAll => '1.3.6.1.4.1.3375.2.2.6.15.6.3.1.52',
  ltmIiop => '1.3.6.1.4.1.3375.2.2.6.16',
  ltmIiopProfile => '1.3.6.1.4.1.3375.2.2.6.16.1',
  ltmIiopProfileNumber => '1.3.6.1.4.1.3375.2.2.6.16.1.1',
  ltmIiopProfileTable => '1.3.6.1.4.1.3375.2.2.6.16.1.2',
  ltmIiopProfileEntry => '1.3.6.1.4.1.3375.2.2.6.16.1.2.1',
  ltmIiopProfileName => '1.3.6.1.4.1.3375.2.2.6.16.1.2.1.1',
  ltmIiopProfileConfigSource => '1.3.6.1.4.1.3375.2.2.6.16.1.2.1.2',
  ltmIiopProfileConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmIiopProfileConfigSource',
  ltmIiopProfileDefaultName => '1.3.6.1.4.1.3375.2.2.6.16.1.2.1.3',
  ltmIiopProfilePersistRequestId => '1.3.6.1.4.1.3375.2.2.6.16.1.2.1.4',
  ltmIiopProfilePersistRequestIdDefinition => 'F5-BIGIP-LOCAL-MIB::ltmIiopProfilePersistRequestId',
  ltmIiopProfilePersistObjectKey => '1.3.6.1.4.1.3375.2.2.6.16.1.2.1.5',
  ltmIiopProfilePersistObjectKeyDefinition => 'F5-BIGIP-LOCAL-MIB::ltmIiopProfilePersistObjectKey',
  ltmIiopProfileAbortOnTimeout => '1.3.6.1.4.1.3375.2.2.6.16.1.2.1.6',
  ltmIiopProfileAbortOnTimeoutDefinition => 'F5-BIGIP-LOCAL-MIB::ltmIiopProfileAbortOnTimeout',
  ltmIiopProfileTimeout => '1.3.6.1.4.1.3375.2.2.6.16.1.2.1.7',
  ltmIiopProfileStat => '1.3.6.1.4.1.3375.2.2.6.16.2',
  ltmIiopProfileStatResetStats => '1.3.6.1.4.1.3375.2.2.6.16.2.1',
  ltmIiopProfileStatNumber => '1.3.6.1.4.1.3375.2.2.6.16.2.2',
  ltmIiopProfileStatTable => '1.3.6.1.4.1.3375.2.2.6.16.2.3',
  ltmIiopProfileStatEntry => '1.3.6.1.4.1.3375.2.2.6.16.2.3.1',
  ltmIiopProfileStatName => '1.3.6.1.4.1.3375.2.2.6.16.2.3.1.1',
  ltmIiopProfileStatNumRequests => '1.3.6.1.4.1.3375.2.2.6.16.2.3.1.2',
  ltmIiopProfileStatNumResponses => '1.3.6.1.4.1.3375.2.2.6.16.2.3.1.3',
  ltmIiopProfileStatNumCancels => '1.3.6.1.4.1.3375.2.2.6.16.2.3.1.4',
  ltmIiopProfileStatNumErrors => '1.3.6.1.4.1.3375.2.2.6.16.2.3.1.5',
  ltmIiopProfileStatNumFragments => '1.3.6.1.4.1.3375.2.2.6.16.2.3.1.6',
  ltmRtsp => '1.3.6.1.4.1.3375.2.2.6.17',
  ltmRtspProfile => '1.3.6.1.4.1.3375.2.2.6.17.1',
  ltmRtspProfileNumber => '1.3.6.1.4.1.3375.2.2.6.17.1.1',
  ltmRtspProfileTable => '1.3.6.1.4.1.3375.2.2.6.17.1.2',
  ltmRtspProfileEntry => '1.3.6.1.4.1.3375.2.2.6.17.1.2.1',
  ltmRtspProfileName => '1.3.6.1.4.1.3375.2.2.6.17.1.2.1.1',
  ltmRtspProfileConfigSource => '1.3.6.1.4.1.3375.2.2.6.17.1.2.1.2',
  ltmRtspProfileConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmRtspProfileConfigSource',
  ltmRtspProfileDefaultName => '1.3.6.1.4.1.3375.2.2.6.17.1.2.1.3',
  ltmRtspProfileIdleTimeout => '1.3.6.1.4.1.3375.2.2.6.17.1.2.1.4',
  ltmRtspProfileMaxHeaderSize => '1.3.6.1.4.1.3375.2.2.6.17.1.2.1.5',
  ltmRtspProfileMaxQueuedData => '1.3.6.1.4.1.3375.2.2.6.17.1.2.1.6',
  ltmRtspProfileUnicastRedirect => '1.3.6.1.4.1.3375.2.2.6.17.1.2.1.7',
  ltmRtspProfileUnicastRedirectDefinition => 'F5-BIGIP-LOCAL-MIB::ltmRtspProfileUnicastRedirect',
  ltmRtspProfileMulticastRedirect => '1.3.6.1.4.1.3375.2.2.6.17.1.2.1.8',
  ltmRtspProfileMulticastRedirectDefinition => 'F5-BIGIP-LOCAL-MIB::ltmRtspProfileMulticastRedirect',
  ltmRtspProfileSessionReconnect => '1.3.6.1.4.1.3375.2.2.6.17.1.2.1.9',
  ltmRtspProfileSessionReconnectDefinition => 'F5-BIGIP-LOCAL-MIB::ltmRtspProfileSessionReconnect',
  ltmRtspProfileRealHttpPersistence => '1.3.6.1.4.1.3375.2.2.6.17.1.2.1.10',
  ltmRtspProfileRealHttpPersistenceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmRtspProfileRealHttpPersistence',
  ltmRtspProfileProxy => '1.3.6.1.4.1.3375.2.2.6.17.1.2.1.11',
  ltmRtspProfileProxyDefinition => 'F5-BIGIP-LOCAL-MIB::ltmRtspProfileProxy',
  ltmRtspProfileProxyHeader => '1.3.6.1.4.1.3375.2.2.6.17.1.2.1.12',
  ltmRtspProfileRtpPort => '1.3.6.1.4.1.3375.2.2.6.17.1.2.1.13',
  ltmRtspProfileRtcpPort => '1.3.6.1.4.1.3375.2.2.6.17.1.2.1.14',
  ltmRtspProfileLogPublisher => '1.3.6.1.4.1.3375.2.2.6.17.1.2.1.15',
  ltmRtspProfileLogProfile => '1.3.6.1.4.1.3375.2.2.6.17.1.2.1.16',
  ltmRtspProfileStat => '1.3.6.1.4.1.3375.2.2.6.17.2',
  ltmRtspProfileStatResetStats => '1.3.6.1.4.1.3375.2.2.6.17.2.1',
  ltmRtspProfileStatNumber => '1.3.6.1.4.1.3375.2.2.6.17.2.2',
  ltmRtspProfileStatTable => '1.3.6.1.4.1.3375.2.2.6.17.2.3',
  ltmRtspProfileStatEntry => '1.3.6.1.4.1.3375.2.2.6.17.2.3.1',
  ltmRtspProfileStatName => '1.3.6.1.4.1.3375.2.2.6.17.2.3.1.1',
  ltmRtspProfileStatNumRequests => '1.3.6.1.4.1.3375.2.2.6.17.2.3.1.2',
  ltmRtspProfileStatNumResponses => '1.3.6.1.4.1.3375.2.2.6.17.2.3.1.3',
  ltmRtspProfileStatNumErrors => '1.3.6.1.4.1.3375.2.2.6.17.2.3.1.4',
  ltmRtspProfileStatNumInterleaved => '1.3.6.1.4.1.3375.2.2.6.17.2.3.1.5',
  ltmSctp => '1.3.6.1.4.1.3375.2.2.6.18',
  ltmSctpProfile => '1.3.6.1.4.1.3375.2.2.6.18.1',
  ltmSctpProfileNumber => '1.3.6.1.4.1.3375.2.2.6.18.1.1',
  ltmSctpProfileTable => '1.3.6.1.4.1.3375.2.2.6.18.1.2',
  ltmSctpProfileEntry => '1.3.6.1.4.1.3375.2.2.6.18.1.2.1',
  ltmSctpProfileName => '1.3.6.1.4.1.3375.2.2.6.18.1.2.1.1',
  ltmSctpProfileConfigSource => '1.3.6.1.4.1.3375.2.2.6.18.1.2.1.2',
  ltmSctpProfileConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmSctpProfileConfigSource',
  ltmSctpProfileDefaultName => '1.3.6.1.4.1.3375.2.2.6.18.1.2.1.3',
  ltmSctpProfileRcvOrdered => '1.3.6.1.4.1.3375.2.2.6.18.1.2.1.4',
  ltmSctpProfileRcvOrderedDefinition => 'F5-BIGIP-LOCAL-MIB::ltmSctpProfileRcvOrdered',
  ltmSctpProfileSndPartial => '1.3.6.1.4.1.3375.2.2.6.18.1.2.1.5',
  ltmSctpProfileSndPartialDefinition => 'F5-BIGIP-LOCAL-MIB::ltmSctpProfileSndPartial',
  ltmSctpProfileTcpShutdown => '1.3.6.1.4.1.3375.2.2.6.18.1.2.1.6',
  ltmSctpProfileTcpShutdownDefinition => 'F5-BIGIP-LOCAL-MIB::ltmSctpProfileTcpShutdown',
  ltmSctpProfileResetOnTimeout => '1.3.6.1.4.1.3375.2.2.6.18.1.2.1.7',
  ltmSctpProfileResetOnTimeoutDefinition => 'F5-BIGIP-LOCAL-MIB::ltmSctpProfileResetOnTimeout',
  ltmSctpProfileOutStreams => '1.3.6.1.4.1.3375.2.2.6.18.1.2.1.8',
  ltmSctpProfileInStreams => '1.3.6.1.4.1.3375.2.2.6.18.1.2.1.9',
  ltmSctpProfileSndbuf => '1.3.6.1.4.1.3375.2.2.6.18.1.2.1.10',
  ltmSctpProfileRcvwnd => '1.3.6.1.4.1.3375.2.2.6.18.1.2.1.11',
  ltmSctpProfileTxChunks => '1.3.6.1.4.1.3375.2.2.6.18.1.2.1.12',
  ltmSctpProfileRxChunks => '1.3.6.1.4.1.3375.2.2.6.18.1.2.1.13',
  ltmSctpProfileCookieExpiration => '1.3.6.1.4.1.3375.2.2.6.18.1.2.1.14',
  ltmSctpProfileInitMaxrtx => '1.3.6.1.4.1.3375.2.2.6.18.1.2.1.15',
  ltmSctpProfileAssocMaxrtx => '1.3.6.1.4.1.3375.2.2.6.18.1.2.1.16',
  ltmSctpProfileProxyBufferLow => '1.3.6.1.4.1.3375.2.2.6.18.1.2.1.17',
  ltmSctpProfileProxyBufferHigh => '1.3.6.1.4.1.3375.2.2.6.18.1.2.1.18',
  ltmSctpProfileIdleTimeout => '1.3.6.1.4.1.3375.2.2.6.18.1.2.1.19',
  ltmSctpProfileHeartbeatInterval => '1.3.6.1.4.1.3375.2.2.6.18.1.2.1.20',
  ltmSctpProfileIpTosToPeer => '1.3.6.1.4.1.3375.2.2.6.18.1.2.1.21',
  ltmSctpProfileLinkQosToPeer => '1.3.6.1.4.1.3375.2.2.6.18.1.2.1.22',
  ltmSctpProfileSecret => '1.3.6.1.4.1.3375.2.2.6.18.1.2.1.23',
  ltmSctpProfileMaxBurst => '1.3.6.1.4.1.3375.2.2.6.18.1.2.1.24',
  ltmSctpProfileHeartbeatMaxBurst => '1.3.6.1.4.1.3375.2.2.6.18.1.2.1.25',
  ltmSctpProfileStat => '1.3.6.1.4.1.3375.2.2.6.18.2',
  ltmSctpProfileStatResetStats => '1.3.6.1.4.1.3375.2.2.6.18.2.1',
  ltmSctpProfileStatNumber => '1.3.6.1.4.1.3375.2.2.6.18.2.2',
  ltmSctpProfileStatTable => '1.3.6.1.4.1.3375.2.2.6.18.2.3',
  ltmSctpProfileStatEntry => '1.3.6.1.4.1.3375.2.2.6.18.2.3.1',
  ltmSctpProfileStatName => '1.3.6.1.4.1.3375.2.2.6.18.2.3.1.1',
  ltmSctpProfileStatAccepts => '1.3.6.1.4.1.3375.2.2.6.18.2.3.1.2',
  ltmSctpProfileStatAcceptfails => '1.3.6.1.4.1.3375.2.2.6.18.2.3.1.3',
  ltmSctpProfileStatConnects => '1.3.6.1.4.1.3375.2.2.6.18.2.3.1.4',
  ltmSctpProfileStatConnfails => '1.3.6.1.4.1.3375.2.2.6.18.2.3.1.5',
  ltmSctpProfileStatExpires => '1.3.6.1.4.1.3375.2.2.6.18.2.3.1.6',
  ltmSctpProfileStatAbandons => '1.3.6.1.4.1.3375.2.2.6.18.2.3.1.7',
  ltmSctpProfileStatRxrst => '1.3.6.1.4.1.3375.2.2.6.18.2.3.1.8',
  ltmSctpProfileStatRxbadsum => '1.3.6.1.4.1.3375.2.2.6.18.2.3.1.9',
  ltmSctpProfileStatRxcookie => '1.3.6.1.4.1.3375.2.2.6.18.2.3.1.10',
  ltmSctpProfileStatRxbadcookie => '1.3.6.1.4.1.3375.2.2.6.18.2.3.1.11',
  ltmUserStat => '1.3.6.1.4.1.3375.2.2.6.19',
  ltmUserStatProfile => '1.3.6.1.4.1.3375.2.2.6.19.1',
  ltmUserStatProfileNumber => '1.3.6.1.4.1.3375.2.2.6.19.1.1',
  ltmUserStatProfileTable => '1.3.6.1.4.1.3375.2.2.6.19.1.2',
  ltmUserStatProfileEntry => '1.3.6.1.4.1.3375.2.2.6.19.1.2.1',
  ltmUserStatProfileName => '1.3.6.1.4.1.3375.2.2.6.19.1.2.1.1',
  ltmUserStatProfileConfigSource => '1.3.6.1.4.1.3375.2.2.6.19.1.2.1.2',
  ltmUserStatProfileConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmUserStatProfileConfigSource',
  ltmUserStatProfileDefaultName => '1.3.6.1.4.1.3375.2.2.6.19.1.2.1.3',
  ltmUserStatProfileStat => '1.3.6.1.4.1.3375.2.2.6.19.2',
  ltmUserStatProfileStatResetStats => '1.3.6.1.4.1.3375.2.2.6.19.2.1',
  ltmUserStatProfileStatNumber => '1.3.6.1.4.1.3375.2.2.6.19.2.2',
  ltmUserStatProfileStatTable => '1.3.6.1.4.1.3375.2.2.6.19.2.3',
  ltmUserStatProfileStatEntry => '1.3.6.1.4.1.3375.2.2.6.19.2.3.1',
  ltmUserStatProfileStatName => '1.3.6.1.4.1.3375.2.2.6.19.2.3.1.1',
  ltmUserStatProfileStatFieldId => '1.3.6.1.4.1.3375.2.2.6.19.2.3.1.2',
  ltmUserStatProfileStatFieldName => '1.3.6.1.4.1.3375.2.2.6.19.2.3.1.3',
  ltmUserStatProfileStatFieldValue => '1.3.6.1.4.1.3375.2.2.6.19.2.3.1.4',
  ltmSip => '1.3.6.1.4.1.3375.2.2.6.20',
  ltmSipProfile => '1.3.6.1.4.1.3375.2.2.6.20.1',
  ltmSipProfileNumber => '1.3.6.1.4.1.3375.2.2.6.20.1.1',
  ltmSipProfileTable => '1.3.6.1.4.1.3375.2.2.6.20.1.2',
  ltmSipProfileEntry => '1.3.6.1.4.1.3375.2.2.6.20.1.2.1',
  ltmSipProfileName => '1.3.6.1.4.1.3375.2.2.6.20.1.2.1.1',
  ltmSipProfileConfigSource => '1.3.6.1.4.1.3375.2.2.6.20.1.2.1.2',
  ltmSipProfileConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmSipProfileConfigSource',
  ltmSipProfileDefaultName => '1.3.6.1.4.1.3375.2.2.6.20.1.2.1.3',
  ltmSipProfileMaxSize => '1.3.6.1.4.1.3375.2.2.6.20.1.2.1.4',
  ltmSipProfileTerminateBye => '1.3.6.1.4.1.3375.2.2.6.20.1.2.1.5',
  ltmSipProfileTerminateByeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmSipProfileTerminateBye',
  ltmSipProfileInsertVia => '1.3.6.1.4.1.3375.2.2.6.20.1.2.1.6',
  ltmSipProfileInsertViaDefinition => 'F5-BIGIP-LOCAL-MIB::ltmSipProfileInsertVia',
  ltmSipProfileSecureVia => '1.3.6.1.4.1.3375.2.2.6.20.1.2.1.7',
  ltmSipProfileSecureViaDefinition => 'F5-BIGIP-LOCAL-MIB::ltmSipProfileSecureVia',
  ltmSipProfileInsertRecordRoute => '1.3.6.1.4.1.3375.2.2.6.20.1.2.1.8',
  ltmSipProfileInsertRecordRouteDefinition => 'F5-BIGIP-LOCAL-MIB::ltmSipProfileInsertRecordRoute',
  ltmSipProfileFirewallEnabled => '1.3.6.1.4.1.3375.2.2.6.20.1.2.1.9',
  ltmSipProfileFirewallEnabledDefinition => 'F5-BIGIP-LOCAL-MIB::ltmSipProfileFirewallEnabled',
  ltmSipProfileLogPublisher => '1.3.6.1.4.1.3375.2.2.6.20.1.2.1.10',
  ltmSipProfileLogProfile => '1.3.6.1.4.1.3375.2.2.6.20.1.2.1.11',
  ltmSipProfileStat => '1.3.6.1.4.1.3375.2.2.6.20.2',
  ltmSipProfileStatResetStats => '1.3.6.1.4.1.3375.2.2.6.20.2.1',
  ltmSipProfileStatNumber => '1.3.6.1.4.1.3375.2.2.6.20.2.2',
  ltmSipProfileStatTable => '1.3.6.1.4.1.3375.2.2.6.20.2.3',
  ltmSipProfileStatEntry => '1.3.6.1.4.1.3375.2.2.6.20.2.3.1',
  ltmSipProfileStatName => '1.3.6.1.4.1.3375.2.2.6.20.2.3.1.1',
  ltmSipProfileStatRequests => '1.3.6.1.4.1.3375.2.2.6.20.2.3.1.2',
  ltmSipProfileStatResponses => '1.3.6.1.4.1.3375.2.2.6.20.2.3.1.3',
  ltmSipProfileStatBadmsgs => '1.3.6.1.4.1.3375.2.2.6.20.2.3.1.4',
  ltmSipProfileStatDrops => '1.3.6.1.4.1.3375.2.2.6.20.2.3.1.5',
  ltmIsession => '1.3.6.1.4.1.3375.2.2.6.21',
  ltmIsessionProfile => '1.3.6.1.4.1.3375.2.2.6.21.1',
  ltmIsessionProfileNumber => '1.3.6.1.4.1.3375.2.2.6.21.1.1',
  ltmIsessionProfileTable => '1.3.6.1.4.1.3375.2.2.6.21.1.2',
  ltmIsessionProfileEntry => '1.3.6.1.4.1.3375.2.2.6.21.1.2.1',
  ltmIsessionProfileName => '1.3.6.1.4.1.3375.2.2.6.21.1.2.1.1',
  ltmIsessionProfileMode => '1.3.6.1.4.1.3375.2.2.6.21.1.2.1.2',
  ltmIsessionProfileModeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmIsessionProfileMode',
  ltmIsessionProfileConnectionReuse => '1.3.6.1.4.1.3375.2.2.6.21.1.2.1.3',
  ltmIsessionProfileConnectionReuseDefinition => 'F5-BIGIP-LOCAL-MIB::ltmIsessionProfileConnectionReuse',
  ltmIsessionProfileCompressionNull => '1.3.6.1.4.1.3375.2.2.6.21.1.2.1.4',
  ltmIsessionProfileCompressionNullDefinition => 'F5-BIGIP-LOCAL-MIB::ltmIsessionProfileCompressionNull',
  ltmIsessionProfileCompressionDeflate => '1.3.6.1.4.1.3375.2.2.6.21.1.2.1.5',
  ltmIsessionProfileCompressionDeflateDefinition => 'F5-BIGIP-LOCAL-MIB::ltmIsessionProfileCompressionDeflate',
  ltmIsessionProfileCompressionLzo => '1.3.6.1.4.1.3375.2.2.6.21.1.2.1.6',
  ltmIsessionProfileCompressionLzoDefinition => 'F5-BIGIP-LOCAL-MIB::ltmIsessionProfileCompressionLzo',
  ltmIsessionProfileCompressionAdaptive => '1.3.6.1.4.1.3375.2.2.6.21.1.2.1.7',
  ltmIsessionProfileCompressionAdaptiveDefinition => 'F5-BIGIP-LOCAL-MIB::ltmIsessionProfileCompressionAdaptive',
  ltmIsessionProfileDeduplication => '1.3.6.1.4.1.3375.2.2.6.21.1.2.1.8',
  ltmIsessionProfileDeduplicationDefinition => 'F5-BIGIP-LOCAL-MIB::ltmIsessionProfileDeduplication',
  ltmIsessionProfilePortTransparency => '1.3.6.1.4.1.3375.2.2.6.21.1.2.1.9',
  ltmIsessionProfilePortTransparencyDefinition => 'F5-BIGIP-LOCAL-MIB::ltmIsessionProfilePortTransparency',
  ltmIsessionProfileTargetVirtual => '1.3.6.1.4.1.3375.2.2.6.21.1.2.1.10',
  ltmIsessionProfileTargetVirtualDefinition => 'F5-BIGIP-LOCAL-MIB::ltmIsessionProfileTargetVirtual',
  ltmIsessionProfileEndpointPool => '1.3.6.1.4.1.3375.2.2.6.21.1.2.1.11',
  ltmIsessionProfileCompressionDeflateLevel => '1.3.6.1.4.1.3375.2.2.6.21.1.2.1.12',
  ltmIsessionProfileCompressionBzip2 => '1.3.6.1.4.1.3375.2.2.6.21.1.2.1.13',
  ltmIsessionProfileCompressionBzip2Definition => 'F5-BIGIP-LOCAL-MIB::ltmIsessionProfileCompressionBzip2',
  ltmIsessionProfileCompression => '1.3.6.1.4.1.3375.2.2.6.21.1.2.1.14',
  ltmIsessionProfileCompressionDefinition => 'F5-BIGIP-LOCAL-MIB::ltmIsessionProfileCompression',
  ltmIsessionProfileCompressionCodecs => '1.3.6.1.4.1.3375.2.2.6.21.1.2.1.15',
  ltmIsessionProfileStat => '1.3.6.1.4.1.3375.2.2.6.21.2',
  ltmIsessionProfileStatResetStats => '1.3.6.1.4.1.3375.2.2.6.21.2.1',
  ltmIsessionProfileStatNumber => '1.3.6.1.4.1.3375.2.2.6.21.2.2',
  ltmIsessionProfileStatTable => '1.3.6.1.4.1.3375.2.2.6.21.2.3',
  ltmIsessionProfileStatEntry => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1',
  ltmIsessionProfileStatVsName => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.1',
  ltmIsessionProfileStatProfileName => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.2',
  ltmIsessionProfileStatNullInUses => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.3',
  ltmIsessionProfileStatNullInErrors => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.4',
  ltmIsessionProfileStatNullInBytesOpt => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.5',
  ltmIsessionProfileStatNullInBytesRaw => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.6',
  ltmIsessionProfileStatNullOutUses => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.7',
  ltmIsessionProfileStatNullOutErrors => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.8',
  ltmIsessionProfileStatNullOutBytesOpt => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.9',
  ltmIsessionProfileStatNullOutBytesRaw => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.10',
  ltmIsessionProfileStatLzoInUses => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.11',
  ltmIsessionProfileStatLzoInErrors => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.12',
  ltmIsessionProfileStatLzoInBytesOpt => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.13',
  ltmIsessionProfileStatLzoInBytesRaw => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.14',
  ltmIsessionProfileStatLzoOutUses => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.15',
  ltmIsessionProfileStatLzoOutErrors => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.16',
  ltmIsessionProfileStatLzoOutBytesOpt => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.17',
  ltmIsessionProfileStatLzoOutBytesRaw => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.18',
  ltmIsessionProfileStatDeflateInUses => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.19',
  ltmIsessionProfileStatDeflateInErrors => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.20',
  ltmIsessionProfileStatDeflateInBytesOpt => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.21',
  ltmIsessionProfileStatDeflateInBytesRaw => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.22',
  ltmIsessionProfileStatDeflateOutUses => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.23',
  ltmIsessionProfileStatDeflateOutErrors => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.24',
  ltmIsessionProfileStatDeflateOutBytesOpt => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.25',
  ltmIsessionProfileStatDeflateOutBytesRaw => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.26',
  ltmIsessionProfileStatDedupInUses => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.27',
  ltmIsessionProfileStatDedupInErrors => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.28',
  ltmIsessionProfileStatDedupInBytesOpt => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.29',
  ltmIsessionProfileStatDedupInBytesRaw => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.30',
  ltmIsessionProfileStatDedupOutUses => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.31',
  ltmIsessionProfileStatDedupOutErrors => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.32',
  ltmIsessionProfileStatDedupOutBytesOpt => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.33',
  ltmIsessionProfileStatDedupOutBytesRaw => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.34',
  ltmIsessionProfileStatDedupInHits => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.35',
  ltmIsessionProfileStatDedupInHitBytes => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.36',
  ltmIsessionProfileStatDedupInHitHistBucket1k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.37',
  ltmIsessionProfileStatDedupInHitHistBucket2k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.38',
  ltmIsessionProfileStatDedupInHitHistBucket4k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.39',
  ltmIsessionProfileStatDedupInHitHistBucket8k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.40',
  ltmIsessionProfileStatDedupInHitHistBucket16k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.41',
  ltmIsessionProfileStatDedupInHitHistBucket32k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.42',
  ltmIsessionProfileStatDedupInHitHistBucket64k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.43',
  ltmIsessionProfileStatDedupInHitHistBucket128k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.44',
  ltmIsessionProfileStatDedupInHitHistBucket256k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.45',
  ltmIsessionProfileStatDedupInHitHistBucket512k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.46',
  ltmIsessionProfileStatDedupInHitHistBucket1m => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.47',
  ltmIsessionProfileStatDedupInHitHistBucketLarge => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.48',
  ltmIsessionProfileStatDedupInMisses => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.49',
  ltmIsessionProfileStatDedupInMissBytes => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.50',
  ltmIsessionProfileStatDedupInMissHistBucket1k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.51',
  ltmIsessionProfileStatDedupInMissHistBucket2k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.52',
  ltmIsessionProfileStatDedupInMissHistBucket4k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.53',
  ltmIsessionProfileStatDedupInMissHistBucket8k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.54',
  ltmIsessionProfileStatDedupInMissHistBucket16k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.55',
  ltmIsessionProfileStatDedupInMissHistBucket32k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.56',
  ltmIsessionProfileStatDedupInMissHistBucket64k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.57',
  ltmIsessionProfileStatDedupInMissHistBucket128k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.58',
  ltmIsessionProfileStatDedupInMissHistBucket256k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.59',
  ltmIsessionProfileStatDedupInMissHistBucket512k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.60',
  ltmIsessionProfileStatDedupInMissHistBucket1m => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.61',
  ltmIsessionProfileStatDedupInMissHistBucketLarge => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.62',
  ltmIsessionProfileStatDedupOutHits => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.63',
  ltmIsessionProfileStatDedupOutHitBytes => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.64',
  ltmIsessionProfileStatDedupOutHitHistBucket1k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.65',
  ltmIsessionProfileStatDedupOutHitHistBucket2k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.66',
  ltmIsessionProfileStatDedupOutHitHistBucket4k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.67',
  ltmIsessionProfileStatDedupOutHitHistBucket8k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.68',
  ltmIsessionProfileStatDedupOutHitHistBucket16k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.69',
  ltmIsessionProfileStatDedupOutHitHistBucket32k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.70',
  ltmIsessionProfileStatDedupOutHitHistBucket64k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.71',
  ltmIsessionProfileStatDedupOutHitHistBucket128k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.72',
  ltmIsessionProfileStatDedupOutHitHistBucket256k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.73',
  ltmIsessionProfileStatDedupOutHitHistBucket512k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.74',
  ltmIsessionProfileStatDedupOutHitHistBucket1m => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.75',
  ltmIsessionProfileStatDedupOutHitHistBucketLarge => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.76',
  ltmIsessionProfileStatDedupOutMisses => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.77',
  ltmIsessionProfileStatDedupOutMissBytes => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.78',
  ltmIsessionProfileStatDedupOutMissHistBucket1k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.79',
  ltmIsessionProfileStatDedupOutMissHistBucket2k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.80',
  ltmIsessionProfileStatDedupOutMissHistBucket4k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.81',
  ltmIsessionProfileStatDedupOutMissHistBucket8k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.82',
  ltmIsessionProfileStatDedupOutMissHistBucket16k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.83',
  ltmIsessionProfileStatDedupOutMissHistBucket32k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.84',
  ltmIsessionProfileStatDedupOutMissHistBucket64k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.85',
  ltmIsessionProfileStatDedupOutMissHistBucket128k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.86',
  ltmIsessionProfileStatDedupOutMissHistBucket256k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.87',
  ltmIsessionProfileStatDedupOutMissHistBucket512k => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.88',
  ltmIsessionProfileStatDedupOutMissHistBucket1m => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.89',
  ltmIsessionProfileStatDedupOutMissHistBucketLarge => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.90',
  ltmIsessionProfileStatOutgoingConnsIdleCur => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.91',
  ltmIsessionProfileStatOutgoingConnsIdleMax => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.92',
  ltmIsessionProfileStatOutgoingConnsIdleTot => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.93',
  ltmIsessionProfileStatOutgoingConnsActiveCur => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.94',
  ltmIsessionProfileStatOutgoingConnsActiveMax => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.95',
  ltmIsessionProfileStatOutgoingConnsActiveTot => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.96',
  ltmIsessionProfileStatOutgoingConnsErrors => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.97',
  ltmIsessionProfileStatOutgoingConnsPassthruTot => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.98',
  ltmIsessionProfileStatIncomingConnsActiveCur => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.99',
  ltmIsessionProfileStatIncomingConnsActiveMax => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.100',
  ltmIsessionProfileStatIncomingConnsActiveTot => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.101',
  ltmIsessionProfileStatIncomingConnsErrors => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.102',
  ltmIsessionProfileStatBzip2InUses => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.103',
  ltmIsessionProfileStatBzip2InErrors => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.104',
  ltmIsessionProfileStatBzip2InBytesOpt => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.105',
  ltmIsessionProfileStatBzip2InBytesRaw => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.106',
  ltmIsessionProfileStatBzip2OutUses => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.107',
  ltmIsessionProfileStatBzip2OutErrors => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.108',
  ltmIsessionProfileStatBzip2OutBytesOpt => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.109',
  ltmIsessionProfileStatBzip2OutBytesRaw => '1.3.6.1.4.1.3375.2.2.6.21.2.3.1.110',
  ltmHttpCompression => '1.3.6.1.4.1.3375.2.2.6.22',
  ltmHttpCompressionProfile => '1.3.6.1.4.1.3375.2.2.6.22.1',
  ltmHttpCompressionProfileNumber => '1.3.6.1.4.1.3375.2.2.6.22.1.1',
  ltmHttpCompressionProfileTable => '1.3.6.1.4.1.3375.2.2.6.22.1.2',
  ltmHttpCompressionProfileEntry => '1.3.6.1.4.1.3375.2.2.6.22.1.2.1',
  ltmHttpCompressionProfileName => '1.3.6.1.4.1.3375.2.2.6.22.1.2.1.1',
  ltmHttpCompressionProfileConfigSource => '1.3.6.1.4.1.3375.2.2.6.22.1.2.1.2',
  ltmHttpCompressionProfileConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpCompressionProfileConfigSource',
  ltmHttpCompressionProfileDefaultName => '1.3.6.1.4.1.3375.2.2.6.22.1.2.1.3',
  ltmHttpCompressionProfileSelective => '1.3.6.1.4.1.3375.2.2.6.22.1.2.1.4',
  ltmHttpCompressionProfileSelectiveDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpCompressionProfileSelective',
  ltmHttpCompressionProfileMinSize => '1.3.6.1.4.1.3375.2.2.6.22.1.2.1.5',
  ltmHttpCompressionProfileBufferSize => '1.3.6.1.4.1.3375.2.2.6.22.1.2.1.6',
  ltmHttpCompressionProfileVaryHeader => '1.3.6.1.4.1.3375.2.2.6.22.1.2.1.7',
  ltmHttpCompressionProfileVaryHeaderDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpCompressionProfileVaryHeader',
  ltmHttpCompressionProfileAllowHttp10 => '1.3.6.1.4.1.3375.2.2.6.22.1.2.1.8',
  ltmHttpCompressionProfileAllowHttp10Definition => 'F5-BIGIP-LOCAL-MIB::ltmHttpCompressionProfileAllowHttp10',
  ltmHttpCompressionProfileGzipMemlevel => '1.3.6.1.4.1.3375.2.2.6.22.1.2.1.9',
  ltmHttpCompressionProfileGzipWindowsize => '1.3.6.1.4.1.3375.2.2.6.22.1.2.1.10',
  ltmHttpCompressionProfileGzipLevel => '1.3.6.1.4.1.3375.2.2.6.22.1.2.1.11',
  ltmHttpCompressionProfileKeepAcceptEncoding => '1.3.6.1.4.1.3375.2.2.6.22.1.2.1.12',
  ltmHttpCompressionProfileKeepAcceptEncodingDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpCompressionProfileKeepAcceptEncoding',
  ltmHttpCompressionProfileBrowserWorkarounds => '1.3.6.1.4.1.3375.2.2.6.22.1.2.1.13',
  ltmHttpCompressionProfileBrowserWorkaroundsDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpCompressionProfileBrowserWorkarounds',
  ltmHttpCompressionProfileCpusaver => '1.3.6.1.4.1.3375.2.2.6.22.1.2.1.14',
  ltmHttpCompressionProfileCpusaverDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpCompressionProfileCpusaver',
  ltmHttpCompressionProfileCpusaverHigh => '1.3.6.1.4.1.3375.2.2.6.22.1.2.1.15',
  ltmHttpCompressionProfileCpusaverLow => '1.3.6.1.4.1.3375.2.2.6.22.1.2.1.16',
  ltmHttpCompressionProfilePreferredMethod => '1.3.6.1.4.1.3375.2.2.6.22.1.2.1.17',
  ltmHttpCompressionProfilePreferredMethodDefinition => 'F5-BIGIP-LOCAL-MIB::ltmHttpCompressionProfilePreferredMethod',
  ltmHttpCompressionProfileUriIncl => '1.3.6.1.4.1.3375.2.2.6.22.2',
  ltmHttpcompUriInclNumber => '1.3.6.1.4.1.3375.2.2.6.22.2.1',
  ltmHttpcompUriInclTable => '1.3.6.1.4.1.3375.2.2.6.22.2.2',
  ltmHttpcompUriInclEntry => '1.3.6.1.4.1.3375.2.2.6.22.2.2.1',
  ltmHttpcompUriInclName => '1.3.6.1.4.1.3375.2.2.6.22.2.2.1.1',
  ltmHttpcompUriInclIndex => '1.3.6.1.4.1.3375.2.2.6.22.2.2.1.2',
  ltmHttpcompUriInclUri => '1.3.6.1.4.1.3375.2.2.6.22.2.2.1.3',
  ltmHttpCompressionProfileUriExcl => '1.3.6.1.4.1.3375.2.2.6.22.3',
  ltmHttpcompUriExclNumber => '1.3.6.1.4.1.3375.2.2.6.22.3.1',
  ltmHttpcompUriExclTable => '1.3.6.1.4.1.3375.2.2.6.22.3.2',
  ltmHttpcompUriExclEntry => '1.3.6.1.4.1.3375.2.2.6.22.3.2.1',
  ltmHttpcompUriExclName => '1.3.6.1.4.1.3375.2.2.6.22.3.2.1.1',
  ltmHttpcompUriExclIndex => '1.3.6.1.4.1.3375.2.2.6.22.3.2.1.2',
  ltmHttpcompUriExclUri => '1.3.6.1.4.1.3375.2.2.6.22.3.2.1.3',
  ltmHttpCompressionProfileContTypeIncl => '1.3.6.1.4.1.3375.2.2.6.22.4',
  ltmHttpcompContTypeInclNumber => '1.3.6.1.4.1.3375.2.2.6.22.4.1',
  ltmHttpcompContTypeInclTable => '1.3.6.1.4.1.3375.2.2.6.22.4.2',
  ltmHttpcompContTypeInclEntry => '1.3.6.1.4.1.3375.2.2.6.22.4.2.1',
  ltmHttpcompContTypeInclName => '1.3.6.1.4.1.3375.2.2.6.22.4.2.1.1',
  ltmHttpcompContTypeInclIndex => '1.3.6.1.4.1.3375.2.2.6.22.4.2.1.2',
  ltmHttpcompContTypeInclContentType => '1.3.6.1.4.1.3375.2.2.6.22.4.2.1.3',
  ltmHttpCompressionProfileContTypeExcl => '1.3.6.1.4.1.3375.2.2.6.22.5',
  ltmHttpcompContTypeExclNumber => '1.3.6.1.4.1.3375.2.2.6.22.5.1',
  ltmHttpcompContTypeExclTable => '1.3.6.1.4.1.3375.2.2.6.22.5.2',
  ltmHttpcompContTypeExclEntry => '1.3.6.1.4.1.3375.2.2.6.22.5.2.1',
  ltmHttpcompContTypeExclName => '1.3.6.1.4.1.3375.2.2.6.22.5.2.1.1',
  ltmHttpcompContTypeExclIndex => '1.3.6.1.4.1.3375.2.2.6.22.5.2.1.2',
  ltmHttpcompContTypeExclContentType => '1.3.6.1.4.1.3375.2.2.6.22.5.2.1.3',
  ltmHttpCompressionProfileStat => '1.3.6.1.4.1.3375.2.2.6.22.6',
  ltmHttpCompressionProfileStatResetStats => '1.3.6.1.4.1.3375.2.2.6.22.6.1',
  ltmHttpCompressionProfileStatNumber => '1.3.6.1.4.1.3375.2.2.6.22.6.2',
  ltmHttpCompressionProfileStatTable => '1.3.6.1.4.1.3375.2.2.6.22.6.3',
  ltmHttpCompressionProfileStatEntry => '1.3.6.1.4.1.3375.2.2.6.22.6.3.1',
  ltmHttpCompressionProfileStatName => '1.3.6.1.4.1.3375.2.2.6.22.6.3.1.1',
  ltmHttpCompressionProfileStatPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.22.6.3.1.2',
  ltmHttpCompressionProfileStatPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.22.6.3.1.3',
  ltmHttpCompressionProfileStatNullCompressBytes => '1.3.6.1.4.1.3375.2.2.6.22.6.3.1.4',
  ltmHttpCompressionProfileStatHtmlPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.22.6.3.1.5',
  ltmHttpCompressionProfileStatHtmlPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.22.6.3.1.6',
  ltmHttpCompressionProfileStatCssPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.22.6.3.1.7',
  ltmHttpCompressionProfileStatCssPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.22.6.3.1.8',
  ltmHttpCompressionProfileStatJsPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.22.6.3.1.9',
  ltmHttpCompressionProfileStatJsPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.22.6.3.1.10',
  ltmHttpCompressionProfileStatXmlPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.22.6.3.1.11',
  ltmHttpCompressionProfileStatXmlPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.22.6.3.1.12',
  ltmHttpCompressionProfileStatSgmlPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.22.6.3.1.13',
  ltmHttpCompressionProfileStatSgmlPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.22.6.3.1.14',
  ltmHttpCompressionProfileStatPlainPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.22.6.3.1.15',
  ltmHttpCompressionProfileStatPlainPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.22.6.3.1.16',
  ltmHttpCompressionProfileStatOctetPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.22.6.3.1.17',
  ltmHttpCompressionProfileStatOctetPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.22.6.3.1.18',
  ltmHttpCompressionProfileStatImagePrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.22.6.3.1.19',
  ltmHttpCompressionProfileStatImagePostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.22.6.3.1.20',
  ltmHttpCompressionProfileStatVideoPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.22.6.3.1.21',
  ltmHttpCompressionProfileStatVideoPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.22.6.3.1.22',
  ltmHttpCompressionProfileStatAudioPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.22.6.3.1.23',
  ltmHttpCompressionProfileStatAudioPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.22.6.3.1.24',
  ltmHttpCompressionProfileStatOtherPrecompressBytes => '1.3.6.1.4.1.3375.2.2.6.22.6.3.1.25',
  ltmHttpCompressionProfileStatOtherPostcompressBytes => '1.3.6.1.4.1.3375.2.2.6.22.6.3.1.26',
  ltmWebAcceleration => '1.3.6.1.4.1.3375.2.2.6.23',
  ltmWebAccelerationProfile => '1.3.6.1.4.1.3375.2.2.6.23.1',
  ltmWebAccelerationProfileNumber => '1.3.6.1.4.1.3375.2.2.6.23.1.1',
  ltmWebAccelerationProfileTable => '1.3.6.1.4.1.3375.2.2.6.23.1.2',
  ltmWebAccelerationProfileEntry => '1.3.6.1.4.1.3375.2.2.6.23.1.2.1',
  ltmWebAccelerationProfileName => '1.3.6.1.4.1.3375.2.2.6.23.1.2.1.1',
  ltmWebAccelerationProfileConfigSource => '1.3.6.1.4.1.3375.2.2.6.23.1.2.1.2',
  ltmWebAccelerationProfileConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmWebAccelerationProfileConfigSource',
  ltmWebAccelerationProfileDefaultName => '1.3.6.1.4.1.3375.2.2.6.23.1.2.1.3',
  ltmWebAccelerationProfileCacheSize => '1.3.6.1.4.1.3375.2.2.6.23.1.2.1.4',
  ltmWebAccelerationProfileCacheMaxEntries => '1.3.6.1.4.1.3375.2.2.6.23.1.2.1.5',
  ltmWebAccelerationProfileCacheMaxAge => '1.3.6.1.4.1.3375.2.2.6.23.1.2.1.6',
  ltmWebAccelerationProfileCacheObjectMinSize => '1.3.6.1.4.1.3375.2.2.6.23.1.2.1.7',
  ltmWebAccelerationProfileCacheObjectMaxSize => '1.3.6.1.4.1.3375.2.2.6.23.1.2.1.8',
  ltmWebAccelerationProfileCacheIgnoreClient => '1.3.6.1.4.1.3375.2.2.6.23.1.2.1.9',
  ltmWebAccelerationProfileCacheIgnoreClientDefinition => 'F5-BIGIP-LOCAL-MIB::ltmWebAccelerationProfileCacheIgnoreClient',
  ltmWebAccelerationProfileCacheAgingRate => '1.3.6.1.4.1.3375.2.2.6.23.1.2.1.10',
  ltmWebAccelerationProfileCacheInsertAgeHeader => '1.3.6.1.4.1.3375.2.2.6.23.1.2.1.11',
  ltmWebAccelerationProfileCacheInsertAgeHeaderDefinition => 'F5-BIGIP-LOCAL-MIB::ltmWebAccelerationProfileCacheInsertAgeHeader',
  ltmWebAccelerationProfileUriExcl => '1.3.6.1.4.1.3375.2.2.6.23.2',
  ltmWebaccCacheUriExclNumber => '1.3.6.1.4.1.3375.2.2.6.23.2.1',
  ltmWebaccCacheUriExclTable => '1.3.6.1.4.1.3375.2.2.6.23.2.2',
  ltmWebaccCacheUriExclEntry => '1.3.6.1.4.1.3375.2.2.6.23.2.2.1',
  ltmWebaccCacheUriExclName => '1.3.6.1.4.1.3375.2.2.6.23.2.2.1.1',
  ltmWebaccCacheUriExclIndex => '1.3.6.1.4.1.3375.2.2.6.23.2.2.1.2',
  ltmWebaccCacheUriExclUri => '1.3.6.1.4.1.3375.2.2.6.23.2.2.1.3',
  ltmWebAccelerationProfileUriIncl => '1.3.6.1.4.1.3375.2.2.6.23.3',
  ltmWebaccCacheUriInclNumber => '1.3.6.1.4.1.3375.2.2.6.23.3.1',
  ltmWebaccCacheUriInclTable => '1.3.6.1.4.1.3375.2.2.6.23.3.2',
  ltmWebaccCacheUriInclEntry => '1.3.6.1.4.1.3375.2.2.6.23.3.2.1',
  ltmWebaccCacheUriInclName => '1.3.6.1.4.1.3375.2.2.6.23.3.2.1.1',
  ltmWebaccCacheUriInclIndex => '1.3.6.1.4.1.3375.2.2.6.23.3.2.1.2',
  ltmWebaccCacheUriInclUri => '1.3.6.1.4.1.3375.2.2.6.23.3.2.1.3',
  ltmWebAccelerationProfileUriPin => '1.3.6.1.4.1.3375.2.2.6.23.4',
  ltmWebaccCacheUriPinNumber => '1.3.6.1.4.1.3375.2.2.6.23.4.1',
  ltmWebaccCacheUriPinTable => '1.3.6.1.4.1.3375.2.2.6.23.4.2',
  ltmWebaccCacheUriPinEntry => '1.3.6.1.4.1.3375.2.2.6.23.4.2.1',
  ltmWebaccCacheUriPinName => '1.3.6.1.4.1.3375.2.2.6.23.4.2.1.1',
  ltmWebaccCacheUriPinIndex => '1.3.6.1.4.1.3375.2.2.6.23.4.2.1.2',
  ltmWebaccCacheUriPinUri => '1.3.6.1.4.1.3375.2.2.6.23.4.2.1.3',
  ltmWebAccelerationProfileStat => '1.3.6.1.4.1.3375.2.2.6.23.5',
  ltmWebAccelerationProfileStatResetStats => '1.3.6.1.4.1.3375.2.2.6.23.5.1',
  ltmWebAccelerationProfileStatNumber => '1.3.6.1.4.1.3375.2.2.6.23.5.2',
  ltmWebAccelerationProfileStatTable => '1.3.6.1.4.1.3375.2.2.6.23.5.3',
  ltmWebAccelerationProfileStatEntry => '1.3.6.1.4.1.3375.2.2.6.23.5.3.1',
  ltmWebAccelerationProfileStatName => '1.3.6.1.4.1.3375.2.2.6.23.5.3.1.1',
  ltmWebAccelerationProfileStatCacheHits => '1.3.6.1.4.1.3375.2.2.6.23.5.3.1.2',
  ltmWebAccelerationProfileStatCacheMisses => '1.3.6.1.4.1.3375.2.2.6.23.5.3.1.3',
  ltmWebAccelerationProfileStatCacheMissesAll => '1.3.6.1.4.1.3375.2.2.6.23.5.3.1.4',
  ltmWebAccelerationProfileStatCacheHitBytes => '1.3.6.1.4.1.3375.2.2.6.23.5.3.1.5',
  ltmWebAccelerationProfileStatCacheMissBytes => '1.3.6.1.4.1.3375.2.2.6.23.5.3.1.6',
  ltmWebAccelerationProfileStatCacheMissBytesAll => '1.3.6.1.4.1.3375.2.2.6.23.5.3.1.7',
  ltmWebAccelerationProfileStatCacheSize => '1.3.6.1.4.1.3375.2.2.6.23.5.3.1.8',
  ltmWebAccelerationProfileStatCacheCount => '1.3.6.1.4.1.3375.2.2.6.23.5.3.1.9',
  ltmWebAccelerationProfileStatCacheEvictions => '1.3.6.1.4.1.3375.2.2.6.23.5.3.1.10',
  ltmWebAccelerationProfileStatInterStripeHits => '1.3.6.1.4.1.3375.2.2.6.23.5.3.1.11',
  ltmWebAccelerationProfileStatInterStripeMisses => '1.3.6.1.4.1.3375.2.2.6.23.5.3.1.12',
  ltmWebAccelerationProfileStatInterStripeHitBytes => '1.3.6.1.4.1.3375.2.2.6.23.5.3.1.13',
  ltmWebAccelerationProfileStatInterStripeSize => '1.3.6.1.4.1.3375.2.2.6.23.5.3.1.14',
  ltmWebAccelerationProfileStatInterStripeCount => '1.3.6.1.4.1.3375.2.2.6.23.5.3.1.15',
  ltmWebAccelerationProfileStatInterStripeEvictions => '1.3.6.1.4.1.3375.2.2.6.23.5.3.1.16',
  ltmWebAccelerationProfileStatRemoteHits => '1.3.6.1.4.1.3375.2.2.6.23.5.3.1.17',
  ltmWebAccelerationProfileStatRemoteMisses => '1.3.6.1.4.1.3375.2.2.6.23.5.3.1.18',
  ltmWebAccelerationProfileStatRemoteHitBytes => '1.3.6.1.4.1.3375.2.2.6.23.5.3.1.19',
  ltmWebAccelerationProfileUriOver => '1.3.6.1.4.1.3375.2.2.6.23.6',
  ltmWebaccCacheUriOverNumber => '1.3.6.1.4.1.3375.2.2.6.23.6.1',
  ltmWebaccCacheUriOverTable => '1.3.6.1.4.1.3375.2.2.6.23.6.2',
  ltmWebaccCacheUriOverEntry => '1.3.6.1.4.1.3375.2.2.6.23.6.2.1',
  ltmWebaccCacheUriOverName => '1.3.6.1.4.1.3375.2.2.6.23.6.2.1.1',
  ltmWebaccCacheUriOverIndex => '1.3.6.1.4.1.3375.2.2.6.23.6.2.1.2',
  ltmWebaccCacheUriOverUri => '1.3.6.1.4.1.3375.2.2.6.23.6.2.1.3',
  ltmDos => '1.3.6.1.4.1.3375.2.2.6.24',
  ltmDosProfile => '1.3.6.1.4.1.3375.2.2.6.24.1',
  ltmDosProfileNumber => '1.3.6.1.4.1.3375.2.2.6.24.1.1',
  ltmDosProfileTable => '1.3.6.1.4.1.3375.2.2.6.24.1.2',
  ltmDosProfileEntry => '1.3.6.1.4.1.3375.2.2.6.24.1.2.1',
  ltmDosProfileName => '1.3.6.1.4.1.3375.2.2.6.24.1.2.1.1',
  ltmDosProfileConfigSource => '1.3.6.1.4.1.3375.2.2.6.24.1.2.1.2',
  ltmDosProfileConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDosProfileConfigSource',
  ltmDosProfileDefaultName => '1.3.6.1.4.1.3375.2.2.6.24.1.2.1.3',
  ltmDosApplication => '1.3.6.1.4.1.3375.2.2.6.24.2',
  ltmDosApplicationNumber => '1.3.6.1.4.1.3375.2.2.6.24.2.1',
  ltmDosApplicationTable => '1.3.6.1.4.1.3375.2.2.6.24.2.2',
  ltmDosApplicationEntry => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1',
  ltmDosApplicationProfileName => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.1',
  ltmDosApplicationName => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.2',
  ltmDosApplicationTriggerIrule => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.3',
  ltmDosApplicationTriggerIruleDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDosApplicationTriggerIrule',
  ltmDosApplicationTpsBasedMode => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.4',
  ltmDosApplicationTpsBasedModeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDosApplicationTpsBasedMode',
  ltmDosApplicationLatencyBasedMode => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.5',
  ltmDosApplicationLatencyBasedModeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDosApplicationLatencyBasedMode',
  ltmDosApplicationTpsBasedIpClientSideDefense => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.6',
  ltmDosApplicationTpsBasedIpClientSideDefenseDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDosApplicationTpsBasedIpClientSideDefense',
  ltmDosApplicationTpsBasedUrlClientSideDefense => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.7',
  ltmDosApplicationTpsBasedUrlClientSideDefenseDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDosApplicationTpsBasedUrlClientSideDefense',
  ltmDosApplicationTpsBasedIpRateLimiting => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.8',
  ltmDosApplicationTpsBasedIpRateLimitingDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDosApplicationTpsBasedIpRateLimiting',
  ltmDosApplicationTpsBasedUrlRateLimiting => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.9',
  ltmDosApplicationTpsBasedUrlRateLimitingDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDosApplicationTpsBasedUrlRateLimiting',
  ltmDosApplicationTpsBasedIpTpsIncreaseRate => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.10',
  ltmDosApplicationTpsBasedIpMaximumTps => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.11',
  ltmDosApplicationTpsBasedIpMinimumTps => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.12',
  ltmDosApplicationTpsBasedUrlTpsIncreaseRate => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.13',
  ltmDosApplicationTpsBasedUrlMaximumTps => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.14',
  ltmDosApplicationTpsBasedUrlMinimumTps => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.15',
  ltmDosApplicationTpsBasedMaximumPreventionDuration => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.16',
  ltmDosApplicationLatencyIncreaseRate => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.17',
  ltmDosApplicationMaximumLatency => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.18',
  ltmDosApplicationMinimumLatency => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.19',
  ltmDosApplicationLatencyBasedIpClientSideDefense => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.20',
  ltmDosApplicationLatencyBasedIpClientSideDefenseDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDosApplicationLatencyBasedIpClientSideDefense',
  ltmDosApplicationLatencyBasedUrlClientSideDefense => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.21',
  ltmDosApplicationLatencyBasedUrlClientSideDefenseDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDosApplicationLatencyBasedUrlClientSideDefense',
  ltmDosApplicationLatencyBasedIpRateLimiting => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.22',
  ltmDosApplicationLatencyBasedIpRateLimitingDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDosApplicationLatencyBasedIpRateLimiting',
  ltmDosApplicationLatencyBasedUrlRateLimiting => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.23',
  ltmDosApplicationLatencyBasedUrlRateLimitingDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDosApplicationLatencyBasedUrlRateLimiting',
  ltmDosApplicationLatencyBasedIpTpsIncreaseRate => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.24',
  ltmDosApplicationLatencyBasedIpMaximumTps => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.25',
  ltmDosApplicationLatencyBasedIpMinimumTps => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.26',
  ltmDosApplicationLatencyBasedUrlTpsIncreaseRate => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.27',
  ltmDosApplicationLatencyBasedUrlMaximumTps => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.28',
  ltmDosApplicationLatencyBasedUrlMinimumTps => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.29',
  ltmDosApplicationLatencyBasedMaximumPreventionDuration => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.30',
  ltmDosApplicationTpsBasedSiteClientSideDefense => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.31',
  ltmDosApplicationTpsBasedSiteClientSideDefenseDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDosApplicationTpsBasedSiteClientSideDefense',
  ltmDosApplicationTpsBasedSiteRateLimiting => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.32',
  ltmDosApplicationTpsBasedSiteRateLimitingDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDosApplicationTpsBasedSiteRateLimiting',
  ltmDosApplicationTpsBasedSiteTpsIncreaseRate => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.33',
  ltmDosApplicationTpsBasedSiteMaximumTps => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.34',
  ltmDosApplicationTpsBasedSiteMinimumTps => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.35',
  ltmDosApplicationTpsBasedEscalationPeriod => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.36',
  ltmDosApplicationTpsBasedDeEscalationPeriod => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.37',
  ltmDosApplicationLatencyBasedSiteClientSideDefense => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.38',
  ltmDosApplicationLatencyBasedSiteClientSideDefenseDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDosApplicationLatencyBasedSiteClientSideDefense',
  ltmDosApplicationLatencyBasedSiteRateLimiting => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.39',
  ltmDosApplicationLatencyBasedSiteRateLimitingDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDosApplicationLatencyBasedSiteRateLimiting',
  ltmDosApplicationLatencyBasedSiteTpsIncreaseRate => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.40',
  ltmDosApplicationLatencyBasedSiteMaximumTps => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.41',
  ltmDosApplicationLatencyBasedSiteMinimumTps => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.42',
  ltmDosApplicationLatencyBasedEscalationPeriod => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.43',
  ltmDosApplicationLatencyBasedDeEscalationPeriod => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.44',
  ltmDosApplicationHeavyUrlProtection => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.45',
  ltmDosApplicationHeavyUrlProtectionDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDosApplicationHeavyUrlProtection',
  ltmDosApplicationHeavyUrlAutomaticDetection => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.46',
  ltmDosApplicationHeavyUrlAutomaticDetectionDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDosApplicationHeavyUrlAutomaticDetection',
  ltmDosApplicationHeavyUrlLatencyThreshold => '1.3.6.1.4.1.3375.2.2.6.24.2.2.1.47',
  ltmDosWhiteIp => '1.3.6.1.4.1.3375.2.2.6.24.3',
  ltmDosWhiteIpNumber => '1.3.6.1.4.1.3375.2.2.6.24.3.1',
  ltmDosWhiteIpTable => '1.3.6.1.4.1.3375.2.2.6.24.3.2',
  ltmDosWhiteIpEntry => '1.3.6.1.4.1.3375.2.2.6.24.3.2.1',
  ltmDosWhiteIpParentProfile => '1.3.6.1.4.1.3375.2.2.6.24.3.2.1.1',
  ltmDosWhiteIpParentName => '1.3.6.1.4.1.3375.2.2.6.24.3.2.1.2',
  ltmDosWhiteIpAddressType => '1.3.6.1.4.1.3375.2.2.6.24.3.2.1.3',
  ltmDosWhiteIpAddress => '1.3.6.1.4.1.3375.2.2.6.24.3.2.1.4',
  ltmDosWhiteIpNetmaskType => '1.3.6.1.4.1.3375.2.2.6.24.3.2.1.5',
  ltmDosWhiteIpNetmask => '1.3.6.1.4.1.3375.2.2.6.24.3.2.1.6',
  ltmDosApplicationHeavyUrlIncl => '1.3.6.1.4.1.3375.2.2.6.24.4',
  ltmDosApplicationHeavyUrlInclNumber => '1.3.6.1.4.1.3375.2.2.6.24.4.1',
  ltmDosApplicationHeavyUrlInclTable => '1.3.6.1.4.1.3375.2.2.6.24.4.2',
  ltmDosApplicationHeavyUrlInclEntry => '1.3.6.1.4.1.3375.2.2.6.24.4.2.1',
  ltmDosApplicationHeavyUrlInclProfileName => '1.3.6.1.4.1.3375.2.2.6.24.4.2.1.1',
  ltmDosApplicationHeavyUrlInclName => '1.3.6.1.4.1.3375.2.2.6.24.4.2.1.2',
  ltmDosApplicationHeavyUrlInclIndex => '1.3.6.1.4.1.3375.2.2.6.24.4.2.1.3',
  ltmDosApplicationHeavyUrlInclUrl => '1.3.6.1.4.1.3375.2.2.6.24.4.2.1.4',
  ltmDosApplicationHeavyUrlExcl => '1.3.6.1.4.1.3375.2.2.6.24.5',
  ltmDosApplicationHeavyUrlExclNumber => '1.3.6.1.4.1.3375.2.2.6.24.5.1',
  ltmDosApplicationHeavyUrlExclTable => '1.3.6.1.4.1.3375.2.2.6.24.5.2',
  ltmDosApplicationHeavyUrlExclEntry => '1.3.6.1.4.1.3375.2.2.6.24.5.2.1',
  ltmDosApplicationHeavyUrlExclProfileName => '1.3.6.1.4.1.3375.2.2.6.24.5.2.1.1',
  ltmDosApplicationHeavyUrlExclName => '1.3.6.1.4.1.3375.2.2.6.24.5.2.1.2',
  ltmDosApplicationHeavyUrlExclIndex => '1.3.6.1.4.1.3375.2.2.6.24.5.2.1.3',
  ltmDosApplicationHeavyUrlExclUrl => '1.3.6.1.4.1.3375.2.2.6.24.5.2.1.4',
  ltmSpdy => '1.3.6.1.4.1.3375.2.2.6.25',
  ltmSpdyProfile => '1.3.6.1.4.1.3375.2.2.6.25.1',
  ltmSpdyProfileNumber => '1.3.6.1.4.1.3375.2.2.6.25.1.1',
  ltmSpdyProfileTable => '1.3.6.1.4.1.3375.2.2.6.25.1.2',
  ltmSpdyProfileEntry => '1.3.6.1.4.1.3375.2.2.6.25.1.2.1',
  ltmSpdyProfileName => '1.3.6.1.4.1.3375.2.2.6.25.1.2.1.1',
  ltmSpdyProfileConfigSource => '1.3.6.1.4.1.3375.2.2.6.25.1.2.1.2',
  ltmSpdyProfileConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmSpdyProfileConfigSource',
  ltmSpdyProfileDefaultName => '1.3.6.1.4.1.3375.2.2.6.25.1.2.1.3',
  ltmSpdyProfileActivationMode => '1.3.6.1.4.1.3375.2.2.6.25.1.2.1.4',
  ltmSpdyProfileActivationModeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmSpdyProfileActivationMode',
  ltmSpdyProfilePriorityHandling => '1.3.6.1.4.1.3375.2.2.6.25.1.2.1.5',
  ltmSpdyProfilePriorityHandlingDefinition => 'F5-BIGIP-LOCAL-MIB::ltmSpdyProfilePriorityHandling',
  ltmSpdyProfileInsertHeader => '1.3.6.1.4.1.3375.2.2.6.25.1.2.1.6',
  ltmSpdyProfileInsertHeaderDefinition => 'F5-BIGIP-LOCAL-MIB::ltmSpdyProfileInsertHeader',
  ltmSpdyProfileInsertHeaderName => '1.3.6.1.4.1.3375.2.2.6.25.1.2.1.7',
  ltmSpdyProfileConcurrentStreamsPerConnection => '1.3.6.1.4.1.3375.2.2.6.25.1.2.1.8',
  ltmSpdyProfileConnectionIdleTimeout => '1.3.6.1.4.1.3375.2.2.6.25.1.2.1.9',
  ltmSpdyProfileReceiveWindow => '1.3.6.1.4.1.3375.2.2.6.25.1.2.1.10',
  ltmSpdyProfileFrameSize => '1.3.6.1.4.1.3375.2.2.6.25.1.2.1.11',
  ltmSpdyProfileWriteSize => '1.3.6.1.4.1.3375.2.2.6.25.1.2.1.12',
  ltmSpdyProfileCompressionLevel => '1.3.6.1.4.1.3375.2.2.6.25.1.2.1.13',
  ltmSpdyProfileCompressionWindowSize => '1.3.6.1.4.1.3375.2.2.6.25.1.2.1.14',
  ltmSpdyProfileProtocolVersions => '1.3.6.1.4.1.3375.2.2.6.25.2',
  ltmSpdyProfileProtocolVersionsNumber => '1.3.6.1.4.1.3375.2.2.6.25.2.1',
  ltmSpdyProfileProtocolVersionsTable => '1.3.6.1.4.1.3375.2.2.6.25.2.2',
  ltmSpdyProfileProtocolVersionsEntry => '1.3.6.1.4.1.3375.2.2.6.25.2.2.1',
  ltmSpdyProfileProtocolVersionsName => '1.3.6.1.4.1.3375.2.2.6.25.2.2.1.1',
  ltmSpdyProfileProtocolVersionsIndex => '1.3.6.1.4.1.3375.2.2.6.25.2.2.1.2',
  ltmSpdyProfileProtocolVersionsProtocolVersions => '1.3.6.1.4.1.3375.2.2.6.25.2.2.1.3',
  ltmSpdyProfileProtocolVersionsProtocolVersionsDefinition => 'F5-BIGIP-LOCAL-MIB::ltmSpdyProfileProtocolVersionsProtocolVersions',
  ltmSpdyProfileStat => '1.3.6.1.4.1.3375.2.2.6.25.3',
  ltmSpdyProfileStatResetStats => '1.3.6.1.4.1.3375.2.2.6.25.3.1',
  ltmSpdyProfileStatNumber => '1.3.6.1.4.1.3375.2.2.6.25.3.2',
  ltmSpdyProfileStatTable => '1.3.6.1.4.1.3375.2.2.6.25.3.3',
  ltmSpdyProfileStatEntry => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1',
  ltmSpdyProfileStatName => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.1',
  ltmSpdyProfileStatConnectionsAccepted => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.2',
  ltmSpdyProfileStatConnectionsCurrent => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.3',
  ltmSpdyProfileStatConnectionsMax => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.4',
  ltmSpdyProfileStatDataFramesReceived => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.5',
  ltmSpdyProfileStatDataFramesSent => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.6',
  ltmSpdyProfileStatFlowsCreated => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.7',
  ltmSpdyProfileStatFlowsCurrent => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.8',
  ltmSpdyProfileStatFlowsMax => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.9',
  ltmSpdyProfileStatGoawayFramesReceived => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.10',
  ltmSpdyProfileStatGoawayFramesSent => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.11',
  ltmSpdyProfileStatHeadersFramesReceived => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.12',
  ltmSpdyProfileStatHeadersFramesSent => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.13',
  ltmSpdyProfileStatHttpRequestBytes => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.14',
  ltmSpdyProfileStatHttpResponseBytes => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.15',
  ltmSpdyProfileStatNoopFramesReceived => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.16',
  ltmSpdyProfileStatNoopFramesSent => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.17',
  ltmSpdyProfileStatPingFramesReceived => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.18',
  ltmSpdyProfileStatPingFramesSent => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.19',
  ltmSpdyProfileStatRstStreamFramesReceived => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.20',
  ltmSpdyProfileStatRstStreamFramesSent => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.21',
  ltmSpdyProfileStatSettingsFramesReceived => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.22',
  ltmSpdyProfileStatSettingsFramesSent => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.23',
  ltmSpdyProfileStatSpdyRequestBytes => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.24',
  ltmSpdyProfileStatSpdyRequestFrames => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.25',
  ltmSpdyProfileStatSpdyResponseBytes => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.26',
  ltmSpdyProfileStatSpdyResponseFrames => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.27',
  ltmSpdyProfileStatSynReplyFramesReceived => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.28',
  ltmSpdyProfileStatSynReplyFramesSent => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.29',
  ltmSpdyProfileStatSynStreamFramesReceived => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.30',
  ltmSpdyProfileStatSynStreamFramesSent => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.31',
  ltmSpdyProfileStatV2StreamsCreated => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.32',
  ltmSpdyProfileStatV2StreamsCurrent => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.33',
  ltmSpdyProfileStatV2StreamsMax => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.34',
  ltmSpdyProfileStatV3StreamsCreated => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.35',
  ltmSpdyProfileStatV3StreamsCurrent => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.36',
  ltmSpdyProfileStatV3StreamsMax => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.37',
  ltmSpdyProfileStatWindowUpdateFramesReceived => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.38',
  ltmSpdyProfileStatWindowUpdateFramesSent => '1.3.6.1.4.1.3375.2.2.6.25.3.3.1.39',
  ltmV6rd => '1.3.6.1.4.1.3375.2.2.6.26',
  ltmV6rdProfile => '1.3.6.1.4.1.3375.2.2.6.26.1',
  ltmV6rdProfileNumber => '1.3.6.1.4.1.3375.2.2.6.26.1.1',
  ltmV6rdProfileTable => '1.3.6.1.4.1.3375.2.2.6.26.1.2',
  ltmV6rdProfileEntry => '1.3.6.1.4.1.3375.2.2.6.26.1.2.1',
  ltmV6rdProfileName => '1.3.6.1.4.1.3375.2.2.6.26.1.2.1.1',
  ltmV6rdProfileConfigSource => '1.3.6.1.4.1.3375.2.2.6.26.1.2.1.2',
  ltmV6rdProfileConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmV6rdProfileConfigSource',
  ltmV6rdProfileDefaultName => '1.3.6.1.4.1.3375.2.2.6.26.1.2.1.3',
  ltmV6rdProfileIpv4prefixType => '1.3.6.1.4.1.3375.2.2.6.26.1.2.1.4',
  ltmV6rdProfileIpv4prefix => '1.3.6.1.4.1.3375.2.2.6.26.1.2.1.5',
  ltmV6rdProfileIpv4prefixlen => '1.3.6.1.4.1.3375.2.2.6.26.1.2.1.6',
  ltmV6rdProfileV6rdprefixType => '1.3.6.1.4.1.3375.2.2.6.26.1.2.1.7',
  ltmV6rdProfileV6rdprefix => '1.3.6.1.4.1.3375.2.2.6.26.1.2.1.8',
  ltmV6rdProfileV6rdprefixlen => '1.3.6.1.4.1.3375.2.2.6.26.1.2.1.9',
  ltmPptp => '1.3.6.1.4.1.3375.2.2.6.27',
  ltmPptpProfile => '1.3.6.1.4.1.3375.2.2.6.27.1',
  ltmPptpProfileNumber => '1.3.6.1.4.1.3375.2.2.6.27.1.1',
  ltmPptpProfileTable => '1.3.6.1.4.1.3375.2.2.6.27.1.2',
  ltmPptpProfileEntry => '1.3.6.1.4.1.3375.2.2.6.27.1.2.1',
  ltmPptpProfileName => '1.3.6.1.4.1.3375.2.2.6.27.1.2.1.1',
  ltmPptpProfileDescription => '1.3.6.1.4.1.3375.2.2.6.27.1.2.1.2',
  ltmPptpProfileConfigSource => '1.3.6.1.4.1.3375.2.2.6.27.1.2.1.3',
  ltmPptpProfileConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPptpProfileConfigSource',
  ltmPptpProfileDefaultName => '1.3.6.1.4.1.3375.2.2.6.27.1.2.1.4',
  ltmPptpProfileLogServerIp => '1.3.6.1.4.1.3375.2.2.6.27.1.2.1.5',
  ltmPptpProfileLogServerIpDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPptpProfileLogServerIp',
  ltmPptpProfileLogPublisher => '1.3.6.1.4.1.3375.2.2.6.27.1.2.1.6',
  ltmPptpProfileStat => '1.3.6.1.4.1.3375.2.2.6.27.2',
  ltmPptpProfileStatResetStats => '1.3.6.1.4.1.3375.2.2.6.27.2.1',
  ltmPptpProfileStatNumber => '1.3.6.1.4.1.3375.2.2.6.27.2.2',
  ltmPptpProfileStatTable => '1.3.6.1.4.1.3375.2.2.6.27.2.3',
  ltmPptpProfileStatEntry => '1.3.6.1.4.1.3375.2.2.6.27.2.3.1',
  ltmPptpProfileStatName => '1.3.6.1.4.1.3375.2.2.6.27.2.3.1.1',
  ltmPptpProfileStatStartRequests => '1.3.6.1.4.1.3375.2.2.6.27.2.3.1.2',
  ltmPptpProfileStatStartReplies => '1.3.6.1.4.1.3375.2.2.6.27.2.3.1.3',
  ltmPptpProfileStatStopRequests => '1.3.6.1.4.1.3375.2.2.6.27.2.3.1.4',
  ltmPptpProfileStatStopReplies => '1.3.6.1.4.1.3375.2.2.6.27.2.3.1.5',
  ltmPptpProfileStatEchoRequests => '1.3.6.1.4.1.3375.2.2.6.27.2.3.1.6',
  ltmPptpProfileStatEchoReplies => '1.3.6.1.4.1.3375.2.2.6.27.2.3.1.7',
  ltmPptpProfileStatOutgoingCallRequests => '1.3.6.1.4.1.3375.2.2.6.27.2.3.1.8',
  ltmPptpProfileStatOutgoingCallReplies => '1.3.6.1.4.1.3375.2.2.6.27.2.3.1.9',
  ltmPptpProfileStatCallClearRequests => '1.3.6.1.4.1.3375.2.2.6.27.2.3.1.10',
  ltmPptpProfileStatCallDisconnectNotifies => '1.3.6.1.4.1.3375.2.2.6.27.2.3.1.11',
  ltmPptpProfileStatWanErrorNotifies => '1.3.6.1.4.1.3375.2.2.6.27.2.3.1.12',
  ltmPptpProfileStatSetLinkInfo => '1.3.6.1.4.1.3375.2.2.6.27.2.3.1.13',
  ltmPptpProfileStatActiveCalls => '1.3.6.1.4.1.3375.2.2.6.27.2.3.1.14',
  ltmPptpProfileStatTotalCalls => '1.3.6.1.4.1.3375.2.2.6.27.2.3.1.15',
  ltmPptpProfileStatFailedCalls => '1.3.6.1.4.1.3375.2.2.6.27.2.3.1.16',
  ltmPcp => '1.3.6.1.4.1.3375.2.2.6.28',
  ltmPcpPrefix => '1.3.6.1.4.1.3375.2.2.6.28.1',
  ltmPcpPrefixNumber => '1.3.6.1.4.1.3375.2.2.6.28.1.1',
  ltmPcpPrefixTable => '1.3.6.1.4.1.3375.2.2.6.28.1.2',
  ltmPcpPrefixEntry => '1.3.6.1.4.1.3375.2.2.6.28.1.2.1',
  ltmPcpPrefixName => '1.3.6.1.4.1.3375.2.2.6.28.1.2.1.1',
  ltmPcpPrefixAddrType => '1.3.6.1.4.1.3375.2.2.6.28.1.2.1.2',
  ltmPcpPrefixAddr => '1.3.6.1.4.1.3375.2.2.6.28.1.2.1.3',
  ltmPcpProfile => '1.3.6.1.4.1.3375.2.2.6.28.2',
  ltmPcpProfileNumber => '1.3.6.1.4.1.3375.2.2.6.28.2.1',
  ltmPcpProfileTable => '1.3.6.1.4.1.3375.2.2.6.28.2.2',
  ltmPcpProfileEntry => '1.3.6.1.4.1.3375.2.2.6.28.2.2.1',
  ltmPcpProfileName => '1.3.6.1.4.1.3375.2.2.6.28.2.2.1.1',
  ltmPcpProfileConfigSource => '1.3.6.1.4.1.3375.2.2.6.28.2.2.1.2',
  ltmPcpProfileConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPcpProfileConfigSource',
  ltmPcpProfileDefaultName => '1.3.6.1.4.1.3375.2.2.6.28.2.2.1.3',
  ltmPcpProfileListeningPort => '1.3.6.1.4.1.3375.2.2.6.28.2.2.1.4',
  ltmPcpProfileMulticastPort => '1.3.6.1.4.1.3375.2.2.6.28.2.2.1.5',
  ltmPcpProfileMinMappingLifetime => '1.3.6.1.4.1.3375.2.2.6.28.2.2.1.6',
  ltmPcpProfileMaxMappingLifetime => '1.3.6.1.4.1.3375.2.2.6.28.2.2.1.7',
  ltmPcpProfileMapRecycleDelay => '1.3.6.1.4.1.3375.2.2.6.28.2.2.1.8',
  ltmPcpProfileMapLimitPerClient => '1.3.6.1.4.1.3375.2.2.6.28.2.2.1.9',
  ltmPcpProfileMapFilterLimit => '1.3.6.1.4.1.3375.2.2.6.28.2.2.1.10',
  ltmPcpProfileThirdPartyOption => '1.3.6.1.4.1.3375.2.2.6.28.2.2.1.11',
  ltmPcpProfileThirdPartyOptionDefinition => 'F5-BIGIP-LOCAL-MIB::ltmPcpProfileThirdPartyOption',
  ltmPcpProfileRuleName => '1.3.6.1.4.1.3375.2.2.6.28.2.2.1.12',
  ltmPcpPrefixProfilePcp => '1.3.6.1.4.1.3375.2.2.6.28.3',
  ltmPcpPrefixProfilePcpNumber => '1.3.6.1.4.1.3375.2.2.6.28.3.1',
  ltmPcpPrefixProfilePcpTable => '1.3.6.1.4.1.3375.2.2.6.28.3.2',
  ltmPcpPrefixProfilePcpEntry => '1.3.6.1.4.1.3375.2.2.6.28.3.2.1',
  ltmPcpPrefixProfilePcpPcpPrefixName => '1.3.6.1.4.1.3375.2.2.6.28.3.2.1.1',
  ltmPcpPrefixProfilePcpName => '1.3.6.1.4.1.3375.2.2.6.28.3.2.1.2',
  ltmPcpPrefixProfilePcpPrefixAddressType => '1.3.6.1.4.1.3375.2.2.6.28.3.2.1.3',
  ltmPcpPrefixProfilePcpPrefixAddress => '1.3.6.1.4.1.3375.2.2.6.28.3.2.1.4',
  ltmPcpProfileStat => '1.3.6.1.4.1.3375.2.2.6.28.4',
  ltmPcpProfileStatResetStats => '1.3.6.1.4.1.3375.2.2.6.28.4.1',
  ltmPcpProfileStatNumber => '1.3.6.1.4.1.3375.2.2.6.28.4.2',
  ltmPcpProfileStatTable => '1.3.6.1.4.1.3375.2.2.6.28.4.3',
  ltmPcpProfileStatEntry => '1.3.6.1.4.1.3375.2.2.6.28.4.3.1',
  ltmPcpProfileStatName => '1.3.6.1.4.1.3375.2.2.6.28.4.3.1.1',
  ltmPcpProfileStatPcpAnnounceRequests => '1.3.6.1.4.1.3375.2.2.6.28.4.3.1.2',
  ltmPcpProfileStatPcpAnnounceResponsesUcast => '1.3.6.1.4.1.3375.2.2.6.28.4.3.1.3',
  ltmPcpProfileStatPcpAnnounceResponsesMulticast => '1.3.6.1.4.1.3375.2.2.6.28.4.3.1.4',
  ltmPcpProfileStatPcpMapRequests => '1.3.6.1.4.1.3375.2.2.6.28.4.3.1.5',
  ltmPcpProfileStatPcpMapResponses => '1.3.6.1.4.1.3375.2.2.6.28.4.3.1.6',
  ltmPcpProfileStatPcpPeerRequests => '1.3.6.1.4.1.3375.2.2.6.28.4.3.1.7',
  ltmPcpProfileStatPcpPeerResponses => '1.3.6.1.4.1.3375.2.2.6.28.4.3.1.8',
  ltmPcpProfileStatPcpErrorsInvalidRequest => '1.3.6.1.4.1.3375.2.2.6.28.4.3.1.9',
  ltmPcpProfileStatPcpErrorsUnavailableResource => '1.3.6.1.4.1.3375.2.2.6.28.4.3.1.10',
  ltmPcpProfileStatPcpErrorsNotAuthorized => '1.3.6.1.4.1.3375.2.2.6.28.4.3.1.11',
  ltmPcpProfileStatPcpErrorsOther => '1.3.6.1.4.1.3375.2.2.6.28.4.3.1.12',
  ltmAlgLog => '1.3.6.1.4.1.3375.2.2.6.29',
  ltmAlgLogProfile => '1.3.6.1.4.1.3375.2.2.6.29.1',
  ltmAlgLogProfileNumber => '1.3.6.1.4.1.3375.2.2.6.29.1.1',
  ltmAlgLogProfileTable => '1.3.6.1.4.1.3375.2.2.6.29.1.2',
  ltmAlgLogProfileEntry => '1.3.6.1.4.1.3375.2.2.6.29.1.2.1',
  ltmAlgLogProfileName => '1.3.6.1.4.1.3375.2.2.6.29.1.2.1.1',
  ltmAlgLogProfileDescription => '1.3.6.1.4.1.3375.2.2.6.29.1.2.1.2',
  ltmAlgLogProfileConfigSource => '1.3.6.1.4.1.3375.2.2.6.29.1.2.1.3',
  ltmAlgLogProfileConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmAlgLogProfileConfigSource',
  ltmAlgLogProfileDefaultName => '1.3.6.1.4.1.3375.2.2.6.29.1.2.1.4',
  ltmAlgLogProfileStartControlAction => '1.3.6.1.4.1.3375.2.2.6.29.1.2.1.5',
  ltmAlgLogProfileStartControlActionDefinition => 'F5-BIGIP-LOCAL-MIB::ltmAlgLogProfileStartControlAction',
  ltmAlgLogProfileEndControlAction => '1.3.6.1.4.1.3375.2.2.6.29.1.2.1.6',
  ltmAlgLogProfileEndControlActionDefinition => 'F5-BIGIP-LOCAL-MIB::ltmAlgLogProfileEndControlAction',
  ltmAlgLogProfileStartDataAction => '1.3.6.1.4.1.3375.2.2.6.29.1.2.1.7',
  ltmAlgLogProfileStartDataActionDefinition => 'F5-BIGIP-LOCAL-MIB::ltmAlgLogProfileStartDataAction',
  ltmAlgLogProfileEndDataAction => '1.3.6.1.4.1.3375.2.2.6.29.1.2.1.8',
  ltmAlgLogProfileEndDataActionDefinition => 'F5-BIGIP-LOCAL-MIB::ltmAlgLogProfileEndDataAction',
  ltmAlgLogProfileInboundAction => '1.3.6.1.4.1.3375.2.2.6.29.1.2.1.9',
  ltmAlgLogProfileInboundActionDefinition => 'F5-BIGIP-LOCAL-MIB::ltmAlgLogProfileInboundAction',
  ltmAlgLogProfileStartControlElements => '1.3.6.1.4.1.3375.2.2.6.29.2',
  ltmAlgLogProfileStartControlElementsNumber => '1.3.6.1.4.1.3375.2.2.6.29.2.1',
  ltmAlgLogProfileStartControlElementsTable => '1.3.6.1.4.1.3375.2.2.6.29.2.2',
  ltmAlgLogProfileStartControlElementsEntry => '1.3.6.1.4.1.3375.2.2.6.29.2.2.1',
  ltmAlgLogProfileStartControlElementsName => '1.3.6.1.4.1.3375.2.2.6.29.2.2.1.1',
  ltmAlgLogProfileStartControlElementsIndex => '1.3.6.1.4.1.3375.2.2.6.29.2.2.1.2',
  ltmAlgLogProfileStartControlElementsElements => '1.3.6.1.4.1.3375.2.2.6.29.2.2.1.3',
  ltmAlgLogProfileStartControlElementsElementsDefinition => 'F5-BIGIP-LOCAL-MIB::ltmAlgLogProfileStartControlElementsElements',
  ltmAlgLogProfileEndControlElements => '1.3.6.1.4.1.3375.2.2.6.29.3',
  ltmAlgLogProfileEndControlElementsNumber => '1.3.6.1.4.1.3375.2.2.6.29.3.1',
  ltmAlgLogProfileEndControlElementsTable => '1.3.6.1.4.1.3375.2.2.6.29.3.2',
  ltmAlgLogProfileEndControlElementsEntry => '1.3.6.1.4.1.3375.2.2.6.29.3.2.1',
  ltmAlgLogProfileEndControlElementsName => '1.3.6.1.4.1.3375.2.2.6.29.3.2.1.1',
  ltmAlgLogProfileEndControlElementsIndex => '1.3.6.1.4.1.3375.2.2.6.29.3.2.1.2',
  ltmAlgLogProfileEndControlElementsElements => '1.3.6.1.4.1.3375.2.2.6.29.3.2.1.3',
  ltmAlgLogProfileEndControlElementsElementsDefinition => 'F5-BIGIP-LOCAL-MIB::ltmAlgLogProfileEndControlElementsElements',
  ltmAlgLogProfileStartDataElements => '1.3.6.1.4.1.3375.2.2.6.29.4',
  ltmAlgLogProfileStartDataElementsNumber => '1.3.6.1.4.1.3375.2.2.6.29.4.1',
  ltmAlgLogProfileStartDataElementsTable => '1.3.6.1.4.1.3375.2.2.6.29.4.2',
  ltmAlgLogProfileStartDataElementsEntry => '1.3.6.1.4.1.3375.2.2.6.29.4.2.1',
  ltmAlgLogProfileStartDataElementsName => '1.3.6.1.4.1.3375.2.2.6.29.4.2.1.1',
  ltmAlgLogProfileStartDataElementsIndex => '1.3.6.1.4.1.3375.2.2.6.29.4.2.1.2',
  ltmAlgLogProfileStartDataElementsElements => '1.3.6.1.4.1.3375.2.2.6.29.4.2.1.3',
  ltmAlgLogProfileStartDataElementsElementsDefinition => 'F5-BIGIP-LOCAL-MIB::ltmAlgLogProfileStartDataElementsElements',
  ltmAlgLogProfileEndDataElements => '1.3.6.1.4.1.3375.2.2.6.29.5',
  ltmAlgLogProfileEndDataElementsNumber => '1.3.6.1.4.1.3375.2.2.6.29.5.1',
  ltmAlgLogProfileEndDataElementsTable => '1.3.6.1.4.1.3375.2.2.6.29.5.2',
  ltmAlgLogProfileEndDataElementsEntry => '1.3.6.1.4.1.3375.2.2.6.29.5.2.1',
  ltmAlgLogProfileEndDataElementsName => '1.3.6.1.4.1.3375.2.2.6.29.5.2.1.1',
  ltmAlgLogProfileEndDataElementsIndex => '1.3.6.1.4.1.3375.2.2.6.29.5.2.1.2',
  ltmAlgLogProfileEndDataElementsElements => '1.3.6.1.4.1.3375.2.2.6.29.5.2.1.3',
  ltmAlgLogProfileEndDataElementsElementsDefinition => 'F5-BIGIP-LOCAL-MIB::ltmAlgLogProfileEndDataElementsElements',
  ltmLsnLog => '1.3.6.1.4.1.3375.2.2.6.30',
  ltmLsnLogProfile => '1.3.6.1.4.1.3375.2.2.6.30.1',
  ltmLsnLogProfileNumber => '1.3.6.1.4.1.3375.2.2.6.30.1.1',
  ltmLsnLogProfileTable => '1.3.6.1.4.1.3375.2.2.6.30.1.2',
  ltmLsnLogProfileEntry => '1.3.6.1.4.1.3375.2.2.6.30.1.2.1',
  ltmLsnLogProfileName => '1.3.6.1.4.1.3375.2.2.6.30.1.2.1.1',
  ltmLsnLogProfileDescription => '1.3.6.1.4.1.3375.2.2.6.30.1.2.1.2',
  ltmLsnLogProfileConfigSource => '1.3.6.1.4.1.3375.2.2.6.30.1.2.1.3',
  ltmLsnLogProfileConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmLsnLogProfileConfigSource',
  ltmLsnLogProfileDefaultName => '1.3.6.1.4.1.3375.2.2.6.30.1.2.1.4',
  ltmLsnLogProfileStartOutboundAction => '1.3.6.1.4.1.3375.2.2.6.30.1.2.1.5',
  ltmLsnLogProfileStartOutboundActionDefinition => 'F5-BIGIP-LOCAL-MIB::ltmLsnLogProfileStartOutboundAction',
  ltmLsnLogProfileEndOutboundAction => '1.3.6.1.4.1.3375.2.2.6.30.1.2.1.6',
  ltmLsnLogProfileEndOutboundActionDefinition => 'F5-BIGIP-LOCAL-MIB::ltmLsnLogProfileEndOutboundAction',
  ltmLsnLogProfileStartInboundAction => '1.3.6.1.4.1.3375.2.2.6.30.1.2.1.7',
  ltmLsnLogProfileStartInboundActionDefinition => 'F5-BIGIP-LOCAL-MIB::ltmLsnLogProfileStartInboundAction',
  ltmLsnLogProfileEndInboundAction => '1.3.6.1.4.1.3375.2.2.6.30.1.2.1.8',
  ltmLsnLogProfileEndInboundActionDefinition => 'F5-BIGIP-LOCAL-MIB::ltmLsnLogProfileEndInboundAction',
  ltmLsnLogProfileQuotaExceededAction => '1.3.6.1.4.1.3375.2.2.6.30.1.2.1.9',
  ltmLsnLogProfileQuotaExceededActionDefinition => 'F5-BIGIP-LOCAL-MIB::ltmLsnLogProfileQuotaExceededAction',
  ltmLsnLogProfileErrorsAction => '1.3.6.1.4.1.3375.2.2.6.30.1.2.1.10',
  ltmLsnLogProfileErrorsActionDefinition => 'F5-BIGIP-LOCAL-MIB::ltmLsnLogProfileErrorsAction',
  ltmLsnLogProfileStartOutboundElements => '1.3.6.1.4.1.3375.2.2.6.30.2',
  ltmLsnLogProfileStartOutboundElementsNumber => '1.3.6.1.4.1.3375.2.2.6.30.2.1',
  ltmLsnLogProfileStartOutboundElementsTable => '1.3.6.1.4.1.3375.2.2.6.30.2.2',
  ltmLsnLogProfileStartOutboundElementsEntry => '1.3.6.1.4.1.3375.2.2.6.30.2.2.1',
  ltmLsnLogProfileStartOutboundElementsName => '1.3.6.1.4.1.3375.2.2.6.30.2.2.1.1',
  ltmLsnLogProfileStartOutboundElementsIndex => '1.3.6.1.4.1.3375.2.2.6.30.2.2.1.2',
  ltmLsnLogProfileStartOutboundElementsElements => '1.3.6.1.4.1.3375.2.2.6.30.2.2.1.3',
  ltmLsnLogProfileStartOutboundElementsElementsDefinition => 'F5-BIGIP-LOCAL-MIB::ltmLsnLogProfileStartOutboundElementsElements',
  ltmLsnLogProfileEndOutboundElements => '1.3.6.1.4.1.3375.2.2.6.30.3',
  ltmLsnLogProfileEndOutboundElementsNumber => '1.3.6.1.4.1.3375.2.2.6.30.3.1',
  ltmLsnLogProfileEndOutboundElementsTable => '1.3.6.1.4.1.3375.2.2.6.30.3.2',
  ltmLsnLogProfileEndOutboundElementsEntry => '1.3.6.1.4.1.3375.2.2.6.30.3.2.1',
  ltmLsnLogProfileEndOutboundElementsName => '1.3.6.1.4.1.3375.2.2.6.30.3.2.1.1',
  ltmLsnLogProfileEndOutboundElementsIndex => '1.3.6.1.4.1.3375.2.2.6.30.3.2.1.2',
  ltmLsnLogProfileEndOutboundElementsElements => '1.3.6.1.4.1.3375.2.2.6.30.3.2.1.3',
  ltmLsnLogProfileEndOutboundElementsElementsDefinition => 'F5-BIGIP-LOCAL-MIB::ltmLsnLogProfileEndOutboundElementsElements',
  ltmRateFilters => '1.3.6.1.4.1.3375.2.2.7',
  ltmRateFilter => '1.3.6.1.4.1.3375.2.2.7.1',
  ltmRateFilterNumber => '1.3.6.1.4.1.3375.2.2.7.1.1',
  ltmRateFilterTable => '1.3.6.1.4.1.3375.2.2.7.1.2',
  ltmRateFilterEntry => '1.3.6.1.4.1.3375.2.2.7.1.2.1',
  ltmRateFilterCname => '1.3.6.1.4.1.3375.2.2.7.1.2.1.1',
  ltmRateFilterRate => '1.3.6.1.4.1.3375.2.2.7.1.2.1.2',
  ltmRateFilterCeil => '1.3.6.1.4.1.3375.2.2.7.1.2.1.3',
  ltmRateFilterBurst => '1.3.6.1.4.1.3375.2.2.7.1.2.1.4',
  ltmRateFilterPname => '1.3.6.1.4.1.3375.2.2.7.1.2.1.5',
  ltmRateFilterQtype => '1.3.6.1.4.1.3375.2.2.7.1.2.1.6',
  ltmRateFilterQtypeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmRateFilterQtype',
  ltmRateFilterDirection => '1.3.6.1.4.1.3375.2.2.7.1.2.1.7',
  ltmRateFilterDirectionDefinition => 'F5-BIGIP-LOCAL-MIB::ltmRateFilterDirection',
  ltmRateFilterStat => '1.3.6.1.4.1.3375.2.2.7.2',
  ltmRateFilterStatResetStats => '1.3.6.1.4.1.3375.2.2.7.2.1',
  ltmRateFilterStatNumber => '1.3.6.1.4.1.3375.2.2.7.2.2',
  ltmRateFilterStatTable => '1.3.6.1.4.1.3375.2.2.7.2.3',
  ltmRateFilterStatEntry => '1.3.6.1.4.1.3375.2.2.7.2.3.1',
  ltmRateFilterStatCname => '1.3.6.1.4.1.3375.2.2.7.2.3.1.1',
  ltmRateFilterStatRateBytes => '1.3.6.1.4.1.3375.2.2.7.2.3.1.2',
  ltmRateFilterStatBurstBytes => '1.3.6.1.4.1.3375.2.2.7.2.3.1.3',
  ltmRateFilterStatDroppedBytes => '1.3.6.1.4.1.3375.2.2.7.2.3.1.4',
  ltmRateFilterStatBytesQueued => '1.3.6.1.4.1.3375.2.2.7.2.3.1.5',
  ltmRateFilterStatBytesPerSec => '1.3.6.1.4.1.3375.2.2.7.2.3.1.6',
  ltmRateFilterStatDropTailPkts => '1.3.6.1.4.1.3375.2.2.7.2.3.1.7',
  ltmRateFilterStatDropTailBytes => '1.3.6.1.4.1.3375.2.2.7.2.3.1.8',
  ltmRateFilterStatDropRandPkts => '1.3.6.1.4.1.3375.2.2.7.2.3.1.9',
  ltmRateFilterStatDropRandBytes => '1.3.6.1.4.1.3375.2.2.7.2.3.1.10',
  ltmRateFilterStatDropTotPkts => '1.3.6.1.4.1.3375.2.2.7.2.3.1.11',
  ltmRateFilterStatDropTotBytes => '1.3.6.1.4.1.3375.2.2.7.2.3.1.12',
  ltmRules => '1.3.6.1.4.1.3375.2.2.8',
  ltmRule => '1.3.6.1.4.1.3375.2.2.8.1',
  ltmRuleNumber => '1.3.6.1.4.1.3375.2.2.8.1.1',
  ltmRuleTable => '1.3.6.1.4.1.3375.2.2.8.1.2',
  ltmRuleEntry => '1.3.6.1.4.1.3375.2.2.8.1.2.1',
  ltmRuleName => '1.3.6.1.4.1.3375.2.2.8.1.2.1.1',
  ltmRuleDefinition => '1.3.6.1.4.1.3375.2.2.8.1.2.1.2',
  ltmRuleConfigSource => '1.3.6.1.4.1.3375.2.2.8.1.2.1.3',
  ltmRuleConfigSourceDefinition => 'F5-BIGIP-LOCAL-MIB::ltmRuleConfigSource',
  ltmRuleEvent => '1.3.6.1.4.1.3375.2.2.8.2',
  ltmRuleEventNumber => '1.3.6.1.4.1.3375.2.2.8.2.1',
  ltmRuleEventTable => '1.3.6.1.4.1.3375.2.2.8.2.2',
  ltmRuleEventEntry => '1.3.6.1.4.1.3375.2.2.8.2.2.1',
  ltmRuleEventName => '1.3.6.1.4.1.3375.2.2.8.2.2.1.1',
  ltmRuleEventEventType => '1.3.6.1.4.1.3375.2.2.8.2.2.1.2',
  ltmRuleEventPriority => '1.3.6.1.4.1.3375.2.2.8.2.2.1.3',
  ltmRuleEventScript => '1.3.6.1.4.1.3375.2.2.8.2.2.1.4',
  ltmRuleEventStat => '1.3.6.1.4.1.3375.2.2.8.3',
  ltmRuleEventStatResetStats => '1.3.6.1.4.1.3375.2.2.8.3.1',
  ltmRuleEventStatNumber => '1.3.6.1.4.1.3375.2.2.8.3.2',
  ltmRuleEventStatTable => '1.3.6.1.4.1.3375.2.2.8.3.3',
  ltmRuleEventStatEntry => '1.3.6.1.4.1.3375.2.2.8.3.3.1',
  ltmRuleEventStatName => '1.3.6.1.4.1.3375.2.2.8.3.3.1.1',
  ltmRuleEventStatEventType => '1.3.6.1.4.1.3375.2.2.8.3.3.1.2',
  ltmRuleEventStatPriority => '1.3.6.1.4.1.3375.2.2.8.3.3.1.3',
  ltmRuleEventStatFailures => '1.3.6.1.4.1.3375.2.2.8.3.3.1.4',
  ltmRuleEventStatAborts => '1.3.6.1.4.1.3375.2.2.8.3.3.1.5',
  ltmRuleEventStatTotalExecutions => '1.3.6.1.4.1.3375.2.2.8.3.3.1.6',
  ltmRuleEventStatAvgCycles => '1.3.6.1.4.1.3375.2.2.8.3.3.1.7',
  ltmRuleEventStatMaxCycles => '1.3.6.1.4.1.3375.2.2.8.3.3.1.8',
  ltmRuleEventStatMinCycles => '1.3.6.1.4.1.3375.2.2.8.3.3.1.9',
  ltmSNATs => '1.3.6.1.4.1.3375.2.2.9',
  ltmSnat => '1.3.6.1.4.1.3375.2.2.9.1',
  ltmSnatNumber => '1.3.6.1.4.1.3375.2.2.9.1.1',
  ltmSnatTable => '1.3.6.1.4.1.3375.2.2.9.1.2',
  ltmSnatEntry => '1.3.6.1.4.1.3375.2.2.9.1.2.1',
  ltmSnatName => '1.3.6.1.4.1.3375.2.2.9.1.2.1.1',
  ltmSnatSfFlags => '1.3.6.1.4.1.3375.2.2.9.1.2.1.2',
  ltmSnatSfFlagsDefinition => 'F5-BIGIP-LOCAL-MIB::ltmSnatSfFlags',
  ltmSnatType => '1.3.6.1.4.1.3375.2.2.9.1.2.1.3',
  ltmSnatTypeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmSnatType',
  ltmSnatTransAddrType => '1.3.6.1.4.1.3375.2.2.9.1.2.1.4',
  ltmSnatTransAddr => '1.3.6.1.4.1.3375.2.2.9.1.2.1.5',
  ltmSnatSnatpoolName => '1.3.6.1.4.1.3375.2.2.9.1.2.1.6',
  ltmSnatListedEnabledVlans => '1.3.6.1.4.1.3375.2.2.9.1.2.1.7',
  ltmSnatListedEnabledVlansDefinition => 'F5-BIGIP-LOCAL-MIB::ltmSnatListedEnabledVlans',
  ltmSnatTransAddrName => '1.3.6.1.4.1.3375.2.2.9.1.2.1.8',
  ltmSnatStat => '1.3.6.1.4.1.3375.2.2.9.2',
  ltmSnatStatResetStats => '1.3.6.1.4.1.3375.2.2.9.2.1',
  ltmSnatStatNumber => '1.3.6.1.4.1.3375.2.2.9.2.2',
  ltmSnatStatTable => '1.3.6.1.4.1.3375.2.2.9.2.3',
  ltmSnatStatEntry => '1.3.6.1.4.1.3375.2.2.9.2.3.1',
  ltmSnatStatName => '1.3.6.1.4.1.3375.2.2.9.2.3.1.1',
  ltmSnatStatClientPktsIn => '1.3.6.1.4.1.3375.2.2.9.2.3.1.2',
  ltmSnatStatClientBytesIn => '1.3.6.1.4.1.3375.2.2.9.2.3.1.3',
  ltmSnatStatClientPktsOut => '1.3.6.1.4.1.3375.2.2.9.2.3.1.4',
  ltmSnatStatClientBytesOut => '1.3.6.1.4.1.3375.2.2.9.2.3.1.5',
  ltmSnatStatClientMaxConns => '1.3.6.1.4.1.3375.2.2.9.2.3.1.6',
  ltmSnatStatClientTotConns => '1.3.6.1.4.1.3375.2.2.9.2.3.1.7',
  ltmSnatStatClientCurConns => '1.3.6.1.4.1.3375.2.2.9.2.3.1.8',
  ltmSnatVlan => '1.3.6.1.4.1.3375.2.2.9.3',
  ltmSnatVlanNumber => '1.3.6.1.4.1.3375.2.2.9.3.1',
  ltmSnatVlanTable => '1.3.6.1.4.1.3375.2.2.9.3.2',
  ltmSnatVlanEntry => '1.3.6.1.4.1.3375.2.2.9.3.2.1',
  ltmSnatVlanSnatName => '1.3.6.1.4.1.3375.2.2.9.3.2.1.1',
  ltmSnatVlanVlanName => '1.3.6.1.4.1.3375.2.2.9.3.2.1.2',
  ltmSnatOrigAddr => '1.3.6.1.4.1.3375.2.2.9.4',
  ltmSnatOrigAddrNumber => '1.3.6.1.4.1.3375.2.2.9.4.1',
  ltmSnatOrigAddrTable => '1.3.6.1.4.1.3375.2.2.9.4.2',
  ltmSnatOrigAddrEntry => '1.3.6.1.4.1.3375.2.2.9.4.2.1',
  ltmSnatOrigAddrSnatName => '1.3.6.1.4.1.3375.2.2.9.4.2.1.1',
  ltmSnatOrigAddrAddrType => '1.3.6.1.4.1.3375.2.2.9.4.2.1.2',
  ltmSnatOrigAddrAddr => '1.3.6.1.4.1.3375.2.2.9.4.2.1.3',
  ltmSnatOrigAddrWildmaskType => '1.3.6.1.4.1.3375.2.2.9.4.2.1.4',
  ltmSnatOrigAddrWildmask => '1.3.6.1.4.1.3375.2.2.9.4.2.1.5',
  ltmTransAddr => '1.3.6.1.4.1.3375.2.2.9.5',
  ltmTransAddrNumber => '1.3.6.1.4.1.3375.2.2.9.5.1',
  ltmTransAddrTable => '1.3.6.1.4.1.3375.2.2.9.5.2',
  ltmTransAddrEntry => '1.3.6.1.4.1.3375.2.2.9.5.2.1',
  ltmTransAddrAddrType => '1.3.6.1.4.1.3375.2.2.9.5.2.1.1',
  ltmTransAddrAddr => '1.3.6.1.4.1.3375.2.2.9.5.2.1.2',
  ltmTransAddrEnabled => '1.3.6.1.4.1.3375.2.2.9.5.2.1.3',
  ltmTransAddrEnabledDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTransAddrEnabled',
  ltmTransAddrConnLimit => '1.3.6.1.4.1.3375.2.2.9.5.2.1.4',
  ltmTransAddrTcpIdleTimeout => '1.3.6.1.4.1.3375.2.2.9.5.2.1.5',
  ltmTransAddrUdpIdleTimeout => '1.3.6.1.4.1.3375.2.2.9.5.2.1.6',
  ltmTransAddrIpIdleTimeout => '1.3.6.1.4.1.3375.2.2.9.5.2.1.7',
  ltmTransAddrArpEnabled => '1.3.6.1.4.1.3375.2.2.9.5.2.1.8',
  ltmTransAddrArpEnabledDefinition => 'F5-BIGIP-LOCAL-MIB::ltmTransAddrArpEnabled',
  ltmTransAddrUnitId => '1.3.6.1.4.1.3375.2.2.9.5.2.1.9',
  ltmTransAddrName => '1.3.6.1.4.1.3375.2.2.9.5.2.1.10',
  ltmTransAddrStat => '1.3.6.1.4.1.3375.2.2.9.6',
  ltmTransAddrStatResetStats => '1.3.6.1.4.1.3375.2.2.9.6.1',
  ltmTransAddrStatNumber => '1.3.6.1.4.1.3375.2.2.9.6.2',
  ltmTransAddrStatTable => '1.3.6.1.4.1.3375.2.2.9.6.3',
  ltmTransAddrStatEntry => '1.3.6.1.4.1.3375.2.2.9.6.3.1',
  ltmTransAddrStatAddrType => '1.3.6.1.4.1.3375.2.2.9.6.3.1.1',
  ltmTransAddrStatAddr => '1.3.6.1.4.1.3375.2.2.9.6.3.1.2',
  ltmTransAddrStatServerPktsIn => '1.3.6.1.4.1.3375.2.2.9.6.3.1.3',
  ltmTransAddrStatServerBytesIn => '1.3.6.1.4.1.3375.2.2.9.6.3.1.4',
  ltmTransAddrStatServerPktsOut => '1.3.6.1.4.1.3375.2.2.9.6.3.1.5',
  ltmTransAddrStatServerBytesOut => '1.3.6.1.4.1.3375.2.2.9.6.3.1.6',
  ltmTransAddrStatServerMaxConns => '1.3.6.1.4.1.3375.2.2.9.6.3.1.7',
  ltmTransAddrStatServerTotConns => '1.3.6.1.4.1.3375.2.2.9.6.3.1.8',
  ltmTransAddrStatServerCurConns => '1.3.6.1.4.1.3375.2.2.9.6.3.1.9',
  ltmTransAddrStatName => '1.3.6.1.4.1.3375.2.2.9.6.3.1.10',
  ltmSnatPool => '1.3.6.1.4.1.3375.2.2.9.7',
  ltmSnatPoolNumber => '1.3.6.1.4.1.3375.2.2.9.7.1',
  ltmSnatPoolTable => '1.3.6.1.4.1.3375.2.2.9.7.2',
  ltmSnatPoolEntry => '1.3.6.1.4.1.3375.2.2.9.7.2.1',
  ltmSnatPoolName => '1.3.6.1.4.1.3375.2.2.9.7.2.1.1',
  ltmSnatPoolStat => '1.3.6.1.4.1.3375.2.2.9.8',
  ltmSnatPoolStatResetStats => '1.3.6.1.4.1.3375.2.2.9.8.1',
  ltmSnatPoolStatNumber => '1.3.6.1.4.1.3375.2.2.9.8.2',
  ltmSnatPoolStatTable => '1.3.6.1.4.1.3375.2.2.9.8.3',
  ltmSnatPoolStatEntry => '1.3.6.1.4.1.3375.2.2.9.8.3.1',
  ltmSnatPoolStatName => '1.3.6.1.4.1.3375.2.2.9.8.3.1.1',
  ltmSnatPoolStatServerPktsIn => '1.3.6.1.4.1.3375.2.2.9.8.3.1.2',
  ltmSnatPoolStatServerBytesIn => '1.3.6.1.4.1.3375.2.2.9.8.3.1.3',
  ltmSnatPoolStatServerPktsOut => '1.3.6.1.4.1.3375.2.2.9.8.3.1.4',
  ltmSnatPoolStatServerBytesOut => '1.3.6.1.4.1.3375.2.2.9.8.3.1.5',
  ltmSnatPoolStatServerMaxConns => '1.3.6.1.4.1.3375.2.2.9.8.3.1.6',
  ltmSnatPoolStatServerTotConns => '1.3.6.1.4.1.3375.2.2.9.8.3.1.7',
  ltmSnatPoolStatServerCurConns => '1.3.6.1.4.1.3375.2.2.9.8.3.1.8',
  ltmSnatpoolTransAddr => '1.3.6.1.4.1.3375.2.2.9.9',
  ltmSnatpoolTransAddrNumber => '1.3.6.1.4.1.3375.2.2.9.9.1',
  ltmSnatpoolTransAddrTable => '1.3.6.1.4.1.3375.2.2.9.9.2',
  ltmSnatpoolTransAddrEntry => '1.3.6.1.4.1.3375.2.2.9.9.2.1',
  ltmSnatpoolTransAddrSnatpoolName => '1.3.6.1.4.1.3375.2.2.9.9.2.1.1',
  ltmSnatpoolTransAddrTransAddrType => '1.3.6.1.4.1.3375.2.2.9.9.2.1.2',
  ltmSnatpoolTransAddrTransAddr => '1.3.6.1.4.1.3375.2.2.9.9.2.1.3',
  ltmSnatpoolTransAddrTransAddrName => '1.3.6.1.4.1.3375.2.2.9.9.2.1.4',
  ltmVirtualServers => '1.3.6.1.4.1.3375.2.2.10',
  ltmVirtualServ => '1.3.6.1.4.1.3375.2.2.10.1',
  ltmVirtualServNumber => '1.3.6.1.4.1.3375.2.2.10.1.1',
  ltmVirtualServTable => '1.3.6.1.4.1.3375.2.2.10.1.2',
  ltmVirtualServEntry => '1.3.6.1.4.1.3375.2.2.10.1.2.1',
  ltmVirtualServName => '1.3.6.1.4.1.3375.2.2.10.1.2.1.1',
  ltmVirtualServAddrType => '1.3.6.1.4.1.3375.2.2.10.1.2.1.2',
  ltmVirtualServAddr => '1.3.6.1.4.1.3375.2.2.10.1.2.1.3',
  ltmVirtualServWildmaskType => '1.3.6.1.4.1.3375.2.2.10.1.2.1.4',
  ltmVirtualServWildmask => '1.3.6.1.4.1.3375.2.2.10.1.2.1.5',
  ltmVirtualServPort => '1.3.6.1.4.1.3375.2.2.10.1.2.1.6',
  ltmVirtualServIpProto => '1.3.6.1.4.1.3375.2.2.10.1.2.1.7',
  ltmVirtualServListedEnabledVlans => '1.3.6.1.4.1.3375.2.2.10.1.2.1.8',
  ltmVirtualServListedEnabledVlansDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVirtualServListedEnabledVlans',
  ltmVirtualServEnabled => '1.3.6.1.4.1.3375.2.2.10.1.2.1.9',
  ltmVirtualServEnabledDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVirtualServEnabled',
  ltmVirtualServConnLimit => '1.3.6.1.4.1.3375.2.2.10.1.2.1.10',
  ltmVirtualServRclass => '1.3.6.1.4.1.3375.2.2.10.1.2.1.11',
  ltmVirtualServSfFlags => '1.3.6.1.4.1.3375.2.2.10.1.2.1.12',
  ltmVirtualServSfFlagsDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVirtualServSfFlags',
  ltmVirtualServTranslateAddr => '1.3.6.1.4.1.3375.2.2.10.1.2.1.13',
  ltmVirtualServTranslateAddrDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVirtualServTranslateAddr',
  ltmVirtualServTranslatePort => '1.3.6.1.4.1.3375.2.2.10.1.2.1.14',
  ltmVirtualServTranslatePortDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVirtualServTranslatePort',
  ltmVirtualServType => '1.3.6.1.4.1.3375.2.2.10.1.2.1.15',
  ltmVirtualServTypeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVirtualServType',
  ltmVirtualServSnatType => '1.3.6.1.4.1.3375.2.2.10.1.2.1.16',
  ltmVirtualServSnatTypeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVirtualServSnatType',
  ltmVirtualServLasthopPoolName => '1.3.6.1.4.1.3375.2.2.10.1.2.1.17',
  ltmVirtualServSnatpoolName => '1.3.6.1.4.1.3375.2.2.10.1.2.1.18',
  ltmVirtualServDefaultPool => '1.3.6.1.4.1.3375.2.2.10.1.2.1.19',
  ltmVirtualServFallbackPersist => '1.3.6.1.4.1.3375.2.2.10.1.2.1.20',
  ltmVirtualServActualPvaAccel => '1.3.6.1.4.1.3375.2.2.10.1.2.1.21',
  ltmVirtualServActualPvaAccelDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVirtualServActualPvaAccel',
  ltmVirtualServAvailabilityState => '1.3.6.1.4.1.3375.2.2.10.1.2.1.22',
  ltmVirtualServAvailabilityStateDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVirtualServAvailabilityState',
  ltmVirtualServEnabledState => '1.3.6.1.4.1.3375.2.2.10.1.2.1.23',
  ltmVirtualServEnabledStateDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVirtualServEnabledState',
  ltmVirtualServDisabledParentType => '1.3.6.1.4.1.3375.2.2.10.1.2.1.24',
  ltmVirtualServStatusReason => '1.3.6.1.4.1.3375.2.2.10.1.2.1.25',
  ltmVirtualServGtmScore => '1.3.6.1.4.1.3375.2.2.10.1.2.1.26',
  ltmVirtualServCmpEnabled => '1.3.6.1.4.1.3375.2.2.10.1.2.1.27',
  ltmVirtualServCmpEnabledDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVirtualServCmpEnabled',
  ltmVirtualServSrcport => '1.3.6.1.4.1.3375.2.2.10.1.2.1.28',
  ltmVirtualServSrcportDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVirtualServSrcport',
  ltmVirtualServVaName => '1.3.6.1.4.1.3375.2.2.10.1.2.1.29',
  ltmVirtualServSourceAddressTranslationType => '1.3.6.1.4.1.3375.2.2.10.1.2.1.30',
  ltmVirtualServSourceAddressTranslationTypeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVirtualServSourceAddressTranslationType',
  ltmVirtualServSourceAddressTranslationPool => '1.3.6.1.4.1.3375.2.2.10.1.2.1.31',
  ltmVirtualServStat => '1.3.6.1.4.1.3375.2.2.10.2',
  ltmVirtualServStatResetStats => '1.3.6.1.4.1.3375.2.2.10.2.1',
  ltmVirtualServStatNumber => '1.3.6.1.4.1.3375.2.2.10.2.2',
  ltmVirtualServStatTable => '1.3.6.1.4.1.3375.2.2.10.2.3',
  ltmVirtualServStatEntry => '1.3.6.1.4.1.3375.2.2.10.2.3.1',
  ltmVirtualServStatName => '1.3.6.1.4.1.3375.2.2.10.2.3.1.1',
  ltmVirtualServStatCsMinConnDur => '1.3.6.1.4.1.3375.2.2.10.2.3.1.2',
  ltmVirtualServStatCsMaxConnDur => '1.3.6.1.4.1.3375.2.2.10.2.3.1.3',
  ltmVirtualServStatCsMeanConnDur => '1.3.6.1.4.1.3375.2.2.10.2.3.1.4',
  ltmVirtualServStatNoNodesErrors => '1.3.6.1.4.1.3375.2.2.10.2.3.1.5',
  ltmVirtualServStatClientPktsIn => '1.3.6.1.4.1.3375.2.2.10.2.3.1.6',
  ltmVirtualServStatClientBytesIn => '1.3.6.1.4.1.3375.2.2.10.2.3.1.7',
  ltmVirtualServStatClientPktsOut => '1.3.6.1.4.1.3375.2.2.10.2.3.1.8',
  ltmVirtualServStatClientBytesOut => '1.3.6.1.4.1.3375.2.2.10.2.3.1.9',
  ltmVirtualServStatClientMaxConns => '1.3.6.1.4.1.3375.2.2.10.2.3.1.10',
  ltmVirtualServStatClientTotConns => '1.3.6.1.4.1.3375.2.2.10.2.3.1.11',
  ltmVirtualServStatClientCurConns => '1.3.6.1.4.1.3375.2.2.10.2.3.1.12',
  ltmVirtualServStatEphemeralPktsIn => '1.3.6.1.4.1.3375.2.2.10.2.3.1.13',
  ltmVirtualServStatEphemeralBytesIn => '1.3.6.1.4.1.3375.2.2.10.2.3.1.14',
  ltmVirtualServStatEphemeralPktsOut => '1.3.6.1.4.1.3375.2.2.10.2.3.1.15',
  ltmVirtualServStatEphemeralBytesOut => '1.3.6.1.4.1.3375.2.2.10.2.3.1.16',
  ltmVirtualServStatEphemeralMaxConns => '1.3.6.1.4.1.3375.2.2.10.2.3.1.17',
  ltmVirtualServStatEphemeralTotConns => '1.3.6.1.4.1.3375.2.2.10.2.3.1.18',
  ltmVirtualServStatEphemeralCurConns => '1.3.6.1.4.1.3375.2.2.10.2.3.1.19',
  ltmVirtualServStatPvaPktsIn => '1.3.6.1.4.1.3375.2.2.10.2.3.1.20',
  ltmVirtualServStatPvaBytesIn => '1.3.6.1.4.1.3375.2.2.10.2.3.1.21',
  ltmVirtualServStatPvaPktsOut => '1.3.6.1.4.1.3375.2.2.10.2.3.1.22',
  ltmVirtualServStatPvaBytesOut => '1.3.6.1.4.1.3375.2.2.10.2.3.1.23',
  ltmVirtualServStatPvaMaxConns => '1.3.6.1.4.1.3375.2.2.10.2.3.1.24',
  ltmVirtualServStatPvaTotConns => '1.3.6.1.4.1.3375.2.2.10.2.3.1.25',
  ltmVirtualServStatPvaCurConns => '1.3.6.1.4.1.3375.2.2.10.2.3.1.26',
  ltmVirtualServStatTotRequests => '1.3.6.1.4.1.3375.2.2.10.2.3.1.27',
  ltmVirtualServStatTotPvaAssistConn => '1.3.6.1.4.1.3375.2.2.10.2.3.1.28',
  ltmVirtualServStatCurrPvaAssistConn => '1.3.6.1.4.1.3375.2.2.10.2.3.1.29',
  ltmVirtualServStatCycleCount => '1.3.6.1.4.1.3375.2.2.10.2.3.1.30',
  ltmVirtualServStatVsUsageRatio5s => '1.3.6.1.4.1.3375.2.2.10.2.3.1.31',
  ltmVirtualServStatVsUsageRatio1m => '1.3.6.1.4.1.3375.2.2.10.2.3.1.32',
  ltmVirtualServStatVsUsageRatio5m => '1.3.6.1.4.1.3375.2.2.10.2.3.1.33',
  ltmVirtualServStatCurrentConnsPerSec => '1.3.6.1.4.1.3375.2.2.10.2.3.1.34',
  ltmVirtualServStatDurationRateExceeded => '1.3.6.1.4.1.3375.2.2.10.2.3.1.35',
  ltmVirtualServStatSwSyncookies => '1.3.6.1.4.1.3375.2.2.10.2.3.1.36',
  ltmVirtualServStatSwSyncookieAccepts => '1.3.6.1.4.1.3375.2.2.10.2.3.1.37',
  ltmVirtualServStatHwSyncookies => '1.3.6.1.4.1.3375.2.2.10.2.3.1.38',
  ltmVirtualServStatHwSyncookieAccepts => '1.3.6.1.4.1.3375.2.2.10.2.3.1.39',
  ltmVirtualServStatClientEvictedConns => '1.3.6.1.4.1.3375.2.2.10.2.3.1.40',
  ltmVirtualServStatClientSlowKilled => '1.3.6.1.4.1.3375.2.2.10.2.3.1.41',
  ltmVirtualServStatWlSyncookieHits => '1.3.6.1.4.1.3375.2.2.10.2.3.1.42',
  ltmVirtualServStatWlSyncookieAccepts => '1.3.6.1.4.1.3375.2.2.10.2.3.1.43',
  ltmVirtualServStatWlSyncookieRejects => '1.3.6.1.4.1.3375.2.2.10.2.3.1.44',
  ltmVirtualServAuth => '1.3.6.1.4.1.3375.2.2.10.3',
  ltmVirtualServAuthNumber => '1.3.6.1.4.1.3375.2.2.10.3.1',
  ltmVirtualServAuthTable => '1.3.6.1.4.1.3375.2.2.10.3.2',
  ltmVirtualServAuthEntry => '1.3.6.1.4.1.3375.2.2.10.3.2.1',
  ltmVirtualServAuthVsName => '1.3.6.1.4.1.3375.2.2.10.3.2.1.1',
  ltmVirtualServAuthProfileName => '1.3.6.1.4.1.3375.2.2.10.3.2.1.2',
  ltmVirtualServPersist => '1.3.6.1.4.1.3375.2.2.10.4',
  ltmVirtualServPersistNumber => '1.3.6.1.4.1.3375.2.2.10.4.1',
  ltmVirtualServPersistTable => '1.3.6.1.4.1.3375.2.2.10.4.2',
  ltmVirtualServPersistEntry => '1.3.6.1.4.1.3375.2.2.10.4.2.1',
  ltmVirtualServPersistVsName => '1.3.6.1.4.1.3375.2.2.10.4.2.1.1',
  ltmVirtualServPersistProfileName => '1.3.6.1.4.1.3375.2.2.10.4.2.1.2',
  ltmVirtualServPersistUseDefault => '1.3.6.1.4.1.3375.2.2.10.4.2.1.3',
  ltmVirtualServPersistUseDefaultDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVirtualServPersistUseDefault',
  ltmVirtualServProfile => '1.3.6.1.4.1.3375.2.2.10.5',
  ltmVirtualServProfileNumber => '1.3.6.1.4.1.3375.2.2.10.5.1',
  ltmVirtualServProfileTable => '1.3.6.1.4.1.3375.2.2.10.5.2',
  ltmVirtualServProfileEntry => '1.3.6.1.4.1.3375.2.2.10.5.2.1',
  ltmVirtualServProfileVsName => '1.3.6.1.4.1.3375.2.2.10.5.2.1.1',
  ltmVirtualServProfileProfileName => '1.3.6.1.4.1.3375.2.2.10.5.2.1.2',
  ltmVirtualServProfileType => '1.3.6.1.4.1.3375.2.2.10.5.2.1.3',
  ltmVirtualServProfileTypeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVirtualServProfileType',
  ltmVirtualServProfileContext => '1.3.6.1.4.1.3375.2.2.10.5.2.1.4',
  ltmVirtualServProfileContextDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVirtualServProfileContext',
  ltmVirtualServPool => '1.3.6.1.4.1.3375.2.2.10.6',
  ltmVirtualServPoolNumber => '1.3.6.1.4.1.3375.2.2.10.6.1',
  ltmVirtualServPoolTable => '1.3.6.1.4.1.3375.2.2.10.6.2',
  ltmVirtualServPoolEntry => '1.3.6.1.4.1.3375.2.2.10.6.2.1',
  ltmVirtualServPoolVirtualServerName => '1.3.6.1.4.1.3375.2.2.10.6.2.1.1',
  ltmVirtualServPoolPoolName => '1.3.6.1.4.1.3375.2.2.10.6.2.1.2',
  ltmVirtualServPoolRuleName => '1.3.6.1.4.1.3375.2.2.10.6.2.1.3',
  ltmVirtualServClonePool => '1.3.6.1.4.1.3375.2.2.10.7',
  ltmVirtualServClonePoolNumber => '1.3.6.1.4.1.3375.2.2.10.7.1',
  ltmVirtualServClonePoolTable => '1.3.6.1.4.1.3375.2.2.10.7.2',
  ltmVirtualServClonePoolEntry => '1.3.6.1.4.1.3375.2.2.10.7.2.1',
  ltmVirtualServClonePoolVirtualServerName => '1.3.6.1.4.1.3375.2.2.10.7.2.1.1',
  ltmVirtualServClonePoolPoolName => '1.3.6.1.4.1.3375.2.2.10.7.2.1.2',
  ltmVirtualServClonePoolType => '1.3.6.1.4.1.3375.2.2.10.7.2.1.3',
  ltmVirtualServClonePoolTypeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVirtualServClonePoolType',
  ltmVirtualServRule => '1.3.6.1.4.1.3375.2.2.10.8',
  ltmVirtualServRuleNumber => '1.3.6.1.4.1.3375.2.2.10.8.1',
  ltmVirtualServRuleTable => '1.3.6.1.4.1.3375.2.2.10.8.2',
  ltmVirtualServRuleEntry => '1.3.6.1.4.1.3375.2.2.10.8.2.1',
  ltmVirtualServRuleVirtualServerName => '1.3.6.1.4.1.3375.2.2.10.8.2.1.1',
  ltmVirtualServRuleRuleName => '1.3.6.1.4.1.3375.2.2.10.8.2.1.2',
  ltmVirtualServRulePriority => '1.3.6.1.4.1.3375.2.2.10.8.2.1.3',
  ltmVirtualServVlan => '1.3.6.1.4.1.3375.2.2.10.9',
  ltmVirtualServVlanNumber => '1.3.6.1.4.1.3375.2.2.10.9.1',
  ltmVirtualServVlanTable => '1.3.6.1.4.1.3375.2.2.10.9.2',
  ltmVirtualServVlanEntry => '1.3.6.1.4.1.3375.2.2.10.9.2.1',
  ltmVirtualServVlanVsName => '1.3.6.1.4.1.3375.2.2.10.9.2.1.1',
  ltmVirtualServVlanVlanName => '1.3.6.1.4.1.3375.2.2.10.9.2.1.2',
  ltmVirtualAddr => '1.3.6.1.4.1.3375.2.2.10.10',
  ltmVirtualAddrNumber => '1.3.6.1.4.1.3375.2.2.10.10.1',
  ltmVirtualAddrTable => '1.3.6.1.4.1.3375.2.2.10.10.2',
  ltmVirtualAddrEntry => '1.3.6.1.4.1.3375.2.2.10.10.2.1',
  ltmVirtualAddrAddrType => '1.3.6.1.4.1.3375.2.2.10.10.2.1.1',
  ltmVirtualAddrAddr => '1.3.6.1.4.1.3375.2.2.10.10.2.1.2',
  ltmVirtualAddrEnabled => '1.3.6.1.4.1.3375.2.2.10.10.2.1.3',
  ltmVirtualAddrEnabledDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVirtualAddrEnabled',
  ltmVirtualAddrConnLimit => '1.3.6.1.4.1.3375.2.2.10.10.2.1.4',
  ltmVirtualAddrArpEnabled => '1.3.6.1.4.1.3375.2.2.10.10.2.1.5',
  ltmVirtualAddrArpEnabledDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVirtualAddrArpEnabled',
  ltmVirtualAddrSfFlags => '1.3.6.1.4.1.3375.2.2.10.10.2.1.6',
  ltmVirtualAddrSfFlagsDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVirtualAddrSfFlags',
  ltmVirtualAddrUnitId => '1.3.6.1.4.1.3375.2.2.10.10.2.1.7',
  ltmVirtualAddrRouteAdvertisement => '1.3.6.1.4.1.3375.2.2.10.10.2.1.8',
  ltmVirtualAddrRouteAdvertisementDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVirtualAddrRouteAdvertisement',
  ltmVirtualAddrAvailabilityState => '1.3.6.1.4.1.3375.2.2.10.10.2.1.9',
  ltmVirtualAddrAvailabilityStateDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVirtualAddrAvailabilityState',
  ltmVirtualAddrEnabledState => '1.3.6.1.4.1.3375.2.2.10.10.2.1.10',
  ltmVirtualAddrEnabledStateDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVirtualAddrEnabledState',
  ltmVirtualAddrDisabledParentType => '1.3.6.1.4.1.3375.2.2.10.10.2.1.11',
  ltmVirtualAddrStatusReason => '1.3.6.1.4.1.3375.2.2.10.10.2.1.12',
  ltmVirtualAddrServer => '1.3.6.1.4.1.3375.2.2.10.10.2.1.13',
  ltmVirtualAddrServerDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVirtualAddrServer',
  ltmVirtualAddrIsFloat => '1.3.6.1.4.1.3375.2.2.10.10.2.1.14',
  ltmVirtualAddrIsFloatDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVirtualAddrIsFloat',
  ltmVirtualAddrName => '1.3.6.1.4.1.3375.2.2.10.10.2.1.15',
  ltmVirtualAddrStat => '1.3.6.1.4.1.3375.2.2.10.11',
  ltmVirtualAddrStatResetStats => '1.3.6.1.4.1.3375.2.2.10.11.1',
  ltmVirtualAddrStatNumber => '1.3.6.1.4.1.3375.2.2.10.11.2',
  ltmVirtualAddrStatTable => '1.3.6.1.4.1.3375.2.2.10.11.3',
  ltmVirtualAddrStatEntry => '1.3.6.1.4.1.3375.2.2.10.11.3.1',
  ltmVirtualAddrStatAddrType => '1.3.6.1.4.1.3375.2.2.10.11.3.1.1',
  ltmVirtualAddrStatAddr => '1.3.6.1.4.1.3375.2.2.10.11.3.1.2',
  ltmVirtualAddrStatClientPktsIn => '1.3.6.1.4.1.3375.2.2.10.11.3.1.3',
  ltmVirtualAddrStatClientBytesIn => '1.3.6.1.4.1.3375.2.2.10.11.3.1.4',
  ltmVirtualAddrStatClientPktsOut => '1.3.6.1.4.1.3375.2.2.10.11.3.1.5',
  ltmVirtualAddrStatClientBytesOut => '1.3.6.1.4.1.3375.2.2.10.11.3.1.6',
  ltmVirtualAddrStatClientMaxConns => '1.3.6.1.4.1.3375.2.2.10.11.3.1.7',
  ltmVirtualAddrStatClientTotConns => '1.3.6.1.4.1.3375.2.2.10.11.3.1.8',
  ltmVirtualAddrStatClientCurConns => '1.3.6.1.4.1.3375.2.2.10.11.3.1.9',
  ltmVirtualAddrStatPvaPktsIn => '1.3.6.1.4.1.3375.2.2.10.11.3.1.10',
  ltmVirtualAddrStatPvaBytesIn => '1.3.6.1.4.1.3375.2.2.10.11.3.1.11',
  ltmVirtualAddrStatPvaPktsOut => '1.3.6.1.4.1.3375.2.2.10.11.3.1.12',
  ltmVirtualAddrStatPvaBytesOut => '1.3.6.1.4.1.3375.2.2.10.11.3.1.13',
  ltmVirtualAddrStatPvaMaxConns => '1.3.6.1.4.1.3375.2.2.10.11.3.1.14',
  ltmVirtualAddrStatPvaTotConns => '1.3.6.1.4.1.3375.2.2.10.11.3.1.15',
  ltmVirtualAddrStatPvaCurConns => '1.3.6.1.4.1.3375.2.2.10.11.3.1.16',
  ltmVirtualAddrStatTotPvaAssistConn => '1.3.6.1.4.1.3375.2.2.10.11.3.1.17',
  ltmVirtualAddrStatCurrPvaAssistConn => '1.3.6.1.4.1.3375.2.2.10.11.3.1.18',
  ltmVirtualAddrStatName => '1.3.6.1.4.1.3375.2.2.10.11.3.1.19',
  ltmVirtualServHttpClass => '1.3.6.1.4.1.3375.2.2.10.12',
  ltmVsHttpClassNumber => '1.3.6.1.4.1.3375.2.2.10.12.1',
  ltmVsHttpClassTable => '1.3.6.1.4.1.3375.2.2.10.12.2',
  ltmVsHttpClassEntry => '1.3.6.1.4.1.3375.2.2.10.12.2.1',
  ltmVsHttpClassVsName => '1.3.6.1.4.1.3375.2.2.10.12.2.1.1',
  ltmVsHttpClassProfileName => '1.3.6.1.4.1.3375.2.2.10.12.2.1.2',
  ltmVsHttpClassPriority => '1.3.6.1.4.1.3375.2.2.10.12.2.1.3',
  ltmVirtualServStatus => '1.3.6.1.4.1.3375.2.2.10.13',
  ltmVsStatusNumber => '1.3.6.1.4.1.3375.2.2.10.13.1',
  ltmVsStatusTable => '1.3.6.1.4.1.3375.2.2.10.13.2',
  ltmVsStatusEntry => '1.3.6.1.4.1.3375.2.2.10.13.2.1',
  ltmVsStatusName => '1.3.6.1.4.1.3375.2.2.10.13.2.1.1',
  ltmVsStatusAvailState => '1.3.6.1.4.1.3375.2.2.10.13.2.1.2',
  ltmVsStatusAvailStateDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVsStatusAvailState',
  ltmVsStatusEnabledState => '1.3.6.1.4.1.3375.2.2.10.13.2.1.3',
  ltmVsStatusEnabledStateDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVsStatusEnabledState',
  ltmVsStatusParentType => '1.3.6.1.4.1.3375.2.2.10.13.2.1.4',
  ltmVsStatusDetailReason => '1.3.6.1.4.1.3375.2.2.10.13.2.1.5',
  ltmVirtualAddrStatus => '1.3.6.1.4.1.3375.2.2.10.14',
  ltmVAddrStatusNumber => '1.3.6.1.4.1.3375.2.2.10.14.1',
  ltmVAddrStatusTable => '1.3.6.1.4.1.3375.2.2.10.14.2',
  ltmVAddrStatusEntry => '1.3.6.1.4.1.3375.2.2.10.14.2.1',
  ltmVAddrStatusAddrType => '1.3.6.1.4.1.3375.2.2.10.14.2.1.1',
  ltmVAddrStatusAddr => '1.3.6.1.4.1.3375.2.2.10.14.2.1.2',
  ltmVAddrStatusAvailState => '1.3.6.1.4.1.3375.2.2.10.14.2.1.3',
  ltmVAddrStatusAvailStateDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVAddrStatusAvailState',
  ltmVAddrStatusEnabledState => '1.3.6.1.4.1.3375.2.2.10.14.2.1.4',
  ltmVAddrStatusEnabledStateDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVAddrStatusEnabledState',
  ltmVAddrStatusParentType => '1.3.6.1.4.1.3375.2.2.10.14.2.1.5',
  ltmVAddrStatusDetailReason => '1.3.6.1.4.1.3375.2.2.10.14.2.1.6',
  ltmVAddrStatusName => '1.3.6.1.4.1.3375.2.2.10.14.2.1.7',
  ltmVirtualModuleScore => '1.3.6.1.4.1.3375.2.2.10.15',
  ltmVirtualModuleScoreNumber => '1.3.6.1.4.1.3375.2.2.10.15.1',
  ltmVirtualModuleScoreTable => '1.3.6.1.4.1.3375.2.2.10.15.2',
  ltmVirtualModuleScoreEntry => '1.3.6.1.4.1.3375.2.2.10.15.2.1',
  ltmVirtualModuleScoreVsName => '1.3.6.1.4.1.3375.2.2.10.15.2.1.1',
  ltmVirtualModuleScoreModuleType => '1.3.6.1.4.1.3375.2.2.10.15.2.1.2',
  ltmVirtualModuleScoreModuleTypeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmVirtualModuleScoreModuleType',
  ltmVirtualModuleScoreScore => '1.3.6.1.4.1.3375.2.2.10.15.2.1.3',
  ltmNetworkAttackDataStat => '1.3.6.1.4.1.3375.2.2.10.16',
  ltmNetworkAttackDataStatResetStats => '1.3.6.1.4.1.3375.2.2.10.16.1',
  ltmNetworkAttackDataStatNumber => '1.3.6.1.4.1.3375.2.2.10.16.2',
  ltmNetworkAttackDataStatTable => '1.3.6.1.4.1.3375.2.2.10.16.3',
  ltmNetworkAttackDataStatEntry => '1.3.6.1.4.1.3375.2.2.10.16.3.1',
  ltmNetworkAttackDataStatProfileName => '1.3.6.1.4.1.3375.2.2.10.16.3.1.1',
  ltmNetworkAttackDataStatVsName => '1.3.6.1.4.1.3375.2.2.10.16.3.1.2',
  ltmNetworkAttackDataStatVectorName => '1.3.6.1.4.1.3375.2.2.10.16.3.1.3',
  ltmNetworkAttackDataStatAttackType => '1.3.6.1.4.1.3375.2.2.10.16.3.1.4',
  ltmNetworkAttackDataStatAttackTypeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmNetworkAttackDataStatAttackType',
  ltmNetworkAttackDataStatAttackDetected => '1.3.6.1.4.1.3375.2.2.10.16.3.1.5',
  ltmNetworkAttackDataStatAttackCount => '1.3.6.1.4.1.3375.2.2.10.16.3.1.6',
  ltmNetworkAttackDataStatStats => '1.3.6.1.4.1.3375.2.2.10.16.3.1.7',
  ltmNetworkAttackDataStatStatsRate => '1.3.6.1.4.1.3375.2.2.10.16.3.1.8',
  ltmNetworkAttackDataStatStats1m => '1.3.6.1.4.1.3375.2.2.10.16.3.1.9',
  ltmNetworkAttackDataStatStats1h => '1.3.6.1.4.1.3375.2.2.10.16.3.1.10',
  ltmNetworkAttackDataStatDrops => '1.3.6.1.4.1.3375.2.2.10.16.3.1.11',
  ltmNetworkAttackDataStatDropsRate => '1.3.6.1.4.1.3375.2.2.10.16.3.1.12',
  ltmNetworkAttackDataStatDrops1m => '1.3.6.1.4.1.3375.2.2.10.16.3.1.13',
  ltmNetworkAttackDataStatDrops1h => '1.3.6.1.4.1.3375.2.2.10.16.3.1.14',
  ltmNetworkAttackDataStatWlCount => '1.3.6.1.4.1.3375.2.2.10.16.3.1.15',
  ltmFwIpintVirtualStat => '1.3.6.1.4.1.3375.2.2.10.17',
  ltmFwIpintVirtualStatResetStats => '1.3.6.1.4.1.3375.2.2.10.17.1',
  ltmFwIpintVirtualStatNumber => '1.3.6.1.4.1.3375.2.2.10.17.2',
  ltmFwIpintVirtualStatTable => '1.3.6.1.4.1.3375.2.2.10.17.3',
  ltmFwIpintVirtualStatEntry => '1.3.6.1.4.1.3375.2.2.10.17.3.1',
  ltmFwIpintVirtualStatContextName => '1.3.6.1.4.1.3375.2.2.10.17.3.1.1',
  ltmFwIpintVirtualStatBlClassName => '1.3.6.1.4.1.3375.2.2.10.17.3.1.2',
  ltmFwIpintVirtualStatCounter => '1.3.6.1.4.1.3375.2.2.10.17.3.1.3',
  ltmRst => '1.3.6.1.4.1.3375.2.2.11',
  ltmRstCauseStat => '1.3.6.1.4.1.3375.2.2.11.1',
  ltmRstCauseStatResetStats => '1.3.6.1.4.1.3375.2.2.11.1.1',
  ltmRstCauseStatNumber => '1.3.6.1.4.1.3375.2.2.11.1.2',
  ltmRstCauseStatTable => '1.3.6.1.4.1.3375.2.2.11.1.3',
  ltmRstCauseStatEntry => '1.3.6.1.4.1.3375.2.2.11.1.3.1',
  ltmRstCauseStatIndex => '1.3.6.1.4.1.3375.2.2.11.1.3.1.1',
  ltmRstCauseStatRstCause => '1.3.6.1.4.1.3375.2.2.11.1.3.1.2',
  ltmRstCauseStatCount => '1.3.6.1.4.1.3375.2.2.11.1.3.1.3',
  ltmDNS => '1.3.6.1.4.1.3375.2.2.12',
  ltmDnsCache => '1.3.6.1.4.1.3375.2.2.12.1',
  ltmDnsCacheNumber => '1.3.6.1.4.1.3375.2.2.12.1.1',
  ltmDnsCacheTable => '1.3.6.1.4.1.3375.2.2.12.1.2',
  ltmDnsCacheEntry => '1.3.6.1.4.1.3375.2.2.12.1.2.1',
  ltmDnsCacheName => '1.3.6.1.4.1.3375.2.2.12.1.2.1.1',
  ltmDnsCacheType => '1.3.6.1.4.1.3375.2.2.12.1.2.1.2',
  ltmDnsCacheTypeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDnsCacheType',
  ltmDnsCacheMsgCacheSize => '1.3.6.1.4.1.3375.2.2.12.1.2.1.3',
  ltmDnsCacheRrsetCacheSize => '1.3.6.1.4.1.3375.2.2.12.1.2.1.4',
  ltmDnsCacheAnswerDefaultZones => '1.3.6.1.4.1.3375.2.2.12.1.2.1.5',
  ltmDnsCacheAnswerDefaultZonesDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDnsCacheAnswerDefaultZones',
  ltmDnsCacheUseIpv4 => '1.3.6.1.4.1.3375.2.2.12.1.2.1.6',
  ltmDnsCacheUseIpv4Definition => 'F5-BIGIP-LOCAL-MIB::ltmDnsCacheUseIpv4',
  ltmDnsCacheUseIpv6 => '1.3.6.1.4.1.3375.2.2.12.1.2.1.7',
  ltmDnsCacheUseIpv6Definition => 'F5-BIGIP-LOCAL-MIB::ltmDnsCacheUseIpv6',
  ltmDnsCacheUseUdp => '1.3.6.1.4.1.3375.2.2.12.1.2.1.8',
  ltmDnsCacheUseUdpDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDnsCacheUseUdp',
  ltmDnsCacheUseTcp => '1.3.6.1.4.1.3375.2.2.12.1.2.1.9',
  ltmDnsCacheUseTcpDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDnsCacheUseTcp',
  ltmDnsCacheNameserverCacheCount => '1.3.6.1.4.1.3375.2.2.12.1.2.1.10',
  ltmDnsCacheMaxConcurrentTcp => '1.3.6.1.4.1.3375.2.2.12.1.2.1.11',
  ltmDnsCacheMaxConcurrentUdp => '1.3.6.1.4.1.3375.2.2.12.1.2.1.12',
  ltmDnsCacheUnwantedThreshold => '1.3.6.1.4.1.3375.2.2.12.1.2.1.13',
  ltmDnsCacheRouteDomainName => '1.3.6.1.4.1.3375.2.2.12.1.2.1.14',
  ltmDnsCacheIgnoreCd => '1.3.6.1.4.1.3375.2.2.12.1.2.1.15',
  ltmDnsCacheIgnoreCdDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDnsCacheIgnoreCd',
  ltmDnsCachePrefetchKey => '1.3.6.1.4.1.3375.2.2.12.1.2.1.16',
  ltmDnsCachePrefetchKeyDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDnsCachePrefetchKey',
  ltmDnsCacheKeyCacheSize => '1.3.6.1.4.1.3375.2.2.12.1.2.1.17',
  ltmDnsCacheRandomizeQueryNameCase => '1.3.6.1.4.1.3375.2.2.12.1.2.1.18',
  ltmDnsCacheRandomizeQueryNameCaseDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDnsCacheRandomizeQueryNameCase',
  ltmDnsCacheMaxConcurrentQueries => '1.3.6.1.4.1.3375.2.2.12.1.2.1.19',
  ltmDnsCacheAllowedQueryTime => '1.3.6.1.4.1.3375.2.2.12.1.2.1.20',
  ltmDnsCacheStat => '1.3.6.1.4.1.3375.2.2.12.2',
  ltmDnsCacheStatResetStats => '1.3.6.1.4.1.3375.2.2.12.2.1',
  ltmDnsCacheStatNumber => '1.3.6.1.4.1.3375.2.2.12.2.2',
  ltmDnsCacheStatTable => '1.3.6.1.4.1.3375.2.2.12.2.3',
  ltmDnsCacheStatEntry => '1.3.6.1.4.1.3375.2.2.12.2.3.1',
  ltmDnsCacheStatName => '1.3.6.1.4.1.3375.2.2.12.2.3.1.1',
  ltmDnsCacheStatQueries => '1.3.6.1.4.1.3375.2.2.12.2.3.1.2',
  ltmDnsCacheStatResponses => '1.3.6.1.4.1.3375.2.2.12.2.3.1.3',
  ltmDnsCacheStatSync => '1.3.6.1.4.1.3375.2.2.12.2.3.1.4',
  ltmDnsCacheStatAsync => '1.3.6.1.4.1.3375.2.2.12.2.3.1.5',
  ltmDnsCacheStatFailureResolv => '1.3.6.1.4.1.3375.2.2.12.2.3.1.6',
  ltmDnsCacheStatFailureCf => '1.3.6.1.4.1.3375.2.2.12.2.3.1.7',
  ltmDnsCacheStatFailureServer => '1.3.6.1.4.1.3375.2.2.12.2.3.1.8',
  ltmDnsCacheStatFailureSend => '1.3.6.1.4.1.3375.2.2.12.2.3.1.9',
  ltmDnsCacheStatMsgHits => '1.3.6.1.4.1.3375.2.2.12.2.3.1.10',
  ltmDnsCacheStatMsgMisses => '1.3.6.1.4.1.3375.2.2.12.2.3.1.11',
  ltmDnsCacheStatMsgInserts => '1.3.6.1.4.1.3375.2.2.12.2.3.1.12',
  ltmDnsCacheStatMsgUpdates => '1.3.6.1.4.1.3375.2.2.12.2.3.1.13',
  ltmDnsCacheStatMsgEvictions => '1.3.6.1.4.1.3375.2.2.12.2.3.1.14',
  ltmDnsCacheStatRrsetHits => '1.3.6.1.4.1.3375.2.2.12.2.3.1.15',
  ltmDnsCacheStatRrsetMisses => '1.3.6.1.4.1.3375.2.2.12.2.3.1.16',
  ltmDnsCacheStatRrsetInserts => '1.3.6.1.4.1.3375.2.2.12.2.3.1.17',
  ltmDnsCacheStatRrsetUpdates => '1.3.6.1.4.1.3375.2.2.12.2.3.1.18',
  ltmDnsCacheStatRrsetEvictions => '1.3.6.1.4.1.3375.2.2.12.2.3.1.19',
  ltmDnsCacheStatNameserverHits => '1.3.6.1.4.1.3375.2.2.12.2.3.1.20',
  ltmDnsCacheStatNameserverMisses => '1.3.6.1.4.1.3375.2.2.12.2.3.1.21',
  ltmDnsCacheStatNameserverInserts => '1.3.6.1.4.1.3375.2.2.12.2.3.1.22',
  ltmDnsCacheStatNameserverUpdates => '1.3.6.1.4.1.3375.2.2.12.2.3.1.23',
  ltmDnsCacheStatNameserverEvictions => '1.3.6.1.4.1.3375.2.2.12.2.3.1.24',
  ltmDnsCacheStatKeyHits => '1.3.6.1.4.1.3375.2.2.12.2.3.1.25',
  ltmDnsCacheStatKeyMisses => '1.3.6.1.4.1.3375.2.2.12.2.3.1.26',
  ltmDnsCacheStatKeyInserts => '1.3.6.1.4.1.3375.2.2.12.2.3.1.27',
  ltmDnsCacheStatKeyUpdates => '1.3.6.1.4.1.3375.2.2.12.2.3.1.28',
  ltmDnsCacheStatKeyEvictions => '1.3.6.1.4.1.3375.2.2.12.2.3.1.29',
  ltmDnsCacheStatUdpBytesIn => '1.3.6.1.4.1.3375.2.2.12.2.3.1.30',
  ltmDnsCacheStatUdpBytesOut => '1.3.6.1.4.1.3375.2.2.12.2.3.1.31',
  ltmDnsCacheStatUdpPktsIn => '1.3.6.1.4.1.3375.2.2.12.2.3.1.32',
  ltmDnsCacheStatUdpPktsOut => '1.3.6.1.4.1.3375.2.2.12.2.3.1.33',
  ltmDnsCacheStatUdpCurConns => '1.3.6.1.4.1.3375.2.2.12.2.3.1.34',
  ltmDnsCacheStatUdpMaxConns => '1.3.6.1.4.1.3375.2.2.12.2.3.1.35',
  ltmDnsCacheStatUdpTotConns => '1.3.6.1.4.1.3375.2.2.12.2.3.1.36',
  ltmDnsCacheStatTcpBytesIn => '1.3.6.1.4.1.3375.2.2.12.2.3.1.37',
  ltmDnsCacheStatTcpBytesOut => '1.3.6.1.4.1.3375.2.2.12.2.3.1.38',
  ltmDnsCacheStatTcpPktsIn => '1.3.6.1.4.1.3375.2.2.12.2.3.1.39',
  ltmDnsCacheStatTcpPktsOut => '1.3.6.1.4.1.3375.2.2.12.2.3.1.40',
  ltmDnsCacheStatTcpCurConns => '1.3.6.1.4.1.3375.2.2.12.2.3.1.41',
  ltmDnsCacheStatTcpMaxConns => '1.3.6.1.4.1.3375.2.2.12.2.3.1.42',
  ltmDnsCacheStatTcpTotConns => '1.3.6.1.4.1.3375.2.2.12.2.3.1.43',
  ltmDnsCacheStatUnsolicitedReplies => '1.3.6.1.4.1.3375.2.2.12.2.3.1.44',
  ltmDnsCacheStatSecUnchecked => '1.3.6.1.4.1.3375.2.2.12.2.3.1.45',
  ltmDnsCacheStatSecBogus => '1.3.6.1.4.1.3375.2.2.12.2.3.1.46',
  ltmDnsCacheStatSecIndeterminate => '1.3.6.1.4.1.3375.2.2.12.2.3.1.47',
  ltmDnsCacheStatSecInsecure => '1.3.6.1.4.1.3375.2.2.12.2.3.1.48',
  ltmDnsCacheStatSecSecure => '1.3.6.1.4.1.3375.2.2.12.2.3.1.49',
  ltmDnsCacheStatFwdQueries => '1.3.6.1.4.1.3375.2.2.12.2.3.1.50',
  ltmDnsCacheStatFwdResponses => '1.3.6.1.4.1.3375.2.2.12.2.3.1.51',
  ltmDnsCacheStatRpzRewrites => '1.3.6.1.4.1.3375.2.2.12.2.3.1.52',
  ltmDnsSecurity => '1.3.6.1.4.1.3375.2.2.12.3',
  ltmDnsSecurityNumber => '1.3.6.1.4.1.3375.2.2.12.3.1',
  ltmDnsSecurityTable => '1.3.6.1.4.1.3375.2.2.12.3.2',
  ltmDnsSecurityEntry => '1.3.6.1.4.1.3375.2.2.12.3.2.1',
  ltmDnsSecurityName => '1.3.6.1.4.1.3375.2.2.12.3.2.1.1',
  ltmDnsSecurityQueryTypeInclusion => '1.3.6.1.4.1.3375.2.2.12.3.2.1.2',
  ltmDnsSecurityQueryTypeInclusionDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDnsSecurityQueryTypeInclusion',
  ltmDnsSecurityStat => '1.3.6.1.4.1.3375.2.2.12.4',
  ltmDnsSecurityStatResetStats => '1.3.6.1.4.1.3375.2.2.12.4.1',
  ltmDnsSecurityStatNumber => '1.3.6.1.4.1.3375.2.2.12.4.2',
  ltmDnsSecurityStatTable => '1.3.6.1.4.1.3375.2.2.12.4.3',
  ltmDnsSecurityStatEntry => '1.3.6.1.4.1.3375.2.2.12.4.3.1',
  ltmDnsSecurityStatName => '1.3.6.1.4.1.3375.2.2.12.4.3.1.1',
  ltmDnsSecurityStatFilteredDrops => '1.3.6.1.4.1.3375.2.2.12.4.3.1.2',
  ltmDnsSecurityStatADrops => '1.3.6.1.4.1.3375.2.2.12.4.3.1.3',
  ltmDnsSecurityStatAaaaDrops => '1.3.6.1.4.1.3375.2.2.12.4.3.1.4',
  ltmDnsSecurityStatAnyDrops => '1.3.6.1.4.1.3375.2.2.12.4.3.1.5',
  ltmDnsSecurityStatCnameDrops => '1.3.6.1.4.1.3375.2.2.12.4.3.1.6',
  ltmDnsSecurityStatMxDrops => '1.3.6.1.4.1.3375.2.2.12.4.3.1.7',
  ltmDnsSecurityStatNsDrops => '1.3.6.1.4.1.3375.2.2.12.4.3.1.8',
  ltmDnsSecurityStatPtrDrops => '1.3.6.1.4.1.3375.2.2.12.4.3.1.9',
  ltmDnsSecurityStatSoaDrops => '1.3.6.1.4.1.3375.2.2.12.4.3.1.10',
  ltmDnsSecurityStatSrvDrops => '1.3.6.1.4.1.3375.2.2.12.4.3.1.11',
  ltmDnsSecurityStatTxtDrops => '1.3.6.1.4.1.3375.2.2.12.4.3.1.12',
  ltmDnsSecurityStatOtherDrops => '1.3.6.1.4.1.3375.2.2.12.4.3.1.13',
  ltmDnsQueryFilter => '1.3.6.1.4.1.3375.2.2.12.5',
  ltmDnsQueryFilterNumber => '1.3.6.1.4.1.3375.2.2.12.5.1',
  ltmDnsQueryFilterTable => '1.3.6.1.4.1.3375.2.2.12.5.2',
  ltmDnsQueryFilterEntry => '1.3.6.1.4.1.3375.2.2.12.5.2.1',
  ltmDnsQueryFilterName => '1.3.6.1.4.1.3375.2.2.12.5.2.1.1',
  ltmDnsQueryFilterIndex => '1.3.6.1.4.1.3375.2.2.12.5.2.1.2',
  ltmDnsQueryFilterType => '1.3.6.1.4.1.3375.2.2.12.5.2.1.3',
  ltmDnsQueryFilterTypeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDnsQueryFilterType',
  ltmDnsHeaderFilter => '1.3.6.1.4.1.3375.2.2.12.6',
  ltmDnsHeaderFilterNumber => '1.3.6.1.4.1.3375.2.2.12.6.1',
  ltmDnsHeaderFilterTable => '1.3.6.1.4.1.3375.2.2.12.6.2',
  ltmDnsHeaderFilterEntry => '1.3.6.1.4.1.3375.2.2.12.6.2.1',
  ltmDnsHeaderFilterName => '1.3.6.1.4.1.3375.2.2.12.6.2.1.1',
  ltmDnsHeaderFilterIndex => '1.3.6.1.4.1.3375.2.2.12.6.2.1.2',
  ltmDnsHeaderFilterOpcodeExclusion => '1.3.6.1.4.1.3375.2.2.12.6.2.1.3',
  ltmDnsHeaderFilterOpcodeExclusionDefinition => 'F5-BIGIP-LOCAL-MIB::ltmDnsHeaderFilterOpcodeExclusion',
  ltmDnsExpressStat => '1.3.6.1.4.1.3375.2.2.12.7',
  ltmDnsExpressStatResetStats => '1.3.6.1.4.1.3375.2.2.12.7.1',
  ltmDnsExpressStatNumber => '1.3.6.1.4.1.3375.2.2.12.7.2',
  ltmDnsExpressStatTable => '1.3.6.1.4.1.3375.2.2.12.7.3',
  ltmDnsExpressStatEntry => '1.3.6.1.4.1.3375.2.2.12.7.3.1',
  ltmDnsExpressStatName => '1.3.6.1.4.1.3375.2.2.12.7.3.1.1',
  ltmDnsExpressStatDnsxQueries => '1.3.6.1.4.1.3375.2.2.12.7.3.1.2',
  ltmDnsExpressStatDnsxResponses => '1.3.6.1.4.1.3375.2.2.12.7.3.1.3',
  ltmDnsExpressStatDnsxNotifiesRecv => '1.3.6.1.4.1.3375.2.2.12.7.3.1.4',
  ltmDnsExpressStatAxfrQueries => '1.3.6.1.4.1.3375.2.2.12.7.3.1.5',
  ltmDnsExpressStatIxfrQueries => '1.3.6.1.4.1.3375.2.2.12.7.3.1.6',
  ltmDnsExpressStatXfrQueriesAclFailed => '1.3.6.1.4.1.3375.2.2.12.7.3.1.7',
  ltmDnsExpressStatXfrNotifiesSent => '1.3.6.1.4.1.3375.2.2.12.7.3.1.8',
  ltmDnsExpressStatDnsxXfrMsgs => '1.3.6.1.4.1.3375.2.2.12.7.3.1.9',
  ltmDnsExpressStatXfrNotifiesFailed => '1.3.6.1.4.1.3375.2.2.12.7.3.1.10',
  ltmDnsExpressStatTsigMissing => '1.3.6.1.4.1.3375.2.2.12.7.3.1.11',
  ltmDnsExpressStatTsigNotRequired => '1.3.6.1.4.1.3375.2.2.12.7.3.1.12',
  ltmDnsExpressStatTsigVerified => '1.3.6.1.4.1.3375.2.2.12.7.3.1.13',
  ltmDnsExpressStatTsigBadKey => '1.3.6.1.4.1.3375.2.2.12.7.3.1.14',
  ltmDnsExpressStatTsigBadSig => '1.3.6.1.4.1.3375.2.2.12.7.3.1.15',
  ltmDnsExpressStatTsigBadTime => '1.3.6.1.4.1.3375.2.2.12.7.3.1.16',
  ltmDnsServerStat => '1.3.6.1.4.1.3375.2.2.12.8',
  ltmDnsServerStatResetStats => '1.3.6.1.4.1.3375.2.2.12.8.1',
  ltmDnsServerStatNumber => '1.3.6.1.4.1.3375.2.2.12.8.2',
  ltmDnsServerStatTable => '1.3.6.1.4.1.3375.2.2.12.8.3',
  ltmDnsServerStatEntry => '1.3.6.1.4.1.3375.2.2.12.8.3.1',
  ltmDnsServerStatName => '1.3.6.1.4.1.3375.2.2.12.8.3.1.1',
  ltmDnsServerStatXfrQueries => '1.3.6.1.4.1.3375.2.2.12.8.3.1.2',
  ltmDnsServerStatXfrResponses => '1.3.6.1.4.1.3375.2.2.12.8.3.1.3',
  ltmDnsServerStatXfrNotifies => '1.3.6.1.4.1.3375.2.2.12.8.3.1.4',
  ltmDnsServerStatXfrNotifyFailed => '1.3.6.1.4.1.3375.2.2.12.8.3.1.5',
  ltmDnsCacheForwardZone => '1.3.6.1.4.1.3375.2.2.12.9',
  ltmDnsCacheForwardZoneNumber => '1.3.6.1.4.1.3375.2.2.12.9.1',
  ltmDnsCacheForwardZoneTable => '1.3.6.1.4.1.3375.2.2.12.9.2',
  ltmDnsCacheForwardZoneEntry => '1.3.6.1.4.1.3375.2.2.12.9.2.1',
  ltmDnsCacheForwardZoneName => '1.3.6.1.4.1.3375.2.2.12.9.2.1.1',
  ltmDnsCacheForwardZoneCacheName => '1.3.6.1.4.1.3375.2.2.12.9.2.1.2',
  ltmDnsCacheForwardZoneNameServer => '1.3.6.1.4.1.3375.2.2.12.10',
  ltmDnsCacheForwardZoneNameServerNumber => '1.3.6.1.4.1.3375.2.2.12.10.1',
  ltmDnsCacheForwardZoneNameServerTable => '1.3.6.1.4.1.3375.2.2.12.10.2',
  ltmDnsCacheForwardZoneNameServerEntry => '1.3.6.1.4.1.3375.2.2.12.10.2.1',
  ltmDnsCacheForwardZoneNameServerAddrType => '1.3.6.1.4.1.3375.2.2.12.10.2.1.1',
  ltmDnsCacheForwardZoneNameServerAddr => '1.3.6.1.4.1.3375.2.2.12.10.2.1.2',
  ltmDnsCacheForwardZoneNameServerPort => '1.3.6.1.4.1.3375.2.2.12.10.2.1.3',
  ltmDnsCacheForwardZoneNameServerForwardZoneName => '1.3.6.1.4.1.3375.2.2.12.10.2.1.4',
  ltmDnsCacheForwardZoneNameServerCacheName => '1.3.6.1.4.1.3375.2.2.12.10.2.1.5',
  ltmBWC => '1.3.6.1.4.1.3375.2.2.13',
  ltmBwcPolicyStat => '1.3.6.1.4.1.3375.2.2.13.1',
  ltmBwcPolicyStatResetStats => '1.3.6.1.4.1.3375.2.2.13.1.1',
  ltmBwcPolicyStatNumber => '1.3.6.1.4.1.3375.2.2.13.1.2',
  ltmBwcPolicyStatTable => '1.3.6.1.4.1.3375.2.2.13.1.3',
  ltmBwcPolicyStatEntry => '1.3.6.1.4.1.3375.2.2.13.1.3.1',
  ltmBwcPolicyStatName => '1.3.6.1.4.1.3375.2.2.13.1.3.1.1',
  ltmBwcPolicyStatBytesPerSec => '1.3.6.1.4.1.3375.2.2.13.1.3.1.2',
  ltmBwcPolicyStatBytesPerSecOut => '1.3.6.1.4.1.3375.2.2.13.1.3.1.3',
  ltmBwcPolicyStatBytesIn => '1.3.6.1.4.1.3375.2.2.13.1.3.1.4',
  ltmBwcPolicyStatBytesPassed => '1.3.6.1.4.1.3375.2.2.13.1.3.1.5',
  ltmBwcPolicyStatBytesDropped => '1.3.6.1.4.1.3375.2.2.13.1.3.1.6',
  ltmBwcPolicyStatPacketsIn => '1.3.6.1.4.1.3375.2.2.13.1.3.1.7',
  ltmBwcPolicyStatPacketsPassed => '1.3.6.1.4.1.3375.2.2.13.1.3.1.8',
  ltmBwcPolicyStatActivePolicies => '1.3.6.1.4.1.3375.2.2.13.1.3.1.9',
  ltmBwcPolicyStatInactivePolicies => '1.3.6.1.4.1.3375.2.2.13.1.3.1.10',
  ltmBwcPolicyStatTotalPolicies => '1.3.6.1.4.1.3375.2.2.13.1.3.1.11',
  ltmBwcPolicyStatTimeDataCollected => '1.3.6.1.4.1.3375.2.2.13.1.3.1.12',
  ltmLSNs => '1.3.6.1.4.1.3375.2.2.14',
  ltmLsnPrefix => '1.3.6.1.4.1.3375.2.2.14.1',
  ltmLsnPrefixNumber => '1.3.6.1.4.1.3375.2.2.14.1.1',
  ltmLsnPrefixTable => '1.3.6.1.4.1.3375.2.2.14.1.2',
  ltmLsnPrefixEntry => '1.3.6.1.4.1.3375.2.2.14.1.2.1',
  ltmLsnPrefixName => '1.3.6.1.4.1.3375.2.2.14.1.2.1.1',
  ltmLsnPrefixAddrType => '1.3.6.1.4.1.3375.2.2.14.1.2.1.2',
  ltmLsnPrefixAddr => '1.3.6.1.4.1.3375.2.2.14.1.2.1.3',
  ltmLsnPool => '1.3.6.1.4.1.3375.2.2.14.2',
  ltmLsnPoolNumber => '1.3.6.1.4.1.3375.2.2.14.2.1',
  ltmLsnPoolTable => '1.3.6.1.4.1.3375.2.2.14.2.2',
  ltmLsnPoolEntry => '1.3.6.1.4.1.3375.2.2.14.2.2.1',
  ltmLsnPoolName => '1.3.6.1.4.1.3375.2.2.14.2.2.1.1',
  ltmLsnPoolMemberCount => '1.3.6.1.4.1.3375.2.2.14.2.2.1.2',
  ltmLsnPoolRouteAdvertisement => '1.3.6.1.4.1.3375.2.2.14.2.2.1.3',
  ltmLsnPoolRouteAdvertisementDefinition => 'F5-BIGIP-LOCAL-MIB::ltmLsnPoolRouteAdvertisement',
  ltmLsnPoolMode => '1.3.6.1.4.1.3375.2.2.14.2.2.1.4',
  ltmLsnPoolModeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmLsnPoolMode',
  ltmLsnPoolPersistenceMode => '1.3.6.1.4.1.3375.2.2.14.2.2.1.5',
  ltmLsnPoolPersistenceModeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmLsnPoolPersistenceMode',
  ltmLsnPoolPersistenceTimeout => '1.3.6.1.4.1.3375.2.2.14.2.2.1.6',
  ltmLsnPoolPersistencePrefixLengthIpv4 => '1.3.6.1.4.1.3375.2.2.14.2.2.1.7',
  ltmLsnPoolPersistencePrefixLengthIpv6 => '1.3.6.1.4.1.3375.2.2.14.2.2.1.8',
  ltmLsnPoolInboundConnections => '1.3.6.1.4.1.3375.2.2.14.2.2.1.9',
  ltmLsnPoolInboundConnectionsDefinition => 'F5-BIGIP-LOCAL-MIB::ltmLsnPoolInboundConnections',
  ltmLsnPoolIcmpEcho => '1.3.6.1.4.1.3375.2.2.14.2.2.1.10',
  ltmLsnPoolIcmpEchoDefinition => 'F5-BIGIP-LOCAL-MIB::ltmLsnPoolIcmpEcho',
  ltmLsnPoolTranslationPortRangeLow => '1.3.6.1.4.1.3375.2.2.14.2.2.1.11',
  ltmLsnPoolTranslationPortRangeHigh => '1.3.6.1.4.1.3375.2.2.14.2.2.1.12',
  ltmLsnPoolClientConnectionLimit => '1.3.6.1.4.1.3375.2.2.14.2.2.1.13',
  ltmLsnPoolEgressInterfacesEnabled => '1.3.6.1.4.1.3375.2.2.14.2.2.1.14',
  ltmLsnPoolEgressInterfacesEnabledDefinition => 'F5-BIGIP-LOCAL-MIB::ltmLsnPoolEgressInterfacesEnabled',
  ltmLsnPoolLogPublisher => '1.3.6.1.4.1.3375.2.2.14.2.2.1.15',
  ltmLsnPoolHairpinMode => '1.3.6.1.4.1.3375.2.2.14.2.2.1.16',
  ltmLsnPoolHairpinModeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmLsnPoolHairpinMode',
  ltmLsnPoolLogProfile => '1.3.6.1.4.1.3375.2.2.14.2.2.1.17',
  ltmLsnPrefixLsnPool => '1.3.6.1.4.1.3375.2.2.14.3',
  ltmLsnPrefixLsnPoolNumber => '1.3.6.1.4.1.3375.2.2.14.3.1',
  ltmLsnPrefixLsnPoolTable => '1.3.6.1.4.1.3375.2.2.14.3.2',
  ltmLsnPrefixLsnPoolEntry => '1.3.6.1.4.1.3375.2.2.14.3.2.1',
  ltmLsnPrefixLsnPoolLsnPrefixName => '1.3.6.1.4.1.3375.2.2.14.3.2.1.1',
  ltmLsnPrefixLsnPoolLsnPoolName => '1.3.6.1.4.1.3375.2.2.14.3.2.1.2',
  ltmLsnPrefixLsnPoolPrefixAddressType => '1.3.6.1.4.1.3375.2.2.14.3.2.1.3',
  ltmLsnPrefixLsnPoolPrefixAddress => '1.3.6.1.4.1.3375.2.2.14.3.2.1.4',
  ltmLsnPrefixLsnPoolBackup => '1.3.6.1.4.1.3375.2.2.14.4',
  ltmLsnPrefixLsnPoolBackupNumber => '1.3.6.1.4.1.3375.2.2.14.4.1',
  ltmLsnPrefixLsnPoolBackupTable => '1.3.6.1.4.1.3375.2.2.14.4.2',
  ltmLsnPrefixLsnPoolBackupEntry => '1.3.6.1.4.1.3375.2.2.14.4.2.1',
  ltmLsnPrefixLsnPoolBackupLsnPrefixName => '1.3.6.1.4.1.3375.2.2.14.4.2.1.1',
  ltmLsnPrefixLsnPoolBackupLsnPoolName => '1.3.6.1.4.1.3375.2.2.14.4.2.1.2',
  ltmLsnPrefixLsnPoolBackupPrefixAddressType => '1.3.6.1.4.1.3375.2.2.14.4.2.1.3',
  ltmLsnPrefixLsnPoolBackupPrefixAddress => '1.3.6.1.4.1.3375.2.2.14.4.2.1.4',
  ltmLsnPoolVlan => '1.3.6.1.4.1.3375.2.2.14.5',
  ltmLsnPoolVlanNumber => '1.3.6.1.4.1.3375.2.2.14.5.1',
  ltmLsnPoolVlanTable => '1.3.6.1.4.1.3375.2.2.14.5.2',
  ltmLsnPoolVlanEntry => '1.3.6.1.4.1.3375.2.2.14.5.2.1',
  ltmLsnPoolVlanLsnPoolName => '1.3.6.1.4.1.3375.2.2.14.5.2.1.1',
  ltmLsnPoolVlanVlanName => '1.3.6.1.4.1.3375.2.2.14.5.2.1.2',
  ltmLsnPoolStat => '1.3.6.1.4.1.3375.2.2.14.6',
  ltmLsnPoolStatResetStats => '1.3.6.1.4.1.3375.2.2.14.6.1',
  ltmLsnPoolStatNumber => '1.3.6.1.4.1.3375.2.2.14.6.2',
  ltmLsnPoolStatTable => '1.3.6.1.4.1.3375.2.2.14.6.3',
  ltmLsnPoolStatEntry => '1.3.6.1.4.1.3375.2.2.14.6.3.1',
  ltmLsnPoolStatName => '1.3.6.1.4.1.3375.2.2.14.6.3.1.1',
  ltmLsnPoolStatTranslationRequests => '1.3.6.1.4.1.3375.2.2.14.6.3.1.2',
  ltmLsnPoolStatHairpinConnectionRequests => '1.3.6.1.4.1.3375.2.2.14.6.3.1.3',
  ltmLsnPoolStatActiveTranslations => '1.3.6.1.4.1.3375.2.2.14.6.3.1.4',
  ltmLsnPoolStatActiveHairpinConnections => '1.3.6.1.4.1.3375.2.2.14.6.3.1.5',
  ltmLsnPoolStatTranslationRequestFailures => '1.3.6.1.4.1.3375.2.2.14.6.3.1.6',
  ltmLsnPoolStatPersistenceMappingFailures => '1.3.6.1.4.1.3375.2.2.14.6.3.1.7',
  ltmLsnPoolStatHairpinConnectionFailures => '1.3.6.1.4.1.3375.2.2.14.6.3.1.8',
  ltmLsnPoolStatBackupPoolTranslations => '1.3.6.1.4.1.3375.2.2.14.6.3.1.9',
  ltmLsnPoolStatLogAttempts => '1.3.6.1.4.1.3375.2.2.14.6.3.1.10',
  ltmLsnPoolStatLogFailures => '1.3.6.1.4.1.3375.2.2.14.6.3.1.11',
  ltmLsnPoolStatTotalEndPoints => '1.3.6.1.4.1.3375.2.2.14.6.3.1.12',
  ltmLsnPoolStatPcpAnnounceRequests => '1.3.6.1.4.1.3375.2.2.14.6.3.1.13',
  ltmLsnPoolStatPcpAnnounceResponsesUcast => '1.3.6.1.4.1.3375.2.2.14.6.3.1.14',
  ltmLsnPoolStatPcpAnnounceResponsesMulticast => '1.3.6.1.4.1.3375.2.2.14.6.3.1.15',
  ltmLsnPoolStatPcpMapRequests => '1.3.6.1.4.1.3375.2.2.14.6.3.1.16',
  ltmLsnPoolStatPcpMapResponses => '1.3.6.1.4.1.3375.2.2.14.6.3.1.17',
  ltmLsnPoolStatPcpPeerRequests => '1.3.6.1.4.1.3375.2.2.14.6.3.1.18',
  ltmLsnPoolStatPcpPeerResponses => '1.3.6.1.4.1.3375.2.2.14.6.3.1.19',
  ltmLsnPoolStatPcpErrorsInvalidRequest => '1.3.6.1.4.1.3375.2.2.14.6.3.1.20',
  ltmLsnPoolStatPcpErrorsUnavailableResource => '1.3.6.1.4.1.3375.2.2.14.6.3.1.21',
  ltmLsnPoolStatPcpErrorsNotAuthorized => '1.3.6.1.4.1.3375.2.2.14.6.3.1.22',
  ltmLsnPoolStatPcpErrorsOther => '1.3.6.1.4.1.3375.2.2.14.6.3.1.23',
  ltmLsnPoolStatActivePortBlocks => '1.3.6.1.4.1.3375.2.2.14.6.3.1.24',
  ltmLsnPoolStatActiveClientsReachedLimit => '1.3.6.1.4.1.3375.2.2.14.6.3.1.25',
  ltmLsnPoolStatActiveZombiePortBlocks => '1.3.6.1.4.1.3375.2.2.14.6.3.1.26',
  ltmLsnPoolStatTotalClientsReachedLimit => '1.3.6.1.4.1.3375.2.2.14.6.3.1.27',
  ltmLsnPoolStatTotalPortBlockAllocations => '1.3.6.1.4.1.3375.2.2.14.6.3.1.28',
  ltmLsnPoolStatTotalPortBlockAllocationFailures => '1.3.6.1.4.1.3375.2.2.14.6.3.1.29',
  ltmLsnPoolStatTotalPortBlockDeallocations => '1.3.6.1.4.1.3375.2.2.14.6.3.1.30',
  ltmLsnPoolStatTotalZombiePortBlocksCreated => '1.3.6.1.4.1.3375.2.2.14.6.3.1.31',
  ltmLsnPoolStatTotalZombiePortBlocksDeleted => '1.3.6.1.4.1.3375.2.2.14.6.3.1.32',
  ltmLsnPoolStatTotalZombiePortBlockConnectionsKilled => '1.3.6.1.4.1.3375.2.2.14.6.3.1.33',
  ltmRouteDomains => '1.3.6.1.4.1.3375.2.2.15',
  ltmFwIpintRouteDomainStat => '1.3.6.1.4.1.3375.2.2.15.1',
  ltmFwIpintRouteDomainStatResetStats => '1.3.6.1.4.1.3375.2.2.15.1.1',
  ltmFwIpintRouteDomainStatNumber => '1.3.6.1.4.1.3375.2.2.15.1.2',
  ltmFwIpintRouteDomainStatTable => '1.3.6.1.4.1.3375.2.2.15.1.3',
  ltmFwIpintRouteDomainStatEntry => '1.3.6.1.4.1.3375.2.2.15.1.3.1',
  ltmFwIpintRouteDomainStatContextName => '1.3.6.1.4.1.3375.2.2.15.1.3.1.1',
  ltmFwIpintRouteDomainStatBlClassName => '1.3.6.1.4.1.3375.2.2.15.1.3.1.2',
  ltmFwIpintRouteDomainStatCounter => '1.3.6.1.4.1.3375.2.2.15.1.3.1.3',
  ltmRouteDomainStat => '1.3.6.1.4.1.3375.2.2.15.2',
  ltmRouteDomainStatResetStats => '1.3.6.1.4.1.3375.2.2.15.2.1',
  ltmRouteDomainStatNumber => '1.3.6.1.4.1.3375.2.2.15.2.2',
  ltmRouteDomainStatTable => '1.3.6.1.4.1.3375.2.2.15.2.3',
  ltmRouteDomainStatEntry => '1.3.6.1.4.1.3375.2.2.15.2.3.1',
  ltmRouteDomainStatName => '1.3.6.1.4.1.3375.2.2.15.2.3.1.1',
  ltmRouteDomainStatConnLimit => '1.3.6.1.4.1.3375.2.2.15.2.3.1.2',
  ltmRouteDomainStatConnectionFlowMiss => '1.3.6.1.4.1.3375.2.2.15.2.3.1.3',
  ltmRouteDomainStatClientPktsIn => '1.3.6.1.4.1.3375.2.2.15.2.3.1.4',
  ltmRouteDomainStatClientBytesIn => '1.3.6.1.4.1.3375.2.2.15.2.3.1.5',
  ltmRouteDomainStatClientPktsOut => '1.3.6.1.4.1.3375.2.2.15.2.3.1.6',
  ltmRouteDomainStatClientBytesOut => '1.3.6.1.4.1.3375.2.2.15.2.3.1.7',
  ltmRouteDomainStatClientMaxConns => '1.3.6.1.4.1.3375.2.2.15.2.3.1.8',
  ltmRouteDomainStatClientTotConns => '1.3.6.1.4.1.3375.2.2.15.2.3.1.9',
  ltmRouteDomainStatClientCurConns => '1.3.6.1.4.1.3375.2.2.15.2.3.1.10',
  ltmRouteDomainStatClientEvictedConns => '1.3.6.1.4.1.3375.2.2.15.2.3.1.11',
  ltmRouteDomainStatClientSlowKilled => '1.3.6.1.4.1.3375.2.2.15.2.3.1.12',
  ltmRouteDomainStatServerPktsIn => '1.3.6.1.4.1.3375.2.2.15.2.3.1.13',
  ltmRouteDomainStatServerBytesIn => '1.3.6.1.4.1.3375.2.2.15.2.3.1.14',
  ltmRouteDomainStatServerPktsOut => '1.3.6.1.4.1.3375.2.2.15.2.3.1.15',
  ltmRouteDomainStatServerBytesOut => '1.3.6.1.4.1.3375.2.2.15.2.3.1.16',
  ltmRouteDomainStatServerMaxConns => '1.3.6.1.4.1.3375.2.2.15.2.3.1.17',
  ltmRouteDomainStatServerTotConns => '1.3.6.1.4.1.3375.2.2.15.2.3.1.18',
  ltmRouteDomainStatServerCurConns => '1.3.6.1.4.1.3375.2.2.15.2.3.1.19',
  ltmRouteDomainStatServerEvictedConns => '1.3.6.1.4.1.3375.2.2.15.2.3.1.20',
  ltmRouteDomainStatServerSlowKilled => '1.3.6.1.4.1.3375.2.2.15.2.3.1.21',
  ltmPolicies => '1.3.6.1.4.1.3375.2.2.16',
  ltmFlowEvictionPolicyStat => '1.3.6.1.4.1.3375.2.2.16.1',
  ltmFlowEvictionPolicyStatResetStats => '1.3.6.1.4.1.3375.2.2.16.1.1',
  ltmFlowEvictionPolicyStatNumber => '1.3.6.1.4.1.3375.2.2.16.1.2',
  ltmFlowEvictionPolicyStatTable => '1.3.6.1.4.1.3375.2.2.16.1.3',
  ltmFlowEvictionPolicyStatEntry => '1.3.6.1.4.1.3375.2.2.16.1.3.1',
  ltmFlowEvictionPolicyStatPolicyName => '1.3.6.1.4.1.3375.2.2.16.1.3.1.1',
  ltmFlowEvictionPolicyStatSweptContext => '1.3.6.1.4.1.3375.2.2.16.1.3.1.2',
  ltmFlowEvictionPolicyStatContextName => '1.3.6.1.4.1.3375.2.2.16.1.3.1.3',
  ltmFlowEvictionPolicyStatEvicted => '1.3.6.1.4.1.3375.2.2.16.1.3.1.4',
  ltmFwPolicyRuleStat => '1.3.6.1.4.1.3375.2.2.16.2',
  ltmFwPolicyRuleStatNumber => '1.3.6.1.4.1.3375.2.2.16.2.1',
  ltmFwPolicyRuleStatTable => '1.3.6.1.4.1.3375.2.2.16.2.2',
  ltmFwPolicyRuleStatEntry => '1.3.6.1.4.1.3375.2.2.16.2.2.1',
  ltmFwPolicyRuleStatContextType => '1.3.6.1.4.1.3375.2.2.16.2.2.1.1',
  ltmFwPolicyRuleStatContextName => '1.3.6.1.4.1.3375.2.2.16.2.2.1.2',
  ltmFwPolicyRuleStatRuleName => '1.3.6.1.4.1.3375.2.2.16.2.2.1.3',
  ltmFwPolicyRuleStatRuleListName => '1.3.6.1.4.1.3375.2.2.16.2.2.1.4',
  ltmFwPolicyRuleStatPolicyName => '1.3.6.1.4.1.3375.2.2.16.2.2.1.5',
  ltmFwPolicyRuleStatRuleStatType => '1.3.6.1.4.1.3375.2.2.16.2.2.1.6',
  ltmFwPolicyRuleStatRuleStatTypeDefinition => 'F5-BIGIP-LOCAL-MIB::ltmFwPolicyRuleStatRuleStatType',
  ltmFwPolicyRuleStatActualRule => '1.3.6.1.4.1.3375.2.2.16.2.2.1.7',
  ltmFwPolicyRuleStatCounter => '1.3.6.1.4.1.3375.2.2.16.2.2.1.8',
  ltmFwPolicyRuleStatLastHitTime => '1.3.6.1.4.1.3375.2.2.16.2.2.1.9',
  ltmFwPolicyRuleStatLastHitTimeFmt => '1.3.6.1.4.1.3375.2.2.16.2.2.1.10',
  ltmFwPolicyRuleStatOverlapper => '1.3.6.1.4.1.3375.2.2.16.2.2.1.11',
  ltmFwPolicyRuleStatOverlapType => '1.3.6.1.4.1.3375.2.2.16.2.2.1.12',
  ltmOCSPStapling => '1.3.6.1.4.1.3375.2.2.17',
  ltmOcspStaplingParameters => '1.3.6.1.4.1.3375.2.2.17.1',
  ltmOcspStaplingParametersNumber => '1.3.6.1.4.1.3375.2.2.17.1.1',
  ltmOcspStaplingParametersTable => '1.3.6.1.4.1.3375.2.2.17.1.2',
  ltmOcspStaplingParametersEntry => '1.3.6.1.4.1.3375.2.2.17.1.2.1',
  ltmOcspStaplingParametersName => '1.3.6.1.4.1.3375.2.2.17.1.2.1.1',
  ltmOcspStaplingParametersUseProxyServer => '1.3.6.1.4.1.3375.2.2.17.1.2.1.2',
  ltmOcspStaplingParametersUseProxyServerDefinition => 'F5-BIGIP-LOCAL-MIB::ltmOcspStaplingParametersUseProxyServer',
  ltmOcspStaplingParametersProxyServerPool => '1.3.6.1.4.1.3375.2.2.17.1.2.1.3',
  ltmOcspStaplingParametersDnsResolver => '1.3.6.1.4.1.3375.2.2.17.1.2.1.4',
  ltmOcspStaplingParametersTrustedCa => '1.3.6.1.4.1.3375.2.2.17.1.2.1.5',
  ltmOcspStaplingParametersTrustedResponders => '1.3.6.1.4.1.3375.2.2.17.1.2.1.6',
  ltmOcspStaplingParametersUrl => '1.3.6.1.4.1.3375.2.2.17.1.2.1.7',
  ltmOcspStaplingParametersSignerCert => '1.3.6.1.4.1.3375.2.2.17.1.2.1.8',
  ltmOcspStaplingParametersSignerKey => '1.3.6.1.4.1.3375.2.2.17.1.2.1.9',
  ltmOcspStaplingParametersSignHash => '1.3.6.1.4.1.3375.2.2.17.1.2.1.10',
  ltmOcspStaplingParametersSignHashDefinition => 'F5-BIGIP-LOCAL-MIB::ltmOcspStaplingParametersSignHash',
  ltmOcspStaplingParametersTimeout => '1.3.6.1.4.1.3375.2.2.17.1.2.1.11',
  ltmOcspStaplingParametersClockSkew => '1.3.6.1.4.1.3375.2.2.17.1.2.1.12',
  ltmOcspStaplingParametersStatusAge => '1.3.6.1.4.1.3375.2.2.17.1.2.1.13',
  ltmOcspStaplingParametersCacheTimeout => '1.3.6.1.4.1.3375.2.2.17.1.2.1.14',
  ltmOcspStaplingParametersCacheErrorTimeout => '1.3.6.1.4.1.3375.2.2.17.1.2.1.15',
  ltmOcspStaplingParametersStrictRespCertCheck => '1.3.6.1.4.1.3375.2.2.17.1.2.1.16',
  ltmOcspStaplingParametersStrictRespCertCheckDefinition => 'F5-BIGIP-LOCAL-MIB::ltmOcspStaplingParametersStrictRespCertCheck',
  bigipLocalTMGroups => '1.3.6.1.4.1.3375.2.5.2.2',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'F5-BIGIP-LOCAL-MIB'} = {
  ltmDosApplicationLatencyBasedIpRateLimiting => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmFastHttpProfileConnpoolReplenish => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmHttpProfilePassthroughOversizeClientHeaders => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmTransAddrArpEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmLsnLogProfileStartInboundAction => {
    '1' => 'disabled',
    '2' => 'enabled',
    '3' => 'backup-allocation-only',
  },
  ltmAlgLogProfileEndDataElementsElements => {
    '1' => 'destination',
  },
  ltmPcpProfileConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmPersistProfileMirror => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmServerSslModsslmethods => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmClientSslConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmIiopProfileConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmUserStatProfileConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmHttpProfileOneConnect => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmVirtualServType => {
    '0' => 'poolbased',
    '1' => 'ipforward',
    '2' => 'l2forward',
    '3' => 'reject',
    '4' => 'fastl4',
    '5' => 'fasthttp',
    '6' => 'stateless',
    '7' => 'dhcp-relay',
    '8' => 'internal',
  },
  ltmIsessionProfileCompressionDeflate => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  ltmSctpProfileRcvOrdered => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmStreamProfileConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmClientSslAuthenticateOnce => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmFtpProfileTranslateExtended => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmPptpProfileConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmTcpProfileDeferredAccept => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmVirtualServListedEnabledVlans => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmDosApplicationHeavyUrlAutomaticDetection => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmHttpProfilePassthroughExcessClientHeaders => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmFastL4ProfileSoftSyncookie => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmRtspProfileProxy => {
    '0' => 'none',
    '1' => 'external',
    '2' => 'internal',
  },
  ltmLsnLogProfileStartOutboundElementsElements => {
    '1' => 'destination',
  },
  ltmFastL4ProfileRttFromServer => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmServerSslFwdpEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmHttpProfileRedirectRewrite => {
    '0' => 'none',
    '1' => 'all',
    '2' => 'matching',
    '3' => 'nodes',
  },
  ltmTcpProfileEcn => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmLsnLogProfileEndOutboundElementsElements => {
    '1' => 'destination',
  },
  ltmVirtualServSnatType => {
    '0' => 'none',
    '1' => 'transaddr',
    '2' => 'snatpool',
    '3' => 'automap',
  },
  ltmVirtualModuleScoreModuleType => {
    '0' => 'asm',
    '1' => 'sam',
    '2' => 'wam',
  },
  ltmDosApplicationLatencyBasedSiteRateLimiting => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmVirtualServProfileContext => {
    '0' => 'all',
    '1' => 'client',
    '2' => 'server',
  },
  ltmClientSslGenericAlert => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmLsnPoolPersistenceMode => {
    '0' => 'none',
    '1' => 'address',
    '2' => 'addressPort',
  },
  ltmDnsCacheAnswerDefaultZones => {
    '0' => 'no',
    '1' => 'yes',
  },
  ltmDosApplicationTpsBasedUrlRateLimiting => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmAuthProfileConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmRateFilterQtype => {
    '0' => 'none',
    '1' => 'sfq',
    '2' => 'pfifo',
  },
  ltmHttpCompressionProfileVaryHeader => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmTcpProfileMptcpFastjoin => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmPoolMemberAvailabilityState => {
    '0' => 'none',
    '1' => 'green',
    '2' => 'yellow',
    '3' => 'red',
    '4' => 'blue',
  },
  ltmDosProfileConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmFastL4ProfileHardSyncookie => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmFastL4ProfilePvaAccelMode => {
    '0' => 'full',
    '1' => 'partial',
    '2' => 'none',
  },
  ltmLsnLogProfileStartOutboundAction => {
    '1' => 'disabled',
    '2' => 'enabled',
    '3' => 'backup-allocation-only',
  },
  ltmDnsCachePrefetchKey => {
    '0' => 'no',
    '1' => 'yes',
  },
  ltmSnatListedEnabledVlans => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmFastL4ProfileTcpGenerateIsn => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmXmlProfileAbortOnError => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmServerSslSslSignHash => {
    '0' => 'any',
    '1' => 'sha1',
    '2' => 'sha256',
    '3' => 'sha384',
  },
  ltmTcpProfileMptcpDebug => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmHttpClassWaEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmSctpProfileSndPartial => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmNodeAddrMonitorState => {
    '0' => 'unchecked',
    '1' => 'checking',
    '2' => 'inband',
    '3' => 'forced-up',
    '4' => 'up',
    '19' => 'down',
    '20' => 'forced-down',
    '22' => 'irule-down',
    '23' => 'inband-down',
    '24' => 'down-manual-resume',
    '25' => 'disabled',
  },
  ltmSnatType => {
    '0' => 'none',
    '1' => 'transaddr',
    '2' => 'snatpool',
    '3' => 'automap',
  },
  ltmIsessionProfileMode => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  ltmFastL4ProfileExplicitFlowMigration => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmPoolMemberMonitorState => {
    '0' => 'unchecked',
    '1' => 'checking',
    '2' => 'inband',
    '3' => 'forced-up',
    '4' => 'up',
    '19' => 'down',
    '20' => 'forced-down',
    '22' => 'irule-down',
    '23' => 'inband-down',
    '24' => 'down-manual-resume',
    '25' => 'disabled',
  },
  ltmLsnPoolInboundConnections => {
    '0' => 'disabled',
    '1' => 'automatic',
    '2' => 'explicit',
  },
  ltmIsessionProfilePortTransparency => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  ltmFastL4ProfileRttFromClient => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmTcpProfileTimestamps => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmPoolMemberEnabledState => {
    '0' => 'none',
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'disabledbyparent',
  },
  ltmSpdyProfileInsertHeader => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmLsnLogProfileEndInboundAction => {
    '1' => 'disabled',
    '2' => 'enabled',
    '3' => 'backup-allocation-only',
  },
  ltmDnsProfileCacheEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmAlgLogProfileConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmPcpProfileThirdPartyOption => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmVirtualAddrEnabledState => {
    '0' => 'none',
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'disabledbyparent',
  },
  ltmTcpProfileEarlyRetransmit => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmSctpProfileResetOnTimeout => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmIsessionProfileDeduplication => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  ltmVirtualAddrEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmHttpProfileResponseChunking => {
    '0' => 'preserve',
    '1' => 'selective',
    '2' => 'unchunk',
    '3' => 'rechunk',
  },
  ltmOcspStaplingParametersUseProxyServer => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmLsnLogProfileEndOutboundAction => {
    '1' => 'disabled',
    '2' => 'enabled',
    '3' => 'backup-allocation-only',
  },
  ltmTcpProfileMptcpFallback => {
    '0' => 'reset',
    '1' => 'retransmit',
    '2' => 'activeaccept',
    '3' => 'accept',
  },
  ltmDosApplicationTpsBasedIpClientSideDefense => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmDnsCacheType => {
    '0' => 'resolver',
    '1' => 'validating-resolver',
    '2' => 'transparent-resolver',
  },
  ltmPersistProfileConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmIiopProfilePersistRequestId => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmVirtualAddrAvailabilityState => {
    '0' => 'none',
    '1' => 'green',
    '2' => 'yellow',
    '3' => 'red',
    '4' => 'blue',
  },
  ltmClientSslModsslmethods => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmClientSslPeerCertMode => {
    '0' => 'ignore',
    '1' => 'require',
    '2' => 'request',
    '3' => 'auto',
  },
  ltmIsessionProfileCompression => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  ltmDnsProfileConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmVsStatusEnabledState => {
    '0' => 'none',
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'disabledbyparent',
  },
  ltmClientSslFwdpBypassEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmFwPolicyRuleStatRuleStatType => {
    '1' => 'enforced',
    '2' => 'staged',
    '3' => 'active',
    '4' => 'overlapper',
  },
  ltmTcpProfileLimitedTransmit => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmHttpProfileCompressPreferredMethod => {
    '0' => 'deflate',
    '1' => 'gzip',
  },
  ltmDosAttackDataStatAttackType => {
    '1' => 'ether-brdcst-pkt',
    '2' => 'ether-multicst-pkt',
    '3' => 'ether-mac-sa-eq-da',
    '4' => 'arp-flood',
    '5' => 'bad-ver',
    '6' => 'hdr-len-too-short',
    '7' => 'hdr-len-gt-l2-len',
    '8' => 'ip-len-gt-l2-len',
    '9' => 'l2-len-ggt-ip-len',
    '10' => 'no-l4',
    '11' => 'bad-ttl-val',
    '12' => 'ttl-leq-one',
    '13' => 'ip-err-chksum',
    '14' => 'ip-opt-frames',
    '15' => 'ip-frag-flood',
    '16' => 'bad-igmp-frame',
    '17' => 'ip-short-frag',
    '18' => 'igmp-flood',
    '19' => 'bad-ipv6-ver',
    '20' => 'ipv6-len-gt-l2-len',
    '21' => 'payload-len-ls-l2-len',
    '22' => 'too-many-ext-hdrs',
    '23' => 'dup-ext-hdr',
    '24' => 'ext-hdr-too-large',
    '25' => 'l4-ext-hdrs-go-end',
    '26' => 'bad-ipv6-hop-cnt',
    '27' => 'hop-cnt-leq-one',
    '28' => 'routing-header-type-0',
    '29' => 'ipv6-ext-hdr-frames',
    '30' => 'ipv6-frag-flood',
    '31' => 'bad-ext-hdr-order',
    '32' => 'ipv6-short-frag',
    '33' => 'igmp-frag-flood',
    '34' => 'tcp-hdr-len-too-short',
    '35' => 'tcp-hdr-len-gt-l2-len',
    '36' => 'unk-tcp-opt-type',
    '37' => 'opt-present-with-illegal-len',
    '38' => 'tcp-opt-overruns-tcp-hdr',
    '39' => 'bad-tcp-chksum',
    '40' => 'bad-tcp-flags-all-set',
    '41' => 'bad-tcp-flags-all-clr',
    '42' => 'syn-and-fin-set',
    '43' => 'fin-only-set',
    '44' => 'tcp-syn-flood',
    '45' => 'tcp-synack-flood',
    '46' => 'tcp-rst-flood',
    '47' => 'bad-icmp-chksum',
    '48' => 'tcp-bad-urg',
    '49' => 'tcp-window-size',
    '50' => 'ipv6-atomic-frag',
    '51' => 'bad-udp-hdr',
    '52' => 'bad-udp-chksum',
    '53' => 'ip-bad-src',
    '54' => 'ipv6-bad-src',
    '55' => 'bad-icmp-frame',
    '56' => 'icmpv4-flood',
    '57' => 'icmp-frag',
    '58' => 'icmp-frame-too-large',
    '59' => 'icmpv6-flood',
    '60' => 'host-unreachable',
    '61' => 'tidcmp',
    '62' => 'udp-flood',
    '63' => 'dns-oversize',
    '64' => 'land-attack',
    '65' => 'dns-response-flood',
    '66' => 'dns-malformed',
    '67' => 'dns-qdcount-limit',
    '68' => 'dns-any-query',
    '69' => 'dns-a-query',
    '70' => 'dns-ptr-query',
    '71' => 'dns-ns-query',
    '72' => 'dns-soa-query',
    '73' => 'dns-cname-query',
    '74' => 'dns-mx-query',
    '75' => 'dns-aaaa-query',
    '76' => 'dns-txt-query',
    '77' => 'dns-srv-query',
    '78' => 'dns-axfr-query',
    '79' => 'dns-ixfr-query',
    '80' => 'dns-other-query',
    '81' => 'sip-malformed',
    '82' => 'sip-invite-method',
    '83' => 'sip-ack-method',
    '84' => 'sip-options-method',
    '85' => 'sip-bye-method',
    '86' => 'sip-cancel-method',
    '87' => 'sip-register-method',
    '88' => 'sip-publish-method',
    '89' => 'sip-notify-method',
    '90' => 'sip-subscribe-method',
    '91' => 'sip-message-method',
    '92' => 'sip-prack-method',
    '93' => 'sip-other-method',
    '94' => 'ip-other-frag',
    '95' => 'ipv6-other-frag',
    '96' => 'ip-overlap-frag',
    '97' => 'ipv6-overlap-frag',
    '98' => 'bad-ip-opt',
    '99' => 'tcp-ack-flood',
    '101' => 'sweep',
    '102' => 'flood',
    '103' => 'unk-ipopt-type',
  },
  ltmVirtualAddrRouteAdvertisement => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmAlgLogProfileEndControlAction => {
    '1' => 'disabled',
    '2' => 'enabled',
    '3' => 'backup-allocation-only',
  },
  ltmClientSslSessionMirroring => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmUdpProfileAllowNoPayload => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmSpdyProfileActivationMode => {
    '0' => 'npn',
    '1' => 'always',
  },
  ltmPoolStatusAvailState => {
    '0' => 'none',
    '1' => 'green',
    '2' => 'yellow',
    '3' => 'red',
    '4' => 'blue',
    '5' => 'grey',
  },
  ltmPoolMinUpMemberAction => {
    '0' => 'unusedhaaction',
    '1' => 'reboot',
    '2' => 'restart',
    '3' => 'failover',
    '4' => 'goactive',
    '5' => 'noaction',
    '6' => 'restartall',
    '7' => 'failoveraborttm',
    '8' => 'gooffline',
    '9' => 'goofflinerestart',
    '10' => 'goofflineaborttm',
    '11' => 'goofflinedownlinks',
    '12' => 'goofflinedownlinksrestart',
  },
  ltmDnsProfileDnsExpressEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmRtspProfileUnicastRedirect => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmHttpCompressionProfilePreferredMethod => {
    '0' => 'deflate',
    '1' => 'gzip',
  },
  ltmFastL4ProfileTcpStripSack => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmHttpProfileTruncatedRedirects => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  ltmDnsCacheUseIpv4 => {
    '0' => 'no',
    '1' => 'yes',
  },
  ltmPoolActionOnServiceDown => {
    '0' => 'none',
    '1' => 'reset',
    '2' => 'drop',
    '3' => 'reselect',
  },
  ltmTcpProfileMptcp => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmVirtualServSrcport => {
    '0' => 'srcportreserve',
    '1' => 'srcportreservestrict',
    '2' => 'srcportchange',
  },
  ltmFastHttpProfileLayer7 => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmAlgLogProfileInboundAction => {
    '1' => 'disabled',
    '2' => 'enabled',
  },
  ltmHttpProfilePassthroughUnknownMethod => {
    '0' => 'reject',
    '1' => 'allow',
    '2' => 'passthrough',
  },
  ltmDosApplicationLatencyBasedIpClientSideDefense => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmWebAccelerationProfileCacheIgnoreClient => {
    '0' => 'none',
    '1' => 'maxage',
    '2' => 'all',
  },
  ltmVirtualServEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmNatArpEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmVirtualServTranslateAddr => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmUdpProfileConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmVirtualAddrArpEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmNatEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmFastL4ProfileConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmNodeAddrAvailabilityState => {
    '0' => 'none',
    '1' => 'green',
    '2' => 'yellow',
    '3' => 'red',
    '4' => 'blue',
  },
  ltmDnsQueryFilterType => {
    '0' => 'invalid',
    '1' => 'a',
    '2' => 'ns',
    '3' => 'md',
    '4' => 'mf',
    '5' => 'cname',
    '6' => 'soa',
    '7' => 'mb',
    '8' => 'mg',
    '9' => 'mr',
    '10' => 'null',
    '11' => 'wks',
    '12' => 'ptr',
    '13' => 'hinfo',
    '14' => 'minfo',
    '15' => 'mx',
    '16' => 'txt',
    '17' => 'rp',
    '18' => 'afsdb',
    '19' => 'x25',
    '20' => 'isdn',
    '21' => 'rt',
    '22' => 'nsap',
    '23' => 'nsap-ptr',
    '24' => 'sg',
    '25' => 'key',
    '26' => 'px',
    '27' => 'gpos',
    '28' => 'aaaa',
    '29' => 'loc',
    '30' => 'nxt',
    '31' => 'eid',
    '32' => 'nimloc',
    '33' => 'srv',
    '34' => 'atma',
    '35' => 'naptr',
    '36' => 'kx',
    '37' => 'cert',
    '38' => 'a6',
    '39' => 'dname',
    '40' => 'sink',
    '41' => 'opt',
    '249' => 'tkey',
    '250' => 'tsig',
    '251' => 'ixfr',
    '252' => 'axfr',
    '253' => 'mailb',
    '254' => 'maila',
    '255' => 'any',
    '256' => 'zxfr',
    '65536' => 'max',
  },
  ltmVAddrStatusAvailState => {
    '0' => 'none',
    '1' => 'green',
    '2' => 'yellow',
    '3' => 'red',
    '4' => 'blue',
    '5' => 'gray',
  },
  ltmDnsCacheUseUdp => {
    '0' => 'no',
    '1' => 'yes',
  },
  ltmVirtualAddrSfFlags => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  ltmPersistProfileMapProxies => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmDosApplicationHeavyUrlProtection => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmHttpProfilePassthroughOversizeServerHeaders => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmVirtualServSourceAddressTranslationType => {
    '0' => 'none',
    '1' => 'snat',
    '2' => 'lsn',
    '3' => 'automap',
  },
  ltmDnsProfileFastDnsEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmNodeAddrEnabledState => {
    '0' => 'none',
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'disabledbyparent',
  },
  ltmUdpProfileDatagramLb => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmHttpProfilePassthroughPipeline => {
    '0' => 'reject',
    '1' => 'allow',
    '2' => 'passthrough',
  },
  ltmAuthProfileCredentialSource => {
    '0' => 'httpbasicauth',
  },
  ltmAlgLogProfileEndControlElementsElements => {
    '1' => 'destination',
  },
  ltmServerSslMode => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  ltmDnsProfileSecurityEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmDnsProfileProcessRd => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmServerSslDropExpCert => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmSctpProfileConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmPoolAvailabilityState => {
    '0' => 'none',
    '1' => 'green',
    '2' => 'yellow',
    '3' => 'red',
    '4' => 'blue',
  },
  ltmV6rdProfileConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmFastL4ProfileTimeoutRecovery => {
    '0' => 'disconnect',
    '1' => 'fallback',
  },
  ltmHttpProfileInsertXforwardedFor => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  ltmDosApplicationTpsBasedUrlClientSideDefense => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmHttpProfileCompressCpusaver => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmSipProfileInsertRecordRoute => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmPoolMinUpMembersEnable => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmAlgLogProfileStartControlAction => {
    '1' => 'disabled',
    '2' => 'enabled',
    '3' => 'backup-allocation-only',
  },
  ltmLsnPoolHairpinMode => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  ltmFastHttpProfileUncleanShutdown => {
    '0' => 'disable',
    '1' => 'enable',
    '2' => 'fast',
  },
  ltmPoolMemberSessionStatus => {
    '1' => 'enabled',
    '2' => 'addrdisabled',
    '3' => 'servdisabled',
    '4' => 'disabled',
    '5' => 'forceddisabled',
  },
  ltmFastL4ProfileLooseClose => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmTcpProfileMptcpCsumVerify => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmTcpProfileTailLossProbe => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmTcpProfileMptcpCsum => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmTcpProfileProxyMss => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmTcpProfileMd5Sig => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmHttpProfileCompressAllowHttp10 => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmTcpProfileResetOnTimeout => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmTcpProfileHighPerfTcpExt => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmFastL4ProfileResetOnTimeout => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmRtspProfileSessionReconnect => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmClientSslFwdpEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmNodeAddrSessionStatus => {
    '1' => 'enabled',
    '2' => 'addrdisabled',
    '3' => 'servdisabled',
    '4' => 'disabled',
    '5' => 'forceddisabled',
  },
  ltmSpdyProfilePriorityHandling => {
    '0' => 'strict',
    '1' => 'fair',
  },
  ltmServerSslAuthenticateOnce => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmNetworkAttackDataStatAttackType => {
    '1' => 'ip-opt-frames',
    '2' => 'ip-frag-flood',
    '3' => 'too-many-ext-hdrs',
    '4' => 'ext-hdr-too-large',
    '5' => 'ip-low-ttl',
    '6' => 'hop-cnt-low',
    '7' => 'ipv6-ext-hdr-frames',
    '8' => 'ipv6-frag-flood',
    '9' => 'unk-tcp-opt-type',
    '10' => 'opt-present-with-illegal-len',
    '11' => 'tcp-opt-overruns-tcp-hdr',
    '12' => 'tcp-syn-flood',
    '13' => 'tcp-synack-flood',
    '14' => 'tcp-rst-flood',
    '15' => 'icmpv4-flood',
    '16' => 'icmp-frag',
    '17' => 'icmpv6-flood',
    '18' => 'host-unreachable',
    '19' => 'tidcmp',
    '20' => 'udp-flood',
  },
  ltmSpdyProfileConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmServerSslDropUntrustCa => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmHttpProfileCompressKeepAcceptEncoding => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmDnsProfileDnsLastAction => {
    '0' => 'allow',
    '1' => 'drop',
    '2' => 'reject',
    '3' => 'hint',
    '4' => 'noerror',
  },
  ltmSpdyProfileProtocolVersionsProtocolVersions => {
    '1' => 'spdy2',
    '2' => 'spdy3',
    '3' => 'http11',
  },
  ltmTcpProfileVerifiedAccept => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmClientSslStrictResume => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmAlgLogProfileStartDataAction => {
    '1' => 'disabled',
    '2' => 'enabled',
    '3' => 'backup-allocation-only',
  },
  ltmSipProfileFirewallEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmVsStatusAvailState => {
    '0' => 'none',
    '1' => 'green',
    '2' => 'yellow',
    '3' => 'red',
    '4' => 'blue',
    '5' => 'gray',
  },
  ltmVirtualServAvailabilityState => {
    '0' => 'none',
    '1' => 'green',
    '2' => 'yellow',
    '3' => 'red',
    '4' => 'blue',
  },
  ltmLsnPoolEgressInterfacesEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmPersistProfileAcrossPools => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmDnsProfileDnssecEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmVirtualServEnabledState => {
    '0' => 'none',
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'disabledbyparent',
  },
  ltmTcpProfileConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmNodeAddrStatusEnabledState => {
    '0' => 'none',
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'disabledbyparent',
  },
  ltmLsnLogProfileQuotaExceededAction => {
    '1' => 'disabled',
    '2' => 'enabled',
  },
  ltmFastL4ProfileLooseInitiation => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmRtspProfileConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmPersistProfileMode => {
    '0' => 'none',
    '1' => 'srcaddr',
    '2' => 'dstaddr',
    '3' => 'cookie',
    '4' => 'msrdp',
    '5' => 'sslsid',
    '6' => 'sip',
    '7' => 'uie',
    '8' => 'hash',
  },
  ltmIsessionProfileCompressionLzo => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  ltmServerSslSessionMirroring => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmClientSslProxySslPassthrough => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmTcpProfileSlowStart => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmPoolStatusEnabledState => {
    '0' => 'none',
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'disabledbyparent',
  },
  ltmFastL4ProfileTcpWscaleMode => {
    '0' => 'preserve',
    '1' => 'strip',
    '2' => 'rewrite',
  },
  ltmPoolMbrStatusAvailState => {
    '0' => 'none',
    '1' => 'green',
    '2' => 'yellow',
    '3' => 'red',
    '4' => 'blue',
    '5' => 'gray',
  },
  ltmFastHttpProfileHttp11CloseWorkarounds => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmHttpCompressionProfileKeepAcceptEncoding => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmFastL4ProfileLateBinding => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmHttpProfileRamcacheIgnoreClient => {
    '0' => 'none',
    '1' => 'maxage',
    '2' => 'all',
  },
  ltmPersistProfileMsrdpNoSessionDir => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmServerSslFwdpBypassEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmIiopProfileAbortOnTimeout => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmVirtualServProfileType => {
    '0' => 'auth',
    '1' => 'http',
    '2' => 'serverssl',
    '3' => 'clientssl',
    '4' => 'fastl4',
    '5' => 'tcp',
    '6' => 'udp',
    '7' => 'ftp',
    '8' => 'persist',
    '9' => 'connpool',
    '10' => 'stream',
    '11' => 'xml',
    '12' => 'fasthttp',
    '13' => 'iiop',
    '14' => 'rtsp',
    '15' => 'user',
    '16' => 'httpclass',
    '17' => 'dns',
    '18' => 'sctp',
    '19' => 'instance',
    '20' => 'sipp',
    '21' => 'dos',
    '62' => 'pptp',
  },
  ltmHttpCompressionProfileBrowserWorkarounds => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmTcpProfileProxyOptions => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmTcpProfileDelayedAcks => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmSipProfileTerminateBye => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmLsnLogProfileErrorsAction => {
    '1' => 'disabled',
    '2' => 'enabled',
  },
  ltmPersistProfileAcrossServices => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmLsnPoolMode => {
    '0' => 'napt',
    '1' => 'pba',
    '2' => 'deterministic',
  },
  ltmIsessionProfileCompressionNull => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  ltmTcpProfileDelayWindowControl => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmHttpClassAsmEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmWebAccelerationProfileCacheInsertAgeHeader => {
    '0' => 'disable',
    '1' => 'enable',
  },
  ltmAuthProfileType => {
    '0' => 'ldap',
    '1' => 'radius',
    '2' => 'sslccldap',
    '3' => 'sslocsp',
    '4' => 'tacacs',
    '5' => 'generic',
    '6' => 'sslcrldp',
    '7' => 'krbdelegate',
  },
  ltmServerSslStrictResume => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmDnsHeaderFilterOpcodeExclusion => {
    '0' => 'query',
    '1' => 'iquery',
    '2' => 'status',
    '4' => 'notify',
    '5' => 'update',
  },
  ltmDnsProfileUseLocalBind => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmDosApplicationLatencyBasedSiteClientSideDefense => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmNatListedEnabledVlans => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmVirtualAddrServer => {
    '0' => 'none',
    '1' => 'any',
    '2' => 'all',
  },
  ltmPersistProfileCookieMethod => {
    '0' => 'unspecified',
    '1' => 'insert',
    '2' => 'rewrite',
    '3' => 'passive',
    '4' => 'hash',
  },
  ltmAlgLogProfileStartDataElementsElements => {
    '1' => 'destination',
  },
  ltmFastHttpProfileInsertXforwardedFor => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  ltmPoolQueueOnConnectionLimit => {
    '0' => 'allowed',
    '1' => 'disallowed',
  },
  ltmTcpProfileTimeWaitRecycle => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmSipProfileInsertVia => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmAlgLogProfileEndDataAction => {
    '1' => 'disabled',
    '2' => 'enabled',
    '3' => 'backup-allocation-only',
  },
  ltmDnsCacheUseTcp => {
    '0' => 'no',
    '1' => 'yes',
  },
  ltmIiopProfilePersistObjectKey => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmRuleConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmWebAccelerationProfileConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmOcspStaplingParametersStrictRespCertCheck => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmLsnPoolRouteAdvertisement => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmTcpProfileBandwidthDelay => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmVirtualServTranslatePort => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmFwRuleStatRuleStatType => {
    '1' => 'enforced',
    '2' => 'staged',
    '3' => 'active',
    '4' => 'overlapper',
  },
  ltmTcpProfileRatePace => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmServerSslSessionTicket => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmDnsProfileDns64Mode => {
    '0' => 'disable',
    '1' => 'secondary',
    '2' => 'immediate',
    '3' => 'v4only',
  },
  ltmClientSslUncleanShutdown => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmSnatSfFlags => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  ltmRateFilterDirection => {
    '0' => 'any',
    '1' => 'client',
    '2' => 'server',
  },
  ltmAlgLogProfileStartControlElementsElements => {
    '1' => 'destination',
  },
  ltmFtpProfileConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmHttpProfilePipelining => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  ltmAttrSnatAnyIpProtocol => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  ltmPoolEnabledState => {
    '0' => 'none',
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'disabledbyparent',
  },
  ltmPptpProfileLogServerIp => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmHttpProfileCompressBrowserWorkarounds => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmHttpCompressionProfileAllowHttp10 => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmHttpProfileCompressVaryHeader => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmRtspProfileRealHttpPersistence => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmVAddrStatusEnabledState => {
    '0' => 'none',
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'disabledbyparent',
  },
  ltmDosApplicationTriggerIrule => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmTcpProfileSelectiveAcks => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmAttrPersistDestAddrLimitMode => {
    '0' => 'timeout',
    '1' => 'maxcount',
  },
  ltmDnsCacheIgnoreCd => {
    '0' => 'no',
    '1' => 'yes',
  },
  ltmRtspProfileMulticastRedirect => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmNodeAddrStatusAvailState => {
    '0' => 'none',
    '1' => 'green',
    '2' => 'yellow',
    '3' => 'red',
    '4' => 'blue',
    '5' => 'gray',
  },
  ltmDnsProfileGtmEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmDnsSecurityQueryTypeInclusion => {
    '0' => 'no',
    '1' => 'yes',
  },
  ltmDosApplicationLatencyBasedMode => {
    '0' => 'off',
    '1' => 'transparent',
    '2' => 'blocking',
  },
  ltmDosApplicationTpsBasedIpRateLimiting => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmHttpClassConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmDosApplicationTpsBasedSiteClientSideDefense => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmVirtualServCmpEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmFastL4ProfileIpFragReass => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmIsessionProfileCompressionBzip2 => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  ltmPoolLbMode => {
    '0' => 'roundRobin',
    '1' => 'ratioMember',
    '2' => 'leastConnMember',
    '3' => 'observedMember',
    '4' => 'predictiveMember',
    '5' => 'ratioNodeAddress',
    '6' => 'leastConnNodeAddress',
    '7' => 'fastestNodeAddress',
    '8' => 'observedNodeAddress',
    '9' => 'predictiveNodeAddress',
    '10' => 'dynamicRatio',
    '11' => 'fastestAppResponse',
    '12' => 'leastSessions',
    '13' => 'dynamicRatioMember',
    '14' => 'l3Addr',
    '15' => 'weightedLeastConnMember',
    '16' => 'weightedLeastConnNodeAddr',
    '17' => 'ratioSession',
  },
  ltmDnsCacheRandomizeQueryNameCase => {
    '0' => 'no',
    '1' => 'yes',
  },
  ltmConnPoolProfileConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmFastHttpProfileResetOnTimeout => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmHttpProfilePassthroughExcessServerHeaders => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmVirtualServPersistUseDefault => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmHttpCompressionProfileCpusaver => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmSipProfileSecureVia => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmFastHttpProfileConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmClientSslMode => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  ltmIsessionProfileTargetVirtual => {
    '0' => 'none',
    '1' => 'hostmatchnoisession',
    '2' => 'hostmatchall',
    '3' => 'matchall',
  },
  ltmClientSslSessionTicket => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmPoolDisallowNat => {
    '0' => 'allowed',
    '1' => 'disallowed',
  },
  ltmFastL4ProfileTcpTimestampMode => {
    '0' => 'preserve',
    '1' => 'strip',
    '2' => 'rewrite',
  },
  ltmHttpProfileCompressMode => {
    '0' => 'disable',
    '1' => 'enable',
    '2' => 'selective',
  },
  ltmTcpProfileMptcpNojoindssack => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmServerSslPeerCertMode => {
    '0' => 'ignore',
    '1' => 'require',
  },
  ltmFastHttpProfileForceHttp10Response => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmClientSslFwdpLookupByIpaddrPort => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmLsnPoolIcmpEcho => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmDosApplicationTpsBasedSiteRateLimiting => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmTcpProfileCmetricsCache => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmVirtualServClonePoolType => {
    '0' => 'unspec',
    '1' => 'clientside',
    '2' => 'serverside',
  },
  ltmXmlProfileConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmSctpProfileTcpShutdown => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmTcpProfileMptcpMakeafterbreak => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmOcspStaplingParametersSignHash => {
    '0' => 'sha1',
    '1' => 'sha256',
  },
  ltmVirtualServActualPvaAccel => {
    '0' => 'full',
    '1' => 'partial',
    '2' => 'none',
  },
  ltmTcpProfileNagle => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmDosApplicationTpsBasedMode => {
    '0' => 'off',
    '1' => 'transparent',
    '2' => 'blocking',
  },
  ltmPersistProfileAcrossVirtuals => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmClientSslProxySsl => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmVirtualAddrIsFloat => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmTcpProfileAckOnPush => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmHttpProfileConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmServerSslProxySslPassthrough => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmTcpProfileCongestionCtrl => {
    '0' => 'reno',
    '1' => 'newreno',
    '2' => 'scalable',
    '3' => 'highspeed',
    '4' => 'none',
    '5' => 'vegas',
    '6' => 'illinois',
    '7' => 'woodside',
    '8' => 'chd',
    '9' => 'cdg',
    '10' => 'cubic',
    '11' => 'westwood',
  },
  ltmDnsCacheUseIpv6 => {
    '0' => 'no',
    '1' => 'yes',
  },
  ltmHttpProfileRamcache => {
    '0' => 'disable',
    '1' => 'enable',
  },
  ltmPoolMemberNewSessionEnable => {
    '1' => 'user-disabled',
    '2' => 'user-enabled',
    '3' => 'monitor-enabled',
    '4' => 'monitor-disabled',
  },
  ltmPoolDisallowSnat => {
    '0' => 'allowed',
    '1' => 'disallowed',
  },
  ltmServerSslGenericAlert => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmPoolMbrStatusEnabledState => {
    '0' => 'none',
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'disabledbyparent',
  },
  ltmTcpProfileDsack => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmPoolMemberMonitorStatus => {
    '0' => 'unchecked',
    '1' => 'checking',
    '2' => 'inband',
    '3' => 'forced-up',
    '4' => 'up',
    '18' => 'addr-down',
    '19' => 'down',
    '20' => 'forced-down',
    '21' => 'maint',
    '22' => 'irule-down',
    '23' => 'inband-down',
    '24' => 'down-manual-resume',
  },
  ltmHttpCompressionProfileSelective => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmNodeAddrNewSessionEnable => {
    '1' => 'user-disabled',
    '2' => 'user-enabled',
    '3' => 'monitor-enabled',
    '4' => 'monitor-disabled',
  },
  ltmLsnLogProfileConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmIsessionProfileConnectionReuse => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  ltmXmlProfileMultipleQueryMatches => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmServerSslConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmTransAddrEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmSipProfileConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmClientSslSslSignHash => {
    '0' => 'any',
    '1' => 'sha1',
    '2' => 'sha256',
    '3' => 'sha384',
  },
  ltmAttrMirrorState => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  ltmClientSslAllowNonssl => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmHttpProfileRamcacheInsertAgeHeader => {
    '0' => 'disable',
    '1' => 'enable',
  },
  ltmVirtualServSfFlags => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  ltmIsessionProfileCompressionAdaptive => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  ltmDnsProfileLoggingEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmTcpProfileAbc => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmDosApplicationLatencyBasedUrlClientSideDefense => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmAuthProfileMode => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  ltmDosApplicationLatencyBasedUrlRateLimiting => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmNodeAddrMonitorStatus => {
    '0' => 'unchecked',
    '1' => 'checking',
    '2' => 'inband',
    '3' => 'forced-up',
    '4' => 'up',
    '18' => 'addr-down',
    '19' => 'down',
    '20' => 'forced-down',
    '21' => 'maint',
    '22' => 'irule-down',
    '23' => 'inband-down',
    '24' => 'down-manual-resume',
  },
  ltmHttpCompressionProfileConfigSource => {
    '0' => 'usercfg',
    '1' => 'basecfg',
  },
  ltmServerSslUncleanShutdown => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmServerSslProxySsl => {
    '0' => 'false',
    '1' => 'true',
  },
  ltmDnsProfileDns64AdditionalRewrite => {
    '0' => 'disable',
    '1' => 'v6only',
    '2' => 'v4only',
    '3' => 'any',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::F5BIGIPSYSTEMMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'F5-BIGIP-SYSTEM-MIB'} = {
  url => '',
  name => 'F5-BIGIP-SYSTEM-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'F5-BIGIP-SYSTEM-MIB'} =
    '1.3.6.1.4.1.3375.2.1';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'F5-BIGIP-SYSTEM-MIB'} = {
  bigipSystem => '1.3.6.1.4.1.3375.2.1',
  sysGlobals => '1.3.6.1.4.1.3375.2.1.1',
  sysGlobalAttrs => '1.3.6.1.4.1.3375.2.1.1.1',
  sysGlobalAttr => '1.3.6.1.4.1.3375.2.1.1.1.1',
  sysAttrArpMaxEntries => '1.3.6.1.4.1.3375.2.1.1.1.1.1',
  sysAttrArpAddReciprocal => '1.3.6.1.4.1.3375.2.1.1.1.1.2',
  sysAttrArpAddReciprocalDefinition => 'F5-BIGIP-SYSTEM-MIB::sysAttrArpAddReciprocal',
  sysAttrArpTimeout => '1.3.6.1.4.1.3375.2.1.1.1.1.3',
  sysAttrArpRetries => '1.3.6.1.4.1.3375.2.1.1.1.1.4',
  sysAttrBootQuiet => '1.3.6.1.4.1.3375.2.1.1.1.1.5',
  sysAttrBootQuietDefinition => 'F5-BIGIP-SYSTEM-MIB::sysAttrBootQuiet',
  sysAttrConfigsyncState => '1.3.6.1.4.1.3375.2.1.1.1.1.6',
  sysAttrConnAdaptiveReaperHiwat => '1.3.6.1.4.1.3375.2.1.1.1.1.7',
  sysAttrConnAdaptiveReaperLowat => '1.3.6.1.4.1.3375.2.1.1.1.1.8',
  sysAttrConnAutoLasthop => '1.3.6.1.4.1.3375.2.1.1.1.1.9',
  sysAttrConnAutoLasthopDefinition => 'F5-BIGIP-SYSTEM-MIB::sysAttrConnAutoLasthop',
  sysAttrFailoverActiveMode => '1.3.6.1.4.1.3375.2.1.1.1.1.10',
  sysAttrFailoverActiveModeDefinition => 'F5-BIGIP-SYSTEM-MIB::sysAttrFailoverActiveMode',
  sysAttrFailoverForceActive => '1.3.6.1.4.1.3375.2.1.1.1.1.11',
  sysAttrFailoverForceActiveDefinition => 'F5-BIGIP-SYSTEM-MIB::sysAttrFailoverForceActive',
  sysAttrFailoverForceStandby => '1.3.6.1.4.1.3375.2.1.1.1.1.12',
  sysAttrFailoverForceStandbyDefinition => 'F5-BIGIP-SYSTEM-MIB::sysAttrFailoverForceStandby',
  sysAttrFailoverIsRedundant => '1.3.6.1.4.1.3375.2.1.1.1.1.13',
  sysAttrFailoverIsRedundantDefinition => 'F5-BIGIP-SYSTEM-MIB::sysAttrFailoverIsRedundant',
  sysAttrFailoverMemoryRestartPercent => '1.3.6.1.4.1.3375.2.1.1.1.1.14',
  sysAttrFailoverNetwork => '1.3.6.1.4.1.3375.2.1.1.1.1.15',
  sysAttrFailoverNetworkDefinition => 'F5-BIGIP-SYSTEM-MIB::sysAttrFailoverNetwork',
  sysAttrFailoverStandbyLinkDownTime => '1.3.6.1.4.1.3375.2.1.1.1.1.16',
  sysAttrFailoverSslhardware => '1.3.6.1.4.1.3375.2.1.1.1.1.17',
  sysAttrFailoverSslhardwareDefinition => 'F5-BIGIP-SYSTEM-MIB::sysAttrFailoverSslhardware',
  sysAttrFailoverSslhardwareAction => '1.3.6.1.4.1.3375.2.1.1.1.1.18',
  sysAttrFailoverSslhardwareActionDefinition => 'F5-BIGIP-SYSTEM-MIB::sysAttrFailoverSslhardwareAction',
  sysAttrFailoverUnitMask => '1.3.6.1.4.1.3375.2.1.1.1.1.19',
  sysAttrFailoverUnitId => '1.3.6.1.4.1.3375.2.1.1.1.1.20',
  sysAttrModeMaint => '1.3.6.1.4.1.3375.2.1.1.1.1.21',
  sysAttrModeMaintDefinition => 'F5-BIGIP-SYSTEM-MIB::sysAttrModeMaint',
  sysAttrPacketFilter => '1.3.6.1.4.1.3375.2.1.1.1.1.22',
  sysAttrPacketFilterDefinition => 'F5-BIGIP-SYSTEM-MIB::sysAttrPacketFilter',
  sysAttrPacketFilterAllowImportantIcmp => '1.3.6.1.4.1.3375.2.1.1.1.1.23',
  sysAttrPacketFilterAllowImportantIcmpDefinition => 'F5-BIGIP-SYSTEM-MIB::sysAttrPacketFilterAllowImportantIcmp',
  sysAttrPacketFilterEstablished => '1.3.6.1.4.1.3375.2.1.1.1.1.24',
  sysAttrPacketFilterEstablishedDefinition => 'F5-BIGIP-SYSTEM-MIB::sysAttrPacketFilterEstablished',
  sysAttrPacketFilterDefaultAction => '1.3.6.1.4.1.3375.2.1.1.1.1.25',
  sysAttrPacketFilterDefaultActionDefinition => 'F5-BIGIP-SYSTEM-MIB::sysAttrPacketFilterDefaultAction',
  sysAttrPacketFilterSendIcmpErrors => '1.3.6.1.4.1.3375.2.1.1.1.1.26',
  sysAttrPacketFilterSendIcmpErrorsDefinition => 'F5-BIGIP-SYSTEM-MIB::sysAttrPacketFilterSendIcmpErrors',
  sysAttrPvaAcceleration => '1.3.6.1.4.1.3375.2.1.1.1.1.27',
  sysAttrPvaAccelerationDefinition => 'F5-BIGIP-SYSTEM-MIB::sysAttrPvaAcceleration',
  sysAttrVlanFDBTimeout => '1.3.6.1.4.1.3375.2.1.1.1.1.28',
  sysAttrWatchdogState => '1.3.6.1.4.1.3375.2.1.1.1.1.29',
  sysAttrWatchdogStateDefinition => 'F5-BIGIP-SYSTEM-MIB::sysAttrWatchdogState',
  sysGlobalStats => '1.3.6.1.4.1.3375.2.1.1.2',
  sysGlobalStat => '1.3.6.1.4.1.3375.2.1.1.2.1',
  sysStatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.1.1',
  sysStatClientPktsIn => '1.3.6.1.4.1.3375.2.1.1.2.1.2',
  sysStatClientBytesIn => '1.3.6.1.4.1.3375.2.1.1.2.1.3',
  sysStatClientPktsOut => '1.3.6.1.4.1.3375.2.1.1.2.1.4',
  sysStatClientBytesOut => '1.3.6.1.4.1.3375.2.1.1.2.1.5',
  sysStatClientMaxConns => '1.3.6.1.4.1.3375.2.1.1.2.1.6',
  sysStatClientTotConns => '1.3.6.1.4.1.3375.2.1.1.2.1.7',
  sysStatClientCurConns => '1.3.6.1.4.1.3375.2.1.1.2.1.8',
  sysStatServerPktsIn => '1.3.6.1.4.1.3375.2.1.1.2.1.9',
  sysStatServerBytesIn => '1.3.6.1.4.1.3375.2.1.1.2.1.10',
  sysStatServerPktsOut => '1.3.6.1.4.1.3375.2.1.1.2.1.11',
  sysStatServerBytesOut => '1.3.6.1.4.1.3375.2.1.1.2.1.12',
  sysStatServerMaxConns => '1.3.6.1.4.1.3375.2.1.1.2.1.13',
  sysStatServerTotConns => '1.3.6.1.4.1.3375.2.1.1.2.1.14',
  sysStatServerCurConns => '1.3.6.1.4.1.3375.2.1.1.2.1.15',
  sysStatPvaClientPktsIn => '1.3.6.1.4.1.3375.2.1.1.2.1.16',
  sysStatPvaClientBytesIn => '1.3.6.1.4.1.3375.2.1.1.2.1.17',
  sysStatPvaClientPktsOut => '1.3.6.1.4.1.3375.2.1.1.2.1.18',
  sysStatPvaClientBytesOut => '1.3.6.1.4.1.3375.2.1.1.2.1.19',
  sysStatPvaClientMaxConns => '1.3.6.1.4.1.3375.2.1.1.2.1.20',
  sysStatPvaClientTotConns => '1.3.6.1.4.1.3375.2.1.1.2.1.21',
  sysStatPvaClientCurConns => '1.3.6.1.4.1.3375.2.1.1.2.1.22',
  sysStatPvaServerPktsIn => '1.3.6.1.4.1.3375.2.1.1.2.1.23',
  sysStatPvaServerBytesIn => '1.3.6.1.4.1.3375.2.1.1.2.1.24',
  sysStatPvaServerPktsOut => '1.3.6.1.4.1.3375.2.1.1.2.1.25',
  sysStatPvaServerBytesOut => '1.3.6.1.4.1.3375.2.1.1.2.1.26',
  sysStatPvaServerMaxConns => '1.3.6.1.4.1.3375.2.1.1.2.1.27',
  sysStatPvaServerTotConns => '1.3.6.1.4.1.3375.2.1.1.2.1.28',
  sysStatPvaServerCurConns => '1.3.6.1.4.1.3375.2.1.1.2.1.29',
  sysStatTotPvaAssistConn => '1.3.6.1.4.1.3375.2.1.1.2.1.30',
  sysStatCurrPvaAssistConn => '1.3.6.1.4.1.3375.2.1.1.2.1.31',
  sysStatMaintenanceModeDeny => '1.3.6.1.4.1.3375.2.1.1.2.1.32',
  sysStatMaxConnVirtualPathDeny => '1.3.6.1.4.1.3375.2.1.1.2.1.33',
  sysStatVirtualServerNonSynDeny => '1.3.6.1.4.1.3375.2.1.1.2.1.34',
  sysStatNoHandlerDeny => '1.3.6.1.4.1.3375.2.1.1.2.1.35',
  sysStatLicenseDeny => '1.3.6.1.4.1.3375.2.1.1.2.1.36',
  sysStatConnectionMemoryErrors => '1.3.6.1.4.1.3375.2.1.1.2.1.37',
  sysStatCpuCount => '1.3.6.1.4.1.3375.2.1.1.2.1.38',
  sysStatActiveCpuCount => '1.3.6.1.4.1.3375.2.1.1.2.1.39',
  sysStatMultiProcessorMode => '1.3.6.1.4.1.3375.2.1.1.2.1.40',
  sysStatMultiProcessorModeDefinition => 'F5-BIGIP-SYSTEM-MIB::sysStatMultiProcessorMode',
  sysStatTmTotalCycles => '1.3.6.1.4.1.3375.2.1.1.2.1.41',
  sysStatTmIdleCycles => '1.3.6.1.4.1.3375.2.1.1.2.1.42',
  sysStatTmSleepCycles => '1.3.6.1.4.1.3375.2.1.1.2.1.43',
  sysStatMemoryTotal => '1.3.6.1.4.1.3375.2.1.1.2.1.44',
  sysStatMemoryUsed => '1.3.6.1.4.1.3375.2.1.1.2.1.45',
  sysStatDroppedPackets => '1.3.6.1.4.1.3375.2.1.1.2.1.46',
  sysStatIncomingPacketErrors => '1.3.6.1.4.1.3375.2.1.1.2.1.47',
  sysStatOutgoingPacketErrors => '1.3.6.1.4.1.3375.2.1.1.2.1.48',
  sysStatAuthTotSessions => '1.3.6.1.4.1.3375.2.1.1.2.1.49',
  sysStatAuthCurSessions => '1.3.6.1.4.1.3375.2.1.1.2.1.50',
  sysStatAuthMaxSessions => '1.3.6.1.4.1.3375.2.1.1.2.1.51',
  sysStatAuthSuccessResults => '1.3.6.1.4.1.3375.2.1.1.2.1.52',
  sysStatAuthFailureResults => '1.3.6.1.4.1.3375.2.1.1.2.1.53',
  sysStatAuthWantcredentialResults => '1.3.6.1.4.1.3375.2.1.1.2.1.54',
  sysStatAuthErrorResults => '1.3.6.1.4.1.3375.2.1.1.2.1.55',
  sysStatHttpRequests => '1.3.6.1.4.1.3375.2.1.1.2.1.56',
  sysStatHardSyncookieGen => '1.3.6.1.4.1.3375.2.1.1.2.1.57',
  sysStatHardSyncookieDet => '1.3.6.1.4.1.3375.2.1.1.2.1.58',
  sysStatClientPktsIn5s => '1.3.6.1.4.1.3375.2.1.1.2.1.59',
  sysStatClientBytesIn5s => '1.3.6.1.4.1.3375.2.1.1.2.1.60',
  sysStatClientPktsOut5s => '1.3.6.1.4.1.3375.2.1.1.2.1.61',
  sysStatClientBytesOut5s => '1.3.6.1.4.1.3375.2.1.1.2.1.62',
  sysStatClientMaxConns5s => '1.3.6.1.4.1.3375.2.1.1.2.1.63',
  sysStatClientTotConns5s => '1.3.6.1.4.1.3375.2.1.1.2.1.64',
  sysStatClientCurConns5s => '1.3.6.1.4.1.3375.2.1.1.2.1.65',
  sysStatServerPktsIn5s => '1.3.6.1.4.1.3375.2.1.1.2.1.66',
  sysStatServerBytesIn5s => '1.3.6.1.4.1.3375.2.1.1.2.1.67',
  sysStatServerPktsOut5s => '1.3.6.1.4.1.3375.2.1.1.2.1.68',
  sysStatServerBytesOut5s => '1.3.6.1.4.1.3375.2.1.1.2.1.69',
  sysStatServerMaxConns5s => '1.3.6.1.4.1.3375.2.1.1.2.1.70',
  sysStatServerTotConns5s => '1.3.6.1.4.1.3375.2.1.1.2.1.71',
  sysStatServerCurConns5s => '1.3.6.1.4.1.3375.2.1.1.2.1.72',
  sysStatClientPktsIn1m => '1.3.6.1.4.1.3375.2.1.1.2.1.73',
  sysStatClientBytesIn1m => '1.3.6.1.4.1.3375.2.1.1.2.1.74',
  sysStatClientPktsOut1m => '1.3.6.1.4.1.3375.2.1.1.2.1.75',
  sysStatClientBytesOut1m => '1.3.6.1.4.1.3375.2.1.1.2.1.76',
  sysStatClientMaxConns1m => '1.3.6.1.4.1.3375.2.1.1.2.1.77',
  sysStatClientTotConns1m => '1.3.6.1.4.1.3375.2.1.1.2.1.78',
  sysStatClientCurConns1m => '1.3.6.1.4.1.3375.2.1.1.2.1.79',
  sysStatServerPktsIn1m => '1.3.6.1.4.1.3375.2.1.1.2.1.80',
  sysStatServerBytesIn1m => '1.3.6.1.4.1.3375.2.1.1.2.1.81',
  sysStatServerPktsOut1m => '1.3.6.1.4.1.3375.2.1.1.2.1.82',
  sysStatServerBytesOut1m => '1.3.6.1.4.1.3375.2.1.1.2.1.83',
  sysStatServerMaxConns1m => '1.3.6.1.4.1.3375.2.1.1.2.1.84',
  sysStatServerTotConns1m => '1.3.6.1.4.1.3375.2.1.1.2.1.85',
  sysStatServerCurConns1m => '1.3.6.1.4.1.3375.2.1.1.2.1.86',
  sysStatClientPktsIn5m => '1.3.6.1.4.1.3375.2.1.1.2.1.87',
  sysStatClientBytesIn5m => '1.3.6.1.4.1.3375.2.1.1.2.1.88',
  sysStatClientPktsOut5m => '1.3.6.1.4.1.3375.2.1.1.2.1.89',
  sysStatClientBytesOut5m => '1.3.6.1.4.1.3375.2.1.1.2.1.90',
  sysStatClientMaxConns5m => '1.3.6.1.4.1.3375.2.1.1.2.1.91',
  sysStatClientTotConns5m => '1.3.6.1.4.1.3375.2.1.1.2.1.92',
  sysStatClientCurConns5m => '1.3.6.1.4.1.3375.2.1.1.2.1.93',
  sysStatServerPktsIn5m => '1.3.6.1.4.1.3375.2.1.1.2.1.94',
  sysStatServerBytesIn5m => '1.3.6.1.4.1.3375.2.1.1.2.1.95',
  sysStatServerPktsOut5m => '1.3.6.1.4.1.3375.2.1.1.2.1.96',
  sysStatServerBytesOut5m => '1.3.6.1.4.1.3375.2.1.1.2.1.97',
  sysStatServerMaxConns5m => '1.3.6.1.4.1.3375.2.1.1.2.1.98',
  sysStatServerTotConns5m => '1.3.6.1.4.1.3375.2.1.1.2.1.99',
  sysStatServerCurConns5m => '1.3.6.1.4.1.3375.2.1.1.2.1.100',
  sysStatPvaClientPktsIn5s => '1.3.6.1.4.1.3375.2.1.1.2.1.101',
  sysStatPvaClientBytesIn5s => '1.3.6.1.4.1.3375.2.1.1.2.1.102',
  sysStatPvaClientPktsOut5s => '1.3.6.1.4.1.3375.2.1.1.2.1.103',
  sysStatPvaClientBytesOut5s => '1.3.6.1.4.1.3375.2.1.1.2.1.104',
  sysStatPvaClientMaxConns5s => '1.3.6.1.4.1.3375.2.1.1.2.1.105',
  sysStatPvaClientTotConns5s => '1.3.6.1.4.1.3375.2.1.1.2.1.106',
  sysStatPvaClientCurConns5s => '1.3.6.1.4.1.3375.2.1.1.2.1.107',
  sysStatPvaServerPktsIn5s => '1.3.6.1.4.1.3375.2.1.1.2.1.108',
  sysStatPvaServerBytesIn5s => '1.3.6.1.4.1.3375.2.1.1.2.1.109',
  sysStatPvaServerPktsOut5s => '1.3.6.1.4.1.3375.2.1.1.2.1.110',
  sysStatPvaServerBytesOut5s => '1.3.6.1.4.1.3375.2.1.1.2.1.111',
  sysStatPvaServerMaxConns5s => '1.3.6.1.4.1.3375.2.1.1.2.1.112',
  sysStatPvaServerTotConns5s => '1.3.6.1.4.1.3375.2.1.1.2.1.113',
  sysStatPvaServerCurConns5s => '1.3.6.1.4.1.3375.2.1.1.2.1.114',
  sysStatPvaClientPktsIn1m => '1.3.6.1.4.1.3375.2.1.1.2.1.115',
  sysStatPvaClientBytesIn1m => '1.3.6.1.4.1.3375.2.1.1.2.1.116',
  sysStatPvaClientPktsOut1m => '1.3.6.1.4.1.3375.2.1.1.2.1.117',
  sysStatPvaClientBytesOut1m => '1.3.6.1.4.1.3375.2.1.1.2.1.118',
  sysStatPvaClientMaxConns1m => '1.3.6.1.4.1.3375.2.1.1.2.1.119',
  sysStatPvaClientTotConns1m => '1.3.6.1.4.1.3375.2.1.1.2.1.120',
  sysStatPvaClientCurConns1m => '1.3.6.1.4.1.3375.2.1.1.2.1.121',
  sysStatPvaServerPktsIn1m => '1.3.6.1.4.1.3375.2.1.1.2.1.122',
  sysStatPvaServerBytesIn1m => '1.3.6.1.4.1.3375.2.1.1.2.1.123',
  sysStatPvaServerPktsOut1m => '1.3.6.1.4.1.3375.2.1.1.2.1.124',
  sysStatPvaServerBytesOut1m => '1.3.6.1.4.1.3375.2.1.1.2.1.125',
  sysStatPvaServerMaxConns1m => '1.3.6.1.4.1.3375.2.1.1.2.1.126',
  sysStatPvaServerTotConns1m => '1.3.6.1.4.1.3375.2.1.1.2.1.127',
  sysStatPvaServerCurConns1m => '1.3.6.1.4.1.3375.2.1.1.2.1.128',
  sysStatPvaClientPktsIn5m => '1.3.6.1.4.1.3375.2.1.1.2.1.129',
  sysStatPvaClientBytesIn5m => '1.3.6.1.4.1.3375.2.1.1.2.1.130',
  sysStatPvaClientPktsOut5m => '1.3.6.1.4.1.3375.2.1.1.2.1.131',
  sysStatPvaClientBytesOut5m => '1.3.6.1.4.1.3375.2.1.1.2.1.132',
  sysStatPvaClientMaxConns5m => '1.3.6.1.4.1.3375.2.1.1.2.1.133',
  sysStatPvaClientTotConns5m => '1.3.6.1.4.1.3375.2.1.1.2.1.134',
  sysStatPvaClientCurConns5m => '1.3.6.1.4.1.3375.2.1.1.2.1.135',
  sysStatPvaServerPktsIn5m => '1.3.6.1.4.1.3375.2.1.1.2.1.136',
  sysStatPvaServerBytesIn5m => '1.3.6.1.4.1.3375.2.1.1.2.1.137',
  sysStatPvaServerPktsOut5m => '1.3.6.1.4.1.3375.2.1.1.2.1.138',
  sysStatPvaServerBytesOut5m => '1.3.6.1.4.1.3375.2.1.1.2.1.139',
  sysStatPvaServerMaxConns5m => '1.3.6.1.4.1.3375.2.1.1.2.1.140',
  sysStatPvaServerTotConns5m => '1.3.6.1.4.1.3375.2.1.1.2.1.141',
  sysStatPvaServerCurConns5m => '1.3.6.1.4.1.3375.2.1.1.2.1.142',
  sysStatMemoryTotalKb => '1.3.6.1.4.1.3375.2.1.1.2.1.143',
  sysStatMemoryUsedKb => '1.3.6.1.4.1.3375.2.1.1.2.1.144',
  sysGlobalAuthStat => '1.3.6.1.4.1.3375.2.1.1.2.2',
  sysAuthStatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.2.1',
  sysAuthStatTotSessions => '1.3.6.1.4.1.3375.2.1.1.2.2.2',
  sysAuthStatCurSessions => '1.3.6.1.4.1.3375.2.1.1.2.2.3',
  sysAuthStatMaxSessions => '1.3.6.1.4.1.3375.2.1.1.2.2.4',
  sysAuthStatSuccessResults => '1.3.6.1.4.1.3375.2.1.1.2.2.5',
  sysAuthStatFailureResults => '1.3.6.1.4.1.3375.2.1.1.2.2.6',
  sysAuthStatWantcredentialResults => '1.3.6.1.4.1.3375.2.1.1.2.2.7',
  sysAuthStatErrorResults => '1.3.6.1.4.1.3375.2.1.1.2.2.8',
  sysGlobalConnPoolStat => '1.3.6.1.4.1.3375.2.1.1.2.3',
  sysConnPoolStatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.3.1',
  sysConnPoolStatCurSize => '1.3.6.1.4.1.3375.2.1.1.2.3.2',
  sysConnPoolStatMaxSize => '1.3.6.1.4.1.3375.2.1.1.2.3.3',
  sysConnPoolStatReuses => '1.3.6.1.4.1.3375.2.1.1.2.3.4',
  sysConnPoolStatConnects => '1.3.6.1.4.1.3375.2.1.1.2.3.5',
  sysGlobalHttpStat => '1.3.6.1.4.1.3375.2.1.1.2.4',
  sysHttpStatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.4.1',
  sysHttpStatCookiePersistInserts => '1.3.6.1.4.1.3375.2.1.1.2.4.2',
  sysHttpStatResp2xxCnt => '1.3.6.1.4.1.3375.2.1.1.2.4.3',
  sysHttpStatResp3xxCnt => '1.3.6.1.4.1.3375.2.1.1.2.4.4',
  sysHttpStatResp4xxCnt => '1.3.6.1.4.1.3375.2.1.1.2.4.5',
  sysHttpStatResp5xxCnt => '1.3.6.1.4.1.3375.2.1.1.2.4.6',
  sysHttpStatNumberReqs => '1.3.6.1.4.1.3375.2.1.1.2.4.7',
  sysHttpStatGetReqs => '1.3.6.1.4.1.3375.2.1.1.2.4.8',
  sysHttpStatPostReqs => '1.3.6.1.4.1.3375.2.1.1.2.4.9',
  sysHttpStatV9Reqs => '1.3.6.1.4.1.3375.2.1.1.2.4.10',
  sysHttpStatV10Reqs => '1.3.6.1.4.1.3375.2.1.1.2.4.11',
  sysHttpStatV11Reqs => '1.3.6.1.4.1.3375.2.1.1.2.4.12',
  sysHttpStatV9Resp => '1.3.6.1.4.1.3375.2.1.1.2.4.13',
  sysHttpStatV10Resp => '1.3.6.1.4.1.3375.2.1.1.2.4.14',
  sysHttpStatV11Resp => '1.3.6.1.4.1.3375.2.1.1.2.4.15',
  sysHttpStatMaxKeepaliveReq => '1.3.6.1.4.1.3375.2.1.1.2.4.16',
  sysHttpStatRespBucket1k => '1.3.6.1.4.1.3375.2.1.1.2.4.17',
  sysHttpStatRespBucket4k => '1.3.6.1.4.1.3375.2.1.1.2.4.18',
  sysHttpStatRespBucket16k => '1.3.6.1.4.1.3375.2.1.1.2.4.19',
  sysHttpStatRespBucket32k => '1.3.6.1.4.1.3375.2.1.1.2.4.20',
  sysHttpStatPrecompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.4.21',
  sysHttpStatPostcompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.4.22',
  sysHttpStatNullCompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.4.23',
  sysHttpStatHtmlPrecompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.4.24',
  sysHttpStatHtmlPostcompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.4.25',
  sysHttpStatCssPrecompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.4.26',
  sysHttpStatCssPostcompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.4.27',
  sysHttpStatJsPrecompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.4.28',
  sysHttpStatJsPostcompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.4.29',
  sysHttpStatXmlPrecompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.4.30',
  sysHttpStatXmlPostcompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.4.31',
  sysHttpStatSgmlPrecompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.4.32',
  sysHttpStatSgmlPostcompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.4.33',
  sysHttpStatPlainPrecompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.4.34',
  sysHttpStatPlainPostcompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.4.35',
  sysHttpStatOctetPrecompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.4.36',
  sysHttpStatOctetPostcompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.4.37',
  sysHttpStatImagePrecompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.4.38',
  sysHttpStatImagePostcompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.4.39',
  sysHttpStatVideoPrecompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.4.40',
  sysHttpStatVideoPostcompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.4.41',
  sysHttpStatAudioPrecompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.4.42',
  sysHttpStatAudioPostcompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.4.43',
  sysHttpStatOtherPrecompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.4.44',
  sysHttpStatOtherPostcompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.4.45',
  sysHttpStatRamcacheHits => '1.3.6.1.4.1.3375.2.1.1.2.4.46',
  sysHttpStatRamcacheMisses => '1.3.6.1.4.1.3375.2.1.1.2.4.47',
  sysHttpStatRamcacheMissesAll => '1.3.6.1.4.1.3375.2.1.1.2.4.48',
  sysHttpStatRamcacheHitBytes => '1.3.6.1.4.1.3375.2.1.1.2.4.49',
  sysHttpStatRamcacheMissBytes => '1.3.6.1.4.1.3375.2.1.1.2.4.50',
  sysHttpStatRamcacheMissBytesAll => '1.3.6.1.4.1.3375.2.1.1.2.4.51',
  sysHttpStatRamcacheSize => '1.3.6.1.4.1.3375.2.1.1.2.4.52',
  sysHttpStatRamcacheCount => '1.3.6.1.4.1.3375.2.1.1.2.4.53',
  sysHttpStatRamcacheEvictions => '1.3.6.1.4.1.3375.2.1.1.2.4.54',
  sysHttpStatRespBucket64k => '1.3.6.1.4.1.3375.2.1.1.2.4.55',
  sysGlobalIcmpStat => '1.3.6.1.4.1.3375.2.1.1.2.5',
  sysIcmpStatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.5.1',
  sysIcmpStatTx => '1.3.6.1.4.1.3375.2.1.1.2.5.2',
  sysIcmpStatRx => '1.3.6.1.4.1.3375.2.1.1.2.5.3',
  sysIcmpStatForward => '1.3.6.1.4.1.3375.2.1.1.2.5.4',
  sysIcmpStatDrop => '1.3.6.1.4.1.3375.2.1.1.2.5.5',
  sysIcmpStatErrCksum => '1.3.6.1.4.1.3375.2.1.1.2.5.6',
  sysIcmpStatErrLen => '1.3.6.1.4.1.3375.2.1.1.2.5.7',
  sysIcmpStatErrMem => '1.3.6.1.4.1.3375.2.1.1.2.5.8',
  sysIcmpStatErrRtx => '1.3.6.1.4.1.3375.2.1.1.2.5.9',
  sysIcmpStatErrProto => '1.3.6.1.4.1.3375.2.1.1.2.5.10',
  sysIcmpStatErrOpt => '1.3.6.1.4.1.3375.2.1.1.2.5.11',
  sysIcmpStatErr => '1.3.6.1.4.1.3375.2.1.1.2.5.12',
  sysGlobalIcmp6Stat => '1.3.6.1.4.1.3375.2.1.1.2.6',
  sysIcmp6StatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.6.1',
  sysIcmp6StatTx => '1.3.6.1.4.1.3375.2.1.1.2.6.2',
  sysIcmp6StatRx => '1.3.6.1.4.1.3375.2.1.1.2.6.3',
  sysIcmp6StatForward => '1.3.6.1.4.1.3375.2.1.1.2.6.4',
  sysIcmp6StatDrop => '1.3.6.1.4.1.3375.2.1.1.2.6.5',
  sysIcmp6StatErrCksum => '1.3.6.1.4.1.3375.2.1.1.2.6.6',
  sysIcmp6StatErrLen => '1.3.6.1.4.1.3375.2.1.1.2.6.7',
  sysIcmp6StatErrMem => '1.3.6.1.4.1.3375.2.1.1.2.6.8',
  sysIcmp6StatErrRtx => '1.3.6.1.4.1.3375.2.1.1.2.6.9',
  sysIcmp6StatErrProto => '1.3.6.1.4.1.3375.2.1.1.2.6.10',
  sysIcmp6StatErrOpt => '1.3.6.1.4.1.3375.2.1.1.2.6.11',
  sysIcmp6StatErr => '1.3.6.1.4.1.3375.2.1.1.2.6.12',
  sysGlobalIpStat => '1.3.6.1.4.1.3375.2.1.1.2.7',
  sysIpStatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.7.1',
  sysIpStatTx => '1.3.6.1.4.1.3375.2.1.1.2.7.2',
  sysIpStatRx => '1.3.6.1.4.1.3375.2.1.1.2.7.3',
  sysIpStatDropped => '1.3.6.1.4.1.3375.2.1.1.2.7.4',
  sysIpStatRxFrag => '1.3.6.1.4.1.3375.2.1.1.2.7.5',
  sysIpStatRxFragDropped => '1.3.6.1.4.1.3375.2.1.1.2.7.6',
  sysIpStatTxFrag => '1.3.6.1.4.1.3375.2.1.1.2.7.7',
  sysIpStatTxFragDropped => '1.3.6.1.4.1.3375.2.1.1.2.7.8',
  sysIpStatReassembled => '1.3.6.1.4.1.3375.2.1.1.2.7.9',
  sysIpStatErrCksum => '1.3.6.1.4.1.3375.2.1.1.2.7.10',
  sysIpStatErrLen => '1.3.6.1.4.1.3375.2.1.1.2.7.11',
  sysIpStatErrMem => '1.3.6.1.4.1.3375.2.1.1.2.7.12',
  sysIpStatErrRtx => '1.3.6.1.4.1.3375.2.1.1.2.7.13',
  sysIpStatErrProto => '1.3.6.1.4.1.3375.2.1.1.2.7.14',
  sysIpStatErrOpt => '1.3.6.1.4.1.3375.2.1.1.2.7.15',
  sysIpStatErrReassembledTooLong => '1.3.6.1.4.1.3375.2.1.1.2.7.16',
  sysGlobalIp6Stat => '1.3.6.1.4.1.3375.2.1.1.2.8',
  sysIp6StatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.8.1',
  sysIp6StatTx => '1.3.6.1.4.1.3375.2.1.1.2.8.2',
  sysIp6StatRx => '1.3.6.1.4.1.3375.2.1.1.2.8.3',
  sysIp6StatDropped => '1.3.6.1.4.1.3375.2.1.1.2.8.4',
  sysIp6StatRxFrag => '1.3.6.1.4.1.3375.2.1.1.2.8.5',
  sysIp6StatRxFragDropped => '1.3.6.1.4.1.3375.2.1.1.2.8.6',
  sysIp6StatTxFrag => '1.3.6.1.4.1.3375.2.1.1.2.8.7',
  sysIp6StatTxFragDropped => '1.3.6.1.4.1.3375.2.1.1.2.8.8',
  sysIp6StatReassembled => '1.3.6.1.4.1.3375.2.1.1.2.8.9',
  sysIp6StatErrCksum => '1.3.6.1.4.1.3375.2.1.1.2.8.10',
  sysIp6StatErrLen => '1.3.6.1.4.1.3375.2.1.1.2.8.11',
  sysIp6StatErrMem => '1.3.6.1.4.1.3375.2.1.1.2.8.12',
  sysIp6StatErrRtx => '1.3.6.1.4.1.3375.2.1.1.2.8.13',
  sysIp6StatErrProto => '1.3.6.1.4.1.3375.2.1.1.2.8.14',
  sysIp6StatErrOpt => '1.3.6.1.4.1.3375.2.1.1.2.8.15',
  sysIp6StatErrReassembledTooLong => '1.3.6.1.4.1.3375.2.1.1.2.8.16',
  sysGlobalClientSslStat => '1.3.6.1.4.1.3375.2.1.1.2.9',
  sysClientsslStatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.9.1',
  sysClientsslStatCurConns => '1.3.6.1.4.1.3375.2.1.1.2.9.2',
  sysClientsslStatMaxConns => '1.3.6.1.4.1.3375.2.1.1.2.9.3',
  sysClientsslStatCurNativeConns => '1.3.6.1.4.1.3375.2.1.1.2.9.4',
  sysClientsslStatMaxNativeConns => '1.3.6.1.4.1.3375.2.1.1.2.9.5',
  sysClientsslStatTotNativeConns => '1.3.6.1.4.1.3375.2.1.1.2.9.6',
  sysClientsslStatCurCompatConns => '1.3.6.1.4.1.3375.2.1.1.2.9.7',
  sysClientsslStatMaxCompatConns => '1.3.6.1.4.1.3375.2.1.1.2.9.8',
  sysClientsslStatTotCompatConns => '1.3.6.1.4.1.3375.2.1.1.2.9.9',
  sysClientsslStatEncryptedBytesIn => '1.3.6.1.4.1.3375.2.1.1.2.9.10',
  sysClientsslStatEncryptedBytesOut => '1.3.6.1.4.1.3375.2.1.1.2.9.11',
  sysClientsslStatDecryptedBytesIn => '1.3.6.1.4.1.3375.2.1.1.2.9.12',
  sysClientsslStatDecryptedBytesOut => '1.3.6.1.4.1.3375.2.1.1.2.9.13',
  sysClientsslStatRecordsIn => '1.3.6.1.4.1.3375.2.1.1.2.9.14',
  sysClientsslStatRecordsOut => '1.3.6.1.4.1.3375.2.1.1.2.9.15',
  sysClientsslStatFullyHwAcceleratedConns => '1.3.6.1.4.1.3375.2.1.1.2.9.16',
  sysClientsslStatPartiallyHwAcceleratedConns => '1.3.6.1.4.1.3375.2.1.1.2.9.17',
  sysClientsslStatNonHwAcceleratedConns => '1.3.6.1.4.1.3375.2.1.1.2.9.18',
  sysClientsslStatPrematureDisconnects => '1.3.6.1.4.1.3375.2.1.1.2.9.19',
  sysClientsslStatMidstreamRenegotiations => '1.3.6.1.4.1.3375.2.1.1.2.9.20',
  sysClientsslStatSessCacheCurEntries => '1.3.6.1.4.1.3375.2.1.1.2.9.21',
  sysClientsslStatSessCacheHits => '1.3.6.1.4.1.3375.2.1.1.2.9.22',
  sysClientsslStatSessCacheLookups => '1.3.6.1.4.1.3375.2.1.1.2.9.23',
  sysClientsslStatSessCacheOverflows => '1.3.6.1.4.1.3375.2.1.1.2.9.24',
  sysClientsslStatSessCacheInvalidations => '1.3.6.1.4.1.3375.2.1.1.2.9.25',
  sysClientsslStatPeercertValid => '1.3.6.1.4.1.3375.2.1.1.2.9.26',
  sysClientsslStatPeercertInvalid => '1.3.6.1.4.1.3375.2.1.1.2.9.27',
  sysClientsslStatPeercertNone => '1.3.6.1.4.1.3375.2.1.1.2.9.28',
  sysClientsslStatHandshakeFailures => '1.3.6.1.4.1.3375.2.1.1.2.9.29',
  sysClientsslStatBadRecords => '1.3.6.1.4.1.3375.2.1.1.2.9.30',
  sysClientsslStatFatalAlerts => '1.3.6.1.4.1.3375.2.1.1.2.9.31',
  sysClientsslStatSslv2 => '1.3.6.1.4.1.3375.2.1.1.2.9.32',
  sysClientsslStatSslv3 => '1.3.6.1.4.1.3375.2.1.1.2.9.33',
  sysClientsslStatTlsv1 => '1.3.6.1.4.1.3375.2.1.1.2.9.34',
  sysClientsslStatAdhKeyxchg => '1.3.6.1.4.1.3375.2.1.1.2.9.35',
  sysClientsslStatDhDssKeyxchg => '1.3.6.1.4.1.3375.2.1.1.2.9.36',
  sysClientsslStatDhRsaKeyxchg => '1.3.6.1.4.1.3375.2.1.1.2.9.37',
  sysClientsslStatDssKeyxchg => '1.3.6.1.4.1.3375.2.1.1.2.9.38',
  sysClientsslStatEdhDssKeyxchg => '1.3.6.1.4.1.3375.2.1.1.2.9.39',
  sysClientsslStatRsaKeyxchg => '1.3.6.1.4.1.3375.2.1.1.2.9.40',
  sysClientsslStatNullBulk => '1.3.6.1.4.1.3375.2.1.1.2.9.41',
  sysClientsslStatAesBulk => '1.3.6.1.4.1.3375.2.1.1.2.9.42',
  sysClientsslStatDesBulk => '1.3.6.1.4.1.3375.2.1.1.2.9.43',
  sysClientsslStatIdeaBulk => '1.3.6.1.4.1.3375.2.1.1.2.9.44',
  sysClientsslStatRc2Bulk => '1.3.6.1.4.1.3375.2.1.1.2.9.45',
  sysClientsslStatRc4Bulk => '1.3.6.1.4.1.3375.2.1.1.2.9.46',
  sysClientsslStatNullDigest => '1.3.6.1.4.1.3375.2.1.1.2.9.47',
  sysClientsslStatMd5Digest => '1.3.6.1.4.1.3375.2.1.1.2.9.48',
  sysClientsslStatShaDigest => '1.3.6.1.4.1.3375.2.1.1.2.9.49',
  sysClientsslStatNotssl => '1.3.6.1.4.1.3375.2.1.1.2.9.50',
  sysClientsslStatEdhRsaKeyxchg => '1.3.6.1.4.1.3375.2.1.1.2.9.51',
  sysClientsslStatTotConns5s => '1.3.6.1.4.1.3375.2.1.1.2.9.52',
  sysClientsslStatTotConns1m => '1.3.6.1.4.1.3375.2.1.1.2.9.53',
  sysClientsslStatTotConns5m => '1.3.6.1.4.1.3375.2.1.1.2.9.54',
  sysClientsslStatSecureHandshakes => '1.3.6.1.4.1.3375.2.1.1.2.9.55',
  sysClientsslStatInsecureHandshakeAccepts => '1.3.6.1.4.1.3375.2.1.1.2.9.56',
  sysClientsslStatInsecureHandshakeRejects => '1.3.6.1.4.1.3375.2.1.1.2.9.57',
  sysClientsslStatInsecureRenegotiationRejects => '1.3.6.1.4.1.3375.2.1.1.2.9.58',
  sysClientsslStatSniRejects => '1.3.6.1.4.1.3375.2.1.1.2.9.59',
  sysClientsslStatTlsv11 => '1.3.6.1.4.1.3375.2.1.1.2.9.60',
  sysClientsslStatTlsv12 => '1.3.6.1.4.1.3375.2.1.1.2.9.61',
  sysClientsslStatDtlsv1 => '1.3.6.1.4.1.3375.2.1.1.2.9.62',
  sysClientsslStatEcdheRsaKeyxchg => '1.3.6.1.4.1.3375.2.1.1.2.9.63',
  sysClientsslStatConns => '1.3.6.1.4.1.3375.2.1.1.2.9.64',
  sysClientsslStatCachedCerts => '1.3.6.1.4.1.3375.2.1.1.2.9.65',
  sysClientsslStatEcdhRsaKeyxchg => '1.3.6.1.4.1.3375.2.1.1.2.9.66',
  sysClientsslStatEcdheEcdsaKeyxchg => '1.3.6.1.4.1.3375.2.1.1.2.9.67',
  sysClientsslStatEcdhEcdsaKeyxchg => '1.3.6.1.4.1.3375.2.1.1.2.9.68',
  sysClientsslStatDheDssKeyxchg => '1.3.6.1.4.1.3375.2.1.1.2.9.69',
  sysClientsslStatAesGcmBulk => '1.3.6.1.4.1.3375.2.1.1.2.9.70',
  sysClientsslStatDestinationIpBypasses => '1.3.6.1.4.1.3375.2.1.1.2.9.71',
  sysClientsslStatSourceIpBypasses => '1.3.6.1.4.1.3375.2.1.1.2.9.72',
  sysClientsslStatHostnameBypasses => '1.3.6.1.4.1.3375.2.1.1.2.9.73',
  sysClientsslStatRenegotiationsRejected => '1.3.6.1.4.1.3375.2.1.1.2.9.74',
  sysClientsslStatOcspStaplingConns => '1.3.6.1.4.1.3375.2.1.1.2.9.75',
  sysClientsslStatOcspStaplingResponseStatusErrors => '1.3.6.1.4.1.3375.2.1.1.2.9.76',
  sysClientsslStatOcspStaplingResponseValidationErrors => '1.3.6.1.4.1.3375.2.1.1.2.9.77',
  sysClientsslStatOcspStaplingCertStatusErrors => '1.3.6.1.4.1.3375.2.1.1.2.9.78',
  sysClientsslStatOcspStaplingOcspConnHttpErrors => '1.3.6.1.4.1.3375.2.1.1.2.9.79',
  sysClientsslStatOcspStaplingOcspConnTimeouts => '1.3.6.1.4.1.3375.2.1.1.2.9.80',
  sysClientsslStatOcspStaplingOcspConnFailures => '1.3.6.1.4.1.3375.2.1.1.2.9.81',
  sysGlobalServerSslStat => '1.3.6.1.4.1.3375.2.1.1.2.10',
  sysServersslStatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.10.1',
  sysServersslStatCurConns => '1.3.6.1.4.1.3375.2.1.1.2.10.2',
  sysServersslStatMaxConns => '1.3.6.1.4.1.3375.2.1.1.2.10.3',
  sysServersslStatCurNativeConns => '1.3.6.1.4.1.3375.2.1.1.2.10.4',
  sysServersslStatMaxNativeConns => '1.3.6.1.4.1.3375.2.1.1.2.10.5',
  sysServersslStatTotNativeConns => '1.3.6.1.4.1.3375.2.1.1.2.10.6',
  sysServersslStatCurCompatConns => '1.3.6.1.4.1.3375.2.1.1.2.10.7',
  sysServersslStatMaxCompatConns => '1.3.6.1.4.1.3375.2.1.1.2.10.8',
  sysServersslStatTotCompatConns => '1.3.6.1.4.1.3375.2.1.1.2.10.9',
  sysServersslStatEncryptedBytesIn => '1.3.6.1.4.1.3375.2.1.1.2.10.10',
  sysServersslStatEncryptedBytesOut => '1.3.6.1.4.1.3375.2.1.1.2.10.11',
  sysServersslStatDecryptedBytesIn => '1.3.6.1.4.1.3375.2.1.1.2.10.12',
  sysServersslStatDecryptedBytesOut => '1.3.6.1.4.1.3375.2.1.1.2.10.13',
  sysServersslStatRecordsIn => '1.3.6.1.4.1.3375.2.1.1.2.10.14',
  sysServersslStatRecordsOut => '1.3.6.1.4.1.3375.2.1.1.2.10.15',
  sysServersslStatFullyHwAcceleratedConns => '1.3.6.1.4.1.3375.2.1.1.2.10.16',
  sysServersslStatPartiallyHwAcceleratedConns => '1.3.6.1.4.1.3375.2.1.1.2.10.17',
  sysServersslStatNonHwAcceleratedConns => '1.3.6.1.4.1.3375.2.1.1.2.10.18',
  sysServersslStatPrematureDisconnects => '1.3.6.1.4.1.3375.2.1.1.2.10.19',
  sysServersslStatMidstreamRenegotiations => '1.3.6.1.4.1.3375.2.1.1.2.10.20',
  sysServersslStatSessCacheCurEntries => '1.3.6.1.4.1.3375.2.1.1.2.10.21',
  sysServersslStatSessCacheHits => '1.3.6.1.4.1.3375.2.1.1.2.10.22',
  sysServersslStatSessCacheLookups => '1.3.6.1.4.1.3375.2.1.1.2.10.23',
  sysServersslStatSessCacheOverflows => '1.3.6.1.4.1.3375.2.1.1.2.10.24',
  sysServersslStatSessCacheInvalidations => '1.3.6.1.4.1.3375.2.1.1.2.10.25',
  sysServersslStatPeercertValid => '1.3.6.1.4.1.3375.2.1.1.2.10.26',
  sysServersslStatPeercertInvalid => '1.3.6.1.4.1.3375.2.1.1.2.10.27',
  sysServersslStatPeercertNone => '1.3.6.1.4.1.3375.2.1.1.2.10.28',
  sysServersslStatHandshakeFailures => '1.3.6.1.4.1.3375.2.1.1.2.10.29',
  sysServersslStatBadRecords => '1.3.6.1.4.1.3375.2.1.1.2.10.30',
  sysServersslStatFatalAlerts => '1.3.6.1.4.1.3375.2.1.1.2.10.31',
  sysServersslStatSslv2 => '1.3.6.1.4.1.3375.2.1.1.2.10.32',
  sysServersslStatSslv3 => '1.3.6.1.4.1.3375.2.1.1.2.10.33',
  sysServersslStatTlsv1 => '1.3.6.1.4.1.3375.2.1.1.2.10.34',
  sysServersslStatAdhKeyxchg => '1.3.6.1.4.1.3375.2.1.1.2.10.35',
  sysServersslStatDhDssKeyxchg => '1.3.6.1.4.1.3375.2.1.1.2.10.36',
  sysServersslStatDhRsaKeyxchg => '1.3.6.1.4.1.3375.2.1.1.2.10.37',
  sysServersslStatDssKeyxchg => '1.3.6.1.4.1.3375.2.1.1.2.10.38',
  sysServersslStatEdhDssKeyxchg => '1.3.6.1.4.1.3375.2.1.1.2.10.39',
  sysServersslStatRsaKeyxchg => '1.3.6.1.4.1.3375.2.1.1.2.10.40',
  sysServersslStatNullBulk => '1.3.6.1.4.1.3375.2.1.1.2.10.41',
  sysServersslStatAesBulk => '1.3.6.1.4.1.3375.2.1.1.2.10.42',
  sysServersslStatDesBulk => '1.3.6.1.4.1.3375.2.1.1.2.10.43',
  sysServersslStatIdeaBulk => '1.3.6.1.4.1.3375.2.1.1.2.10.44',
  sysServersslStatRc2Bulk => '1.3.6.1.4.1.3375.2.1.1.2.10.45',
  sysServersslStatRc4Bulk => '1.3.6.1.4.1.3375.2.1.1.2.10.46',
  sysServersslStatNullDigest => '1.3.6.1.4.1.3375.2.1.1.2.10.47',
  sysServersslStatMd5Digest => '1.3.6.1.4.1.3375.2.1.1.2.10.48',
  sysServersslStatShaDigest => '1.3.6.1.4.1.3375.2.1.1.2.10.49',
  sysServersslStatNotssl => '1.3.6.1.4.1.3375.2.1.1.2.10.50',
  sysServersslStatEdhRsaKeyxchg => '1.3.6.1.4.1.3375.2.1.1.2.10.51',
  sysServersslStatSecureHandshakes => '1.3.6.1.4.1.3375.2.1.1.2.10.52',
  sysServersslStatInsecureHandshakeAccepts => '1.3.6.1.4.1.3375.2.1.1.2.10.53',
  sysServersslStatInsecureHandshakeRejects => '1.3.6.1.4.1.3375.2.1.1.2.10.54',
  sysServersslStatInsecureRenegotiationRejects => '1.3.6.1.4.1.3375.2.1.1.2.10.55',
  sysServersslStatSniRejects => '1.3.6.1.4.1.3375.2.1.1.2.10.56',
  sysServersslStatTlsv11 => '1.3.6.1.4.1.3375.2.1.1.2.10.57',
  sysServersslStatTlsv12 => '1.3.6.1.4.1.3375.2.1.1.2.10.58',
  sysServersslStatDtlsv1 => '1.3.6.1.4.1.3375.2.1.1.2.10.59',
  sysServersslStatEcdheRsaKeyxchg => '1.3.6.1.4.1.3375.2.1.1.2.10.60',
  sysServersslStatConns => '1.3.6.1.4.1.3375.2.1.1.2.10.61',
  sysServersslStatEcdhRsaKeyxchg => '1.3.6.1.4.1.3375.2.1.1.2.10.62',
  sysServersslStatEcdheEcdsaKeyxchg => '1.3.6.1.4.1.3375.2.1.1.2.10.63',
  sysServersslStatEcdhEcdsaKeyxchg => '1.3.6.1.4.1.3375.2.1.1.2.10.64',
  sysServersslStatDheDssKeyxchg => '1.3.6.1.4.1.3375.2.1.1.2.10.65',
  sysServersslStatAesGcmBulk => '1.3.6.1.4.1.3375.2.1.1.2.10.66',
  sysServersslStatDestinationIpBypasses => '1.3.6.1.4.1.3375.2.1.1.2.10.67',
  sysServersslStatSourceIpBypasses => '1.3.6.1.4.1.3375.2.1.1.2.10.68',
  sysServersslStatHostnameBypasses => '1.3.6.1.4.1.3375.2.1.1.2.10.69',
  sysServersslStatRenegotiationsRejected => '1.3.6.1.4.1.3375.2.1.1.2.10.70',
  sysGlobalStreamStat => '1.3.6.1.4.1.3375.2.1.1.2.11',
  sysStreamStatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.11.1',
  sysStreamStatReplaces => '1.3.6.1.4.1.3375.2.1.1.2.11.2',
  sysGlobalTcpStat => '1.3.6.1.4.1.3375.2.1.1.2.12',
  sysTcpStatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.12.1',
  sysTcpStatOpen => '1.3.6.1.4.1.3375.2.1.1.2.12.2',
  sysTcpStatCloseWait => '1.3.6.1.4.1.3375.2.1.1.2.12.3',
  sysTcpStatFinWait => '1.3.6.1.4.1.3375.2.1.1.2.12.4',
  sysTcpStatTimeWait => '1.3.6.1.4.1.3375.2.1.1.2.12.5',
  sysTcpStatAccepts => '1.3.6.1.4.1.3375.2.1.1.2.12.6',
  sysTcpStatAcceptfails => '1.3.6.1.4.1.3375.2.1.1.2.12.7',
  sysTcpStatConnects => '1.3.6.1.4.1.3375.2.1.1.2.12.8',
  sysTcpStatConnfails => '1.3.6.1.4.1.3375.2.1.1.2.12.9',
  sysTcpStatExpires => '1.3.6.1.4.1.3375.2.1.1.2.12.10',
  sysTcpStatAbandons => '1.3.6.1.4.1.3375.2.1.1.2.12.11',
  sysTcpStatRxrst => '1.3.6.1.4.1.3375.2.1.1.2.12.12',
  sysTcpStatRxbadsum => '1.3.6.1.4.1.3375.2.1.1.2.12.13',
  sysTcpStatRxbadseg => '1.3.6.1.4.1.3375.2.1.1.2.12.14',
  sysTcpStatRxooseg => '1.3.6.1.4.1.3375.2.1.1.2.12.15',
  sysTcpStatRxcookie => '1.3.6.1.4.1.3375.2.1.1.2.12.16',
  sysTcpStatRxbadcookie => '1.3.6.1.4.1.3375.2.1.1.2.12.17',
  sysTcpStatSyncacheover => '1.3.6.1.4.1.3375.2.1.1.2.12.18',
  sysTcpStatTxrexmits => '1.3.6.1.4.1.3375.2.1.1.2.12.19',
  sysGlobalUdpStat => '1.3.6.1.4.1.3375.2.1.1.2.13',
  sysUdpStatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.13.1',
  sysUdpStatOpen => '1.3.6.1.4.1.3375.2.1.1.2.13.2',
  sysUdpStatAccepts => '1.3.6.1.4.1.3375.2.1.1.2.13.3',
  sysUdpStatAcceptfails => '1.3.6.1.4.1.3375.2.1.1.2.13.4',
  sysUdpStatConnects => '1.3.6.1.4.1.3375.2.1.1.2.13.5',
  sysUdpStatConnfails => '1.3.6.1.4.1.3375.2.1.1.2.13.6',
  sysUdpStatExpires => '1.3.6.1.4.1.3375.2.1.1.2.13.7',
  sysUdpStatRxdgram => '1.3.6.1.4.1.3375.2.1.1.2.13.8',
  sysUdpStatRxbaddgram => '1.3.6.1.4.1.3375.2.1.1.2.13.9',
  sysUdpStatRxunreach => '1.3.6.1.4.1.3375.2.1.1.2.13.10',
  sysUdpStatRxbadsum => '1.3.6.1.4.1.3375.2.1.1.2.13.11',
  sysUdpStatRxnosum => '1.3.6.1.4.1.3375.2.1.1.2.13.12',
  sysUdpStatTxdgram => '1.3.6.1.4.1.3375.2.1.1.2.13.13',
  sysGlobalFastHttpStat => '1.3.6.1.4.1.3375.2.1.1.2.14',
  sysFastHttpStatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.14.1',
  sysFastHttpStatClientSyns => '1.3.6.1.4.1.3375.2.1.1.2.14.2',
  sysFastHttpStatClientAccepts => '1.3.6.1.4.1.3375.2.1.1.2.14.3',
  sysFastHttpStatServerConnects => '1.3.6.1.4.1.3375.2.1.1.2.14.4',
  sysFastHttpStatConnpoolCurSize => '1.3.6.1.4.1.3375.2.1.1.2.14.5',
  sysFastHttpStatConnpoolMaxSize => '1.3.6.1.4.1.3375.2.1.1.2.14.6',
  sysFastHttpStatConnpoolReuses => '1.3.6.1.4.1.3375.2.1.1.2.14.7',
  sysFastHttpStatConnpoolExhausted => '1.3.6.1.4.1.3375.2.1.1.2.14.8',
  sysFastHttpStatNumberReqs => '1.3.6.1.4.1.3375.2.1.1.2.14.9',
  sysFastHttpStatUnbufferedReqs => '1.3.6.1.4.1.3375.2.1.1.2.14.10',
  sysFastHttpStatGetReqs => '1.3.6.1.4.1.3375.2.1.1.2.14.11',
  sysFastHttpStatPostReqs => '1.3.6.1.4.1.3375.2.1.1.2.14.12',
  sysFastHttpStatV9Reqs => '1.3.6.1.4.1.3375.2.1.1.2.14.13',
  sysFastHttpStatV10Reqs => '1.3.6.1.4.1.3375.2.1.1.2.14.14',
  sysFastHttpStatV11Reqs => '1.3.6.1.4.1.3375.2.1.1.2.14.15',
  sysFastHttpStatResp2xxCnt => '1.3.6.1.4.1.3375.2.1.1.2.14.16',
  sysFastHttpStatResp3xxCnt => '1.3.6.1.4.1.3375.2.1.1.2.14.17',
  sysFastHttpStatResp4xxCnt => '1.3.6.1.4.1.3375.2.1.1.2.14.18',
  sysFastHttpStatResp5xxCnt => '1.3.6.1.4.1.3375.2.1.1.2.14.19',
  sysFastHttpStatReqParseErrors => '1.3.6.1.4.1.3375.2.1.1.2.14.20',
  sysFastHttpStatRespParseErrors => '1.3.6.1.4.1.3375.2.1.1.2.14.21',
  sysFastHttpStatClientRxBad => '1.3.6.1.4.1.3375.2.1.1.2.14.22',
  sysFastHttpStatServerRxBad => '1.3.6.1.4.1.3375.2.1.1.2.14.23',
  sysFastHttpStatPipelinedReqs => '1.3.6.1.4.1.3375.2.1.1.2.14.24',
  sysGlobalXmlStat => '1.3.6.1.4.1.3375.2.1.1.2.15',
  sysXmlStatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.15.1',
  sysXmlStatNumErrors => '1.3.6.1.4.1.3375.2.1.1.2.15.2',
  sysGlobalIiopStat => '1.3.6.1.4.1.3375.2.1.1.2.16',
  sysIiopStatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.16.1',
  sysIiopStatNumRequests => '1.3.6.1.4.1.3375.2.1.1.2.16.2',
  sysIiopStatNumResponses => '1.3.6.1.4.1.3375.2.1.1.2.16.3',
  sysIiopStatNumCancels => '1.3.6.1.4.1.3375.2.1.1.2.16.4',
  sysIiopStatNumErrors => '1.3.6.1.4.1.3375.2.1.1.2.16.5',
  sysIiopStatNumFragments => '1.3.6.1.4.1.3375.2.1.1.2.16.6',
  sysGlobalRtspStat => '1.3.6.1.4.1.3375.2.1.1.2.17',
  sysRtspStatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.17.1',
  sysRtspStatNumRequests => '1.3.6.1.4.1.3375.2.1.1.2.17.2',
  sysRtspStatNumResponses => '1.3.6.1.4.1.3375.2.1.1.2.17.3',
  sysRtspStatNumErrors => '1.3.6.1.4.1.3375.2.1.1.2.17.4',
  sysRtspStatNumInterleavedData => '1.3.6.1.4.1.3375.2.1.1.2.17.5',
  sysGlobalSctpStat => '1.3.6.1.4.1.3375.2.1.1.2.18',
  sysSctpStatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.18.1',
  sysSctpStatAccepts => '1.3.6.1.4.1.3375.2.1.1.2.18.2',
  sysSctpStatAcceptfails => '1.3.6.1.4.1.3375.2.1.1.2.18.3',
  sysSctpStatConnects => '1.3.6.1.4.1.3375.2.1.1.2.18.4',
  sysSctpStatConnfails => '1.3.6.1.4.1.3375.2.1.1.2.18.5',
  sysSctpStatExpires => '1.3.6.1.4.1.3375.2.1.1.2.18.6',
  sysSctpStatAbandons => '1.3.6.1.4.1.3375.2.1.1.2.18.7',
  sysSctpStatRxrst => '1.3.6.1.4.1.3375.2.1.1.2.18.8',
  sysSctpStatRxbadsum => '1.3.6.1.4.1.3375.2.1.1.2.18.9',
  sysSctpStatRxcookie => '1.3.6.1.4.1.3375.2.1.1.2.18.10',
  sysSctpStatRxbadcookie => '1.3.6.1.4.1.3375.2.1.1.2.18.11',
  sysGlobalFastL4Stat => '1.3.6.1.4.1.3375.2.1.1.2.19',
  sysFastL4StatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.19.1',
  sysFastL4StatOpen => '1.3.6.1.4.1.3375.2.1.1.2.19.2',
  sysFastL4StatAccepts => '1.3.6.1.4.1.3375.2.1.1.2.19.3',
  sysFastL4StatAcceptfails => '1.3.6.1.4.1.3375.2.1.1.2.19.4',
  sysFastL4StatExpires => '1.3.6.1.4.1.3375.2.1.1.2.19.5',
  sysFastL4StatRxbadpkt => '1.3.6.1.4.1.3375.2.1.1.2.19.6',
  sysFastL4StatRxunreach => '1.3.6.1.4.1.3375.2.1.1.2.19.7',
  sysFastL4StatRxbadunreach => '1.3.6.1.4.1.3375.2.1.1.2.19.8',
  sysFastL4StatRxbadsum => '1.3.6.1.4.1.3375.2.1.1.2.19.9',
  sysFastL4StatTxerrors => '1.3.6.1.4.1.3375.2.1.1.2.19.10',
  sysFastL4StatSyncookIssue => '1.3.6.1.4.1.3375.2.1.1.2.19.11',
  sysFastL4StatSyncookAccept => '1.3.6.1.4.1.3375.2.1.1.2.19.12',
  sysFastL4StatSyncookReject => '1.3.6.1.4.1.3375.2.1.1.2.19.13',
  sysFastL4StatServersynrtx => '1.3.6.1.4.1.3375.2.1.1.2.19.14',
  sysFastL4StatLbcSuccessful => '1.3.6.1.4.1.3375.2.1.1.2.19.15',
  sysFastL4StatLbcTimedout => '1.3.6.1.4.1.3375.2.1.1.2.19.16',
  sysGlobalHost => '1.3.6.1.4.1.3375.2.1.1.2.20',
  sysGlobalHostResetStats => '1.3.6.1.4.1.3375.2.1.1.2.20.1',
  sysGlobalHostMemTotal => '1.3.6.1.4.1.3375.2.1.1.2.20.2',
  sysGlobalHostMemUsed => '1.3.6.1.4.1.3375.2.1.1.2.20.3',
  sysGlobalHostCpuCount => '1.3.6.1.4.1.3375.2.1.1.2.20.4',
  sysGlobalHostActiveCpuCount => '1.3.6.1.4.1.3375.2.1.1.2.20.5',
  sysGlobalHostCpuUser => '1.3.6.1.4.1.3375.2.1.1.2.20.6',
  sysGlobalHostCpuNice => '1.3.6.1.4.1.3375.2.1.1.2.20.7',
  sysGlobalHostCpuSystem => '1.3.6.1.4.1.3375.2.1.1.2.20.8',
  sysGlobalHostCpuIdle => '1.3.6.1.4.1.3375.2.1.1.2.20.9',
  sysGlobalHostCpuIrq => '1.3.6.1.4.1.3375.2.1.1.2.20.10',
  sysGlobalHostCpuSoftirq => '1.3.6.1.4.1.3375.2.1.1.2.20.11',
  sysGlobalHostCpuIowait => '1.3.6.1.4.1.3375.2.1.1.2.20.12',
  sysGlobalHostCpuUsageRatio => '1.3.6.1.4.1.3375.2.1.1.2.20.13',
  sysGlobalHostCpuUser5s => '1.3.6.1.4.1.3375.2.1.1.2.20.14',
  sysGlobalHostCpuNice5s => '1.3.6.1.4.1.3375.2.1.1.2.20.15',
  sysGlobalHostCpuSystem5s => '1.3.6.1.4.1.3375.2.1.1.2.20.16',
  sysGlobalHostCpuIdle5s => '1.3.6.1.4.1.3375.2.1.1.2.20.17',
  sysGlobalHostCpuIrq5s => '1.3.6.1.4.1.3375.2.1.1.2.20.18',
  sysGlobalHostCpuSoftirq5s => '1.3.6.1.4.1.3375.2.1.1.2.20.19',
  sysGlobalHostCpuIowait5s => '1.3.6.1.4.1.3375.2.1.1.2.20.20',
  sysGlobalHostCpuUsageRatio5s => '1.3.6.1.4.1.3375.2.1.1.2.20.21',
  sysGlobalHostCpuUser1m => '1.3.6.1.4.1.3375.2.1.1.2.20.22',
  sysGlobalHostCpuNice1m => '1.3.6.1.4.1.3375.2.1.1.2.20.23',
  sysGlobalHostCpuSystem1m => '1.3.6.1.4.1.3375.2.1.1.2.20.24',
  sysGlobalHostCpuIdle1m => '1.3.6.1.4.1.3375.2.1.1.2.20.25',
  sysGlobalHostCpuIrq1m => '1.3.6.1.4.1.3375.2.1.1.2.20.26',
  sysGlobalHostCpuSoftirq1m => '1.3.6.1.4.1.3375.2.1.1.2.20.27',
  sysGlobalHostCpuIowait1m => '1.3.6.1.4.1.3375.2.1.1.2.20.28',
  sysGlobalHostCpuUsageRatio1m => '1.3.6.1.4.1.3375.2.1.1.2.20.29',
  sysGlobalHostCpuUser5m => '1.3.6.1.4.1.3375.2.1.1.2.20.30',
  sysGlobalHostCpuNice5m => '1.3.6.1.4.1.3375.2.1.1.2.20.31',
  sysGlobalHostCpuSystem5m => '1.3.6.1.4.1.3375.2.1.1.2.20.32',
  sysGlobalHostCpuIdle5m => '1.3.6.1.4.1.3375.2.1.1.2.20.33',
  sysGlobalHostCpuIrq5m => '1.3.6.1.4.1.3375.2.1.1.2.20.34',
  sysGlobalHostCpuSoftirq5m => '1.3.6.1.4.1.3375.2.1.1.2.20.35',
  sysGlobalHostCpuIowait5m => '1.3.6.1.4.1.3375.2.1.1.2.20.36',
  sysGlobalHostCpuUsageRatio5m => '1.3.6.1.4.1.3375.2.1.1.2.20.37',
  sysGlobalHostCpuStolen => '1.3.6.1.4.1.3375.2.1.1.2.20.38',
  sysGlobalHostCpuStolen5s => '1.3.6.1.4.1.3375.2.1.1.2.20.39',
  sysGlobalHostCpuStolen1m => '1.3.6.1.4.1.3375.2.1.1.2.20.40',
  sysGlobalHostCpuStolen5m => '1.3.6.1.4.1.3375.2.1.1.2.20.41',
  sysGlobalHostMemTotalKb => '1.3.6.1.4.1.3375.2.1.1.2.20.42',
  sysGlobalHostMemUsedKb => '1.3.6.1.4.1.3375.2.1.1.2.20.43',
  sysGlobalHostOtherMemoryTotal => '1.3.6.1.4.1.3375.2.1.1.2.20.44',
  sysGlobalHostOtherMemoryUsed => '1.3.6.1.4.1.3375.2.1.1.2.20.45',
  sysGlobalHostSwapTotal => '1.3.6.1.4.1.3375.2.1.1.2.20.46',
  sysGlobalHostSwapUsed => '1.3.6.1.4.1.3375.2.1.1.2.20.47',
  sysGlobalHostOtherMemTotalKb => '1.3.6.1.4.1.3375.2.1.1.2.20.48',
  sysGlobalHostOtherMemUsedKb => '1.3.6.1.4.1.3375.2.1.1.2.20.49',
  sysGlobalHostSwapTotalKb => '1.3.6.1.4.1.3375.2.1.1.2.20.50',
  sysGlobalHostSwapUsedKb => '1.3.6.1.4.1.3375.2.1.1.2.20.51',
  sysGlobalTmmStat => '1.3.6.1.4.1.3375.2.1.1.2.21',
  sysGlobalTmmStatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.21.1',
  sysGlobalTmmStatNpus => '1.3.6.1.4.1.3375.2.1.1.2.21.2',
  sysGlobalTmmStatClientPktsIn => '1.3.6.1.4.1.3375.2.1.1.2.21.3',
  sysGlobalTmmStatClientBytesIn => '1.3.6.1.4.1.3375.2.1.1.2.21.4',
  sysGlobalTmmStatClientPktsOut => '1.3.6.1.4.1.3375.2.1.1.2.21.5',
  sysGlobalTmmStatClientBytesOut => '1.3.6.1.4.1.3375.2.1.1.2.21.6',
  sysGlobalTmmStatClientMaxConns => '1.3.6.1.4.1.3375.2.1.1.2.21.7',
  sysGlobalTmmStatClientTotConns => '1.3.6.1.4.1.3375.2.1.1.2.21.8',
  sysGlobalTmmStatClientCurConns => '1.3.6.1.4.1.3375.2.1.1.2.21.9',
  sysGlobalTmmStatServerPktsIn => '1.3.6.1.4.1.3375.2.1.1.2.21.10',
  sysGlobalTmmStatServerBytesIn => '1.3.6.1.4.1.3375.2.1.1.2.21.11',
  sysGlobalTmmStatServerPktsOut => '1.3.6.1.4.1.3375.2.1.1.2.21.12',
  sysGlobalTmmStatServerBytesOut => '1.3.6.1.4.1.3375.2.1.1.2.21.13',
  sysGlobalTmmStatServerMaxConns => '1.3.6.1.4.1.3375.2.1.1.2.21.14',
  sysGlobalTmmStatServerTotConns => '1.3.6.1.4.1.3375.2.1.1.2.21.15',
  sysGlobalTmmStatServerCurConns => '1.3.6.1.4.1.3375.2.1.1.2.21.16',
  sysGlobalTmmStatMaintenanceModeDeny => '1.3.6.1.4.1.3375.2.1.1.2.21.17',
  sysGlobalTmmStatMaxConnVirtualAddrDeny => '1.3.6.1.4.1.3375.2.1.1.2.21.18',
  sysGlobalTmmStatMaxConnVirtualPathDeny => '1.3.6.1.4.1.3375.2.1.1.2.21.19',
  sysGlobalTmmStatVirtualServerNonSynDeny => '1.3.6.1.4.1.3375.2.1.1.2.21.20',
  sysGlobalTmmStatNoHandlerDeny => '1.3.6.1.4.1.3375.2.1.1.2.21.21',
  sysGlobalTmmStatLicenseDeny => '1.3.6.1.4.1.3375.2.1.1.2.21.22',
  sysGlobalTmmStatCmpConnRedirected => '1.3.6.1.4.1.3375.2.1.1.2.21.23',
  sysGlobalTmmStatConnectionMemoryErrors => '1.3.6.1.4.1.3375.2.1.1.2.21.24',
  sysGlobalTmmStatTmTotalCycles => '1.3.6.1.4.1.3375.2.1.1.2.21.25',
  sysGlobalTmmStatTmIdleCycles => '1.3.6.1.4.1.3375.2.1.1.2.21.26',
  sysGlobalTmmStatTmSleepCycles => '1.3.6.1.4.1.3375.2.1.1.2.21.27',
  sysGlobalTmmStatMemoryTotal => '1.3.6.1.4.1.3375.2.1.1.2.21.28',
  sysGlobalTmmStatMemoryUsed => '1.3.6.1.4.1.3375.2.1.1.2.21.29',
  sysGlobalTmmStatDroppedPackets => '1.3.6.1.4.1.3375.2.1.1.2.21.30',
  sysGlobalTmmStatIncomingPacketErrors => '1.3.6.1.4.1.3375.2.1.1.2.21.31',
  sysGlobalTmmStatOutgoingPacketErrors => '1.3.6.1.4.1.3375.2.1.1.2.21.32',
  sysGlobalTmmStatHttpRequests => '1.3.6.1.4.1.3375.2.1.1.2.21.33',
  sysGlobalTmmStatTmUsageRatio5s => '1.3.6.1.4.1.3375.2.1.1.2.21.34',
  sysGlobalTmmStatTmUsageRatio1m => '1.3.6.1.4.1.3375.2.1.1.2.21.35',
  sysGlobalTmmStatTmUsageRatio5m => '1.3.6.1.4.1.3375.2.1.1.2.21.36',
  sysGlobalTmmStatMemoryTotalKb => '1.3.6.1.4.1.3375.2.1.1.2.21.37',
  sysGlobalTmmStatMemoryUsedKb => '1.3.6.1.4.1.3375.2.1.1.2.21.38',
  sysGlobalTmmStatSwSyncookies => '1.3.6.1.4.1.3375.2.1.1.2.21.39',
  sysGlobalTmmStatSwSyncookieAccepts => '1.3.6.1.4.1.3375.2.1.1.2.21.40',
  sysGlobalTmmStatSyncookieRejects => '1.3.6.1.4.1.3375.2.1.1.2.21.41',
  sysGlobalTmmStatHwSyncookies => '1.3.6.1.4.1.3375.2.1.1.2.21.42',
  sysGlobalTmmStatHwSyncookieAccepts => '1.3.6.1.4.1.3375.2.1.1.2.21.43',
  sysGlobalTmmStatWlSyncookieHits => '1.3.6.1.4.1.3375.2.1.1.2.21.44',
  sysGlobalTmmStatWlSyncookieAccepts => '1.3.6.1.4.1.3375.2.1.1.2.21.45',
  sysGlobalTmmStatWlSyncookieRejects => '1.3.6.1.4.1.3375.2.1.1.2.21.46',
  sysGlobalTmmStatConnectionFlowMiss => '1.3.6.1.4.1.3375.2.1.1.2.21.47',
  sysGlobalHttpCompressionStat => '1.3.6.1.4.1.3375.2.1.1.2.22',
  sysHttpCompressionStatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.22.1',
  sysHttpCompressionStatPrecompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.22.2',
  sysHttpCompressionStatPostcompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.22.3',
  sysHttpCompressionStatNullCompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.22.4',
  sysHttpCompressionStatHtmlPrecompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.22.5',
  sysHttpCompressionStatHtmlPostcompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.22.6',
  sysHttpCompressionStatCssPrecompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.22.7',
  sysHttpCompressionStatCssPostcompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.22.8',
  sysHttpCompressionStatJsPrecompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.22.9',
  sysHttpCompressionStatJsPostcompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.22.10',
  sysHttpCompressionStatXmlPrecompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.22.11',
  sysHttpCompressionStatXmlPostcompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.22.12',
  sysHttpCompressionStatSgmlPrecompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.22.13',
  sysHttpCompressionStatSgmlPostcompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.22.14',
  sysHttpCompressionStatPlainPrecompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.22.15',
  sysHttpCompressionStatPlainPostcompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.22.16',
  sysHttpCompressionStatOctetPrecompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.22.17',
  sysHttpCompressionStatOctetPostcompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.22.18',
  sysHttpCompressionStatImagePrecompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.22.19',
  sysHttpCompressionStatImagePostcompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.22.20',
  sysHttpCompressionStatVideoPrecompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.22.21',
  sysHttpCompressionStatVideoPostcompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.22.22',
  sysHttpCompressionStatAudioPrecompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.22.23',
  sysHttpCompressionStatAudioPostcompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.22.24',
  sysHttpCompressionStatOtherPrecompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.22.25',
  sysHttpCompressionStatOtherPostcompressBytes => '1.3.6.1.4.1.3375.2.1.1.2.22.26',
  sysGlobalWebAccelerationStat => '1.3.6.1.4.1.3375.2.1.1.2.23',
  sysWebAccelerationStatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.23.1',
  sysWebAccelerationStatCacheHits => '1.3.6.1.4.1.3375.2.1.1.2.23.2',
  sysWebAccelerationStatCacheMisses => '1.3.6.1.4.1.3375.2.1.1.2.23.3',
  sysWebAccelerationStatCacheMissesAll => '1.3.6.1.4.1.3375.2.1.1.2.23.4',
  sysWebAccelerationStatCacheHitBytes => '1.3.6.1.4.1.3375.2.1.1.2.23.5',
  sysWebAccelerationStatCacheMissBytes => '1.3.6.1.4.1.3375.2.1.1.2.23.6',
  sysWebAccelerationStatCacheMissBytesAll => '1.3.6.1.4.1.3375.2.1.1.2.23.7',
  sysWebAccelerationStatCacheSize => '1.3.6.1.4.1.3375.2.1.1.2.23.8',
  sysWebAccelerationStatCacheCount => '1.3.6.1.4.1.3375.2.1.1.2.23.9',
  sysWebAccelerationStatCacheEvictions => '1.3.6.1.4.1.3375.2.1.1.2.23.10',
  sysWebAccelerationStatInterStripeHits => '1.3.6.1.4.1.3375.2.1.1.2.23.11',
  sysWebAccelerationStatInterStripeMisses => '1.3.6.1.4.1.3375.2.1.1.2.23.12',
  sysWebAccelerationStatInterStripeHitBytes => '1.3.6.1.4.1.3375.2.1.1.2.23.13',
  sysWebAccelerationStatInterStripeSize => '1.3.6.1.4.1.3375.2.1.1.2.23.14',
  sysWebAccelerationStatInterStripeCount => '1.3.6.1.4.1.3375.2.1.1.2.23.15',
  sysWebAccelerationStatInterStripeEvictions => '1.3.6.1.4.1.3375.2.1.1.2.23.16',
  sysWebAccelerationStatRemoteHits => '1.3.6.1.4.1.3375.2.1.1.2.23.17',
  sysWebAccelerationStatRemoteMisses => '1.3.6.1.4.1.3375.2.1.1.2.23.18',
  sysWebAccelerationStatRemoteHitBytes => '1.3.6.1.4.1.3375.2.1.1.2.23.19',
  sysGlobalDnsStat => '1.3.6.1.4.1.3375.2.1.1.2.24',
  sysDnsStatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.24.1',
  sysDnsStatQueries => '1.3.6.1.4.1.3375.2.1.1.2.24.2',
  sysDnsStatResponses => '1.3.6.1.4.1.3375.2.1.1.2.24.3',
  sysDnsStatResponsesPerSec => '1.3.6.1.4.1.3375.2.1.1.2.24.4',
  sysDnsStatToGtm => '1.3.6.1.4.1.3375.2.1.1.2.24.5',
  sysDnsStatDnsExpressReqs => '1.3.6.1.4.1.3375.2.1.1.2.24.6',
  sysDnsStatDnsExpressNotifies => '1.3.6.1.4.1.3375.2.1.1.2.24.7',
  sysDnsStatToCache => '1.3.6.1.4.1.3375.2.1.1.2.24.8',
  sysDnsStatToDns => '1.3.6.1.4.1.3375.2.1.1.2.24.9',
  sysDnsStatDns64Reqs => '1.3.6.1.4.1.3375.2.1.1.2.24.10',
  sysDnsStatDns64Rewrites => '1.3.6.1.4.1.3375.2.1.1.2.24.11',
  sysDnsStatDns64Failures => '1.3.6.1.4.1.3375.2.1.1.2.24.12',
  sysDnsStatHints => '1.3.6.1.4.1.3375.2.1.1.2.24.13',
  sysDnsStatRejects => '1.3.6.1.4.1.3375.2.1.1.2.24.14',
  sysDnsStatNoErrors => '1.3.6.1.4.1.3375.2.1.1.2.24.15',
  sysDnsStatDrops => '1.3.6.1.4.1.3375.2.1.1.2.24.16',
  sysDnsStatMalformed => '1.3.6.1.4.1.3375.2.1.1.2.24.17',
  sysDnsStatTclSuspends => '1.3.6.1.4.1.3375.2.1.1.2.24.18',
  sysDnsStatRecursionDesired => '1.3.6.1.4.1.3375.2.1.1.2.24.19',
  sysDnsStatCheckingDisabled => '1.3.6.1.4.1.3375.2.1.1.2.24.20',
  sysDnsStatEdns0 => '1.3.6.1.4.1.3375.2.1.1.2.24.21',
  sysDnsStatOpcodeQuery => '1.3.6.1.4.1.3375.2.1.1.2.24.22',
  sysDnsStatOpcodeNotify => '1.3.6.1.4.1.3375.2.1.1.2.24.23',
  sysDnsStatOpcodeUpdate => '1.3.6.1.4.1.3375.2.1.1.2.24.24',
  sysDnsStatZoneIxfr => '1.3.6.1.4.1.3375.2.1.1.2.24.25',
  sysDnsStatZoneAxfr => '1.3.6.1.4.1.3375.2.1.1.2.24.26',
  sysDnsStatAuthoritativeAnswer => '1.3.6.1.4.1.3375.2.1.1.2.24.27',
  sysDnsStatRecursionAvailable => '1.3.6.1.4.1.3375.2.1.1.2.24.28',
  sysDnsStatAuthenticatedData => '1.3.6.1.4.1.3375.2.1.1.2.24.29',
  sysDnsStatTruncated => '1.3.6.1.4.1.3375.2.1.1.2.24.30',
  sysDnsStatRcodeNoerror => '1.3.6.1.4.1.3375.2.1.1.2.24.31',
  sysDnsStatRcodeNxdomain => '1.3.6.1.4.1.3375.2.1.1.2.24.32',
  sysDnsStatRcodeServfail => '1.3.6.1.4.1.3375.2.1.1.2.24.33',
  sysDnsStatRcodeRefused => '1.3.6.1.4.1.3375.2.1.1.2.24.34',
  sysDnsStatMalicious => '1.3.6.1.4.1.3375.2.1.1.2.24.35',
  sysDnsStatAReqs => '1.3.6.1.4.1.3375.2.1.1.2.24.36',
  sysDnsStatAaaaReqs => '1.3.6.1.4.1.3375.2.1.1.2.24.37',
  sysDnsStatAnyReqs => '1.3.6.1.4.1.3375.2.1.1.2.24.38',
  sysDnsStatCnameReqs => '1.3.6.1.4.1.3375.2.1.1.2.24.39',
  sysDnsStatMxReqs => '1.3.6.1.4.1.3375.2.1.1.2.24.40',
  sysDnsStatNsReqs => '1.3.6.1.4.1.3375.2.1.1.2.24.41',
  sysDnsStatPtrReqs => '1.3.6.1.4.1.3375.2.1.1.2.24.42',
  sysDnsStatSoaReqs => '1.3.6.1.4.1.3375.2.1.1.2.24.43',
  sysDnsStatSrvReqs => '1.3.6.1.4.1.3375.2.1.1.2.24.44',
  sysDnsStatTxtReqs => '1.3.6.1.4.1.3375.2.1.1.2.24.45',
  sysDnsStatOtherReqs => '1.3.6.1.4.1.3375.2.1.1.2.24.46',
  sysDnsStatGtmRewrites => '1.3.6.1.4.1.3375.2.1.1.2.24.47',
  sysDnsStatOpcodeOther => '1.3.6.1.4.1.3375.2.1.1.2.24.48',
  sysDnsStatFastDnsResponses => '1.3.6.1.4.1.3375.2.1.1.2.24.49',
  sysDnsStatFastDnsAllowed => '1.3.6.1.4.1.3375.2.1.1.2.24.50',
  sysDnsStatFastDnsDrops => '1.3.6.1.4.1.3375.2.1.1.2.24.51',
  sysDnsStatFastDnsRespTc => '1.3.6.1.4.1.3375.2.1.1.2.24.52',
  sysDnsStatFastDnsRespNx => '1.3.6.1.4.1.3375.2.1.1.2.24.53',
  sysDnsStatFastDnsRespNe => '1.3.6.1.4.1.3375.2.1.1.2.24.54',
  sysDnsStatFastDnsRespRf => '1.3.6.1.4.1.3375.2.1.1.2.24.55',
  sysGlobalLsnPoolStat => '1.3.6.1.4.1.3375.2.1.1.2.25',
  sysLsnPoolStatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.25.1',
  sysLsnPoolStatActivePersistenceMappings => '1.3.6.1.4.1.3375.2.1.1.2.25.2',
  sysLsnPoolStatActiveInboundReservations => '1.3.6.1.4.1.3375.2.1.1.2.25.3',
  sysLsnPoolStatTranslationRequests => '1.3.6.1.4.1.3375.2.1.1.2.25.4',
  sysLsnPoolStatHairpinConnectionRequests => '1.3.6.1.4.1.3375.2.1.1.2.25.5',
  sysLsnPoolStatActiveTranslations => '1.3.6.1.4.1.3375.2.1.1.2.25.6',
  sysLsnPoolStatActiveHairpinConnections => '1.3.6.1.4.1.3375.2.1.1.2.25.7',
  sysLsnPoolStatTranslationRequestFailures => '1.3.6.1.4.1.3375.2.1.1.2.25.8',
  sysLsnPoolStatPersistenceMappingFailures => '1.3.6.1.4.1.3375.2.1.1.2.25.9',
  sysLsnPoolStatHairpinConnectionFailures => '1.3.6.1.4.1.3375.2.1.1.2.25.10',
  sysLsnPoolStatBackupPoolTranslations => '1.3.6.1.4.1.3375.2.1.1.2.25.11',
  sysLsnPoolStatLogAttempts => '1.3.6.1.4.1.3375.2.1.1.2.25.12',
  sysLsnPoolStatLogFailures => '1.3.6.1.4.1.3375.2.1.1.2.25.13',
  sysLsnPoolStatTotalEndPoints => '1.3.6.1.4.1.3375.2.1.1.2.25.14',
  sysLsnPoolStatActivePortBlocks => '1.3.6.1.4.1.3375.2.1.1.2.25.15',
  sysLsnPoolStatActiveClientsReachedLimit => '1.3.6.1.4.1.3375.2.1.1.2.25.16',
  sysLsnPoolStatActiveZombiePortBlocks => '1.3.6.1.4.1.3375.2.1.1.2.25.17',
  sysLsnPoolStatTotalClientsReachedLimit => '1.3.6.1.4.1.3375.2.1.1.2.25.18',
  sysLsnPoolStatTotalPortBlockAllocations => '1.3.6.1.4.1.3375.2.1.1.2.25.19',
  sysLsnPoolStatTotalPortBlockAllocationFailures => '1.3.6.1.4.1.3375.2.1.1.2.25.20',
  sysLsnPoolStatTotalPortBlockDeallocations => '1.3.6.1.4.1.3375.2.1.1.2.25.21',
  sysLsnPoolStatTotalZombiePortBlockConnectionsKilled => '1.3.6.1.4.1.3375.2.1.1.2.25.22',
  sysLsnPoolStatTotalZombiePortBlocksCreated => '1.3.6.1.4.1.3375.2.1.1.2.25.23',
  sysLsnPoolStatTotalZombiePortBlocksDeleted => '1.3.6.1.4.1.3375.2.1.1.2.25.24',
  sysGlobalFtpStat => '1.3.6.1.4.1.3375.2.1.1.2.26',
  sysGlobalFtpStatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.26.1',
  sysGlobalFtpStatLoginRequests => '1.3.6.1.4.1.3375.2.1.1.2.26.2',
  sysGlobalFtpStatDownloadRequests => '1.3.6.1.4.1.3375.2.1.1.2.26.3',
  sysGlobalFtpStatUploadRequests => '1.3.6.1.4.1.3375.2.1.1.2.26.4',
  sysGlobalSipStat => '1.3.6.1.4.1.3375.2.1.1.2.27',
  sysGlobalSipStatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.27.1',
  sysGlobalSipStatRequests => '1.3.6.1.4.1.3375.2.1.1.2.27.2',
  sysGlobalSipStatResponses => '1.3.6.1.4.1.3375.2.1.1.2.27.3',
  sysGlobalSipStatBadmsgs => '1.3.6.1.4.1.3375.2.1.1.2.27.4',
  sysGlobalSipStatDrops => '1.3.6.1.4.1.3375.2.1.1.2.27.5',
  sysGlobalPptpStat => '1.3.6.1.4.1.3375.2.1.1.2.28',
  sysProfilePptpStatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.28.1',
  sysProfilePptpStatStartRequests => '1.3.6.1.4.1.3375.2.1.1.2.28.2',
  sysProfilePptpStatStartReplies => '1.3.6.1.4.1.3375.2.1.1.2.28.3',
  sysProfilePptpStatStopRequests => '1.3.6.1.4.1.3375.2.1.1.2.28.4',
  sysProfilePptpStatStopReplies => '1.3.6.1.4.1.3375.2.1.1.2.28.5',
  sysProfilePptpStatEchoRequests => '1.3.6.1.4.1.3375.2.1.1.2.28.6',
  sysProfilePptpStatEchoReplies => '1.3.6.1.4.1.3375.2.1.1.2.28.7',
  sysProfilePptpStatOutgoingCallRequests => '1.3.6.1.4.1.3375.2.1.1.2.28.8',
  sysProfilePptpStatOutgoingCallReplies => '1.3.6.1.4.1.3375.2.1.1.2.28.9',
  sysProfilePptpStatCallClearRequests => '1.3.6.1.4.1.3375.2.1.1.2.28.10',
  sysProfilePptpStatCallDisconnectNotifies => '1.3.6.1.4.1.3375.2.1.1.2.28.11',
  sysProfilePptpStatWanErrorNotifies => '1.3.6.1.4.1.3375.2.1.1.2.28.12',
  sysProfilePptpStatSetLinkInfo => '1.3.6.1.4.1.3375.2.1.1.2.28.13',
  sysProfilePptpStatActiveCalls => '1.3.6.1.4.1.3375.2.1.1.2.28.14',
  sysProfilePptpStatTotalCalls => '1.3.6.1.4.1.3375.2.1.1.2.28.15',
  sysProfilePptpStatFailedCalls => '1.3.6.1.4.1.3375.2.1.1.2.28.16',
  sysGlobalPcpStat => '1.3.6.1.4.1.3375.2.1.1.2.29',
  sysPcpStatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.29.1',
  sysPcpStatPcpAnnounceRequests => '1.3.6.1.4.1.3375.2.1.1.2.29.2',
  sysPcpStatPcpAnnounceResponsesUcast => '1.3.6.1.4.1.3375.2.1.1.2.29.3',
  sysPcpStatPcpAnnounceResponsesMulticast => '1.3.6.1.4.1.3375.2.1.1.2.29.4',
  sysPcpStatPcpMapRequests => '1.3.6.1.4.1.3375.2.1.1.2.29.5',
  sysPcpStatPcpMapResponses => '1.3.6.1.4.1.3375.2.1.1.2.29.6',
  sysPcpStatPcpPeerRequests => '1.3.6.1.4.1.3375.2.1.1.2.29.7',
  sysPcpStatPcpPeerResponses => '1.3.6.1.4.1.3375.2.1.1.2.29.8',
  sysPcpStatPcpErrorsInvalidRequests => '1.3.6.1.4.1.3375.2.1.1.2.29.9',
  sysPcpStatPcpErrorsUnavailableResource => '1.3.6.1.4.1.3375.2.1.1.2.29.10',
  sysPcpStatPcpErrorsNotAuthorized => '1.3.6.1.4.1.3375.2.1.1.2.29.11',
  sysPcpStatPcpErrorsOther => '1.3.6.1.4.1.3375.2.1.1.2.29.12',
  sysGlobalDnsServerStat => '1.3.6.1.4.1.3375.2.1.1.2.30',
  sysDnsServerStatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.30.1',
  sysDnsServerStatXfrQueries => '1.3.6.1.4.1.3375.2.1.1.2.30.2',
  sysDnsServerStatXfrResponses => '1.3.6.1.4.1.3375.2.1.1.2.30.3',
  sysDnsServerStatXfrNotifies => '1.3.6.1.4.1.3375.2.1.1.2.30.4',
  sysDnsServerStatXfrNotifyFailed => '1.3.6.1.4.1.3375.2.1.1.2.30.5',
  sysGlobalMptcpStat => '1.3.6.1.4.1.3375.2.1.1.2.31',
  sysMptcpStatResetStats => '1.3.6.1.4.1.3375.2.1.1.2.31.1',
  sysMptcpStatAccept => '1.3.6.1.4.1.3375.2.1.1.2.31.2',
  sysMptcpStatAcceptFail => '1.3.6.1.4.1.3375.2.1.1.2.31.3',
  sysMptcpStatJoinFlow => '1.3.6.1.4.1.3375.2.1.1.2.31.4',
  sysMptcpStatJoinFlowFail => '1.3.6.1.4.1.3375.2.1.1.2.31.5',
  sysMptcpStatClose => '1.3.6.1.4.1.3375.2.1.1.2.31.6',
  sysMptcpStatRxtimeout => '1.3.6.1.4.1.3375.2.1.1.2.31.7',
  sysMptcpStatRxfailover => '1.3.6.1.4.1.3375.2.1.1.2.31.8',
  sysMptcpStatAddAddrTx => '1.3.6.1.4.1.3375.2.1.1.2.31.9',
  sysMptcpStatAddAddrRx => '1.3.6.1.4.1.3375.2.1.1.2.31.10',
  sysMptcpStatRemAddrTx => '1.3.6.1.4.1.3375.2.1.1.2.31.11',
  sysMptcpStatRemAddrRx => '1.3.6.1.4.1.3375.2.1.1.2.31.12',
  sysMptcpStatPrioTx => '1.3.6.1.4.1.3375.2.1.1.2.31.13',
  sysMptcpStatPrioRx => '1.3.6.1.4.1.3375.2.1.1.2.31.14',
  sysMptcpStatFailTx => '1.3.6.1.4.1.3375.2.1.1.2.31.15',
  sysMptcpStatFailRx => '1.3.6.1.4.1.3375.2.1.1.2.31.16',
  sysMptcpStatFastcloseTx => '1.3.6.1.4.1.3375.2.1.1.2.31.17',
  sysMptcpStatFastcloseRx => '1.3.6.1.4.1.3375.2.1.1.2.31.18',
  sysNetwork => '1.3.6.1.4.1.3375.2.1.2',
  sysAdmin => '1.3.6.1.4.1.3375.2.1.2.1',
  sysAdminIp => '1.3.6.1.4.1.3375.2.1.2.1.1',
  sysAdminIpNumber => '1.3.6.1.4.1.3375.2.1.2.1.1.1',
  sysAdminIpTable => '1.3.6.1.4.1.3375.2.1.2.1.1.2',
  sysAdminIpEntry => '1.3.6.1.4.1.3375.2.1.2.1.1.2.1',
  sysAdminIpAddrType => '1.3.6.1.4.1.3375.2.1.2.1.1.2.1.1',
  sysAdminIpAddr => '1.3.6.1.4.1.3375.2.1.2.1.1.2.1.2',
  sysAdminIpNetmaskType => '1.3.6.1.4.1.3375.2.1.2.1.1.2.1.3',
  sysAdminIpNetmask => '1.3.6.1.4.1.3375.2.1.2.1.1.2.1.4',
  sysAdminIpName => '1.3.6.1.4.1.3375.2.1.2.1.1.2.1.5',
  sysArpNdp => '1.3.6.1.4.1.3375.2.1.2.2',
  sysArpStaticEntry => '1.3.6.1.4.1.3375.2.1.2.2.1',
  sysArpStaticEntryNumber => '1.3.6.1.4.1.3375.2.1.2.2.1.1',
  sysArpStaticEntryTable => '1.3.6.1.4.1.3375.2.1.2.2.1.2',
  sysArpStaticEntryEntry => '1.3.6.1.4.1.3375.2.1.2.2.1.2.1',
  sysArpStaticEntryIpAddrType => '1.3.6.1.4.1.3375.2.1.2.2.1.2.1.1',
  sysArpStaticEntryIpAddr => '1.3.6.1.4.1.3375.2.1.2.2.1.2.1.2',
  sysArpStaticEntryMacAddr => '1.3.6.1.4.1.3375.2.1.2.2.1.2.1.3',
  sysArpStaticEntryName => '1.3.6.1.4.1.3375.2.1.2.2.1.2.1.4',
  sysDot1dBridge => '1.3.6.1.4.1.3375.2.1.2.3',
  sysDot1dbaseStat => '1.3.6.1.4.1.3375.2.1.2.3.1',
  sysDot1dbaseStatResetStats => '1.3.6.1.4.1.3375.2.1.2.3.1.1',
  sysDot1dbaseStatMacAddr => '1.3.6.1.4.1.3375.2.1.2.3.1.2',
  sysDot1dbaseStatNumPorts => '1.3.6.1.4.1.3375.2.1.2.3.1.3',
  sysDot1dbaseStatType => '1.3.6.1.4.1.3375.2.1.2.3.1.4',
  sysDot1dbaseStatTypeDefinition => 'F5-BIGIP-SYSTEM-MIB::sysDot1dbaseStatType',
  sysDot1dbaseStatPort => '1.3.6.1.4.1.3375.2.1.2.3.2',
  sysDot1dbaseStatPortNumber => '1.3.6.1.4.1.3375.2.1.2.3.2.1',
  sysDot1dbaseStatPortTable => '1.3.6.1.4.1.3375.2.1.2.3.2.2',
  sysDot1dbaseStatPortEntry => '1.3.6.1.4.1.3375.2.1.2.3.2.2.1',
  sysDot1dbaseStatPortIndex => '1.3.6.1.4.1.3375.2.1.2.3.2.2.1.1',
  sysDot1dbaseStatPortPort => '1.3.6.1.4.1.3375.2.1.2.3.2.2.1.2',
  sysDot1dbaseStatPortName => '1.3.6.1.4.1.3375.2.1.2.3.2.2.1.3',
  sysDot1dbaseStatPortDelayExceededDiscards => '1.3.6.1.4.1.3375.2.1.2.3.2.2.1.4',
  sysDot1dbaseStatPortMtuExceededDiscards => '1.3.6.1.4.1.3375.2.1.2.3.2.2.1.5',
  sysInterfaces => '1.3.6.1.4.1.3375.2.1.2.4',
  sysInterface => '1.3.6.1.4.1.3375.2.1.2.4.1',
  sysInterfaceNumber => '1.3.6.1.4.1.3375.2.1.2.4.1.1',
  sysInterfaceTable => '1.3.6.1.4.1.3375.2.1.2.4.1.2',
  sysInterfaceEntry => '1.3.6.1.4.1.3375.2.1.2.4.1.2.1',
  sysInterfaceName => '1.3.6.1.4.1.3375.2.1.2.4.1.2.1.1',
  sysInterfaceMediaMaxSpeed => '1.3.6.1.4.1.3375.2.1.2.4.1.2.1.2',
  sysInterfaceMediaMaxDuplex => '1.3.6.1.4.1.3375.2.1.2.4.1.2.1.3',
  sysInterfaceMediaMaxDuplexDefinition => 'F5-BIGIP-SYSTEM-MIB::sysInterfaceMediaMaxDuplex',
  sysInterfaceMediaActiveSpeed => '1.3.6.1.4.1.3375.2.1.2.4.1.2.1.4',
  sysInterfaceMediaActiveDuplex => '1.3.6.1.4.1.3375.2.1.2.4.1.2.1.5',
  sysInterfaceMediaActiveDuplexDefinition => 'F5-BIGIP-SYSTEM-MIB::sysInterfaceMediaActiveDuplex',
  sysInterfaceMacAddr => '1.3.6.1.4.1.3375.2.1.2.4.1.2.1.6',
  sysInterfaceMtu => '1.3.6.1.4.1.3375.2.1.2.4.1.2.1.7',
  sysInterfaceEnabled => '1.3.6.1.4.1.3375.2.1.2.4.1.2.1.8',
  sysInterfaceEnabledDefinition => 'F5-BIGIP-SYSTEM-MIB::sysInterfaceEnabled',
  sysInterfaceLearnMode => '1.3.6.1.4.1.3375.2.1.2.4.1.2.1.9',
  sysInterfaceLearnModeDefinition => 'F5-BIGIP-SYSTEM-MIB::sysInterfaceLearnMode',
  sysInterfaceFlowCtrlReq => '1.3.6.1.4.1.3375.2.1.2.4.1.2.1.10',
  sysInterfaceFlowCtrlReqDefinition => 'F5-BIGIP-SYSTEM-MIB::sysInterfaceFlowCtrlReq',
  sysInterfaceStpLink => '1.3.6.1.4.1.3375.2.1.2.4.1.2.1.11',
  sysInterfaceStpLinkDefinition => 'F5-BIGIP-SYSTEM-MIB::sysInterfaceStpLink',
  sysInterfaceStpEdge => '1.3.6.1.4.1.3375.2.1.2.4.1.2.1.12',
  sysInterfaceStpEdgeDefinition => 'F5-BIGIP-SYSTEM-MIB::sysInterfaceStpEdge',
  sysInterfaceStpEdgeActive => '1.3.6.1.4.1.3375.2.1.2.4.1.2.1.13',
  sysInterfaceStpEdgeActiveDefinition => 'F5-BIGIP-SYSTEM-MIB::sysInterfaceStpEdgeActive',
  sysInterfaceStpAuto => '1.3.6.1.4.1.3375.2.1.2.4.1.2.1.14',
  sysInterfaceStpAutoDefinition => 'F5-BIGIP-SYSTEM-MIB::sysInterfaceStpAuto',
  sysInterfaceStpEnable => '1.3.6.1.4.1.3375.2.1.2.4.1.2.1.15',
  sysInterfaceStpEnableDefinition => 'F5-BIGIP-SYSTEM-MIB::sysInterfaceStpEnable',
  sysInterfaceStpReset => '1.3.6.1.4.1.3375.2.1.2.4.1.2.1.16',
  sysInterfaceStpResetDefinition => 'F5-BIGIP-SYSTEM-MIB::sysInterfaceStpReset',
  sysInterfaceStatus => '1.3.6.1.4.1.3375.2.1.2.4.1.2.1.17',
  sysInterfaceStatusDefinition => 'F5-BIGIP-SYSTEM-MIB::sysInterfaceStatus',
  sysInterfaceComboPort => '1.3.6.1.4.1.3375.2.1.2.4.1.2.1.18',
  sysInterfaceComboPortDefinition => 'F5-BIGIP-SYSTEM-MIB::sysInterfaceComboPort',
  sysInterfacePreferSfp => '1.3.6.1.4.1.3375.2.1.2.4.1.2.1.19',
  sysInterfacePreferSfpDefinition => 'F5-BIGIP-SYSTEM-MIB::sysInterfacePreferSfp',
  sysInterfaceSfpMedia => '1.3.6.1.4.1.3375.2.1.2.4.1.2.1.20',
  sysInterfaceSfpMediaDefinition => 'F5-BIGIP-SYSTEM-MIB::sysInterfaceSfpMedia',
  sysInterfacePhyMaster => '1.3.6.1.4.1.3375.2.1.2.4.1.2.1.21',
  sysInterfacePhyMasterDefinition => 'F5-BIGIP-SYSTEM-MIB::sysInterfacePhyMaster',
  sysInterfaceMediaOptions => '1.3.6.1.4.1.3375.2.1.2.4.2',
  sysIntfMediaNumber => '1.3.6.1.4.1.3375.2.1.2.4.2.1',
  sysIntfMediaTable => '1.3.6.1.4.1.3375.2.1.2.4.2.2',
  sysIntfMediaEntry => '1.3.6.1.4.1.3375.2.1.2.4.2.2.1',
  sysIntfMediaName => '1.3.6.1.4.1.3375.2.1.2.4.2.2.1.1',
  sysIntfMediaIndex => '1.3.6.1.4.1.3375.2.1.2.4.2.2.1.2',
  sysIntfMediaMediaOption => '1.3.6.1.4.1.3375.2.1.2.4.2.2.1.3',
  sysIntfMediaMediaOptionDefinition => 'F5-BIGIP-SYSTEM-MIB::sysIntfMediaMediaOption',
  sysInterfaceId => '1.3.6.1.4.1.3375.2.1.2.4.3',
  sysIfNumber => '1.3.6.1.4.1.3375.2.1.2.4.3.1',
  sysIfTable => '1.3.6.1.4.1.3375.2.1.2.4.3.2',
  sysIfEntry => '1.3.6.1.4.1.3375.2.1.2.4.3.2.1',
  sysIfIndex => '1.3.6.1.4.1.3375.2.1.2.4.3.2.1.1',
  sysIfName => '1.3.6.1.4.1.3375.2.1.2.4.3.2.1.2',
  sysInterfaceStat => '1.3.6.1.4.1.3375.2.1.2.4.4',
  sysInterfaceStatResetStats => '1.3.6.1.4.1.3375.2.1.2.4.4.1',
  sysInterfaceStatNumber => '1.3.6.1.4.1.3375.2.1.2.4.4.2',
  sysInterfaceStatTable => '1.3.6.1.4.1.3375.2.1.2.4.4.3',
  sysInterfaceStatEntry => '1.3.6.1.4.1.3375.2.1.2.4.4.3.1',
  sysInterfaceStatName => '1.3.6.1.4.1.3375.2.1.2.4.4.3.1.1',
  sysInterfaceStatPktsIn => '1.3.6.1.4.1.3375.2.1.2.4.4.3.1.2',
  sysInterfaceStatBytesIn => '1.3.6.1.4.1.3375.2.1.2.4.4.3.1.3',
  sysInterfaceStatPktsOut => '1.3.6.1.4.1.3375.2.1.2.4.4.3.1.4',
  sysInterfaceStatBytesOut => '1.3.6.1.4.1.3375.2.1.2.4.4.3.1.5',
  sysInterfaceStatMcastIn => '1.3.6.1.4.1.3375.2.1.2.4.4.3.1.6',
  sysInterfaceStatMcastOut => '1.3.6.1.4.1.3375.2.1.2.4.4.3.1.7',
  sysInterfaceStatErrorsIn => '1.3.6.1.4.1.3375.2.1.2.4.4.3.1.8',
  sysInterfaceStatErrorsOut => '1.3.6.1.4.1.3375.2.1.2.4.4.3.1.9',
  sysInterfaceStatDropsIn => '1.3.6.1.4.1.3375.2.1.2.4.4.3.1.10',
  sysInterfaceStatDropsOut => '1.3.6.1.4.1.3375.2.1.2.4.4.3.1.11',
  sysInterfaceStatCollisions => '1.3.6.1.4.1.3375.2.1.2.4.4.3.1.12',
  sysInterfaceStatQqIn => '1.3.6.1.4.1.3375.2.1.2.4.4.3.1.13',
  sysInterfaceStatQqOut => '1.3.6.1.4.1.3375.2.1.2.4.4.3.1.14',
  sysInterfaceStatPauseActive => '1.3.6.1.4.1.3375.2.1.2.4.4.3.1.15',
  sysInterfaceStatPauseActiveDefinition => 'F5-BIGIP-SYSTEM-MIB::sysInterfaceStatPauseActive',
  sysIfxStat => '1.3.6.1.4.1.3375.2.1.2.4.5',
  sysIfxStatResetStats => '1.3.6.1.4.1.3375.2.1.2.4.5.1',
  sysIfxStatNumber => '1.3.6.1.4.1.3375.2.1.2.4.5.2',
  sysIfxStatTable => '1.3.6.1.4.1.3375.2.1.2.4.5.3',
  sysIfxStatEntry => '1.3.6.1.4.1.3375.2.1.2.4.5.3.1',
  sysIfxStatName => '1.3.6.1.4.1.3375.2.1.2.4.5.3.1.1',
  sysIfxStatInMulticastPkts => '1.3.6.1.4.1.3375.2.1.2.4.5.3.1.2',
  sysIfxStatInBroadcastPkts => '1.3.6.1.4.1.3375.2.1.2.4.5.3.1.3',
  sysIfxStatOutMulticastPkts => '1.3.6.1.4.1.3375.2.1.2.4.5.3.1.4',
  sysIfxStatOutBroadcastPkts => '1.3.6.1.4.1.3375.2.1.2.4.5.3.1.5',
  sysIfxStatHcInOctets => '1.3.6.1.4.1.3375.2.1.2.4.5.3.1.6',
  sysIfxStatHcInUcastPkts => '1.3.6.1.4.1.3375.2.1.2.4.5.3.1.7',
  sysIfxStatHcInMulticastPkts => '1.3.6.1.4.1.3375.2.1.2.4.5.3.1.8',
  sysIfxStatHcInBroadcastPkts => '1.3.6.1.4.1.3375.2.1.2.4.5.3.1.9',
  sysIfxStatHcOutOctets => '1.3.6.1.4.1.3375.2.1.2.4.5.3.1.10',
  sysIfxStatHcOutUcastPkts => '1.3.6.1.4.1.3375.2.1.2.4.5.3.1.11',
  sysIfxStatHcOutMulticastPkts => '1.3.6.1.4.1.3375.2.1.2.4.5.3.1.12',
  sysIfxStatHcOutBroadcastPkts => '1.3.6.1.4.1.3375.2.1.2.4.5.3.1.13',
  sysIfxStatHighSpeed => '1.3.6.1.4.1.3375.2.1.2.4.5.3.1.14',
  sysIfxStatConnectorPresent => '1.3.6.1.4.1.3375.2.1.2.4.5.3.1.15',
  sysIfxStatCounterDiscontinuityTime => '1.3.6.1.4.1.3375.2.1.2.4.5.3.1.16',
  sysIfxStatAlias => '1.3.6.1.4.1.3375.2.1.2.4.5.3.1.17',
  sysInterfaceMediaSfp => '1.3.6.1.4.1.3375.2.1.2.4.6',
  sysIntfMediaSfpNumber => '1.3.6.1.4.1.3375.2.1.2.4.6.1',
  sysIntfMediaSfpTable => '1.3.6.1.4.1.3375.2.1.2.4.6.2',
  sysIntfMediaSfpEntry => '1.3.6.1.4.1.3375.2.1.2.4.6.2.1',
  sysIntfMediaSfpName => '1.3.6.1.4.1.3375.2.1.2.4.6.2.1.1',
  sysIntfMediaSfpIndex => '1.3.6.1.4.1.3375.2.1.2.4.6.2.1.2',
  sysIntfMediaSfpType => '1.3.6.1.4.1.3375.2.1.2.4.6.2.1.3',
  sysIntfMediaSfpTypeDefinition => 'F5-BIGIP-SYSTEM-MIB::sysIntfMediaSfpType',
  sysL2 => '1.3.6.1.4.1.3375.2.1.2.5',
  sysL2Forward => '1.3.6.1.4.1.3375.2.1.2.5.1',
  sysL2ForwardNumber => '1.3.6.1.4.1.3375.2.1.2.5.1.1',
  sysL2ForwardTable => '1.3.6.1.4.1.3375.2.1.2.5.1.2',
  sysL2ForwardEntry => '1.3.6.1.4.1.3375.2.1.2.5.1.2.1',
  sysL2ForwardVlanName => '1.3.6.1.4.1.3375.2.1.2.5.1.2.1.1',
  sysL2ForwardMacAddr => '1.3.6.1.4.1.3375.2.1.2.5.1.2.1.2',
  sysL2ForwardIfname => '1.3.6.1.4.1.3375.2.1.2.5.1.2.1.3',
  sysL2ForwardIftype => '1.3.6.1.4.1.3375.2.1.2.5.1.2.1.4',
  sysL2ForwardIftypeDefinition => 'F5-BIGIP-SYSTEM-MIB::sysL2ForwardIftype',
  sysL2ForwardDynamic => '1.3.6.1.4.1.3375.2.1.2.5.1.2.1.5',
  sysL2ForwardDynamicDefinition => 'F5-BIGIP-SYSTEM-MIB::sysL2ForwardDynamic',
  sysL2ForwardStat => '1.3.6.1.4.1.3375.2.1.2.5.2',
  sysL2ForwardStatNumber => '1.3.6.1.4.1.3375.2.1.2.5.2.1',
  sysL2ForwardStatTable => '1.3.6.1.4.1.3375.2.1.2.5.2.2',
  sysL2ForwardStatEntry => '1.3.6.1.4.1.3375.2.1.2.5.2.2.1',
  sysL2ForwardStatVlanName => '1.3.6.1.4.1.3375.2.1.2.5.2.2.1.1',
  sysL2ForwardStatMacAddr => '1.3.6.1.4.1.3375.2.1.2.5.2.2.1.2',
  sysL2ForwardStatIfname => '1.3.6.1.4.1.3375.2.1.2.5.2.2.1.3',
  sysL2ForwardStatIftype => '1.3.6.1.4.1.3375.2.1.2.5.2.2.1.4',
  sysL2ForwardStatIftypeDefinition => 'F5-BIGIP-SYSTEM-MIB::sysL2ForwardStatIftype',
  sysL2ForwardStatDynamic => '1.3.6.1.4.1.3375.2.1.2.5.2.2.1.5',
  sysL2ForwardStatDynamicDefinition => 'F5-BIGIP-SYSTEM-MIB::sysL2ForwardStatDynamic',
  sysL2ForwardAttr => '1.3.6.1.4.1.3375.2.1.2.5.3',
  sysL2ForwardAttrVlan => '1.3.6.1.4.1.3375.2.1.2.5.3.1',
  sysPacketFilters => '1.3.6.1.4.1.3375.2.1.2.6',
  sysPacketFilter => '1.3.6.1.4.1.3375.2.1.2.6.1',
  sysPacketFilterNumber => '1.3.6.1.4.1.3375.2.1.2.6.1.1',
  sysPacketFilterTable => '1.3.6.1.4.1.3375.2.1.2.6.1.2',
  sysPacketFilterEntry => '1.3.6.1.4.1.3375.2.1.2.6.1.2.1',
  sysPacketFilterRname => '1.3.6.1.4.1.3375.2.1.2.6.1.2.1.1',
  sysPacketFilterOrder => '1.3.6.1.4.1.3375.2.1.2.6.1.2.1.2',
  sysPacketFilterAction => '1.3.6.1.4.1.3375.2.1.2.6.1.2.1.3',
  sysPacketFilterActionDefinition => 'F5-BIGIP-SYSTEM-MIB::sysPacketFilterAction',
  sysPacketFilterVname => '1.3.6.1.4.1.3375.2.1.2.6.1.2.1.4',
  sysPacketFilterLog => '1.3.6.1.4.1.3375.2.1.2.6.1.2.1.5',
  sysPacketFilterLogDefinition => 'F5-BIGIP-SYSTEM-MIB::sysPacketFilterLog',
  sysPacketFilterRclass => '1.3.6.1.4.1.3375.2.1.2.6.1.2.1.6',
  sysPacketFilterExpression => '1.3.6.1.4.1.3375.2.1.2.6.1.2.1.7',
  sysPacketFilterAddress => '1.3.6.1.4.1.3375.2.1.2.6.2',
  sysPacketFilterAddrNumber => '1.3.6.1.4.1.3375.2.1.2.6.2.1',
  sysPacketFilterAddrTable => '1.3.6.1.4.1.3375.2.1.2.6.2.2',
  sysPacketFilterAddrEntry => '1.3.6.1.4.1.3375.2.1.2.6.2.2.1',
  sysPacketFilterAddrIndex => '1.3.6.1.4.1.3375.2.1.2.6.2.2.1.1',
  sysPacketFilterAddrIpType => '1.3.6.1.4.1.3375.2.1.2.6.2.2.1.2',
  sysPacketFilterAddrIp => '1.3.6.1.4.1.3375.2.1.2.6.2.2.1.3',
  sysPacketFilterAddrRname => '1.3.6.1.4.1.3375.2.1.2.6.2.2.1.4',
  sysPacketFilterVlan => '1.3.6.1.4.1.3375.2.1.2.6.3',
  sysPacketFilterVlanNumber => '1.3.6.1.4.1.3375.2.1.2.6.3.1',
  sysPacketFilterVlanTable => '1.3.6.1.4.1.3375.2.1.2.6.3.2',
  sysPacketFilterVlanEntry => '1.3.6.1.4.1.3375.2.1.2.6.3.2.1',
  sysPacketFilterVlanIndex => '1.3.6.1.4.1.3375.2.1.2.6.3.2.1.1',
  sysPacketFilterVlanName => '1.3.6.1.4.1.3375.2.1.2.6.3.2.1.2',
  sysPacketFilterVlanRname => '1.3.6.1.4.1.3375.2.1.2.6.3.2.1.3',
  sysPacketFilterMac => '1.3.6.1.4.1.3375.2.1.2.6.4',
  sysPacketFilterMacNumber => '1.3.6.1.4.1.3375.2.1.2.6.4.1',
  sysPacketFilterMacTable => '1.3.6.1.4.1.3375.2.1.2.6.4.2',
  sysPacketFilterMacEntry => '1.3.6.1.4.1.3375.2.1.2.6.4.2.1',
  sysPacketFilterMacIndex => '1.3.6.1.4.1.3375.2.1.2.6.4.2.1.1',
  sysPacketFilterMacAddr => '1.3.6.1.4.1.3375.2.1.2.6.4.2.1.2',
  sysPacketFilterMacRname => '1.3.6.1.4.1.3375.2.1.2.6.4.2.1.3',
  sysPacketFilterStat => '1.3.6.1.4.1.3375.2.1.2.6.5',
  sysPacketFilterStatResetStats => '1.3.6.1.4.1.3375.2.1.2.6.5.1',
  sysPacketFilterStatNumber => '1.3.6.1.4.1.3375.2.1.2.6.5.2',
  sysPacketFilterStatTable => '1.3.6.1.4.1.3375.2.1.2.6.5.3',
  sysPacketFilterStatEntry => '1.3.6.1.4.1.3375.2.1.2.6.5.3.1',
  sysPacketFilterStatRname => '1.3.6.1.4.1.3375.2.1.2.6.5.3.1.1',
  sysPacketFilterStatHits => '1.3.6.1.4.1.3375.2.1.2.6.5.3.1.2',
  sysRoute => '1.3.6.1.4.1.3375.2.1.2.7',
  sysRouteMgmtEntry => '1.3.6.1.4.1.3375.2.1.2.7.1',
  sysRouteMgmtEntryNumber => '1.3.6.1.4.1.3375.2.1.2.7.1.1',
  sysRouteMgmtEntryTable => '1.3.6.1.4.1.3375.2.1.2.7.1.2',
  sysRouteMgmtEntryEntry => '1.3.6.1.4.1.3375.2.1.2.7.1.2.1',
  sysRouteMgmtEntryDestType => '1.3.6.1.4.1.3375.2.1.2.7.1.2.1.1',
  sysRouteMgmtEntryDest => '1.3.6.1.4.1.3375.2.1.2.7.1.2.1.2',
  sysRouteMgmtEntryNetmaskType => '1.3.6.1.4.1.3375.2.1.2.7.1.2.1.3',
  sysRouteMgmtEntryNetmask => '1.3.6.1.4.1.3375.2.1.2.7.1.2.1.4',
  sysRouteMgmtEntryType => '1.3.6.1.4.1.3375.2.1.2.7.1.2.1.5',
  sysRouteMgmtEntryTypeDefinition => 'F5-BIGIP-SYSTEM-MIB::sysRouteMgmtEntryType',
  sysRouteMgmtEntryGatewayType => '1.3.6.1.4.1.3375.2.1.2.7.1.2.1.6',
  sysRouteMgmtEntryGateway => '1.3.6.1.4.1.3375.2.1.2.7.1.2.1.7',
  sysRouteMgmtEntryMtu => '1.3.6.1.4.1.3375.2.1.2.7.1.2.1.8',
  sysRouteMgmtEntryName => '1.3.6.1.4.1.3375.2.1.2.7.1.2.1.9',
  sysRouteStaticEntry => '1.3.6.1.4.1.3375.2.1.2.7.2',
  sysRouteStaticEntryNumber => '1.3.6.1.4.1.3375.2.1.2.7.2.1',
  sysRouteStaticEntryTable => '1.3.6.1.4.1.3375.2.1.2.7.2.2',
  sysRouteStaticEntryEntry => '1.3.6.1.4.1.3375.2.1.2.7.2.2.1',
  sysRouteStaticEntryDestType => '1.3.6.1.4.1.3375.2.1.2.7.2.2.1.1',
  sysRouteStaticEntryDest => '1.3.6.1.4.1.3375.2.1.2.7.2.2.1.2',
  sysRouteStaticEntryNetmaskType => '1.3.6.1.4.1.3375.2.1.2.7.2.2.1.3',
  sysRouteStaticEntryNetmask => '1.3.6.1.4.1.3375.2.1.2.7.2.2.1.4',
  sysRouteStaticEntryType => '1.3.6.1.4.1.3375.2.1.2.7.2.2.1.5',
  sysRouteStaticEntryTypeDefinition => 'F5-BIGIP-SYSTEM-MIB::sysRouteStaticEntryType',
  sysRouteStaticEntryVlanName => '1.3.6.1.4.1.3375.2.1.2.7.2.2.1.6',
  sysRouteStaticEntryGatewayType => '1.3.6.1.4.1.3375.2.1.2.7.2.2.1.7',
  sysRouteStaticEntryGateway => '1.3.6.1.4.1.3375.2.1.2.7.2.2.1.8',
  sysRouteStaticEntryPoolName => '1.3.6.1.4.1.3375.2.1.2.7.2.2.1.9',
  sysRouteStaticEntryMtu => '1.3.6.1.4.1.3375.2.1.2.7.2.2.1.10',
  sysRouteStaticEntryName => '1.3.6.1.4.1.3375.2.1.2.7.2.2.1.11',
  sysSelfIps => '1.3.6.1.4.1.3375.2.1.2.8',
  sysSelfIp => '1.3.6.1.4.1.3375.2.1.2.8.1',
  sysSelfIpNumber => '1.3.6.1.4.1.3375.2.1.2.8.1.1',
  sysSelfIpTable => '1.3.6.1.4.1.3375.2.1.2.8.1.2',
  sysSelfIpEntry => '1.3.6.1.4.1.3375.2.1.2.8.1.2.1',
  sysSelfIpAddrType => '1.3.6.1.4.1.3375.2.1.2.8.1.2.1.1',
  sysSelfIpAddr => '1.3.6.1.4.1.3375.2.1.2.8.1.2.1.2',
  sysSelfIpNetmaskType => '1.3.6.1.4.1.3375.2.1.2.8.1.2.1.3',
  sysSelfIpNetmask => '1.3.6.1.4.1.3375.2.1.2.8.1.2.1.4',
  sysSelfIpUnitId => '1.3.6.1.4.1.3375.2.1.2.8.1.2.1.5',
  sysSelfIpIsFloating => '1.3.6.1.4.1.3375.2.1.2.8.1.2.1.6',
  sysSelfIpIsFloatingDefinition => 'F5-BIGIP-SYSTEM-MIB::sysSelfIpIsFloating',
  sysSelfIpVlanName => '1.3.6.1.4.1.3375.2.1.2.8.1.2.1.7',
  sysSelfIpName => '1.3.6.1.4.1.3375.2.1.2.8.1.2.1.8',
  sysSelfPorts => '1.3.6.1.4.1.3375.2.1.2.9',
  sysSelfPort => '1.3.6.1.4.1.3375.2.1.2.9.1',
  sysSelfPortNumber => '1.3.6.1.4.1.3375.2.1.2.9.1.1',
  sysSelfPortTable => '1.3.6.1.4.1.3375.2.1.2.9.1.2',
  sysSelfPortEntry => '1.3.6.1.4.1.3375.2.1.2.9.1.2.1',
  sysSelfPortAddrType => '1.3.6.1.4.1.3375.2.1.2.9.1.2.1.1',
  sysSelfPortAddr => '1.3.6.1.4.1.3375.2.1.2.9.1.2.1.2',
  sysSelfPortProtocol => '1.3.6.1.4.1.3375.2.1.2.9.1.2.1.3',
  sysSelfPortPort => '1.3.6.1.4.1.3375.2.1.2.9.1.2.1.4',
  sysSelfPortSelfName => '1.3.6.1.4.1.3375.2.1.2.9.1.2.1.5',
  sysSelfPortDefault => '1.3.6.1.4.1.3375.2.1.2.9.2',
  sysSelfPortDefNumber => '1.3.6.1.4.1.3375.2.1.2.9.2.1',
  sysSelfPortDefTable => '1.3.6.1.4.1.3375.2.1.2.9.2.2',
  sysSelfPortDefEntry => '1.3.6.1.4.1.3375.2.1.2.9.2.2.1',
  sysSelfPortDefProtocol => '1.3.6.1.4.1.3375.2.1.2.9.2.2.1.1',
  sysSelfPortDefPort => '1.3.6.1.4.1.3375.2.1.2.9.2.2.1.2',
  sysSelfPortDefAllowName => '1.3.6.1.4.1.3375.2.1.2.9.2.2.1.3',
  sysSpanningTree => '1.3.6.1.4.1.3375.2.1.2.10',
  sysStp => '1.3.6.1.4.1.3375.2.1.2.10.1',
  sysStpNumber => '1.3.6.1.4.1.3375.2.1.2.10.1.1',
  sysStpTable => '1.3.6.1.4.1.3375.2.1.2.10.1.2',
  sysStpEntry => '1.3.6.1.4.1.3375.2.1.2.10.1.2.1',
  sysStpInstanceId => '1.3.6.1.4.1.3375.2.1.2.10.1.2.1.1',
  sysStpPriority => '1.3.6.1.4.1.3375.2.1.2.10.1.2.1.2',
  sysStpRootAddr => '1.3.6.1.4.1.3375.2.1.2.10.1.2.1.3',
  sysStpRegionalRootAddr => '1.3.6.1.4.1.3375.2.1.2.10.1.2.1.4',
  sysStpName => '1.3.6.1.4.1.3375.2.1.2.10.1.2.1.5',
  sysStpGlobals => '1.3.6.1.4.1.3375.2.1.2.10.2',
  sysStpGlobalsMode => '1.3.6.1.4.1.3375.2.1.2.10.2.1',
  sysStpGlobalsModeDefinition => 'F5-BIGIP-SYSTEM-MIB::sysStpGlobalsMode',
  sysStpGlobalsFwdDelay => '1.3.6.1.4.1.3375.2.1.2.10.2.2',
  sysStpGlobalsHelloTime => '1.3.6.1.4.1.3375.2.1.2.10.2.3',
  sysStpGlobalsMaxAge => '1.3.6.1.4.1.3375.2.1.2.10.2.4',
  sysStpGlobalsTransmitHold => '1.3.6.1.4.1.3375.2.1.2.10.2.5',
  sysStpGlobalsMaxHops => '1.3.6.1.4.1.3375.2.1.2.10.2.6',
  sysStpGlobalsIdentifier => '1.3.6.1.4.1.3375.2.1.2.10.2.7',
  sysStpGlobalsRevision => '1.3.6.1.4.1.3375.2.1.2.10.2.8',
  sysStpInterfaceMbr => '1.3.6.1.4.1.3375.2.1.2.10.3',
  sysStpInterfaceMbrNumber => '1.3.6.1.4.1.3375.2.1.2.10.3.1',
  sysStpInterfaceMbrTable => '1.3.6.1.4.1.3375.2.1.2.10.3.2',
  sysStpInterfaceMbrEntry => '1.3.6.1.4.1.3375.2.1.2.10.3.2.1',
  sysStpInterfaceMbrInstanceId => '1.3.6.1.4.1.3375.2.1.2.10.3.2.1.1',
  sysStpInterfaceMbrName => '1.3.6.1.4.1.3375.2.1.2.10.3.2.1.2',
  sysStpInterfaceMbrType => '1.3.6.1.4.1.3375.2.1.2.10.3.2.1.3',
  sysStpInterfaceMbrTypeDefinition => 'F5-BIGIP-SYSTEM-MIB::sysStpInterfaceMbrType',
  sysStpInterfaceMbrStateActive => '1.3.6.1.4.1.3375.2.1.2.10.3.2.1.4',
  sysStpInterfaceMbrStateActiveDefinition => 'F5-BIGIP-SYSTEM-MIB::sysStpInterfaceMbrStateActive',
  sysStpInterfaceMbrRole => '1.3.6.1.4.1.3375.2.1.2.10.3.2.1.5',
  sysStpInterfaceMbrRoleDefinition => 'F5-BIGIP-SYSTEM-MIB::sysStpInterfaceMbrRole',
  sysStpInterfaceMbrPriority => '1.3.6.1.4.1.3375.2.1.2.10.3.2.1.6',
  sysStpInterfaceMbrPathCost => '1.3.6.1.4.1.3375.2.1.2.10.3.2.1.7',
  sysStpInterfaceMbrStateRequested => '1.3.6.1.4.1.3375.2.1.2.10.3.2.1.8',
  sysStpInterfaceMbrStateRequestedDefinition => 'F5-BIGIP-SYSTEM-MIB::sysStpInterfaceMbrStateRequested',
  sysStpInterfaceMbrInstanceName => '1.3.6.1.4.1.3375.2.1.2.10.3.2.1.9',
  sysStpVlanMbr => '1.3.6.1.4.1.3375.2.1.2.10.4',
  sysStpVlanMbrNumber => '1.3.6.1.4.1.3375.2.1.2.10.4.1',
  sysStpVlanMbrTable => '1.3.6.1.4.1.3375.2.1.2.10.4.2',
  sysStpVlanMbrEntry => '1.3.6.1.4.1.3375.2.1.2.10.4.2.1',
  sysStpVlanMbrInstanceId => '1.3.6.1.4.1.3375.2.1.2.10.4.2.1.1',
  sysStpVlanMbrVlanVname => '1.3.6.1.4.1.3375.2.1.2.10.4.2.1.2',
  sysStpVlanMbrStpName => '1.3.6.1.4.1.3375.2.1.2.10.4.2.1.3',
  sysStpBridgeStat => '1.3.6.1.4.1.3375.2.1.2.10.5',
  sysStpBridgeStatResetStats => '1.3.6.1.4.1.3375.2.1.2.10.5.1',
  sysStpBridgeStatMode => '1.3.6.1.4.1.3375.2.1.2.10.5.2',
  sysStpBridgeStatModeDefinition => 'F5-BIGIP-SYSTEM-MIB::sysStpBridgeStatMode',
  sysStpBridgeStatFwdDelay => '1.3.6.1.4.1.3375.2.1.2.10.5.3',
  sysStpBridgeStatHelloTime => '1.3.6.1.4.1.3375.2.1.2.10.5.4',
  sysStpBridgeStatMaxAge => '1.3.6.1.4.1.3375.2.1.2.10.5.5',
  sysStpBridgeStatBridgeFwdDelay => '1.3.6.1.4.1.3375.2.1.2.10.5.6',
  sysStpBridgeStatBridgeHelloTime => '1.3.6.1.4.1.3375.2.1.2.10.5.7',
  sysStpBridgeStatBridgeMaxAge => '1.3.6.1.4.1.3375.2.1.2.10.5.8',
  sysStpBridgeStatTransmitHold => '1.3.6.1.4.1.3375.2.1.2.10.5.9',
  sysStpBridgeStatPathCost => '1.3.6.1.4.1.3375.2.1.2.10.5.10',
  sysStpBridgeStatRootPrio => '1.3.6.1.4.1.3375.2.1.2.10.5.11',
  sysStpBridgeStatRootAddr => '1.3.6.1.4.1.3375.2.1.2.10.5.12',
  sysStpBridgeTreeStat => '1.3.6.1.4.1.3375.2.1.2.10.6',
  sysStpBridgeTreeStatNumber => '1.3.6.1.4.1.3375.2.1.2.10.6.1',
  sysStpBridgeTreeStatTable => '1.3.6.1.4.1.3375.2.1.2.10.6.2',
  sysStpBridgeTreeStatEntry => '1.3.6.1.4.1.3375.2.1.2.10.6.2.1',
  sysStpBridgeTreeStatIndex => '1.3.6.1.4.1.3375.2.1.2.10.6.2.1.1',
  sysStpBridgeTreeStatInstanceId => '1.3.6.1.4.1.3375.2.1.2.10.6.2.1.2',
  sysStpBridgeTreeStatPriority => '1.3.6.1.4.1.3375.2.1.2.10.6.2.1.3',
  sysStpBridgeTreeStatLastTc => '1.3.6.1.4.1.3375.2.1.2.10.6.2.1.4',
  sysStpBridgeTreeStatTcCount => '1.3.6.1.4.1.3375.2.1.2.10.6.2.1.5',
  sysStpBridgeTreeStatDesigRootPrio => '1.3.6.1.4.1.3375.2.1.2.10.6.2.1.6',
  sysStpBridgeTreeStatDesigRootAddr => '1.3.6.1.4.1.3375.2.1.2.10.6.2.1.7',
  sysStpBridgeTreeStatInternalPathCost => '1.3.6.1.4.1.3375.2.1.2.10.6.2.1.8',
  sysStpBridgeTreeStatRootPort => '1.3.6.1.4.1.3375.2.1.2.10.6.2.1.9',
  sysStpBridgeTreeStatRootPortNum => '1.3.6.1.4.1.3375.2.1.2.10.6.2.1.10',
  sysStpBridgeTreeStatInstanceName => '1.3.6.1.4.1.3375.2.1.2.10.6.2.1.11',
  sysStpInterfaceStat => '1.3.6.1.4.1.3375.2.1.2.10.7',
  sysStpInterfaceStatResetStats => '1.3.6.1.4.1.3375.2.1.2.10.7.1',
  sysStpInterfaceStatNumber => '1.3.6.1.4.1.3375.2.1.2.10.7.2',
  sysStpInterfaceStatTable => '1.3.6.1.4.1.3375.2.1.2.10.7.3',
  sysStpInterfaceStatEntry => '1.3.6.1.4.1.3375.2.1.2.10.7.3.1',
  sysStpInterfaceStatName => '1.3.6.1.4.1.3375.2.1.2.10.7.3.1.1',
  sysStpInterfaceStatPortNum => '1.3.6.1.4.1.3375.2.1.2.10.7.3.1.2',
  sysStpInterfaceStatStpEnable => '1.3.6.1.4.1.3375.2.1.2.10.7.3.1.3',
  sysStpInterfaceStatStpEnableDefinition => 'F5-BIGIP-SYSTEM-MIB::sysStpInterfaceStatStpEnable',
  sysStpInterfaceStatPathCost => '1.3.6.1.4.1.3375.2.1.2.10.7.3.1.4',
  sysStpInterfaceStatRootCost => '1.3.6.1.4.1.3375.2.1.2.10.7.3.1.5',
  sysStpInterfaceStatRootPrio => '1.3.6.1.4.1.3375.2.1.2.10.7.3.1.6',
  sysStpInterfaceStatRootAddr => '1.3.6.1.4.1.3375.2.1.2.10.7.3.1.7',
  sysStpInterfaceTreeStat => '1.3.6.1.4.1.3375.2.1.2.10.8',
  sysStpInterfaceTreeStatNumber => '1.3.6.1.4.1.3375.2.1.2.10.8.1',
  sysStpInterfaceTreeStatTable => '1.3.6.1.4.1.3375.2.1.2.10.8.2',
  sysStpInterfaceTreeStatEntry => '1.3.6.1.4.1.3375.2.1.2.10.8.2.1',
  sysStpInterfaceTreeStatName => '1.3.6.1.4.1.3375.2.1.2.10.8.2.1.1',
  sysStpInterfaceTreeStatIndex => '1.3.6.1.4.1.3375.2.1.2.10.8.2.1.2',
  sysStpInterfaceTreeStatInstanceId => '1.3.6.1.4.1.3375.2.1.2.10.8.2.1.3',
  sysStpInterfaceTreeStatPriority => '1.3.6.1.4.1.3375.2.1.2.10.8.2.1.4',
  sysStpInterfaceTreeStatState => '1.3.6.1.4.1.3375.2.1.2.10.8.2.1.5',
  sysStpInterfaceTreeStatStateDefinition => 'F5-BIGIP-SYSTEM-MIB::sysStpInterfaceTreeStatState',
  sysStpInterfaceTreeStatStatRole => '1.3.6.1.4.1.3375.2.1.2.10.8.2.1.6',
  sysStpInterfaceTreeStatStatRoleDefinition => 'F5-BIGIP-SYSTEM-MIB::sysStpInterfaceTreeStatStatRole',
  sysStpInterfaceTreeStatDesigRootPrio => '1.3.6.1.4.1.3375.2.1.2.10.8.2.1.7',
  sysStpInterfaceTreeStatDesigRootAddr => '1.3.6.1.4.1.3375.2.1.2.10.8.2.1.8',
  sysStpInterfaceTreeStatDesigCost => '1.3.6.1.4.1.3375.2.1.2.10.8.2.1.9',
  sysStpInterfaceTreeStatDesigBridgePrio => '1.3.6.1.4.1.3375.2.1.2.10.8.2.1.10',
  sysStpInterfaceTreeStatDesigBridgeAddr => '1.3.6.1.4.1.3375.2.1.2.10.8.2.1.11',
  sysStpInterfaceTreeStatDesigPortNum => '1.3.6.1.4.1.3375.2.1.2.10.8.2.1.12',
  sysStpInterfaceTreeStatDesigPortPriority => '1.3.6.1.4.1.3375.2.1.2.10.8.2.1.13',
  sysStpInterfaceTreeStatInternalPathCost => '1.3.6.1.4.1.3375.2.1.2.10.8.2.1.14',
  sysStpInterfaceTreeStatFwdTransitions => '1.3.6.1.4.1.3375.2.1.2.10.8.2.1.15',
  sysStpGlobals2 => '1.3.6.1.4.1.3375.2.1.2.10.9',
  sysStpGlobals2Number => '1.3.6.1.4.1.3375.2.1.2.10.9.1',
  sysStpGlobals2Table => '1.3.6.1.4.1.3375.2.1.2.10.9.2',
  sysStpGlobals2Entry => '1.3.6.1.4.1.3375.2.1.2.10.9.2.1',
  sysStpGlobals2Mode => '1.3.6.1.4.1.3375.2.1.2.10.9.2.1.1',
  sysStpGlobals2ModeDefinition => 'F5-BIGIP-SYSTEM-MIB::sysStpGlobals2Mode',
  sysStpGlobals2FwdDelay => '1.3.6.1.4.1.3375.2.1.2.10.9.2.1.2',
  sysStpGlobals2HelloTime => '1.3.6.1.4.1.3375.2.1.2.10.9.2.1.3',
  sysStpGlobals2MaxAge => '1.3.6.1.4.1.3375.2.1.2.10.9.2.1.4',
  sysStpGlobals2TransmitHold => '1.3.6.1.4.1.3375.2.1.2.10.9.2.1.5',
  sysStpGlobals2MaxHops => '1.3.6.1.4.1.3375.2.1.2.10.9.2.1.6',
  sysStpGlobals2Identifier => '1.3.6.1.4.1.3375.2.1.2.10.9.2.1.7',
  sysStpGlobals2Revision => '1.3.6.1.4.1.3375.2.1.2.10.9.2.1.8',
  sysStpGlobals2Name => '1.3.6.1.4.1.3375.2.1.2.10.9.2.1.9',
  sysTransmission => '1.3.6.1.4.1.3375.2.1.2.11',
  sysDot3Stat => '1.3.6.1.4.1.3375.2.1.2.11.1',
  sysDot3StatResetStats => '1.3.6.1.4.1.3375.2.1.2.11.1.1',
  sysDot3StatNumber => '1.3.6.1.4.1.3375.2.1.2.11.1.2',
  sysDot3StatTable => '1.3.6.1.4.1.3375.2.1.2.11.1.3',
  sysDot3StatEntry => '1.3.6.1.4.1.3375.2.1.2.11.1.3.1',
  sysDot3StatName => '1.3.6.1.4.1.3375.2.1.2.11.1.3.1.1',
  sysDot3StatAlignmentErrors => '1.3.6.1.4.1.3375.2.1.2.11.1.3.1.2',
  sysDot3StatFcsErrors => '1.3.6.1.4.1.3375.2.1.2.11.1.3.1.3',
  sysDot3StatSingleCollisionFrames => '1.3.6.1.4.1.3375.2.1.2.11.1.3.1.4',
  sysDot3StatMultiCollisionFrames => '1.3.6.1.4.1.3375.2.1.2.11.1.3.1.5',
  sysDot3StatSqetestErrors => '1.3.6.1.4.1.3375.2.1.2.11.1.3.1.6',
  sysDot3StatDeferredTx => '1.3.6.1.4.1.3375.2.1.2.11.1.3.1.7',
  sysDot3StatLateCollisions => '1.3.6.1.4.1.3375.2.1.2.11.1.3.1.8',
  sysDot3StatExcessiveCollisions => '1.3.6.1.4.1.3375.2.1.2.11.1.3.1.9',
  sysDot3StatIntmacTxErrors => '1.3.6.1.4.1.3375.2.1.2.11.1.3.1.10',
  sysDot3StatCarrierSenseErrors => '1.3.6.1.4.1.3375.2.1.2.11.1.3.1.11',
  sysDot3StatFrameTooLongs => '1.3.6.1.4.1.3375.2.1.2.11.1.3.1.12',
  sysDot3StatIntmacRxErrors => '1.3.6.1.4.1.3375.2.1.2.11.1.3.1.13',
  sysDot3StatSymbolErrors => '1.3.6.1.4.1.3375.2.1.2.11.1.3.1.14',
  sysDot3StatDuplexStatus => '1.3.6.1.4.1.3375.2.1.2.11.1.3.1.15',
  sysDot3StatDuplexStatusDefinition => 'F5-BIGIP-SYSTEM-MIB::sysDot3StatDuplexStatus',
  sysDot3StatCollisionCount => '1.3.6.1.4.1.3375.2.1.2.11.1.3.1.16',
  sysDot3StatCollisionFreq => '1.3.6.1.4.1.3375.2.1.2.11.1.3.1.17',
  sysTrunks => '1.3.6.1.4.1.3375.2.1.2.12',
  sysTrunk => '1.3.6.1.4.1.3375.2.1.2.12.1',
  sysTrunkNumber => '1.3.6.1.4.1.3375.2.1.2.12.1.1',
  sysTrunkTable => '1.3.6.1.4.1.3375.2.1.2.12.1.2',
  sysTrunkEntry => '1.3.6.1.4.1.3375.2.1.2.12.1.2.1',
  sysTrunkName => '1.3.6.1.4.1.3375.2.1.2.12.1.2.1.1',
  sysTrunkStatus => '1.3.6.1.4.1.3375.2.1.2.12.1.2.1.2',
  sysTrunkStatusDefinition => 'F5-BIGIP-SYSTEM-MIB::sysTrunkStatus',
  sysTrunkAggAddr => '1.3.6.1.4.1.3375.2.1.2.12.1.2.1.3',
  sysTrunkCfgMbrCount => '1.3.6.1.4.1.3375.2.1.2.12.1.2.1.4',
  sysTrunkOperBw => '1.3.6.1.4.1.3375.2.1.2.12.1.2.1.5',
  sysTrunkStpEnable => '1.3.6.1.4.1.3375.2.1.2.12.1.2.1.6',
  sysTrunkStpEnableDefinition => 'F5-BIGIP-SYSTEM-MIB::sysTrunkStpEnable',
  sysTrunkStpReset => '1.3.6.1.4.1.3375.2.1.2.12.1.2.1.7',
  sysTrunkStpResetDefinition => 'F5-BIGIP-SYSTEM-MIB::sysTrunkStpReset',
  sysTrunkLacpEnabled => '1.3.6.1.4.1.3375.2.1.2.12.1.2.1.8',
  sysTrunkLacpEnabledDefinition => 'F5-BIGIP-SYSTEM-MIB::sysTrunkLacpEnabled',
  sysTrunkActiveLacp => '1.3.6.1.4.1.3375.2.1.2.12.1.2.1.9',
  sysTrunkActiveLacpDefinition => 'F5-BIGIP-SYSTEM-MIB::sysTrunkActiveLacp',
  sysTrunkShortTimeout => '1.3.6.1.4.1.3375.2.1.2.12.1.2.1.10',
  sysTrunkShortTimeoutDefinition => 'F5-BIGIP-SYSTEM-MIB::sysTrunkShortTimeout',
  sysTrunkStat => '1.3.6.1.4.1.3375.2.1.2.12.2',
  sysTrunkStatResetStats => '1.3.6.1.4.1.3375.2.1.2.12.2.1',
  sysTrunkStatNumber => '1.3.6.1.4.1.3375.2.1.2.12.2.2',
  sysTrunkStatTable => '1.3.6.1.4.1.3375.2.1.2.12.2.3',
  sysTrunkStatEntry => '1.3.6.1.4.1.3375.2.1.2.12.2.3.1',
  sysTrunkStatName => '1.3.6.1.4.1.3375.2.1.2.12.2.3.1.1',
  sysTrunkStatPktsIn => '1.3.6.1.4.1.3375.2.1.2.12.2.3.1.2',
  sysTrunkStatBytesIn => '1.3.6.1.4.1.3375.2.1.2.12.2.3.1.3',
  sysTrunkStatPktsOut => '1.3.6.1.4.1.3375.2.1.2.12.2.3.1.4',
  sysTrunkStatBytesOut => '1.3.6.1.4.1.3375.2.1.2.12.2.3.1.5',
  sysTrunkStatMcastIn => '1.3.6.1.4.1.3375.2.1.2.12.2.3.1.6',
  sysTrunkStatMcastOut => '1.3.6.1.4.1.3375.2.1.2.12.2.3.1.7',
  sysTrunkStatErrorsIn => '1.3.6.1.4.1.3375.2.1.2.12.2.3.1.8',
  sysTrunkStatErrorsOut => '1.3.6.1.4.1.3375.2.1.2.12.2.3.1.9',
  sysTrunkStatDropsIn => '1.3.6.1.4.1.3375.2.1.2.12.2.3.1.10',
  sysTrunkStatDropsOut => '1.3.6.1.4.1.3375.2.1.2.12.2.3.1.11',
  sysTrunkStatCollisions => '1.3.6.1.4.1.3375.2.1.2.12.2.3.1.12',
  sysTrunkCfgMember => '1.3.6.1.4.1.3375.2.1.2.12.3',
  sysTrunkCfgMemberNumber => '1.3.6.1.4.1.3375.2.1.2.12.3.1',
  sysTrunkCfgMemberTable => '1.3.6.1.4.1.3375.2.1.2.12.3.2',
  sysTrunkCfgMemberEntry => '1.3.6.1.4.1.3375.2.1.2.12.3.2.1',
  sysTrunkCfgMemberTrunkName => '1.3.6.1.4.1.3375.2.1.2.12.3.2.1.1',
  sysTrunkCfgMemberName => '1.3.6.1.4.1.3375.2.1.2.12.3.2.1.2',
  sysVlans => '1.3.6.1.4.1.3375.2.1.2.13',
  sysVlan => '1.3.6.1.4.1.3375.2.1.2.13.1',
  sysVlanNumber => '1.3.6.1.4.1.3375.2.1.2.13.1.1',
  sysVlanTable => '1.3.6.1.4.1.3375.2.1.2.13.1.2',
  sysVlanEntry => '1.3.6.1.4.1.3375.2.1.2.13.1.2.1',
  sysVlanVname => '1.3.6.1.4.1.3375.2.1.2.13.1.2.1.1',
  sysVlanId => '1.3.6.1.4.1.3375.2.1.2.13.1.2.1.2',
  sysVlanSpanningTree => '1.3.6.1.4.1.3375.2.1.2.13.1.2.1.3',
  sysVlanSpanningTreeDefinition => 'F5-BIGIP-SYSTEM-MIB::sysVlanSpanningTree',
  sysVlanMacMasquerade => '1.3.6.1.4.1.3375.2.1.2.13.1.2.1.4',
  sysVlanMacTrue => '1.3.6.1.4.1.3375.2.1.2.13.1.2.1.5',
  sysVlanSourceCheck => '1.3.6.1.4.1.3375.2.1.2.13.1.2.1.6',
  sysVlanSourceCheckDefinition => 'F5-BIGIP-SYSTEM-MIB::sysVlanSourceCheck',
  sysVlanFailsafeEnabled => '1.3.6.1.4.1.3375.2.1.2.13.1.2.1.7',
  sysVlanFailsafeEnabledDefinition => 'F5-BIGIP-SYSTEM-MIB::sysVlanFailsafeEnabled',
  sysVlanMtu => '1.3.6.1.4.1.3375.2.1.2.13.1.2.1.8',
  sysVlanFailsafeTimeout => '1.3.6.1.4.1.3375.2.1.2.13.1.2.1.9',
  sysVlanFailsafeAction => '1.3.6.1.4.1.3375.2.1.2.13.1.2.1.10',
  sysVlanFailsafeActionDefinition => 'F5-BIGIP-SYSTEM-MIB::sysVlanFailsafeAction',
  sysVlanMirrorHashPortEnable => '1.3.6.1.4.1.3375.2.1.2.13.1.2.1.11',
  sysVlanMirrorHashPortEnableDefinition => 'F5-BIGIP-SYSTEM-MIB::sysVlanMirrorHashPortEnable',
  sysVlanLearnMode => '1.3.6.1.4.1.3375.2.1.2.13.1.2.1.12',
  sysVlanLearnModeDefinition => 'F5-BIGIP-SYSTEM-MIB::sysVlanLearnMode',
  sysVlanMember => '1.3.6.1.4.1.3375.2.1.2.13.2',
  sysVlanMemberNumber => '1.3.6.1.4.1.3375.2.1.2.13.2.1',
  sysVlanMemberTable => '1.3.6.1.4.1.3375.2.1.2.13.2.2',
  sysVlanMemberEntry => '1.3.6.1.4.1.3375.2.1.2.13.2.2.1',
  sysVlanMemberVmname => '1.3.6.1.4.1.3375.2.1.2.13.2.2.1.1',
  sysVlanMemberParentVname => '1.3.6.1.4.1.3375.2.1.2.13.2.2.1.2',
  sysVlanMemberTagged => '1.3.6.1.4.1.3375.2.1.2.13.2.2.1.3',
  sysVlanMemberTaggedDefinition => 'F5-BIGIP-SYSTEM-MIB::sysVlanMemberTagged',
  sysVlanMemberType => '1.3.6.1.4.1.3375.2.1.2.13.2.2.1.4',
  sysVlanMemberTypeDefinition => 'F5-BIGIP-SYSTEM-MIB::sysVlanMemberType',
  sysVlanGroup => '1.3.6.1.4.1.3375.2.1.2.13.3',
  sysVlanGroupNumber => '1.3.6.1.4.1.3375.2.1.2.13.3.1',
  sysVlanGroupTable => '1.3.6.1.4.1.3375.2.1.2.13.3.2',
  sysVlanGroupEntry => '1.3.6.1.4.1.3375.2.1.2.13.3.2.1',
  sysVlanGroupName => '1.3.6.1.4.1.3375.2.1.2.13.3.2.1.1',
  sysVlanGroupVlanId => '1.3.6.1.4.1.3375.2.1.2.13.3.2.1.2',
  sysVlanGroupMode => '1.3.6.1.4.1.3375.2.1.2.13.3.2.1.3',
  sysVlanGroupModeDefinition => 'F5-BIGIP-SYSTEM-MIB::sysVlanGroupMode',
  sysVlanGroupBridgeAllTraffic => '1.3.6.1.4.1.3375.2.1.2.13.3.2.1.4',
  sysVlanGroupBridgeAllTrafficDefinition => 'F5-BIGIP-SYSTEM-MIB::sysVlanGroupBridgeAllTraffic',
  sysVlanGroupBridgeInStandby => '1.3.6.1.4.1.3375.2.1.2.13.3.2.1.5',
  sysVlanGroupBridgeInStandbyDefinition => 'F5-BIGIP-SYSTEM-MIB::sysVlanGroupBridgeInStandby',
  sysVlanGroupBridgeMulticast => '1.3.6.1.4.1.3375.2.1.2.13.3.2.1.6',
  sysVlanGroupBridgeMulticastDefinition => 'F5-BIGIP-SYSTEM-MIB::sysVlanGroupBridgeMulticast',
  sysVlanGroupMacMasquerade => '1.3.6.1.4.1.3375.2.1.2.13.3.2.1.7',
  sysVlanGroupMacTrue => '1.3.6.1.4.1.3375.2.1.2.13.3.2.1.8',
  sysVlanGroupMbr => '1.3.6.1.4.1.3375.2.1.2.13.4',
  sysVlanGroupMbrNumber => '1.3.6.1.4.1.3375.2.1.2.13.4.1',
  sysVlanGroupMbrTable => '1.3.6.1.4.1.3375.2.1.2.13.4.2',
  sysVlanGroupMbrEntry => '1.3.6.1.4.1.3375.2.1.2.13.4.2.1',
  sysVlanGroupMbrGroupName => '1.3.6.1.4.1.3375.2.1.2.13.4.2.1.1',
  sysVlanGroupMbrVlanName => '1.3.6.1.4.1.3375.2.1.2.13.4.2.1.2',
  sysProxyExclusion => '1.3.6.1.4.1.3375.2.1.2.13.5',
  sysProxyExclusionNumber => '1.3.6.1.4.1.3375.2.1.2.13.5.1',
  sysProxyExclusionTable => '1.3.6.1.4.1.3375.2.1.2.13.5.2',
  sysProxyExclusionEntry => '1.3.6.1.4.1.3375.2.1.2.13.5.2.1',
  sysProxyExclusionVlangroupName => '1.3.6.1.4.1.3375.2.1.2.13.5.2.1.1',
  sysProxyExclusionIpType => '1.3.6.1.4.1.3375.2.1.2.13.5.2.1.2',
  sysProxyExclusionIp => '1.3.6.1.4.1.3375.2.1.2.13.5.2.1.3',
  sysVlanStat => '1.3.6.1.4.1.3375.2.1.2.13.6',
  sysVlanStatNumber => '1.3.6.1.4.1.3375.2.1.2.13.6.1',
  sysVlanStatTable => '1.3.6.1.4.1.3375.2.1.2.13.6.2',
  sysVlanStatEntry => '1.3.6.1.4.1.3375.2.1.2.13.6.2.1',
  sysVlanStatVlanName => '1.3.6.1.4.1.3375.2.1.2.13.6.2.1.1',
  sysVlanStatPktsIn => '1.3.6.1.4.1.3375.2.1.2.13.6.2.1.2',
  sysVlanStatBytesIn => '1.3.6.1.4.1.3375.2.1.2.13.6.2.1.3',
  sysVlanStatPktsOut => '1.3.6.1.4.1.3375.2.1.2.13.6.2.1.4',
  sysVlanStatBytesOut => '1.3.6.1.4.1.3375.2.1.2.13.6.2.1.5',
  sysVlanStatMcastIn => '1.3.6.1.4.1.3375.2.1.2.13.6.2.1.6',
  sysVlanStatMcastOut => '1.3.6.1.4.1.3375.2.1.2.13.6.2.1.7',
  sysVlanStatErrorsIn => '1.3.6.1.4.1.3375.2.1.2.13.6.2.1.8',
  sysVlanStatErrorsOut => '1.3.6.1.4.1.3375.2.1.2.13.6.2.1.9',
  sysVlanStatDropsIn => '1.3.6.1.4.1.3375.2.1.2.13.6.2.1.10',
  sysVlanStatDropsOut => '1.3.6.1.4.1.3375.2.1.2.13.6.2.1.11',
  sysVlanStatCollisions => '1.3.6.1.4.1.3375.2.1.2.13.6.2.1.12',
  sysVlanxStat => '1.3.6.1.4.1.3375.2.1.2.13.7',
  sysVlanxStatNumber => '1.3.6.1.4.1.3375.2.1.2.13.7.1',
  sysVlanxStatTable => '1.3.6.1.4.1.3375.2.1.2.13.7.2',
  sysVlanxStatEntry => '1.3.6.1.4.1.3375.2.1.2.13.7.2.1',
  sysVlanxStatVlanName => '1.3.6.1.4.1.3375.2.1.2.13.7.2.1.1',
  sysVlanxStatInMulticastPkts => '1.3.6.1.4.1.3375.2.1.2.13.7.2.1.2',
  sysVlanxStatInBroadcastPkts => '1.3.6.1.4.1.3375.2.1.2.13.7.2.1.3',
  sysVlanxStatOutMulticastPkts => '1.3.6.1.4.1.3375.2.1.2.13.7.2.1.4',
  sysVlanxStatOutBroadcastPkts => '1.3.6.1.4.1.3375.2.1.2.13.7.2.1.5',
  sysVlanxStatHcInOctets => '1.3.6.1.4.1.3375.2.1.2.13.7.2.1.6',
  sysVlanxStatHcInUcastPkts => '1.3.6.1.4.1.3375.2.1.2.13.7.2.1.7',
  sysVlanxStatHcInMulticastPkts => '1.3.6.1.4.1.3375.2.1.2.13.7.2.1.8',
  sysVlanxStatHcInBroadcastPkts => '1.3.6.1.4.1.3375.2.1.2.13.7.2.1.9',
  sysVlanxStatHcOutOctets => '1.3.6.1.4.1.3375.2.1.2.13.7.2.1.10',
  sysVlanxStatHcOutUcastPkts => '1.3.6.1.4.1.3375.2.1.2.13.7.2.1.11',
  sysVlanxStatHcOutMulticastPkts => '1.3.6.1.4.1.3375.2.1.2.13.7.2.1.12',
  sysVlanxStatHcOutBroadcastPkts => '1.3.6.1.4.1.3375.2.1.2.13.7.2.1.13',
  sysVlanxStatHighSpeed => '1.3.6.1.4.1.3375.2.1.2.13.7.2.1.14',
  sysVlanxStatConnectorPresent => '1.3.6.1.4.1.3375.2.1.2.13.7.2.1.15',
  sysVlanxStatCounterDiscontinuityTime => '1.3.6.1.4.1.3375.2.1.2.13.7.2.1.16',
  sysDevice => '1.3.6.1.4.1.3375.2.1.2.14',
  sysSysDevice => '1.3.6.1.4.1.3375.2.1.2.14.1',
  sysSysDeviceNumber => '1.3.6.1.4.1.3375.2.1.2.14.1.1',
  sysSysDeviceTable => '1.3.6.1.4.1.3375.2.1.2.14.1.2',
  sysSysDeviceEntry => '1.3.6.1.4.1.3375.2.1.2.14.1.2.1',
  sysSysDeviceName => '1.3.6.1.4.1.3375.2.1.2.14.1.2.1.1',
  sysSysDeviceMgmtIp => '1.3.6.1.4.1.3375.2.1.2.14.1.2.1.2',
  sysSysDeviceMgmtIpType => '1.3.6.1.4.1.3375.2.1.2.14.1.2.1.3',
  sysSysDeviceHostname => '1.3.6.1.4.1.3375.2.1.2.14.1.2.1.4',
  sysSysDeviceMirrorIp => '1.3.6.1.4.1.3375.2.1.2.14.1.2.1.5',
  sysSysDeviceMirrorIpType => '1.3.6.1.4.1.3375.2.1.2.14.1.2.1.6',
  sysSysDeviceMirrorSecondaryIp => '1.3.6.1.4.1.3375.2.1.2.14.1.2.1.7',
  sysSysDeviceMirrorSecondaryIpType => '1.3.6.1.4.1.3375.2.1.2.14.1.2.1.8',
  sysSysDeviceMulticastInterface => '1.3.6.1.4.1.3375.2.1.2.14.1.2.1.9',
  sysSysDeviceMulticastAddr => '1.3.6.1.4.1.3375.2.1.2.14.1.2.1.10',
  sysSysDeviceMulticastAddrType => '1.3.6.1.4.1.3375.2.1.2.14.1.2.1.11',
  sysSysDeviceMulticastPort => '1.3.6.1.4.1.3375.2.1.2.14.1.2.1.12',
  sysSysDeviceVersion => '1.3.6.1.4.1.3375.2.1.2.14.1.2.1.13',
  sysSysDeviceProduct => '1.3.6.1.4.1.3375.2.1.2.14.1.2.1.14',
  sysSysDeviceEdition => '1.3.6.1.4.1.3375.2.1.2.14.1.2.1.15',
  sysSysDeviceMarketingName => '1.3.6.1.4.1.3375.2.1.2.14.1.2.1.16',
  sysSysDevicePlatformId => '1.3.6.1.4.1.3375.2.1.2.14.1.2.1.17',
  sysSysDeviceChassisId => '1.3.6.1.4.1.3375.2.1.2.14.1.2.1.18',
  sysUnicastAddr => '1.3.6.1.4.1.3375.2.1.2.14.2',
  sysUnicastAddrNumber => '1.3.6.1.4.1.3375.2.1.2.14.2.1',
  sysUnicastAddrTable => '1.3.6.1.4.1.3375.2.1.2.14.2.2',
  sysUnicastAddrEntry => '1.3.6.1.4.1.3375.2.1.2.14.2.2.1',
  sysUnicastAddrName => '1.3.6.1.4.1.3375.2.1.2.14.2.2.1.1',
  sysUnicastAddrIndex => '1.3.6.1.4.1.3375.2.1.2.14.2.2.1.2',
  sysUnicastAddrSourceIp => '1.3.6.1.4.1.3375.2.1.2.14.2.2.1.3',
  sysUnicastAddrSourceIpType => '1.3.6.1.4.1.3375.2.1.2.14.2.2.1.4',
  sysUnicastAddrSourcePort => '1.3.6.1.4.1.3375.2.1.2.14.2.2.1.5',
  sysSysDeviceActiveModules => '1.3.6.1.4.1.3375.2.1.2.14.4',
  sysSysDeviceActiveModulesNumber => '1.3.6.1.4.1.3375.2.1.2.14.4.1',
  sysSysDeviceActiveModulesTable => '1.3.6.1.4.1.3375.2.1.2.14.4.2',
  sysSysDeviceActiveModulesEntry => '1.3.6.1.4.1.3375.2.1.2.14.4.2.1',
  sysSysDeviceActiveModulesName => '1.3.6.1.4.1.3375.2.1.2.14.4.2.1.1',
  sysSysDeviceActiveModulesIndex => '1.3.6.1.4.1.3375.2.1.2.14.4.2.1.2',
  sysSysDeviceActiveModulesModule => '1.3.6.1.4.1.3375.2.1.2.14.4.2.1.3',
  sysSysDeviceInactiveModules => '1.3.6.1.4.1.3375.2.1.2.14.5',
  sysSysDeviceInactiveModulesNumber => '1.3.6.1.4.1.3375.2.1.2.14.5.1',
  sysSysDeviceInactiveModulesTable => '1.3.6.1.4.1.3375.2.1.2.14.5.2',
  sysSysDeviceInactiveModulesEntry => '1.3.6.1.4.1.3375.2.1.2.14.5.2.1',
  sysSysDeviceInactiveModulesName => '1.3.6.1.4.1.3375.2.1.2.14.5.2.1.1',
  sysSysDeviceInactiveModulesIndex => '1.3.6.1.4.1.3375.2.1.2.14.5.2.1.2',
  sysSysDeviceInactiveModulesModule => '1.3.6.1.4.1.3375.2.1.2.14.5.2.1.3',
  sysSysDeviceOptionalModules => '1.3.6.1.4.1.3375.2.1.2.14.6',
  sysSysDeviceOptionalModulesNumber => '1.3.6.1.4.1.3375.2.1.2.14.6.1',
  sysSysDeviceOptionalModulesTable => '1.3.6.1.4.1.3375.2.1.2.14.6.2',
  sysSysDeviceOptionalModulesEntry => '1.3.6.1.4.1.3375.2.1.2.14.6.2.1',
  sysSysDeviceOptionalModulesName => '1.3.6.1.4.1.3375.2.1.2.14.6.2.1.1',
  sysSysDeviceOptionalModulesIndex => '1.3.6.1.4.1.3375.2.1.2.14.6.2.1.2',
  sysSysDeviceOptionalModulesModule => '1.3.6.1.4.1.3375.2.1.2.14.6.2.1.3',
  sysSysDeviceTimelimitedModules => '1.3.6.1.4.1.3375.2.1.2.14.7',
  sysSysDeviceTimelimitedModulesNumber => '1.3.6.1.4.1.3375.2.1.2.14.7.1',
  sysSysDeviceTimelimitedModulesTable => '1.3.6.1.4.1.3375.2.1.2.14.7.2',
  sysSysDeviceTimelimitedModulesEntry => '1.3.6.1.4.1.3375.2.1.2.14.7.2.1',
  sysSysDeviceTimelimitedModulesName => '1.3.6.1.4.1.3375.2.1.2.14.7.2.1.1',
  sysSysDeviceTimelimitedModulesIndex => '1.3.6.1.4.1.3375.2.1.2.14.7.2.1.2',
  sysSysDeviceTimelimitedModulesModule => '1.3.6.1.4.1.3375.2.1.2.14.7.2.1.3',
  sysTunnels => '1.3.6.1.4.1.3375.2.1.2.15',
  sysFecStat => '1.3.6.1.4.1.3375.2.1.2.15.1',
  sysFecStatResetStats => '1.3.6.1.4.1.3375.2.1.2.15.1.1',
  sysFecStatNumber => '1.3.6.1.4.1.3375.2.1.2.15.1.2',
  sysFecStatTable => '1.3.6.1.4.1.3375.2.1.2.15.1.3',
  sysFecStatEntry => '1.3.6.1.4.1.3375.2.1.2.15.1.3.1',
  sysFecStatName => '1.3.6.1.4.1.3375.2.1.2.15.1.3.1.1',
  sysFecStatProfile => '1.3.6.1.4.1.3375.2.1.2.15.1.3.1.2',
  sysFecStatOutRawPackets => '1.3.6.1.4.1.3375.2.1.2.15.1.3.1.3',
  sysFecStatOutRawBytes => '1.3.6.1.4.1.3375.2.1.2.15.1.3.1.4',
  sysFecStatOutRdndPackets => '1.3.6.1.4.1.3375.2.1.2.15.1.3.1.5',
  sysFecStatOutRdndBytes => '1.3.6.1.4.1.3375.2.1.2.15.1.3.1.6',
  sysFecStatInRawPackets => '1.3.6.1.4.1.3375.2.1.2.15.1.3.1.7',
  sysFecStatInRawBytes => '1.3.6.1.4.1.3375.2.1.2.15.1.3.1.8',
  sysFecStatInRdndPackets => '1.3.6.1.4.1.3375.2.1.2.15.1.3.1.9',
  sysFecStatInRdndBytes => '1.3.6.1.4.1.3375.2.1.2.15.1.3.1.10',
  sysFecStatInRdndLost => '1.3.6.1.4.1.3375.2.1.2.15.1.3.1.11',
  sysFecStatInRawLost => '1.3.6.1.4.1.3375.2.1.2.15.1.3.1.12',
  sysFecStatRmtInRdndPackets => '1.3.6.1.4.1.3375.2.1.2.15.1.3.1.13',
  sysFecStatRmtInRdndLost => '1.3.6.1.4.1.3375.2.1.2.15.1.3.1.14',
  sysFecStatRmtInRawPackets => '1.3.6.1.4.1.3375.2.1.2.15.1.3.1.15',
  sysFecStatRmtInRawLost => '1.3.6.1.4.1.3375.2.1.2.15.1.3.1.16',
  sysLldp => '1.3.6.1.4.1.3375.2.1.2.16',
  sysLldpNeighbors => '1.3.6.1.4.1.3375.2.1.2.16.1',
  sysLldpNeighborsTableNumber => '1.3.6.1.4.1.3375.2.1.2.16.1.1',
  sysLldpNeighborsTableTable => '1.3.6.1.4.1.3375.2.1.2.16.1.2',
  sysLldpNeighborsTableEntry => '1.3.6.1.4.1.3375.2.1.2.16.1.2.1',
  sysLldpNeighborsTableChassisId => '1.3.6.1.4.1.3375.2.1.2.16.1.2.1.1',
  sysLldpNeighborsTablePortId => '1.3.6.1.4.1.3375.2.1.2.16.1.2.1.2',
  sysLldpNeighborsTableLocalInterface => '1.3.6.1.4.1.3375.2.1.2.16.1.2.1.3',
  sysLldpNeighborsTablePortDesc => '1.3.6.1.4.1.3375.2.1.2.16.1.2.1.4',
  sysLldpNeighborsTableSysName => '1.3.6.1.4.1.3375.2.1.2.16.1.2.1.5',
  sysLldpNeighborsTableSysDesc => '1.3.6.1.4.1.3375.2.1.2.16.1.2.1.6',
  sysLldpNeighborsTableSysCap => '1.3.6.1.4.1.3375.2.1.2.16.1.2.1.7',
  sysLldpNeighborsTableMgmtAddr => '1.3.6.1.4.1.3375.2.1.2.16.1.2.1.8',
  sysLldpNeighborsTablePvid => '1.3.6.1.4.1.3375.2.1.2.16.1.2.1.9',
  sysLldpNeighborsTablePpvid => '1.3.6.1.4.1.3375.2.1.2.16.1.2.1.10',
  sysLldpNeighborsTableVlanName => '1.3.6.1.4.1.3375.2.1.2.16.1.2.1.11',
  sysLldpNeighborsTableVlanTag => '1.3.6.1.4.1.3375.2.1.2.16.1.2.1.12',
  sysLldpNeighborsTableProtocolIdentity => '1.3.6.1.4.1.3375.2.1.2.16.1.2.1.13',
  sysLldpNeighborsTableAutoNego => '1.3.6.1.4.1.3375.2.1.2.16.1.2.1.14',
  sysLldpNeighborsTablePmd => '1.3.6.1.4.1.3375.2.1.2.16.1.2.1.15',
  sysLldpNeighborsTableMau => '1.3.6.1.4.1.3375.2.1.2.16.1.2.1.16',
  sysLldpNeighborsTableAggStatus => '1.3.6.1.4.1.3375.2.1.2.16.1.2.1.17',
  sysLldpNeighborsTableAggPortid => '1.3.6.1.4.1.3375.2.1.2.16.1.2.1.18',
  sysLldpNeighborsTableMfs => '1.3.6.1.4.1.3375.2.1.2.16.1.2.1.19',
  sysLldpNeighborsTableF5ProductModel => '1.3.6.1.4.1.3375.2.1.2.16.1.2.1.20',
  sysPlatform => '1.3.6.1.4.1.3375.2.1.3',
  sysCpu => '1.3.6.1.4.1.3375.2.1.3.1',
  sysCpuNumber => '1.3.6.1.4.1.3375.2.1.3.1.1',
  sysCpuTable => '1.3.6.1.4.1.3375.2.1.3.1.2',
  sysCpuEntry => '1.3.6.1.4.1.3375.2.1.3.1.2.1',
  sysCpuIndex => '1.3.6.1.4.1.3375.2.1.3.1.2.1.1',
  sysCpuTemperature => '1.3.6.1.4.1.3375.2.1.3.1.2.1.2',
  sysCpuFanSpeed => '1.3.6.1.4.1.3375.2.1.3.1.2.1.3',
  sysCpuName => '1.3.6.1.4.1.3375.2.1.3.1.2.1.4',
  sysCpuSlot => '1.3.6.1.4.1.3375.2.1.3.1.2.1.5',
  sysChassis => '1.3.6.1.4.1.3375.2.1.3.2',
  sysChassisFan => '1.3.6.1.4.1.3375.2.1.3.2.1',
  sysChassisFanNumber => '1.3.6.1.4.1.3375.2.1.3.2.1.1',
  sysChassisFanTable => '1.3.6.1.4.1.3375.2.1.3.2.1.2',
  sysChassisFanEntry => '1.3.6.1.4.1.3375.2.1.3.2.1.2.1',
  sysChassisFanIndex => '1.3.6.1.4.1.3375.2.1.3.2.1.2.1.1',
  sysChassisFanStatus => '1.3.6.1.4.1.3375.2.1.3.2.1.2.1.2',
  sysChassisFanStatusDefinition => 'F5-BIGIP-SYSTEM-MIB::sysChassisFanStatus',
  sysChassisFanSpeed => '1.3.6.1.4.1.3375.2.1.3.2.1.2.1.3',
  sysChassisPowerSupply => '1.3.6.1.4.1.3375.2.1.3.2.2',
  sysChassisPowerSupplyNumber => '1.3.6.1.4.1.3375.2.1.3.2.2.1',
  sysChassisPowerSupplyTable => '1.3.6.1.4.1.3375.2.1.3.2.2.2',
  sysChassisPowerSupplyEntry => '1.3.6.1.4.1.3375.2.1.3.2.2.2.1',
  sysChassisPowerSupplyIndex => '1.3.6.1.4.1.3375.2.1.3.2.2.2.1.1',
  sysChassisPowerSupplyStatus => '1.3.6.1.4.1.3375.2.1.3.2.2.2.1.2',
  sysChassisPowerSupplyStatusDefinition => 'F5-BIGIP-SYSTEM-MIB::sysChassisPowerSupplyStatus',
  sysChassisTemp => '1.3.6.1.4.1.3375.2.1.3.2.3',
  sysChassisTempNumber => '1.3.6.1.4.1.3375.2.1.3.2.3.1',
  sysChassisTempTable => '1.3.6.1.4.1.3375.2.1.3.2.3.2',
  sysChassisTempEntry => '1.3.6.1.4.1.3375.2.1.3.2.3.2.1',
  sysChassisTempIndex => '1.3.6.1.4.1.3375.2.1.3.2.3.2.1.1',
  sysChassisTempTemperature => '1.3.6.1.4.1.3375.2.1.3.2.3.2.1.2',
  sysBladeTemp => '1.3.6.1.4.1.3375.2.1.3.2.4',
  sysBladeTempNumber => '1.3.6.1.4.1.3375.2.1.3.2.4.1',
  sysBladeTempTable => '1.3.6.1.4.1.3375.2.1.3.2.4.2',
  sysBladeTempEntry => '1.3.6.1.4.1.3375.2.1.3.2.4.2.1',
  sysBladeTempIndex => '1.3.6.1.4.1.3375.2.1.3.2.4.2.1.1',
  sysBladeTempTemperature => '1.3.6.1.4.1.3375.2.1.3.2.4.2.1.2',
  sysBladeTempLocation => '1.3.6.1.4.1.3375.2.1.3.2.4.2.1.3',
  sysBladeTempSlot => '1.3.6.1.4.1.3375.2.1.3.2.4.2.1.4',
  sysBladeVoltage => '1.3.6.1.4.1.3375.2.1.3.2.5',
  sysBladeVoltageNumber => '1.3.6.1.4.1.3375.2.1.3.2.5.1',
  sysBladeVoltageTable => '1.3.6.1.4.1.3375.2.1.3.2.5.2',
  sysBladeVoltageEntry => '1.3.6.1.4.1.3375.2.1.3.2.5.2.1',
  sysBladeVoltageIndex => '1.3.6.1.4.1.3375.2.1.3.2.5.2.1.1',
  sysBladeVoltageVoltage => '1.3.6.1.4.1.3375.2.1.3.2.5.2.1.2',
  sysBladeVoltageSlot => '1.3.6.1.4.1.3375.2.1.3.2.5.2.1.3',
  sysGeneral => '1.3.6.1.4.1.3375.2.1.3.3',
  sysGeneralHwName => '1.3.6.1.4.1.3375.2.1.3.3.1',
  sysGeneralHwNumber => '1.3.6.1.4.1.3375.2.1.3.3.2',
  sysGeneralChassisSerialNum => '1.3.6.1.4.1.3375.2.1.3.3.3',
  sysDeviceModelOIDs => '1.3.6.1.4.1.3375.2.1.3.4',
  bigip520 => '1.3.6.1.4.1.3375.2.1.3.4.1',
  bigip540 => '1.3.6.1.4.1.3375.2.1.3.4.2',
  bigip1000 => '1.3.6.1.4.1.3375.2.1.3.4.3',
  bigip1500 => '1.3.6.1.4.1.3375.2.1.3.4.4',
  bigip2400 => '1.3.6.1.4.1.3375.2.1.3.4.5',
  bigip3400 => '1.3.6.1.4.1.3375.2.1.3.4.6',
  bigip4100 => '1.3.6.1.4.1.3375.2.1.3.4.7',
  bigip5100 => '1.3.6.1.4.1.3375.2.1.3.4.8',
  bigip5110 => '1.3.6.1.4.1.3375.2.1.3.4.9',
  bigip6400 => '1.3.6.1.4.1.3375.2.1.3.4.10',
  bigip6800 => '1.3.6.1.4.1.3375.2.1.3.4.11',
  bigip8400 => '1.3.6.1.4.1.3375.2.1.3.4.12',
  bigip8800 => '1.3.6.1.4.1.3375.2.1.3.4.13',
  em3000 => '1.3.6.1.4.1.3375.2.1.3.4.14',
  wj300 => '1.3.6.1.4.1.3375.2.1.3.4.15',
  wj400 => '1.3.6.1.4.1.3375.2.1.3.4.16',
  wj500 => '1.3.6.1.4.1.3375.2.1.3.4.17',
  wj800 => '1.3.6.1.4.1.3375.2.1.3.4.18',
  bigipPb200 => '1.3.6.1.4.1.3375.2.1.3.4.19',
  bigip1600 => '1.3.6.1.4.1.3375.2.1.3.4.20',
  bigip3600 => '1.3.6.1.4.1.3375.2.1.3.4.21',
  bigip6900 => '1.3.6.1.4.1.3375.2.1.3.4.22',
  bigip8900 => '1.3.6.1.4.1.3375.2.1.3.4.23',
  bigip3900 => '1.3.6.1.4.1.3375.2.1.3.4.24',
  bigip8950 => '1.3.6.1.4.1.3375.2.1.3.4.25',
  em4000 => '1.3.6.1.4.1.3375.2.1.3.4.26',
  bigip11050 => '1.3.6.1.4.1.3375.2.1.3.4.27',
  em500 => '1.3.6.1.4.1.3375.2.1.3.4.28',
  arx1000 => '1.3.6.1.4.1.3375.2.1.3.4.29',
  arx2000 => '1.3.6.1.4.1.3375.2.1.3.4.30',
  arx4000 => '1.3.6.1.4.1.3375.2.1.3.4.31',
  arx500 => '1.3.6.1.4.1.3375.2.1.3.4.32',
  bigip3410 => '1.3.6.1.4.1.3375.2.1.3.4.33',
  bigipPb100 => '1.3.6.1.4.1.3375.2.1.3.4.34',
  bigipPb100n => '1.3.6.1.4.1.3375.2.1.3.4.35',
  sam4300 => '1.3.6.1.4.1.3375.2.1.3.4.36',
  firepass1200 => '1.3.6.1.4.1.3375.2.1.3.4.37',
  firepass4100 => '1.3.6.1.4.1.3375.2.1.3.4.38',
  firepass4300 => '1.3.6.1.4.1.3375.2.1.3.4.39',
  swanWJ200 => '1.3.6.1.4.1.3375.2.1.3.4.40',
  trafficShield4100 => '1.3.6.1.4.1.3375.2.1.3.4.41',
  wa4500 => '1.3.6.1.4.1.3375.2.1.3.4.42',
  bigipVirtualEdition => '1.3.6.1.4.1.3375.2.1.3.4.43',
  bigip11000 => '1.3.6.1.4.1.3375.2.1.3.4.44',
  bigip11050N => '1.3.6.1.4.1.3375.2.1.3.4.45',
  bigipViprionB2100 => '1.3.6.1.4.1.3375.2.1.3.4.46',
  bigipViprionB4300 => '1.3.6.1.4.1.3375.2.1.3.4.47',
  bigipViprionC2400 => '1.3.6.1.4.1.3375.2.1.3.4.48',
  arx1500 => '1.3.6.1.4.1.3375.2.1.3.4.49',
  arx2500 => '1.3.6.1.4.1.3375.2.1.3.4.50',
  bigip11000F => '1.3.6.1.4.1.3375.2.1.3.4.51',
  bigip11050F => '1.3.6.1.4.1.3375.2.1.3.4.52',
  bigip6900F => '1.3.6.1.4.1.3375.2.1.3.4.53',
  bigip6900N => '1.3.6.1.4.1.3375.2.1.3.4.54',
  bigip6900S => '1.3.6.1.4.1.3375.2.1.3.4.55',
  bigip8900F => '1.3.6.1.4.1.3375.2.1.3.4.56',
  bigip8950S => '1.3.6.1.4.1.3375.2.1.3.4.57',
  bigipPb200N => '1.3.6.1.4.1.3375.2.1.3.4.58',
  bigip4000 => '1.3.6.1.4.1.3375.2.1.3.4.59',
  bigip10000 => '1.3.6.1.4.1.3375.2.1.3.4.60',
  bigip2000 => '1.3.6.1.4.1.3375.2.1.3.4.61',
  bigip5000 => '1.3.6.1.4.1.3375.2.1.3.4.62',
  bigip7000 => '1.3.6.1.4.1.3375.2.1.3.4.63',
  bigip800 => '1.3.6.1.4.1.3375.2.1.3.4.64',
  bigipViprionB4300N => '1.3.6.1.4.1.3375.2.1.3.4.65',
  bigip10000F => '1.3.6.1.4.1.3375.2.1.3.4.66',
  bigip10000S => '1.3.6.1.4.1.3375.2.1.3.4.67',
  bigip7000F => '1.3.6.1.4.1.3375.2.1.3.4.68',
  bigip7000S => '1.3.6.1.4.1.3375.2.1.3.4.69',
  bigipViprionB2250 => '1.3.6.1.4.1.3375.2.1.3.4.70',
  bigip5050 => '1.3.6.1.4.1.3375.2.1.3.4.71',
  bigip5250 => '1.3.6.1.4.1.3375.2.1.3.4.72',
  bigip4050 => '1.3.6.1.4.1.3375.2.1.3.4.73',
  bigip4250 => '1.3.6.1.4.1.3375.2.1.3.4.74',
  bigip2050 => '1.3.6.1.4.1.3375.2.1.3.4.75',
  bigip2250 => '1.3.6.1.4.1.3375.2.1.3.4.76',
  bigip7050 => '1.3.6.1.4.1.3375.2.1.3.4.77',
  bigip7250 => '1.3.6.1.4.1.3375.2.1.3.4.78',
  bigip10050 => '1.3.6.1.4.1.3375.2.1.3.4.79',
  bigip10250 => '1.3.6.1.4.1.3375.2.1.3.4.80',
  bigip2200 => '1.3.6.1.4.1.3375.2.1.3.4.81',
  bigip4200 => '1.3.6.1.4.1.3375.2.1.3.4.82',
  bigip5200 => '1.3.6.1.4.1.3375.2.1.3.4.83',
  bigip7200 => '1.3.6.1.4.1.3375.2.1.3.4.84',
  bigip7200F => '1.3.6.1.4.1.3375.2.1.3.4.85',
  bigip7200S => '1.3.6.1.4.1.3375.2.1.3.4.86',
  bigip10200 => '1.3.6.1.4.1.3375.2.1.3.4.87',
  bigip10200F => '1.3.6.1.4.1.3375.2.1.3.4.88',
  bigip10200S => '1.3.6.1.4.1.3375.2.1.3.4.89',
  bigiq7000 => '1.3.6.1.4.1.3375.2.1.3.4.90',
  bigip5250F => '1.3.6.1.4.1.3375.2.1.3.4.91',
  bigip12050 => '1.3.6.1.4.1.3375.2.1.3.4.92',
  bigip10350N => '1.3.6.1.4.1.3375.2.1.3.4.93',
  bigipVcmpGuest => '1.3.6.1.4.1.3375.2.1.3.4.94',
  bigip7055 => '1.3.6.1.4.1.3375.2.1.3.4.96',
  bigip7255 => '1.3.6.1.4.1.3375.2.1.3.4.97',
  bigip10055 => '1.3.6.1.4.1.3375.2.1.3.4.98',
  bigip10255 => '1.3.6.1.4.1.3375.2.1.3.4.99',
  unknown => '1.3.6.1.4.1.3375.2.1.3.4.1000',
  sysPlatformInfo => '1.3.6.1.4.1.3375.2.1.3.5',
  sysPlatformInfoName => '1.3.6.1.4.1.3375.2.1.3.5.1',
  sysPlatformInfoMarketingName => '1.3.6.1.4.1.3375.2.1.3.5.2',
  sysCpuSensor => '1.3.6.1.4.1.3375.2.1.3.6',
  sysCpuSensorNumber => '1.3.6.1.4.1.3375.2.1.3.6.1',
  sysCpuSensorTable => '1.3.6.1.4.1.3375.2.1.3.6.2',
  sysCpuSensorEntry => '1.3.6.1.4.1.3375.2.1.3.6.2.1',
  sysCpuSensorIndex => '1.3.6.1.4.1.3375.2.1.3.6.2.1.1',
  sysCpuSensorTemperature => '1.3.6.1.4.1.3375.2.1.3.6.2.1.2',
  sysCpuSensorFanSpeed => '1.3.6.1.4.1.3375.2.1.3.6.2.1.3',
  sysCpuSensorName => '1.3.6.1.4.1.3375.2.1.3.6.2.1.4',
  sysCpuSensorSlot => '1.3.6.1.4.1.3375.2.1.3.6.2.1.5',
  sysProduct => '1.3.6.1.4.1.3375.2.1.4',
  sysProductName => '1.3.6.1.4.1.3375.2.1.4.1',
  sysProductVersion => '1.3.6.1.4.1.3375.2.1.4.2',
  sysProductBuild => '1.3.6.1.4.1.3375.2.1.4.3',
  sysProductEdition => '1.3.6.1.4.1.3375.2.1.4.4',
  sysProductDate => '1.3.6.1.4.1.3375.2.1.4.5',
  sysProductHotfix => '1.3.6.1.4.1.3375.2.1.4.6',
  sysSubMemory => '1.3.6.1.4.1.3375.2.1.5',
  sysSubMemoryResetStats => '1.3.6.1.4.1.3375.2.1.5.1',
  sysSubMemoryNumber => '1.3.6.1.4.1.3375.2.1.5.2',
  sysSubMemoryTable => '1.3.6.1.4.1.3375.2.1.5.3',
  sysSubMemoryEntry => '1.3.6.1.4.1.3375.2.1.5.3.1',
  sysSubMemoryName => '1.3.6.1.4.1.3375.2.1.5.3.1.1',
  sysSubMemoryAllocated => '1.3.6.1.4.1.3375.2.1.5.3.1.2',
  sysSubMemoryMaxAllocated => '1.3.6.1.4.1.3375.2.1.5.3.1.3',
  sysSubMemorySize => '1.3.6.1.4.1.3375.2.1.5.3.1.4',
  sysSystem => '1.3.6.1.4.1.3375.2.1.6',
  sysSystemName => '1.3.6.1.4.1.3375.2.1.6.1',
  sysSystemNodeName => '1.3.6.1.4.1.3375.2.1.6.2',
  sysSystemRelease => '1.3.6.1.4.1.3375.2.1.6.3',
  sysSystemVersion => '1.3.6.1.4.1.3375.2.1.6.4',
  sysSystemMachine => '1.3.6.1.4.1.3375.2.1.6.5',
  sysSystemUptime => '1.3.6.1.4.1.3375.2.1.6.6',
  sysSystemUptimeInSec => '1.3.6.1.4.1.3375.2.1.6.7',
  sysHostInfoStat => '1.3.6.1.4.1.3375.2.1.7',
  sysHostMemory => '1.3.6.1.4.1.3375.2.1.7.1',
  sysHostMemoryTotal => '1.3.6.1.4.1.3375.2.1.7.1.1',
  sysHostMemoryUsed => '1.3.6.1.4.1.3375.2.1.7.1.2',
  sysHostMemoryTotalKb => '1.3.6.1.4.1.3375.2.1.7.1.3',
  sysHostMemoryUsedKb => '1.3.6.1.4.1.3375.2.1.7.1.4',
  sysHostCpu => '1.3.6.1.4.1.3375.2.1.7.2',
  sysHostCpuNumber => '1.3.6.1.4.1.3375.2.1.7.2.1',
  sysHostCpuTable => '1.3.6.1.4.1.3375.2.1.7.2.2',
  sysHostCpuEntry => '1.3.6.1.4.1.3375.2.1.7.2.2.1',
  sysHostCpuIndex => '1.3.6.1.4.1.3375.2.1.7.2.2.1.1',
  sysHostCpuId => '1.3.6.1.4.1.3375.2.1.7.2.2.1.2',
  sysHostCpuUser => '1.3.6.1.4.1.3375.2.1.7.2.2.1.3',
  sysHostCpuNice => '1.3.6.1.4.1.3375.2.1.7.2.2.1.4',
  sysHostCpuSystem => '1.3.6.1.4.1.3375.2.1.7.2.2.1.5',
  sysHostCpuIdle => '1.3.6.1.4.1.3375.2.1.7.2.2.1.6',
  sysHostCpuIrq => '1.3.6.1.4.1.3375.2.1.7.2.2.1.7',
  sysHostCpuSoftirq => '1.3.6.1.4.1.3375.2.1.7.2.2.1.8',
  sysHostCpuIowait => '1.3.6.1.4.1.3375.2.1.7.2.2.1.9',
  sysHostDisk => '1.3.6.1.4.1.3375.2.1.7.3',
  sysHostDiskNumber => '1.3.6.1.4.1.3375.2.1.7.3.1',
  sysHostDiskTable => '1.3.6.1.4.1.3375.2.1.7.3.2',
  sysHostDiskEntry => '1.3.6.1.4.1.3375.2.1.7.3.2.1',
  sysHostDiskPartition => '1.3.6.1.4.1.3375.2.1.7.3.2.1.1',
  sysHostDiskBlockSize => '1.3.6.1.4.1.3375.2.1.7.3.2.1.2',
  sysHostDiskTotalBlocks => '1.3.6.1.4.1.3375.2.1.7.3.2.1.3',
  sysHostDiskFreeBlocks => '1.3.6.1.4.1.3375.2.1.7.3.2.1.4',
  sysHostDiskTotalNodes => '1.3.6.1.4.1.3375.2.1.7.3.2.1.5',
  sysHostDiskFreeNodes => '1.3.6.1.4.1.3375.2.1.7.3.2.1.6',
  sysMultiHost => '1.3.6.1.4.1.3375.2.1.7.4',
  sysMultiHostNumber => '1.3.6.1.4.1.3375.2.1.7.4.1',
  sysMultiHostTable => '1.3.6.1.4.1.3375.2.1.7.4.2',
  sysMultiHostEntry => '1.3.6.1.4.1.3375.2.1.7.4.2.1',
  sysMultiHostHostId => '1.3.6.1.4.1.3375.2.1.7.4.2.1.1',
  sysMultiHostTotal => '1.3.6.1.4.1.3375.2.1.7.4.2.1.2',
  sysMultiHostUsed => '1.3.6.1.4.1.3375.2.1.7.4.2.1.3',
  sysMultiHostMode => '1.3.6.1.4.1.3375.2.1.7.4.2.1.4',
  sysMultiHostModeDefinition => 'F5-BIGIP-SYSTEM-MIB::sysMultiHostMode',
  sysMultiHostCpuCount => '1.3.6.1.4.1.3375.2.1.7.4.2.1.5',
  sysMultiHostActiveCpuCount => '1.3.6.1.4.1.3375.2.1.7.4.2.1.6',
  sysMultiHostOtherMemoryTotal => '1.3.6.1.4.1.3375.2.1.7.4.2.1.7',
  sysMultiHostOtherMemoryUsed => '1.3.6.1.4.1.3375.2.1.7.4.2.1.8',
  sysMultiHostSwapTotal => '1.3.6.1.4.1.3375.2.1.7.4.2.1.9',
  sysMultiHostSwapUsed => '1.3.6.1.4.1.3375.2.1.7.4.2.1.10',
  sysMultiHostTotalKb => '1.3.6.1.4.1.3375.2.1.7.4.2.1.11',
  sysMultiHostUsedKb => '1.3.6.1.4.1.3375.2.1.7.4.2.1.12',
  sysMultiHostOtherMemoryTotalKb => '1.3.6.1.4.1.3375.2.1.7.4.2.1.13',
  sysMultiHostOtherMemoryUsedKb => '1.3.6.1.4.1.3375.2.1.7.4.2.1.14',
  sysMultiHostSwapTotalKb => '1.3.6.1.4.1.3375.2.1.7.4.2.1.15',
  sysMultiHostSwapUsedKb => '1.3.6.1.4.1.3375.2.1.7.4.2.1.16',
  sysMultiHostCpu => '1.3.6.1.4.1.3375.2.1.7.5',
  sysMultiHostCpuNumber => '1.3.6.1.4.1.3375.2.1.7.5.1',
  sysMultiHostCpuTable => '1.3.6.1.4.1.3375.2.1.7.5.2',
  sysMultiHostCpuEntry => '1.3.6.1.4.1.3375.2.1.7.5.2.1',
  sysMultiHostCpuHostId => '1.3.6.1.4.1.3375.2.1.7.5.2.1.1',
  sysMultiHostCpuIndex => '1.3.6.1.4.1.3375.2.1.7.5.2.1.2',
  sysMultiHostCpuId => '1.3.6.1.4.1.3375.2.1.7.5.2.1.3',
  sysMultiHostCpuUser => '1.3.6.1.4.1.3375.2.1.7.5.2.1.4',
  sysMultiHostCpuNice => '1.3.6.1.4.1.3375.2.1.7.5.2.1.5',
  sysMultiHostCpuSystem => '1.3.6.1.4.1.3375.2.1.7.5.2.1.6',
  sysMultiHostCpuIdle => '1.3.6.1.4.1.3375.2.1.7.5.2.1.7',
  sysMultiHostCpuIrq => '1.3.6.1.4.1.3375.2.1.7.5.2.1.8',
  sysMultiHostCpuSoftirq => '1.3.6.1.4.1.3375.2.1.7.5.2.1.9',
  sysMultiHostCpuIowait => '1.3.6.1.4.1.3375.2.1.7.5.2.1.10',
  sysMultiHostCpuUsageRatio => '1.3.6.1.4.1.3375.2.1.7.5.2.1.11',
  sysMultiHostCpuUser5s => '1.3.6.1.4.1.3375.2.1.7.5.2.1.12',
  sysMultiHostCpuNice5s => '1.3.6.1.4.1.3375.2.1.7.5.2.1.13',
  sysMultiHostCpuSystem5s => '1.3.6.1.4.1.3375.2.1.7.5.2.1.14',
  sysMultiHostCpuIdle5s => '1.3.6.1.4.1.3375.2.1.7.5.2.1.15',
  sysMultiHostCpuIrq5s => '1.3.6.1.4.1.3375.2.1.7.5.2.1.16',
  sysMultiHostCpuSoftirq5s => '1.3.6.1.4.1.3375.2.1.7.5.2.1.17',
  sysMultiHostCpuIowait5s => '1.3.6.1.4.1.3375.2.1.7.5.2.1.18',
  sysMultiHostCpuUsageRatio5s => '1.3.6.1.4.1.3375.2.1.7.5.2.1.19',
  sysMultiHostCpuUser1m => '1.3.6.1.4.1.3375.2.1.7.5.2.1.20',
  sysMultiHostCpuNice1m => '1.3.6.1.4.1.3375.2.1.7.5.2.1.21',
  sysMultiHostCpuSystem1m => '1.3.6.1.4.1.3375.2.1.7.5.2.1.22',
  sysMultiHostCpuIdle1m => '1.3.6.1.4.1.3375.2.1.7.5.2.1.23',
  sysMultiHostCpuIrq1m => '1.3.6.1.4.1.3375.2.1.7.5.2.1.24',
  sysMultiHostCpuSoftirq1m => '1.3.6.1.4.1.3375.2.1.7.5.2.1.25',
  sysMultiHostCpuIowait1m => '1.3.6.1.4.1.3375.2.1.7.5.2.1.26',
  sysMultiHostCpuUsageRatio1m => '1.3.6.1.4.1.3375.2.1.7.5.2.1.27',
  sysMultiHostCpuUser5m => '1.3.6.1.4.1.3375.2.1.7.5.2.1.28',
  sysMultiHostCpuNice5m => '1.3.6.1.4.1.3375.2.1.7.5.2.1.29',
  sysMultiHostCpuSystem5m => '1.3.6.1.4.1.3375.2.1.7.5.2.1.30',
  sysMultiHostCpuIdle5m => '1.3.6.1.4.1.3375.2.1.7.5.2.1.31',
  sysMultiHostCpuIrq5m => '1.3.6.1.4.1.3375.2.1.7.5.2.1.32',
  sysMultiHostCpuSoftirq5m => '1.3.6.1.4.1.3375.2.1.7.5.2.1.33',
  sysMultiHostCpuIowait5m => '1.3.6.1.4.1.3375.2.1.7.5.2.1.34',
  sysMultiHostCpuUsageRatio5m => '1.3.6.1.4.1.3375.2.1.7.5.2.1.35',
  sysMultiHostCpuStolen => '1.3.6.1.4.1.3375.2.1.7.5.2.1.36',
  sysMultiHostCpuStolen5s => '1.3.6.1.4.1.3375.2.1.7.5.2.1.37',
  sysMultiHostCpuStolen1m => '1.3.6.1.4.1.3375.2.1.7.5.2.1.38',
  sysMultiHostCpuStolen5m => '1.3.6.1.4.1.3375.2.1.7.5.2.1.39',
  sysMultiHostCpuSlotId => '1.3.6.1.4.1.3375.2.1.7.5.2.1.40',
  sysLogicalDisk => '1.3.6.1.4.1.3375.2.1.7.6',
  sysLogicalDiskNumber => '1.3.6.1.4.1.3375.2.1.7.6.1',
  sysLogicalDiskTable => '1.3.6.1.4.1.3375.2.1.7.6.2',
  sysLogicalDiskEntry => '1.3.6.1.4.1.3375.2.1.7.6.2.1',
  sysLogicalDiskSlotId => '1.3.6.1.4.1.3375.2.1.7.6.2.1.1',
  sysLogicalDiskName => '1.3.6.1.4.1.3375.2.1.7.6.2.1.2',
  sysLogicalDiskDevname => '1.3.6.1.4.1.3375.2.1.7.6.2.1.3',
  sysLogicalDiskMedia => '1.3.6.1.4.1.3375.2.1.7.6.2.1.4',
  sysLogicalDiskSize => '1.3.6.1.4.1.3375.2.1.7.6.2.1.5',
  sysLogicalDiskFormat => '1.3.6.1.4.1.3375.2.1.7.6.2.1.6',
  sysPhysicalDisk => '1.3.6.1.4.1.3375.2.1.7.7',
  sysPhysicalDiskNumber => '1.3.6.1.4.1.3375.2.1.7.7.1',
  sysPhysicalDiskTable => '1.3.6.1.4.1.3375.2.1.7.7.2',
  sysPhysicalDiskEntry => '1.3.6.1.4.1.3375.2.1.7.7.2.1',
  sysPhysicalDiskSerialNumber => '1.3.6.1.4.1.3375.2.1.7.7.2.1.1',
  sysPhysicalDiskSlotId => '1.3.6.1.4.1.3375.2.1.7.7.2.1.2',
  sysPhysicalDiskName => '1.3.6.1.4.1.3375.2.1.7.7.2.1.3',
  sysPhysicalDiskIsArrayMember => '1.3.6.1.4.1.3375.2.1.7.7.2.1.4',
  sysPhysicalDiskIsArrayMemberDefinition => 'F5-BIGIP-SYSTEM-MIB::sysPhysicalDiskIsArrayMember',
  sysPhysicalDiskArrayStatus => '1.3.6.1.4.1.3375.2.1.7.7.2.1.5',
  sysPhysicalDiskArrayStatusDefinition => 'F5-BIGIP-SYSTEM-MIB::sysPhysicalDiskArrayStatus',
  sysDiskBay => '1.3.6.1.4.1.3375.2.1.7.8',
  sysDiskBayNumber => '1.3.6.1.4.1.3375.2.1.7.8.1',
  sysDiskBayTable => '1.3.6.1.4.1.3375.2.1.7.8.2',
  sysDiskBayEntry => '1.3.6.1.4.1.3375.2.1.7.8.2.1',
  sysDiskBayId => '1.3.6.1.4.1.3375.2.1.7.8.2.1.1',
  sysDiskBayDiskSerialNumber => '1.3.6.1.4.1.3375.2.1.7.8.2.1.2',
  sysLogicalDiskMembers => '1.3.6.1.4.1.3375.2.1.7.9',
  sysLogicalDiskMembersNumber => '1.3.6.1.4.1.3375.2.1.7.9.1',
  sysLogicalDiskMembersTable => '1.3.6.1.4.1.3375.2.1.7.9.2',
  sysLogicalDiskMembersEntry => '1.3.6.1.4.1.3375.2.1.7.9.2.1',
  sysLogicalDiskMembersDevname => '1.3.6.1.4.1.3375.2.1.7.9.2.1.1',
  sysLogicalDiskMembersSerialNumber => '1.3.6.1.4.1.3375.2.1.7.9.2.1.2',
  sysLogicalDiskMembersSlotId => '1.3.6.1.4.1.3375.2.1.7.9.2.1.3',
  sysSystemStat => '1.3.6.1.4.1.3375.2.1.8',
  sysPvaStat => '1.3.6.1.4.1.3375.2.1.8.1',
  sysPvaStatResetStats => '1.3.6.1.4.1.3375.2.1.8.1.1',
  sysPvaStatNumber => '1.3.6.1.4.1.3375.2.1.8.1.2',
  sysPvaStatTable => '1.3.6.1.4.1.3375.2.1.8.1.3',
  sysPvaStatEntry => '1.3.6.1.4.1.3375.2.1.8.1.3.1',
  sysPvaStatPvaId => '1.3.6.1.4.1.3375.2.1.8.1.3.1.1',
  sysPvaStatClientPktsIn => '1.3.6.1.4.1.3375.2.1.8.1.3.1.2',
  sysPvaStatClientBytesIn => '1.3.6.1.4.1.3375.2.1.8.1.3.1.3',
  sysPvaStatClientPktsOut => '1.3.6.1.4.1.3375.2.1.8.1.3.1.4',
  sysPvaStatClientBytesOut => '1.3.6.1.4.1.3375.2.1.8.1.3.1.5',
  sysPvaStatClientMaxConns => '1.3.6.1.4.1.3375.2.1.8.1.3.1.6',
  sysPvaStatClientTotConns => '1.3.6.1.4.1.3375.2.1.8.1.3.1.7',
  sysPvaStatClientCurConns => '1.3.6.1.4.1.3375.2.1.8.1.3.1.8',
  sysPvaStatServerPktsIn => '1.3.6.1.4.1.3375.2.1.8.1.3.1.9',
  sysPvaStatServerBytesIn => '1.3.6.1.4.1.3375.2.1.8.1.3.1.10',
  sysPvaStatServerPktsOut => '1.3.6.1.4.1.3375.2.1.8.1.3.1.11',
  sysPvaStatServerBytesOut => '1.3.6.1.4.1.3375.2.1.8.1.3.1.12',
  sysPvaStatServerMaxConns => '1.3.6.1.4.1.3375.2.1.8.1.3.1.13',
  sysPvaStatServerTotConns => '1.3.6.1.4.1.3375.2.1.8.1.3.1.14',
  sysPvaStatServerCurConns => '1.3.6.1.4.1.3375.2.1.8.1.3.1.15',
  sysPvaStatTotAssistConns => '1.3.6.1.4.1.3375.2.1.8.1.3.1.16',
  sysPvaStatCurAssistConns => '1.3.6.1.4.1.3375.2.1.8.1.3.1.17',
  sysPvaStatHardSyncookieGen => '1.3.6.1.4.1.3375.2.1.8.1.3.1.18',
  sysPvaStatHardSyncookieDet => '1.3.6.1.4.1.3375.2.1.8.1.3.1.19',
  sysTmmStat => '1.3.6.1.4.1.3375.2.1.8.2',
  sysTmmStatResetStats => '1.3.6.1.4.1.3375.2.1.8.2.1',
  sysTmmStatNumber => '1.3.6.1.4.1.3375.2.1.8.2.2',
  sysTmmStatTable => '1.3.6.1.4.1.3375.2.1.8.2.3',
  sysTmmStatEntry => '1.3.6.1.4.1.3375.2.1.8.2.3.1',
  sysTmmStatTmmId => '1.3.6.1.4.1.3375.2.1.8.2.3.1.1',
  sysTmmStatTmmPid => '1.3.6.1.4.1.3375.2.1.8.2.3.1.2',
  sysTmmStatCpu => '1.3.6.1.4.1.3375.2.1.8.2.3.1.3',
  sysTmmStatTmid => '1.3.6.1.4.1.3375.2.1.8.2.3.1.4',
  sysTmmStatNpus => '1.3.6.1.4.1.3375.2.1.8.2.3.1.5',
  sysTmmStatClientPktsIn => '1.3.6.1.4.1.3375.2.1.8.2.3.1.6',
  sysTmmStatClientBytesIn => '1.3.6.1.4.1.3375.2.1.8.2.3.1.7',
  sysTmmStatClientPktsOut => '1.3.6.1.4.1.3375.2.1.8.2.3.1.8',
  sysTmmStatClientBytesOut => '1.3.6.1.4.1.3375.2.1.8.2.3.1.9',
  sysTmmStatClientMaxConns => '1.3.6.1.4.1.3375.2.1.8.2.3.1.10',
  sysTmmStatClientTotConns => '1.3.6.1.4.1.3375.2.1.8.2.3.1.11',
  sysTmmStatClientCurConns => '1.3.6.1.4.1.3375.2.1.8.2.3.1.12',
  sysTmmStatServerPktsIn => '1.3.6.1.4.1.3375.2.1.8.2.3.1.13',
  sysTmmStatServerBytesIn => '1.3.6.1.4.1.3375.2.1.8.2.3.1.14',
  sysTmmStatServerPktsOut => '1.3.6.1.4.1.3375.2.1.8.2.3.1.15',
  sysTmmStatServerBytesOut => '1.3.6.1.4.1.3375.2.1.8.2.3.1.16',
  sysTmmStatServerMaxConns => '1.3.6.1.4.1.3375.2.1.8.2.3.1.17',
  sysTmmStatServerTotConns => '1.3.6.1.4.1.3375.2.1.8.2.3.1.18',
  sysTmmStatServerCurConns => '1.3.6.1.4.1.3375.2.1.8.2.3.1.19',
  sysTmmStatMaintenanceModeDeny => '1.3.6.1.4.1.3375.2.1.8.2.3.1.20',
  sysTmmStatMaxConnVirtualAddrDeny => '1.3.6.1.4.1.3375.2.1.8.2.3.1.21',
  sysTmmStatMaxConnVirtualPathDeny => '1.3.6.1.4.1.3375.2.1.8.2.3.1.22',
  sysTmmStatVirtualServerNonSynDeny => '1.3.6.1.4.1.3375.2.1.8.2.3.1.23',
  sysTmmStatNoHandlerDeny => '1.3.6.1.4.1.3375.2.1.8.2.3.1.24',
  sysTmmStatLicenseDeny => '1.3.6.1.4.1.3375.2.1.8.2.3.1.25',
  sysTmmStatCmpConnRedirected => '1.3.6.1.4.1.3375.2.1.8.2.3.1.26',
  sysTmmStatConnectionMemoryErrors => '1.3.6.1.4.1.3375.2.1.8.2.3.1.27',
  sysTmmStatTmTotalCycles => '1.3.6.1.4.1.3375.2.1.8.2.3.1.28',
  sysTmmStatTmIdleCycles => '1.3.6.1.4.1.3375.2.1.8.2.3.1.29',
  sysTmmStatTmSleepCycles => '1.3.6.1.4.1.3375.2.1.8.2.3.1.30',
  sysTmmStatMemoryTotal => '1.3.6.1.4.1.3375.2.1.8.2.3.1.31',
  sysTmmStatMemoryUsed => '1.3.6.1.4.1.3375.2.1.8.2.3.1.32',
  sysTmmStatDroppedPackets => '1.3.6.1.4.1.3375.2.1.8.2.3.1.33',
  sysTmmStatIncomingPacketErrors => '1.3.6.1.4.1.3375.2.1.8.2.3.1.34',
  sysTmmStatOutgoingPacketErrors => '1.3.6.1.4.1.3375.2.1.8.2.3.1.35',
  sysTmmStatHttpRequests => '1.3.6.1.4.1.3375.2.1.8.2.3.1.36',
  sysTmmStatTmUsageRatio5s => '1.3.6.1.4.1.3375.2.1.8.2.3.1.37',
  sysTmmStatTmUsageRatio1m => '1.3.6.1.4.1.3375.2.1.8.2.3.1.38',
  sysTmmStatTmUsageRatio5m => '1.3.6.1.4.1.3375.2.1.8.2.3.1.39',
  sysTmmStatSlotId => '1.3.6.1.4.1.3375.2.1.8.2.3.1.40',
  sysTmmStatMemoryTotalKb => '1.3.6.1.4.1.3375.2.1.8.2.3.1.41',
  sysTmmStatMemoryUsedKb => '1.3.6.1.4.1.3375.2.1.8.2.3.1.42',
  sysTmmStatClientEvictedConns => '1.3.6.1.4.1.3375.2.1.8.2.3.1.43',
  sysTmmStatClientSlowKilled => '1.3.6.1.4.1.3375.2.1.8.2.3.1.44',
  sysTmmStatServerEvictedConns => '1.3.6.1.4.1.3375.2.1.8.2.3.1.45',
  sysTmmStatServerSlowKilled => '1.3.6.1.4.1.3375.2.1.8.2.3.1.46',
  sysTmmStatSwSyncookies => '1.3.6.1.4.1.3375.2.1.8.2.3.1.47',
  sysTmmStatSwSyncookieAccepts => '1.3.6.1.4.1.3375.2.1.8.2.3.1.48',
  sysTmmStatSyncookieRejects => '1.3.6.1.4.1.3375.2.1.8.2.3.1.49',
  sysTmmStatHwSyncookies => '1.3.6.1.4.1.3375.2.1.8.2.3.1.50',
  sysTmmStatHwSyncookieAccepts => '1.3.6.1.4.1.3375.2.1.8.2.3.1.51',
  sysTmmStatWlSyncookieHits => '1.3.6.1.4.1.3375.2.1.8.2.3.1.52',
  sysTmmStatWlSyncookieAccepts => '1.3.6.1.4.1.3375.2.1.8.2.3.1.53',
  sysTmmStatWlSyncookieRejects => '1.3.6.1.4.1.3375.2.1.8.2.3.1.54',
  sysTmmStatConnectionFlowMiss => '1.3.6.1.4.1.3375.2.1.8.2.3.1.55',
  sysSoftware => '1.3.6.1.4.1.3375.2.1.9',
  sysSoftwareVolume => '1.3.6.1.4.1.3375.2.1.9.1',
  sysSwVolumeNumber => '1.3.6.1.4.1.3375.2.1.9.1.1',
  sysSwVolumeTable => '1.3.6.1.4.1.3375.2.1.9.1.2',
  sysSwVolumeEntry => '1.3.6.1.4.1.3375.2.1.9.1.2.1',
  sysSwVolumeSlotId => '1.3.6.1.4.1.3375.2.1.9.1.2.1.1',
  sysSwVolumeName => '1.3.6.1.4.1.3375.2.1.9.1.2.1.2',
  sysSwVolumeSize => '1.3.6.1.4.1.3375.2.1.9.1.2.1.3',
  sysSwVolumeActive => '1.3.6.1.4.1.3375.2.1.9.1.2.1.4',
  sysSwVolumeActiveDefinition => 'F5-BIGIP-SYSTEM-MIB::sysSwVolumeActive',
  sysSoftwareImage => '1.3.6.1.4.1.3375.2.1.9.2',
  sysSwImageNumber => '1.3.6.1.4.1.3375.2.1.9.2.1',
  sysSwImageTable => '1.3.6.1.4.1.3375.2.1.9.2.2',
  sysSwImageEntry => '1.3.6.1.4.1.3375.2.1.9.2.2.1',
  sysSwImageSlotId => '1.3.6.1.4.1.3375.2.1.9.2.2.1.1',
  sysSwImageFilename => '1.3.6.1.4.1.3375.2.1.9.2.2.1.2',
  sysSwImageProduct => '1.3.6.1.4.1.3375.2.1.9.2.2.1.3',
  sysSwImageVersion => '1.3.6.1.4.1.3375.2.1.9.2.2.1.4',
  sysSwImageBuild => '1.3.6.1.4.1.3375.2.1.9.2.2.1.5',
  sysSwImageChksum => '1.3.6.1.4.1.3375.2.1.9.2.2.1.6',
  sysSwImageVerified => '1.3.6.1.4.1.3375.2.1.9.2.2.1.7',
  sysSwImageVerifiedDefinition => 'F5-BIGIP-SYSTEM-MIB::sysSwImageVerified',
  sysSwImageBuildDate => '1.3.6.1.4.1.3375.2.1.9.2.2.1.8',
  sysSwImageLastModified => '1.3.6.1.4.1.3375.2.1.9.2.2.1.9',
  sysSwImageFileSize => '1.3.6.1.4.1.3375.2.1.9.2.2.1.10',
  sysSoftwareHotfix => '1.3.6.1.4.1.3375.2.1.9.3',
  sysSwHotfixNumber => '1.3.6.1.4.1.3375.2.1.9.3.1',
  sysSwHotfixTable => '1.3.6.1.4.1.3375.2.1.9.3.2',
  sysSwHotfixEntry => '1.3.6.1.4.1.3375.2.1.9.3.2.1',
  sysSwHotfixSlotId => '1.3.6.1.4.1.3375.2.1.9.3.2.1.1',
  sysSwHotfixFilename => '1.3.6.1.4.1.3375.2.1.9.3.2.1.2',
  sysSwHotfixProduct => '1.3.6.1.4.1.3375.2.1.9.3.2.1.3',
  sysSwHotfixVersion => '1.3.6.1.4.1.3375.2.1.9.3.2.1.4',
  sysSwHotfixBuild => '1.3.6.1.4.1.3375.2.1.9.3.2.1.5',
  sysSwHotfixChksum => '1.3.6.1.4.1.3375.2.1.9.3.2.1.6',
  sysSwHotfixVerified => '1.3.6.1.4.1.3375.2.1.9.3.2.1.7',
  sysSwHotfixVerifiedDefinition => 'F5-BIGIP-SYSTEM-MIB::sysSwHotfixVerified',
  sysSwHotfixHotfixId => '1.3.6.1.4.1.3375.2.1.9.3.2.1.8',
  sysSwHotfixHotfixTitle => '1.3.6.1.4.1.3375.2.1.9.3.2.1.9',
  sysSoftwareStatus => '1.3.6.1.4.1.3375.2.1.9.4',
  sysSwStatusNumber => '1.3.6.1.4.1.3375.2.1.9.4.1',
  sysSwStatusTable => '1.3.6.1.4.1.3375.2.1.9.4.2',
  sysSwStatusEntry => '1.3.6.1.4.1.3375.2.1.9.4.2.1',
  sysSwStatusSlotId => '1.3.6.1.4.1.3375.2.1.9.4.2.1.1',
  sysSwStatusVolume => '1.3.6.1.4.1.3375.2.1.9.4.2.1.2',
  sysSwStatusProduct => '1.3.6.1.4.1.3375.2.1.9.4.2.1.3',
  sysSwStatusVersion => '1.3.6.1.4.1.3375.2.1.9.4.2.1.4',
  sysSwStatusBuild => '1.3.6.1.4.1.3375.2.1.9.4.2.1.5',
  sysSwStatusActive => '1.3.6.1.4.1.3375.2.1.9.4.2.1.6',
  sysSwStatusActiveDefinition => 'F5-BIGIP-SYSTEM-MIB::sysSwStatusActive',
  sysClusters => '1.3.6.1.4.1.3375.2.1.10',
  sysCluster => '1.3.6.1.4.1.3375.2.1.10.1',
  sysClusterNumber => '1.3.6.1.4.1.3375.2.1.10.1.1',
  sysClusterTable => '1.3.6.1.4.1.3375.2.1.10.1.2',
  sysClusterEntry => '1.3.6.1.4.1.3375.2.1.10.1.2.1',
  sysClusterName => '1.3.6.1.4.1.3375.2.1.10.1.2.1.1',
  sysClusterEnabled => '1.3.6.1.4.1.3375.2.1.10.1.2.1.2',
  sysClusterEnabledDefinition => 'F5-BIGIP-SYSTEM-MIB::sysClusterEnabled',
  sysClusterFloatMgmtIpType => '1.3.6.1.4.1.3375.2.1.10.1.2.1.3',
  sysClusterFloatMgmtIp => '1.3.6.1.4.1.3375.2.1.10.1.2.1.4',
  sysClusterFloatMgmtNetmaskType => '1.3.6.1.4.1.3375.2.1.10.1.2.1.5',
  sysClusterFloatMgmtNetmask => '1.3.6.1.4.1.3375.2.1.10.1.2.1.6',
  sysClusterMinUpMbrs => '1.3.6.1.4.1.3375.2.1.10.1.2.1.7',
  sysClusterMinUpMbrsEnable => '1.3.6.1.4.1.3375.2.1.10.1.2.1.8',
  sysClusterMinUpMbrsAction => '1.3.6.1.4.1.3375.2.1.10.1.2.1.9',
  sysClusterMinUpMbrsActionDefinition => 'F5-BIGIP-SYSTEM-MIB::sysClusterMinUpMbrsAction',
  sysClusterAvailabilityState => '1.3.6.1.4.1.3375.2.1.10.1.2.1.10',
  sysClusterAvailabilityStateDefinition => 'F5-BIGIP-SYSTEM-MIB::sysClusterAvailabilityState',
  sysClusterEnabledStat => '1.3.6.1.4.1.3375.2.1.10.1.2.1.11',
  sysClusterEnabledStatDefinition => 'F5-BIGIP-SYSTEM-MIB::sysClusterEnabledStat',
  sysClusterDisabledParentType => '1.3.6.1.4.1.3375.2.1.10.1.2.1.12',
  sysClusterStatusReason => '1.3.6.1.4.1.3375.2.1.10.1.2.1.13',
  sysClusterHaState => '1.3.6.1.4.1.3375.2.1.10.1.2.1.14',
  sysClusterHaStateDefinition => 'F5-BIGIP-SYSTEM-MIB::sysClusterHaState',
  sysClusterPriSlotId => '1.3.6.1.4.1.3375.2.1.10.1.2.1.15',
  sysClusterLastPriSlotId => '1.3.6.1.4.1.3375.2.1.10.1.2.1.16',
  sysClusterPriSelTime => '1.3.6.1.4.1.3375.2.1.10.1.2.1.17',
  sysClusterMbr => '1.3.6.1.4.1.3375.2.1.10.2',
  sysClusterMbrNumber => '1.3.6.1.4.1.3375.2.1.10.2.1',
  sysClusterMbrTable => '1.3.6.1.4.1.3375.2.1.10.2.2',
  sysClusterMbrEntry => '1.3.6.1.4.1.3375.2.1.10.2.2.1',
  sysClusterMbrCluster => '1.3.6.1.4.1.3375.2.1.10.2.2.1.1',
  sysClusterMbrSlotId => '1.3.6.1.4.1.3375.2.1.10.2.2.1.2',
  sysClusterMbrAvailabilityState => '1.3.6.1.4.1.3375.2.1.10.2.2.1.3',
  sysClusterMbrAvailabilityStateDefinition => 'F5-BIGIP-SYSTEM-MIB::sysClusterMbrAvailabilityState',
  sysClusterMbrEnabledStat => '1.3.6.1.4.1.3375.2.1.10.2.2.1.4',
  sysClusterMbrEnabledStatDefinition => 'F5-BIGIP-SYSTEM-MIB::sysClusterMbrEnabledStat',
  sysClusterMbrDisabledParentType => '1.3.6.1.4.1.3375.2.1.10.2.2.1.5',
  sysClusterMbrStatusReason => '1.3.6.1.4.1.3375.2.1.10.2.2.1.6',
  sysClusterMbrLicensed => '1.3.6.1.4.1.3375.2.1.10.2.2.1.7',
  sysClusterMbrLicensedDefinition => 'F5-BIGIP-SYSTEM-MIB::sysClusterMbrLicensed',
  sysClusterMbrState => '1.3.6.1.4.1.3375.2.1.10.2.2.1.8',
  sysClusterMbrStateDefinition => 'F5-BIGIP-SYSTEM-MIB::sysClusterMbrState',
  sysClusterMbrEnabled => '1.3.6.1.4.1.3375.2.1.10.2.2.1.9',
  sysClusterMbrEnabledDefinition => 'F5-BIGIP-SYSTEM-MIB::sysClusterMbrEnabled',
  sysClusterMbrPriming => '1.3.6.1.4.1.3375.2.1.10.2.2.1.10',
  sysClusterMbrPrimingDefinition => 'F5-BIGIP-SYSTEM-MIB::sysClusterMbrPriming',
  sysClusterMbrMgmtAddrType => '1.3.6.1.4.1.3375.2.1.10.2.2.1.11',
  sysClusterMbrMgmtAddr => '1.3.6.1.4.1.3375.2.1.10.2.2.1.12',
  sysClusterMbrHaState => '1.3.6.1.4.1.3375.2.1.10.2.2.1.13',
  sysClusterMbrHaStateDefinition => 'F5-BIGIP-SYSTEM-MIB::sysClusterMbrHaState',
  sysChassisSlot => '1.3.6.1.4.1.3375.2.1.10.3',
  sysChassisSlotNumber => '1.3.6.1.4.1.3375.2.1.10.3.1',
  sysChassisSlotTable => '1.3.6.1.4.1.3375.2.1.10.3.2',
  sysChassisSlotEntry => '1.3.6.1.4.1.3375.2.1.10.3.2.1',
  sysChassisSlotSlotId => '1.3.6.1.4.1.3375.2.1.10.3.2.1.1',
  sysChassisSlotSerialNumber => '1.3.6.1.4.1.3375.2.1.10.3.2.1.2',
  sysChassisSlotDown => '1.3.6.1.4.1.3375.2.1.10.3.2.1.3',
  sysChassisSlotDownDefinition => 'F5-BIGIP-SYSTEM-MIB::sysChassisSlotDown',
  sysChassisSlotState => '1.3.6.1.4.1.3375.2.1.10.3.2.1.4',
  sysChassisSlotStateDefinition => 'F5-BIGIP-SYSTEM-MIB::sysChassisSlotState',
  sysModules => '1.3.6.1.4.1.3375.2.1.11',
  sysModuleAllocation => '1.3.6.1.4.1.3375.2.1.11.1',
  sysModuleAllocationNumber => '1.3.6.1.4.1.3375.2.1.11.1.1',
  sysModuleAllocationTable => '1.3.6.1.4.1.3375.2.1.11.1.2',
  sysModuleAllocationEntry => '1.3.6.1.4.1.3375.2.1.11.1.2.1',
  sysModuleAllocationName => '1.3.6.1.4.1.3375.2.1.11.1.2.1.1',
  sysModuleAllocationProvisionLevel => '1.3.6.1.4.1.3375.2.1.11.1.2.1.2',
  sysModuleAllocationProvisionLevelDefinition => 'F5-BIGIP-SYSTEM-MIB::sysModuleAllocationProvisionLevel',
  sysModuleAllocationMemoryRatio => '1.3.6.1.4.1.3375.2.1.11.1.2.1.3',
  sysModuleAllocationCpuRatio => '1.3.6.1.4.1.3375.2.1.11.1.2.1.4',
  sysModuleAllocationDiskRatio => '1.3.6.1.4.1.3375.2.1.11.1.2.1.5',
  sysProcess => '1.3.6.1.4.1.3375.2.1.12',
  sysProcPidStat => '1.3.6.1.4.1.3375.2.1.12.1',
  sysProcPidStatNumber => '1.3.6.1.4.1.3375.2.1.12.1.1',
  sysProcPidStatTable => '1.3.6.1.4.1.3375.2.1.12.1.2',
  sysProcPidStatEntry => '1.3.6.1.4.1.3375.2.1.12.1.2.1',
  sysProcPidStatPid => '1.3.6.1.4.1.3375.2.1.12.1.2.1.1',
  sysProcPidStatProcName => '1.3.6.1.4.1.3375.2.1.12.1.2.1.2',
  sysProcPidStatCommandLine => '1.3.6.1.4.1.3375.2.1.12.1.2.1.3',
  sysProcPidStatModules => '1.3.6.1.4.1.3375.2.1.12.1.2.1.4',
  sysProcPidStatBladeNum => '1.3.6.1.4.1.3375.2.1.12.1.2.1.5',
  sysProcPidStatProcessor => '1.3.6.1.4.1.3375.2.1.12.1.2.1.6',
  sysProcPidStatUpdateTime => '1.3.6.1.4.1.3375.2.1.12.1.2.1.7',
  sysProcPidStatCpuUsageRecent => '1.3.6.1.4.1.3375.2.1.12.1.2.1.8',
  sysProcPidStatCpuUsage1min => '1.3.6.1.4.1.3375.2.1.12.1.2.1.9',
  sysProcPidStatCpuUsage5mins => '1.3.6.1.4.1.3375.2.1.12.1.2.1.10',
  sysProcPidStatSystemUsageRecent => '1.3.6.1.4.1.3375.2.1.12.1.2.1.11',
  sysProcPidStatSystemUsage1min => '1.3.6.1.4.1.3375.2.1.12.1.2.1.12',
  sysProcPidStatSystemUsage5mins => '1.3.6.1.4.1.3375.2.1.12.1.2.1.13',
  sysProcPidStatPpid => '1.3.6.1.4.1.3375.2.1.12.1.2.1.14',
  sysProcPidStatPgrp => '1.3.6.1.4.1.3375.2.1.12.1.2.1.15',
  sysProcPidStatState => '1.3.6.1.4.1.3375.2.1.12.1.2.1.16',
  sysProcPidStatSession => '1.3.6.1.4.1.3375.2.1.12.1.2.1.17',
  sysProcPidStatTtyNr => '1.3.6.1.4.1.3375.2.1.12.1.2.1.18',
  sysProcPidStatTpgid => '1.3.6.1.4.1.3375.2.1.12.1.2.1.19',
  sysProcPidStatFlags => '1.3.6.1.4.1.3375.2.1.12.1.2.1.20',
  sysProcPidStatMinFlt => '1.3.6.1.4.1.3375.2.1.12.1.2.1.21',
  sysProcPidStatCminFlt => '1.3.6.1.4.1.3375.2.1.12.1.2.1.22',
  sysProcPidStatMajFlt => '1.3.6.1.4.1.3375.2.1.12.1.2.1.23',
  sysProcPidStatCmajFlt => '1.3.6.1.4.1.3375.2.1.12.1.2.1.24',
  sysProcPidStatUtime => '1.3.6.1.4.1.3375.2.1.12.1.2.1.25',
  sysProcPidStatStime => '1.3.6.1.4.1.3375.2.1.12.1.2.1.26',
  sysProcPidStatCutime => '1.3.6.1.4.1.3375.2.1.12.1.2.1.27',
  sysProcPidStatCstime => '1.3.6.1.4.1.3375.2.1.12.1.2.1.28',
  sysProcPidStatPriority => '1.3.6.1.4.1.3375.2.1.12.1.2.1.29',
  sysProcPidStatNice => '1.3.6.1.4.1.3375.2.1.12.1.2.1.30',
  sysProcPidStatNumThreads => '1.3.6.1.4.1.3375.2.1.12.1.2.1.31',
  sysProcPidStatItrealvalue => '1.3.6.1.4.1.3375.2.1.12.1.2.1.32',
  sysProcPidStatStartTime => '1.3.6.1.4.1.3375.2.1.12.1.2.1.33',
  sysProcPidStatVsize => '1.3.6.1.4.1.3375.2.1.12.1.2.1.34',
  sysProcPidStatRss => '1.3.6.1.4.1.3375.2.1.12.1.2.1.35',
  sysProcPidStatRssRlim => '1.3.6.1.4.1.3375.2.1.12.1.2.1.36',
  sysProcPidStatStartCode => '1.3.6.1.4.1.3375.2.1.12.1.2.1.37',
  sysProcPidStatEndCode => '1.3.6.1.4.1.3375.2.1.12.1.2.1.38',
  sysProcPidStatStartStack => '1.3.6.1.4.1.3375.2.1.12.1.2.1.39',
  sysProcPidStatKstkEsp => '1.3.6.1.4.1.3375.2.1.12.1.2.1.40',
  sysProcPidStatKstkEip => '1.3.6.1.4.1.3375.2.1.12.1.2.1.41',
  sysProcPidStatSignal => '1.3.6.1.4.1.3375.2.1.12.1.2.1.42',
  sysProcPidStatBlocked => '1.3.6.1.4.1.3375.2.1.12.1.2.1.43',
  sysProcPidStatSigignore => '1.3.6.1.4.1.3375.2.1.12.1.2.1.44',
  sysProcPidStatSigcatch => '1.3.6.1.4.1.3375.2.1.12.1.2.1.45',
  sysProcPidStatWchan => '1.3.6.1.4.1.3375.2.1.12.1.2.1.46',
  sysProcPidStatNswap => '1.3.6.1.4.1.3375.2.1.12.1.2.1.47',
  sysProcPidStatCnswap => '1.3.6.1.4.1.3375.2.1.12.1.2.1.48',
  sysProcPidStatExitSignal => '1.3.6.1.4.1.3375.2.1.12.1.2.1.49',
  sysProcPidStatRtPriority => '1.3.6.1.4.1.3375.2.1.12.1.2.1.50',
  sysProcPidStatPolicy => '1.3.6.1.4.1.3375.2.1.12.1.2.1.51',
  sysProcPidStatProgSize => '1.3.6.1.4.1.3375.2.1.12.1.2.1.52',
  sysProcPidStatResident => '1.3.6.1.4.1.3375.2.1.12.1.2.1.53',
  sysProcPidStatShare => '1.3.6.1.4.1.3375.2.1.12.1.2.1.54',
  sysProcPidStatTSize => '1.3.6.1.4.1.3375.2.1.12.1.2.1.55',
  sysProcPidStatLSize => '1.3.6.1.4.1.3375.2.1.12.1.2.1.56',
  sysProcPidStatDSize => '1.3.6.1.4.1.3375.2.1.12.1.2.1.57',
  sysProcPidStatDirty => '1.3.6.1.4.1.3375.2.1.12.1.2.1.58',
  sysProcPidStatVsizeKb => '1.3.6.1.4.1.3375.2.1.12.1.2.1.59',
  sysVCMP => '1.3.6.1.4.1.3375.2.1.13',
  sysVcmp => '1.3.6.1.4.1.3375.2.1.13.1',
  sysVcmpNumber => '1.3.6.1.4.1.3375.2.1.13.1.1',
  sysVcmpTable => '1.3.6.1.4.1.3375.2.1.13.1.2',
  sysVcmpEntry => '1.3.6.1.4.1.3375.2.1.13.1.2.1',
  sysVcmpVcmpName => '1.3.6.1.4.1.3375.2.1.13.1.2.1.1',
  sysVcmpHostname => '1.3.6.1.4.1.3375.2.1.13.1.2.1.2',
  sysVcmpSlots => '1.3.6.1.4.1.3375.2.1.13.1.2.1.3',
  sysVcmpState => '1.3.6.1.4.1.3375.2.1.13.1.2.1.4',
  sysVcmpStateDefinition => 'F5-BIGIP-SYSTEM-MIB::sysVcmpState',
  sysVcmpMgmtNetwork => '1.3.6.1.4.1.3375.2.1.13.1.2.1.5',
  sysVcmpMgmtNetworkDefinition => 'F5-BIGIP-SYSTEM-MIB::sysVcmpMgmtNetwork',
  sysVcmpMgmtAddrType => '1.3.6.1.4.1.3375.2.1.13.1.2.1.6',
  sysVcmpMgmtAddr => '1.3.6.1.4.1.3375.2.1.13.1.2.1.7',
  sysVcmpMgmtNetmaskType => '1.3.6.1.4.1.3375.2.1.13.1.2.1.8',
  sysVcmpMgmtNetmask => '1.3.6.1.4.1.3375.2.1.13.1.2.1.9',
  sysVcmpMgmtGwType => '1.3.6.1.4.1.3375.2.1.13.1.2.1.10',
  sysVcmpMgmtGw => '1.3.6.1.4.1.3375.2.1.13.1.2.1.11',
  sysVcmpVcmpId => '1.3.6.1.4.1.3375.2.1.13.1.2.1.12',
  sysVcmpMgmtBaseMac => '1.3.6.1.4.1.3375.2.1.13.1.2.1.13',
  sysVcmpBaseMac => '1.3.6.1.4.1.3375.2.1.13.1.2.1.14',
  sysVcmpMacPoolSize => '1.3.6.1.4.1.3375.2.1.13.1.2.1.15',
  sysVcmpInitialImage => '1.3.6.1.4.1.3375.2.1.13.1.2.1.16',
  sysVcmpVirtualDisk => '1.3.6.1.4.1.3375.2.1.13.1.2.1.17',
  sysVcmpInitialHotfix => '1.3.6.1.4.1.3375.2.1.13.1.2.1.18',
  sysVcmpMinSlots => '1.3.6.1.4.1.3375.2.1.13.1.2.1.19',
  sysVcmpCoresPerSlot => '1.3.6.1.4.1.3375.2.1.13.1.2.1.20',
  sysVcmpCpuCore => '1.3.6.1.4.1.3375.2.1.13.2',
  sysVcmpCpuCoreNumber => '1.3.6.1.4.1.3375.2.1.13.2.1',
  sysVcmpCpuCoreTable => '1.3.6.1.4.1.3375.2.1.13.2.2',
  sysVcmpCpuCoreEntry => '1.3.6.1.4.1.3375.2.1.13.2.2.1',
  sysVcmpCpuCoreVcmpName => '1.3.6.1.4.1.3375.2.1.13.2.2.1.1',
  sysVcmpCpuCoreCpuCoreId => '1.3.6.1.4.1.3375.2.1.13.2.2.1.2',
  sysVcmpVlan => '1.3.6.1.4.1.3375.2.1.13.3',
  sysVcmpVlanNumber => '1.3.6.1.4.1.3375.2.1.13.3.1',
  sysVcmpVlanTable => '1.3.6.1.4.1.3375.2.1.13.3.2',
  sysVcmpVlanEntry => '1.3.6.1.4.1.3375.2.1.13.3.2.1',
  sysVcmpVlanVcmpName => '1.3.6.1.4.1.3375.2.1.13.3.2.1.1',
  sysVcmpVlanVlanName => '1.3.6.1.4.1.3375.2.1.13.3.2.1.2',
  sysVcmpStat => '1.3.6.1.4.1.3375.2.1.13.4',
  sysVcmpStatNumber => '1.3.6.1.4.1.3375.2.1.13.4.1',
  sysVcmpStatTable => '1.3.6.1.4.1.3375.2.1.13.4.2',
  sysVcmpStatEntry => '1.3.6.1.4.1.3375.2.1.13.4.2.1',
  sysVcmpStatVcmpName => '1.3.6.1.4.1.3375.2.1.13.4.2.1.1',
  sysVcmpStatVcmpId => '1.3.6.1.4.1.3375.2.1.13.4.2.1.2',
  sysVcmpStatSlotId => '1.3.6.1.4.1.3375.2.1.13.4.2.1.3',
  sysVcmpStatVmStatus => '1.3.6.1.4.1.3375.2.1.13.4.2.1.4',
  sysVcmpStatVmStatusDefinition => 'F5-BIGIP-SYSTEM-MIB::sysVcmpStatVmStatus',
  sysVcmpStatDiskUse => '1.3.6.1.4.1.3375.2.1.13.4.2.1.5',
  sysVcmpStatMemoryUse => '1.3.6.1.4.1.3375.2.1.13.4.2.1.6',
  sysVcmpStatBaseMac => '1.3.6.1.4.1.3375.2.1.13.4.2.1.7',
  sysVcmpStatMacPoolSize => '1.3.6.1.4.1.3375.2.1.13.4.2.1.8',
  sysVcmpStatCores => '1.3.6.1.4.1.3375.2.1.13.4.2.1.9',
  sysVcmpStatVdisk => '1.3.6.1.4.1.3375.2.1.13.4.2.1.10',
  sysVcmpStatStarts => '1.3.6.1.4.1.3375.2.1.13.4.2.1.11',
  sysVcmpStatRetries => '1.3.6.1.4.1.3375.2.1.13.4.2.1.12',
  sysVcmpStatUptime => '1.3.6.1.4.1.3375.2.1.13.4.2.1.13',
  sysVcmpStatComment => '1.3.6.1.4.1.3375.2.1.13.4.2.1.14',
  sysVcmpStatInterfaceNames => '1.3.6.1.4.1.3375.2.1.13.4.2.1.15',
  sysVcmpStatCoreNames => '1.3.6.1.4.1.3375.2.1.13.4.2.1.16',
  sysVcmpStatPrompt => '1.3.6.1.4.1.3375.2.1.13.4.2.1.17',
  sysVcmpStatCpuUsageRecent => '1.3.6.1.4.1.3375.2.1.13.4.2.1.18',
  sysVcmpStatCpuUsage1min => '1.3.6.1.4.1.3375.2.1.13.4.2.1.19',
  sysVcmpStatCpuUsage5mins => '1.3.6.1.4.1.3375.2.1.13.4.2.1.20',
  sysVcmpStatPktsIn => '1.3.6.1.4.1.3375.2.1.13.4.2.1.21',
  sysVcmpStatBytesIn => '1.3.6.1.4.1.3375.2.1.13.4.2.1.22',
  sysVcmpStatMcastIn => '1.3.6.1.4.1.3375.2.1.13.4.2.1.23',
  sysVcmpStatDropsIn => '1.3.6.1.4.1.3375.2.1.13.4.2.1.24',
  sysVcmpStatPktsOut => '1.3.6.1.4.1.3375.2.1.13.4.2.1.25',
  sysVcmpStatBytesOut => '1.3.6.1.4.1.3375.2.1.13.4.2.1.26',
  sysVcmpStatMcastOut => '1.3.6.1.4.1.3375.2.1.13.4.2.1.27',
  sysVcmpStatDropsOut => '1.3.6.1.4.1.3375.2.1.13.4.2.1.28',
  sysVcmpStatDiskUseKb => '1.3.6.1.4.1.3375.2.1.13.4.2.1.29',
  sysVcmpStatMemoryUseKb => '1.3.6.1.4.1.3375.2.1.13.4.2.1.30',
  sysVcmpAssignedSlots => '1.3.6.1.4.1.3375.2.1.13.5',
  sysVcmpAssignedSlotsNumber => '1.3.6.1.4.1.3375.2.1.13.5.1',
  sysVcmpAssignedSlotsTable => '1.3.6.1.4.1.3375.2.1.13.5.2',
  sysVcmpAssignedSlotsEntry => '1.3.6.1.4.1.3375.2.1.13.5.2.1',
  sysVcmpAssignedSlotsName => '1.3.6.1.4.1.3375.2.1.13.5.2.1.1',
  sysVcmpAssignedSlotsIndex => '1.3.6.1.4.1.3375.2.1.13.5.2.1.2',
  sysVcmpAssignedSlotsSlotId => '1.3.6.1.4.1.3375.2.1.13.5.2.1.3',
  sysVcmpAllowedSlots => '1.3.6.1.4.1.3375.2.1.13.6',
  sysVcmpAllowedSlotsNumber => '1.3.6.1.4.1.3375.2.1.13.6.1',
  sysVcmpAllowedSlotsTable => '1.3.6.1.4.1.3375.2.1.13.6.2',
  sysVcmpAllowedSlotsEntry => '1.3.6.1.4.1.3375.2.1.13.6.2.1',
  sysVcmpAllowedSlotsName => '1.3.6.1.4.1.3375.2.1.13.6.2.1.1',
  sysVcmpAllowedSlotsIndex => '1.3.6.1.4.1.3375.2.1.13.6.2.1.2',
  sysVcmpAllowedSlotsSlotId => '1.3.6.1.4.1.3375.2.1.13.6.2.1.3',
  sysVirtualDisk => '1.3.6.1.4.1.3375.2.1.13.7',
  sysVirtualDiskNumber => '1.3.6.1.4.1.3375.2.1.13.7.1',
  sysVirtualDiskTable => '1.3.6.1.4.1.3375.2.1.13.7.2',
  sysVirtualDiskEntry => '1.3.6.1.4.1.3375.2.1.13.7.2.1',
  sysVirtualDiskFilename => '1.3.6.1.4.1.3375.2.1.13.7.2.1.1',
  sysVirtualDiskOperatingSystem => '1.3.6.1.4.1.3375.2.1.13.7.2.1.2',
  sysVirtualDiskOperatingSystemDefinition => 'F5-BIGIP-SYSTEM-MIB::sysVirtualDiskOperatingSystem',
  sysVirtualDiskSlotId => '1.3.6.1.4.1.3375.2.1.13.7.2.1.3',
  sysVirtualDiskState => '1.3.6.1.4.1.3375.2.1.13.7.2.1.4',
  sysVirtualDiskStateDefinition => 'F5-BIGIP-SYSTEM-MIB::sysVirtualDiskState',
  sysCM => '1.3.6.1.4.1.3375.2.1.14',
  sysCmSyncStatus => '1.3.6.1.4.1.3375.2.1.14.1',
  sysCmSyncStatusId => '1.3.6.1.4.1.3375.2.1.14.1.1',
  sysCmSyncStatusIdDefinition => 'F5-BIGIP-SYSTEM-MIB::sysCmSyncStatusId',
  sysCmSyncStatusStatus => '1.3.6.1.4.1.3375.2.1.14.1.2',
  sysCmSyncStatusColor => '1.3.6.1.4.1.3375.2.1.14.1.3',
  sysCmSyncStatusColorDefinition => 'F5-BIGIP-SYSTEM-MIB::sysCmSyncStatusColor',
  sysCmSyncStatusSummary => '1.3.6.1.4.1.3375.2.1.14.1.4',
  sysCmSyncStatusDetails => '1.3.6.1.4.1.3375.2.1.14.2',
  sysCmSyncStatusDetailsNumber => '1.3.6.1.4.1.3375.2.1.14.2.1',
  sysCmSyncStatusDetailsTable => '1.3.6.1.4.1.3375.2.1.14.2.2',
  sysCmSyncStatusDetailsEntry => '1.3.6.1.4.1.3375.2.1.14.2.2.1',
  sysCmSyncStatusDetailsIndex => '1.3.6.1.4.1.3375.2.1.14.2.2.1.1',
  sysCmSyncStatusDetailsDetails => '1.3.6.1.4.1.3375.2.1.14.2.2.1.2',
  sysCmFailoverStatus => '1.3.6.1.4.1.3375.2.1.14.3',
  sysCmFailoverStatusId => '1.3.6.1.4.1.3375.2.1.14.3.1',
  sysCmFailoverStatusIdDefinition => 'F5-BIGIP-SYSTEM-MIB::sysCmFailoverStatusId',
  sysCmFailoverStatusStatus => '1.3.6.1.4.1.3375.2.1.14.3.2',
  sysCmFailoverStatusColor => '1.3.6.1.4.1.3375.2.1.14.3.3',
  sysCmFailoverStatusColorDefinition => 'F5-BIGIP-SYSTEM-MIB::sysCmFailoverStatusColor',
  sysCmFailoverStatusSummary => '1.3.6.1.4.1.3375.2.1.14.3.4',
  sysCmFailoverStatusDetails => '1.3.6.1.4.1.3375.2.1.14.4',
  sysCmFailoverStatusDetailsNumber => '1.3.6.1.4.1.3375.2.1.14.4.1',
  sysCmFailoverStatusDetailsTable => '1.3.6.1.4.1.3375.2.1.14.4.2',
  sysCmFailoverStatusDetailsEntry => '1.3.6.1.4.1.3375.2.1.14.4.2.1',
  sysCmFailoverStatusDetailsIndex => '1.3.6.1.4.1.3375.2.1.14.4.2.1.1',
  sysCmFailoverStatusDetailsDetails => '1.3.6.1.4.1.3375.2.1.14.4.2.1.2',
  sysCmTrafficGroupStatus => '1.3.6.1.4.1.3375.2.1.14.5',
  sysCmTrafficGroupStatusNumber => '1.3.6.1.4.1.3375.2.1.14.5.1',
  sysCmTrafficGroupStatusTable => '1.3.6.1.4.1.3375.2.1.14.5.2',
  sysCmTrafficGroupStatusEntry => '1.3.6.1.4.1.3375.2.1.14.5.2.1',
  sysCmTrafficGroupStatusTrafficGroup => '1.3.6.1.4.1.3375.2.1.14.5.2.1.1',
  sysCmTrafficGroupStatusDeviceName => '1.3.6.1.4.1.3375.2.1.14.5.2.1.2',
  sysCmTrafficGroupStatusFailoverStatus => '1.3.6.1.4.1.3375.2.1.14.5.2.1.3',
  sysCmTrafficGroupStatusFailoverStatusDefinition => 'F5-BIGIP-SYSTEM-MIB::sysCmTrafficGroupStatusFailoverStatus',
  bigipSystemGroups => '1.3.6.1.4.1.3375.2.5.2.1',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'F5-BIGIP-SYSTEM-MIB'} = {
  sysInterfaceEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  sysDot3StatDuplexStatus => {
    '1' => 'unknown',
    '2' => 'halfDuplex',
    '3' => 'fullDuplex',
  },
  sysInterfaceMediaMaxDuplex => {
    '0' => 'none',
    '1' => 'half',
    '2' => 'full',
  },
  sysTrunkShortTimeout => {
    '0' => 'false',
    '1' => 'true',
  },
  sysInterfacePhyMaster => {
    '0' => 'slave',
    '1' => 'master',
    '2' => 'auto',
    '3' => 'none',
  },
  sysAttrModeMaint => {
    '0' => 'disable',
    '1' => 'enable',
  },
  sysClusterMbrEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  sysAttrFailoverSslhardwareAction => {
    '0' => 'failover',
    '1' => 'reboot',
  },
  sysPhysicalDiskIsArrayMember => {
    '0' => 'false',
    '1' => 'true',
  },
  sysInterfaceStpAuto => {
    '0' => 'false',
    '1' => 'true',
  },
  sysChassisPowerSupplyStatus => {
    '0' => 'bad',
    '1' => 'good',
    '2' => 'notpresent',
  },
  sysAttrWatchdogState => {
    '0' => 'disable',
    '1' => 'enable',
  },
  sysAttrPacketFilterAllowImportantIcmp => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  sysIntfMediaSfpType => {
    '1' => 'media10THdx',
    '2' => 'media10TFdx',
    '3' => 'media100TxHdx',
    '4' => 'media100TxFdx',
    '5' => 'media1000THdx',
    '6' => 'media1000TFdx',
    '10' => 'media10000TFdx',
    '13' => 'mediaAuto',
    '14' => 'mediaInternal',
    '16' => 'media1000SxFdx',
    '18' => 'media1000LxFdx',
    '19' => 'media10000SrFdx',
    '20' => 'media10000LrFdx',
    '21' => 'media10000ErFdx',
    '22' => 'media1000CxFdx',
    '23' => 'media10000SfpPlusCuFdx',
    '24' => 'media40000Sr4Fdx',
    '25' => 'media40000Lr4Fdx',
  },
  sysChassisSlotState => {
    '0' => 'failed',
    '1' => 'unknown',
    '2' => 'empty',
    '3' => 'priming',
    '4' => 'ok',
  },
  sysSwVolumeActive => {
    '0' => 'false',
    '1' => 'true',
  },
  sysClusterEnabledStat => {
    '0' => 'none',
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'disabledbyparent',
  },
  sysAttrPacketFilterEstablished => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  sysVlanMirrorHashPortEnable => {
    '0' => 'false',
    '1' => 'true',
  },
  sysInterfaceStpEdge => {
    '0' => 'false',
    '1' => 'true',
  },
  sysCmFailoverStatusColor => {
    '0' => 'green',
    '1' => 'yellow',
    '2' => 'red',
    '3' => 'blue',
    '4' => 'gray',
    '5' => 'black',
  },
  sysSelfIpIsFloating => {
    '0' => 'false',
    '1' => 'true',
  },
  sysL2ForwardStatDynamic => {
    '0' => 'false',
    '1' => 'true',
  },
  sysSwStatusActive => {
    '0' => 'false',
    '1' => 'true',
  },
  sysCmSyncStatusId => {
    '0' => 'unknown',
    '1' => 'syncing',
    '2' => 'needManualSync',
    '3' => 'inSync',
    '4' => 'syncFailed',
    '5' => 'syncDisconnected',
    '6' => 'standalone',
    '7' => 'awaitingInitialSync',
    '8' => 'incompatibleVersion',
    '9' => 'partialSync',
  },
  sysVlanMemberTagged => {
    '0' => 'false',
    '1' => 'true',
  },
  sysTrunkStatus => {
    '0' => 'up',
    '1' => 'down',
    '2' => 'disable',
    '3' => 'uninitialized',
    '4' => 'loopback',
    '5' => 'unpopulated',
  },
  sysInterfaceSfpMedia => {
    '0' => 'false',
    '1' => 'true',
  },
  sysStpInterfaceMbrStateActive => {
    '0' => 'detach',
    '1' => 'block',
    '2' => 'listen',
    '3' => 'learn',
    '4' => 'forward',
    '5' => 'disable',
  },
  sysVirtualDiskState => {
    '0' => 'unknown',
    '1' => 'created',
    '2' => 'installing',
    '3' => 'migrating',
    '4' => 'ready',
    '5' => 'in-use',
  },
  sysTrunkLacpEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  sysTrunkActiveLacp => {
    '0' => 'false',
    '1' => 'true',
  },
  sysModuleAllocationProvisionLevel => {
    '1' => 'none',
    '2' => 'minimum',
    '3' => 'nominal',
    '4' => 'dedicated',
    '5' => 'custom',
  },
  sysInterfaceComboPort => {
    '0' => 'false',
    '1' => 'true',
  },
  sysCmSyncStatusColor => {
    '0' => 'green',
    '1' => 'yellow',
    '2' => 'red',
    '3' => 'blue',
    '4' => 'gray',
    '5' => 'black',
  },
  sysClusterHaState => {
    '0' => 'offline',
    '1' => 'forcedoffline',
    '2' => 'standby',
    '3' => 'active',
    '4' => 'unknown',
  },
  sysStatMultiProcessorMode => {
    '0' => 'modeup',
    '1' => 'modesmp',
  },
  sysAttrArpAddReciprocal => {
    '0' => 'disable',
    '1' => 'enable',
  },
  sysMultiHostMode => {
    '0' => 'modeup',
    '1' => 'modesmp',
  },
  sysVlanGroupBridgeInStandby => {
    '0' => 'false',
    '1' => 'true',
  },
  sysVcmpMgmtNetwork => {
    '0' => 'bridged',
    '1' => 'isolated',
  },
  sysStpInterfaceTreeStatStatRole => {
    '0' => 'disable',
    '1' => 'root',
    '2' => 'designate',
    '3' => 'alternate',
    '4' => 'backup',
    '5' => 'master',
  },
  sysStpInterfaceMbrRole => {
    '0' => 'disable',
    '1' => 'root',
    '2' => 'designate',
    '3' => 'alternate',
    '4' => 'backup',
    '5' => 'master',
  },
  sysInterfaceMediaActiveDuplex => {
    '0' => 'none',
    '1' => 'half',
    '2' => 'full',
  },
  sysInterfaceStatus => {
    '0' => 'up',
    '1' => 'down',
    '3' => 'uninitialized',
    '5' => 'unpopulated',
  },
  sysPacketFilterLog => {
    '0' => 'false',
    '1' => 'true',
  },
  sysVlanGroupBridgeAllTraffic => {
    '0' => 'false',
    '1' => 'true',
  },
  sysVlanMemberType => {
    '0' => 'interface',
    '1' => 'trunk',
  },
  sysInterfaceStatPauseActive => {
    '0' => 'none',
    '1' => 'txrx',
    '2' => 'tx',
    '3' => 'rx',
  },
  sysAttrPacketFilterSendIcmpErrors => {
    '0' => 'disable',
    '1' => 'enable',
  },
  sysL2ForwardDynamic => {
    '0' => 'false',
    '1' => 'true',
  },
  sysClusterMbrPriming => {
    '0' => 'false',
    '1' => 'true',
  },
  sysInterfaceStpLink => {
    '0' => 'linkp2p',
    '1' => 'linkshared',
    '2' => 'linkauto',
  },
  sysVlanGroupMode => {
    '0' => 'transparent',
    '1' => 'translucent',
    '2' => 'opaque',
  },
  sysTrunkStpReset => {
    '0' => 'false',
    '1' => 'true',
  },
  sysAttrFailoverNetwork => {
    '0' => 'disable',
    '1' => 'enable',
  },
  sysVlanSourceCheck => {
    '0' => 'false',
    '1' => 'true',
  },
  sysStpInterfaceMbrType => {
    '0' => 'interface',
    '1' => 'trunk',
  },
  sysClusterEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  sysAttrPacketFilterDefaultAction => {
    '0' => 'accept',
    '1' => 'discard',
    '2' => 'reject',
  },
  sysCmTrafficGroupStatusFailoverStatus => {
    '0' => 'unknown',
    '1' => 'offline',
    '2' => 'forcedOffline',
    '3' => 'standby',
    '4' => 'active',
  },
  sysSwHotfixVerified => {
    '0' => 'false',
    '1' => 'true',
  },
  sysAttrFailoverIsRedundant => {
    '0' => 'false',
    '1' => 'true',
  },
  sysVlanGroupBridgeMulticast => {
    '0' => 'false',
    '1' => 'true',
  },
  sysStpBridgeStatMode => {
    '0' => 'disable',
    '1' => 'stp',
    '2' => 'rstp',
    '3' => 'mstp',
    '4' => 'passthru',
  },
  sysVirtualDiskOperatingSystem => {
    '0' => 'unknown',
    '1' => 'tmos',
    '2' => 'linux',
  },
  sysInterfaceStpEnable => {
    '0' => 'false',
    '1' => 'true',
  },
  sysPhysicalDiskArrayStatus => {
    '0' => 'undefined',
    '1' => 'ok',
    '2' => 'replicating',
    '3' => 'missing',
    '4' => 'failed',
  },
  sysAttrFailoverActiveMode => {
    '0' => 'disable',
    '1' => 'enable',
  },
  sysClusterAvailabilityState => {
    '0' => 'none',
    '1' => 'green',
    '2' => 'yellow',
    '3' => 'red',
    '4' => 'blue',
  },
  sysVcmpState => {
    '0' => 'configured',
    '1' => 'provisioned',
    '2' => 'deployed',
  },
  sysDot1dbaseStatType => {
    '0' => 'uninitialized',
    '1' => 'unknown',
    '2' => 'transparentonly',
    '3' => 'sourcerouteonly',
  },
  sysInterfaceFlowCtrlReq => {
    '0' => 'none',
    '1' => 'txrx',
    '2' => 'tx',
    '3' => 'rx',
  },
  sysIntfMediaMediaOption => {
    '1' => 'media10THdx',
    '2' => 'media10TFdx',
    '3' => 'media100TxHdx',
    '4' => 'media100TxFdx',
    '5' => 'media1000THdx',
    '6' => 'media1000TFdx',
    '7' => 'media1000FxHdx',
    '8' => 'media1000FxFdx',
    '9' => 'media10000TxHdx',
    '10' => 'media10000TFdx',
    '11' => 'media10000FxHdx',
    '12' => 'media10000FxFdx',
    '13' => 'mediaAuto',
    '14' => 'mediaInternal',
    '15' => 'media1000SxHdx',
    '16' => 'media1000SxFdx',
    '17' => 'media1000LxHdx',
    '18' => 'media1000LxFdx',
    '19' => 'media10000SrFdx',
    '20' => 'media10000LrFdx',
    '21' => 'media10000ErFdx',
    '22' => 'media1000CxFdx',
    '23' => 'media10000SfpPlusCuFdx',
    '24' => 'media40000Sr4Fdx',
    '25' => 'media40000Lr4Fdx',
  },
  sysClusterMinUpMbrsAction => {
    '0' => 'unusedhaaction',
    '1' => 'reboot',
    '2' => 'restart',
    '3' => 'failover',
    '4' => 'goactive',
    '5' => 'noaction',
    '6' => 'restartall',
    '7' => 'failoveraborttm',
    '8' => 'gooffline',
    '9' => 'goofflinerestart',
    '10' => 'goofflineaborttm',
    '11' => 'goofflinedownlinks',
    '12' => 'goofflinedownlinksrestart',
  },
  sysAttrFailoverForceActive => {
    '0' => 'disable',
    '1' => 'enable',
  },
  sysInterfaceStpEdgeActive => {
    '0' => 'false',
    '1' => 'true',
  },
  sysL2ForwardIftype => {
    '0' => 'interface',
    '1' => 'trunk',
  },
  sysAttrBootQuiet => {
    '0' => 'disable',
    '1' => 'enable',
  },
  sysAttrPvaAcceleration => {
    '0' => 'none',
    '1' => 'partial',
    '2' => 'full',
  },
  sysCmFailoverStatusId => {
    '0' => 'unknown',
    '1' => 'offline',
    '2' => 'forcedOffline',
    '3' => 'standby',
    '4' => 'active',
  },
  sysClusterMbrAvailabilityState => {
    '0' => 'none',
    '1' => 'green',
    '2' => 'yellow',
    '3' => 'red',
    '4' => 'blue',
  },
  sysStpGlobals2Mode => {
    '0' => 'disable',
    '1' => 'stp',
    '2' => 'rstp',
    '3' => 'mstp',
    '4' => 'passthru',
  },
  sysStpInterfaceStatStpEnable => {
    '0' => 'false',
    '1' => 'true',
  },
  sysStpInterfaceMbrStateRequested => {
    '0' => 'detach',
    '1' => 'block',
    '2' => 'listen',
    '3' => 'learn',
    '4' => 'forward',
    '5' => 'disable',
  },
  sysSwImageVerified => {
    '0' => 'false',
    '1' => 'true',
  },
  sysAttrFailoverForceStandby => {
    '0' => 'disable',
    '1' => 'enable',
  },
  sysVlanFailsafeAction => {
    '0' => 'unusedhaaction',
    '1' => 'reboot',
    '2' => 'restart',
    '3' => 'failover',
    '4' => 'goactive',
    '5' => 'noaction',
    '6' => 'restartall',
    '7' => 'failoveraborttm',
    '8' => 'gooffline',
    '9' => 'goofflinerestart',
    '10' => 'goofflineaborttm',
    '11' => 'goofflinedownlinks',
    '12' => 'goofflinedownlinksrestart',
  },
  sysClusterMbrHaState => {
    '0' => 'unknown',
    '1' => 'offline',
    '2' => 'forcedoffline',
    '3' => 'standby',
    '4' => 'active',
  },
  sysChassisSlotDown => {
    '0' => 'false',
    '1' => 'true',
  },
  sysAttrConnAutoLasthop => {
    '0' => 'disable',
    '1' => 'enable',
  },
  sysVlanLearnMode => {
    '0' => 'learnforward',
    '1' => 'nolearnforward',
    '2' => 'nolearndrop',
  },
  sysAttrFailoverSslhardware => {
    '0' => 'disable',
    '1' => 'enable',
  },
  sysInterfaceStpReset => {
    '0' => 'false',
    '1' => 'true',
  },
  sysVlanFailsafeEnabled => {
    '0' => 'false',
    '1' => 'true',
  },
  sysInterfaceLearnMode => {
    '0' => 'learnforward',
    '1' => 'nolearnforward',
    '2' => 'nolearndrop',
  },
  sysTrunkStpEnable => {
    '0' => 'false',
    '1' => 'true',
  },
  sysStpGlobalsMode => {
    '0' => 'disable',
    '1' => 'stp',
    '2' => 'rstp',
    '3' => 'mstp',
    '4' => 'passthru',
  },
  sysChassisFanStatus => {
    '0' => 'bad',
    '1' => 'good',
    '2' => 'notpresent',
  },
  sysVcmpStatVmStatus => {
    '0' => 'unknown',
    '1' => 'created',
    '2' => 'stopped',
    '3' => 'starting',
    '4' => 'running',
    '5' => 'stopping',
    '6' => 'installing-vdisk',
    '7' => 'deleted',
    '8' => 'failed',
    '9' => 'inactive',
    '10' => 'acquiring-vdisk',
    '11' => 'waiting-install',
    '12' => 'waiting-migrate',
    '13' => 'migrating-vdisk',
    '14' => 'waiting-start',
    '15' => 'waiting-create',
  },
  sysRouteStaticEntryType => {
    '0' => 'gateway',
    '1' => 'pool',
    '2' => 'interface',
    '3' => 'blackhole',
  },
  sysClusterMbrState => {
    '0' => 'initial',
    '1' => 'quorumwait',
    '2' => 'quorum',
    '3' => 'running',
    '4' => 'shutdown',
  },
  sysInterfacePreferSfp => {
    '0' => 'false',
    '1' => 'true',
  },
  sysClusterMbrLicensed => {
    '0' => 'false',
    '1' => 'true',
  },
  sysStpInterfaceTreeStatState => {
    '0' => 'detach',
    '1' => 'block',
    '2' => 'listen',
    '3' => 'learn',
    '4' => 'forward',
    '5' => 'disable',
  },
  sysClusterMbrEnabledStat => {
    '0' => 'none',
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'disabledbyparent',
  },
  sysAttrPacketFilter => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  sysRouteMgmtEntryType => {
    '0' => 'gateway',
    '1' => 'pool',
    '2' => 'interface',
    '3' => 'blackhole',
  },
  sysL2ForwardStatIftype => {
    '0' => 'interface',
    '1' => 'trunk',
  },
  sysVlanSpanningTree => {
    '0' => 'false',
    '1' => 'true',
  },
  sysPacketFilterAction => {
    '0' => 'none',
    '1' => 'accept',
    '2' => 'discard',
    '3' => 'reject',
    '4' => 'continue',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::FCEOSMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'FCEOS-MIB'} = {
  url => '',
  name => 'FCEOS-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'FCEOS-MIB'} = {
  'fcEosSysCurrentDate' => '1.3.6.1.4.1.289.2.1.1.2.1.1.0',
  'fcEosSysBootDate' => '1.3.6.1.4.1.289.2.1.1.2.1.2.0',
  'fcEosSysFirmwareVersion' => '1.3.6.1.4.1.289.2.1.1.2.1.3.0',
  'fcEosSysTypeNum' => '1.3.6.1.4.1.289.2.1.1.2.1.4.0',
  'fcEosSysModelNum' => '1.3.6.1.4.1.289.2.1.1.2.1.5.0',
  'fcEosSysMfg' => '1.3.6.1.4.1.289.2.1.1.2.1.6.0',
  'fcEosSysPlantOfMfg' => '1.3.6.1.4.1.289.2.1.1.2.1.7.0',
  'fcEosSysEcLevel' => '1.3.6.1.4.1.289.2.1.1.2.1.8.0',
  'fcEosSysSerialNum' => '1.3.6.1.4.1.289.2.1.1.2.1.9.0',
  'fcEosSysOperStatus' => '1.3.6.1.4.1.289.2.1.1.2.1.10.0',
  'fcEosSysOperStatusDefinition' => {
    '1' => 'operational',
    '2' => 'redundant-failure',
    '3' => 'minor-failure',
    '4' => 'major-failure',
    '5' => 'not-operational',
  },
  'fcEosSysState' => '1.3.6.1.4.1.289.2.1.1.2.1.11.0',
  'fcEosSysAdmStatus' => '1.3.6.1.4.1.289.2.1.1.2.1.12.0',
  'fcEosSysConfigSpeed' => '1.3.6.1.4.1.289.2.1.1.2.1.13.0',
  'fcEosSysOpenTrunking' => '1.3.6.1.4.1.289.2.1.1.2.1.14.0',
  'fcEosFruTable' => '1.3.6.1.4.1.289.2.1.1.2.2.1',
  'fcEosFruEntry' => '1.3.6.1.4.1.289.2.1.1.2.2.1.1',
  'fcEosFruCode' => '1.3.6.1.4.1.289.2.1.1.2.2.1.1.1',
  'fcEosFruCodeDefinition' => {
    '1' => 'fru-bkplane',
    '2' => 'fru-ctp',
    '3' => 'fru-sbar',
    '4' => 'fru-fan2',
    '5' => 'fru-fan',
    '6' => 'fru-power',
    '7' => 'fru-reserved',
    '8' => 'fru-glsl',
    '9' => 'fru-gsml',
    '10' => 'fru-gxxl',
    '11' => 'fru-gsf1',
    '12' => 'fru-gsf2',
    '13' => 'fru-glsr',
    '14' => 'fru-gsmr',
    '15' => 'fru-gxxr',
    '16' => 'fru-fint1',
  },
  'fcEosFruPosition' => '1.3.6.1.4.1.289.2.1.1.2.2.1.1.2',
  'fcEosFruStatus' => '1.3.6.1.4.1.289.2.1.1.2.2.1.1.3',
  'fcEosFruStatusDefinition' => {
    '0' => 'unknown',
    '1' => 'active',
    '2' => 'backup',
    '3' => 'update-busy',
    '4' => 'failed',
  },
  'fcEosFruPartNumber' => '1.3.6.1.4.1.289.2.1.1.2.2.1.1.4',
  'fcEosFruSerialNumber' => '1.3.6.1.4.1.289.2.1.1.2.2.1.1.5',
  'fcEosFruPowerOnHours' => '1.3.6.1.4.1.289.2.1.1.2.2.1.1.6',
  'fcEosFruTestDate' => '1.3.6.1.4.1.289.2.1.1.2.2.1.1.7',
  'fcEosTATable' => '1.3.6.1.4.1.289.2.1.1.2.6.1',
  'fcEosTAEntry' => '1.3.6.1.4.1.289.2.1.1.2.6.1.1',
  'fcEosTAIndex' => '1.3.6.1.4.1.289.2.1.1.2.6.1.1.1',
  'fcEosTAName' => '1.3.6.1.4.1.289.2.1.1.2.6.1.1.2',
  'fcEosTAState' => '1.3.6.1.4.1.289.2.1.1.2.6.1.1.3',
  'fcEosTAType' => '1.3.6.1.4.1.289.2.1.1.2.6.1.1.4',
  'fcEosTAPortType' => '1.3.6.1.4.1.289.2.1.1.2.6.1.1.5',
  'fcEosTAPortList' => '1.3.6.1.4.1.289.2.1.1.2.6.1.1.6',
  'fcEosTAInterval' => '1.3.6.1.4.1.289.2.1.1.2.6.1.1.7',
  'fcEosTATriggerValue' => '1.3.6.1.4.1.289.2.1.1.2.6.1.1.8',
  'fcEosTTADirection' => '1.3.6.1.4.1.289.2.1.1.2.6.1.1.9',
  'fcEosTTATriggerDuration' => '1.3.6.1.4.1.289.2.1.1.2.6.1.1.10',
  'fcEosCTACounter' => '1.3.6.1.4.1.289.2.1.1.2.6.1.1.11',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::FCMGMTMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'FCMGMT-MIB'} = {
  url => '',
  name => 'FCMGMT-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'FCMGMT-MIB'} = {
  'fcConnUnitPortStatTxObjects' => '1.3',
  'fcConnUnitSEventTime' => '1.3',
  'fcConnUnitTable' => '1.3',
  'fcConnUnitPortFCClassCap' => '1.3',
  'fcConnUnitLinkPortNumberX' => '1.3',
  'fcConnUnitType' => '1.3',
  'fcConnUnitSnsPortName' => '1.3',
  'fcConnUnitRevsDescription' => '1.3',
  'fcConnUnitEntry' => '1.3.1',
  'fcConnUnitPortStatTable' => '1.3.1',
  'fcConnUnitPortStatEntry' => '1.3.1.1',
  'fcConnUnitId' => '1.3.1.1',
  'fcConnUnitPortStatIndex' => '1.3.1.1.1',
  'fcConnUnitPortStatErrs' => '1.3.1.1.2',
  'fcConnUnitPortStatRxObjects' => '1.3.1.1.4',
  'fcConnUnitPortStatTxElements' => '1.3.1.1.5',
  'fcConnUnitPortStatRxElements' => '1.3.1.1.6',
  'fcConnUnitPortStatBBCreditZero' => '1.3.1.1.7',
  'fcConnUnitPortStatInputBuffsFull' => '1.3.1.1.8',
  'fcConnUnitPortStatFBSYFrames' => '1.3.1.1.9',
  'fcConnUnitPortStatPBSYFrames' => '1.3.1.1.10',
  'fcConnUnitPortStatFRJTFrames' => '1.3.1.1.11',
  'fcConnUnitPortStatPRJTFrames' => '1.3.1.1.12',
  'fcConnUnitPortStatC1RxFrames' => '1.3.1.1.13',
  'fcConnUnitPortStatC1TxFrames' => '1.3.1.1.14',
  'fcConnUnitPortStatC1FBSYFrames' => '1.3.1.1.15',
  'fcConnUnitPortStatC1PBSYFrames' => '1.3.1.1.16',
  'fcConnUnitPortStatC1FRJTFrames' => '1.3.1.1.17',
  'fcConnUnitPortStatC1PRJTFrames' => '1.3.1.1.18',
  'fcConnUnitPortStatC2RxFrames' => '1.3.1.1.19',
  'fcConnUnitPortStatC2TxFrames' => '1.3.1.1.20',
  'fcConnUnitPortStatC2FBSYFrames' => '1.3.1.1.21',
  'fcConnUnitPortStatC2PBSYFrames' => '1.3.1.1.22',
  'fcConnUnitPortStatC2FRJTFrames' => '1.3.1.1.23',
  'fcConnUnitPortStatC2PRJTFrames' => '1.3.1.1.24',
  'fcConnUnitPortStatC3RxFrames' => '1.3.1.1.25',
  'fcConnUnitPortStatC3TxFrames' => '1.3.1.1.26',
  'fcConnUnitPortStatC3Discards' => '1.3.1.1.27',
  'fcConnUnitPortStatRxMcastObjects' => '1.3.1.1.28',
  'fcConnUnitPortStatTxMcastObjects' => '1.3.1.1.29',
  'fcConnUnitPortStatInvalidTxWords' => '1.3.1.1.40',
  'fcConnUnitPortStatPSPErrs' => '1.3.1.1.41',
  'fcConnUnitPortStatLossOfSignal' => '1.3.1.1.42',
  'fcConnUnitPortStatLossOfSync' => '1.3.1.1.43',
  'fcConnUnitPortStatInvOrderedSets' => '1.3.1.1.44',
  'fcConnUnitPortStatFramesTooLong' => '1.3.1.1.45',
  'fcConnUnitPortStatFramesTooShort' => '1.3.1.1.46',
  'fcConnUnitPortStatAddressErrs' => '1.3.1.1.47',
  'fcConnUnitPortStatDelimiterErrs' => '1.3.1.1.48',
  'fcConnUnitPortStatEncodingErrs' => '1.3.1.1.49',
  'fcConnUnitGlobalId' => '1.3.1.2',
  'fcConnUnitNumPorts' => '1.3.1.4',
  'fcConnUnitState' => '1.3.1.5',
  'fcConnUnitStatus' => '1.3.1.6',
  'fcConnUnitProduct' => '1.3.1.7',
  'fcConnUnitSerialNo' => '1.3.1.8',
  'fcConnUnitUpTime' => '1.3.1.9',
  'fcConnUnitUrl' => '1.3.1.10',
  'fcConnUnitDomainId' => '1.3.1.11',
  'fcConnUnitProxyMaster' => '1.3.1.12',
  'fcConnUnitPrincipal' => '1.3.1.13',
  'fcConnUnitNumSensors' => '1.3.1.14',
  'fcConnUnitNumRevs' => '1.3.1.15',
  'fcConnUnitModuleId' => '1.3.1.16',
  'fcConnUnitName' => '1.3.1.17',
  'fcConnUnitInfo' => '1.3.1.18',
  'fcConnUnitControl' => '1.3.1.19',
  'fcConnUnitContact' => '1.3.1.20',
  'fcConnUnitLocation' => '1.3.1.21',
  'fcConnUnitEventFilter' => '1.3.1.22',
  'fcConnUnitNumEvents' => '1.3.1.23',
  'fcConnUnitMaxEvents' => '1.3.1.24',
  'fcConnUnitEventCurrID' => '1.3.1.25',
  'fcConnUnitRevsTable' => '1.3.6.1.2.1.8888.1.1.4',
  'fcConnUnitRevsEntry' => '1.3.6.1.2.1.8888.1.1.4.1',
  'fcConnUnitRevsIndex' => '1.3.6.1.2.1.8888.1.1.4.1.1',
  'fcConnUnitRevsRevision' => '1.3.6.1.2.1.8888.1.1.4.1.2',
  'fcConnUnitSensorTable' => '1.3.6.1.2.1.8888.1.1.5',
  'fcConnUnitSensorEntry' => '1.3.6.1.2.1.8888.1.1.5.1',
  'fcConnUnitSensorIndex' => '1.3.6.1.2.1.8888.1.1.5.1.1',
  'fcConnUnitSensorName' => '1.3.6.1.2.1.8888.1.1.5.1.2',
  'fcConnUnitSensorStatus' => '1.3.6.1.2.1.8888.1.1.5.1.3',
  'fcConnUnitSensorStatusDefinition' => {
    '1' => 'unknown',
    '2' => 'other',
    '3' => 'ok',
    '4' => 'warning',
    '5' => 'failed',
  },
  'fcConnUnitSensorInfo' => '1.3.6.1.2.1.8888.1.1.5.1.4',
  'fcConnUnitSensorMessage' => '1.3.6.1.2.1.8888.1.1.5.1.5',
  'fcConnUnitSensorType' => '1.3.6.1.2.1.8888.1.1.5.1.6',
  'fcConnUnitSensorTypeDefinition' => {
    '1' => 'unknown',
    '2' => 'other',
    '3' => 'battery',
    '4' => 'fan',
    '5' => 'powerSupply',
    '6' => 'transmitter',
    '7' => 'enclosure',
    '8' => 'board',
    '9' => 'receiver',
  },
  'fcConnUnitSensorCharacteristic' => '1.3.6.1.2.1.8888.1.1.5.1.7',
  'fcConnUnitSensorCharacteristicDefinition' => {
    '1' => 'unknown',
    '2' => 'other',
    '3' => 'temperature',
    '4' => 'pressure',
    '5' => 'emf',
    '6' => 'currentValue',
    '7' => 'airflow',
    '8' => 'frequency',
    '9' => 'power',
  },
  'fcConnUnitPortTable' => '1.3.6.1.2.1.8888.1.1.6',
  'fcConnUnitPortEntry' => '1.3.6.1.2.1.8888.1.1.6.1',
  'fcConnUnitPortIndex' => '1.3.6.1.2.1.8888.1.1.6.1.1',
  'fcConnUnitPortType' => '1.3.6.1.2.1.8888.1.1.6.1.2',
  'fcConnUnitPortFCClassOp' => '1.3.6.1.2.1.8888.1.1.6.1.4',
  'fcConnUnitPortState' => '1.3.6.1.2.1.8888.1.1.6.1.5',
  'fcConnUnitPortStatus' => '1.3.6.1.2.1.8888.1.1.6.1.6',
  'fcConnUnitPortTransmitterType' => '1.3.6.1.2.1.8888.1.1.6.1.7',
  'fcConnUnitPortModuleType' => '1.3.6.1.2.1.8888.1.1.6.1.8',
  'fcConnUnitPortWwn' => '1.3.6.1.2.1.8888.1.1.6.1.9',
  'fcConnUnitPortFCId' => '1.3.6.1.2.1.8888.1.1.6.1.10',
  'fcConnUnitPortSerialNo' => '1.3.6.1.2.1.8888.1.1.6.1.11',
  'fcConnUnitPortRevision' => '1.3.6.1.2.1.8888.1.1.6.1.12',
  'fcConnUnitPortVendor' => '1.3.6.1.2.1.8888.1.1.6.1.13',
  'fcConnUnitPortSpeed' => '1.3.6.1.2.1.8888.1.1.6.1.14',
  'fcConnUnitPortControl' => '1.3.6.1.2.1.8888.1.1.6.1.15',
  'fcConnUnitPortName' => '1.3.6.1.2.1.8888.1.1.6.1.16',
  'fcConnUnitPortPhysicalNumber' => '1.3.6.1.2.1.8888.1.1.6.1.17',
  'fcConnUnitPortProtocolCap' => '1.3.6.1.2.1.8888.1.1.6.1.18',
  'fcConnUnitPortProtocolOp' => '1.3.6.1.2.1.8888.1.1.6.1.19',
  'fcConnUnitPortNodeWwn' => '1.3.6.1.2.1.8888.1.1.6.1.20',
  'fcConnUnitPortHWState' => '1.3.6.1.2.1.8888.1.1.6.1.21',
  'fcConnUnitEventTable' => '1.3.6.1.2.1.8888.1.1.7',
  'fcConnUnitEventEntry' => '1.3.6.1.2.1.8888.1.1.7.1',
  'fcConnUnitEventIndex' => '1.3.6.1.2.1.8888.1.1.7.1.1',
  'fcConnUnitREventTime' => '1.3.6.1.2.1.8888.1.1.7.1.2',
  'fcConnUnitEventSeverity' => '1.3.6.1.2.1.8888.1.1.7.1.4',
  'fcConnUnitEventType' => '1.3.6.1.2.1.8888.1.1.7.1.5',
  'fcConnUnitEventObject' => '1.3.6.1.2.1.8888.1.1.7.1.6',
  'fcConnUnitEventDescr' => '1.3.6.1.2.1.8888.1.1.7.1.7',
  'fcConnUnitLinkTable' => '1.3.6.1.2.1.8888.1.1.8',
  'fcConnUnitLinkEntry' => '1.3.6.1.2.1.8888.1.1.8.1',
  'fcConnUnitLinkIndex' => '1.3.6.1.2.1.8888.1.1.8.1.1',
  'fcConnUnitLinkNodeIdX' => '1.3.6.1.2.1.8888.1.1.8.1.2',
  'fcConnUnitLinkPortWwnX' => '1.3.6.1.2.1.8888.1.1.8.1.4',
  'fcConnUnitLinkNodeIdY' => '1.3.6.1.2.1.8888.1.1.8.1.5',
  'fcConnUnitLinkPortNumberY' => '1.3.6.1.2.1.8888.1.1.8.1.6',
  'fcConnUnitLinkPortWwnY' => '1.3.6.1.2.1.8888.1.1.8.1.7',
  'fcConnUnitLinkAgentAddressY' => '1.3.6.1.2.1.8888.1.1.8.1.8',
  'fcConnUnitLinkAgentAddressTypeY' => '1.3.6.1.2.1.8888.1.1.8.1.9',
  'fcConnUnitLinkAgentPortY' => '1.3.6.1.2.1.8888.1.1.8.1.10',
  'fcConnUnitLinkUnitTypeY' => '1.3.6.1.2.1.8888.1.1.8.1.11',
  'fcConnUnitLinkConnIdY' => '1.3.6.1.2.1.8888.1.1.8.1.12',
  'fcConnUnitSnsMaxRows' => '1.3.6.1.2.1.8888.1.1.9.0',
  'fcConnUnitSnsTable' => '1.3.6.1.2.1.8888.1.4.1',
  'fcConnUnitSnsEntry' => '1.3.6.1.2.1.8888.1.4.1.1',
  'fcConnUnitSnsPortIndex' => '1.3.6.1.2.1.8888.1.4.1.1.1',
  'fcConnUnitSnsPortIdentifier' => '1.3.6.1.2.1.8888.1.4.1.1.2',
  'fcConnUnitSnsNodeName' => '1.3.6.1.2.1.8888.1.4.1.1.4',
  'fcConnUnitSnsClassOfSvc' => '1.3.6.1.2.1.8888.1.4.1.1.5',
  'fcConnUnitSnsNodeIPAddress' => '1.3.6.1.2.1.8888.1.4.1.1.6',
  'fcConnUnitSnsProcAssoc' => '1.3.6.1.2.1.8888.1.4.1.1.7',
  'fcConnUnitSnsFC4Type' => '1.3.6.1.2.1.8888.1.4.1.1.8',
  'fcConnUnitSnsPortType' => '1.3.6.1.2.1.8888.1.4.1.1.9',
  'fcConnUnitSnsPortIPAddress' => '1.3.6.1.2.1.8888.1.4.1.1.10',
  'fcConnUnitSnsFabricPortName' => '1.3.6.1.2.1.8888.1.4.1.1.11',
  'fcConnUnitSnsHardAddress' => '1.3.6.1.2.1.8888.1.4.1.1.12',
  'fcConnUnitSnsSymbolicPortName' => '1.3.6.1.2.1.8888.1.4.1.1.13',
  'fcConnUnitSnsSymbolicNodeName' => '1.3.6.1.2.1.8888.1.4.1.1.14',
  'fcConnUnitPortStatRxBcastObjects' => '1.30',
  'fcConnUnitPortStatTxBcastObjects' => '1.31',
  'fcConnUnitPortStatRxLinkResets' => '1.32',
  'fcConnUnitPortStatTxLinkResets' => '1.33',
  'fcConnUnitPortStatLinkResets' => '1.34',
  'fcConnUnitPortStatRxOfflineSeqs' => '1.35',
  'fcConnUnitPortStatTxOfflineSeqs' => '1.36',
  'fcConnUnitPortStatOfflineSeqs' => '1.37',
  'fcConnUnitPortStatLinkFailures' => '1.38',
  'fcConnUnitPortStatInvalidCRC' => '1.39',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::FIBRECHANNELFEMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'FIBRE-CHANNEL-FE-MIB'} = {
  url => '',
  name => 'FIBRE-CHANNEL-FE-MIB',
};

#$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'FIBRE-CHANNEL-FE-MIB'} = 

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'FIBRE-CHANNEL-FE-MIB'} = {
  fcFeMIB => '1.3.6.1.2.1.75',
  fcFeMIBObjects => '1.3.6.1.2.1.75.1',
  fcFeConfig => '1.3.6.1.2.1.75.1.1',
  fcFeFabricName => '1.3.6.1.2.1.75.1.1.1',
  fcFeElementName => '1.3.6.1.2.1.75.1.1.2',
  fcFeModuleCapacity => '1.3.6.1.2.1.75.1.1.3',
  fcFeModuleTable => '1.3.6.1.2.1.75.1.1.4',
  fcFeModuleEntry => '1.3.6.1.2.1.75.1.1.4.1',
  fcFeModuleIndex => '1.3.6.1.2.1.75.1.1.4.1.1',
  fcFeModuleDescr => '1.3.6.1.2.1.75.1.1.4.1.2',
  fcFeModuleObjectID => '1.3.6.1.2.1.75.1.1.4.1.3',
  fcFeModuleOperStatus => '1.3.6.1.2.1.75.1.1.4.1.4',
  fcFeModuleOperStatusDefinition => 'FIBRE-CHANNEL-FE-MIB::fcFeModuleOperStatus',
  fcFeModuleLastChange => '1.3.6.1.2.1.75.1.1.4.1.5',
  fcFeModuleFxPortCapacity => '1.3.6.1.2.1.75.1.1.4.1.6',
  fcFeModuleName => '1.3.6.1.2.1.75.1.1.4.1.7',
  fcFxPortTable => '1.3.6.1.2.1.75.1.1.5',
  fcFxPortEntry => '1.3.6.1.2.1.75.1.1.5.1',
  fcFxPortIndex => '1.3.6.1.2.1.75.1.1.5.1.1',
  fcFxPortName => '1.3.6.1.2.1.75.1.1.5.1.2',
  fcFxPortFcphVersionHigh => '1.3.6.1.2.1.75.1.1.5.1.3',
  fcFxPortFcphVersionLow => '1.3.6.1.2.1.75.1.1.5.1.4',
  fcFxPortBbCredit => '1.3.6.1.2.1.75.1.1.5.1.5',
  fcFxPortRxBufSize => '1.3.6.1.2.1.75.1.1.5.1.6',
  fcFxPortRatov => '1.3.6.1.2.1.75.1.1.5.1.7',
  fcFxPortEdtov => '1.3.6.1.2.1.75.1.1.5.1.8',
  fcFxPortCosSupported => '1.3.6.1.2.1.75.1.1.5.1.9',
  fcFxPortIntermixSupported => '1.3.6.1.2.1.75.1.1.5.1.10',
  fcFxPortStackedConnMode => '1.3.6.1.2.1.75.1.1.5.1.11',
  fcFxPortStackedConnModeDefinition => 'FIBRE-CHANNEL-FE-MIB::FcStackedConnMode',
  fcFxPortClass2SeqDeliv => '1.3.6.1.2.1.75.1.1.5.1.12',
  fcFxPortClass3SeqDeliv => '1.3.6.1.2.1.75.1.1.5.1.13',
  fcFxPortHoldTime => '1.3.6.1.2.1.75.1.1.5.1.14',
  fcFeStatus => '1.3.6.1.2.1.75.1.2',
  fcFxPortStatusTable => '1.3.6.1.2.1.75.1.2.1',
  fcFxPortStatusEntry => '1.3.6.1.2.1.75.1.2.1.1',
  fcFxPortID => '1.3.6.1.2.1.75.1.2.1.1.1',
  fcFxPortBbCreditAvailable => '1.3.6.1.2.1.75.1.2.1.1.2',
  fcFxPortOperMode => '1.3.6.1.2.1.75.1.2.1.1.3',
  fcFxPortOperModeDefinition => 'FIBRE-CHANNEL-FE-MIB::fcFxPortOperMode',
  fcFxPortAdminMode => '1.3.6.1.2.1.75.1.2.1.1.4',
  fcFxPortAdminModeDefinition => 'FIBRE-CHANNEL-FE-MIB::fcFxPortAdminMode',
  fcFxPortPhysTable => '1.3.6.1.2.1.75.1.2.2',
  fcFxPortPhysEntry => '1.3.6.1.2.1.75.1.2.2.1',
  fcFxPortPhysAdminStatus => '1.3.6.1.2.1.75.1.2.2.1.1',
  fcFxPortPhysAdminStatusDefinition => 'FIBRE-CHANNEL-FE-MIB::fcFxPortPhysAdminStatus',
  fcFxPortPhysOperStatus => '1.3.6.1.2.1.75.1.2.2.1.2',
  fcFxPortPhysOperStatusDefinition => 'FIBRE-CHANNEL-FE-MIB::fcFxPortPhysOperStatus',
  fcFxPortPhysLastChange => '1.3.6.1.2.1.75.1.2.2.1.3',
  fcFxPortPhysRttov => '1.3.6.1.2.1.75.1.2.2.1.4',
  fcFxLoginTable => '1.3.6.1.2.1.75.1.2.3',
  fcFxLoginEntry => '1.3.6.1.2.1.75.1.2.3.1',
  fcFxPortNxLoginIndex => '1.3.6.1.2.1.75.1.2.3.1.1',
  fcFxPortFcphVersionAgreed => '1.3.6.1.2.1.75.1.2.3.1.2',
  fcFxPortNxPortBbCredit => '1.3.6.1.2.1.75.1.2.3.1.3',
  fcFxPortNxPortRxDataFieldSize => '1.3.6.1.2.1.75.1.2.3.1.4',
  fcFxPortCosSuppAgreed => '1.3.6.1.2.1.75.1.2.3.1.5',
  fcFxPortIntermixSuppAgreed => '1.3.6.1.2.1.75.1.2.3.1.6',
  fcFxPortStackedConnModeAgreed => '1.3.6.1.2.1.75.1.2.3.1.7',
  fcFxPortStackedConnModeAgreedDefinition => 'FIBRE-CHANNEL-FE-MIB::FcStackedConnMode',
  fcFxPortClass2SeqDelivAgreed => '1.3.6.1.2.1.75.1.2.3.1.8',
  fcFxPortClass3SeqDelivAgreed => '1.3.6.1.2.1.75.1.2.3.1.9',
  fcFxPortNxPortName => '1.3.6.1.2.1.75.1.2.3.1.10',
  fcFxPortConnectedNxPort => '1.3.6.1.2.1.75.1.2.3.1.11',
  fcFxPortBbCreditModel => '1.3.6.1.2.1.75.1.2.3.1.12',
  fcFxPortBbCreditModelDefinition => 'FIBRE-CHANNEL-FE-MIB::FcBbCreditModel',
  fcFeError => '1.3.6.1.2.1.75.1.3',
  fcFxPortErrorTable => '1.3.6.1.2.1.75.1.3.1',
  fcFxPortErrorEntry => '1.3.6.1.2.1.75.1.3.1.1',
  fcFxPortLinkFailures => '1.3.6.1.2.1.75.1.3.1.1.1',
  fcFxPortSyncLosses => '1.3.6.1.2.1.75.1.3.1.1.2',
  fcFxPortSigLosses => '1.3.6.1.2.1.75.1.3.1.1.3',
  fcFxPortPrimSeqProtoErrors => '1.3.6.1.2.1.75.1.3.1.1.4',
  fcFxPortInvalidTxWords => '1.3.6.1.2.1.75.1.3.1.1.5',
  fcFxPortInvalidCrcs => '1.3.6.1.2.1.75.1.3.1.1.6',
  fcFxPortDelimiterErrors => '1.3.6.1.2.1.75.1.3.1.1.7',
  fcFxPortAddressIdErrors => '1.3.6.1.2.1.75.1.3.1.1.8',
  fcFxPortLinkResetIns => '1.3.6.1.2.1.75.1.3.1.1.9',
  fcFxPortLinkResetOuts => '1.3.6.1.2.1.75.1.3.1.1.10',
  fcFxPortOlsIns => '1.3.6.1.2.1.75.1.3.1.1.11',
  fcFxPortOlsOuts => '1.3.6.1.2.1.75.1.3.1.1.12',
  fcFeAccounting => '1.3.6.1.2.1.75.1.4',
  fcFxPortC1AccountingTable => '1.3.6.1.2.1.75.1.4.1',
  fcFxPortC1AccountingEntry => '1.3.6.1.2.1.75.1.4.1.1',
  fcFxPortC1InFrames => '1.3.6.1.2.1.75.1.4.1.1.1',
  fcFxPortC1OutFrames => '1.3.6.1.2.1.75.1.4.1.1.2',
  fcFxPortC1InOctets => '1.3.6.1.2.1.75.1.4.1.1.3',
  fcFxPortC1OutOctets => '1.3.6.1.2.1.75.1.4.1.1.4',
  fcFxPortC1Discards => '1.3.6.1.2.1.75.1.4.1.1.5',
  fcFxPortC1FbsyFrames => '1.3.6.1.2.1.75.1.4.1.1.6',
  fcFxPortC1FrjtFrames => '1.3.6.1.2.1.75.1.4.1.1.7',
  fcFxPortC1InConnections => '1.3.6.1.2.1.75.1.4.1.1.8',
  fcFxPortC1OutConnections => '1.3.6.1.2.1.75.1.4.1.1.9',
  fcFxPortC1ConnTime => '1.3.6.1.2.1.75.1.4.1.1.10',
  fcFxPortC2AccountingTable => '1.3.6.1.2.1.75.1.4.2',
  fcFxPortC2AccountingEntry => '1.3.6.1.2.1.75.1.4.2.1',
  fcFxPortC2InFrames => '1.3.6.1.2.1.75.1.4.2.1.1',
  fcFxPortC2OutFrames => '1.3.6.1.2.1.75.1.4.2.1.2',
  fcFxPortC2InOctets => '1.3.6.1.2.1.75.1.4.2.1.3',
  fcFxPortC2OutOctets => '1.3.6.1.2.1.75.1.4.2.1.4',
  fcFxPortC2Discards => '1.3.6.1.2.1.75.1.4.2.1.5',
  fcFxPortC2FbsyFrames => '1.3.6.1.2.1.75.1.4.2.1.6',
  fcFxPortC2FrjtFrames => '1.3.6.1.2.1.75.1.4.2.1.7',
  fcFxPortC3AccountingTable => '1.3.6.1.2.1.75.1.4.3',
  fcFxPortC3AccountingEntry => '1.3.6.1.2.1.75.1.4.3.1',
  fcFxPortC3InFrames => '1.3.6.1.2.1.75.1.4.3.1.1',
  fcFxPortC3OutFrames => '1.3.6.1.2.1.75.1.4.3.1.2',
  fcFxPortC3InOctets => '1.3.6.1.2.1.75.1.4.3.1.3',
  fcFxPortC3OutOctets => '1.3.6.1.2.1.75.1.4.3.1.4',
  fcFxPortC3Discards => '1.3.6.1.2.1.75.1.4.3.1.5',
  fcFeCapabilities => '1.3.6.1.2.1.75.1.5',
  fcFxPortCapTable => '1.3.6.1.2.1.75.1.5.1',
  fcFxPortCapEntry => '1.3.6.1.2.1.75.1.5.1.1',
  fcFxPortCapFcphVersionHigh => '1.3.6.1.2.1.75.1.5.1.1.1',
  fcFxPortCapFcphVersionLow => '1.3.6.1.2.1.75.1.5.1.1.2',
  fcFxPortCapBbCreditMax => '1.3.6.1.2.1.75.1.5.1.1.3',
  fcFxPortCapBbCreditMin => '1.3.6.1.2.1.75.1.5.1.1.4',
  fcFxPortCapRxDataFieldSizeMax => '1.3.6.1.2.1.75.1.5.1.1.5',
  fcFxPortCapRxDataFieldSizeMin => '1.3.6.1.2.1.75.1.5.1.1.6',
  fcFxPortCapCos => '1.3.6.1.2.1.75.1.5.1.1.7',
  fcFxPortCapIntermix => '1.3.6.1.2.1.75.1.5.1.1.8',
  fcFxPortCapStackedConnMode => '1.3.6.1.2.1.75.1.5.1.1.9',
  fcFxPortCapStackedConnModeDefinition => 'FIBRE-CHANNEL-FE-MIB::FcStackedConnMode',
  fcFxPortCapClass2SeqDeliv => '1.3.6.1.2.1.75.1.5.1.1.10',
  fcFxPortCapClass3SeqDeliv => '1.3.6.1.2.1.75.1.5.1.1.11',
  fcFxPortCapHoldTimeMax => '1.3.6.1.2.1.75.1.5.1.1.12',
  fcFxPortCapHoldTimeMin => '1.3.6.1.2.1.75.1.5.1.1.13',
  fcFeMIBConformance => '1.3.6.1.2.1.75.2',
  fcFeMIBCompliances => '1.3.6.1.2.1.75.2.1',
  fcFeMIBGroups => '1.3.6.1.2.1.75.2.2',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'FIBRE-CHANNEL-FE-MIB'} = {
  fcFxPortAdminMode => {
    '2' => 'fPort',
    '3' => 'flPort',
  },
  FcBbCreditModel => {
    '1' => 'regular',
    '2' => 'alternate',
  },
  fcFxPortPhysOperStatus => {
    '1' => 'online',
    '2' => 'offline',
    '3' => 'testing',
    '4' => 'linkFailure',
  },
  fcFxPortOperMode => {
    '1' => 'unknown',
    '2' => 'fPort',
    '3' => 'flPort',
  },
  FcStackedConnMode => {
    '1' => 'none',
    '2' => 'transparent',
    '3' => 'lockedDown',
  },
  fcFeModuleOperStatus => {
    '1' => 'online',
    '2' => 'offline',
    '3' => 'testing',
    '4' => 'faulty',
  },
  fcFxPortPhysAdminStatus => {
    '1' => 'online',
    '2' => 'offline',
    '3' => 'testing',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::FORTINETCOREMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'FORTINET-CORE-MIB'} = {
  url => '',
  name => 'FORTINET-CORE-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'FORTINET-CORE-MIB'} =
    '1.3.6.1.4.1.12356.100';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'FORTINET-CORE-MIB'} = {
  fortinet => '1.3.6.1.4.1.12356',
  fnCoreMib => '1.3.6.1.4.1.12356.100',
  fnCommon => '1.3.6.1.4.1.12356.100.1',
  fnSystem => '1.3.6.1.4.1.12356.100.1.1',
  fnSysSerial => '1.3.6.1.4.1.12356.100.1.1.1',
  fnMgmt => '1.3.6.1.4.1.12356.100.1.2',
  fnMgmtLanguage => '1.3.6.1.4.1.12356.100.1.2.1',
  fnMgmtLanguageDefinition => 'FORTINET-CORE-MIB::FnLanguage',
  fnAdmin => '1.3.6.1.4.1.12356.100.1.2.100',
  fnAdminNumber => '1.3.6.1.4.1.12356.100.1.2.100.1',
  fnAdminTable => '1.3.6.1.4.1.12356.100.1.2.100.2',
  fnAdminEntry => '1.3.6.1.4.1.12356.100.1.2.100.2.1',
  fnAdminIndex => '1.3.6.1.4.1.12356.100.1.2.100.2.1.1',
  fnAdminName => '1.3.6.1.4.1.12356.100.1.2.100.2.1.2',
  fnAdminAddrType => '1.3.6.1.4.1.12356.100.1.2.100.2.1.3',
  fnAdminAddr => '1.3.6.1.4.1.12356.100.1.2.100.2.1.4',
  fnAdminMask => '1.3.6.1.4.1.12356.100.1.2.100.2.1.5',
  fnTraps => '1.3.6.1.4.1.12356.100.1.3',
  fnTrapsPrefix => '1.3.6.1.4.1.12356.100.1.3.0',
  fnTrapObjects => '1.3.6.1.4.1.12356.100.1.3.1',
  fnGenTrapMsg => '1.3.6.1.4.1.12356.100.1.3.1.1',
  fnMIBConformance => '1.3.6.1.4.1.12356.100.10',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'FORTINET-CORE-MIB'} = {
  FnIndex => {
  },
  FnBoolState => {
    '1' => 'disabled',
    '2' => 'enabled',
  },
  FnLanguage => {
    '1' => 'english',
    '2' => 'simplifiedChinese',
    '3' => 'japanese',
    '4' => 'korean',
    '5' => 'spanish',
    '6' => 'traditionalChinese',
    '7' => 'french',
    '8' => 'portuguese',
    '255' => 'undefined',
  },
  FnSessionProto => {
    '0' => 'ip',
    '1' => 'icmp',
    '2' => 'igmp',
    '4' => 'ipip',
    '6' => 'tcp',
    '8' => 'egp',
    '12' => 'pup',
    '17' => 'udp',
    '22' => 'idp',
    '41' => 'ipv6',
    '46' => 'rsvp',
    '47' => 'gre',
    '50' => 'esp',
    '51' => 'ah',
    '89' => 'ospf',
    '103' => 'pim',
    '108' => 'comp',
    '255' => 'raw',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::FORTINETFORTIGATEMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'FORTINET-FORTIGATE-MIB'} = {
  url => '',
  name => 'FORTINET-FORTIGATE-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'FORTINET-FORTIGATE-MIB'} =
    '1.3.6.1.4.1.12356.101';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'FORTINET-FORTIGATE-MIB'} = {
  fnFortiGateMib => '1.3.6.1.4.1.12356.101',
  fgModel => '1.3.6.1.4.1.12356.101.1',
  fgtVM64 => '1.3.6.1.4.1.12356.101.1.30',
  fgtVM64VMX => '1.3.6.1.4.1.12356.101.1.31',
  fgtVM64SVM => '1.3.6.1.4.1.12356.101.1.32',
  fgtVM64XEN => '1.3.6.1.4.1.12356.101.1.40',
  fosVM64XEN => '1.3.6.1.4.1.12356.101.1.41',
  fgtVM64AWS => '1.3.6.1.4.1.12356.101.1.45',
  fgtVM64AWSONDEMAND => '1.3.6.1.4.1.12356.101.1.46',
  fgtVM64OPC => '1.3.6.1.4.1.12356.101.1.47',
  fgtVM64KVm => '1.3.6.1.4.1.12356.101.1.60',
  fgtVM64NPU => '1.3.6.1.4.1.12356.101.1.61',
  fgtVM64GCP => '1.3.6.1.4.1.12356.101.1.65',
  fgtVM64HV => '1.3.6.1.4.1.12356.101.1.70',
  fgt30D => '1.3.6.1.4.1.12356.101.1.304',
  fgt30DPOE => '1.3.6.1.4.1.12356.101.1.305',
  fgt30E => '1.3.6.1.4.1.12356.101.1.306',
  fgr30D => '1.3.6.1.4.1.12356.101.1.307',
  fgr35D => '1.3.6.1.4.1.12356.101.1.308',
  fr30DA => '1.3.6.1.4.1.12356.101.1.309',
  fwf30D => '1.3.6.1.4.1.12356.101.1.314',
  fwf30DPOE => '1.3.6.1.4.1.12356.101.1.315',
  fwf30E => '1.3.6.1.4.1.12356.101.1.316',
  fg30EN => '1.3.6.1.4.1.12356.101.1.320',
  fg30EI => '1.3.6.1.4.1.12356.101.1.321',
  fw30EN => '1.3.6.1.4.1.12356.101.1.322',
  fw30EI => '1.3.6.1.4.1.12356.101.1.323',
  fgt50E => '1.3.6.1.4.1.12356.101.1.505',
  fwf50E => '1.3.6.1.4.1.12356.101.1.506',
  fgt51E => '1.3.6.1.4.1.12356.101.1.515',
  fwf51E => '1.3.6.1.4.1.12356.101.1.516',
  fw502R => '1.3.6.1.4.1.12356.101.1.517',
  fgt52E => '1.3.6.1.4.1.12356.101.1.518',
  fgt60D => '1.3.6.1.4.1.12356.101.1.624',
  fgt60DPOE => '1.3.6.1.4.1.12356.101.1.625',
  fwf60D => '1.3.6.1.4.1.12356.101.1.626',
  fw60DP => '1.3.6.1.4.1.12356.101.1.627',
  fgt90D => '1.3.6.1.4.1.12356.101.1.630',
  fgt90DPOE => '1.3.6.1.4.1.12356.101.1.631',
  fwf90D => '1.3.6.1.4.1.12356.101.1.632',
  fwf90DPOE => '1.3.6.1.4.1.12356.101.1.633',
  fgt94DPOE => '1.3.6.1.4.1.12356.101.1.634',
  fgt98DPOE => '1.3.6.1.4.1.12356.101.1.635',
  fgt92D => '1.3.6.1.4.1.12356.101.1.636',
  fwf92D => '1.3.6.1.4.1.12356.101.1.637',
  fgr90D => '1.3.6.1.4.1.12356.101.1.638',
  fwf60E => '1.3.6.1.4.1.12356.101.1.639',
  fgt61E => '1.3.6.1.4.1.12356.101.1.640',
  fgt60E => '1.3.6.1.4.1.12356.101.1.641',
  fgt60EPOE => '1.3.6.1.4.1.12356.101.1.642',
  fgr60D => '1.3.6.1.4.1.12356.101.1.643',
  fw60EI => '1.3.6.1.4.1.12356.101.1.644',
  fw60EC => '1.3.6.1.4.1.12356.101.1.645',
  fg60EI => '1.3.6.1.4.1.12356.101.1.646',
  fg60EC => '1.3.6.1.4.1.12356.101.1.647',
  fwf61E => '1.3.6.1.4.1.12356.101.1.649',
  fgt60EJ => '1.3.6.1.4.1.12356.101.1.661',
  fwf60EJ => '1.3.6.1.4.1.12356.101.1.662',
  fgt60EV => '1.3.6.1.4.1.12356.101.1.663',
  fwf60EV => '1.3.6.1.4.1.12356.101.1.664',
  fgt70D => '1.3.6.1.4.1.12356.101.1.700',
  fgt70DPOE => '1.3.6.1.4.1.12356.101.1.701',
  fgt80C => '1.3.6.1.4.1.12356.101.1.800',
  fgt80CM => '1.3.6.1.4.1.12356.101.1.801',
  fgt80D => '1.3.6.1.4.1.12356.101.1.803',
  fwf80CM => '1.3.6.1.4.1.12356.101.1.810',
  fwf81CM => '1.3.6.1.4.1.12356.101.1.811',
  fgt80EPOE => '1.3.6.1.4.1.12356.101.1.841',
  fgt80E => '1.3.6.1.4.1.12356.101.1.842',
  fgt81E => '1.3.6.1.4.1.12356.101.1.843',
  fgt81EPOE => '1.3.6.1.4.1.12356.101.1.844',
  fg900D => '1.3.6.1.4.1.12356.101.1.900',
  fgt90E => '1.3.6.1.4.1.12356.101.1.940',
  fgt91E => '1.3.6.1.4.1.12356.101.1.941',
  fgt100D => '1.3.6.1.4.1.12356.101.1.1004',
  fgt140E => '1.3.6.1.4.1.12356.101.1.1005',
  fgt140EP => '1.3.6.1.4.1.12356.101.1.1006',
  fgt100E => '1.3.6.1.4.1.12356.101.1.1041',
  fgt100EF => '1.3.6.1.4.1.12356.101.1.1042',
  fgt101E => '1.3.6.1.4.1.12356.101.1.1043',
  fgt140D => '1.3.6.1.4.1.12356.101.1.1401',
  fgt140P => '1.3.6.1.4.1.12356.101.1.1402',
  fgt200D => '1.3.6.1.4.1.12356.101.1.2005',
  fgt240D => '1.3.6.1.4.1.12356.101.1.2006',
  fgt200DP => '1.3.6.1.4.1.12356.101.1.2007',
  fgt240DP => '1.3.6.1.4.1.12356.101.1.2008',
  fgt200E => '1.3.6.1.4.1.12356.101.1.2009',
  fgt201E => '1.3.6.1.4.1.12356.101.1.2010',
  fgt280D => '1.3.6.1.4.1.12356.101.1.2013',
  fgt3HD => '1.3.6.1.4.1.12356.101.1.3006',
  fgt300E => '1.3.6.1.4.1.12356.101.1.3007',
  fgt301E => '1.3.6.1.4.1.12356.101.1.3008',
  fgt400D => '1.3.6.1.4.1.12356.101.1.4004',
  fgt500D => '1.3.6.1.4.1.12356.101.1.5004',
  fgt500E => '1.3.6.1.4.1.12356.101.1.5005',
  fgt501E => '1.3.6.1.4.1.12356.101.1.5006',
  fgt600C => '1.3.6.1.4.1.12356.101.1.6003',
  fgt600D => '1.3.6.1.4.1.12356.101.1.6004',
  fgt800C => '1.3.6.1.4.1.12356.101.1.8003',
  fgt800D => '1.3.6.1.4.1.12356.101.1.8004',
  fgt1000C => '1.3.6.1.4.1.12356.101.1.10004',
  fgt1000D => '1.3.6.1.4.1.12356.101.1.10005',
  fgt1200D => '1.3.6.1.4.1.12356.101.1.12000',
  fgt1500D => '1.3.6.1.4.1.12356.101.1.15000',
  fgt1500DT => '1.3.6.1.4.1.12356.101.1.15001',
  fgt2000E => '1.3.6.1.4.1.12356.101.1.20000',
  fgt2500E => '1.3.6.1.4.1.12356.101.1.25000',
  fgt3000D => '1.3.6.1.4.1.12356.101.1.30000',
  fgt3100D => '1.3.6.1.4.1.12356.101.1.31000',
  fgt3200D => '1.3.6.1.4.1.12356.101.1.32000',
  fgt3240C => '1.3.6.1.4.1.12356.101.1.32401',
  fgt3600C => '1.3.6.1.4.1.12356.101.1.36004',
  fgt3700D => '1.3.6.1.4.1.12356.101.1.37000',
  fgt3700DX => '1.3.6.1.4.1.12356.101.1.37001',
  fgt3800D => '1.3.6.1.4.1.12356.101.1.38001',
  fgt3810D => '1.3.6.1.4.1.12356.101.1.38101',
  fgt3815D => '1.3.6.1.4.1.12356.101.1.38150',
  fgt3960E => '1.3.6.1.4.1.12356.101.1.39601',
  fgt3980E => '1.3.6.1.4.1.12356.101.1.39801',
  fgt5001C => '1.3.6.1.4.1.12356.101.1.50014',
  fgt5001D => '1.3.6.1.4.1.12356.101.1.50015',
  fgt5001E => '1.3.6.1.4.1.12356.101.1.50016',
  fgt5001E1 => '1.3.6.1.4.1.12356.101.1.50017',
  fosVM64 => '1.3.6.1.4.1.12356.101.1.90000',
  fgtVM64AZUREONDEMAND => '1.3.6.1.4.1.12356.101.1.90010',
  fgtVM64GCPONDEMAND => '1.3.6.1.4.1.12356.101.1.90018',
  fgtVM64ALI => '1.3.6.1.4.1.12356.101.1.90019',
  fgtVM64ALIONDEMAND => '1.3.6.1.4.1.12356.101.1.90020',
  fosVM64KVM => '1.3.6.1.4.1.12356.101.1.90060',
  fgtVM64AZURE => '1.3.6.1.4.1.12356.101.1.90081',
  fgTraps => '1.3.6.1.4.1.12356.101.2',
  fgTrapPrefix => '1.3.6.1.4.1.12356.101.2.0',
  fgVirtualDomain => '1.3.6.1.4.1.12356.101.3',
  fgVdInfo => '1.3.6.1.4.1.12356.101.3.1',
  fgVdNumber => '1.3.6.1.4.1.12356.101.3.1.1',
  fgVdMaxVdoms => '1.3.6.1.4.1.12356.101.3.1.2',
  fgVdEnabled => '1.3.6.1.4.1.12356.101.3.1.3',
  fgVdEnabledDefinition => 'FORTINET-CORE-MIB::FnBoolState',
  fgVdTables => '1.3.6.1.4.1.12356.101.3.2',
  fgVdTable => '1.3.6.1.4.1.12356.101.3.2.1',
  fgVdEntry => '1.3.6.1.4.1.12356.101.3.2.1.1',
  fgVdEntIndex => '1.3.6.1.4.1.12356.101.3.2.1.1.1',
  fgVdEntName => '1.3.6.1.4.1.12356.101.3.2.1.1.2',
  fgVdEntOpMode => '1.3.6.1.4.1.12356.101.3.2.1.1.3',
  fgVdEntOpModeDefinition => 'FORTINET-FORTIGATE-MIB::FgOpMode',
  fgVdEntHaState => '1.3.6.1.4.1.12356.101.3.2.1.1.4',
  fgVdEntHaStateDefinition => 'FORTINET-FORTIGATE-MIB::FgHaState',
  fgVdEntCpuUsage => '1.3.6.1.4.1.12356.101.3.2.1.1.5',
  fgVdEntMemUsage => '1.3.6.1.4.1.12356.101.3.2.1.1.6',
  fgVdEntSesCount => '1.3.6.1.4.1.12356.101.3.2.1.1.7',
  fgVdEntSesRate => '1.3.6.1.4.1.12356.101.3.2.1.1.8',
  fgVdTpTable => '1.3.6.1.4.1.12356.101.3.2.2',
  fgVdTpEntry => '1.3.6.1.4.1.12356.101.3.2.2.1',
  fgVdTpMgmtAddrType => '1.3.6.1.4.1.12356.101.3.2.2.1.1',
  fgVdTpMgmtAddr => '1.3.6.1.4.1.12356.101.3.2.2.1.2',
  fgVdTpMgmtMask => '1.3.6.1.4.1.12356.101.3.2.2.1.3',
  fgSystem => '1.3.6.1.4.1.12356.101.4',
  fgSystemInfo => '1.3.6.1.4.1.12356.101.4.1',
  fgSysVersion => '1.3.6.1.4.1.12356.101.4.1.1',
  fgSysMgmtVdom => '1.3.6.1.4.1.12356.101.4.1.2',
  fgSysCpuUsage => '1.3.6.1.4.1.12356.101.4.1.3',
  fgSysMemUsage => '1.3.6.1.4.1.12356.101.4.1.4',
  fgSysMemCapacity => '1.3.6.1.4.1.12356.101.4.1.5',
  fgSysDiskUsage => '1.3.6.1.4.1.12356.101.4.1.6',
  fgSysDiskCapacity => '1.3.6.1.4.1.12356.101.4.1.7',
  fgSysSesCount => '1.3.6.1.4.1.12356.101.4.1.8',
  fgSysLowMemUsage => '1.3.6.1.4.1.12356.101.4.1.9',
  fgSysLowMemCapacity => '1.3.6.1.4.1.12356.101.4.1.10',
  fgSysSesRate1 => '1.3.6.1.4.1.12356.101.4.1.11',
  fgSysSesRate10 => '1.3.6.1.4.1.12356.101.4.1.12',
  fgSysSesRate30 => '1.3.6.1.4.1.12356.101.4.1.13',
  fgSysSesRate60 => '1.3.6.1.4.1.12356.101.4.1.14',
  fgSysSes6Count => '1.3.6.1.4.1.12356.101.4.1.15',
  fgSysSes6Rate1 => '1.3.6.1.4.1.12356.101.4.1.16',
  fgSysSes6Rate10 => '1.3.6.1.4.1.12356.101.4.1.17',
  fgSysSes6Rate30 => '1.3.6.1.4.1.12356.101.4.1.18',
  fgSysSes6Rate60 => '1.3.6.1.4.1.12356.101.4.1.19',
  fgSysUpTime => '1.3.6.1.4.1.12356.101.4.1.20',
  fgSoftware => '1.3.6.1.4.1.12356.101.4.2',
  fgSysVersionAv => '1.3.6.1.4.1.12356.101.4.2.1',
  fgSysVersionIps => '1.3.6.1.4.1.12356.101.4.2.2',
  fgSysVersionAvEt => '1.3.6.1.4.1.12356.101.4.2.3',
  fgSysVersionIpsEt => '1.3.6.1.4.1.12356.101.4.2.4',
  fgHwSensors => '1.3.6.1.4.1.12356.101.4.3',
  fgHwSensorCount => '1.3.6.1.4.1.12356.101.4.3.1',
  fgHwSensorTable => '1.3.6.1.4.1.12356.101.4.3.2',
  fgHwSensorEntry => '1.3.6.1.4.1.12356.101.4.3.2.1',
  fgHwSensorEntIndex => '1.3.6.1.4.1.12356.101.4.3.2.1.1',
  fgHwSensorEntName => '1.3.6.1.4.1.12356.101.4.3.2.1.2',
  fgHwSensorEntValue => '1.3.6.1.4.1.12356.101.4.3.2.1.3',
  fgHwSensorEntAlarmStatus => '1.3.6.1.4.1.12356.101.4.3.2.1.4',
  fgHwSensorEntAlarmStatusDefinition => 'FORTINET-FORTIGATE-MIB::fgHwSensorEntAlarmStatus',
  fgProcessors => '1.3.6.1.4.1.12356.101.4.4',
  fgProcessorCount => '1.3.6.1.4.1.12356.101.4.4.1',
  fgProcessorTable => '1.3.6.1.4.1.12356.101.4.4.2',
  fgProcessorEntry => '1.3.6.1.4.1.12356.101.4.4.2.1',
  fgProcessorEntIndex => '1.3.6.1.4.1.12356.101.4.4.2.1.1',
  fgProcessorUsage => '1.3.6.1.4.1.12356.101.4.4.2.1.2',
  fgProcessorUsage5sec => '1.3.6.1.4.1.12356.101.4.4.2.1.3',
  fgProcessorType => '1.3.6.1.4.1.12356.101.4.4.2.1.4',
  fgProcessorContainedIn => '1.3.6.1.4.1.12356.101.4.4.2.1.5',
  fgProcessorPktRxCount => '1.3.6.1.4.1.12356.101.4.4.2.1.6',
  fgProcessorPktTxCount => '1.3.6.1.4.1.12356.101.4.4.2.1.7',
  fgProcessorPktDroppedCount => '1.3.6.1.4.1.12356.101.4.4.2.1.8',
  fgProcessorUserUsage => '1.3.6.1.4.1.12356.101.4.4.2.1.9',
  fgProcessorSysUsage => '1.3.6.1.4.1.12356.101.4.4.2.1.10',
  fgProcessorTypes => '1.3.6.1.4.1.12356.101.4.4.3',
  fgProcessorOther => '1.3.6.1.4.1.12356.101.4.4.3.1',
  fgProcessorIntel => '1.3.6.1.4.1.12356.101.4.4.3.2',
  fgProcessorAMD => '1.3.6.1.4.1.12356.101.4.4.3.3',
  fgProcessorXlr => '1.3.6.1.4.1.12356.101.4.4.3.4',
  fgProcessorFnSoc => '1.3.6.1.4.1.12356.101.4.4.3.5',
  fgProcessorFnNP2 => '1.3.6.1.4.1.12356.101.4.4.3.6',
  fgProcessorFnNP4 => '1.3.6.1.4.1.12356.101.4.4.3.7',
  fgProcessorFnNP6 => '1.3.6.1.4.1.12356.101.4.4.3.8',
  fgProcessorsTrapObjects => '1.3.6.1.4.1.12356.101.4.4.4',
  fgPerCpuHighDetails => '1.3.6.1.4.1.12356.101.4.4.4.1',
  fgProcessorModules => '1.3.6.1.4.1.12356.101.4.5',
  fgProcessorModuleTypes => '1.3.6.1.4.1.12356.101.4.5.1',
  fgProcModOther => '1.3.6.1.4.1.12356.101.4.5.1.1',
  fgProcModIntegrated => '1.3.6.1.4.1.12356.101.4.5.1.2',
  fgProcModFnXE2 => '1.3.6.1.4.1.12356.101.4.5.1.3',
  fgProcModFnCE4 => '1.3.6.1.4.1.12356.101.4.5.1.4',
  fgProcModFnFE8 => '1.3.6.1.4.1.12356.101.4.5.1.5',
  fgProcModFnXG2 => '1.3.6.1.4.1.12356.101.4.5.1.6',
  fgProcModIntegratedNPU => '1.3.6.1.4.1.12356.101.4.5.1.7',
  fgProcModFnXD2 => '1.3.6.1.4.1.12356.101.4.5.1.8',
  fgProcModFnF20 => '1.3.6.1.4.1.12356.101.4.5.1.9',
  fgProcModFnC20 => '1.3.6.1.4.1.12356.101.4.5.1.10',
  fgProcModFnXD4 => '1.3.6.1.4.1.12356.101.4.5.1.11',
  fgProcModFnFB4 => '1.3.6.1.4.1.12356.101.4.5.1.12',
  fgProcModFnFB8 => '1.3.6.1.4.1.12356.101.4.5.1.13',
  fgProcModFnXB2 => '1.3.6.1.4.1.12356.101.4.5.1.14',
  fgProcessorModuleCount => '1.3.6.1.4.1.12356.101.4.5.2',
  fgProcessorModuleTable => '1.3.6.1.4.1.12356.101.4.5.3',
  fgProcessorModuleEntry => '1.3.6.1.4.1.12356.101.4.5.3.1',
  fgProcModIndex => '1.3.6.1.4.1.12356.101.4.5.3.1.1',
  fgProcModType => '1.3.6.1.4.1.12356.101.4.5.3.1.2',
  fgProcModName => '1.3.6.1.4.1.12356.101.4.5.3.1.3',
  fgProcModDescr => '1.3.6.1.4.1.12356.101.4.5.3.1.4',
  fgProcModProcessorCount => '1.3.6.1.4.1.12356.101.4.5.3.1.5',
  fgProcModMemCapacity => '1.3.6.1.4.1.12356.101.4.5.3.1.6',
  fgProcModMemUsage => '1.3.6.1.4.1.12356.101.4.5.3.1.7',
  fgProcModSessionCount => '1.3.6.1.4.1.12356.101.4.5.3.1.8',
  fgProcModSACount => '1.3.6.1.4.1.12356.101.4.5.3.1.9',
  fgSystemInfoAdvanced => '1.3.6.1.4.1.12356.101.4.6',
  fgSysInfoAdvMem => '1.3.6.1.4.1.12356.101.4.6.1',
  fgSIAdvMemPageCache => '1.3.6.1.4.1.12356.101.4.6.1.1',
  fgSIAdvMemCacheActive => '1.3.6.1.4.1.12356.101.4.6.1.2',
  fgSIAdvMemCacheInactive => '1.3.6.1.4.1.12356.101.4.6.1.3',
  fgSIAdvMemBuffer => '1.3.6.1.4.1.12356.101.4.6.1.4',
  fgSIAdvMemEnterKerConsThrsh => '1.3.6.1.4.1.12356.101.4.6.1.5',
  fgSIAdvMemLeaveKerConsThrsh => '1.3.6.1.4.1.12356.101.4.6.1.6',
  fgSIAdvMemEnterProxyConsThrsh => '1.3.6.1.4.1.12356.101.4.6.1.7',
  fgSIAdvMemLeaveProxyConsThrsh => '1.3.6.1.4.1.12356.101.4.6.1.8',
  fgSysInfoAdvSessions => '1.3.6.1.4.1.12356.101.4.6.2',
  fgSIAdvSesEphemeralCount => '1.3.6.1.4.1.12356.101.4.6.2.1',
  fgSIAdvSesEphemeralLimit => '1.3.6.1.4.1.12356.101.4.6.2.2',
  fgSIAdvSesClashCount => '1.3.6.1.4.1.12356.101.4.6.2.3',
  fgSIAdvSesExpCount => '1.3.6.1.4.1.12356.101.4.6.2.4',
  fgSIAdvSesSyncQFCount => '1.3.6.1.4.1.12356.101.4.6.2.5',
  fgSIAdvSesAcceptQFCount => '1.3.6.1.4.1.12356.101.4.6.2.6',
  fgSIAdvSesNoListenerCount => '1.3.6.1.4.1.12356.101.4.6.2.7',
  fgUsbports => '1.3.6.1.4.1.12356.101.4.7',
  fgUsbportCount => '1.3.6.1.4.1.12356.101.4.7.1',
  fgUsbportTable => '1.3.6.1.4.1.12356.101.4.7.2',
  fgUsbportEntry => '1.3.6.1.4.1.12356.101.4.7.2.1',
  fgUsbportEntIndex => '1.3.6.1.4.1.12356.101.4.7.2.1.1',
  fgUsbportPlugged => '1.3.6.1.4.1.12356.101.4.7.2.1.2',
  fgUsbportPluggedDefinition => 'FORTINET-FORTIGATE-MIB::fgUsbportPlugged',
  fgUsbportVersion => '1.3.6.1.4.1.12356.101.4.7.2.1.3',
  fgUsbportClass => '1.3.6.1.4.1.12356.101.4.7.2.1.4',
  fgUsbportClassDefinition => 'FORTINET-FORTIGATE-MIB::fgUsbportClass',
  fgUsbportVendId => '1.3.6.1.4.1.12356.101.4.7.2.1.5',
  fgUsbportProdId => '1.3.6.1.4.1.12356.101.4.7.2.1.6',
  fgUsbportRevision => '1.3.6.1.4.1.12356.101.4.7.2.1.7',
  fgUsbportManufacturer => '1.3.6.1.4.1.12356.101.4.7.2.1.8',
  fgUsbportProduct => '1.3.6.1.4.1.12356.101.4.7.2.1.9',
  fgUsbportSerial => '1.3.6.1.4.1.12356.101.4.7.2.1.10',
  fgLinkMonitor => '1.3.6.1.4.1.12356.101.4.8',
  fgLinkMonitorNumber => '1.3.6.1.4.1.12356.101.4.8.1',
  fgLinkMonitorTable => '1.3.6.1.4.1.12356.101.4.8.2',
  fgLinkMonitorEntry => '1.3.6.1.4.1.12356.101.4.8.2.1',
  fgLinkMonitorID => '1.3.6.1.4.1.12356.101.4.8.2.1.1',
  fgLinkMonitorName => '1.3.6.1.4.1.12356.101.4.8.2.1.2',
  fgLinkMonitorState => '1.3.6.1.4.1.12356.101.4.8.2.1.3',
  fgLinkMonitorStateDefinition => 'FORTINET-FORTIGATE-MIB::fgLinkMonitorState',
  fgLinkMonitorLatency => '1.3.6.1.4.1.12356.101.4.8.2.1.4',
  fgLinkMonitorJitter => '1.3.6.1.4.1.12356.101.4.8.2.1.5',
  fgLinkMonitorPacketSend => '1.3.6.1.4.1.12356.101.4.8.2.1.6',
  fgLinkMonitorPacketRecv => '1.3.6.1.4.1.12356.101.4.8.2.1.7',
  fgLinkMonitorPacketLoss => '1.3.6.1.4.1.12356.101.4.8.2.1.8',
  fgLinkMonitorVdom => '1.3.6.1.4.1.12356.101.4.8.2.1.9',
  fgFirewall => '1.3.6.1.4.1.12356.101.5',
  fgFwPolicies => '1.3.6.1.4.1.12356.101.5.1',
  fgFwPolInfo => '1.3.6.1.4.1.12356.101.5.1.1',
  fgFwPolTables => '1.3.6.1.4.1.12356.101.5.1.2',
  fgFwPolStatsTable => '1.3.6.1.4.1.12356.101.5.1.2.1',
  fgFwPolStatsEntry => '1.3.6.1.4.1.12356.101.5.1.2.1.1',
  fgFwPolID => '1.3.6.1.4.1.12356.101.5.1.2.1.1.1',
  fgFwPolPktCount => '1.3.6.1.4.1.12356.101.5.1.2.1.1.2',
  fgFwPolByteCount => '1.3.6.1.4.1.12356.101.5.1.2.1.1.3',
  fgFwPolLastUsed => '1.3.6.1.4.1.12356.101.5.1.2.1.1.4',
  fgFwPolPktCountHc => '1.3.6.1.4.1.12356.101.5.1.2.1.1.5',
  fgFwPolByteCountHc => '1.3.6.1.4.1.12356.101.5.1.2.1.1.6',
  fgFwPol6StatsTable => '1.3.6.1.4.1.12356.101.5.1.2.2',
  fgFwPol6StatsEntry => '1.3.6.1.4.1.12356.101.5.1.2.2.1',
  fgFwPol6ID => '1.3.6.1.4.1.12356.101.5.1.2.2.1.1',
  fgFwPol6PktCount => '1.3.6.1.4.1.12356.101.5.1.2.2.1.2',
  fgFwPol6ByteCount => '1.3.6.1.4.1.12356.101.5.1.2.2.1.3',
  fgFwPol6LastUsed => '1.3.6.1.4.1.12356.101.5.1.2.2.1.4',
  fgFwUsers => '1.3.6.1.4.1.12356.101.5.2',
  fgFwUserInfo => '1.3.6.1.4.1.12356.101.5.2.1',
  fgFwUserNumber => '1.3.6.1.4.1.12356.101.5.2.1.1',
  fgFwUserAuthTimeout => '1.3.6.1.4.1.12356.101.5.2.1.2',
  fgFwUserTables => '1.3.6.1.4.1.12356.101.5.2.2',
  fgFwUserTable => '1.3.6.1.4.1.12356.101.5.2.2.1',
  fgFwUserEntry => '1.3.6.1.4.1.12356.101.5.2.2.1.1',
  fgFwUserIndex => '1.3.6.1.4.1.12356.101.5.2.2.1.1.1',
  fgFwUserName => '1.3.6.1.4.1.12356.101.5.2.2.1.1.2',
  fgFwUserAuth => '1.3.6.1.4.1.12356.101.5.2.2.1.1.3',
  fgFwUserAuthDefinition => 'FORTINET-FORTIGATE-MIB::FgFwUserAuthType',
  fgFwUserState => '1.3.6.1.4.1.12356.101.5.2.2.1.1.4',
  fgFwUserStateDefinition => 'FORTINET-CORE-MIB::FnBoolState',
  fgFwUserVdom => '1.3.6.1.4.1.12356.101.5.2.2.1.1.5',
  fgFwIppools => '1.3.6.1.4.1.12356.101.5.3',
  fgFwIppTables => '1.3.6.1.4.1.12356.101.5.3.2',
  fgFwIppStatsTable => '1.3.6.1.4.1.12356.101.5.3.2.1',
  fgFwIppStatsEntry => '1.3.6.1.4.1.12356.101.5.3.2.1.1',
  fgFwIppStatsName => '1.3.6.1.4.1.12356.101.5.3.2.1.1.1',
  fgFwIppStatsType => '1.3.6.1.4.1.12356.101.5.3.2.1.1.2',
  fgFwIppStatsStartIp => '1.3.6.1.4.1.12356.101.5.3.2.1.1.3',
  fgFwIppStatsEndIp => '1.3.6.1.4.1.12356.101.5.3.2.1.1.4',
  fgFwIppStatsTotalSessions => '1.3.6.1.4.1.12356.101.5.3.2.1.1.5',
  fgFwIppStatsTcpSessions => '1.3.6.1.4.1.12356.101.5.3.2.1.1.6',
  fgFwIppStatsUdpSessions => '1.3.6.1.4.1.12356.101.5.3.2.1.1.7',
  fgFwIppStatsOtherSessions => '1.3.6.1.4.1.12356.101.5.3.2.1.1.8',
  fgMgmt => '1.3.6.1.4.1.12356.101.6',
  fgFmTrapPrefix => '1.3.6.1.4.1.12356.101.6.0',
  fgAdmin => '1.3.6.1.4.1.12356.101.6.1',
  fgAdminOptions => '1.3.6.1.4.1.12356.101.6.1.1',
  fgAdminIdleTimeout => '1.3.6.1.4.1.12356.101.6.1.1.1',
  fgAdminLcdProtection => '1.3.6.1.4.1.12356.101.6.1.1.2',
  fgAdminTables => '1.3.6.1.4.1.12356.101.6.1.2',
  fgAdminTable => '1.3.6.1.4.1.12356.101.6.1.2.1',
  fgAdminEntry => '1.3.6.1.4.1.12356.101.6.1.2.1.1',
  fgAdminVdom => '1.3.6.1.4.1.12356.101.6.1.2.1.1.1',
  fgMgmtTrapObjects => '1.3.6.1.4.1.12356.101.6.2',
  fgManIfIp => '1.3.6.1.4.1.12356.101.6.2.1',
  fgManIfMask => '1.3.6.1.4.1.12356.101.6.2.2',
  fgManIfIp6 => '1.3.6.1.4.1.12356.101.6.2.3',
  fgIntf => '1.3.6.1.4.1.12356.101.7',
  fgIntfInfo => '1.3.6.1.4.1.12356.101.7.1',
  fgIntfTables => '1.3.6.1.4.1.12356.101.7.2',
  fgIntfTable => '1.3.6.1.4.1.12356.101.7.2.1',
  fgIntfEntry => '1.3.6.1.4.1.12356.101.7.2.1.1',
  fgIntfEntVdom => '1.3.6.1.4.1.12356.101.7.2.1.1.1',
  fgIntfVrrps => '1.3.6.1.4.1.12356.101.7.3',
  fgIntfVrrpCount => '1.3.6.1.4.1.12356.101.7.3.1',
  fgIntfVrrpTable => '1.3.6.1.4.1.12356.101.7.3.2',
  fgIntfVrrpEntry => '1.3.6.1.4.1.12356.101.7.3.2.1',
  fgIntfVrrpEntIndex => '1.3.6.1.4.1.12356.101.7.3.2.1.1',
  fgIntfVrrpEntVrId => '1.3.6.1.4.1.12356.101.7.3.2.1.2',
  fgIntfVrrpEntGrpId => '1.3.6.1.4.1.12356.101.7.3.2.1.3',
  fgIntfVrrpEntIfName => '1.3.6.1.4.1.12356.101.7.3.2.1.4',
  fgIntfVrrpEntState => '1.3.6.1.4.1.12356.101.7.3.2.1.5',
  fgIntfVrrpEntStateDefinition => 'FORTINET-FORTIGATE-MIB::fgIntfVrrpEntState',
  fgIntfVrrpEntVrIp => '1.3.6.1.4.1.12356.101.7.3.2.1.6',
  fgIntfVlanHbs => '1.3.6.1.4.1.12356.101.7.4',
  fgIntfVlanHbCount => '1.3.6.1.4.1.12356.101.7.4.1',
  fgIntfVlanHbTable => '1.3.6.1.4.1.12356.101.7.4.2',
  fgIntfVlanHbEntry => '1.3.6.1.4.1.12356.101.7.4.2.1',
  fgIntfVlanHbEntIndex => '1.3.6.1.4.1.12356.101.7.4.2.1.1',
  fgIntfVlanHbEntIfName => '1.3.6.1.4.1.12356.101.7.4.2.1.2',
  fgIntfVlanHbEntSerial => '1.3.6.1.4.1.12356.101.7.4.2.1.3',
  fgIntfVlanHbEntState => '1.3.6.1.4.1.12356.101.7.4.2.1.4',
  fgIntfVlanHbEntStateDefinition => 'FORTINET-FORTIGATE-MIB::fgIntfVlanHbEntState',
  fgAntivirus => '1.3.6.1.4.1.12356.101.8',
  fgAvInfo => '1.3.6.1.4.1.12356.101.8.1',
  fgAvTables => '1.3.6.1.4.1.12356.101.8.2',
  fgAvStatsTable => '1.3.6.1.4.1.12356.101.8.2.1',
  fgAvStatsEntry => '1.3.6.1.4.1.12356.101.8.2.1.1',
  fgAvVirusDetected => '1.3.6.1.4.1.12356.101.8.2.1.1.1',
  fgAvVirusBlocked => '1.3.6.1.4.1.12356.101.8.2.1.1.2',
  fgAvHTTPVirusDetected => '1.3.6.1.4.1.12356.101.8.2.1.1.3',
  fgAvHTTPVirusBlocked => '1.3.6.1.4.1.12356.101.8.2.1.1.4',
  fgAvSMTPVirusDetected => '1.3.6.1.4.1.12356.101.8.2.1.1.5',
  fgAvSMTPVirusBlocked => '1.3.6.1.4.1.12356.101.8.2.1.1.6',
  fgAvPOP3VirusDetected => '1.3.6.1.4.1.12356.101.8.2.1.1.7',
  fgAvPOP3VirusBlocked => '1.3.6.1.4.1.12356.101.8.2.1.1.8',
  fgAvIMAPVirusDetected => '1.3.6.1.4.1.12356.101.8.2.1.1.9',
  fgAvIMAPVirusBlocked => '1.3.6.1.4.1.12356.101.8.2.1.1.10',
  fgAvFTPVirusDetected => '1.3.6.1.4.1.12356.101.8.2.1.1.11',
  fgAvFTPVirusBlocked => '1.3.6.1.4.1.12356.101.8.2.1.1.12',
  fgAvIMVirusDetected => '1.3.6.1.4.1.12356.101.8.2.1.1.13',
  fgAvIMVirusBlocked => '1.3.6.1.4.1.12356.101.8.2.1.1.14',
  fgAvNNTPVirusDetected => '1.3.6.1.4.1.12356.101.8.2.1.1.15',
  fgAvNNTPVirusBlocked => '1.3.6.1.4.1.12356.101.8.2.1.1.16',
  fgAvOversizedDetected => '1.3.6.1.4.1.12356.101.8.2.1.1.17',
  fgAvOversizedBlocked => '1.3.6.1.4.1.12356.101.8.2.1.1.18',
  fgAvMAPIVirusDetected => '1.3.6.1.4.1.12356.101.8.2.1.1.19',
  fgAvMAPIVirusBlocked => '1.3.6.1.4.1.12356.101.8.2.1.1.20',
  fgAvTrapObjects => '1.3.6.1.4.1.12356.101.8.3',
  fgAvTrapVirName => '1.3.6.1.4.1.12356.101.8.3.1',
  fgIps => '1.3.6.1.4.1.12356.101.9',
  fgIpsInfo => '1.3.6.1.4.1.12356.101.9.1',
  fgIpsTables => '1.3.6.1.4.1.12356.101.9.2',
  fgIpsStatsTable => '1.3.6.1.4.1.12356.101.9.2.1',
  fgIpsStatsEntry => '1.3.6.1.4.1.12356.101.9.2.1.1',
  fgIpsIntrusionsDetected => '1.3.6.1.4.1.12356.101.9.2.1.1.1',
  fgIpsIntrusionsBlocked => '1.3.6.1.4.1.12356.101.9.2.1.1.2',
  fgIpsCritSevDetections => '1.3.6.1.4.1.12356.101.9.2.1.1.3',
  fgIpsHighSevDetections => '1.3.6.1.4.1.12356.101.9.2.1.1.4',
  fgIpsMedSevDetections => '1.3.6.1.4.1.12356.101.9.2.1.1.5',
  fgIpsLowSevDetections => '1.3.6.1.4.1.12356.101.9.2.1.1.6',
  fgIpsInfoSevDetections => '1.3.6.1.4.1.12356.101.9.2.1.1.7',
  fgIpsSignatureDetections => '1.3.6.1.4.1.12356.101.9.2.1.1.8',
  fgIpsAnomalyDetections => '1.3.6.1.4.1.12356.101.9.2.1.1.9',
  fgIpsTrapObjects => '1.3.6.1.4.1.12356.101.9.3',
  fgIpsTrapSigId => '1.3.6.1.4.1.12356.101.9.3.1',
  fgIpsTrapSrcIp => '1.3.6.1.4.1.12356.101.9.3.2',
  fgIpsTrapSigMsg => '1.3.6.1.4.1.12356.101.9.3.3',
  fgApplications => '1.3.6.1.4.1.12356.101.10',
  fgWebfilter => '1.3.6.1.4.1.12356.101.10.1',
  fgWebfilterInfo => '1.3.6.1.4.1.12356.101.10.1.1',
  fgWebfilterTables => '1.3.6.1.4.1.12356.101.10.1.2',
  fgWebfilterStatsTable => '1.3.6.1.4.1.12356.101.10.1.2.1',
  fgWebfilterStatsEntry => '1.3.6.1.4.1.12356.101.10.1.2.1.1',
  fgWfHTTPBlocked => '1.3.6.1.4.1.12356.101.10.1.2.1.1.1',
  fgWfHTTPSBlocked => '1.3.6.1.4.1.12356.101.10.1.2.1.1.2',
  fgWfHTTPURLBlocked => '1.3.6.1.4.1.12356.101.10.1.2.1.1.3',
  fgWfHTTPSURLBlocked => '1.3.6.1.4.1.12356.101.10.1.2.1.1.4',
  fgWfActiveXBlocked => '1.3.6.1.4.1.12356.101.10.1.2.1.1.5',
  fgWfCookieBlocked => '1.3.6.1.4.1.12356.101.10.1.2.1.1.6',
  fgWfAppletBlocked => '1.3.6.1.4.1.12356.101.10.1.2.1.1.7',
  fgFortiGuardStatsTable => '1.3.6.1.4.1.12356.101.10.1.2.2',
  fgFortiGuardStatsEntry => '1.3.6.1.4.1.12356.101.10.1.2.2.1',
  fgFgWfHTTPExamined => '1.3.6.1.4.1.12356.101.10.1.2.2.1.1',
  fgFgWfHTTPSExamined => '1.3.6.1.4.1.12356.101.10.1.2.2.1.2',
  fgFgWfHTTPAllowed => '1.3.6.1.4.1.12356.101.10.1.2.2.1.3',
  fgFgWfHTTPSAllowed => '1.3.6.1.4.1.12356.101.10.1.2.2.1.4',
  fgFgWfHTTPBlocked => '1.3.6.1.4.1.12356.101.10.1.2.2.1.5',
  fgFgWfHTTPSBlocked => '1.3.6.1.4.1.12356.101.10.1.2.2.1.6',
  fgFgWfHTTPLogged => '1.3.6.1.4.1.12356.101.10.1.2.2.1.7',
  fgFgWfHTTPSLogged => '1.3.6.1.4.1.12356.101.10.1.2.2.1.8',
  fgFgWfHTTPOverridden => '1.3.6.1.4.1.12356.101.10.1.2.2.1.9',
  fgFgWfHTTPSOverridden => '1.3.6.1.4.1.12356.101.10.1.2.2.1.10',
  fgAppProxyHTTP => '1.3.6.1.4.1.12356.101.10.100',
  fgApHTTPUpTime => '1.3.6.1.4.1.12356.101.10.100.1',
  fgApHTTPMemUsage => '1.3.6.1.4.1.12356.101.10.100.2',
  fgApHTTPStatsTable => '1.3.6.1.4.1.12356.101.10.100.3',
  fgApHTTPStatsEntry => '1.3.6.1.4.1.12356.101.10.100.3.1',
  fgApHTTPReqProcessed => '1.3.6.1.4.1.12356.101.10.100.3.1.1',
  fgApHTTPConnections => '1.3.6.1.4.1.12356.101.10.100.4',
  fgApHTTPMaxConnections => '1.3.6.1.4.1.12356.101.10.100.5',
  fgAppProxySMTP => '1.3.6.1.4.1.12356.101.10.101',
  fgApSMTPUpTime => '1.3.6.1.4.1.12356.101.10.101.1',
  fgApSMTPMemUsage => '1.3.6.1.4.1.12356.101.10.101.2',
  fgApSMTPStatsTable => '1.3.6.1.4.1.12356.101.10.101.3',
  fgApSMTPStatsEntry => '1.3.6.1.4.1.12356.101.10.101.3.1',
  fgApSMTPReqProcessed => '1.3.6.1.4.1.12356.101.10.101.3.1.1',
  fgApSMTPSpamDetected => '1.3.6.1.4.1.12356.101.10.101.3.1.2',
  fgApSMTPConnections => '1.3.6.1.4.1.12356.101.10.101.4',
  fgApSMTPMaxConnections => '1.3.6.1.4.1.12356.101.10.101.5',
  fgAppProxyPOP3 => '1.3.6.1.4.1.12356.101.10.102',
  fgApPOP3UpTime => '1.3.6.1.4.1.12356.101.10.102.1',
  fgApPOP3MemUsage => '1.3.6.1.4.1.12356.101.10.102.2',
  fgApPOP3StatsTable => '1.3.6.1.4.1.12356.101.10.102.3',
  fgApPOP3StatsEntry => '1.3.6.1.4.1.12356.101.10.102.3.1',
  fgApPOP3ReqProcessed => '1.3.6.1.4.1.12356.101.10.102.3.1.1',
  fgApPOP3SpamDetected => '1.3.6.1.4.1.12356.101.10.102.3.1.2',
  fgApPOP3Connections => '1.3.6.1.4.1.12356.101.10.102.4',
  fgApPOP3MaxConnections => '1.3.6.1.4.1.12356.101.10.102.5',
  fgAppProxyIMAP => '1.3.6.1.4.1.12356.101.10.103',
  fgApIMAPUpTime => '1.3.6.1.4.1.12356.101.10.103.1',
  fgApIMAPMemUsage => '1.3.6.1.4.1.12356.101.10.103.2',
  fgApIMAPStatsTable => '1.3.6.1.4.1.12356.101.10.103.3',
  fgApIMAPStatsEntry => '1.3.6.1.4.1.12356.101.10.103.3.1',
  fgApIMAPReqProcessed => '1.3.6.1.4.1.12356.101.10.103.3.1.1',
  fgApIMAPSpamDetected => '1.3.6.1.4.1.12356.101.10.103.3.1.2',
  fgApIMAPConnections => '1.3.6.1.4.1.12356.101.10.103.4',
  fgApIMAPMaxConnections => '1.3.6.1.4.1.12356.101.10.103.5',
  fgAppProxyNNTP => '1.3.6.1.4.1.12356.101.10.104',
  fgApNNTPUpTime => '1.3.6.1.4.1.12356.101.10.104.1',
  fgApNNTPMemUsage => '1.3.6.1.4.1.12356.101.10.104.2',
  fgApNNTPStatsTable => '1.3.6.1.4.1.12356.101.10.104.3',
  fgApNNTPStatsEntry => '1.3.6.1.4.1.12356.101.10.104.3.1',
  fgApNNTPReqProcessed => '1.3.6.1.4.1.12356.101.10.104.3.1.1',
  fgApNNTPConnections => '1.3.6.1.4.1.12356.101.10.104.4',
  fgApNNTPMaxConnections => '1.3.6.1.4.1.12356.101.10.104.5',
  fgAppProxyIM => '1.3.6.1.4.1.12356.101.10.105',
  fgApIMUpTime => '1.3.6.1.4.1.12356.101.10.105.1',
  fgApIMMemUsage => '1.3.6.1.4.1.12356.101.10.105.2',
  fgApIMStatsTable => '1.3.6.1.4.1.12356.101.10.105.3',
  fgApIMStatsEntry => '1.3.6.1.4.1.12356.101.10.105.3.1',
  fgApIMReqProcessed => '1.3.6.1.4.1.12356.101.10.105.3.1.1',
  fgAppProxySIP => '1.3.6.1.4.1.12356.101.10.106',
  fgApSIPUpTime => '1.3.6.1.4.1.12356.101.10.106.1',
  fgApSIPMemUsage => '1.3.6.1.4.1.12356.101.10.106.2',
  fgApSIPStatsTable => '1.3.6.1.4.1.12356.101.10.106.3',
  fgApSIPStatsEntry => '1.3.6.1.4.1.12356.101.10.106.3.1',
  fgApSIPClientReg => '1.3.6.1.4.1.12356.101.10.106.3.1.1',
  fgApSIPCallHandling => '1.3.6.1.4.1.12356.101.10.106.3.1.2',
  fgApSIPServices => '1.3.6.1.4.1.12356.101.10.106.3.1.3',
  fgApSIPOtherReq => '1.3.6.1.4.1.12356.101.10.106.3.1.4',
  fgAppScanUnit => '1.3.6.1.4.1.12356.101.10.107',
  fgAppSuNumber => '1.3.6.1.4.1.12356.101.10.107.1',
  fgAppSuStatsTable => '1.3.6.1.4.1.12356.101.10.107.2',
  fgAppSuStatsEntry => '1.3.6.1.4.1.12356.101.10.107.2.1',
  fgAppSuIndex => '1.3.6.1.4.1.12356.101.10.107.2.1.1',
  fgAppSuFileScanned => '1.3.6.1.4.1.12356.101.10.107.2.1.2',
  fgAppVoIP => '1.3.6.1.4.1.12356.101.10.108',
  fgAppVoIPStatsTable => '1.3.6.1.4.1.12356.101.10.108.1',
  fgAppVoIPStatsEntry => '1.3.6.1.4.1.12356.101.10.108.1.1',
  fgAppVoIPConn => '1.3.6.1.4.1.12356.101.10.108.1.1.1',
  fgAppVoIPCallBlocked => '1.3.6.1.4.1.12356.101.10.108.1.1.2',
  fgAppP2P => '1.3.6.1.4.1.12356.101.10.109',
  fgAppP2PStatsTable => '1.3.6.1.4.1.12356.101.10.109.1',
  fgAppP2PStatsEntry => '1.3.6.1.4.1.12356.101.10.109.1.1',
  fgAppP2PConnBlocked => '1.3.6.1.4.1.12356.101.10.109.1.1.1',
  fgAppP2PProtoTable => '1.3.6.1.4.1.12356.101.10.109.2',
  fgAppP2PProtoEntry => '1.3.6.1.4.1.12356.101.10.109.2.1',
  fgAppP2PProtEntProto => '1.3.6.1.4.1.12356.101.10.109.2.1.1',
  fgAppP2PProtEntProtoDefinition => 'FORTINET-FORTIGATE-MIB::FgP2PProto',
  fgAppP2PProtEntBytes => '1.3.6.1.4.1.12356.101.10.109.2.1.2',
  fgAppP2PProtoEntLastReset => '1.3.6.1.4.1.12356.101.10.109.2.1.3',
  fgAppIM => '1.3.6.1.4.1.12356.101.10.110',
  fgAppIMStatsTable => '1.3.6.1.4.1.12356.101.10.110.1',
  fgAppIMStatsEntry => '1.3.6.1.4.1.12356.101.10.110.1.1',
  fgAppIMMessages => '1.3.6.1.4.1.12356.101.10.110.1.1.1',
  fgAppIMFileTransfered => '1.3.6.1.4.1.12356.101.10.110.1.1.2',
  fgAppIMFileTxBlocked => '1.3.6.1.4.1.12356.101.10.110.1.1.3',
  fgAppIMConnBlocked => '1.3.6.1.4.1.12356.101.10.110.1.1.4',
  fgAppProxyFTP => '1.3.6.1.4.1.12356.101.10.111',
  fgApFTPUpTime => '1.3.6.1.4.1.12356.101.10.111.1',
  fgApFTPMemUsage => '1.3.6.1.4.1.12356.101.10.111.2',
  fgApFTPStatsTable => '1.3.6.1.4.1.12356.101.10.111.3',
  fgApFTPStatsEntry => '1.3.6.1.4.1.12356.101.10.111.3.1',
  fgApFTPReqProcessed => '1.3.6.1.4.1.12356.101.10.111.3.1.1',
  fgApFTPConnections => '1.3.6.1.4.1.12356.101.10.111.4',
  fgApFTPMaxConnections => '1.3.6.1.4.1.12356.101.10.111.5',
  fgAppExplicitProxy => '1.3.6.1.4.1.12356.101.10.112',
  fgExplicitProxyInfo => '1.3.6.1.4.1.12356.101.10.112.1',
  fgExplicitProxyUpTime => '1.3.6.1.4.1.12356.101.10.112.1.1',
  fgExplicitProxyMemUsage => '1.3.6.1.4.1.12356.101.10.112.1.2',
  fgExplicitProxyRequests => '1.3.6.1.4.1.12356.101.10.112.1.3',
  fgExplicitProxyStatsTable => '1.3.6.1.4.1.12356.101.10.112.2',
  fgExplicitProxyStatsEntry => '1.3.6.1.4.1.12356.101.10.112.2.1',
  fgExplicitProxyUsers => '1.3.6.1.4.1.12356.101.10.112.2.1.1',
  fgExplicitProxySessions => '1.3.6.1.4.1.12356.101.10.112.2.1.2',
  fgExplicitProxyScanStatsTable => '1.3.6.1.4.1.12356.101.10.112.3',
  fgExplicitProxyScanStatsEntry => '1.3.6.1.4.1.12356.101.10.112.3.1',
  fgExplicitProxyScanStatsDisp => '1.3.6.1.4.1.12356.101.10.112.3.1.1',
  fgExplicitProxyScanStatsDispDefinition => 'FORTINET-FORTIGATE-MIB::FgScanAvDisposition',
  fgExplicitProxyVirus => '1.3.6.1.4.1.12356.101.10.112.3.1.2',
  fgExplicitProxyBannedWords => '1.3.6.1.4.1.12356.101.10.112.3.1.3',
  fgExplicitProxyPolicy => '1.3.6.1.4.1.12356.101.10.112.3.1.4',
  fgExplicitProxyOversized => '1.3.6.1.4.1.12356.101.10.112.3.1.5',
  fgExplicitProxyArchNest => '1.3.6.1.4.1.12356.101.10.112.3.1.6',
  fgExplicitProxyArchSize => '1.3.6.1.4.1.12356.101.10.112.3.1.7',
  fgExplicitProxyArchEncrypted => '1.3.6.1.4.1.12356.101.10.112.3.1.8',
  fgExplicitProxyArchMultiPart => '1.3.6.1.4.1.12356.101.10.112.3.1.9',
  fgExplicitProxyArchUnsupported => '1.3.6.1.4.1.12356.101.10.112.3.1.10',
  fgExplicitProxyArchBomb => '1.3.6.1.4.1.12356.101.10.112.3.1.11',
  fgExplicitProxyArchCorrupt => '1.3.6.1.4.1.12356.101.10.112.3.1.12',
  fgExplicitProxyScriptStatsTable => '1.3.6.1.4.1.12356.101.10.112.4',
  fgExplicitProxyScriptStatsEntry => '1.3.6.1.4.1.12356.101.10.112.4.1',
  fgExplicitProxyFilteredApplets => '1.3.6.1.4.1.12356.101.10.112.4.1.1',
  fgExplicitProxyFilteredActiveX => '1.3.6.1.4.1.12356.101.10.112.4.1.2',
  fgExplicitProxyFilteredJScript => '1.3.6.1.4.1.12356.101.10.112.4.1.3',
  fgExplicitProxyFilteredJS => '1.3.6.1.4.1.12356.101.10.112.4.1.4',
  fgExplicitProxyFilteredVBS => '1.3.6.1.4.1.12356.101.10.112.4.1.5',
  fgExplicitProxyFilteredOthScript => '1.3.6.1.4.1.12356.101.10.112.4.1.6',
  fgExplicitProxyFilterStatsTable => '1.3.6.1.4.1.12356.101.10.112.5',
  fgExplicitProxyFilterStatsEntry => '1.3.6.1.4.1.12356.101.10.112.5.1',
  fgExplicitProxyBlockedDLP => '1.3.6.1.4.1.12356.101.10.112.5.1.1',
  fgExplicitProxyBlockedConType => '1.3.6.1.4.1.12356.101.10.112.5.1.2',
  fgExplicitProxyExaminedURLs => '1.3.6.1.4.1.12356.101.10.112.5.1.3',
  fgExplicitProxyAllowedURLs => '1.3.6.1.4.1.12356.101.10.112.5.1.4',
  fgExplicitProxyBlockedURLs => '1.3.6.1.4.1.12356.101.10.112.5.1.5',
  fgExplicitProxyLoggedURLs => '1.3.6.1.4.1.12356.101.10.112.5.1.6',
  fgExplicitProxyOverriddenURLs => '1.3.6.1.4.1.12356.101.10.112.5.1.7',
  fgAppWebCache => '1.3.6.1.4.1.12356.101.10.113',
  fgWebCacheInfo => '1.3.6.1.4.1.12356.101.10.113.1',
  fgWebCacheRAMLimit => '1.3.6.1.4.1.12356.101.10.113.1.1',
  fgWebCacheRAMUsage => '1.3.6.1.4.1.12356.101.10.113.1.2',
  fgWebCacheRAMHits => '1.3.6.1.4.1.12356.101.10.113.1.3',
  fgWebCacheRAMMisses => '1.3.6.1.4.1.12356.101.10.113.1.4',
  fgWebCacheRequests => '1.3.6.1.4.1.12356.101.10.113.1.5',
  fgWebCacheBypass => '1.3.6.1.4.1.12356.101.10.113.1.6',
  fgWebCacheUpTime => '1.3.6.1.4.1.12356.101.10.113.1.7',
  fgWebCacheDiskStatsTable => '1.3.6.1.4.1.12356.101.10.113.2',
  fgWebCacheDiskStatsEntry => '1.3.6.1.4.1.12356.101.10.113.2.1',
  fgWebCacheDisk => '1.3.6.1.4.1.12356.101.10.113.2.1.1',
  fgWebCacheDiskLimit => '1.3.6.1.4.1.12356.101.10.113.2.1.2',
  fgWebCacheDiskUsage => '1.3.6.1.4.1.12356.101.10.113.2.1.3',
  fgWebCacheDiskHits => '1.3.6.1.4.1.12356.101.10.113.2.1.4',
  fgWebCacheDiskMisses => '1.3.6.1.4.1.12356.101.10.113.2.1.5',
  fgAppWanOpt => '1.3.6.1.4.1.12356.101.10.114',
  fgWanOptInfo => '1.3.6.1.4.1.12356.101.10.114.1',
  fgMemCacheLimit => '1.3.6.1.4.1.12356.101.10.114.1.1',
  fgMemCacheUsage => '1.3.6.1.4.1.12356.101.10.114.1.2',
  fgMemCacheHits => '1.3.6.1.4.1.12356.101.10.114.1.3',
  fgMemCacheMisses => '1.3.6.1.4.1.12356.101.10.114.1.4',
  fgByteCacheRAMLimit => '1.3.6.1.4.1.12356.101.10.114.1.5',
  fgByteCacheRAMUsage => '1.3.6.1.4.1.12356.101.10.114.1.6',
  fgWanOptUpTime => '1.3.6.1.4.1.12356.101.10.114.1.7',
  fgWanOptStatsTable => '1.3.6.1.4.1.12356.101.10.114.2',
  fgWanOptStatsEntry => '1.3.6.1.4.1.12356.101.10.114.2.1',
  fgWanOptTunnels => '1.3.6.1.4.1.12356.101.10.114.2.1.1',
  fgWanOptLANBytesIn => '1.3.6.1.4.1.12356.101.10.114.2.1.2',
  fgWanOptLANBytesOut => '1.3.6.1.4.1.12356.101.10.114.2.1.3',
  fgWanOptWANBytesIn => '1.3.6.1.4.1.12356.101.10.114.2.1.4',
  fgWanOptWANBytesOut => '1.3.6.1.4.1.12356.101.10.114.2.1.5',
  fgWanOptHistoryStatsTable => '1.3.6.1.4.1.12356.101.10.114.3',
  fgWanOptHistoryStatsEntry => '1.3.6.1.4.1.12356.101.10.114.3.1',
  fgWanOptHistPeriod => '1.3.6.1.4.1.12356.101.10.114.3.1.1',
  fgWanOptHistPeriodDefinition => 'FORTINET-FORTIGATE-MIB::FgWanOptHistPeriods',
  fgWanOptProtocol => '1.3.6.1.4.1.12356.101.10.114.3.1.2',
  fgWanOptProtocolDefinition => 'FORTINET-FORTIGATE-MIB::FgWanOptProtocols',
  fgWanOptReductionRate => '1.3.6.1.4.1.12356.101.10.114.3.1.3',
  fgWanOptLanTraffic => '1.3.6.1.4.1.12356.101.10.114.3.1.4',
  fgWanOptWanTraffic => '1.3.6.1.4.1.12356.101.10.114.3.1.5',
  fgWanOptTrafficStatsTable => '1.3.6.1.4.1.12356.101.10.114.4',
  fgWanOptTrafficStatsEntry => '1.3.6.1.4.1.12356.101.10.114.4.1',
  fgWanOptLanInTraffic => '1.3.6.1.4.1.12356.101.10.114.4.1.1',
  fgWanOptLanOutTraffic => '1.3.6.1.4.1.12356.101.10.114.4.1.2',
  fgWanOptWanInTraffic => '1.3.6.1.4.1.12356.101.10.114.4.1.3',
  fgWanOptWanOutTraffic => '1.3.6.1.4.1.12356.101.10.114.4.1.4',
  fgWanOptDiskStatsTable => '1.3.6.1.4.1.12356.101.10.114.5',
  fgWanOptDiskStatsEntry => '1.3.6.1.4.1.12356.101.10.114.5.1',
  fgWanOptDisk => '1.3.6.1.4.1.12356.101.10.114.5.1.1',
  fgWanOptDiskLimit => '1.3.6.1.4.1.12356.101.10.114.5.1.2',
  fgWanOptDiskUsage => '1.3.6.1.4.1.12356.101.10.114.5.1.3',
  fgWanOptDiskHits => '1.3.6.1.4.1.12356.101.10.114.5.1.4',
  fgWanOptDiskMisses => '1.3.6.1.4.1.12356.101.10.114.5.1.5',
  fgAppFnbam => '1.3.6.1.4.1.12356.101.10.116',
  fgAppFnbamStatsInfo => '1.3.6.1.4.1.12356.101.10.116.1',
  fgAppFnbamStatsTotalAuthReqs => '1.3.6.1.4.1.12356.101.10.116.1.1',
  fgAppFnbamStatsTotalEagainErrs => '1.3.6.1.4.1.12356.101.10.116.1.2',
  fgAppFnbamStatsTotalLdapFails => '1.3.6.1.4.1.12356.101.10.116.1.3',
  fgInetProto => '1.3.6.1.4.1.12356.101.11',
  fgInetProtoInfo => '1.3.6.1.4.1.12356.101.11.1',
  fgInetProtoTables => '1.3.6.1.4.1.12356.101.11.2',
  fgIpSessTable => '1.3.6.1.4.1.12356.101.11.2.1',
  fgIpSessEntry => '1.3.6.1.4.1.12356.101.11.2.1.1',
  fgIpSessIndex => '1.3.6.1.4.1.12356.101.11.2.1.1.1',
  fgIpSessProto => '1.3.6.1.4.1.12356.101.11.2.1.1.2',
  fgIpSessProtoDefinition => 'FORTINET-FORTIGATE-MIB::FgSessProto',
  fgIpSessFromAddr => '1.3.6.1.4.1.12356.101.11.2.1.1.3',
  fgIpSessFromPort => '1.3.6.1.4.1.12356.101.11.2.1.1.4',
  fgIpSessToAddr => '1.3.6.1.4.1.12356.101.11.2.1.1.5',
  fgIpSessToPort => '1.3.6.1.4.1.12356.101.11.2.1.1.6',
  fgIpSessExp => '1.3.6.1.4.1.12356.101.11.2.1.1.7',
  fgIpSessVdom => '1.3.6.1.4.1.12356.101.11.2.1.1.8',
  fgIpSessStatsTable => '1.3.6.1.4.1.12356.101.11.2.2',
  fgIpSessStatsEntry => '1.3.6.1.4.1.12356.101.11.2.2.1',
  fgIpSessNumber => '1.3.6.1.4.1.12356.101.11.2.2.1.1',
  fgIp6SessStatsTable => '1.3.6.1.4.1.12356.101.11.2.3',
  fgIp6SessStatsEntry => '1.3.6.1.4.1.12356.101.11.2.3.1',
  fgIp6SessNumber => '1.3.6.1.4.1.12356.101.11.2.3.1.1',
  fgVpn => '1.3.6.1.4.1.12356.101.12',
  fgVpnInfo => '1.3.6.1.4.1.12356.101.12.1',
  fgVpnTunnelUpCount => '1.3.6.1.4.1.12356.101.12.1.1',
  fgVpnTables => '1.3.6.1.4.1.12356.101.12.2',
  fgVpnDialupTable => '1.3.6.1.4.1.12356.101.12.2.1',
  fgVpnDialupEntry => '1.3.6.1.4.1.12356.101.12.2.1.1',
  fgVpnDialupIndex => '1.3.6.1.4.1.12356.101.12.2.1.1.1',
  fgVpnDialupGateway => '1.3.6.1.4.1.12356.101.12.2.1.1.2',
  fgVpnDialupLifetime => '1.3.6.1.4.1.12356.101.12.2.1.1.3',
  fgVpnDialupTimeout => '1.3.6.1.4.1.12356.101.12.2.1.1.4',
  fgVpnDialupSrcBegin => '1.3.6.1.4.1.12356.101.12.2.1.1.5',
  fgVpnDialupSrcEnd => '1.3.6.1.4.1.12356.101.12.2.1.1.6',
  fgVpnDialupDstAddr => '1.3.6.1.4.1.12356.101.12.2.1.1.7',
  fgVpnDialupVdom => '1.3.6.1.4.1.12356.101.12.2.1.1.8',
  fgVpnDialupInOctets => '1.3.6.1.4.1.12356.101.12.2.1.1.9',
  fgVpnDialupOutOctets => '1.3.6.1.4.1.12356.101.12.2.1.1.10',
  fgVpnTunTable => '1.3.6.1.4.1.12356.101.12.2.2',
  fgVpnTunEntry => '1.3.6.1.4.1.12356.101.12.2.2.1',
  fgVpnTunEntIndex => '1.3.6.1.4.1.12356.101.12.2.2.1.1',
  fgVpnTunEntPhase1Name => '1.3.6.1.4.1.12356.101.12.2.2.1.2',
  fgVpnTunEntPhase2Name => '1.3.6.1.4.1.12356.101.12.2.2.1.3',
  fgVpnTunEntRemGwyIp => '1.3.6.1.4.1.12356.101.12.2.2.1.4',
  fgVpnTunEntRemGwyPort => '1.3.6.1.4.1.12356.101.12.2.2.1.5',
  fgVpnTunEntLocGwyIp => '1.3.6.1.4.1.12356.101.12.2.2.1.6',
  fgVpnTunEntLocGwyPort => '1.3.6.1.4.1.12356.101.12.2.2.1.7',
  fgVpnTunEntSelectorSrcBeginIp => '1.3.6.1.4.1.12356.101.12.2.2.1.8',
  fgVpnTunEntSelectorSrcEndIp => '1.3.6.1.4.1.12356.101.12.2.2.1.9',
  fgVpnTunEntSelectorSrcPort => '1.3.6.1.4.1.12356.101.12.2.2.1.10',
  fgVpnTunEntSelectorDstBeginIp => '1.3.6.1.4.1.12356.101.12.2.2.1.11',
  fgVpnTunEntSelectorDstEndIp => '1.3.6.1.4.1.12356.101.12.2.2.1.12',
  fgVpnTunEntSelectorDstPort => '1.3.6.1.4.1.12356.101.12.2.2.1.13',
  fgVpnTunEntSelectorProto => '1.3.6.1.4.1.12356.101.12.2.2.1.14',
  fgVpnTunEntLifeSecs => '1.3.6.1.4.1.12356.101.12.2.2.1.15',
  fgVpnTunEntLifeBytes => '1.3.6.1.4.1.12356.101.12.2.2.1.16',
  fgVpnTunEntTimeout => '1.3.6.1.4.1.12356.101.12.2.2.1.17',
  fgVpnTunEntInOctets => '1.3.6.1.4.1.12356.101.12.2.2.1.18',
  fgVpnTunEntOutOctets => '1.3.6.1.4.1.12356.101.12.2.2.1.19',
  fgVpnTunEntStatus => '1.3.6.1.4.1.12356.101.12.2.2.1.20',
  fgVpnTunEntStatusDefinition => 'FORTINET-FORTIGATE-MIB::fgVpnTunEntStatus',
  fgVpnTunEntVdom => '1.3.6.1.4.1.12356.101.12.2.2.1.21',
  fgVpnSslStatsTable => '1.3.6.1.4.1.12356.101.12.2.3',
  fgVpnSslStatsEntry => '1.3.6.1.4.1.12356.101.12.2.3.1',
  fgVpnSslState => '1.3.6.1.4.1.12356.101.12.2.3.1.1',
  fgVpnSslStatsLoginUsers => '1.3.6.1.4.1.12356.101.12.2.3.1.2',
  fgVpnSslStatsMaxUsers => '1.3.6.1.4.1.12356.101.12.2.3.1.3',
  fgVpnSslStatsActiveWebSessions => '1.3.6.1.4.1.12356.101.12.2.3.1.4',
  fgVpnSslStatsMaxWebSessions => '1.3.6.1.4.1.12356.101.12.2.3.1.5',
  fgVpnSslStatsActiveTunnels => '1.3.6.1.4.1.12356.101.12.2.3.1.6',
  fgVpnSslStatsMaxTunnels => '1.3.6.1.4.1.12356.101.12.2.3.1.7',
  fgVpnSslTunnelTable => '1.3.6.1.4.1.12356.101.12.2.4',
  fgVpnSslTunnelEntry => '1.3.6.1.4.1.12356.101.12.2.4.1',
  fgVpnSslTunnelIndex => '1.3.6.1.4.1.12356.101.12.2.4.1.1',
  fgVpnSslTunnelVdom => '1.3.6.1.4.1.12356.101.12.2.4.1.2',
  fgVpnSslTunnelUserName => '1.3.6.1.4.1.12356.101.12.2.4.1.3',
  fgVpnSslTunnelSrcIp => '1.3.6.1.4.1.12356.101.12.2.4.1.4',
  fgVpnSslTunnelIp => '1.3.6.1.4.1.12356.101.12.2.4.1.5',
  fgVpnSslTunnelUpTime => '1.3.6.1.4.1.12356.101.12.2.4.1.6',
  fgVpnSslTunnelBytesIn => '1.3.6.1.4.1.12356.101.12.2.4.1.7',
  fgVpnSslTunnelBytesOut => '1.3.6.1.4.1.12356.101.12.2.4.1.8',
  fgVpnTrapObjects => '1.3.6.1.4.1.12356.101.12.3',
  fgVpnTrapLocalGateway => '1.3.6.1.4.1.12356.101.12.3.2',
  fgVpnTrapRemoteGateway => '1.3.6.1.4.1.12356.101.12.3.3',
  fgVpnTrapPhase1Name => '1.3.6.1.4.1.12356.101.12.3.4',
  fgHighAvailability => '1.3.6.1.4.1.12356.101.13',
  fgHaInfo => '1.3.6.1.4.1.12356.101.13.1',
  fgHaSystemMode => '1.3.6.1.4.1.12356.101.13.1.1',
  fgHaSystemModeDefinition => 'FORTINET-FORTIGATE-MIB::FgHaMode',
  fgHaGroupId => '1.3.6.1.4.1.12356.101.13.1.2',
  fgHaPriority => '1.3.6.1.4.1.12356.101.13.1.3',
  fgHaOverride => '1.3.6.1.4.1.12356.101.13.1.4',
  fgHaOverrideDefinition => 'FORTINET-CORE-MIB::FnBoolState',
  fgHaAutoSync => '1.3.6.1.4.1.12356.101.13.1.5',
  fgHaAutoSyncDefinition => 'FORTINET-CORE-MIB::FnBoolState',
  fgHaSchedule => '1.3.6.1.4.1.12356.101.13.1.6',
  fgHaScheduleDefinition => 'FORTINET-FORTIGATE-MIB::FgHaLBSchedule',
  fgHaGroupName => '1.3.6.1.4.1.12356.101.13.1.7',
  fgHaTables => '1.3.6.1.4.1.12356.101.13.2',
  fgHaStatsTable => '1.3.6.1.4.1.12356.101.13.2.1',
  fgHaStatsEntry => '1.3.6.1.4.1.12356.101.13.2.1.1',
  fgHaStatsIndex => '1.3.6.1.4.1.12356.101.13.2.1.1.1',
  fgHaStatsSerial => '1.3.6.1.4.1.12356.101.13.2.1.1.2',
  fgHaStatsCpuUsage => '1.3.6.1.4.1.12356.101.13.2.1.1.3',
  fgHaStatsMemUsage => '1.3.6.1.4.1.12356.101.13.2.1.1.4',
  fgHaStatsNetUsage => '1.3.6.1.4.1.12356.101.13.2.1.1.5',
  fgHaStatsSesCount => '1.3.6.1.4.1.12356.101.13.2.1.1.6',
  fgHaStatsPktCount => '1.3.6.1.4.1.12356.101.13.2.1.1.7',
  fgHaStatsByteCount => '1.3.6.1.4.1.12356.101.13.2.1.1.8',
  fgHaStatsIdsCount => '1.3.6.1.4.1.12356.101.13.2.1.1.9',
  fgHaStatsAvCount => '1.3.6.1.4.1.12356.101.13.2.1.1.10',
  fgHaStatsHostname => '1.3.6.1.4.1.12356.101.13.2.1.1.11',
  fgHaStatsSyncStatus => '1.3.6.1.4.1.12356.101.13.2.1.1.12',
  fgHaStatsSyncStatusDefinition => 'FORTINET-FORTIGATE-MIB::FgHaStatsSyncStatusType',
  fgHaStatsSyncDatimeSucc => '1.3.6.1.4.1.12356.101.13.2.1.1.13',
  fgHaStatsSyncDatimeUnsucc => '1.3.6.1.4.1.12356.101.13.2.1.1.14',
  fgHaStatsGlobalChecksum => '1.3.6.1.4.1.12356.101.13.2.1.1.15',
  fgHaStatsMasterSerial => '1.3.6.1.4.1.12356.101.13.2.1.1.16',
  fgHaTrapObjects => '1.3.6.1.4.1.12356.101.13.3',
  fgHaTrapMemberSerial => '1.3.6.1.4.1.12356.101.13.3.1',
  fgWc => '1.3.6.1.4.1.12356.101.14',
  fgWcTrapObjects => '1.3.6.1.4.1.12356.101.14.1',
  fgWcApVdom => '1.3.6.1.4.1.12356.101.14.1.1',
  fgWcApSerial => '1.3.6.1.4.1.12356.101.14.1.2',
  fgWcApName => '1.3.6.1.4.1.12356.101.14.1.3',
  fgWcInfo => '1.3.6.1.4.1.12356.101.14.2',
  fgWcInfoName => '1.3.6.1.4.1.12356.101.14.2.1',
  fgWcInfoLocation => '1.3.6.1.4.1.12356.101.14.2.2',
  fgWcInfoWtpCapacity => '1.3.6.1.4.1.12356.101.14.2.3',
  fgWcInfoWtpManaged => '1.3.6.1.4.1.12356.101.14.2.4',
  fgWcInfoWtpSessions => '1.3.6.1.4.1.12356.101.14.2.5',
  fgWcInfoStationCapacity => '1.3.6.1.4.1.12356.101.14.2.6',
  fgWcInfoStationCount => '1.3.6.1.4.1.12356.101.14.2.7',
  fgWcWlanTable => '1.3.6.1.4.1.12356.101.14.3',
  fgWcWlanEntry => '1.3.6.1.4.1.12356.101.14.3.1',
  fgWcWlanSsid => '1.3.6.1.4.1.12356.101.14.3.1.1',
  fgWcWlanBroadcastSsid => '1.3.6.1.4.1.12356.101.14.3.1.2',
  fgWcWlanSecurity => '1.3.6.1.4.1.12356.101.14.3.1.3',
  fgWcWlanSecurityDefinition => 'FORTINET-FORTIGATE-MIB::FgWcWlanSecurityType',
  fgWcWlanEncryption => '1.3.6.1.4.1.12356.101.14.3.1.4',
  fgWcWlanEncryptionDefinition => 'FORTINET-FORTIGATE-MIB::FgWcWlanEncryptionType',
  fgWcWlanAuthentication => '1.3.6.1.4.1.12356.101.14.3.1.5',
  fgWcWlanAuthenticationDefinition => 'FORTINET-FORTIGATE-MIB::FgWcWlanAuthenticationType',
  fgWcWlanRadiusServer => '1.3.6.1.4.1.12356.101.14.3.1.6',
  fgWcWlanUserGroup => '1.3.6.1.4.1.12356.101.14.3.1.7',
  fgWcWlanLocalBridging => '1.3.6.1.4.1.12356.101.14.3.1.8',
  fgWcWlanVlanId => '1.3.6.1.4.1.12356.101.14.3.1.9',
  fgWcWlanMeshBackhaul => '1.3.6.1.4.1.12356.101.14.3.1.10',
  fgWcWlanStationCapacity => '1.3.6.1.4.1.12356.101.14.3.1.11',
  fgWcWlanStationCount => '1.3.6.1.4.1.12356.101.14.3.1.12',
  fgWcWtpTables => '1.3.6.1.4.1.12356.101.14.4',
  fgWcWtpProfileTable => '1.3.6.1.4.1.12356.101.14.4.1',
  fgWcWtpProfileEntry => '1.3.6.1.4.1.12356.101.14.4.1.1',
  fgWcWtpProfileName => '1.3.6.1.4.1.12356.101.14.4.1.1.1',
  fgWcWtpProfilePlatform => '1.3.6.1.4.1.12356.101.14.4.1.1.2',
  fgWcWtpProfileDataChannelDtlsPolicy => '1.3.6.1.4.1.12356.101.14.4.1.1.3',
  fgWcWtpProfileCountryString => '1.3.6.1.4.1.12356.101.14.4.1.1.4',
  fgWcWtpProfileRadioTable => '1.3.6.1.4.1.12356.101.14.4.2',
  fgWcWtpProfileRadioEntry => '1.3.6.1.4.1.12356.101.14.4.2.1',
  fgWcWtpProfileRadioProfileName => '1.3.6.1.4.1.12356.101.14.4.2.1.1',
  fgWcWtpProfileRadioRadioId => '1.3.6.1.4.1.12356.101.14.4.2.1.2',
  fgWcWtpProfileRadioMode => '1.3.6.1.4.1.12356.101.14.4.2.1.3',
  fgWcWtpProfileRadioModeDefinition => 'FORTINET-FORTIGATE-MIB::FgWcWtpRadioMode',
  fgWcWtpProfileRadioApScan => '1.3.6.1.4.1.12356.101.14.4.2.1.4',
  fgWcWtpProfileRadioWidsProfile => '1.3.6.1.4.1.12356.101.14.4.2.1.5',
  fgWcWtpProfileRadioDarrp => '1.3.6.1.4.1.12356.101.14.4.2.1.6',
  fgWcWtpProfileRadioFrequencyHandoff => '1.3.6.1.4.1.12356.101.14.4.2.1.7',
  fgWcWtpProfileRadioApHandoff => '1.3.6.1.4.1.12356.101.14.4.2.1.8',
  fgWcWtpProfileRadioBeaconInterval => '1.3.6.1.4.1.12356.101.14.4.2.1.9',
  fgWcWtpProfileRadioDtimPeriod => '1.3.6.1.4.1.12356.101.14.4.2.1.10',
  fgWcWtpProfileRadioBand => '1.3.6.1.4.1.12356.101.14.4.2.1.11',
  fgWcWtpProfileRadioBandDefinition => 'FORTINET-FORTIGATE-MIB::FgWcWtpRadioType',
  fgWcWtpProfileRadioChannelBonding => '1.3.6.1.4.1.12356.101.14.4.2.1.12',
  fgWcWtpProfileRadioChannel => '1.3.6.1.4.1.12356.101.14.4.2.1.13',
  fgWcWtpProfileRadioAutoTxPowerControl => '1.3.6.1.4.1.12356.101.14.4.2.1.14',
  fgWcWtpProfileRadioAutoTxPowerLow => '1.3.6.1.4.1.12356.101.14.4.2.1.15',
  fgWcWtpProfileRadioAutoTxPowerHigh => '1.3.6.1.4.1.12356.101.14.4.2.1.16',
  fgWcWtpProfileRadioTxPowerLevel => '1.3.6.1.4.1.12356.101.14.4.2.1.17',
  fgWcWtpProfileRadioVaps => '1.3.6.1.4.1.12356.101.14.4.2.1.18',
  fgWcWtpProfileRadioStationCapacity => '1.3.6.1.4.1.12356.101.14.4.2.1.19',
  fgWcWtpProfileRadioChannelWidth => '1.3.6.1.4.1.12356.101.14.4.2.1.20',
  fgWcWtpProfileRadioChannelWidthDefinition => 'FORTINET-FORTIGATE-MIB::FgWcWtpChannelWidthType',
  fgWcWtpConfigTable => '1.3.6.1.4.1.12356.101.14.4.3',
  fgWcWtpConfigEntry => '1.3.6.1.4.1.12356.101.14.4.3.1',
  fgWcWtpConfigWtpId => '1.3.6.1.4.1.12356.101.14.4.3.1.1',
  fgWcWtpConfigWtpAdmin => '1.3.6.1.4.1.12356.101.14.4.3.1.2',
  fgWcWtpConfigWtpAdminDefinition => 'FORTINET-FORTIGATE-MIB::fgWcWtpConfigWtpAdmin',
  fgWcWtpConfigWtpName => '1.3.6.1.4.1.12356.101.14.4.3.1.3',
  fgWcWtpConfigWtpLocation => '1.3.6.1.4.1.12356.101.14.4.3.1.4',
  fgWcWtpConfigWtpProfile => '1.3.6.1.4.1.12356.101.14.4.3.1.5',
  fgWcWtpConfigRadioEnable => '1.3.6.1.4.1.12356.101.14.4.3.1.6',
  fgWcWtpConfigRadioAutoTxPowerControl => '1.3.6.1.4.1.12356.101.14.4.3.1.7',
  fgWcWtpConfigRadioAutoTxPowerLow => '1.3.6.1.4.1.12356.101.14.4.3.1.8',
  fgWcWtpConfigRadioAutoTxPowerHigh => '1.3.6.1.4.1.12356.101.14.4.3.1.9',
  fgWcWtpConfigRadioTxPowerLevel => '1.3.6.1.4.1.12356.101.14.4.3.1.10',
  fgWcWtpConfigRadioBand => '1.3.6.1.4.1.12356.101.14.4.3.1.11',
  fgWcWtpConfigRadioBandDefinition => 'FORTINET-FORTIGATE-MIB::FgWcWtpRadioBandType',
  fgWcWtpConfigRadioApScan => '1.3.6.1.4.1.12356.101.14.4.3.1.12',
  fgWcWtpConfigVapAll => '1.3.6.1.4.1.12356.101.14.4.3.1.13',
  fgWcWtpConfigVaps => '1.3.6.1.4.1.12356.101.14.4.3.1.14',
  fgWcWtpSessionTable => '1.3.6.1.4.1.12356.101.14.4.4',
  fgWcWtpSessionEntry => '1.3.6.1.4.1.12356.101.14.4.4.1',
  fgWcWtpSessionWtpId => '1.3.6.1.4.1.12356.101.14.4.4.1.1',
  fgWcWtpSessionWtpIpAddressType => '1.3.6.1.4.1.12356.101.14.4.4.1.2',
  fgWcWtpSessionWtpIpAddress => '1.3.6.1.4.1.12356.101.14.4.4.1.3',
  fgWcWtpSessionWtpLocalIpAddressType => '1.3.6.1.4.1.12356.101.14.4.4.1.4',
  fgWcWtpSessionWtpLocalIpAddress => '1.3.6.1.4.1.12356.101.14.4.4.1.5',
  fgWcWtpSessionWtpBaseMacAddress => '1.3.6.1.4.1.12356.101.14.4.4.1.6',
  fgWcWtpSessionConnectionState => '1.3.6.1.4.1.12356.101.14.4.4.1.7',
  fgWcWtpSessionConnectionStateDefinition => 'FORTINET-FORTIGATE-MIB::fgWcWtpSessionConnectionState',
  fgWcWtpSessionWtpUpTime => '1.3.6.1.4.1.12356.101.14.4.4.1.8',
  fgWcWtpSessionWtpDaemonUpTime => '1.3.6.1.4.1.12356.101.14.4.4.1.9',
  fgWcWtpSessionWtpSessionUpTime => '1.3.6.1.4.1.12356.101.14.4.4.1.10',
  fgWcWtpSessionWtpProfileName => '1.3.6.1.4.1.12356.101.14.4.4.1.11',
  fgWcWtpSessionWtpModelNumber => '1.3.6.1.4.1.12356.101.14.4.4.1.12',
  fgWcWtpSessionWtpHwVersion => '1.3.6.1.4.1.12356.101.14.4.4.1.13',
  fgWcWtpSessionWtpSwVersion => '1.3.6.1.4.1.12356.101.14.4.4.1.14',
  fgWcWtpSessionWtpBootVersion => '1.3.6.1.4.1.12356.101.14.4.4.1.15',
  fgWcWtpSessionWtpRegionCode => '1.3.6.1.4.1.12356.101.14.4.4.1.16',
  fgWcWtpSessionWtpStationCount => '1.3.6.1.4.1.12356.101.14.4.4.1.17',
  fgWcWtpSessionWtpByteRxCount => '1.3.6.1.4.1.12356.101.14.4.4.1.18',
  fgWcWtpSessionWtpByteTxCount => '1.3.6.1.4.1.12356.101.14.4.4.1.19',
  fgWcWtpSessionWtpCpuUsage => '1.3.6.1.4.1.12356.101.14.4.4.1.20',
  fgWcWtpSessionWtpMemoryUsage => '1.3.6.1.4.1.12356.101.14.4.4.1.21',
  fgWcWtpSessionWtpMemoryCapacity => '1.3.6.1.4.1.12356.101.14.4.4.1.22',
  fgWcWtpSessionRadioTable => '1.3.6.1.4.1.12356.101.14.4.5',
  fgWcWtpSessionRadioEntry => '1.3.6.1.4.1.12356.101.14.4.5.1',
  fgWcWtpSessionRadioWtpId => '1.3.6.1.4.1.12356.101.14.4.5.1.1',
  fgWcWtpSessionRadioRadioId => '1.3.6.1.4.1.12356.101.14.4.5.1.2',
  fgWcWtpSessionRadioMode => '1.3.6.1.4.1.12356.101.14.4.5.1.3',
  fgWcWtpSessionRadioModeDefinition => 'FORTINET-FORTIGATE-MIB::FgWcWtpRadioMode',
  fgWcWtpSessionRadioBaseBssid => '1.3.6.1.4.1.12356.101.14.4.5.1.4',
  fgWcWtpSessionRadioCountryString => '1.3.6.1.4.1.12356.101.14.4.5.1.5',
  fgWcWtpSessionRadioCountryCode => '1.3.6.1.4.1.12356.101.14.4.5.1.6',
  fgWcWtpSessionRadioOperatingChannel => '1.3.6.1.4.1.12356.101.14.4.5.1.7',
  fgWcWtpSessionRadioOperatingPower => '1.3.6.1.4.1.12356.101.14.4.5.1.8',
  fgWcWtpSessionRadioStationCount => '1.3.6.1.4.1.12356.101.14.4.5.1.9',
  fgWcWtpSessionVapTable => '1.3.6.1.4.1.12356.101.14.4.6',
  fgWcWtpSessionVapEntry => '1.3.6.1.4.1.12356.101.14.4.6.1',
  fgWcWtpSessionVapWtpId => '1.3.6.1.4.1.12356.101.14.4.6.1.1',
  fgWcWtpSessionVapRadioId => '1.3.6.1.4.1.12356.101.14.4.6.1.2',
  fgWcWtpSessionVapSsid => '1.3.6.1.4.1.12356.101.14.4.6.1.3',
  fgWcWtpSessionVapStationCount => '1.3.6.1.4.1.12356.101.14.4.6.1.4',
  fgWcWtpSessionVapByteRxCount => '1.3.6.1.4.1.12356.101.14.4.6.1.5',
  fgWcWtpSessionVapByteTxCount => '1.3.6.1.4.1.12356.101.14.4.6.1.6',
  fgWcStaTable => '1.3.6.1.4.1.12356.101.14.5',
  fgWcStaEntry => '1.3.6.1.4.1.12356.101.14.5.1',
  fgWcStaMacAddress => '1.3.6.1.4.1.12356.101.14.5.1.1',
  fgWcStaWlan => '1.3.6.1.4.1.12356.101.14.5.1.2',
  fgWcStaWtpId => '1.3.6.1.4.1.12356.101.14.5.1.3',
  fgWcStaRadioId => '1.3.6.1.4.1.12356.101.14.5.1.4',
  fgWcStaVlanId => '1.3.6.1.4.1.12356.101.14.5.1.5',
  fgWcStaIpAddressType => '1.3.6.1.4.1.12356.101.14.5.1.6',
  fgWcStaIpAddress => '1.3.6.1.4.1.12356.101.14.5.1.7',
  fgWcStaVci => '1.3.6.1.4.1.12356.101.14.5.1.8',
  fgWcStaHost => '1.3.6.1.4.1.12356.101.14.5.1.9',
  fgWcStaUser => '1.3.6.1.4.1.12356.101.14.5.1.10',
  fgWcStaGroup => '1.3.6.1.4.1.12356.101.14.5.1.11',
  fgWcStaSignal => '1.3.6.1.4.1.12356.101.14.5.1.12',
  fgWcStaNoise => '1.3.6.1.4.1.12356.101.14.5.1.13',
  fgWcStaIdle => '1.3.6.1.4.1.12356.101.14.5.1.14',
  fgWcStaBandwidthTx => '1.3.6.1.4.1.12356.101.14.5.1.15',
  fgWcStaBandwidthRx => '1.3.6.1.4.1.12356.101.14.5.1.16',
  fgWcStaChannel => '1.3.6.1.4.1.12356.101.14.5.1.17',
  fgWcStaRadioType => '1.3.6.1.4.1.12356.101.14.5.1.18',
  fgWcStaRadioTypeDefinition => 'FORTINET-FORTIGATE-MIB::FgWcWtpRadioType',
  fgWcStaSecurity => '1.3.6.1.4.1.12356.101.14.5.1.19',
  fgWcStaSecurityDefinition => 'FORTINET-FORTIGATE-MIB::FgWcWlanSecurityType',
  fgWcStaEncrypt => '1.3.6.1.4.1.12356.101.14.5.1.20',
  fgWcStaEncryptDefinition => 'FORTINET-FORTIGATE-MIB::FgWcWlanEncryptionType',
  fgWcStaOnline => '1.3.6.1.4.1.12356.101.14.5.1.21',
  fgWcStaOnlineDefinition => 'FORTINET-FORTIGATE-MIB::fgWcStaOnline',
  fgFc => '1.3.6.1.4.1.12356.101.15',
  fgFcTrapObjects => '1.3.6.1.4.1.12356.101.15.1',
  fgFcSwVdom => '1.3.6.1.4.1.12356.101.15.1.1',
  fgFcSwSerial => '1.3.6.1.4.1.12356.101.15.1.2',
  fgFcSwName => '1.3.6.1.4.1.12356.101.15.1.3',
  fgServerLoadBalance => '1.3.6.1.4.1.12356.101.16',
  fgServerLoadBalanceTrapObjects => '1.3.6.1.4.1.12356.101.16.1',
  fgServerLoadBalanceRealServerAddress => '1.3.6.1.4.1.12356.101.16.1.1',
  fgServerLoadBalanceVirtualServerName => '1.3.6.1.4.1.12356.101.16.1.2',
  fgUsbModemInfo => '1.3.6.1.4.1.12356.101.17',
  fgUsbModemInfoObjects => '1.3.6.1.4.1.12356.101.17.1',
  fgUsbModemSignalStrength => '1.3.6.1.4.1.12356.101.17.1.1',
  fgUsbModemSignalStrengthDefinition => 'FORTINET-FORTIGATE-MIB::fgUsbModemSignalStrength',
  fgUsbModemStatus => '1.3.6.1.4.1.12356.101.17.1.2',
  fgUsbModemStatusDefinition => 'FORTINET-FORTIGATE-MIB::fgUsbModemStatus',
  fgUsbModemSimState => '1.3.6.1.4.1.12356.101.17.1.3',
  fgUsbModemSimStateDefinition => 'FORTINET-FORTIGATE-MIB::fgUsbModemSimState',
  fgUsbModemVendor => '1.3.6.1.4.1.12356.101.17.1.4',
  fgUsbModemProduct => '1.3.6.1.4.1.12356.101.17.1.5',
  fgUsbModemNetwork => '1.3.6.1.4.1.12356.101.17.1.6',
  fgUsbModemNetworkDefinition => 'FORTINET-FORTIGATE-MIB::fgUsbModemNetwork',
  fgUsbModemId => '1.3.6.1.4.1.12356.101.17.1.7',
  fgUsbModemSimId => '1.3.6.1.4.1.12356.101.17.1.8',
  fgDevice => '1.3.6.1.4.1.12356.101.18',
  fgDeviceTrapObjects => '1.3.6.1.4.1.12356.101.18.1',
  fgDeviceMacAddress => '1.3.6.1.4.1.12356.101.18.1.1',
  fgDeviceCreated => '1.3.6.1.4.1.12356.101.18.1.2',
  fgDeviceLastSeen => '1.3.6.1.4.1.12356.101.18.1.3',
  fgInternalLTEModemsInfo => '1.3.6.1.4.1.12356.101.19',
  fgMdmInfoTable => '1.3.6.1.4.1.12356.101.19.1',
  fgMdmInfoEntry => '1.3.6.1.4.1.12356.101.19.1.1',
  fgMdmEntIndex => '1.3.6.1.4.1.12356.101.19.1.1.1',
  fgMdmDetected => '1.3.6.1.4.1.12356.101.19.1.1.2',
  fgMdmDetectedDefinition => 'FORTINET-FORTIGATE-MIB::fgMdmDetected',
  fgMdmVendor => '1.3.6.1.4.1.12356.101.19.1.1.3',
  fgMdmModel => '1.3.6.1.4.1.12356.101.19.1.1.4',
  fgMdmRevision => '1.3.6.1.4.1.12356.101.19.1.1.5',
  fgMdmMsisdn => '1.3.6.1.4.1.12356.101.19.1.1.6',
  fgMdmEsn => '1.3.6.1.4.1.12356.101.19.1.1.7',
  fgMdmImei => '1.3.6.1.4.1.12356.101.19.1.1.8',
  fgMdmHwRevision => '1.3.6.1.4.1.12356.101.19.1.1.9',
  fgMdmMeid => '1.3.6.1.4.1.12356.101.19.1.1.10',
  fgMdmSwRev => '1.3.6.1.4.1.12356.101.19.1.1.11',
  fgMdmSku => '1.3.6.1.4.1.12356.101.19.1.1.12',
  fgMdmFsn => '1.3.6.1.4.1.12356.101.19.1.1.13',
  fgMdmPrlVer => '1.3.6.1.4.1.12356.101.19.1.1.14',
  fgMdmFwVer => '1.3.6.1.4.1.12356.101.19.1.1.15',
  fgMdmPriFwVer => '1.3.6.1.4.1.12356.101.19.1.1.16',
  fgMdmCarrierAbbr => '1.3.6.1.4.1.12356.101.19.1.1.17',
  fgMdmActState => '1.3.6.1.4.1.12356.101.19.1.1.18',
  fgMdmActStateDefinition => 'FORTINET-FORTIGATE-MIB::fgMdmActState',
  fgMdmOpMode => '1.3.6.1.4.1.12356.101.19.1.1.19',
  fgMdmOpModeDefinition => 'FORTINET-FORTIGATE-MIB::fgMdmOpMode',
  fgSimInfoTable => '1.3.6.1.4.1.12356.101.19.2',
  fgSimInfoEntry => '1.3.6.1.4.1.12356.101.19.2.1',
  fgSimEntIndex => '1.3.6.1.4.1.12356.101.19.2.1.1',
  fgSimMdmEntIndex => '1.3.6.1.4.1.12356.101.19.2.1.2',
  fgSimState => '1.3.6.1.4.1.12356.101.19.2.1.3',
  fgSimStateDefinition => 'FORTINET-FORTIGATE-MIB::fgSimState',
  fgSimIccid => '1.3.6.1.4.1.12356.101.19.2.1.4',
  fgSimImsi => '1.3.6.1.4.1.12356.101.19.2.1.5',
  fgSimCountry => '1.3.6.1.4.1.12356.101.19.2.1.6',
  fgSimNetwork => '1.3.6.1.4.1.12356.101.19.2.1.7',
  fgSignalInfoTable => '1.3.6.1.4.1.12356.101.19.3',
  fgSignalInfoEntry => '1.3.6.1.4.1.12356.101.19.3.1',
  fgSigMdmEntIndex => '1.3.6.1.4.1.12356.101.19.3.1.1',
  fgCdmaRssi => '1.3.6.1.4.1.12356.101.19.3.1.2',
  fgCdmaEcio => '1.3.6.1.4.1.12356.101.19.3.1.3',
  fgHdrRssi => '1.3.6.1.4.1.12356.101.19.3.1.4',
  fgHdrEcio => '1.3.6.1.4.1.12356.101.19.3.1.5',
  fgHdrSinr => '1.3.6.1.4.1.12356.101.19.3.1.6',
  fgHdrIo => '1.3.6.1.4.1.12356.101.19.3.1.7',
  fgGsm => '1.3.6.1.4.1.12356.101.19.3.1.8',
  fgWcdmaRssi => '1.3.6.1.4.1.12356.101.19.3.1.9',
  fgWcdmaEcio => '1.3.6.1.4.1.12356.101.19.3.1.10',
  fgLteRssi => '1.3.6.1.4.1.12356.101.19.3.1.11',
  fgLteRsrq => '1.3.6.1.4.1.12356.101.19.3.1.12',
  fgLteRsrp => '1.3.6.1.4.1.12356.101.19.3.1.13',
  fgLteSnr => '1.3.6.1.4.1.12356.101.19.3.1.14',
  fgTdma => '1.3.6.1.4.1.12356.101.19.3.1.15',
  fgTrafficInfoTable => '1.3.6.1.4.1.12356.101.19.4',
  fgTrafficInfoEntry => '1.3.6.1.4.1.12356.101.19.4.1',
  fgTrafMdmEntIndex => '1.3.6.1.4.1.12356.101.19.4.1.1',
  fgTxPacksOK => '1.3.6.1.4.1.12356.101.19.4.1.2',
  fgRxPacksOK => '1.3.6.1.4.1.12356.101.19.4.1.3',
  fgTxPacksErr => '1.3.6.1.4.1.12356.101.19.4.1.4',
  fgRxPacksErr => '1.3.6.1.4.1.12356.101.19.4.1.5',
  fgTxPacksOverflow => '1.3.6.1.4.1.12356.101.19.4.1.6',
  fgRxPacksOverflow => '1.3.6.1.4.1.12356.101.19.4.1.7',
  fgTxBytesOK => '1.3.6.1.4.1.12356.101.19.4.1.8',
  fgRxBytesOK => '1.3.6.1.4.1.12356.101.19.4.1.9',
  fgLastCallTxBytesOK => '1.3.6.1.4.1.12356.101.19.4.1.10',
  fgLastCallRxBytesOK => '1.3.6.1.4.1.12356.101.19.4.1.11',
  fgTxPacksDrop => '1.3.6.1.4.1.12356.101.19.4.1.12',
  fgRxPacksDrop => '1.3.6.1.4.1.12356.101.19.4.1.13',
  fgSessInfoTable => '1.3.6.1.4.1.12356.101.19.5',
  fgSessInfoEntry => '1.3.6.1.4.1.12356.101.19.5.1',
  fgLteSessEntIndex => '1.3.6.1.4.1.12356.101.19.5.1.1',
  fgSessMdmEntIndex => '1.3.6.1.4.1.12356.101.19.5.1.2',
  fdLteIfName => '1.3.6.1.4.1.12356.101.19.5.1.3',
  fdLteSessConnStat => '1.3.6.1.4.1.12356.101.19.5.1.4',
  fdLteSessConnStatDefinition => 'FORTINET-FORTIGATE-MIB::fdLteSessConnStat',
  fdLteProfId => '1.3.6.1.4.1.12356.101.19.5.1.5',
  fdLteProfName => '1.3.6.1.4.1.12356.101.19.5.1.6',
  fdLteProfType => '1.3.6.1.4.1.12356.101.19.5.1.7',
  fdLteProfTypeDefinition => 'FORTINET-FORTIGATE-MIB::fdLteProfType',
  fdLtePdpType => '1.3.6.1.4.1.12356.101.19.5.1.8',
  fdLtePdpTypeDefinition => 'FORTINET-FORTIGATE-MIB::fdLtePdpType',
  fdLteProfApn => '1.3.6.1.4.1.12356.101.19.5.1.9',
  fdLteProfIpFamily => '1.3.6.1.4.1.12356.101.19.5.1.10',
  fdLteProfIpFamilyDefinition => 'FORTINET-FORTIGATE-MIB::fdLteProfIpFamily',
  fdLteIpv4Addr => '1.3.6.1.4.1.12356.101.19.5.1.11',
  fdLteIpv4GwAddr => '1.3.6.1.4.1.12356.101.19.5.1.12',
  fdLteIpv4NetMask => '1.3.6.1.4.1.12356.101.19.5.1.13',
  fdLteIpv4PriDns => '1.3.6.1.4.1.12356.101.19.5.1.14',
  fdLteIpv4SecDns => '1.3.6.1.4.1.12356.101.19.5.1.15',
  fdLteIpv6Addr => '1.3.6.1.4.1.12356.101.19.5.1.16',
  fdLteIpv6PrefLen => '1.3.6.1.4.1.12356.101.19.5.1.17',
  fdLteIpv6GwAddr => '1.3.6.1.4.1.12356.101.19.5.1.18',
  fdLteIpv6GwPrefLen => '1.3.6.1.4.1.12356.101.19.5.1.19',
  fdLteIpv6PriDns => '1.3.6.1.4.1.12356.101.19.5.1.20',
  fdLteIpv6SecDns => '1.3.6.1.4.1.12356.101.19.5.1.21',
  fdLteMtu => '1.3.6.1.4.1.12356.101.19.5.1.22',
  fdLteAutoConn => '1.3.6.1.4.1.12356.101.19.5.1.23',
  fdLteAutoConnDefinition => 'FORTINET-FORTIGATE-MIB::fdLteAutoConn',
  fdLteNetType => '1.3.6.1.4.1.12356.101.19.5.1.24',
  fdLteNetTypeDefinition => 'FORTINET-FORTIGATE-MIB::fdLteNetType',
  fdLteNetTypeLas => '1.3.6.1.4.1.12356.101.19.5.1.25',
  fdLteNetTypeLasDefinition => 'FORTINET-FORTIGATE-MIB::fdLteNetTypeLas',
  fdLteLinkProto => '1.3.6.1.4.1.12356.101.19.5.1.26',
  fdLteLinkProtoDefinition => 'FORTINET-FORTIGATE-MIB::fdLteLinkProto',
  fgGpsInfoTable => '1.3.6.1.4.1.12356.101.19.6',
  fgGpsInfoEntry => '1.3.6.1.4.1.12356.101.19.6.1',
  fgGpsMdmEntIndex => '1.3.6.1.4.1.12356.101.19.6.1.1',
  fgGpsEnabled => '1.3.6.1.4.1.12356.101.19.6.1.2',
  fgGpsEnabledDefinition => 'FORTINET-FORTIGATE-MIB::fgGpsEnabled',
  fgLatitude => '1.3.6.1.4.1.12356.101.19.6.1.3',
  fgLongitude => '1.3.6.1.4.1.12356.101.19.6.1.4',
  fgUtcTime => '1.3.6.1.4.1.12356.101.19.6.1.5',
  fgLocalTime => '1.3.6.1.4.1.12356.101.19.6.1.6',
  fgDatausageInfoTable => '1.3.6.1.4.1.12356.101.19.7',
  fgDatausageInfoEntry => '1.3.6.1.4.1.12356.101.19.7.1',
  fgDatausageMdmEntIndex => '1.3.6.1.4.1.12356.101.19.7.1.1',
  fgDatausageEnabled => '1.3.6.1.4.1.12356.101.19.7.1.2',
  fgDatausageEnabledDefinition => 'FORTINET-FORTIGATE-MIB::fgDatausageEnabled',
  fgDataOut => '1.3.6.1.4.1.12356.101.19.7.1.3',
  fgDataIn => '1.3.6.1.4.1.12356.101.19.7.1.4',
  fgNPU => '1.3.6.1.4.1.12356.101.20',
  fgNPUInfo => '1.3.6.1.4.1.12356.101.20.1',
  fgNPUNumber => '1.3.6.1.4.1.12356.101.20.1.1',
  fgNPUName => '1.3.6.1.4.1.12356.101.20.1.2',
  fgNPUDrvDriftSum => '1.3.6.1.4.1.12356.101.20.1.3',
  fgNPUTables => '1.3.6.1.4.1.12356.101.20.2',
  fgNPUTable => '1.3.6.1.4.1.12356.101.20.2.1',
  fgNPUEntry => '1.3.6.1.4.1.12356.101.20.2.1.1',
  fgNPUEntIndex => '1.3.6.1.4.1.12356.101.20.2.1.1.1',
  fgNPUSessionTblSize => '1.3.6.1.4.1.12356.101.20.2.1.1.2',
  fgNPUSessionCount => '1.3.6.1.4.1.12356.101.20.2.1.1.3',
  fgNPUDrvDrift => '1.3.6.1.4.1.12356.101.20.2.1.1.4',
  fgMibConformance => '1.3.6.1.4.1.12356.101.100',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'FORTINET-FORTIGATE-MIB'} = {
  fgMdmDetected => {
    '0' => 'no',
    '1' => 'yes',
  },
  FgSessProto => {
    '0' => 'ip',
    '1' => 'icmp',
    '2' => 'igmp',
    '4' => 'ipip',
    '6' => 'tcp',
    '8' => 'egp',
    '12' => 'pup',
    '17' => 'udp',
    '22' => 'idp',
    '41' => 'ipv6',
    '46' => 'rsvp',
    '47' => 'gre',
    '50' => 'esp',
    '51' => 'ah',
    '89' => 'ospf',
    '103' => 'pim',
    '108' => 'comp',
    '255' => 'raw',
  },
  fdLtePdpType => {
    '0' => 'ipv4',
    '1' => 'ppp',
    '2' => 'ipv6',
    '3' => 'ipv4v6',
  },
  FgVdIndex => {
  },
  fgUsbportPlugged => {
    '0' => 'unplugged',
    '1' => 'plugged',
  },
  FgHaState => {
    '1' => 'master',
    '2' => 'backup',
    '3' => 'standalone',
  },
  FgWcCountryString => {
  },
  FgP2PProto => {
    '0' => 'bitTorrent',
    '1' => 'eDonkey',
    '2' => 'gnutella',
    '3' => 'kaZaa',
    '4' => 'skype',
    '5' => 'winNY',
  },
  fgUsbModemSimState => {
    '0' => 'invalid',
    '1' => 'valid',
  },
  fgHwSensorEntAlarmStatus => {
    '0' => 'false',
    '1' => 'true',
  },
  fgIntfVlanHbEntState => {
    '1' => 'active',
    '2' => 'inactive',
  },
  FgWcWlanAuthenticationType => {
    '0' => 'other',
    '1' => 'psk',
    '2' => 'radiusServer',
    '3' => 'userGroup',
  },
  fdLteProfIpFamily => {
    '4' => 'ipv4',
    '6' => 'ipv6',
    '8' => 'unspecified',
  },
  FgWcWtpRadioMode => {
    '0' => 'other',
    '1' => 'notExist',
    '2' => 'disabled',
    '3' => 'ap',
    '4' => 'monitor',
    '5' => 'sniffer',
  },
  fgIntfVrrpEntState => {
    '1' => 'backup',
    '2' => 'master',
  },
  fgUsbportClass => {
    '0' => 'ifc',
    '1' => 'audio',
    '2' => 'comm',
    '3' => 'hid',
    '5' => 'physical',
    '6' => 'image',
    '7' => 'printer',
    '8' => 'storage',
    '9' => 'hub',
    '10' => 'cdcData',
    '11' => 'chipSmartCard',
    '13' => 'contentSecurity',
    '254' => 'appSpec',
    '255' => 'vendorSpec',
  },
  fgSimState => {
    '0' => 'initialized',
    '1' => 'lockedOrFailed',
    '2' => 'notPresent',
    '3' => 'reserved',
    '255' => 'unknown',
  },
  FgWcWtpRadioBandType => {
    '0' => 'other',
    '1' => 'band2GHz',
    '2' => 'band5GHz',
  },
  fdLteAutoConn => {
    '0' => 'disabled',
    '1' => 'enabled',
    '2' => 'paused',
  },
  FgScanAvDisposition => {
    '1' => 'detected',
    '2' => 'blocked',
  },
  FgWanOptHistPeriods => {
    '1' => 'last10Min',
    '2' => 'lastHour',
    '3' => 'lastDay',
    '4' => 'lastMonth',
  },
  fdLteNetType => {
    '1' => 'cdma1x',
    '2' => 'evdo',
    '3' => 'gsm',
    '4' => 'umts',
    '5' => 'evdoReva',
    '6' => 'edge',
    '7' => 'hsdpa',
    '8' => 'hsupa',
    '9' => 'hsdpaHsupa',
    '10' => 'lte',
    '11' => 'ehrpd',
    '12' => 'hsdpaPlus',
    '13' => 'hsdpaPlusHsupa',
    '14' => 'dchsdpaPlus',
    '15' => 'dchspdaPlusHsupa',
  },
  fgUsbModemNetwork => {
    '0' => 'network3G',
    '1' => 'networkLTE',
  },
  FgNPUIndex => {
  },
  fgGpsEnabled => {
    '0' => 'no',
    '1' => 'yes',
  },
  FgAdminPermLevel => {
    '0' => 'readAdmin',
    '1' => 'writeAdmin',
    '15' => 'domainAdmin',
    '255' => 'superAdmin',
  },
  FgHaMode => {
    '1' => 'standalone',
    '2' => 'activeActive',
    '3' => 'activePassive',
  },
  fgWcWtpConfigWtpAdmin => {
    '0' => 'other',
    '1' => 'discovered',
    '2' => 'disable',
    '3' => 'enable',
  },
  fgMdmActState => {
    '0' => 'notActivated',
    '1' => 'activated',
    '2' => 'connecting',
    '3' => 'connected',
    '4' => 'otaspAuthenticated',
    '5' => 'otaspNamDownloaded',
    '6' => 'otaspMdnDownloaded',
    '7' => 'otaspImsiDownloaded',
    '8' => 'otaspPrlDownloaded',
    '9' => 'otaspSpcDownloaded',
    '10' => 'otaspSettingsCmted',
  },
  FgWcWlanSecurityType => {
    '0' => 'other',
    '1' => 'open',
    '2' => 'captivePortal',
    '3' => 'wep64',
    '4' => 'wep128',
    '5' => 'wpaOnlyPersonal',
    '6' => 'wpaOnlyEnterprise',
    '7' => 'wpa2OnlyPersonal',
    '8' => 'wpa2OnlyEnterprise',
    '9' => 'wpaPersonal',
    '10' => 'wpaEnterprise',
    '11' => 'wpaOnlyPersonalCaptivePortal',
    '12' => 'wpa2OnlyPersonalCaptivePortal',
    '13' => 'wpaPersonalCaptivePortal',
  },
  fgVpnTunEntStatus => {
    '1' => 'down',
    '2' => 'up',
  },
  FgWcWtpChannelWidthType => {
    '0' => 'other',
    '1' => 'width20MHz',
    '2' => 'width40MHz',
    '3' => 'width80MHz',
  },
  FgHaStatsSyncStatusType => {
    '0' => 'unsynchronized',
    '1' => 'synchronized',
  },
  FgWcWtpRadioType => {
    '0' => 'other',
    '1' => 'dot11a',
    '2' => 'dot11b',
    '3' => 'dot11g',
    '4' => 'dot11n5g',
    '5' => 'dot11n2g',
    '6' => 'dot11ac',
    '7' => 'dot11ngOnly',
    '8' => 'dot11gOnly',
    '9' => 'dot11n2GHzOnly',
    '10' => 'dot11n5GHzOnly',
    '11' => 'dot11acnOnly',
    '12' => 'dot11acOnly',
  },
  fgLinkMonitorState => {
    '0' => 'alive',
    '1' => 'dead',
  },
  FgFwUserAuthType => {
    '1' => 'local',
    '2' => 'radiusSingle',
    '3' => 'radiusMultiple',
    '4' => 'ldap',
  },
  fdLteProfType => {
    '0' => 'lpt3gpp',
    '1' => 'lpt3gpp2',
  },
  FgOpMode => {
    '1' => 'nat',
    '2' => 'transparent',
  },
  fgDatausageEnabled => {
    '0' => 'no',
    '1' => 'yes',
  },
  FgWanOptProtocols => {
    '1' => 'http',
    '2' => 'mapi',
    '3' => 'cifs',
    '4' => 'ftp',
    '5' => 'tcp',
  },
  fdLteLinkProto => {
    '0' => 'unknown',
    '1' => 'ieee8023',
    '2' => 'rawIp',
  },
  fgWcWtpSessionConnectionState => {
    '0' => 'other',
    '1' => 'offLine',
    '2' => 'onLine',
    '3' => 'downloadingImage',
    '4' => 'connectedImage',
  },
  FgWcWtpRadioChannelNumber => {
  },
  FgWcWlanEncryptionType => {
    '0' => 'other',
    '1' => 'none',
    '2' => 'tkip',
    '3' => 'aes',
    '4' => 'tkipAes',
  },
  FgHaLBSchedule => {
    '1' => 'none',
    '2' => 'hub',
    '3' => 'leastConnections',
    '4' => 'roundRobin',
    '5' => 'weightedRoundRobin',
    '6' => 'random',
    '7' => 'ipBased',
    '8' => 'ipPortBased',
  },
  fdLteSessConnStat => {
    '0' => 'unknown',
    '1' => 'disconnected',
    '2' => 'connected',
    '3' => 'suspended',
    '4' => 'authenticating',
  },
  fgUsbModemSignalStrength => {
    '0' => 'level0',
    '1' => 'level1',
    '2' => 'level2',
    '3' => 'level3',
    '4' => 'level4',
  },
  FgWcWtpRadioId => {
  },
  fdLteNetTypeLas => {
    '1' => 'cdma1x',
    '2' => 'evdo',
    '3' => 'gsm',
    '4' => 'umts',
    '5' => 'evdoReva',
    '6' => 'edge',
    '7' => 'hsdpa',
    '8' => 'hsupa',
    '9' => 'hsdpaHsupa',
    '10' => 'lte',
    '11' => 'ehrpd',
    '12' => 'hsdpaPlus',
    '13' => 'hsdpaPlusHsupa',
    '14' => 'dchsdpaPlus',
    '15' => 'dchspdaPlusHsupa',
  },
  fgUsbModemStatus => {
    '0' => 'disconnected',
    '1' => 'connected',
  },
  fgMdmOpMode => {
    '0' => 'online',
    '1' => 'lowPower',
    '2' => 'factoryTest',
    '3' => 'offLine',
    '4' => 'reset',
    '5' => 'shuttingDown',
    '6' => 'persistentLowPower',
    '7' => 'modeOnlyLowPower',
    '255' => 'unknown',
  },
  fgWcStaOnline => {
    '1' => 'yes',
    '2' => 'no',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::FOUNDRYSNAGENTMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'FOUNDRY-SN-AGENT-MIB'} = {
  url => '',
  name => 'FOUNDRY-SN-AGENT-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'FOUNDRY-SN-AGENT-MIB'} =
    '1.3.6.1.4.1.1991.1.1.1.1';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'FOUNDRY-SN-AGENT-MIB'} = {
  snChasGen => '1.3.6.1.4.1.1991.1.1.1.1',
  snChasType => '1.3.6.1.4.1.1991.1.1.1.1.1',
  snChasSerNum => '1.3.6.1.4.1.1991.1.1.1.1.2',
  snChasPwrSupplyStatus => '1.3.6.1.4.1.1991.1.1.1.1.3',
  snChasFanStatus => '1.3.6.1.4.1.1991.1.1.1.1.4',
  snChasMainBrdDescription => '1.3.6.1.4.1.1991.1.1.1.1.5',
  snChasMainPortTotal => '1.3.6.1.4.1.1991.1.1.1.1.6',
  snChasExpBrdDescription => '1.3.6.1.4.1.1991.1.1.1.1.7',
  snChasExpPortTotal => '1.3.6.1.4.1.1991.1.1.1.1.8',
  snChasStatusLeds => '1.3.6.1.4.1.1991.1.1.1.1.9',
  snChasTrafficLeds => '1.3.6.1.4.1.1991.1.1.1.1.10',
  snChasMediaLeds => '1.3.6.1.4.1.1991.1.1.1.1.11',
  snChasEnablePwrSupplyTrap => '1.3.6.1.4.1.1991.1.1.1.1.12',
  snChasEnablePwrSupplyTrapDefinition => 'FOUNDRY-SN-AGENT-MIB::snChasEnablePwrSupplyTrap',
  snChasMainBrdId => '1.3.6.1.4.1.1991.1.1.1.1.13',
  snChasExpBrdId => '1.3.6.1.4.1.1991.1.1.1.1.14',
  snChasSpeedLeds => '1.3.6.1.4.1.1991.1.1.1.1.15',
  snChasEnableFanTrap => '1.3.6.1.4.1.1991.1.1.1.1.16',
  snChasEnableFanTrapDefinition => 'FOUNDRY-SN-AGENT-MIB::snChasEnableFanTrap',
  snChasIdNumber => '1.3.6.1.4.1.1991.1.1.1.1.17',
  snChasActualTemperature => '1.3.6.1.4.1.1991.1.1.1.1.18',
  snChasWarningTemperature => '1.3.6.1.4.1.1991.1.1.1.1.19',
  snChasShutdownTemperature => '1.3.6.1.4.1.1991.1.1.1.1.20',
  snChasEnableTempWarnTrap => '1.3.6.1.4.1.1991.1.1.1.1.21',
  snChasEnableTempWarnTrapDefinition => 'FOUNDRY-SN-AGENT-MIB::snChasEnableTempWarnTrap',
  snChasFlashCard => '1.3.6.1.4.1.1991.1.1.1.1.22',
  snChasFlashCardLeds => '1.3.6.1.4.1.1991.1.1.1.1.23',
  snChasNumSlots => '1.3.6.1.4.1.1991.1.1.1.1.24',
  snChasArchitectureType => '1.3.6.1.4.1.1991.1.1.1.1.25',
  snChasArchitectureTypeDefinition => 'FOUNDRY-SN-AGENT-MIB::snChasArchitectureType',
  snChasProductType => '1.3.6.1.4.1.1991.1.1.1.1.26',
  snChasProductTypeDefinition => 'FOUNDRY-SN-AGENT-MIB::snChasProductType',
  snChasSystemMode => '1.3.6.1.4.1.1991.1.1.1.1.27',
  snChasSystemModeDefinition => 'FOUNDRY-SN-AGENT-MIB::snChasSystemMode',
  snChasFactoryPartNumber => '1.3.6.1.4.1.1991.1.1.1.1.28',
  snChasFactorySerialNumber => '1.3.6.1.4.1.1991.1.1.1.1.29',
  snChasPwr => '1.3.6.1.4.1.1991.1.1.1.2',
  snChasPwrSupplyTable => '1.3.6.1.4.1.1991.1.1.1.2.1',
  snChasPwrSupplyEntry => '1.3.6.1.4.1.1991.1.1.1.2.1.1',
  snChasPwrSupplyIndex => '1.3.6.1.4.1.1991.1.1.1.2.1.1.1',
  snChasPwrSupplyDescription => '1.3.6.1.4.1.1991.1.1.1.2.1.1.2',
  snChasPwrSupplyOperStatus => '1.3.6.1.4.1.1991.1.1.1.2.1.1.3',
  snChasPwrSupplyOperStatusDefinition => 'FOUNDRY-SN-AGENT-MIB::snChasPwrSupplyOperStatus',
  snChasPwrSupply2Table => '1.3.6.1.4.1.1991.1.1.1.2.2',
  snChasPwrSupply2Entry => '1.3.6.1.4.1.1991.1.1.1.2.2.1',
  snChasPwrSupply2Unit => '1.3.6.1.4.1.1991.1.1.1.2.2.1.1',
  snChasPwrSupply2Index => '1.3.6.1.4.1.1991.1.1.1.2.2.1.2',
  snChasPwrSupply2Description => '1.3.6.1.4.1.1991.1.1.1.2.2.1.3',
  snChasPwrSupply2OperStatus => '1.3.6.1.4.1.1991.1.1.1.2.2.1.4',
  snChasPwrSupply2OperStatusDefinition => 'FOUNDRY-SN-AGENT-MIB::snChasPwrSupply2OperStatus',
  snChasFan => '1.3.6.1.4.1.1991.1.1.1.3',
  snChasFanTable => '1.3.6.1.4.1.1991.1.1.1.3.1',
  snChasFanEntry => '1.3.6.1.4.1.1991.1.1.1.3.1.1',
  snChasFanIndex => '1.3.6.1.4.1.1991.1.1.1.3.1.1.1',
  snChasFanDescription => '1.3.6.1.4.1.1991.1.1.1.3.1.1.2',
  snChasFanOperStatus => '1.3.6.1.4.1.1991.1.1.1.3.1.1.3',
  snChasFanOperStatusDefinition => 'FOUNDRY-SN-AGENT-MIB::snChasFanOperStatus',
  snChasFan2Table => '1.3.6.1.4.1.1991.1.1.1.3.2',
  snChasFan2Entry => '1.3.6.1.4.1.1991.1.1.1.3.2.1',
  snChasFan2Unit => '1.3.6.1.4.1.1991.1.1.1.3.2.1.1',
  snChasFan2Index => '1.3.6.1.4.1.1991.1.1.1.3.2.1.2',
  snChasFan2Description => '1.3.6.1.4.1.1991.1.1.1.3.2.1.3',
  snChasFan2OperStatus => '1.3.6.1.4.1.1991.1.1.1.3.2.1.4',
  snChasFan2OperStatusDefinition => 'FOUNDRY-SN-AGENT-MIB::snChasFan2OperStatus',
  snChasUnit => '1.3.6.1.4.1.1991.1.1.1.4',
  snChasUnitTable => '1.3.6.1.4.1.1991.1.1.1.4.1',
  snChasUnitEntry => '1.3.6.1.4.1.1991.1.1.1.4.1.1',
  snChasUnitIndex => '1.3.6.1.4.1.1991.1.1.1.4.1.1.1',
  snChasUnitSerNum => '1.3.6.1.4.1.1991.1.1.1.4.1.1.2',
  snChasUnitNumSlots => '1.3.6.1.4.1.1991.1.1.1.4.1.1.3',
  snChasUnitActualTemperature => '1.3.6.1.4.1.1991.1.1.1.4.1.1.4',
  snChasUnitWarningTemperature => '1.3.6.1.4.1.1991.1.1.1.4.1.1.5',
  snChasUnitShutdownTemperature => '1.3.6.1.4.1.1991.1.1.1.4.1.1.6',
  snChasUnitPartNum => '1.3.6.1.4.1.1991.1.1.1.4.1.1.7',
  snAgentGbl => '1.3.6.1.4.1.1991.1.1.2.1',
  snAgReload => '1.3.6.1.4.1.1991.1.1.2.1.1',
  snAgReloadDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgReload',
  snAgEraseNVRAM => '1.3.6.1.4.1.1991.1.1.2.1.2',
  snAgEraseNVRAMDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgEraseNVRAM',
  snAgWriteNVRAM => '1.3.6.1.4.1.1991.1.1.2.1.3',
  snAgWriteNVRAMDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgWriteNVRAM',
  snAgConfigFromNVRAM => '1.3.6.1.4.1.1991.1.1.2.1.4',
  snAgConfigFromNVRAMDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgConfigFromNVRAM',
  snAgTftpServerIp => '1.3.6.1.4.1.1991.1.1.2.1.5',
  snAgImgFname => '1.3.6.1.4.1.1991.1.1.2.1.6',
  snAgImgLoad => '1.3.6.1.4.1.1991.1.1.2.1.7',
  snAgImgLoadDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgImgLoad',
  snAgCfgFname => '1.3.6.1.4.1.1991.1.1.2.1.8',
  snAgCfgLoad => '1.3.6.1.4.1.1991.1.1.2.1.9',
  snAgCfgLoadDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgCfgLoad',
  snAgDefGwayIp => '1.3.6.1.4.1.1991.1.1.2.1.10',
  snAgImgVer => '1.3.6.1.4.1.1991.1.1.2.1.11',
  snAgFlashImgVer => '1.3.6.1.4.1.1991.1.1.2.1.12',
  snAgGblIfIpAddr => '1.3.6.1.4.1.1991.1.1.2.1.13',
  snAgGblIfIpMask => '1.3.6.1.4.1.1991.1.1.2.1.14',
  snAgGblPassword => '1.3.6.1.4.1.1991.1.1.2.1.15',
  snAgTrpRcvrCurEntry => '1.3.6.1.4.1.1991.1.1.2.1.16',
  snAgGblDataRetrieveMode => '1.3.6.1.4.1.1991.1.1.2.1.19',
  snAgGblDataRetrieveModeDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgGblDataRetrieveMode',
  snAgSystemLog => '1.3.6.1.4.1.1991.1.1.2.1.20',
  snAgGblEnableColdStartTrap => '1.3.6.1.4.1.1991.1.1.2.1.21',
  snAgGblEnableColdStartTrapDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgGblEnableColdStartTrap',
  snAgGblEnableLinkUpTrap => '1.3.6.1.4.1.1991.1.1.2.1.22',
  snAgGblEnableLinkUpTrapDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgGblEnableLinkUpTrap',
  snAgGblEnableLinkDownTrap => '1.3.6.1.4.1.1991.1.1.2.1.23',
  snAgGblEnableLinkDownTrapDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgGblEnableLinkDownTrap',
  snAgGblPasswordChangeMode => '1.3.6.1.4.1.1991.1.1.2.1.24',
  snAgGblPasswordChangeModeDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgGblPasswordChangeMode',
  snAgGblReadOnlyCommunity => '1.3.6.1.4.1.1991.1.1.2.1.25',
  snAgGblReadWriteCommunity => '1.3.6.1.4.1.1991.1.1.2.1.26',
  snAgGblCurrentSecurityLevel => '1.3.6.1.4.1.1991.1.1.2.1.27',
  snAgGblSecurityLevelSet => '1.3.6.1.4.1.1991.1.1.2.1.28',
  snAgGblLevelPasswordsMask => '1.3.6.1.4.1.1991.1.1.2.1.29',
  snAgGblQueueOverflow => '1.3.6.1.4.1.1991.1.1.2.1.30',
  snAgGblQueueOverflowDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgGblQueueOverflow',
  snAgGblBufferShortage => '1.3.6.1.4.1.1991.1.1.2.1.31',
  snAgGblBufferShortageDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgGblBufferShortage',
  snAgGblDmaFailure => '1.3.6.1.4.1.1991.1.1.2.1.32',
  snAgGblDmaFailureDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgGblDmaFailure',
  snAgGblResourceLowWarning => '1.3.6.1.4.1.1991.1.1.2.1.33',
  snAgGblResourceLowWarningDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgGblResourceLowWarning',
  snAgGblExcessiveErrorWarning => '1.3.6.1.4.1.1991.1.1.2.1.34',
  snAgGblExcessiveErrorWarningDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgGblExcessiveErrorWarning',
  snAgGblCpuUtilData => '1.3.6.1.4.1.1991.1.1.2.1.35',
  snAgGblCpuUtilCollect => '1.3.6.1.4.1.1991.1.1.2.1.36',
  snAgGblCpuUtilCollectDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgGblCpuUtilCollect',
  snAgGblTelnetTimeout => '1.3.6.1.4.1.1991.1.1.2.1.37',
  snAgGblEnableWebMgmt => '1.3.6.1.4.1.1991.1.1.2.1.38',
  snAgGblEnableWebMgmtDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgGblEnableWebMgmt',
  snAgGblSecurityLevelBinding => '1.3.6.1.4.1.1991.1.1.2.1.39',
  snAgGblEnableSLB => '1.3.6.1.4.1.1991.1.1.2.1.40',
  snAgGblEnableSLBDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgGblEnableSLB',
  snAgSoftwareFeature => '1.3.6.1.4.1.1991.1.1.2.1.41',
  snAgGblEnableModuleInsertedTrap => '1.3.6.1.4.1.1991.1.1.2.1.42',
  snAgGblEnableModuleInsertedTrapDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgGblEnableModuleInsertedTrap',
  snAgGblEnableModuleRemovedTrap => '1.3.6.1.4.1.1991.1.1.2.1.43',
  snAgGblEnableModuleRemovedTrapDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgGblEnableModuleRemovedTrap',
  snAgGblTrapMessage => '1.3.6.1.4.1.1991.1.1.2.1.44',
  snAgGblEnableTelnetServer => '1.3.6.1.4.1.1991.1.1.2.1.45',
  snAgGblEnableTelnetServerDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgGblEnableTelnetServer',
  snAgGblTelnetPassword => '1.3.6.1.4.1.1991.1.1.2.1.46',
  snAgBuildDate => '1.3.6.1.4.1.1991.1.1.2.1.47',
  snAgBuildtime => '1.3.6.1.4.1.1991.1.1.2.1.48',
  snAgBuildVer => '1.3.6.1.4.1.1991.1.1.2.1.49',
  snAgGblCpuUtil1SecAvg => '1.3.6.1.4.1.1991.1.1.2.1.50',
  snAgGblCpuUtil5SecAvg => '1.3.6.1.4.1.1991.1.1.2.1.51',
  snAgGblCpuUtil1MinAvg => '1.3.6.1.4.1.1991.1.1.2.1.52',
  snAgGblDynMemUtil => '1.3.6.1.4.1.1991.1.1.2.1.53',
  snAgGblDynMemTotal => '1.3.6.1.4.1.1991.1.1.2.1.54',
  snAgGblDynMemFree => '1.3.6.1.4.1.1991.1.1.2.1.55',
  snAgImgLoadSPModuleType => '1.3.6.1.4.1.1991.1.1.2.1.56',
  snAgImgLoadSPModuleTypeDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgImgLoadSPModuleType',
  snAgImgLoadSPModuleNumber => '1.3.6.1.4.1.1991.1.1.2.1.57',
  snAgTrapHoldTime => '1.3.6.1.4.1.1991.1.1.2.1.58',
  snAgSFlowSourceInterface => '1.3.6.1.4.1.1991.1.1.2.1.59',
  snAgGblTelnetLoginTimeout => '1.3.6.1.4.1.1991.1.1.2.1.60',
  snAgGblBannerExec => '1.3.6.1.4.1.1991.1.1.2.1.61',
  snAgGblBannerIncoming => '1.3.6.1.4.1.1991.1.1.2.1.62',
  snAgGblBannerMotd => '1.3.6.1.4.1.1991.1.1.2.1.63',
  snAgWebMgmtServerTcpPort => '1.3.6.1.4.1.1991.1.1.2.1.64',
  snAgTftpServerAddrType => '1.3.6.1.4.1.1991.1.1.2.1.65',
  snAgTftpServerAddr => '1.3.6.1.4.1.1991.1.1.2.1.66',
  snAgGblDeleteFirstBeforeDownload => '1.3.6.1.4.1.1991.1.1.2.1.67',
  snAgGblPasswordCheckMode => '1.3.6.1.4.1.1991.1.1.2.1.68',
  snAgentBrd => '1.3.6.1.4.1.1991.1.1.2.2',
  snAgentBrdTable => '1.3.6.1.4.1.1991.1.1.2.2.1',
  snAgentBrdEntry => '1.3.6.1.4.1.1991.1.1.2.2.1.1',
  snAgentBrdIndex => '1.3.6.1.4.1.1991.1.1.2.2.1.1.1',
  snAgentBrdMainBrdDescription => '1.3.6.1.4.1.1991.1.1.2.2.1.1.2',
  snAgentBrdMainBrdId => '1.3.6.1.4.1.1991.1.1.2.2.1.1.3',
  snAgentBrdMainPortTotal => '1.3.6.1.4.1.1991.1.1.2.2.1.1.4',
  snAgentBrdExpBrdDescription => '1.3.6.1.4.1.1991.1.1.2.2.1.1.5',
  snAgentBrdExpBrdId => '1.3.6.1.4.1.1991.1.1.2.2.1.1.6',
  snAgentBrdExpPortTotal => '1.3.6.1.4.1.1991.1.1.2.2.1.1.7',
  snAgentBrdStatusLeds => '1.3.6.1.4.1.1991.1.1.2.2.1.1.8',
  snAgentBrdTrafficLeds => '1.3.6.1.4.1.1991.1.1.2.2.1.1.9',
  snAgentBrdMediaLeds => '1.3.6.1.4.1.1991.1.1.2.2.1.1.10',
  snAgentBrdSpeedLeds => '1.3.6.1.4.1.1991.1.1.2.2.1.1.11',
  snAgentBrdModuleStatus => '1.3.6.1.4.1.1991.1.1.2.2.1.1.12',
  snAgentBrdModuleStatusDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgentBrdModuleStatus',
  snAgentBrdRedundantStatus => '1.3.6.1.4.1.1991.1.1.2.2.1.1.13',
  snAgentBrdRedundantStatusDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgentBrdRedundantStatus',
  snAgentBrdAlarmLeds => '1.3.6.1.4.1.1991.1.1.2.2.1.1.14',
  snAgentBrdTxTrafficLeds => '1.3.6.1.4.1.1991.1.1.2.2.1.1.15',
  snAgentBrdRxTrafficLeds => '1.3.6.1.4.1.1991.1.1.2.2.1.1.16',
  snAgentBrdStatusLedString => '1.3.6.1.4.1.1991.1.1.2.2.1.1.17',
  snAgentBrdTrafficLedString => '1.3.6.1.4.1.1991.1.1.2.2.1.1.18',
  snAgentBrdMediaLedString => '1.3.6.1.4.1.1991.1.1.2.2.1.1.19',
  snAgentBrdSpeedLedString => '1.3.6.1.4.1.1991.1.1.2.2.1.1.20',
  snAgentBrdAlarmLedString => '1.3.6.1.4.1.1991.1.1.2.2.1.1.21',
  snAgentBrdTxTrafficLedString => '1.3.6.1.4.1.1991.1.1.2.2.1.1.22',
  snAgentBrdRxTrafficLedString => '1.3.6.1.4.1.1991.1.1.2.2.1.1.23',
  snAgentBrdMemoryTotal => '1.3.6.1.4.1.1991.1.1.2.2.1.1.24',
  snAgentBrdMemoryAvailable => '1.3.6.1.4.1.1991.1.1.2.2.1.1.25',
  snAgentBrdSerialNumber => '1.3.6.1.4.1.1991.1.1.2.2.1.1.26',
  snAgentBrdPartNumber => '1.3.6.1.4.1.1991.1.1.2.2.1.1.27',
  snAgentBrdMemoryUtil100thPercent => '1.3.6.1.4.1.1991.1.1.2.2.1.1.28',
  snAgentBrdUpTime => '1.3.6.1.4.1.1991.1.1.2.2.1.1.29',
  snAgentBrd2Table => '1.3.6.1.4.1.1991.1.1.2.2.2',
  snAgentBrd2Entry => '1.3.6.1.4.1.1991.1.1.2.2.2.1',
  snAgentBrd2Unit => '1.3.6.1.4.1.1991.1.1.2.2.2.1.1',
  snAgentBrd2Slot => '1.3.6.1.4.1.1991.1.1.2.2.2.1.2',
  snAgentBrd2MainBrdDescription => '1.3.6.1.4.1.1991.1.1.2.2.2.1.3',
  snAgentBrd2MainBrdId => '1.3.6.1.4.1.1991.1.1.2.2.2.1.4',
  snAgentBrd2MainPortTotal => '1.3.6.1.4.1.1991.1.1.2.2.2.1.5',
  snAgentBrd2ModuleStatus => '1.3.6.1.4.1.1991.1.1.2.2.2.1.6',
  snAgentBrd2ModuleStatusDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgentBrd2ModuleStatus',
  snAgentBrd2RedundantStatus => '1.3.6.1.4.1.1991.1.1.2.2.2.1.7',
  snAgentBrd2RedundantStatusDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgentBrd2RedundantStatus',
  snAgentTrp => '1.3.6.1.4.1.1991.1.1.2.3',
  snAgTrpRcvrTable => '1.3.6.1.4.1.1991.1.1.2.3.1',
  snAgTrpRcvrEntry => '1.3.6.1.4.1.1991.1.1.2.3.1.1',
  snAgTrpRcvrIndex => '1.3.6.1.4.1.1991.1.1.2.3.1.1.1',
  snAgTrpRcvrIpAddr => '1.3.6.1.4.1.1991.1.1.2.3.1.1.2',
  snAgTrpRcvrCommunityOrSecurityName => '1.3.6.1.4.1.1991.1.1.2.3.1.1.3',
  snAgTrpRcvrStatus => '1.3.6.1.4.1.1991.1.1.2.3.1.1.4',
  snAgTrpRcvrStatusDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgTrpRcvrStatus',
  snAgTrpRcvrUDPPort => '1.3.6.1.4.1.1991.1.1.2.3.1.1.5',
  snAgTrpRcvrSecurityModel => '1.3.6.1.4.1.1991.1.1.2.3.1.1.6',
  snAgTrpRcvrSecurityModelDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgTrpRcvrSecurityModel',
  snAgTrpRcvrSecurityLevel => '1.3.6.1.4.1.1991.1.1.2.3.1.1.7',
  snAgTrpRcvrSecurityLevelDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgTrpRcvrSecurityLevel',
  snAgentBoot => '1.3.6.1.4.1.1991.1.1.2.4',
  snAgBootSeqTable => '1.3.6.1.4.1.1991.1.1.2.4.1',
  snAgBootSeqEntry => '1.3.6.1.4.1.1991.1.1.2.4.1.1',
  snAgBootSeqIndex => '1.3.6.1.4.1.1991.1.1.2.4.1.1.1',
  snAgBootSeqInstruction => '1.3.6.1.4.1.1991.1.1.2.4.1.1.2',
  snAgBootSeqInstructionDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgBootSeqInstruction',
  snAgBootSeqIpAddr => '1.3.6.1.4.1.1991.1.1.2.4.1.1.3',
  snAgBootSeqFilename => '1.3.6.1.4.1.1991.1.1.2.4.1.1.4',
  snAgBootSeqRowStatus => '1.3.6.1.4.1.1991.1.1.2.4.1.1.5',
  snAgBootSeqRowStatusDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgBootSeqRowStatus',
  snAgSpBootSeqTable => '1.3.6.1.4.1.1991.1.1.2.4.2',
  snAgSpBootSeqEntry => '1.3.6.1.4.1.1991.1.1.2.4.2.1',
  snAgSpBootSeqSpNumber => '1.3.6.1.4.1.1991.1.1.2.4.2.1.1',
  snAgSpBootSeqIndex => '1.3.6.1.4.1.1991.1.1.2.4.2.1.2',
  snAgSpBootSeqInstruction => '1.3.6.1.4.1.1991.1.1.2.4.2.1.3',
  snAgSpBootSeqInstructionDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgSpBootSeqInstruction',
  snAgSpBootSeqIpAddr => '1.3.6.1.4.1.1991.1.1.2.4.2.1.4',
  snAgSpBootSeqFilename => '1.3.6.1.4.1.1991.1.1.2.4.2.1.5',
  snAgSpBootSeqRowStatus => '1.3.6.1.4.1.1991.1.1.2.4.2.1.6',
  snAgSpBootSeqRowStatusDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgSpBootSeqRowStatus',
  snAgCfgEos => '1.3.6.1.4.1.1991.1.1.2.5',
  snAgCfgEosTable => '1.3.6.1.4.1.1991.1.1.2.5.1',
  snAgCfgEosEntry => '1.3.6.1.4.1.1991.1.1.2.5.1.1',
  snAgCfgEosIndex => '1.3.6.1.4.1.1991.1.1.2.5.1.1.1',
  snAgCfgEosPacket => '1.3.6.1.4.1.1991.1.1.2.5.1.1.2',
  snAgCfgEosChkSum => '1.3.6.1.4.1.1991.1.1.2.5.1.1.3',
  snAgentLog => '1.3.6.1.4.1.1991.1.1.2.6',
  snAgSysLogGbl => '1.3.6.1.4.1.1991.1.1.2.6.1',
  snAgSysLogGblEnable => '1.3.6.1.4.1.1991.1.1.2.6.1.1',
  snAgSysLogGblEnableDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgSysLogGblEnable',
  snAgSysLogGblBufferSize => '1.3.6.1.4.1.1991.1.1.2.6.1.2',
  snAgSysLogGblClear => '1.3.6.1.4.1.1991.1.1.2.6.1.3',
  snAgSysLogGblClearDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgSysLogGblClear',
  snAgSysLogGblCriticalLevel => '1.3.6.1.4.1.1991.1.1.2.6.1.4',
  snAgSysLogGblLoggedCount => '1.3.6.1.4.1.1991.1.1.2.6.1.5',
  snAgSysLogGblDroppedCount => '1.3.6.1.4.1.1991.1.1.2.6.1.6',
  snAgSysLogGblFlushedCount => '1.3.6.1.4.1.1991.1.1.2.6.1.7',
  snAgSysLogGblOverrunCount => '1.3.6.1.4.1.1991.1.1.2.6.1.8',
  snAgSysLogGblServer => '1.3.6.1.4.1.1991.1.1.2.6.1.9',
  snAgSysLogGblFacility => '1.3.6.1.4.1.1991.1.1.2.6.1.10',
  snAgSysLogGblFacilityDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgSysLogGblFacility',
  snAgSysLogGblPersistenceEnable => '1.3.6.1.4.1.1991.1.1.2.6.1.11',
  snAgSysLogGblPersistenceEnableDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgSysLogGblPersistenceEnable',
  snAgSysLogBufferTable => '1.3.6.1.4.1.1991.1.1.2.6.2',
  snAgSysLogBufferEntry => '1.3.6.1.4.1.1991.1.1.2.6.2.1',
  snAgSysLogBufferIndex => '1.3.6.1.4.1.1991.1.1.2.6.2.1.1',
  snAgSysLogBufferTimeStamp => '1.3.6.1.4.1.1991.1.1.2.6.2.1.2',
  snAgSysLogBufferCriticalLevel => '1.3.6.1.4.1.1991.1.1.2.6.2.1.3',
  snAgSysLogBufferCriticalLevelDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgSysLogBufferCriticalLevel',
  snAgSysLogBufferMessage => '1.3.6.1.4.1.1991.1.1.2.6.2.1.4',
  snAgSysLogBufferCalTimeStamp => '1.3.6.1.4.1.1991.1.1.2.6.2.1.5',
  snAgStaticSysLogBufferTable => '1.3.6.1.4.1.1991.1.1.2.6.3',
  snAgStaticSysLogBufferEntry => '1.3.6.1.4.1.1991.1.1.2.6.3.1',
  snAgStaticSysLogBufferIndex => '1.3.6.1.4.1.1991.1.1.2.6.3.1.1',
  snAgStaticSysLogBufferTimeStamp => '1.3.6.1.4.1.1991.1.1.2.6.3.1.2',
  snAgStaticSysLogBufferCriticalLevel => '1.3.6.1.4.1.1991.1.1.2.6.3.1.3',
  snAgStaticSysLogBufferCriticalLevelDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgStaticSysLogBufferCriticalLevel',
  snAgStaticSysLogBufferMessage => '1.3.6.1.4.1.1991.1.1.2.6.3.1.4',
  snAgStaticSysLogBufferCalTimeStamp => '1.3.6.1.4.1.1991.1.1.2.6.3.1.5',
  snAgSysLogServerTable => '1.3.6.1.4.1.1991.1.1.2.6.4',
  snAgSysLogServerEntry => '1.3.6.1.4.1.1991.1.1.2.6.4.1',
  snAgSysLogServerIP => '1.3.6.1.4.1.1991.1.1.2.6.4.1.1',
  snAgSysLogServerUDPPort => '1.3.6.1.4.1.1991.1.1.2.6.4.1.2',
  snAgSysLogServerRowStatus => '1.3.6.1.4.1.1991.1.1.2.6.4.1.3',
  snAgSysLogServerRowStatusDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgSysLogServerRowStatus',
  snAgentSysParaConfig => '1.3.6.1.4.1.1991.1.1.2.7',
  snAgentSysParaConfigTable => '1.3.6.1.4.1.1991.1.1.2.7.1',
  snAgentSysParaConfigEntry => '1.3.6.1.4.1.1991.1.1.2.7.1.1',
  snAgentSysParaConfigIndex => '1.3.6.1.4.1.1991.1.1.2.7.1.1.1',
  snAgentSysParaConfigDescription => '1.3.6.1.4.1.1991.1.1.2.7.1.1.2',
  snAgentSysParaConfigMin => '1.3.6.1.4.1.1991.1.1.2.7.1.1.3',
  snAgentSysParaConfigMax => '1.3.6.1.4.1.1991.1.1.2.7.1.1.4',
  snAgentSysParaConfigDefault => '1.3.6.1.4.1.1991.1.1.2.7.1.1.5',
  snAgentSysParaConfigCurrent => '1.3.6.1.4.1.1991.1.1.2.7.1.1.6',
  snAgentConfigModule => '1.3.6.1.4.1.1991.1.1.2.8',
  snAgentConfigModuleTable => '1.3.6.1.4.1.1991.1.1.2.8.1',
  snAgentConfigModuleEntry => '1.3.6.1.4.1.1991.1.1.2.8.1.1',
  snAgentConfigModuleIndex => '1.3.6.1.4.1.1991.1.1.2.8.1.1.1',
  snAgentConfigModuleType => '1.3.6.1.4.1.1991.1.1.2.8.1.1.2',
  snAgentConfigModuleTypeDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgentConfigModuleType',
  snAgentConfigModuleRowStatus => '1.3.6.1.4.1.1991.1.1.2.8.1.1.3',
  snAgentConfigModuleRowStatusDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgentConfigModuleRowStatus',
  snAgentConfigModuleDescription => '1.3.6.1.4.1.1991.1.1.2.8.1.1.4',
  snAgentConfigModuleOperStatus => '1.3.6.1.4.1.1991.1.1.2.8.1.1.5',
  snAgentConfigModuleSerialNumber => '1.3.6.1.4.1.1991.1.1.2.8.1.1.6',
  snAgentConfigModuleNumberOfPorts => '1.3.6.1.4.1.1991.1.1.2.8.1.1.7',
  snAgentConfigModuleMgmtModuleType => '1.3.6.1.4.1.1991.1.1.2.8.1.1.8',
  snAgentConfigModuleMgmtModuleTypeDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgentConfigModuleMgmtModuleType',
  snAgentConfigModuleNumberOfCpus => '1.3.6.1.4.1.1991.1.1.2.8.1.1.9',
  snAgentConfigModule2Table => '1.3.6.1.4.1.1991.1.1.2.8.2',
  snAgentConfigModule2Entry => '1.3.6.1.4.1.1991.1.1.2.8.2.1',
  snAgentConfigModule2Unit => '1.3.6.1.4.1.1991.1.1.2.8.2.1.1',
  snAgentConfigModule2Slot => '1.3.6.1.4.1.1991.1.1.2.8.2.1.2',
  snAgentConfigModule2Type => '1.3.6.1.4.1.1991.1.1.2.8.2.1.3',
  snAgentConfigModule2TypeDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgentConfigModule2Type',
  snAgentConfigModule2RowStatus => '1.3.6.1.4.1.1991.1.1.2.8.2.1.4',
  snAgentConfigModule2RowStatusDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgentConfigModule2RowStatus',
  snAgentConfigModule2Description => '1.3.6.1.4.1.1991.1.1.2.8.2.1.5',
  snAgentConfigModule2OperStatus => '1.3.6.1.4.1.1991.1.1.2.8.2.1.6',
  snAgentConfigModule2SerialNumber => '1.3.6.1.4.1.1991.1.1.2.8.2.1.7',
  snAgentConfigModule2NumberOfPorts => '1.3.6.1.4.1.1991.1.1.2.8.2.1.8',
  snAgentConfigModule2MgmtModuleType => '1.3.6.1.4.1.1991.1.1.2.8.2.1.9',
  snAgentConfigModule2MgmtModuleTypeDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgentConfigModule2MgmtModuleType',
  snAgentConfigModule2NumberOfCpus => '1.3.6.1.4.1.1991.1.1.2.8.2.1.10',
  snAgentUser => '1.3.6.1.4.1.1991.1.1.2.9',
  snAgentUserGbl => '1.3.6.1.4.1.1991.1.1.2.9.1',
  snAgentUserMaxAccnt => '1.3.6.1.4.1.1991.1.1.2.9.1.1',
  snAgentUserAccntTable => '1.3.6.1.4.1.1991.1.1.2.9.2',
  snAgentUserAccntEntry => '1.3.6.1.4.1.1991.1.1.2.9.2.1',
  snAgentUserAccntName => '1.3.6.1.4.1.1991.1.1.2.9.2.1.1',
  snAgentUserAccntPassword => '1.3.6.1.4.1.1991.1.1.2.9.2.1.2',
  snAgentUserAccntEncryptCode => '1.3.6.1.4.1.1991.1.1.2.9.2.1.3',
  snAgentUserAccntPrivilege => '1.3.6.1.4.1.1991.1.1.2.9.2.1.4',
  snAgentUserAccntRowStatus => '1.3.6.1.4.1.1991.1.1.2.9.2.1.5',
  snAgentUserAccntRowStatusDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgentUserAccntRowStatus',
  snAgentRedundant => '1.3.6.1.4.1.1991.1.1.2.10',
  snAgentRedunGbl => '1.3.6.1.4.1.1991.1.1.2.10.1',
  snAgentRedunActiveMgmtMod => '1.3.6.1.4.1.1991.1.1.2.10.1.1',
  snAgentRedunSyncConfig => '1.3.6.1.4.1.1991.1.1.2.10.1.2',
  snAgentRedunBkupCopyBootCode => '1.3.6.1.4.1.1991.1.1.2.10.1.3',
  snAgentRedunBkupCopyBootCodeDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgentRedunBkupCopyBootCode',
  snAgentEnableMgmtModRedunStateChangeTrap => '1.3.6.1.4.1.1991.1.1.2.10.1.4',
  snAgentEnableMgmtModRedunStateChangeTrapDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgentEnableMgmtModRedunStateChangeTrap',
  snAgentRedunBkupBootLoad => '1.3.6.1.4.1.1991.1.1.2.10.1.5',
  snAgentRedunBkupBootLoadDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgentRedunBkupBootLoad',
  snAgentRedunSwitchOver => '1.3.6.1.4.1.1991.1.1.2.10.1.6',
  snAgentRedunSwitchOverDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgentRedunSwitchOver',
  snAgentCpu => '1.3.6.1.4.1.1991.1.1.2.11',
  snAgentCpuUtilTable => '1.3.6.1.4.1.1991.1.1.2.11.1',
  snAgentCpuUtilEntry => '1.3.6.1.4.1.1991.1.1.2.11.1.1',
  snAgentCpuUtilSlotNum => '1.3.6.1.4.1.1991.1.1.2.11.1.1.1',
  snAgentCpuUtilCpuId => '1.3.6.1.4.1.1991.1.1.2.11.1.1.2',
  snAgentCpuUtilInterval => '1.3.6.1.4.1.1991.1.1.2.11.1.1.3',
  snAgentCpuUtilValue => '1.3.6.1.4.1.1991.1.1.2.11.1.1.4',
  snAgentCpuUtilPercent => '1.3.6.1.4.1.1991.1.1.2.11.1.1.5',
  snAgentCpuUtil100thPercent => '1.3.6.1.4.1.1991.1.1.2.11.1.1.6',
  snCpuProcessTable => '1.3.6.1.4.1.1991.1.1.2.11.2',
  snCpuProcessEntry => '1.3.6.1.4.1.1991.1.1.2.11.2.1',
  snCpuProcessName => '1.3.6.1.4.1.1991.1.1.2.11.2.1.1',
  snCpuProcess5SecUtil => '1.3.6.1.4.1.1991.1.1.2.11.2.1.2',
  snCpuProcess1MinUtil => '1.3.6.1.4.1.1991.1.1.2.11.2.1.3',
  snCpuProcess5MinUtil => '1.3.6.1.4.1.1991.1.1.2.11.2.1.4',
  snCpuProcess15MinUtil => '1.3.6.1.4.1.1991.1.1.2.11.2.1.5',
  snCpuProcessRuntime => '1.3.6.1.4.1.1991.1.1.2.11.2.1.6',
  snAgentCpuProcessEnable => '1.3.6.1.4.1.1991.1.1.2.11.3',
  snAgentHw => '1.3.6.1.4.1.1991.1.1.2.12',
  snAgentHwICBMCounterTable => '1.3.6.1.4.1.1991.1.1.2.12.1',
  snAgentHwICBMCounterEntry => '1.3.6.1.4.1.1991.1.1.2.12.1.1',
  snAgentHwICBMCounterSlot => '1.3.6.1.4.1.1991.1.1.2.12.1.1.1',
  snAgentHwICBMCounterDMA => '1.3.6.1.4.1.1991.1.1.2.12.1.1.2',
  snAgentHwICBMCounterFreeDepth => '1.3.6.1.4.1.1991.1.1.2.12.1.1.3',
  snAgentHwICBMCounterWriteDrop => '1.3.6.1.4.1.1991.1.1.2.12.1.1.4',
  snAgentHwICBMCounterWriteInput => '1.3.6.1.4.1.1991.1.1.2.12.1.1.5',
  snAgentHwICBMCounterWriteOutput => '1.3.6.1.4.1.1991.1.1.2.12.1.1.6',
  snAgentHwICBMCounterReadInput => '1.3.6.1.4.1.1991.1.1.2.12.1.1.7',
  snAgentHwICBMCounterReadOutput => '1.3.6.1.4.1.1991.1.1.2.12.1.1.8',
  snCAMIpStatTable => '1.3.6.1.4.1.1991.1.1.2.12.2',
  snCAMIpStatEntry => '1.3.6.1.4.1.1991.1.1.2.12.2.1',
  snCAMIpStatIfIndex => '1.3.6.1.4.1.1991.1.1.2.12.2.1.1',
  snCAMIpStatLevel => '1.3.6.1.4.1.1991.1.1.2.12.2.1.2',
  snCAMIpStatFreeEntries => '1.3.6.1.4.1.1991.1.1.2.12.2.1.3',
  snCAMIpStatTotalEntries => '1.3.6.1.4.1.1991.1.1.2.12.2.1.4',
  snCAMStatTable => '1.3.6.1.4.1.1991.1.1.2.12.3',
  snCAMStatEntry => '1.3.6.1.4.1.1991.1.1.2.12.3.1',
  snCamStatDMAIdNumber => '1.3.6.1.4.1.1991.1.1.2.12.3.1.1',
  snCamStatDMAMasterNumber => '1.3.6.1.4.1.1991.1.1.2.12.3.1.2',
  snCamStatFreePool0Entries => '1.3.6.1.4.1.1991.1.1.2.12.3.1.3',
  snCamStatFreePool1Entries => '1.3.6.1.4.1.1991.1.1.2.12.3.1.4',
  snCamStatFreePool2Entries => '1.3.6.1.4.1.1991.1.1.2.12.3.1.5',
  snCamStatFreePool3Entries => '1.3.6.1.4.1.1991.1.1.2.12.3.1.6',
  snCamStatFreeL2Entries => '1.3.6.1.4.1.1991.1.1.2.12.3.1.7',
  snCamStatFreeL2LowestSection => '1.3.6.1.4.1.1991.1.1.2.12.3.1.8',
  snCamStatHostLookupCount => '1.3.6.1.4.1.1991.1.1.2.12.3.1.9',
  snCamStatRouteLookupCount => '1.3.6.1.4.1.1991.1.1.2.12.3.1.10',
  snCamStatLevel1 => '1.3.6.1.4.1.1991.1.1.2.12.3.1.11',
  snCamStatLevel2 => '1.3.6.1.4.1.1991.1.1.2.12.3.1.12',
  snCamStatLevel3 => '1.3.6.1.4.1.1991.1.1.2.12.3.1.13',
  snCamStatMacFailCount => '1.3.6.1.4.1.1991.1.1.2.12.3.1.14',
  snCamStatIPRouteFailCount => '1.3.6.1.4.1.1991.1.1.2.12.3.1.15',
  snCamStatIPSessionFailCount => '1.3.6.1.4.1.1991.1.1.2.12.3.1.16',
  snCamStatIPMCastFailCount => '1.3.6.1.4.1.1991.1.1.2.12.3.1.17',
  snCamStatL2SessionFailCount => '1.3.6.1.4.1.1991.1.1.2.12.3.1.18',
  snCamStatAddMACCount => '1.3.6.1.4.1.1991.1.1.2.12.3.1.19',
  snCamStatAddVLANCount => '1.3.6.1.4.1.1991.1.1.2.12.3.1.20',
  snCamStatAddIPHostCount => '1.3.6.1.4.1.1991.1.1.2.12.3.1.21',
  snCamStatAddIPRouteCount => '1.3.6.1.4.1.1991.1.1.2.12.3.1.22',
  snCamStatAddIPSessionCount => '1.3.6.1.4.1.1991.1.1.2.12.3.1.23',
  snCamStatAddIPMCastCount => '1.3.6.1.4.1.1991.1.1.2.12.3.1.24',
  snCamStatAddL2SessionCount => '1.3.6.1.4.1.1991.1.1.2.12.3.1.25',
  snCamStatAddIPXCount => '1.3.6.1.4.1.1991.1.1.2.12.3.1.26',
  snCamStatDeleteDMACamCount => '1.3.6.1.4.1.1991.1.1.2.12.3.1.27',
  snAgSystemDRAM => '1.3.6.1.4.1.1991.1.1.2.12.4',
  snAgSystemDRAMUtil => '1.3.6.1.4.1.1991.1.1.2.12.4.1',
  snAgSystemDRAMTotal => '1.3.6.1.4.1.1991.1.1.2.12.4.2',
  snAgSystemDRAMFree => '1.3.6.1.4.1.1991.1.1.2.12.4.3',
  snAgSystemDRAMForBGP => '1.3.6.1.4.1.1991.1.1.2.12.4.4',
  snAgSystemDRAMForOSPF => '1.3.6.1.4.1.1991.1.1.2.12.4.5',
  snAgSystemDebug => '1.3.6.1.4.1.1991.1.1.2.12.5',
  snAgSystemDebugTotalIn => '1.3.6.1.4.1.1991.1.1.2.12.5.1',
  snAgSystemDebugTotalOut => '1.3.6.1.4.1.1991.1.1.2.12.5.2',
  snAgSystemDebugCpuQueueRead => '1.3.6.1.4.1.1991.1.1.2.12.5.3',
  snAgSystemDebugDRAMBuffer => '1.3.6.1.4.1.1991.1.1.2.12.5.4',
  snAgSystemDebugBMBuffer => '1.3.6.1.4.1.1991.1.1.2.12.5.5',
  snAgSystemDebugBMFreeBuffer => '1.3.6.1.4.1.1991.1.1.2.12.5.6',
  snAgSystemDebugBMFreeBufferMgmt => '1.3.6.1.4.1.1991.1.1.2.12.5.7',
  snAgSystemDebugIpcGigLock => '1.3.6.1.4.1.1991.1.1.2.12.5.8',
  snAgSystemDebugDRAMGetError => '1.3.6.1.4.1.1991.1.1.2.12.5.9',
  snAgSystemDebugDRAMToBMCopyFail => '1.3.6.1.4.1.1991.1.1.2.12.5.10',
  snAgentTemp => '1.3.6.1.4.1.1991.1.1.2.13',
  snAgentTempTable => '1.3.6.1.4.1.1991.1.1.2.13.1',
  snAgentTempEntry => '1.3.6.1.4.1.1991.1.1.2.13.1.1',
  snAgentTempSlotNum => '1.3.6.1.4.1.1991.1.1.2.13.1.1.1',
  snAgentTempSensorId => '1.3.6.1.4.1.1991.1.1.2.13.1.1.2',
  snAgentTempSensorDescr => '1.3.6.1.4.1.1991.1.1.2.13.1.1.3',
  snAgentTempValue => '1.3.6.1.4.1.1991.1.1.2.13.1.1.4',
  snAgentTempThresholdTable => '1.3.6.1.4.1.1991.1.1.2.13.2',
  snAgentTempThresholdEntry => '1.3.6.1.4.1.1991.1.1.2.13.2.1',
  snAgentTempThresholdModule => '1.3.6.1.4.1.1991.1.1.2.13.2.1.1',
  snAgentTempThresholdModuleDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgentTempThresholdModule',
  snAgentTempThresholdLevel => '1.3.6.1.4.1.1991.1.1.2.13.2.1.2',
  snAgentTempThresholdLevelDefinition => 'FOUNDRY-SN-AGENT-MIB::snAgentTempThresholdLevel',
  snAgentTempThresholdHighValue => '1.3.6.1.4.1.1991.1.1.2.13.2.1.3',
  snAgentTempThresholdLowValue => '1.3.6.1.4.1.1991.1.1.2.13.2.1.4',
  snAgentTemp2Table => '1.3.6.1.4.1.1991.1.1.2.13.3',
  snAgentTemp2Entry => '1.3.6.1.4.1.1991.1.1.2.13.3.1',
  snAgentTemp2UnitNum => '1.3.6.1.4.1.1991.1.1.2.13.3.1.1',
  snAgentTemp2SlotNum => '1.3.6.1.4.1.1991.1.1.2.13.3.1.2',
  snAgentTemp2SensorId => '1.3.6.1.4.1.1991.1.1.2.13.3.1.3',
  snAgentTemp2SensorDescr => '1.3.6.1.4.1.1991.1.1.2.13.3.1.4',
  snAgentTemp2Value => '1.3.6.1.4.1.1991.1.1.2.13.3.1.5',
  snAgentPoe => '1.3.6.1.4.1.1991.1.1.2.14',
  snAgentLicense => '1.3.6.1.4.1.1991.1.1.2.15',
  fdryLicenseTable => '1.3.6.1.4.1.1991.1.1.2.15.1',
  fdryLicenseEntry => '1.3.6.1.4.1.1991.1.1.2.15.1.1',
  fdryLicensePackageName => '1.3.6.1.4.1.1991.1.1.2.15.1.1.1',
  fdryLicenseLid => '1.3.6.1.4.1.1991.1.1.2.15.1.1.2',
  fdryLicenseHash => '1.3.6.1.4.1.1991.1.1.2.15.1.1.3',
  fdryLicenseType => '1.3.6.1.4.1.1991.1.1.2.15.1.1.4',
  fdryLicenseTypeDefinition => 'FOUNDRY-SN-AGENT-MIB::fdryLicenseType',
  fdryLicensePrecedence => '1.3.6.1.4.1.1991.1.1.2.15.1.1.5',
  fdryLicenseTrialDays => '1.3.6.1.4.1.1991.1.1.2.15.1.1.6',
  fdryLicenseTrialTimeElapsed => '1.3.6.1.4.1.1991.1.1.2.15.1.1.7',
  fdryLicenseTrialTimeLeft => '1.3.6.1.4.1.1991.1.1.2.15.1.1.8',
  fdryLicenseTrialState => '1.3.6.1.4.1.1991.1.1.2.15.1.1.9',
  fdryLicenseTrialStateDefinition => 'FOUNDRY-SN-AGENT-MIB::fdryLicenseTrialState',
  fdryLicenseVendorInfo => '1.3.6.1.4.1.1991.1.1.2.15.1.1.10',
  fdryLicenseSlot => '1.3.6.1.4.1.1991.1.1.2.15.1.1.11',
  fdryLicenseMode => '1.3.6.1.4.1.1991.1.1.2.15.1.1.12',
  fdryLicenseModeDefinition => 'FOUNDRY-SN-AGENT-MIB::fdryLicenseMode',
  fdryLicenseSerialNumber => '1.3.6.1.4.1.1991.1.1.2.15.1.1.13',
  fdryLicenseCapacity => '1.3.6.1.4.1.1991.1.1.2.15.1.1.14',
  fdryLicensedFeatureInfo => '1.3.6.1.4.1.1991.1.1.2.15.2',
  brcdPortLicenseTable => '1.3.6.1.4.1.1991.1.1.2.15.3',
  brcdPortLicenseEntry => '1.3.6.1.4.1.1991.1.1.2.15.3.1',
  brcdPortLicenseIndex => '1.3.6.1.4.1.1991.1.1.2.15.3.1.1',
  brcdPortLicenseStatus => '1.3.6.1.4.1.1991.1.1.2.15.3.1.2',
  brcdPortLicenseStatusDefinition => 'FOUNDRY-SN-AGENT-MIB::brcdPortLicenseStatus',
  brcdSw => '1.3.6.1.4.1.1991.1.1.2.16',
  brcdSwPackageGroup => '1.3.6.1.4.1.1991.1.1.2.16.1',
  brcdSwPackageUpgrade => '1.3.6.1.4.1.1991.1.1.2.16.1.1',
  brcdSwPackageFname => '1.3.6.1.4.1.1991.1.1.2.16.1.1.1',
  brcdSwPackageLoad => '1.3.6.1.4.1.1991.1.1.2.16.1.1.2',
  brcdSwPackageLoadDefinition => 'FOUNDRY-SN-AGENT-MIB::brcdSwPackageLoad',
  brcdSwPackageLoadStatus => '1.3.6.1.4.1.1991.1.1.2.16.1.1.3',
  brcdSwPackageLoadStatusDefinition => 'FOUNDRY-SN-AGENT-MIB::brcdSwPackageLoadStatus',
  brcdSwPackageUpgradeAllImages => '1.3.6.1.4.1.1991.1.1.2.16.1.1.4',
  brcdSwPackageUpgradeResultTable => '1.3.6.1.4.1.1991.1.1.2.16.1.1.5',
  brcdSwPackageUpgradeResultEntry => '1.3.6.1.4.1.1991.1.1.2.16.1.1.5.1',
  brcdSwPackageUpgradeResultIndex => '1.3.6.1.4.1.1991.1.1.2.16.1.1.5.1.1',
  brcdSwPackageUpgradeResultImageType => '1.3.6.1.4.1.1991.1.1.2.16.1.1.5.1.2',
  brcdSwPackageUpgradeResultImageTypeDefinition => 'FOUNDRY-SN-AGENT-MIB::BrcdImageType',
  brcdSwPackageUpgradeResultStatus => '1.3.6.1.4.1.1991.1.1.2.16.1.1.5.1.3',
  brcdSwPackageUpgradeResultStatusDefinition => 'FOUNDRY-SN-AGENT-MIB::brcdSwPackageUpgradeResultStatus',
  brcdSwPackageUpgradeResultTimeStamp => '1.3.6.1.4.1.1991.1.1.2.16.1.1.5.1.4',
  brcdSwPackageUpgradeResultDescription => '1.3.6.1.4.1.1991.1.1.2.16.1.1.5.1.5',
  brcdSwPackageUpgradeSkipVersionCheck => '1.3.6.1.4.1.1991.1.1.2.16.1.1.6',
  brcdSwIntfModAutoUpgrade => '1.3.6.1.4.1.1991.1.1.2.16.1.2',
  brcdSwIntfModAutoUpgradeMode => '1.3.6.1.4.1.1991.1.1.2.16.1.2.1',
  brcdSwIntfModAutoUpgradeModeDefinition => 'FOUNDRY-SN-AGENT-MIB::brcdSwIntfModAutoUpgradeMode',
  brcdSwIntfModAutoUpgradeTftpAddrType => '1.3.6.1.4.1.1991.1.1.2.16.1.2.2',
  brcdSwIntfModAutoUpgradeTftpAddr => '1.3.6.1.4.1.1991.1.1.2.16.1.2.3',
  brcdSwIntfModAutoUpgradeSrcPath => '1.3.6.1.4.1.1991.1.1.2.16.1.2.4',
  brcdSwIntfModAutoUpgradeAllImages => '1.3.6.1.4.1.1991.1.1.2.16.1.2.5',
  snAgentTask => '1.3.6.1.4.1.1991.1.1.2.17',
  snAgentTaskCpuTable => '1.3.6.1.4.1.1991.1.1.2.17.1',
  snAgentTaskCpuEntry => '1.3.6.1.4.1.1991.1.1.2.17.1.1',
  snAgentTaskCpuTaskID => '1.3.6.1.4.1.1991.1.1.2.17.1.1.1',
  snAgentTaskCpuTaskName => '1.3.6.1.4.1.1991.1.1.2.17.1.1.2',
  snAgentTaskCpuState => '1.3.6.1.4.1.1991.1.1.2.17.1.1.3',
  snAgentTaskCpuWaitTime => '1.3.6.1.4.1.1991.1.1.2.17.1.1.4',
  snAgentTaskCpuHoldTime => '1.3.6.1.4.1.1991.1.1.2.17.1.1.5',
  snAgentTaskCpuTaskActivity => '1.3.6.1.4.1.1991.1.1.2.17.1.1.6',
  snAgentTaskMQTable => '1.3.6.1.4.1.1991.1.1.2.17.2',
  snAgentTaskMQEntry => '1.3.6.1.4.1.1991.1.1.2.17.2.1',
  snAgentTaskMQTaskID => '1.3.6.1.4.1.1991.1.1.2.17.2.1.1',
  snAgentTaskMQPriority => '1.3.6.1.4.1.1991.1.1.2.17.2.1.2',
  snAgentTaskMQTaskName => '1.3.6.1.4.1.1991.1.1.2.17.2.1.3',
  snAgentTaskMQLength => '1.3.6.1.4.1.1991.1.1.2.17.2.1.4',
  snAgentTaskMQDepth => '1.3.6.1.4.1.1991.1.1.2.17.2.1.5',
  snAgentTaskMQMaxDepth => '1.3.6.1.4.1.1991.1.1.2.17.2.1.6',
  snAgentTaskMQStickyMaxDepth => '1.3.6.1.4.1.1991.1.1.2.17.2.1.7',
  snAgentTaskMQMsgs => '1.3.6.1.4.1.1991.1.1.2.17.2.1.8',
  snAgentTaskMQMaxMsgs => '1.3.6.1.4.1.1991.1.1.2.17.2.1.9',
  snAgentTaskMQStickyMaxMsgs => '1.3.6.1.4.1.1991.1.1.2.17.2.1.10',
  snAgentTaskMQFailedCount => '1.3.6.1.4.1.1991.1.1.2.17.2.1.11',
  snAgentTaskMQStickyFailedCount => '1.3.6.1.4.1.1991.1.1.2.17.2.1.12',
  snAgentTaskBufferTable => '1.3.6.1.4.1.1991.1.1.2.17.3',
  snAgentTaskBufferEntry => '1.3.6.1.4.1.1991.1.1.2.17.3.1',
  snAgentTaskBufferTaskID => '1.3.6.1.4.1.1991.1.1.2.17.3.1.1',
  snAgentTaskBufferPoolID => '1.3.6.1.4.1.1991.1.1.2.17.3.1.2',
  snAgentTaskBufferTaskName => '1.3.6.1.4.1.1991.1.1.2.17.3.1.3',
  snAgentTaskBufferCount => '1.3.6.1.4.1.1991.1.1.2.17.3.1.4',
  snStackGen => '1.3.6.1.4.1.1991.1.1.5.1',
  snStackPriSwitchMode => '1.3.6.1.4.1.1991.1.1.5.1.1',
  snStackPriSwitchModeDefinition => 'FOUNDRY-SN-AGENT-MIB::snStackPriSwitchMode',
  snStackMaxSecSwitch => '1.3.6.1.4.1.1991.1.1.5.1.2',
  snStackTotalSecSwitch => '1.3.6.1.4.1.1991.1.1.5.1.3',
  snStackSyncAllSecSwitch => '1.3.6.1.4.1.1991.1.1.5.1.4',
  snStackSyncAllSecSwitchDefinition => 'FOUNDRY-SN-AGENT-MIB::snStackSyncAllSecSwitch',
  snStackSmSlotIndex => '1.3.6.1.4.1.1991.1.1.5.1.5',
  snStackFmpSetProcess => '1.3.6.1.4.1.1991.1.1.5.1.6',
  snStackFmpSetProcessDefinition => 'FOUNDRY-SN-AGENT-MIB::snStackFmpSetProcess',
  snStackSecSwitchInfo => '1.3.6.1.4.1.1991.1.1.5.2',
  snStackSecSwitchTable => '1.3.6.1.4.1.1991.1.1.5.2.1',
  snStackSecSwitchEntry => '1.3.6.1.4.1.1991.1.1.5.2.1.1',
  snStackSecSwitchIndex => '1.3.6.1.4.1.1991.1.1.5.2.1.1.1',
  snStackSecSwitchSlotId => '1.3.6.1.4.1.1991.1.1.5.2.1.1.2',
  snStackSecSwitchPortCnts => '1.3.6.1.4.1.1991.1.1.5.2.1.1.3',
  snStackSecSwitchEnabled => '1.3.6.1.4.1.1991.1.1.5.2.1.1.4',
  snStackSecSwitchEnabledDefinition => 'FOUNDRY-SN-AGENT-MIB::snStackSecSwitchEnabled',
  snStackSecSwitchAck => '1.3.6.1.4.1.1991.1.1.5.2.1.1.5',
  snStackSecSwitchAckDefinition => 'FOUNDRY-SN-AGENT-MIB::snStackSecSwitchAck',
  snStackSecSwitchMacAddr => '1.3.6.1.4.1.1991.1.1.5.2.1.1.6',
  snStackSecSwitchSyncCmd => '1.3.6.1.4.1.1991.1.1.5.2.1.1.7',
  snStackSecSwitchSyncCmdDefinition => 'FOUNDRY-SN-AGENT-MIB::snStackSecSwitchSyncCmd',
  snStackSecSwitchIpAddr => '1.3.6.1.4.1.1991.1.1.5.2.1.1.8',
  snStackSecSwitchSubnetMask => '1.3.6.1.4.1.1991.1.1.5.2.1.1.9',
  snStackSecSwitchCfgCmd => '1.3.6.1.4.1.1991.1.1.5.2.1.1.10',
  snStackSecSwitchCfgCmdDefinition => 'FOUNDRY-SN-AGENT-MIB::snStackSecSwitchCfgCmd',
  snAgent => '1.3.6.1.4.1.1991.4',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'FOUNDRY-SN-AGENT-MIB'} = {
  snAgentConfigModule2MgmtModuleType => {
    '1' => 'other',
    '2' => 'nonManagementModule',
    '3' => 'unknownManagementModule',
    '4' => 'm1ManagementModule',
    '5' => 'm2ManagementModule',
    '6' => 'm3ManagementModule',
    '7' => 'm4ManagementModule',
    '8' => 'm5ManagementModule',
    '9' => 'jetcoreStackManagementModule',
    '10' => 'muchoManagementModule',
    '11' => 'rottWeilerManagementModule',
    '12' => 'fesXStackManagementModule',
    '13' => 'fgsStackManagementModule',
  },
  snAgGblExcessiveErrorWarning => {
    '0' => 'false',
    '1' => 'true',
  },
  snAgentRedunSwitchOver => {
    '1' => 'other',
    '2' => 'reset',
  },
  snStackSecSwitchCfgCmd => {
    '0' => 'normal',
    '1' => 'invalid',
    '2' => 'auto',
    '3' => 'manual',
  },
  snAgSysLogGblFacility => {
    '1' => 'kern',
    '2' => 'user',
    '3' => 'mail',
    '4' => 'daemon',
    '5' => 'auth',
    '6' => 'syslog',
    '7' => 'lpr',
    '8' => 'news',
    '9' => 'uucp',
    '10' => 'sys9',
    '11' => 'sys10',
    '12' => 'sys11',
    '13' => 'sys12',
    '14' => 'sys13',
    '15' => 'sys14',
    '16' => 'cron',
    '17' => 'local0',
    '18' => 'local1',
    '19' => 'local2',
    '20' => 'local3',
    '21' => 'local4',
    '22' => 'local5',
    '23' => 'local6',
    '24' => 'local7',
  },
  snAgGblEnableLinkUpTrap => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  fdryLicenseType => {
    '1' => 'normal',
    '2' => 'trial',
  },
  BrcdImageType => {
    '1' => 'unknown',
    '2' => 'managementModuleBoot',
    '3' => 'managementModuleMonitor',
    '4' => 'managementModuleApplication',
    '5' => 'interfaceModuleBoot',
    '6' => 'interfaceModuleMonitor',
    '7' => 'interfaceModuleApplication',
    '8' => 'mgmtAndIntfModuleCombinedApp',
    '9' => 'fpgaMBridge',
    '10' => 'fpgaMBridge32',
    '11' => 'fpgaSBridge',
    '12' => 'fpgaHBridge',
    '13' => 'fpgaBundled',
    '14' => 'fpgaPbifOc',
    '15' => 'fpgaStatsOc',
    '16' => 'fpgaXppOc',
    '17' => 'fpgaPbifMrj',
    '18' => 'fpgaStatsMrj',
    '19' => 'fpgaXppMrj',
    '20' => 'fpgaPbifSp2',
    '21' => 'fpgaXgmacSp2',
    '22' => 'fpgaXppSp2',
    '23' => 'fpgaPbif8x10',
    '24' => 'fpgaXpp8x10',
    '25' => 'fpgaXpp2x100',
    '26' => 'fpgaPbifMetro',
    '27' => 'fpgaXpp4x40',
    '28' => 'fpgaPbif4x40',
  },
  brcdSwIntfModAutoUpgradeMode => {
    '1' => 'unknown',
    '2' => 'disabled',
    '3' => 'tftp',
    '4' => 'slot1',
    '5' => 'slot2',
  },
  snAgentTempThresholdModule => {
    '1' => 'mgmtModule',
    '2' => 'slaveModule',
    '3' => 'switchFabricModule',
  },
  snAgGblDmaFailure => {
    '0' => 'false',
    '1' => 'true',
  },
  snAgGblBufferShortage => {
    '0' => 'false',
    '1' => 'true',
  },
  snAgentRedunBkupBootLoad => {
    '1' => 'normal',
    '17' => 'operationError',
    '20' => 'downloadBackup',
  },
  snChasArchitectureType => {
    '1' => 'stackable',
    '2' => 'bigIron',
    '3' => 'terathon',
    '4' => 'fifthGen',
  },
  snAgentConfigModule2RowStatus => {
    '1' => 'other',
    '2' => 'valid',
    '3' => 'delete',
    '4' => 'create',
  },
  snAgBootSeqInstruction => {
    '1' => 'fromPrimaryFlash',
    '2' => 'fromSecondaryFlash',
    '3' => 'fromTftpServer',
    '4' => 'fromBootpServer',
    '5' => 'fromPcmciaCard1',
    '6' => 'fromPcmciaCard2',
  },
  snAgentBrdRedundantStatus => {
    '1' => 'other',
    '2' => 'active',
    '3' => 'standby',
    '4' => 'crashed',
    '5' => 'comingUp',
  },
  snAgReload => {
    '1' => 'other',
    '2' => 'running',
    '3' => 'reset',
    '4' => 'busy',
  },
  snStackFmpSetProcess => {
    '0' => 'normal',
    '1' => 'pending',
    '2' => 'failure',
  },
  snAgSysLogGblClear => {
    '0' => 'normal',
    '1' => 'clearAll',
    '2' => 'clearDynamic',
    '3' => 'clearStatic',
  },
  snAgGblPasswordChangeMode => {
    '1' => 'anyMgmtEntity',
    '2' => 'consoleAndTelnet',
    '3' => 'consoleOnly',
    '4' => 'telnetOnly',
  },
  snAgTrpRcvrStatus => {
    '1' => 'other',
    '2' => 'valid',
    '3' => 'delete',
    '4' => 'create',
    '5' => 'ignore',
  },
  snStackSecSwitchSyncCmd => {
    '0' => 'normal',
    '1' => 'invalid',
    '2' => 'device',
    '3' => 'global',
    '4' => 'local',
  },
  snAgGblEnableWebMgmt => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  snChasFanOperStatus => {
    '1' => 'other',
    '2' => 'normal',
    '3' => 'failure',
  },
  snStackPriSwitchMode => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  snAgGblResourceLowWarning => {
    '0' => 'false',
    '1' => 'true',
  },
  snAgGblEnableColdStartTrap => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  snAgCfgLoad => {
    '1' => 'normal',
    '2' => 'flashPrepareReadFailure',
    '3' => 'flashReadError',
    '4' => 'flashPrepareWriteFailure',
    '5' => 'flashWriteError',
    '6' => 'tftpTimeoutError',
    '7' => 'tftpOutOfBufferSpace',
    '8' => 'tftpBusy',
    '9' => 'tftpRemoteOtherErrors',
    '10' => 'tftpRemoteNoFile',
    '11' => 'tftpRemoteBadAccess',
    '12' => 'tftpRemoteDiskFull',
    '13' => 'tftpRemoteBadOperation',
    '14' => 'tftpRemoteBadId',
    '15' => 'tftpRemoteFileExists',
    '16' => 'tftpRemoteNoUser',
    '17' => 'operationError',
    '18' => 'loading',
    '20' => 'uploadFromFlashToServer',
    '21' => 'downloadToFlashFromServer',
    '22' => 'uploadFromDramToServer',
    '23' => 'downloadToDramFromServer',
    '24' => 'uploadFromFlashToNMS',
    '25' => 'downloadToFlashFromNMS',
    '26' => 'uploadFromDramToNMS',
    '27' => 'downloadToDramFromNMS',
    '28' => 'operationDoneWithNMS',
    '29' => 'tftpWrongFileType',
    '30' => 'downloadToDramFromServerOverwrite',
  },
  snAgConfigFromNVRAM => {
    '1' => 'normal',
    '2' => 'error',
    '3' => 'config',
    '4' => 'configing',
    '5' => 'busy',
  },
  snAgBootSeqRowStatus => {
    '1' => 'other',
    '2' => 'valid',
    '3' => 'delete',
    '4' => 'create',
  },
  snAgentConfigModuleRowStatus => {
    '1' => 'other',
    '2' => 'valid',
    '3' => 'delete',
    '4' => 'create',
  },
  snAgGblEnableModuleRemovedTrap => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  snChasPwrSupplyOperStatus => {
    '1' => 'other',
    '2' => 'normal',
    '3' => 'failure',
  },
  snChasPwrSupply2OperStatus => {
    '1' => 'other',
    '2' => 'normal',
    '3' => 'failure',
  },
  snChasProductType => {
    '0' => 'invalid',
    '1' => 'mg8',
    '2' => 'ni40G',
    '3' => 'imr',
    '4' => 'biRx800',
    '5' => 'niXmr16000',
    '6' => 'biRx400',
    '7' => 'niXmr8000',
    '8' => 'biRx200',
    '9' => 'niXmr4000',
    '10' => 'niMlx16',
    '11' => 'niMlx8',
    '12' => 'niMlx4',
    '13' => 'niMlx32',
    '14' => 'niXmr32000',
    '15' => 'biRx32',
    '16' => 'niCES2000Series',
    '17' => 'niCER2000Series',
    '18' => 'brMlxE4',
    '19' => 'brMlxE8',
    '20' => 'brMlxE16',
    '21' => 'brMlxE32',
    '50' => 'biNI2',
    '66' => 'biBB',
    '77' => 'biM4',
    '78' => 'biNI',
    '83' => 'biSLB',
    '87' => 'biWG',
  },
  snAgentBrd2RedundantStatus => {
    '1' => 'other',
    '2' => 'active',
    '3' => 'standby',
    '4' => 'crashed',
    '5' => 'comingUp',
  },
  snAgGblEnableSLB => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  snChasEnableFanTrap => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  snAgentConfigModuleType => {
    '0' => 'bi8PortGigManagementModule',
    '1' => 'bi4PortGigManagementModule',
    '2' => 'bi16PortCopperManagementModule',
    '3' => 'bi4PortGigModule',
    '4' => 'fi2PortGigManagementModule',
    '5' => 'fi4PortGigManagementModule',
    '6' => 'bi8PortGigCopperManagementModule',
    '7' => 'fi8PortGigManagementModule',
    '8' => 'bi8PortGigModule',
    '9' => 'bi12PortGigCopper2PortGigFiberManagement',
    '10' => 'bi24PortCopperModule',
    '11' => 'fi24PortCopperModule',
    '12' => 'bi16Port100FXModule',
    '13' => 'bi8Port100FXModule',
    '14' => 'bi8PortGigCopperModule',
    '15' => 'bi12PortGigCopper2PortGigFiber',
    '18' => 'bi2PortGigManagementModule',
    '19' => 'bi24Port100FXModule',
    '20' => 'bi0PortManagementModule',
    '21' => 'pos622MbsModule',
    '22' => 'pos155MbsModule',
    '23' => 'bi2PortGigModule',
    '24' => 'bi2PortGigCopperModule',
    '25' => 'fi2PortGigModule',
    '26' => 'fi4PortGigModule',
    '27' => 'fi8PortGigModule',
    '28' => 'fi8PortGigCopperModule',
    '29' => 'fi8PortGigCopperManagementModule',
    '30' => 'pos155Mbs2PModule',
    '31' => 'fi4PortGigCopperManagementModule',
    '32' => 'fi2PortGigCopperManagementModule',
    '33' => 'bi4PortGigCopperManagementModule',
    '34' => 'bi2PortGigCopperManagementModule',
    '35' => 'bi8PortGigM4ManagementModule',
    '36' => 'bi4PortGigM4ManagementModule',
    '37' => 'bi2PortGigM4ManagementModule',
    '38' => 'bi0PortGigM4ManagementModule',
    '39' => 'bi0PortWSMManagementModule',
    '40' => 'biPos2Port2488MbsModule',
    '41' => 'bi0PortWSMModule',
    '42' => 'niPos2Port2488MbsModule',
    '43' => 'ni4802',
    '44' => 'bi4PortGigNPAModule',
    '45' => 'biAtm2Port155MbsModule',
    '46' => 'biAtm4Port155MbsModule',
    '47' => 'bi1Port10GigModule',
    '48' => 'fes4802Module',
    '49' => 'fes2402Module',
    '50' => 'fes9604Module',
    '51' => 'fes12GigCopperAndGigFiberModule',
    '52' => 'fesx24GigModule',
    '53' => 'fesx24Gig2TenGigModule',
    '54' => 'fesx24Gig1TenGigModule',
    '55' => 'fesx48GigModule',
    '56' => 'fesx48Gig2TenGigModule',
    '57' => 'fesx48Gig1TenGigModule',
    '58' => 'bi40PortGigCopperHVModule',
    '59' => 'bi60PortGigCopperHVModule',
    '60' => 'bi8Port10GigModule',
    '61' => 'bi10PortGigHVModule',
    '62' => 'bi20PortGigHVModule',
    '63' => 'bi24PortGigModule',
    '64' => 'bi24PortGigCopperModule',
    '65' => 'bi48PortGigCopperModule',
    '66' => 'bi24PortGigFiberModule',
    '75' => 'ni4Port10GigSPModule',
    '76' => 'ni40PortGigSPModule',
    '77' => 'ni40PortGigCopperSPModule',
    '78' => 'ni2Port10GigSPModule',
    '79' => 'ni10PortGigSPModule',
    '80' => 'ni20PortGigSPModule',
    '81' => 'xmr4Port10GigSPModule',
    '82' => 'xmr20PortGigSPModule',
    '83' => 'xmr2Port10GigSPModule',
    '84' => 'xmr20PortGigCopperSPModule',
    '85' => 'xmr20PortGigFXSPModule',
    '86' => 'niImrMrManagementModule',
    '87' => 'niXmrMrManagementModule',
    '88' => 'xer4Port10GigSPModule',
    '89' => 'xer2Port10GigSPModule',
    '90' => 'xer20PortGigCopperSPModule',
    '91' => 'xer20PortGigFXSPModule',
    '92' => 'mlx4Port10GigSPModule',
    '93' => 'mlx2Port10GigSPModule',
    '94' => 'mlx20PortGigCopperSPModule',
    '95' => 'mlx20PortGigFXSPModule',
    '103' => 'mlx48PortGigMrj21SPModule',
    '112' => 'fesx24GigFiberGigCopperModule',
    '113' => 'fesx24GigFiber2TenGigModule',
    '114' => 'fesx24GigFiber1TenGigModule',
    '144' => 'fgs24PortManagementModule',
    '145' => 'fgs48PortManagementModule',
    '152' => 'fgsXfp2Port10gModule',
    '153' => 'fgsCx42Port10gModule',
    '154' => 'fgsXfp1Cx41Port10gModule',
    '155' => 'fgsXpf1Port10gModule',
    '160' => 'fls24PortCopperBaseModule',
    '161' => 'fls48PortCopperBaseModule',
    '168' => 'flsXfp1Port10gModule',
    '169' => 'flsCx41Port10gModule',
    '176' => 'fcx624SBaseModule',
    '177' => 'fcx648SBaseModule',
    '180' => 'fcx624SPoeBaseModule',
    '181' => 'fcx648SPoeBaseModule',
    '184' => 'fcxXfp2Port10gModule',
    '185' => 'fcxCx42Port16gModule',
    '192' => 'fcx624SFBaseModule',
    '195' => 'biFiJc48ePort100fxIpcModule',
    '196' => 'biFiJc48tPort100fxIpcModule',
    '197' => 'biFiJc8PortGigM4ManagementModule',
    '198' => 'biFiJc8PortGigIgcModule',
    '200' => 'biFiJc16PortGigIgcModule',
    '201' => 'biJc24PortCopperIpc4GigIgcModule',
    '202' => 'biJc16PortGigCopperIgcModule',
    '206' => 'biFiJc24Port100fxIpcModule',
    '207' => 'bi2Port10GigModule',
    '208' => 'biJc48tPortRJ21OmpModule',
    '209' => 'biJc48ePortRJ45OmpModule',
    '212' => 'biJc24PortIpcRJ45PoeModule',
    '214' => 'biJc2PortGigIgcM4ManagementModule',
    '1048' => 'fdryBi4Port10GigModule',
    '1049' => 'fdryBi40PortGigModule',
    '1050' => 'fdryBi1Port100FXManagementModule',
    '1051' => 'fdryBi2Port10GigModule',
    '1052' => 'fdryBi40PortGigCopperModule',
    '1053' => 'fdryBi60PortGigCopperModule',
    '1054' => 'fdryBi4Port10GigHVModule',
    '1055' => 'fdryBi2Port10GigHVModule',
    '1056' => 'fdryBi8Port10GigHVModule',
    '1057' => 'fdryBi40PortGigHVModule',
    '1058' => 'fdryBi40PortGigCopperHVModule',
    '1059' => 'fdryBi60PortGigCopperHVModule',
    '1060' => 'fdryBi8Port10GigModule',
    '1061' => 'fdryBi10PortGigHVModule',
    '1062' => 'fdryBi20PortGigHVModule',
    '1063' => 'fdryBi24PortGigModule',
    '1064' => 'fdryBi24PortGigCopperModule',
    '1065' => 'fdryBi48PortGigCopperModule',
    '1066' => 'fdryBi24PortGigFiberModule',
    '1067' => 'fdryBi16Port10GigModule',
    '1075' => 'fdryNi4Port10GigSPModule',
    '1076' => 'fdryNi40PortGigSPModule',
    '1077' => 'fdryNi40PortGigCopperSPModule',
    '1078' => 'fdryNi2Port10GigSPModule',
    '1079' => 'fdryNi10PortGigSPModule',
    '1080' => 'fdryNi20PortGigSPModule',
    '1081' => 'fdryXmr4Port10GigSPModule',
    '1082' => 'fdryXmr20PortGigSPModule',
    '1083' => 'fdryXmr2Port10GigSPModule',
    '1084' => 'fdryXmr20PortGigCopperSPModule',
    '1085' => 'fdryXmr20PortGigFXSPModule',
    '1086' => 'fdryNiImrMrManagementModule',
    '1087' => 'fdryNiXmrMrManagementModule',
    '1088' => 'fdryMlx4Port10GigSPModule',
    '1089' => 'fdryMlx2Port10GigSPModule',
    '1090' => 'fdryMlx20PortGigCopperSPModule',
    '1091' => 'fdryMlx20PortGigFXSPModule',
    '1093' => 'brMlx4Port10GigXModule',
    '1094' => 'brMlx24PortGigCopperXModule',
    '1095' => 'brMlx24PortGigSfpXModule',
    '1096' => 'niCes24PortFiberModule',
    '1097' => 'niCes24PortCopperModule',
    '1098' => 'niCes2Port10GigModule',
    '1099' => 'niCes48PortFiberModule',
    '1100' => 'niCes48PortCopperModule',
    '1101' => 'niCes48PortFiberWith2Port10GModule',
    '1102' => 'niCes48PortCopperWith2Port10GModule',
    '1103' => 'fdryMlx48PortGigMrj21SPModule',
    '1104' => 'fdryXmr2PortOC192SPModule',
    '1105' => 'fdryXmr1PortOC192SPModule',
    '1106' => 'fdryXmr8PortOC48SPModule',
    '1107' => 'fdryXmr4PortOC48SPModule',
    '1108' => 'fdryXmr2PortOC48SPModule',
    '1109' => 'fdryNiMlxMrManagementModule',
    '1110' => 'niMlx8Port10GigMModule',
    '1111' => 'niMlx8Port10GigDModule',
    '1112' => 'brMlx8Port10GigXModule',
    '1113' => 'brMlx2Port100GigXModule',
    '1114' => 'brcdMlxMr2ManagementModule',
    '1115' => 'brcdXmrMr2ManagementModule',
    '1116' => 'brcdMlx32Mr2ManagementModule',
    '1117' => 'brcdXmr32Mr2ManagementModule',
    '1118' => 'brcdNiXmr32MrManagementModule',
    '1119' => 'brcdNiMlx32MrManagementModule',
    '1120' => 'brcdMlx24Port10GigDMModule',
    '1121' => 'brMlx4Port40GigMModule',
    '1122' => 'brcdNiCes4Port10GigModule',
    '1123' => 'brMlx2Port100GigCFP2Module',
    '1124' => 'brMlx20Port10GigModule',
    '1125' => 'brMlx4Port10GigXIPSecModule',
    '2016' => 'fdryIcx6430624BaseModule',
    '2017' => 'fdryIcx6430648BaseModule',
    '2020' => 'fdryIcx6430624PoeBaseModule',
    '2021' => 'fdryIcx6430648PoeBaseModule',
    '2024' => 'fdryIcx6430sfp4Port4gModule',
    '2032' => 'fdryIcx6450624BaseModule',
    '2033' => 'fdryIcx6450648BaseModule',
    '2036' => 'fdryIcx6450624PoeBaseModule',
    '2037' => 'fdryIcx6450648PoeBaseModule',
    '2040' => 'fdryIcx6450sfp4Port40gModule',
    '2055' => 'fdryIcx665056BaseModule',
    '2056' => 'fdryIcx6650sfp4Port40gModule',
    '2057' => 'fdryIcx6650sfp8Port10gModule',
    '2064' => 'fdryFiV4Sx12ComboPortManagementModule',
    '2065' => 'fdryFiV4Sx2Port10gModule',
    '2066' => 'fdryFiV4Sx24PortGigCopperModule',
    '2067' => 'fdryFiV4Sx24PortGigFiberModule',
    '2068' => 'fdryFiV4Sx2Port10gLanWanModule',
    '2069' => 'fdryFiV4Sx24Port100m1gFiberModule',
    '2074' => 'fdryFiV4Sx12ComboPortManagement2Module',
    '2080' => 'fdryFiV4Sx210gPortManagementModule',
    '2081' => 'fdryFiSx0PortManagementModule',
    '2083' => 'fdryFiV4Sx4g4fPortManagementModule',
    '2096' => 'fdryFiV6Sx12ComboPortManagementModule',
    '2098' => 'fdryFiV6Sx24PortGigCopperModule',
    '2100' => 'fdryFiV6Sx2Port10gModule',
    '2101' => 'fdryFiV6Sx24Port100m1gFiberModule',
    '2102' => 'fdryFiV6Sx210gPortManagementModule',
    '2103' => 'fdryFiV6Sx48PortGigCopperPoeModule',
    '2104' => 'fdryFiV6Sx4g4fPortManagementModule',
    '2105' => 'fdryFiV6Sx12ComboPortManagement2Module',
    '2106' => 'fdryFiV6Sx48PortGigCopperModule',
    '2112' => 'fdryFiV6SxXl0PortManagementModule',
    '2113' => 'fdryFiV6SxXl210gPortManagementModule',
    '2132' => 'fdryIcx7750QSFP6port40gModule',
    '2133' => 'fdryIcx77506Q6port40gModule',
    '2134' => 'fdryIcx775026QBaseModule',
    '2135' => 'fdryIcx775048FBaseModule',
    '2136' => 'fdryIcx775048CBaseModule',
    '2137' => 'fdryIcx6430612CBaseModule',
    '2138' => 'fdryIcx6430Copper2Port2gModule',
    '2139' => 'fdryIcx6430sfp2Port2gModule',
    '2140' => 'fdryIcx6450612CPDBaseModule',
    '2141' => 'fdryIcx6450Copper2Port2gModule',
    '2142' => 'fdryIcx6450sfp2Port2gModule',
    '2208' => 'fdryFcx624BaseModule',
    '2209' => 'fdryFcx648BaseModule',
    '2220' => 'fdryFcxSfpPlus4Port10gModule',
    '2224' => 'fdryIcx7450624BaseModule',
    '2225' => 'fdryIcx7450648BaseModule',
    '2227' => 'fdryIcx7450648FBaseModule',
    '2228' => 'fdryIcx7450624PoeBaseModule',
    '2229' => 'fdryIcx7450648PoeBaseModule',
    '2233' => 'fdryIcx7400sfpplus4Port40gModule',
    '2234' => 'fdryIcx7400copper4Port40gModule',
    '2235' => 'fdryIcx7400sfp4Port4gModule',
    '2236' => 'fdryIcx7400qsfpplus1Port40gModule',
    '2240' => 'fdryIcx6610624BaseModule',
    '2241' => 'fdryIcx6610648BaseModule',
    '2244' => 'fdryIcx6610624PoeBaseModule',
    '2245' => 'fdryIcx6610648PoeBaseModule',
    '2246' => 'fdryIcx6610624FBaseModule',
    '2248' => 'fdryIcx6610DualMode8PortModule',
    '2249' => 'fdryIcx6610Qsfp10Port160gModule',
  },
  snAgTrpRcvrSecurityLevel => {
    '1' => 'noAuth',
    '2' => 'auth',
    '3' => 'authPriv',
  },
  snAgGblEnableModuleInsertedTrap => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  snAgentConfigModuleMgmtModuleType => {
    '1' => 'other',
    '2' => 'nonManagementModule',
    '3' => 'unknownManagementModule',
    '4' => 'm1ManagementModule',
    '5' => 'm2ManagementModule',
    '6' => 'm3ManagementModule',
    '7' => 'm4ManagementModule',
    '8' => 'm5ManagementModule',
    '9' => 'jetcoreStackManagementModule',
    '10' => 'muchoManagementModule',
    '11' => 'rottWeilerManagementModule',
    '12' => 'fesXStackManagementModule',
    '13' => 'fgsStackManagementModule',
    '14' => 'niCesManagementModule',
    '15' => 'fastIronSuperXManagementModule',
    '16' => 'fastIronSXRManagementModule',
    '17' => 'fastIronV6SuperXManagementModule',
    '18' => 'fastIronV6SXRManagementModule',
  },
  brcdSwPackageUpgradeResultStatus => {
    '1' => 'ok',
    '2' => 'downloadFailed',
    '3' => 'installFailed',
    '4' => 'skipped',
    '5' => 'unknown',
  },
  snAgGblDataRetrieveMode => {
    '0' => 'nextbootCfg',
    '1' => 'operationalData',
  },
  snAgentBrd2ModuleStatus => {
    '0' => 'moduleEmpty',
    '2' => 'moduleGoingDown',
    '3' => 'moduleRejected',
    '4' => 'moduleBad',
    '8' => 'moduleConfigured',
    '9' => 'moduleComingUp',
    '10' => 'moduleRunning',
    '11' => 'moduleBlocked',
  },
  snChasFan2OperStatus => {
    '1' => 'other',
    '2' => 'normal',
    '3' => 'failure',
  },
  snChasEnablePwrSupplyTrap => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  snAgGblQueueOverflow => {
    '0' => 'false',
    '1' => 'true',
  },
  snAgSysLogServerRowStatus => {
    '1' => 'other',
    '2' => 'valid',
    '3' => 'delete',
    '4' => 'create',
  },
  snAgentTempThresholdLevel => {
    '1' => 'low',
    '2' => 'medium',
    '3' => 'mediumHhigh',
    '4' => 'high',
  },
  snAgImgLoadSPModuleType => {
    '1' => 'other',
    '2' => 'vm1',
    '3' => 'pos12',
    '4' => 'pos48',
    '5' => 'atm',
    '6' => 'gignpa',
    '7' => 'lp',
  },
  snAgGblEnableTelnetServer => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  snStackSyncAllSecSwitch => {
    '0' => 'normal',
    '1' => 'invalid',
    '2' => 'device',
    '3' => 'global',
    '4' => 'local',
  },
  snStackSecSwitchEnabled => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  snAgentBrdModuleStatus => {
    '0' => 'moduleEmpty',
    '2' => 'moduleGoingDown',
    '3' => 'moduleRejected',
    '4' => 'moduleBad',
    '8' => 'moduleConfigured',
    '9' => 'moduleComingUp',
    '10' => 'moduleRunning',
    '11' => 'moduleBlocked',
  },
  snAgSpBootSeqRowStatus => {
    '1' => 'valid',
    '2' => 'delete',
    '3' => 'create',
  },
  brcdSwPackageLoadStatus => {
    '1' => 'normal',
    '2' => 'started',
    '3' => 'internalError',
    '4' => 'manifestFileDownloadError',
    '5' => 'manifestFileValidationError',
    '6' => 'downloadingManagementModuleBoot',
    '7' => 'downloadingManagementModuleMonitor',
    '8' => 'downloadingManagementModuleApplication',
    '9' => 'downloadingInterfaceModuleBoot',
    '10' => 'downloadingInterfaceModuleMonitor',
    '11' => 'downloadingInterfaceModuleApplication',
    '12' => 'downloadingInterfaceModuleFpga',
    '13' => 'downloadingFpgaMBridge',
    '14' => 'downloadingFpgaSBridge',
    '15' => 'downloadingFpgaHBridge',
    '16' => 'upgradingManagementModuleBoot',
    '17' => 'upgradingManagementModuleMonitor',
    '18' => 'upgradingManagementModuleApplication',
    '19' => 'upgradingInterfaceModuleBoot',
    '20' => 'upgradingInterfaceModuleMonitor',
    '21' => 'upgradingInterfaceModuleApplication',
    '22' => 'upgradingInterfaceModuleFpga',
    '23' => 'upgradingFpgaMBridge',
    '24' => 'upgradingFpgaSBridge',
    '25' => 'upgradingFpgaHBridge',
  },
  snAgImgLoad => {
    '1' => 'normal',
    '2' => 'flashPrepareReadFailure',
    '3' => 'flashReadError',
    '4' => 'flashPrepareWriteFailure',
    '5' => 'flashWriteError',
    '6' => 'tftpTimeoutError',
    '7' => 'tftpOutOfBufferSpace',
    '8' => 'tftpBusy',
    '9' => 'tftpRemoteOtherErrors',
    '10' => 'tftpRemoteNoFile',
    '11' => 'tftpRemoteBadAccess',
    '12' => 'tftpRemoteDiskFull',
    '13' => 'tftpRemoteBadOperation',
    '14' => 'tftpRemoteBadId',
    '15' => 'tftpRemoteFileExists',
    '16' => 'tftpRemoteNoUser',
    '17' => 'operationError',
    '18' => 'loading',
    '19' => 'uploadMPPrimary',
    '20' => 'downloadMPPrimary',
    '21' => 'uploadMPSecondary',
    '22' => 'downloadMPSecondary',
    '23' => 'tftpWrongFileType',
    '24' => 'downloadSPPrimary',
    '25' => 'downloadSPSecondary',
    '26' => 'uploadMPBootROM',
    '27' => 'downloadMPBootROM',
    '28' => 'uploadMPBootTFTP',
    '29' => 'downloadMPBootTFTP',
    '30' => 'uploadMPMonitor',
    '31' => 'downloadMPMonitor',
    '32' => 'downloadSPBootROM',
    '33' => 'downloadSPMonitor',
  },
  fdryLicenseTrialState => {
    '1' => 'invalid',
    '2' => 'unused',
    '3' => 'active',
    '4' => 'expired',
    '5' => 'duplicated',
  },
  snAgGblCpuUtilCollect => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  brcdSwPackageLoad => {
    '1' => 'none',
    '2' => 'tftpToPrimary',
    '3' => 'tftpToSecondary',
    '4' => 'tftpToMgmtModulePrimaryIntfModuleSecondary',
    '5' => 'tftpToMgmtModuleSecondaryIntfModulePrimary',
  },
  snAgStaticSysLogBufferCriticalLevel => {
    '1' => 'other',
    '2' => 'alert',
    '3' => 'critical',
    '4' => 'debugging',
    '5' => 'emergency',
    '6' => 'error',
    '7' => 'informational',
    '8' => 'notification',
    '9' => 'warning',
  },
  brcdPortLicenseStatus => {
    '1' => 'validLic',
    '2' => 'noLic',
  },
  snAgSysLogGblEnable => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  snChasSystemMode => {
    '1' => 'xmr',
    '2' => 'mlx',
  },
  snChasEnableTempWarnTrap => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  snStackSecSwitchAck => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  snAgentEnableMgmtModRedunStateChangeTrap => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  snAgEraseNVRAM => {
    '1' => 'normal',
    '2' => 'error',
    '3' => 'erase',
    '4' => 'erasing',
    '5' => 'busy',
  },
  snAgSysLogGblPersistenceEnable => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  snAgSysLogBufferCriticalLevel => {
    '1' => 'other',
    '2' => 'alert',
    '3' => 'critical',
    '4' => 'debugging',
    '5' => 'emergency',
    '6' => 'error',
    '7' => 'informational',
    '8' => 'notification',
    '9' => 'warning',
  },
  fdryLicenseMode => {
    '1' => 'nodeLocked',
    '2' => 'nonNodeLocked',
  },
  snAgentConfigModule2Type => {
    '0' => 'bi8PortGigManagementModule',
    '1' => 'bi4PortGigManagementModule',
    '2' => 'bi16PortCopperManagementModule',
    '3' => 'bi4PortGigModule',
    '4' => 'fi2PortGigManagementModule',
    '5' => 'fi4PortGigManagementModule',
    '6' => 'bi8PortGigCopperManagementModule',
    '7' => 'fi8PortGigManagementModule',
    '8' => 'bi8PortGigModule',
    '9' => 'bi12PortGigCopper2PortGigFiberManagement',
    '10' => 'bi24PortCopperModule',
    '11' => 'fi24PortCopperModule',
    '12' => 'bi16Port100FXModule',
    '13' => 'bi8Port100FXModule',
    '14' => 'bi8PortGigCopperModule',
    '15' => 'bi12PortGigCopper2PortGigFiber',
    '18' => 'bi2PortGigManagementModule',
    '19' => 'bi24Port100FXModule',
    '20' => 'bi0PortManagementModule',
    '21' => 'pos622MbsModule',
    '22' => 'pos155MbsModule',
    '23' => 'bi2PortGigModule',
    '24' => 'bi2PortGigCopperModule',
    '25' => 'fi2PortGigModule',
    '26' => 'fi4PortGigModule',
    '27' => 'fi8PortGigModule',
    '28' => 'fi8PortGigCopperModule',
    '29' => 'fi8PortGigCopperManagementModule',
    '30' => 'pos155Mbs2PModule',
    '31' => 'fi4PortGigCopperManagementModule',
    '32' => 'fi2PortGigCopperManagementModule',
    '33' => 'bi4PortGigCopperManagementModule',
    '34' => 'bi2PortGigCopperManagementModule',
    '35' => 'bi8PortGigM4ManagementModule',
    '36' => 'bi4PortGigM4ManagementModule',
    '37' => 'bi2PortGigM4ManagementModule',
    '38' => 'bi0PortGigM4ManagementModule',
    '39' => 'bi0PortWSMManagementModule',
    '40' => 'biPos2Port2488MbsModule',
    '41' => 'bi0PortWSMModule',
    '42' => 'niPos2Port2488MbsModule',
    '43' => 'ni4802',
    '44' => 'bi4PortGigNPAModule',
    '45' => 'biAtm2Port155MbsModule',
    '46' => 'biAtm4Port155MbsModule',
    '47' => 'bi1Port10GigModule',
    '48' => 'fes4802Module',
    '49' => 'fes2402Module',
    '50' => 'fes9604Module',
    '51' => 'fes12GigCopperAndGigFiberModule',
    '52' => 'fesx24GigModule',
    '53' => 'fesx24Gig2TenGigModule',
    '54' => 'fesx24Gig1TenGigModule',
    '55' => 'fesx48GigModule',
    '56' => 'fesx48Gig2TenGigModule',
    '57' => 'fesx48Gig1TenGigModule',
    '64' => 'superx12ComboPortManagementModule',
    '65' => 'superx2PortTenGigModule',
    '66' => 'superx24PortGigCopperModule',
    '67' => 'superx24PortGigFiberModule',
    '68' => 'superx2PortTenGigLanWanModule',
    '69' => 'superx24Port100tx1PortGigFiberModule',
    '74' => 'superx12ComboPortManagement2Module',
    '80' => 'superxR2PortTenGigManagementModule',
    '81' => 'superxRManagementModule',
    '112' => 'fesx24GigFiberGigCopperModule',
    '113' => 'fesx24GigFiber2TenGigModule',
    '114' => 'fesx24GigFiber1TenGigModule',
    '144' => 'fgs24PortManagementModule',
    '145' => 'fgs48PortManagementModule',
    '152' => 'fgsXfp2Port10gModule',
    '153' => 'fgsCx42Port10gModule',
    '154' => 'fgsXfp1Cx41Port10gModule',
    '155' => 'fgsXpf1Port10gModule',
    '160' => 'fls24PortCopperBaseModule',
    '161' => 'fls48PortCopperBaseModule',
    '168' => 'flsXfp1Port10gModule',
    '169' => 'flsCx41Port10gModule',
    '176' => 'fcx624SBaseModule',
    '177' => 'fcx648SBaseModule',
    '180' => 'fcx624SPoeBaseModule',
    '181' => 'fcx648SPoeBaseModule',
    '184' => 'fcxXfp2Port10gModule',
    '185' => 'fcxCx42Port16gModule',
    '192' => 'fcx624SFBaseModule',
    '195' => 'biFiJc48ePort100fxIpcModule',
    '196' => 'biFiJc48tPort100fxIpcModule',
    '197' => 'biFiJc8PortGigM4ManagementModule',
    '198' => 'biFiJc8PortGigIgcModule',
    '200' => 'biFiJc16PortGigIgcModule',
    '201' => 'biJc24PortCopperIpc4GigIgcModule',
    '202' => 'biJc16PortGigCopperIgcModule',
    '206' => 'biFiJc24Port100fxIpcModule',
    '207' => 'bi2Port10GigModule',
    '208' => 'biJc48tPortRJ21OmpModule',
    '209' => 'biJc48ePortRJ45OmpModule',
    '212' => 'biJc24PortIpcRJ45PoeModule',
    '214' => 'biJc2PortGigIgcM4ManagementModule',
    '2016' => 'fdryIcx6430624BaseModule',
    '2017' => 'fdryIcx6430648BaseModule',
    '2020' => 'fdryIcx6430624PoeBaseModule',
    '2021' => 'fdryIcx6430648PoeBaseModule',
    '2024' => 'fdryIcx6430sfp4Port4gModule',
    '2032' => 'fdryIcx6450624BaseModule',
    '2033' => 'fdryIcx6450648BaseModule',
    '2036' => 'fdryIcx6450624PoeBaseModule',
    '2037' => 'fdryIcx6450648PoeBaseModule',
    '2040' => 'fdryIcx6450sfp4Port40gModule',
    '2055' => 'fdryIcx665056BaseModule',
    '2056' => 'fdryIcx6650sfp4Port40gModule',
    '2057' => 'fdryIcx6650sfp8Port10gModule',
    '2132' => 'fdryIcx7750QSFP6port40gModule',
    '2133' => 'fdryIcx77506Q6port40gModule',
    '2134' => 'fdryIcx775026QBaseModule',
    '2135' => 'fdryIcx775048FBaseModule',
    '2136' => 'fdryIcx775048CBaseModule',
    '2137' => 'fdryIcx6430612CBaseModule',
    '2138' => 'fdryIcx6430Copper2Port2gModule',
    '2139' => 'fdryIcx6430sfp2Port2gModule',
    '2140' => 'fdryIcx6450612CPDBaseModule',
    '2141' => 'fdryIcx6450Copper2Port2gModule',
    '2142' => 'fdryIcx6450sfp2Port2gModule',
    '2208' => 'fdryFcx624BaseModule',
    '2209' => 'fdryFcx648BaseModule',
    '2220' => 'fdryFcxSfpPlus4Port10gModule',
    '2224' => 'fdryIcx7450624BaseModule',
    '2225' => 'fdryIcx7450648BaseModule',
    '2227' => 'fdryIcx7450648FBaseModule',
    '2228' => 'fdryIcx7450624PoeBaseModule',
    '2229' => 'fdryIcx7450648PoeBaseModule',
    '2233' => 'fdryIcx7400sfpplus4Port40gModule',
    '2234' => 'fdryIcx7400copper4Port40gModule',
    '2235' => 'fdryIcx7400sfp4Port4gModule',
    '2236' => 'fdryIcx7400qsfpplus1Port40gModule',
    '2240' => 'fdryIcx6610624BaseModule',
    '2241' => 'fdryIcx6610648BaseModule',
    '2244' => 'fdryIcx6610624PoeBaseModule',
    '2245' => 'fdryIcx6610648PoeBaseModule',
    '2246' => 'fdryIcx6610624FBaseModule',
    '2248' => 'fdryIcx6610DualMode8PortModule',
    '2249' => 'fdryIcx6610Qsfp10Port160gModule',
  },
  snAgGblEnableLinkDownTrap => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  snAgSpBootSeqInstruction => {
    '1' => 'fromSpPrimaryFlash',
    '2' => 'fromSpSecondaryFlash',
    '3' => 'fromMpPrimaryFlash',
    '4' => 'fromMpSecondaryFlash',
    '5' => 'fromPcmciaCard1',
    '6' => 'fromPcmciaCard2',
    '7' => 'fromTftpServer',
    '8' => 'interactively',
  },
  snAgWriteNVRAM => {
    '1' => 'normal',
    '2' => 'error',
    '3' => 'write',
    '4' => 'writing',
    '5' => 'busy',
  },
  snAgentRedunBkupCopyBootCode => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  snAgTrpRcvrSecurityModel => {
    '1' => 'v1',
    '2' => 'v2c',
    '3' => 'usm',
  },
  snAgentUserAccntRowStatus => {
    '1' => 'other',
    '2' => 'valid',
    '3' => 'delete',
    '4' => 'create',
    '5' => 'modify',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::FOUNDRYSNSWL4SWITCHGROUPMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB'} = {
  url => '',
  name => 'FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB'} = {
  'snL4Gen' => '1.3.6.1.4.1.1991.1.1.4.1',
  'snL4MaxSessionLimit' => '1.3.6.1.4.1.1991.1.1.4.1.1.0',
  'snL4TcpSynLimit' => '1.3.6.1.4.1.1991.1.1.4.1.2.0',
  'snL4slbGlobalSDAType' => '1.3.6.1.4.1.1991.1.1.4.1.3.0',
  'snL4slbTotalConnections' => '1.3.6.1.4.1.1991.1.1.4.1.4.0',
  'snL4slbLimitExceeds' => '1.3.6.1.4.1.1991.1.1.4.1.5.0',
  'snL4slbForwardTraffic' => '1.3.6.1.4.1.1991.1.1.4.1.6.0',
  'snL4slbReverseTraffic' => '1.3.6.1.4.1.1991.1.1.4.1.7.0',
  'snL4slbDrops' => '1.3.6.1.4.1.1991.1.1.4.1.8.0',
  'snL4slbDangling' => '1.3.6.1.4.1.1991.1.1.4.1.9.0',
  'snL4slbDisableCount' => '1.3.6.1.4.1.1991.1.1.4.1.10.0',
  'snL4slbAged' => '1.3.6.1.4.1.1991.1.1.4.1.11.0',
  'snL4slbFinished' => '1.3.6.1.4.1.1991.1.1.4.1.12.0',
  'snL4FreeSessionCount' => '1.3.6.1.4.1.1991.1.1.4.1.13.0',
  'snL4BackupInterface' => '1.3.6.1.4.1.1991.1.1.4.1.14.0',
  'snL4BackupMacAddr' => '1.3.6.1.4.1.1991.1.1.4.1.15.0',
  'snL4Active' => '1.3.6.1.4.1.1991.1.1.4.1.16.0',
  'snL4Redundancy' => '1.3.6.1.4.1.1991.1.1.4.1.17.0',
  'snL4Backup' => '1.3.6.1.4.1.1991.1.1.4.1.18.0',
  'snL4BecomeActive' => '1.3.6.1.4.1.1991.1.1.4.1.19.0',
  'snL4BecomeStandBy' => '1.3.6.1.4.1.1991.1.1.4.1.20.0',
  'snL4BackupState' => '1.3.6.1.4.1.1991.1.1.4.1.21.0',
  'snL4NoPDUSent' => '1.3.6.1.4.1.1991.1.1.4.1.22.0',
  'snL4NoPDUCount' => '1.3.6.1.4.1.1991.1.1.4.1.23.0',
  'snL4NoPortMap' => '1.3.6.1.4.1.1991.1.1.4.1.24.0',
  'snL4unsuccessfulConn' => '1.3.6.1.4.1.1991.1.1.4.1.25.0',
  'snL4PingInterval' => '1.3.6.1.4.1.1991.1.1.4.1.26.0',
  'snL4PingRetry' => '1.3.6.1.4.1.1991.1.1.4.1.27.0',
  'snL4TcpAge' => '1.3.6.1.4.1.1991.1.1.4.1.28.0',
  'snL4UdpAge' => '1.3.6.1.4.1.1991.1.1.4.1.29.0',
  'snL4EnableMaxSessionLimitReachedTrap' => '1.3.6.1.4.1.1991.1.1.4.1.30.0',
  'snL4EnableTcpSynLimitReachedTrap' => '1.3.6.1.4.1.1991.1.1.4.1.31.0',
  'snL4EnableRealServerUpTrap' => '1.3.6.1.4.1.1991.1.1.4.1.32.0',
  'snL4EnableRealServerDownTrap' => '1.3.6.1.4.1.1991.1.1.4.1.33.0',
  'snL4EnableRealServerPortUpTrap' => '1.3.6.1.4.1.1991.1.1.4.1.34.0',
  'snL4EnableRealServerPortDownTrap' => '1.3.6.1.4.1.1991.1.1.4.1.35.0',
  'snL4EnableRealServerMaxConnLimitReachedTrap' => '1.3.6.1.4.1.1991.1.1.4.1.36.0',
  'snL4EnableBecomeStandbyTrap' => '1.3.6.1.4.1.1991.1.1.4.1.37.0',
  'snL4EnableBecomeActiveTrap' => '1.3.6.1.4.1.1991.1.1.4.1.38.0',
  'snL4slbRouterInterfacePortMask' => '1.3.6.1.4.1.1991.1.1.4.1.39.0',
  'snL4MaxNumWebCacheGroup' => '1.3.6.1.4.1.1991.1.1.4.1.40.0',
  'snL4MaxNumWebCachePerGroup' => '1.3.6.1.4.1.1991.1.1.4.1.41.0',
  'snL4WebCacheStateful' => '1.3.6.1.4.1.1991.1.1.4.1.42.0',
  'snL4EnableGslbHealthCheckIpUpTrap' => '1.3.6.1.4.1.1991.1.1.4.1.43.0',
  'snL4EnableGslbHealthCheckIpDownTrap' => '1.3.6.1.4.1.1991.1.1.4.1.44.0',
  'snL4EnableGslbHealthCheckIpPortUpTrap' => '1.3.6.1.4.1.1991.1.1.4.1.45.0',
  'snL4EnableGslbHealthCheckIpPortDownTrap' => '1.3.6.1.4.1.1991.1.1.4.1.46.0',
  'snL4EnableGslbRemoteGslbSiDownTrap' => '1.3.6.1.4.1.1991.1.1.4.1.47.0',
  'snL4EnableGslbRemoteGslbSiUpTrap' => '1.3.6.1.4.1.1991.1.1.4.1.48.0',
  'snL4EnableGslbRemoteSiDownTrap' => '1.3.6.1.4.1.1991.1.1.4.1.49.0',
  'snL4EnableGslbRemoteSiUpTrap' => '1.3.6.1.4.1.1991.1.1.4.1.50.0',
  'snL4slbRouterInterfacePortList' => '1.3.6.1.4.1.1991.1.1.4.1.51.0',
  'snL4VirtualServer' => '1.3.6.1.4.1.1991.1.1.4.2',
  'snL4VirtualServerTable' => '1.3.6.1.4.1.1991.1.1.4.2.1',
  'snL4VirtualServerEntry' => '1.3.6.1.4.1.1991.1.1.4.2.1.1',
  'snL4VirtualServerIndex' => '1.3.6.1.4.1.1991.1.1.4.2.1.1.1',
  'snL4VirtualServerName' => '1.3.6.1.4.1.1991.1.1.4.2.1.1.2',
  'snL4VirtualServerVirtualIP' => '1.3.6.1.4.1.1991.1.1.4.2.1.1.3',
  'snL4VirtualServerAdminStatus' => '1.3.6.1.4.1.1991.1.1.4.2.1.1.4',
  'snL4VirtualServerAdminStatusDefinition' => 'FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB::L4Status',
  'snL4VirtualServerSDAType' => '1.3.6.1.4.1.1991.1.1.4.2.1.1.5',
  'snL4VirtualServerSDATypeDefinition' => {
    '0' => 'default',
    '1' => 'leastconnection',
    '2' => 'roundrobin',
    '3' => 'weighted',
  },
  'snL4VirtualServerRowStatus' => '1.3.6.1.4.1.1991.1.1.4.2.1.1.6',
  'snL4VirtualServerDeleteState' => '1.3.6.1.4.1.1991.1.1.4.2.1.1.7',
  'snL4VirtualServerDeleteStateDefinition' => 'FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB::L4DeleteState',
  'snL4RealServer' => '1.3.6.1.4.1.1991.1.1.4.3',
  'snL4RealServerTable' => '1.3.6.1.4.1.1991.1.1.4.3.1',
  'snL4RealServerEntry' => '1.3.6.1.4.1.1991.1.1.4.3.1.1',
  'snL4RealServerIndex' => '1.3.6.1.4.1.1991.1.1.4.3.1.1.1',
  'snL4RealServerName' => '1.3.6.1.4.1.1991.1.1.4.3.1.1.2',
  'snL4RealServerIP' => '1.3.6.1.4.1.1991.1.1.4.3.1.1.3',
  'snL4RealServerAdminStatus' => '1.3.6.1.4.1.1991.1.1.4.3.1.1.4',
  'snL4RealServerAdminStatusDefinition' => 'FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB::L4Status',
  'snL4RealServerMaxConnections' => '1.3.6.1.4.1.1991.1.1.4.3.1.1.5',
  'snL4RealServerWeight' => '1.3.6.1.4.1.1991.1.1.4.3.1.1.6',
  'snL4RealServerRowStatus' => '1.3.6.1.4.1.1991.1.1.4.3.1.1.7',
  'snL4RealServerDeleteState' => '1.3.6.1.4.1.1991.1.1.4.3.1.1.8',
  'snL4VirtualServerPort' => '1.3.6.1.4.1.1991.1.1.4.4',
  'snL4VirtualServerPortTable' => '1.3.6.1.4.1.1991.1.1.4.4.1',
  'snL4VirtualServerPortEntry' => '1.3.6.1.4.1.1991.1.1.4.4.1.1',
  'snL4VirtualServerPortIndex' => '1.3.6.1.4.1.1991.1.1.4.4.1.1.1',
  'snL4VirtualServerPortServerName' => '1.3.6.1.4.1.1991.1.1.4.4.1.1.2',
  'snL4VirtualServerPortPort' => '1.3.6.1.4.1.1991.1.1.4.4.1.1.3',
  'snL4VirtualServerPortAdminStatus' => '1.3.6.1.4.1.1991.1.1.4.4.1.1.4',
  'snL4VirtualServerPortAdminStatusDefinition' => 'FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB::L4Status',
  'snL4VirtualServerPortSticky' => '1.3.6.1.4.1.1991.1.1.4.4.1.1.5',
  'snL4VirtualServerPortStickyDefinition' => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  'snL4VirtualServerPortConcurrent' => '1.3.6.1.4.1.1991.1.1.4.4.1.1.6',
  'snL4VirtualServerPortConcurrentDefinition' => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  'snL4VirtualServerPortRowStatus' => '1.3.6.1.4.1.1991.1.1.4.4.1.1.7',
  'snL4VirtualServerPortDeleteState' => '1.3.6.1.4.1.1991.1.1.4.4.1.1.8',
  'snL4RealServerPort' => '1.3.6.1.4.1.1991.1.1.4.5',
  'snL4RealServerPortTable' => '1.3.6.1.4.1.1991.1.1.4.5.1',
  'snL4RealServerPortEntry' => '1.3.6.1.4.1.1991.1.1.4.5.1.1',
  'snL4RealServerPortIndex' => '1.3.6.1.4.1.1991.1.1.4.5.1.1.1',
  'snL4RealServerPortServerName' => '1.3.6.1.4.1.1991.1.1.4.5.1.1.2',
  'snL4RealServerPortPort' => '1.3.6.1.4.1.1991.1.1.4.5.1.1.3',
  'snL4RealServerPortAdminStatus' => '1.3.6.1.4.1.1991.1.1.4.5.1.1.4',
  'snL4RealServerPortRowStatus' => '1.3.6.1.4.1.1991.1.1.4.5.1.1.5',
  'snL4RealServerPortDeleteState' => '1.3.6.1.4.1.1991.1.1.4.5.1.1.6',
  'snL4Bind' => '1.3.6.1.4.1.1991.1.1.4.6',
  'snL4BindTable' => '1.3.6.1.4.1.1991.1.1.4.6.1',
  'snL4BindEntry' => '1.3.6.1.4.1.1991.1.1.4.6.1.1',
  'snL4BindIndex' => '1.3.6.1.4.1.1991.1.1.4.6.1.1.1',
  'snL4BindVirtualServerName' => '1.3.6.1.4.1.1991.1.1.4.6.1.1.2',
  'snL4BindVirtualPortNumber' => '1.3.6.1.4.1.1991.1.1.4.6.1.1.3',
  'snL4BindRealServerName' => '1.3.6.1.4.1.1991.1.1.4.6.1.1.4',
  'snL4BindRealPortNumber' => '1.3.6.1.4.1.1991.1.1.4.6.1.1.5',
  'snL4BindRowStatus' => '1.3.6.1.4.1.1991.1.1.4.6.1.1.6',
  'snL4VirtualServerStatus' => '1.3.6.1.4.1.1991.1.1.4.7',
  'snL4VirtualServerStatusTable' => '1.3.6.1.4.1.1991.1.1.4.7.1',
  'snL4VirtualServerStatusEntry' => '1.3.6.1.4.1.1991.1.1.4.7.1.1',
  'snL4VirtualServerStatusIndex' => '1.3.6.1.4.1.1991.1.1.4.7.1.1.1',
  'snL4VirtualServerStatusName' => '1.3.6.1.4.1.1991.1.1.4.7.1.1.2',
  'snL4VirtualServerStatusReceivePkts' => '1.3.6.1.4.1.1991.1.1.4.7.1.1.3',
  'snL4VirtualServerStatusTransmitPkts' => '1.3.6.1.4.1.1991.1.1.4.7.1.1.4',
  'snL4VirtualServerStatusTotalConnections' => '1.3.6.1.4.1.1991.1.1.4.7.1.1.5',
  'snL4RealServerStatus' => '1.3.6.1.4.1.1991.1.1.4.8',
  'snL4RealServerStatusTable' => '1.3.6.1.4.1.1991.1.1.4.8.1',
  'snL4RealServerStatusEntry' => '1.3.6.1.4.1.1991.1.1.4.8.1.1',
  'snL4RealServerStatusIndex' => '1.3.6.1.4.1.1991.1.1.4.8.1.1.1',
  'snL4RealServerStatusName' => '1.3.6.1.4.1.1991.1.1.4.8.1.1.2',
  'snL4RealServerStatusRealIP' => '1.3.6.1.4.1.1991.1.1.4.8.1.1.3',
  'snL4RealServerStatusReceivePkts' => '1.3.6.1.4.1.1991.1.1.4.8.1.1.4',
  'snL4RealServerStatusTransmitPkts' => '1.3.6.1.4.1.1991.1.1.4.8.1.1.5',
  'snL4RealServerStatusCurConnections' => '1.3.6.1.4.1.1991.1.1.4.8.1.1.6',
  'snL4RealServerStatusTotalConnections' => '1.3.6.1.4.1.1991.1.1.4.8.1.1.7',
  'snL4RealServerStatusAge' => '1.3.6.1.4.1.1991.1.1.4.8.1.1.8',
  'snL4RealServerStatusState' => '1.3.6.1.4.1.1991.1.1.4.8.1.1.9',
  'snL4RealServerStatusStateDefinition' => {
    '0' => 'serverdisabled',
    '1' => 'serverenabled',
    '2' => 'serverfailed',
    '3' => 'servertesting',
    '4' => 'serversuspect',
    '5' => 'servershutdown',
    '6' => 'serveractive',
  },
  'snL4RealServerStatusReassignments' => '1.3.6.1.4.1.1991.1.1.4.8.1.1.10',
  'snL4RealServerStatusReassignmentLimit' => '1.3.6.1.4.1.1991.1.1.4.8.1.1.11',
  'snL4RealServerStatusFailedPortExists' => '1.3.6.1.4.1.1991.1.1.4.8.1.1.12',
  'snL4RealServerStatusFailTime' => '1.3.6.1.4.1.1991.1.1.4.8.1.1.13',
  'snL4RealServerStatusPeakConnections' => '1.3.6.1.4.1.1991.1.1.4.8.1.1.14',
  'snL4VirtualServerPortStatus' => '1.3.6.1.4.1.1991.1.1.4.9',
  'snL4VirtualServerPortStatusTable' => '1.3.6.1.4.1.1991.1.1.4.9.1',
  'snL4VirtualServerPortStatusEntry' => '1.3.6.1.4.1.1991.1.1.4.9.1.1',
  'snL4VirtualServerPortStatusIndex' => '1.3.6.1.4.1.1991.1.1.4.9.1.1.1',
  'snL4VirtualServerPortStatusPort' => '1.3.6.1.4.1.1991.1.1.4.9.1.1.2',
  'snL4VirtualServerPortStatusServerName' => '1.3.6.1.4.1.1991.1.1.4.9.1.1.3',
  'snL4VirtualServerPortStatusCurrentConnection' => '1.3.6.1.4.1.1991.1.1.4.9.1.1.4',
  'snL4VirtualServerPortStatusTotalConnection' => '1.3.6.1.4.1.1991.1.1.4.9.1.1.5',
  'snL4VirtualServerPortStatusPeakConnection' => '1.3.6.1.4.1.1991.1.1.4.9.1.1.6',
  'snL4RealServerPortStatus' => '1.3.6.1.4.1.1991.1.1.4.10',
  'snL4RealServerPortStatusTable' => '1.3.6.1.4.1.1991.1.1.4.10.1',
  'snL4RealServerPortStatusEntry' => '1.3.6.1.4.1.1991.1.1.4.10.1.1',
  'snL4RealServerPortStatusIndex' => '1.3.6.1.4.1.1991.1.1.4.10.1.1.1',
  'snL4RealServerPortStatusPort' => '1.3.6.1.4.1.1991.1.1.4.10.1.1.2',
  'snL4RealServerPortStatusServerName' => '1.3.6.1.4.1.1991.1.1.4.10.1.1.3',
  'snL4RealServerPortStatusReassignCount' => '1.3.6.1.4.1.1991.1.1.4.10.1.1.4',
  'snL4RealServerPortStatusState' => '1.3.6.1.4.1.1991.1.1.4.10.1.1.5',
  'snL4RealServerPortStatusStateDefinition' => {
    '0' => 'disabled',
    '1' => 'enabled',
    '2' => 'failed',
    '3' => 'testing',
    '4' => 'suspect',
    '5' => 'shutdown',
    '6' => 'active',
    '7' => 'unbound',
    '8' => 'awaitUnbind',
    '9' => 'awaitDelete',
  },
  'snL4RealServerPortStatusFailTime' => '1.3.6.1.4.1.1991.1.1.4.10.1.1.6',
  'snL4RealServerPortStatusCurrentConnection' => '1.3.6.1.4.1.1991.1.1.4.10.1.1.7',
  'snL4RealServerPortStatusTotalConnection' => '1.3.6.1.4.1.1991.1.1.4.10.1.1.8',
  'snL4RealServerPortStatusRxPkts' => '1.3.6.1.4.1.1991.1.1.4.10.1.1.9',
  'snL4RealServerPortStatusTxPkts' => '1.3.6.1.4.1.1991.1.1.4.10.1.1.10',
  'snL4RealServerPortStatusRxBytes' => '1.3.6.1.4.1.1991.1.1.4.10.1.1.11',
  'snL4RealServerPortStatusTxBytes' => '1.3.6.1.4.1.1991.1.1.4.10.1.1.12',
  'snL4RealServerPortStatusPeakConnection' => '1.3.6.1.4.1.1991.1.1.4.10.1.1.13',
  'snL4Policy' => '1.3.6.1.4.1.1991.1.1.4.11',
  'snL4PolicyTable' => '1.3.6.1.4.1.1991.1.1.4.11.1',
  'snL4PolicyEntry' => '1.3.6.1.4.1.1991.1.1.4.11.1.1',
  'snL4PolicyId' => '1.3.6.1.4.1.1991.1.1.4.11.1.1.1',
  'snL4PolicyPriority' => '1.3.6.1.4.1.1991.1.1.4.11.1.1.2',
  'snL4PolicyScope' => '1.3.6.1.4.1.1991.1.1.4.11.1.1.3',
  'snL4PolicyProtocol' => '1.3.6.1.4.1.1991.1.1.4.11.1.1.4',
  'snL4PolicyPort' => '1.3.6.1.4.1.1991.1.1.4.11.1.1.5',
  'snL4PolicyRowStatus' => '1.3.6.1.4.1.1991.1.1.4.11.1.1.6',
  'snL4PolicyPortAccess' => '1.3.6.1.4.1.1991.1.1.4.12',
  'snL4PolicyPortAccessTable' => '1.3.6.1.4.1.1991.1.1.4.12.1',
  'snL4PolicyPortAccessEntry' => '1.3.6.1.4.1.1991.1.1.4.12.1.1',
  'snL4PolicyPortAccessPort' => '1.3.6.1.4.1.1991.1.1.4.12.1.1.1',
  'snL4PolicyPortAccessList' => '1.3.6.1.4.1.1991.1.1.4.12.1.1.2',
  'snL4PolicyPortAccessRowStatus' => '1.3.6.1.4.1.1991.1.1.4.12.1.1.3',
  'snL4Trap' => '1.3.6.1.4.1.1991.1.1.4.13',
  'snL4TrapRealServerIP' => '1.3.6.1.4.1.1991.1.1.4.13.1.0',
  'snL4TrapRealServerName' => '1.3.6.1.4.1.1991.1.1.4.13.2.0',
  'snL4TrapRealServerPort' => '1.3.6.1.4.1.1991.1.1.4.13.3.0',
  'snL4TrapRealServerCurConnections' => '1.3.6.1.4.1.1991.1.1.4.13.4.0',
  'snL4WebCache' => '1.3.6.1.4.1.1991.1.1.4.14',
  'snL4WebCacheTable' => '1.3.6.1.4.1.1991.1.1.4.14.1',
  'snL4WebCacheEntry' => '1.3.6.1.4.1.1991.1.1.4.14.1.1',
  'snL4WebCacheIP' => '1.3.6.1.4.1.1991.1.1.4.14.1.1.1',
  'snL4WebCacheName' => '1.3.6.1.4.1.1991.1.1.4.14.1.1.2',
  'snL4WebCacheAdminStatus' => '1.3.6.1.4.1.1991.1.1.4.14.1.1.3',
  'snL4WebCacheMaxConnections' => '1.3.6.1.4.1.1991.1.1.4.14.1.1.4',
  'snL4WebCacheWeight' => '1.3.6.1.4.1.1991.1.1.4.14.1.1.5',
  'snL4WebCacheRowStatus' => '1.3.6.1.4.1.1991.1.1.4.14.1.1.6',
  'snL4WebCacheDeleteState' => '1.3.6.1.4.1.1991.1.1.4.14.1.1.7',
  'snL4WebCacheGroup' => '1.3.6.1.4.1.1991.1.1.4.15',
  'snL4WebCacheGroupTable' => '1.3.6.1.4.1.1991.1.1.4.15.1',
  'snL4WebCacheGroupEntry' => '1.3.6.1.4.1.1991.1.1.4.15.1.1',
  'snL4WebCacheGroupId' => '1.3.6.1.4.1.1991.1.1.4.15.1.1.1',
  'snL4WebCacheGroupName' => '1.3.6.1.4.1.1991.1.1.4.15.1.1.2',
  'snL4WebCacheGroupWebCacheIpList' => '1.3.6.1.4.1.1991.1.1.4.15.1.1.3',
  'snL4WebCacheGroupDestMask' => '1.3.6.1.4.1.1991.1.1.4.15.1.1.4',
  'snL4WebCacheGroupSrcMask' => '1.3.6.1.4.1.1991.1.1.4.15.1.1.5',
  'snL4WebCacheGroupAdminStatus' => '1.3.6.1.4.1.1991.1.1.4.15.1.1.6',
  'snL4WebCacheGroupRowStatus' => '1.3.6.1.4.1.1991.1.1.4.15.1.1.7',
  'snL4WebCacheTrafficStats' => '1.3.6.1.4.1.1991.1.1.4.16',
  'snL4WebCacheTrafficStatsTable' => '1.3.6.1.4.1.1991.1.1.4.16.1',
  'snL4WebCacheTrafficStatsEntry' => '1.3.6.1.4.1.1991.1.1.4.16.1.1',
  'snL4WebCacheTrafficIp' => '1.3.6.1.4.1.1991.1.1.4.16.1.1.1',
  'snL4WebCacheTrafficPort' => '1.3.6.1.4.1.1991.1.1.4.16.1.1.2',
  'snL4WebCacheCurrConnections' => '1.3.6.1.4.1.1991.1.1.4.16.1.1.3',
  'snL4WebCacheTotalConnections' => '1.3.6.1.4.1.1991.1.1.4.16.1.1.4',
  'snL4WebCacheTxPkts' => '1.3.6.1.4.1.1991.1.1.4.16.1.1.5',
  'snL4WebCacheRxPkts' => '1.3.6.1.4.1.1991.1.1.4.16.1.1.6',
  'snL4WebCacheTxOctets' => '1.3.6.1.4.1.1991.1.1.4.16.1.1.7',
  'snL4WebCacheRxOctets' => '1.3.6.1.4.1.1991.1.1.4.16.1.1.8',
  'snL4WebCachePortState' => '1.3.6.1.4.1.1991.1.1.4.16.1.1.9',
  'snL4WebUncachedTrafficStats' => '1.3.6.1.4.1.1991.1.1.4.17',
  'snL4WebUncachedTrafficStatsTable' => '1.3.6.1.4.1.1991.1.1.4.17.1',
  'snL4WebUncachedTrafficStatsEntry' => '1.3.6.1.4.1.1991.1.1.4.17.1.1',
  'snL4WebServerPort' => '1.3.6.1.4.1.1991.1.1.4.17.1.1.1',
  'snL4WebClientPort' => '1.3.6.1.4.1.1991.1.1.4.17.1.1.2',
  'snL4WebUncachedTxPkts' => '1.3.6.1.4.1.1991.1.1.4.17.1.1.3',
  'snL4WebUncachedRxPkts' => '1.3.6.1.4.1.1991.1.1.4.17.1.1.4',
  'snL4WebUncachedTxOctets' => '1.3.6.1.4.1.1991.1.1.4.17.1.1.5',
  'snL4WebUncachedRxOctets' => '1.3.6.1.4.1.1991.1.1.4.17.1.1.6',
  'snL4WebServerPortName' => '1.3.6.1.4.1.1991.1.1.4.17.1.1.7',
  'snL4WebClientPortName' => '1.3.6.1.4.1.1991.1.1.4.17.1.1.8',
  'snL4WebCachePort' => '1.3.6.1.4.1.1991.1.1.4.18',
  'snL4WebCachePortTable' => '1.3.6.1.4.1.1991.1.1.4.18.1',
  'snL4WebCachePortEntry' => '1.3.6.1.4.1.1991.1.1.4.18.1.1',
  'snL4WebCachePortServerIp' => '1.3.6.1.4.1.1991.1.1.4.18.1.1.1',
  'snL4WebCachePortPort' => '1.3.6.1.4.1.1991.1.1.4.18.1.1.2',
  'snL4WebCachePortAdminStatus' => '1.3.6.1.4.1.1991.1.1.4.18.1.1.3',
  'snL4WebCachePortRowStatus' => '1.3.6.1.4.1.1991.1.1.4.18.1.1.4',
  'snL4WebCachePortDeleteState' => '1.3.6.1.4.1.1991.1.1.4.18.1.1.5',
  'snL4RealServerCfg' => '1.3.6.1.4.1.1991.1.1.4.19',
  'snL4RealServerCfgTable' => '1.3.6.1.4.1.1991.1.1.4.19.1',
  'snL4RealServerCfgEntry' => '1.3.6.1.4.1.1991.1.1.4.19.1.1',
  'snL4RealServerCfgIP' => '1.3.6.1.4.1.1991.1.1.4.19.1.1.1',
  'snL4RealServerCfgName' => '1.3.6.1.4.1.1991.1.1.4.19.1.1.2',
  'snL4RealServerCfgAdminStatus' => '1.3.6.1.4.1.1991.1.1.4.19.1.1.3',
  'snL4RealServerCfgMaxConnections' => '1.3.6.1.4.1.1991.1.1.4.19.1.1.4',
  'snL4RealServerCfgWeight' => '1.3.6.1.4.1.1991.1.1.4.19.1.1.5',
  'snL4RealServerCfgRowStatus' => '1.3.6.1.4.1.1991.1.1.4.19.1.1.6',
  'snL4RealServerCfgDeleteState' => '1.3.6.1.4.1.1991.1.1.4.19.1.1.7',
  'snL4RealServerPortCfg' => '1.3.6.1.4.1.1991.1.1.4.20',
  'snL4RealServerPortCfgTable' => '1.3.6.1.4.1.1991.1.1.4.20.1',
  'snL4RealServerPortCfgEntry' => '1.3.6.1.4.1.1991.1.1.4.20.1.1',
  'snL4RealServerPortCfgIP' => '1.3.6.1.4.1.1991.1.1.4.20.1.1.1',
  'snL4RealServerPortCfgServerName' => '1.3.6.1.4.1.1991.1.1.4.20.1.1.2',
  'snL4RealServerPortCfgPort' => '1.3.6.1.4.1.1991.1.1.4.20.1.1.3',
  'snL4RealServerPortCfgAdminStatus' => '1.3.6.1.4.1.1991.1.1.4.20.1.1.4',
  'snL4RealServerPortCfgRowStatus' => '1.3.6.1.4.1.1991.1.1.4.20.1.1.5',
  'snL4RealServerPortCfgDeleteState' => '1.3.6.1.4.1.1991.1.1.4.20.1.1.6',
  'snL4VirtualServerCfg' => '1.3.6.1.4.1.1991.1.1.4.21',
  'snL4VirtualServerCfgTable' => '1.3.6.1.4.1.1991.1.1.4.21.1',
  'snL4VirtualServerCfgEntry' => '1.3.6.1.4.1.1991.1.1.4.21.1.1',
  'snL4VirtualServerCfgVirtualIP' => '1.3.6.1.4.1.1991.1.1.4.21.1.1.1',
  'snL4VirtualServerCfgName' => '1.3.6.1.4.1.1991.1.1.4.21.1.1.2',
  'snL4VirtualServerCfgAdminStatus' => '1.3.6.1.4.1.1991.1.1.4.21.1.1.3',
  'snL4VirtualServerCfgSDAType' => '1.3.6.1.4.1.1991.1.1.4.21.1.1.4',
  'snL4VirtualServerCfgRowStatus' => '1.3.6.1.4.1.1991.1.1.4.21.1.1.5',
  'snL4VirtualServerCfgDeleteState' => '1.3.6.1.4.1.1991.1.1.4.21.1.1.6',
  'snL4VirtualServerPortCfg' => '1.3.6.1.4.1.1991.1.1.4.22',
  'snL4VirtualServerPortCfgTable' => '1.3.6.1.4.1.1991.1.1.4.22.1',
  'snL4VirtualServerPortCfgEntry' => '1.3.6.1.4.1.1991.1.1.4.22.1.1',
  'snL4VirtualServerPortCfgIP' => '1.3.6.1.4.1.1991.1.1.4.22.1.1.1',
  'snL4VirtualServerPortCfgPort' => '1.3.6.1.4.1.1991.1.1.4.22.1.1.2',
  'snL4VirtualServerPortCfgServerName' => '1.3.6.1.4.1.1991.1.1.4.22.1.1.3',
  'snL4VirtualServerPortCfgAdminStatus' => '1.3.6.1.4.1.1991.1.1.4.22.1.1.4',
  'snL4VirtualServerPortCfgSticky' => '1.3.6.1.4.1.1991.1.1.4.22.1.1.5',
  'snL4VirtualServerPortCfgConcurrent' => '1.3.6.1.4.1.1991.1.1.4.22.1.1.6',
  'snL4VirtualServerPortCfgRowStatus' => '1.3.6.1.4.1.1991.1.1.4.22.1.1.7',
  'snL4VirtualServerPortCfgDeleteState' => '1.3.6.1.4.1.1991.1.1.4.22.1.1.8',
  'snL4RealServerStatistic' => '1.3.6.1.4.1.1991.1.1.4.23',
  'snL4RealServerStatisticTable' => '1.3.6.1.4.1.1991.1.1.4.23.1',
  'snL4RealServerStatisticEntry' => '1.3.6.1.4.1.1991.1.1.4.23.1.1',
  'snL4RealServerStatisticRealIP' => '1.3.6.1.4.1.1991.1.1.4.23.1.1.1',
  'snL4RealServerStatisticName' => '1.3.6.1.4.1.1991.1.1.4.23.1.1.2',
  'snL4RealServerStatisticReceivePkts' => '1.3.6.1.4.1.1991.1.1.4.23.1.1.3',
  'snL4RealServerStatisticTransmitPkts' => '1.3.6.1.4.1.1991.1.1.4.23.1.1.4',
  'snL4RealServerStatisticCurConnections' => '1.3.6.1.4.1.1991.1.1.4.23.1.1.5',
  'snL4RealServerStatisticTotalConnections' => '1.3.6.1.4.1.1991.1.1.4.23.1.1.6',
  'snL4RealServerStatisticAge' => '1.3.6.1.4.1.1991.1.1.4.23.1.1.7',
  'snL4RealServerStatisticState' => '1.3.6.1.4.1.1991.1.1.4.23.1.1.8',
  'snL4RealServerStatisticStateDefinition' => {
    '0' => 'serverdisabled',
    '1' => 'serverenabled',
    '2' => 'serverfailed',
    '3' => 'servertesting',
    '4' => 'serversuspect',
    '5' => 'servershutdown',
    '6' => 'serveractive',
  },
  'snL4RealServerStatisticReassignments' => '1.3.6.1.4.1.1991.1.1.4.23.1.1.9',
  'snL4RealServerStatisticReassignmentLimit' => '1.3.6.1.4.1.1991.1.1.4.23.1.1.10',
  'snL4RealServerStatisticFailedPortExists' => '1.3.6.1.4.1.1991.1.1.4.23.1.1.11',
  'snL4RealServerStatisticFailTime' => '1.3.6.1.4.1.1991.1.1.4.23.1.1.12',
  'snL4RealServerStatisticPeakConnections' => '1.3.6.1.4.1.1991.1.1.4.23.1.1.13',
  'snL4RealServerPortStatistic' => '1.3.6.1.4.1.1991.1.1.4.24',
  'snL4RealServerPortStatisticTable' => '1.3.6.1.4.1.1991.1.1.4.24.1',
  'snL4RealServerPortStatisticEntry' => '1.3.6.1.4.1.1991.1.1.4.24.1.1',
  'snL4RealServerPortStatisticIP' => '1.3.6.1.4.1.1991.1.1.4.24.1.1.1',
  'snL4RealServerPortStatisticPort' => '1.3.6.1.4.1.1991.1.1.4.24.1.1.2',
  'snL4RealServerPortStatisticServerName' => '1.3.6.1.4.1.1991.1.1.4.24.1.1.3',
  'snL4RealServerPortStatisticReassignCount' => '1.3.6.1.4.1.1991.1.1.4.24.1.1.4',
  'snL4RealServerPortStatisticState' => '1.3.6.1.4.1.1991.1.1.4.24.1.1.5',
  'snL4RealServerPortStatisticStateDefinition' => {
    '0' => 'disabled',
    '1' => 'enabled',
    '2' => 'failed',
    '3' => 'testing',
    '4' => 'suspect',
    '5' => 'shutdown',
    '6' => 'active',
    '7' => 'unbound',
    '8' => 'awaitUnbind',
    '9' => 'awaitDelete',
  },
  'snL4RealServerPortStatisticFailTime' => '1.3.6.1.4.1.1991.1.1.4.24.1.1.6',
  'snL4RealServerPortStatisticCurrentConnection' => '1.3.6.1.4.1.1991.1.1.4.24.1.1.7',
  'snL4RealServerPortStatisticTotalConnection' => '1.3.6.1.4.1.1991.1.1.4.24.1.1.8',
  'snL4RealServerPortStatisticRxPkts' => '1.3.6.1.4.1.1991.1.1.4.24.1.1.9',
  'snL4RealServerPortStatisticTxPkts' => '1.3.6.1.4.1.1991.1.1.4.24.1.1.10',
  'snL4RealServerPortStatisticRxBytes' => '1.3.6.1.4.1.1991.1.1.4.24.1.1.11',
  'snL4RealServerPortStatisticTxBytes' => '1.3.6.1.4.1.1991.1.1.4.24.1.1.12',
  'snL4RealServerPortStatisticPeakConnection' => '1.3.6.1.4.1.1991.1.1.4.24.1.1.13',
  'snL4VirtualServerStatistic' => '1.3.6.1.4.1.1991.1.1.4.25',
  'snL4VirtualServerStatisticTable' => '1.3.6.1.4.1.1991.1.1.4.25.1',
  'snL4VirtualServerStatisticEntry' => '1.3.6.1.4.1.1991.1.1.4.25.1.1',
  'snL4VirtualServerStatisticIP' => '1.3.6.1.4.1.1991.1.1.4.25.1.1.1',
  'snL4VirtualServerStatisticName' => '1.3.6.1.4.1.1991.1.1.4.25.1.1.2',
  'snL4VirtualServerStatisticReceivePkts' => '1.3.6.1.4.1.1991.1.1.4.25.1.1.3',
  'snL4VirtualServerStatisticTransmitPkts' => '1.3.6.1.4.1.1991.1.1.4.25.1.1.4',
  'snL4VirtualServerStatisticTotalConnections' => '1.3.6.1.4.1.1991.1.1.4.25.1.1.5',
  'snL4VirtualServerStatisticReceiveBytes' => '1.3.6.1.4.1.1991.1.1.4.25.1.1.6',
  'snL4VirtualServerStatisticTransmitBytes' => '1.3.6.1.4.1.1991.1.1.4.25.1.1.7',
  'snL4VirtualServerStatisticSymmetricState' => '1.3.6.1.4.1.1991.1.1.4.25.1.1.8',
  'snL4VirtualServerStatisticSymmetricPriority' => '1.3.6.1.4.1.1991.1.1.4.25.1.1.9',
  'snL4VirtualServerStatisticSymmetricKeep' => '1.3.6.1.4.1.1991.1.1.4.25.1.1.10',
  'snL4VirtualServerStatisticSymmetricActivates' => '1.3.6.1.4.1.1991.1.1.4.25.1.1.11',
  'snL4VirtualServerStatisticSymmetricInactives' => '1.3.6.1.4.1.1991.1.1.4.25.1.1.12',
  'snL4VirtualServerStatisticSymmetricBestStandbyMacAddr' => '1.3.6.1.4.1.1991.1.1.4.25.1.1.13',
  'snL4VirtualServerStatisticSymmetricActiveMacAddr' => '1.3.6.1.4.1.1991.1.1.4.25.1.1.14',
  'snL4VirtualServerPortStatistic' => '1.3.6.1.4.1.1991.1.1.4.26',
  'snL4VirtualServerPortStatisticTable' => '1.3.6.1.4.1.1991.1.1.4.26.1',
  'snL4VirtualServerPortStatisticEntry' => '1.3.6.1.4.1.1991.1.1.4.26.1.1',
  'snL4VirtualServerPortStatisticIP' => '1.3.6.1.4.1.1991.1.1.4.26.1.1.1',
  'snL4VirtualServerPortStatisticPort' => '1.3.6.1.4.1.1991.1.1.4.26.1.1.2',
  'snL4VirtualServerPortStatisticServerName' => '1.3.6.1.4.1.1991.1.1.4.26.1.1.3',
  'snL4VirtualServerPortStatisticCurrentConnection' => '1.3.6.1.4.1.1991.1.1.4.26.1.1.4',
  'snL4VirtualServerPortStatisticTotalConnection' => '1.3.6.1.4.1.1991.1.1.4.26.1.1.5',
  'snL4VirtualServerPortStatisticPeakConnection' => '1.3.6.1.4.1.1991.1.1.4.26.1.1.6',
  'snL4GslbSiteRemoteServerIrons' => '1.3.6.1.4.1.1991.1.1.4.27',
  'snL4GslbSiteRemoteServerIronTable' => '1.3.6.1.4.1.1991.1.1.4.27.1',
  'snL4GslbSiteRemoteServerIronEntry' => '1.3.6.1.4.1.1991.1.1.4.27.1.1',
  'snL4GslbSiteRemoteServerIronIP' => '1.3.6.1.4.1.1991.1.1.4.27.1.1.1',
  'snL4GslbSiteRemoteServerIronPreference' => '1.3.6.1.4.1.1991.1.1.4.27.1.1.2',
  'snL4History' => '1.3.6.1.4.1.1991.1.1.4.28',
  'snL4RealServerHistoryControlTable' => '1.3.6.1.4.1.1991.1.1.4.28.1',
  'snL4RealServerHistoryControlEntry' => '1.3.6.1.4.1.1991.1.1.4.28.1.1',
  'snL4RealServerHistoryControlIndex' => '1.3.6.1.4.1.1991.1.1.4.28.1.1.1',
  'snL4RealServerHistoryControlDataSource' => '1.3.6.1.4.1.1991.1.1.4.28.1.1.2',
  'snL4RealServerHistoryControlBucketsRequested' => '1.3.6.1.4.1.1991.1.1.4.28.1.1.3',
  'snL4RealServerHistoryControlBucketsGranted' => '1.3.6.1.4.1.1991.1.1.4.28.1.1.4',
  'snL4RealServerHistoryControlInterval' => '1.3.6.1.4.1.1991.1.1.4.28.1.1.5',
  'snL4RealServerHistoryControlOwner' => '1.3.6.1.4.1.1991.1.1.4.28.1.1.6',
  'snL4RealServerHistoryControlStatus' => '1.3.6.1.4.1.1991.1.1.4.28.1.1.7',
  'snL4RealServerHistoryTable' => '1.3.6.1.4.1.1991.1.1.4.28.2',
  'snL4RealServerHistoryEntry' => '1.3.6.1.4.1.1991.1.1.4.28.2.1',
  'snL4RealServerHistoryIndex' => '1.3.6.1.4.1.1991.1.1.4.28.2.1.1',
  'snL4RealServerHistorySampleIndex' => '1.3.6.1.4.1.1991.1.1.4.28.2.1.2',
  'snL4RealServerHistoryIntervalStart' => '1.3.6.1.4.1.1991.1.1.4.28.2.1.3',
  'snL4RealServerHistoryReceivePkts' => '1.3.6.1.4.1.1991.1.1.4.28.2.1.4',
  'snL4RealServerHistoryTransmitPkts' => '1.3.6.1.4.1.1991.1.1.4.28.2.1.5',
  'snL4RealServerHistoryTotalConnections' => '1.3.6.1.4.1.1991.1.1.4.28.2.1.6',
  'snL4RealServerHistoryCurConnections' => '1.3.6.1.4.1.1991.1.1.4.28.2.1.7',
  'snL4RealServerHistoryPeakConnections' => '1.3.6.1.4.1.1991.1.1.4.28.2.1.8',
  'snL4RealServerHistoryReassignments' => '1.3.6.1.4.1.1991.1.1.4.28.2.1.9',
  'snL4RealServerPortHistoryControlTable' => '1.3.6.1.4.1.1991.1.1.4.28.3',
  'snL4RealServerPortHistoryControlEntry' => '1.3.6.1.4.1.1991.1.1.4.28.3.1',
  'snL4RealServerPortHistoryControlIndex' => '1.3.6.1.4.1.1991.1.1.4.28.3.1.1',
  'snL4RealServerPortHistoryControlDataSource' => '1.3.6.1.4.1.1991.1.1.4.28.3.1.2',
  'snL4RealServerPortHistoryControlBucketsRequested' => '1.3.6.1.4.1.1991.1.1.4.28.3.1.3',
  'snL4RealServerPortHistoryControlBucketsGranted' => '1.3.6.1.4.1.1991.1.1.4.28.3.1.4',
  'snL4RealServerPortHistoryControlInterval' => '1.3.6.1.4.1.1991.1.1.4.28.3.1.5',
  'snL4RealServerPortHistoryControlOwner' => '1.3.6.1.4.1.1991.1.1.4.28.3.1.6',
  'snL4RealServerPortHistoryControlStatus' => '1.3.6.1.4.1.1991.1.1.4.28.3.1.7',
  'snL4RealServerPortHistoryTable' => '1.3.6.1.4.1.1991.1.1.4.28.4',
  'snL4RealServerPortHistoryEntry' => '1.3.6.1.4.1.1991.1.1.4.28.4.1',
  'snL4RealServerPortHistoryIndex' => '1.3.6.1.4.1.1991.1.1.4.28.4.1.1',
  'snL4RealServerPortHistorySampleIndex' => '1.3.6.1.4.1.1991.1.1.4.28.4.1.2',
  'snL4RealServerPortHistoryIntervalStart' => '1.3.6.1.4.1.1991.1.1.4.28.4.1.3',
  'snL4RealServerPortHistoryReceivePkts' => '1.3.6.1.4.1.1991.1.1.4.28.4.1.4',
  'snL4RealServerPortHistoryTransmitPkts' => '1.3.6.1.4.1.1991.1.1.4.28.4.1.5',
  'snL4RealServerPortHistoryTotalConnections' => '1.3.6.1.4.1.1991.1.1.4.28.4.1.6',
  'snL4RealServerPortHistoryCurConnections' => '1.3.6.1.4.1.1991.1.1.4.28.4.1.7',
  'snL4RealServerPortHistoryPeakConnections' => '1.3.6.1.4.1.1991.1.1.4.28.4.1.8',
  'snL4RealServerPortHistoryResponseTime' => '1.3.6.1.4.1.1991.1.1.4.28.4.1.9',
  'snL4VirtualServerHistoryControlTable' => '1.3.6.1.4.1.1991.1.1.4.28.5',
  'snL4VirtualServerHistoryControlEntry' => '1.3.6.1.4.1.1991.1.1.4.28.5.1',
  'snL4VirtualServerHistoryControlIndex' => '1.3.6.1.4.1.1991.1.1.4.28.5.1.1',
  'snL4VirtualServerHistoryControlDataSource' => '1.3.6.1.4.1.1991.1.1.4.28.5.1.2',
  'snL4VirtualServerHistoryControlBucketsRequested' => '1.3.6.1.4.1.1991.1.1.4.28.5.1.3',
  'snL4VirtualServerHistoryControlBucketsGranted' => '1.3.6.1.4.1.1991.1.1.4.28.5.1.4',
  'snL4VirtualServerHistoryControlInterval' => '1.3.6.1.4.1.1991.1.1.4.28.5.1.5',
  'snL4VirtualServerHistoryControlOwner' => '1.3.6.1.4.1.1991.1.1.4.28.5.1.6',
  'snL4VirtualServerHistoryControlStatus' => '1.3.6.1.4.1.1991.1.1.4.28.5.1.7',
  'snL4VirtualServerHistoryTable' => '1.3.6.1.4.1.1991.1.1.4.28.6',
  'snL4VirtualServerHistoryEntry' => '1.3.6.1.4.1.1991.1.1.4.28.6.1',
  'snL4VirtualServerHistoryIndex' => '1.3.6.1.4.1.1991.1.1.4.28.6.1.1',
  'snL4VirtualServerHistorySampleIndex' => '1.3.6.1.4.1.1991.1.1.4.28.6.1.2',
  'snL4VirtualServerHistoryIntervalStart' => '1.3.6.1.4.1.1991.1.1.4.28.6.1.3',
  'snL4VirtualServerHistoryReceivePkts' => '1.3.6.1.4.1.1991.1.1.4.28.6.1.4',
  'snL4VirtualServerHistoryTransmitPkts' => '1.3.6.1.4.1.1991.1.1.4.28.6.1.5',
  'snL4VirtualServerHistoryTotalConnections' => '1.3.6.1.4.1.1991.1.1.4.28.6.1.6',
  'snL4VirtualServerHistoryCurConnections' => '1.3.6.1.4.1.1991.1.1.4.28.6.1.7',
  'snL4VirtualServerHistoryPeakConnections' => '1.3.6.1.4.1.1991.1.1.4.28.6.1.8',
  'snL4VirtualServerPortHistoryControlTable' => '1.3.6.1.4.1.1991.1.1.4.28.7',
  'snL4VirtualServerPortHistoryControlEntry' => '1.3.6.1.4.1.1991.1.1.4.28.7.1',
  'snL4VirtualServerPortHistoryControlIndex' => '1.3.6.1.4.1.1991.1.1.4.28.7.1.1',
  'snL4VirtualServerPortHistoryControlDataSource' => '1.3.6.1.4.1.1991.1.1.4.28.7.1.2',
  'snL4VirtualServerPortHistoryControlBucketsRequested' => '1.3.6.1.4.1.1991.1.1.4.28.7.1.3',
  'snL4VirtualServerPortHistoryControlBucketsGranted' => '1.3.6.1.4.1.1991.1.1.4.28.7.1.4',
  'snL4VirtualServerPortHistoryControlInterval' => '1.3.6.1.4.1.1991.1.1.4.28.7.1.5',
  'snL4VirtualServerPortHistoryControlOwner' => '1.3.6.1.4.1.1991.1.1.4.28.7.1.6',
  'snL4VirtualServerPortHistoryControlStatus' => '1.3.6.1.4.1.1991.1.1.4.28.7.1.7',
  'snL4VirtualServerPortHistoryTable' => '1.3.6.1.4.1.1991.1.1.4.28.8',
  'snL4VirtualServerPortHistoryEntry' => '1.3.6.1.4.1.1991.1.1.4.28.8.1',
  'snL4VirtualServerPortHistoryIndex' => '1.3.6.1.4.1.1991.1.1.4.28.8.1.1',
  'snL4VirtualServerPortHistorySampleIndex' => '1.3.6.1.4.1.1991.1.1.4.28.8.1.2',
  'snL4VirtualServerPortHistoryIntervalStart' => '1.3.6.1.4.1.1991.1.1.4.28.8.1.3',
  'snL4VirtualServerPortHistoryReceivePkts' => '1.3.6.1.4.1.1991.1.1.4.28.8.1.4',
  'snL4VirtualServerPortHistoryTransmitPkts' => '1.3.6.1.4.1.1991.1.1.4.28.8.1.5',
  'snL4VirtualServerPortHistoryTotalConnections' => '1.3.6.1.4.1.1991.1.1.4.28.8.1.6',
  'snL4VirtualServerPortHistoryCurConnections' => '1.3.6.1.4.1.1991.1.1.4.28.8.1.7',
  'snL4VirtualServerPortHistoryPeakConnections' => '1.3.6.1.4.1.1991.1.1.4.28.8.1.8',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB'} = {
  'L4RowSts' => {
    '1' => 'other',
    '2' => 'valid',
    '3' => 'delete',
    '4' => 'create',
    '5' => 'modify',
  },
  'L4Status' => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  'L4DeleteState' => {
    '0' => 'done',
    '1' => 'waitdelete',
  },
};



package Monitoring::GLPlugin::SNMP::MibsAndOids::GENUAMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'GENUA-MIB'} = {
  url => '',
  name => 'GENUA-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'GENUA-MIB'} =
  '1.3.6.1.4.1.3717';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'GENUA-MIB'} = {
  # genua.os.sensor.system
  fanTable => '1.3.6.1.4.1.3717.2.1.1.1',
  fanEntry => '1.3.6.1.4.1.3717.2.1.1.1.1',
  fanIndex => '1.3.6.1.4.1.3717.2.1.1.1.1.1',
  fanName => '1.3.6.1.4.1.3717.2.1.1.1.1.2',
  fanRPMs => '1.3.6.1.4.1.3717.2.1.1.1.1.3',
  fanState => '1.3.6.1.4.1.3717.2.1.1.1.1.4',
  fanStateDefinition => 'GENUA-MIB::State',
  raidTable => '1.3.6.1.4.1.3717.2.1.1.2',
  raidEntry => '1.3.6.1.4.1.3717.2.1.1.2.1',
  raidIndex => '1.3.6.1.4.1.3717.2.1.1.2.1.1',
  raidName => '1.3.6.1.4.1.3717.2.1.1.2.1.2',
  raidStatus => '1.3.6.1.4.1.3717.2.1.1.2.1.3',
  raidStatusDefinition => 'GENUA-MIB::State',
  filesMax => '1.3.6.1.4.1.3717.2.1.1.3.1',
  filesUsed => '1.3.6.1.4.1.3717.2.1.1.3.2',
  filesStatus => '1.3.6.1.4.1.3717.2.1.1.3.3',
  filesStatusDefinition => 'GENUA-MIB::State',
  swapMax => '1.3.6.1.4.1.3717.2.1.1.4.1',
  swapUsed => '1.3.6.1.4.1.3717.2.1.1.4.2',
  swapStatus => '1.3.6.1.4.1.3717.2.1.1.4.3',
  swapStatusDefinition => 'GENUA-MIB::State',
  diskpartitionTable => '1.3.6.1.4.1.3717.2.1.1.5',
  diskpartitionEntry => '1.3.6.1.4.1.3717.2.1.1.5.1',
  diskpartitionIndex => '1.3.6.1.4.1.3717.2.1.1.5.1.1',
  diskpartitionName => '1.3.6.1.4.1.3717.2.1.1.5.1.2',
  diskpartitionSpace => '1.3.6.1.4.1.3717.2.1.1.5.1.3',
  diskpartitionSpaceMax => '1.3.6.1.4.1.3717.2.1.1.5.1.3.1',
  diskpartitionSpaceUsed => '1.3.6.1.4.1.3717.2.1.1.5.1.3.2',
  diskpartitionSpaceStatus => '1.3.6.1.4.1.3717.2.1.1.5.1.3.3',
  diskpartitionInodes => '1.3.6.1.4.1.3717.2.1.1.5.1.4',
  diskpartitionInodesMax => '1.3.6.1.4.1.3717.2.1.1.5.1.4.1',
  diskpartitionInodesUsed => '1.3.6.1.4.1.3717.2.1.1.5.1.4.2',
  diskpartitionInodesStatus => '1.3.6.1.4.1.3717.2.1.1.5.1.4.3',
  pfstateMax => '1.3.6.1.4.1.3717.2.1.1.6.1',
  pfstateUsed => '1.3.6.1.4.1.3717.2.1.1.6.2',
  pfstateStatus => '1.3.6.1.4.1.3717.2.1.1.6.3',
  pfstateStatusDefinition => 'GENUA-MIB::State',
  # genua.os.sensor.system.smartcard
  smartcardStatus => '1.3.6.1.4.1.3717.2.1.1.7.1',
  smartcardStatusDefinition => 'GENUA-MIB::State',
  # genua.os.sensor.system.vpnsum
  vpnsumExpected => '1.3.6.1.4.1.3717.2.1.1.8.1',
  vpnsumUp => '1.3.6.1.4.1.3717.2.1.1.8.2',
  # genua.os.sensor.interfaceTable
  interfaceTable => '1.3.6.1.4.1.3717.2.1.2',
  interfaceEntry => '1.3.6.1.4.1.3717.2.1.2.1',
  interfaceIndex => '1.3.6.1.4.1.3717.2.1.2.1.1',
  interfaceName => '1.3.6.1.4.1.3717.2.1.2.1.2',
  interfaceType => '1.3.6.1.4.1.3717.2.1.2.1.3',
  interfaceTypeDefinition => 'GENUA-MIB::Iftype',
  interfaceLinkstate => '1.3.6.1.4.1.3717.2.1.2.1.4',
  interfaceLinkstateDefinition => 'GENUA-MIB::Ifstate',
  interfaceIerrorsNumber => '1.3.6.1.4.1.3717.2.1.2.1.5.1',
  interfaceIerrorsStatus => '1.3.6.1.4.1.3717.2.1.2.1.5.2',
  interfaceIerrorsStatusDefinition => 'GENUA-MIB::State',
  interfaceOerrorsNumber => '1.3.6.1.4.1.3717.2.1.2.1.6.1',
  interfaceOerrorsStatus => '1.3.6.1.4.1.3717.2.1.2.1.6.2',
  interfaceOerrorsStatusDefinition => 'GENUA-MIB::State',
  interfaceCarpstatus => '1.3.6.1.4.1.3717.2.1.2.1.7',
  interfaceCarpstatusDefinition => 'GENUA-MIB::Carpstatus',
  # genua.os.sensor.vpnTable
  vpnTable => '1.3.6.1.4.1.3717.2.1.3',
  vpnEntry => '1.3.6.1.4.1.3717.2.1.3.1',
  vpnIndex => '1.3.6.1.4.1.3717.2.1.3.1.1',
  vpnPeer => '1.3.6.1.4.1.3717.2.1.3.1.2',
  vpnPeerip => '1.3.6.1.4.1.3717.2.1.3.1.3',
  vpnLocal => '1.3.6.1.4.1.3717.2.1.3.1.4',
  vpnRemote => '1.3.6.1.4.1.3717.2.1.3.1.5',
  vpnStatus => '1.3.6.1.4.1.3717.2.1.3.1.6',
  vpnStatusDefinition => 'GENUA-MIB::Ifstate',
  # genua.os.sensor.pingTable
  pingTable => '1.3.6.1.4.1.3717.2.1.4',
  pingEntry => '1.3.6.1.4.1.3717.2.1.4.1',
  pingIndex => '1.3.6.1.4.1.3717.2.1.4.1.1',
  pingName => '1.3.6.1.4.1.3717.2.1.4.1.2',
  pingIp => '1.3.6.1.4.1.3717.2.1.4.1.3',
  pingStatus => '1.3.6.1.4.1.3717.2.1.4.1.4',
  pingStatusDefinition => 'GENUA-MIB::Reachabilitystatus',
  # genua.os.misc
  miscSeverity => '1.3.6.1.4.1.3717.2.2.1',
  miscId => '1.3.6.1.4.1.3717.2.2.2',
  miscMessage => '1.3.6.1.4.1.3717.2.2.2',
  # genua.os.info
  infoProduct => '1.3.6.1.4.1.3717.2.3.1',
  infoSoftwareversion => '1.3.6.1.4.1.3717.2.3.2',
  infoRelease => '1.3.6.1.4.1.3717.2.3.3',
  infoPatchlevel => '1.3.6.1.4.1.3717.2.3.4',
  infoHardwareversion => '1.3.6.1.4.1.3717.2.3.5',
  infoSerialnumber => '1.3.6.1.4.1.3717.2.3.6',
  infoLicense => '1.3.6.1.4.1.3717.2.3.7',
  infoOperating => '1.3.6.1.4.1.3717.2.3.8',
  # genua.products
  genugate => '1.3.6.1.4.1.3717.4.1',
  genubox => '1.3.6.1.4.1.3717.4.2',
  genulink => '1.3.6.1.4.1.3717.4.3',
  genuscreen => '1.3.6.1.4.1.3717.4.4',
  genucrypt => '1.3.6.1.4.1.3717.4.5',
  genucenter => '1.3.6.1.4.1.3717.4.6',
  genucard => '1.3.6.1.4.1.3717.4.7',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'GENUA-MIB'} = {
  # textual conventions
  State => {
      '0' => 'notok',
      '1' => 'ok',
      '2' => 'unknown',
  },
  Ifstate => {
      '0' => 'unknown',
      '1' => 'down',
      '2' => 'up',
  },
  Reachabilitystatus => {
      '0' => 'unrechable',
      '1' => 'reachable',
  },
  Iftype => {
      '1' => 'phys',
      '2' => 'gif',
      '3' => 'pppoe',
      '4' => 'vlan',
      '6' => 'carp',
      '7' => 'unknown',
      '8' => 'trunk',
      '9' => 'modem',
      '10' => 'gre',
      '11' => 'mpls',
  },
  Carpstatus => {
      '0' => 'init',
      '1' => 'backup',
      '2' => 'master',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::HH3CENTITYEXTMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'HH3C-ENTITY-EXT-MIB'} = {
  url => '',
  name => 'HH3C-ENTITY-EXT-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'HH3C-ENTITY-EXT-MIB'} = {
  'hh3cEntityExtStateTable' => '1.3.6.1.4.1.25506.2.6.1.1.1',
  'hh3cEntityExtStateEntry' => '1.3.6.1.4.1.25506.2.6.1.1.1.1',
  'hh3cEntityExtCpuUsage' => '1.3.6.1.4.1.25506.2.6.1.1.1.1.6',
  'hh3cEntityExtTemperature' => '1.3.6.1.4.1.25506.2.6.1.1.1.1.12',
  'hh3cEntityExtErrorStatus' => '1.3.6.1.4.1.25506.2.6.1.1.1.1.19',
  'hh3cEntityExtErrorStatusDefinition' => 'HH3C-ENTITY-EXT-MIB::hh3cEntityExtErrorStatusValue',
  'hh3cEntityExtCpuAvgUsage' => '1.3.6.1.4.1.25506.2.6.1.1.1.1.26',
  'hh3cEntityExtMemAvgUsage' => '1.3.6.1.4.1.25506.2.6.1.1.1.1.27',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'HH3C-ENTITY-EXT-MIB'} = {
  'hh3cEntityExtErrorStatusValue' => {
    '1' => 'notSupported',
    '2' => 'normal',
    '3' => 'postFailure',
    '4' => 'entityAbsent',
    '11' => 'poeError',
    '21' => 'stackError',
    '22' => 'stackPortBlocked',
    '23' => 'stackPortFailed',
    '31' => 'sfpRecvError',
    '32' => 'sfpSendError',
    '33' => 'sfpBothError',
    '41' => 'fanError',
    '51' => 'psuError',
    '61' => 'rpsError',
    '71' => 'moduleFaulty',
    '81' => 'sensorError',
    '91' => 'hardwareFaulty',
  },
};



package Monitoring::GLPlugin::SNMP::MibsAndOids::HUAWEIENTITYEXTENTMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'HUAWEI-ENTITY-EXTENT-MIB'} = {
  url => '',
  name => 'HUAWEI-ENTITY-EXTENT-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'HUAWEI-ENTITY-EXTENT-MIB'} = {
    hwEntityExtentMIB => '1.3.6.1.4.1.2011.5.25.31',
    hwEntityExtObjects => '1.3.6.1.4.1.2011.5.25.31.1',
    hwEntityState => '1.3.6.1.4.1.2011.5.25.31.1.1',
    hwEntityStateTable => '1.3.6.1.4.1.2011.5.25.31.1.1.1',
    hwEntityStateEntry => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1',
    hwEntityAdminStatus => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.1',
    hwEntityAdminStatusDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::HwAdminState',
    hwEntityOperStatus => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.2',
    hwEntityOperStatusDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::HwOperState',
    hwEntityStandbyStatus => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.3',
    hwEntityStandbyStatusDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::HwStandbyStatus',
    hwEntityAlarmLight => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.4',
    hwEntityCpuUsage => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.5',
    hwEntityCpuUsageThreshold => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.6',
    hwEntityMemUsage => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.7',
    hwEntityMemUsageThreshold => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.8',
    hwEntityMemSize => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.9',
    hwEntityUpTime => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.10',
    hwEntityTemperature => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.11',
    hwEntityTemperatureThreshold => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.12',
    hwEntityVoltage => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.13',
    hwEntityVoltageLowThreshold => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.14',
    hwEntityVoltageHighThreshold => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.15',
    hwEntityTemperatureLowThreshold => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.16',
    hwEntityOpticalPower => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.17',
    hwEntityCurrent => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.18',
    hwEntityMemSizeMega => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.19',
    hwEntityPortType => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.20',
    hwEntityPortTypeDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwEntityPortType',
    hwEntityDuplex => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.21',
    hwEntityDuplexDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwEntityDuplex',
    hwEntityOpticalPowerRx => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.22',
    hwEntityCpuUsageLowThreshold => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.23',
    hwEntityBoardPower => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.24',
    hwEntityCpuFrequency => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.25',
    hwEntitySupportFlexCard => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.26',
    hwEntitySupportFlexCardDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwEntitySupportFlexCard',
    hwEntityBoardClass => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.27',
    hwEntityBoardClassDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwEntityBoardClass',
    hwNseOpmStatus => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.28',
    hwEntityCpuMaxUsage => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.29',
    hwEntityCPUType => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.30',
    hwEntityMemoryType => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.31',
    hwEntityFlashSize => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.32',
    hwEntityIfUpTimes => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.33',
    hwEntityIfDownTimes => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.34',
    hwEntityCPUAvgUsage => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.35',
    hwEntityMemoryAvgUsage => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.36',
    hwEntityMemUsed => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.37',
    hwEntityTotalFanNum => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.38',
    hwEntityNomalFanNum => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.39',
    hwEntityTotalPwrNum => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.40',
    hwEntityNomalPwrNum => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.41',
    hwEntityFaultLight => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.42',
    hwEntityFaultLightDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwEntityFaultLight',
    hwEntityBoardName => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.43',
    hwEntityBoardDescription => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.44',
    hwEntity5MinCpuUsage => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.45',
    hwEntityStartMode => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.46',
    hwEntityStartModeDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwEntityStartMode',
    hwEntitySplitAttribute => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.47',
    hwEntityFaultLightKeepTime => '1.3.6.1.4.1.2011.5.25.31.1.1.1.1.48',
    hwRUModuleInfoTable => '1.3.6.1.4.1.2011.5.25.31.1.1.2',
    hwRUModuleInfoEntry => '1.3.6.1.4.1.2011.5.25.31.1.1.2.1',
    hwEntityBomId => '1.3.6.1.4.1.2011.5.25.31.1.1.2.1.1',
    hwEntityBomEnDesc => '1.3.6.1.4.1.2011.5.25.31.1.1.2.1.2',
    hwEntityBomLocalDesc => '1.3.6.1.4.1.2011.5.25.31.1.1.2.1.3',
    hwEntityManufacturedDate => '1.3.6.1.4.1.2011.5.25.31.1.1.2.1.4',
    hwEntityManufactureCode => '1.3.6.1.4.1.2011.5.25.31.1.1.2.1.5',
    hwEntityCLEICode => '1.3.6.1.4.1.2011.5.25.31.1.1.2.1.6',
    hwEntityUpdateLog => '1.3.6.1.4.1.2011.5.25.31.1.1.2.1.7',
    hwEntityArchivesInfoVersion => '1.3.6.1.4.1.2011.5.25.31.1.1.2.1.8',
    hwEntityOpenBomId => '1.3.6.1.4.1.2011.5.25.31.1.1.2.1.9',
    hwEntityIssueNum => '1.3.6.1.4.1.2011.5.25.31.1.1.2.1.10',
    hwEntityBoardType => '1.3.6.1.4.1.2011.5.25.31.1.1.2.1.11',
    hwOpticalModuleInfoTable => '1.3.6.1.4.1.2011.5.25.31.1.1.3',
    hwOpticalModuleInfoEntry => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1',
    hwEntityOpticalMode => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.1',
    hwEntityOpticalModeDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwEntityOpticalMode',
    hwEntityOpticalWaveLength => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.2',
    hwEntityOpticalTransDistance => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.3',
    hwEntityOpticalVendorSn => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.4',
    hwEntityOpticalTemperature => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.5',
    hwEntityOpticalVoltage => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.6',
    hwEntityOpticalBiasCurrent => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.7',
    hwEntityOpticalRxPower => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.8',
    hwEntityOpticalTxPower => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.9',
    hwEntityOpticalType => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.10',
    hwEntityOpticalTypeDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwEntityOpticalType',
    hwEntityOpticalTransBW => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.11',
    hwEntityOpticalFiberType => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.12',
    hwEntityOpticalFiberTypeDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwEntityOpticalFiberType',
    hwEntityOpticalRxLowThreshold => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.13',
    hwEntityOpticalRxHighThreshold => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.14',
    hwEntityOpticalTxLowThreshold => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.15',
    hwEntityOpticalTxHighThreshold => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.16',
    hwEntityOpticalPlug => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.17',
    hwEntityOpticalPlugDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwEntityOpticalPlug',
    hwEntityOpticalDirectionType => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.18',
    hwEntityOpticalDirectionTypeDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwEntityOpticalDirectionType',
    hwEntityOpticalUserEeprom => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.19',
    hwEntityOpticalRxLowWarnThreshold => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.20',
    hwEntityOpticalRxHighWarnThreshold => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.21',
    hwEntityOpticalTxLowWarnThreshold => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.22',
    hwEntityOpticalTxHighWarnThreshold => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.23',
    hwEntityOpticalVenderName => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.24',
    hwEntityOpticalVenderPn => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.25',
    hwEntityOpticalAuthenticationStatus => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.26',
    hwEntityOpticalAuthenticationStatusDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwEntityOpticalAuthenticationStatus',
    hwEntityOpticalTunableType => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.27',
    hwEntityOpticalTunableTypeDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwEntityOpticalTunableType',
    hwEntityOpticalWaveLengthDecimal => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.28',
    hwEntityOpticalTunableModuleChannel => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.29',
    hwEntityOpticalWaveBand => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.30',
    hwEntityOpticalWaveBandDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwEntityOpticalWaveBand',
    hwEntityOpticalLaneBiasCurrent => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.31',
    hwEntityOpticalLaneRxPower => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.32',
    hwEntityOpticalLaneTxPower => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.33',
    hwEntityOpticalVendorOUI => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.34',
    hwEntityOpticalVendorRev => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.35',
    hwEntityOpticalGponSN => '1.3.6.1.4.1.2011.5.25.31.1.1.3.1.36',
    hwMonitorInputTable => '1.3.6.1.4.1.2011.5.25.31.1.1.4',
    hwMonitorInputEntry => '1.3.6.1.4.1.2011.5.25.31.1.1.4.1',
    hwMonitorInputIndex => '1.3.6.1.4.1.2011.5.25.31.1.1.4.1.1',
    hwMonitorInputName => '1.3.6.1.4.1.2011.5.25.31.1.1.4.1.2',
    hwMonitorInputState => '1.3.6.1.4.1.2011.5.25.31.1.1.4.1.3',
    hwMonitorInputStateEnable => '1.3.6.1.4.1.2011.5.25.31.1.1.4.1.4',
    hwMonitorInputRowStatus => '1.3.6.1.4.1.2011.5.25.31.1.1.4.1.5',
    hwMonitorOutputTable => '1.3.6.1.4.1.2011.5.25.31.1.1.5',
    hwMonitorOutputEntry => '1.3.6.1.4.1.2011.5.25.31.1.1.5.1',
    hwMonitorOutputIndex => '1.3.6.1.4.1.2011.5.25.31.1.1.5.1.1',
    hwMonitorOutputRuleIndex => '1.3.6.1.4.1.2011.5.25.31.1.1.5.1.2',
    hwMonitorOutputMask => '1.3.6.1.4.1.2011.5.25.31.1.1.5.1.3',
    hwMonitorOutputKey => '1.3.6.1.4.1.2011.5.25.31.1.1.5.1.4',
    hwMonitorOutputRowStatus => '1.3.6.1.4.1.2011.5.25.31.1.1.5.1.5',
    hwEntPowerUsedInfoTable => '1.3.6.1.4.1.2011.5.25.31.1.1.6',
    hwEntPowerUsedInfoEntry => '1.3.6.1.4.1.2011.5.25.31.1.1.6.1',
    hwEntPowerUsedInfoBoardName => '1.3.6.1.4.1.2011.5.25.31.1.1.6.1.1',
    hwEntPowerUsedInfoBoardType => '1.3.6.1.4.1.2011.5.25.31.1.1.6.1.2',
    hwEntPowerUsedInfoBoardSlot => '1.3.6.1.4.1.2011.5.25.31.1.1.6.1.3',
    hwEntPowerUsedInfoPower => '1.3.6.1.4.1.2011.5.25.31.1.1.6.1.4',
    hwVirtualCableTestTable => '1.3.6.1.4.1.2011.5.25.31.1.1.7',
    hwVirtualCableTestEntry => '1.3.6.1.4.1.2011.5.25.31.1.1.7.1',
    hwVirtualCableTestIfIndex => '1.3.6.1.4.1.2011.5.25.31.1.1.7.1.1',
    hwVirtualCableTestPairStatus => '1.3.6.1.4.1.2011.5.25.31.1.1.7.1.2',
    hwVirtualCableTestPairStatusDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwVirtualCableTestPairStatus',
    hwVirtualCableTestPairLength => '1.3.6.1.4.1.2011.5.25.31.1.1.7.1.3',
    hwVirtualCableTestOperation => '1.3.6.1.4.1.2011.5.25.31.1.1.7.1.4',
    hwVirtualCableTestOperationDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwVirtualCableTestOperation',
    hwVirtualCableTestLastTime => '1.3.6.1.4.1.2011.5.25.31.1.1.7.1.5',
    hwVirtualCableTestPairAStatus => '1.3.6.1.4.1.2011.5.25.31.1.1.7.1.6',
    hwVirtualCableTestPairAStatusDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwVirtualCableTestPairAStatus',
    hwVirtualCableTestPairBStatus => '1.3.6.1.4.1.2011.5.25.31.1.1.7.1.7',
    hwVirtualCableTestPairBStatusDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwVirtualCableTestPairBStatus',
    hwVirtualCableTestPairCStatus => '1.3.6.1.4.1.2011.5.25.31.1.1.7.1.8',
    hwVirtualCableTestPairCStatusDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwVirtualCableTestPairCStatus',
    hwVirtualCableTestPairDStatus => '1.3.6.1.4.1.2011.5.25.31.1.1.7.1.9',
    hwVirtualCableTestPairDStatusDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwVirtualCableTestPairDStatus',
    hwVirtualCableTestPairALength => '1.3.6.1.4.1.2011.5.25.31.1.1.7.1.10',
    hwVirtualCableTestPairBLength => '1.3.6.1.4.1.2011.5.25.31.1.1.7.1.11',
    hwVirtualCableTestPairCLength => '1.3.6.1.4.1.2011.5.25.31.1.1.7.1.12',
    hwVirtualCableTestPairDLength => '1.3.6.1.4.1.2011.5.25.31.1.1.7.1.13',
    hwTemperatureThresholdTable => '1.3.6.1.4.1.2011.5.25.31.1.1.8',
    hwTemperatureThresholdEntry => '1.3.6.1.4.1.2011.5.25.31.1.1.8.1',
    hwEntityTempSlotId => '1.3.6.1.4.1.2011.5.25.31.1.1.8.1.1',
    hwEntityTempI2CId => '1.3.6.1.4.1.2011.5.25.31.1.1.8.1.2',
    hwEntityTempAddr => '1.3.6.1.4.1.2011.5.25.31.1.1.8.1.3',
    hwEntityTempChannel => '1.3.6.1.4.1.2011.5.25.31.1.1.8.1.4',
    hwEntityTempStatus => '1.3.6.1.4.1.2011.5.25.31.1.1.8.1.5',
    hwEntityTempStatusDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwEntityTempStatus',
    hwEntityTempValue => '1.3.6.1.4.1.2011.5.25.31.1.1.8.1.6',
    hwEntityTempMinorAlmThreshold => '1.3.6.1.4.1.2011.5.25.31.1.1.8.1.7',
    hwEntityTempMajorAlmThreshold => '1.3.6.1.4.1.2011.5.25.31.1.1.8.1.8',
    hwEntityTempFatalAlmThreshold => '1.3.6.1.4.1.2011.5.25.31.1.1.8.1.9',
    hwVoltageInfoTable => '1.3.6.1.4.1.2011.5.25.31.1.1.9',
    hwVoltageInfoEntry => '1.3.6.1.4.1.2011.5.25.31.1.1.9.1',
    hwEntityVolSlot => '1.3.6.1.4.1.2011.5.25.31.1.1.9.1.1',
    hwEntityVolI2CId => '1.3.6.1.4.1.2011.5.25.31.1.1.9.1.2',
    hwEntityVolAddr => '1.3.6.1.4.1.2011.5.25.31.1.1.9.1.3',
    hwEntityVolChannel => '1.3.6.1.4.1.2011.5.25.31.1.1.9.1.4',
    hwEntityVolStatus => '1.3.6.1.4.1.2011.5.25.31.1.1.9.1.5',
    hwEntityVolStatusDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwEntityVolStatus',
    hwEntityVolRequired => '1.3.6.1.4.1.2011.5.25.31.1.1.9.1.6',
    hwEntityVolCurValue => '1.3.6.1.4.1.2011.5.25.31.1.1.9.1.7',
    hwEntityVolRatio => '1.3.6.1.4.1.2011.5.25.31.1.1.9.1.8',
    hwEntityVolLowAlmMajor => '1.3.6.1.4.1.2011.5.25.31.1.1.9.1.9',
    hwEntityVolLowAlmFatal => '1.3.6.1.4.1.2011.5.25.31.1.1.9.1.10',
    hwEntityVolHighAlmMajor => '1.3.6.1.4.1.2011.5.25.31.1.1.9.1.11',
    hwEntityVolHighAlmFatal => '1.3.6.1.4.1.2011.5.25.31.1.1.9.1.12',
    hwFanStatusTable => '1.3.6.1.4.1.2011.5.25.31.1.1.10',
    hwFanStatusEntry => '1.3.6.1.4.1.2011.5.25.31.1.1.10.1',
    hwEntityFanSlot => '1.3.6.1.4.1.2011.5.25.31.1.1.10.1.1',
    hwEntityFanSn => '1.3.6.1.4.1.2011.5.25.31.1.1.10.1.2',
    hwEntityFanReg => '1.3.6.1.4.1.2011.5.25.31.1.1.10.1.3',
    hwEntityFanRegDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwEntityFanReg',
    hwEntityFanSpdAdjMode => '1.3.6.1.4.1.2011.5.25.31.1.1.10.1.4',
    hwEntityFanSpdAdjModeDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwEntityFanSpdAdjMode',
    hwEntityFanSpeed => '1.3.6.1.4.1.2011.5.25.31.1.1.10.1.5',
    hwEntityFanPresent => '1.3.6.1.4.1.2011.5.25.31.1.1.10.1.6',
    hwEntityFanPresentDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwEntityFanPresent',
    hwEntityFanState => '1.3.6.1.4.1.2011.5.25.31.1.1.10.1.7',
    hwEntityFanStateDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwEntityFanState',
    hwEntityFanDesc => '1.3.6.1.4.1.2011.5.25.31.1.1.10.1.8',
    hwEntityGlobalPara => '1.3.6.1.4.1.2011.5.25.31.1.1.11',
    hwEntityServiceType => '1.3.6.1.4.1.2011.5.25.31.1.1.11.1',
    hwEntityServiceTypeDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwEntityServiceType',
    hwDeviceServiceType => '1.3.6.1.4.1.2011.5.25.31.1.1.11.2',
    hwEntityManufacturerOUI => '1.3.6.1.4.1.2011.5.25.31.1.1.11.3',
    hwPortBip8StatisticsTable => '1.3.6.1.4.1.2011.5.25.31.1.1.12',
    hwPortBip8StatisticsEntry => '1.3.6.1.4.1.2011.5.25.31.1.1.12.1',
    hwPhysicalPortBip8StatisticsEB => '1.3.6.1.4.1.2011.5.25.31.1.1.12.1.1',
    hwPhysicalPortBip8StatisticsES => '1.3.6.1.4.1.2011.5.25.31.1.1.12.1.2',
    hwPhysicalPortBip8StatisticsSES => '1.3.6.1.4.1.2011.5.25.31.1.1.12.1.3',
    hwPhysicalPortBip8StatisticsUAS => '1.3.6.1.4.1.2011.5.25.31.1.1.12.1.4',
    hwPhysicalPortBip8StatisticsBBE => '1.3.6.1.4.1.2011.5.25.31.1.1.12.1.5',
    hwPhysicalPortSpeed => '1.3.6.1.4.1.2011.5.25.31.1.1.12.1.6',
    hwStorageEntTable => '1.3.6.1.4.1.2011.5.25.31.1.1.13',
    hwStorageEntEntry => '1.3.6.1.4.1.2011.5.25.31.1.1.13.1',
    hwStorageEntIndex => '1.3.6.1.4.1.2011.5.25.31.1.1.13.1.1',
    hwStorageEntType => '1.3.6.1.4.1.2011.5.25.31.1.1.13.1.2',
    hwStorageEntSpace => '1.3.6.1.4.1.2011.5.25.31.1.1.13.1.3',
    hwStorageEntSpaceFree => '1.3.6.1.4.1.2011.5.25.31.1.1.13.1.4',
    hwStorageEntName => '1.3.6.1.4.1.2011.5.25.31.1.1.13.1.5',
    hwStorageEntDescr => '1.3.6.1.4.1.2011.5.25.31.1.1.13.1.6',
    hwSystemPowerTable => '1.3.6.1.4.1.2011.5.25.31.1.1.14',
    hwSystemPowerEntry => '1.3.6.1.4.1.2011.5.25.31.1.1.14.1',
    hwSystemPowerDeviceID => '1.3.6.1.4.1.2011.5.25.31.1.1.14.1.1',
    hwSystemPowerTotalPower => '1.3.6.1.4.1.2011.5.25.31.1.1.14.1.2',
    hwSystemPowerUsedPower => '1.3.6.1.4.1.2011.5.25.31.1.1.14.1.3',
    hwSystemPowerRemainPower => '1.3.6.1.4.1.2011.5.25.31.1.1.14.1.4',
    hwSystemPowerReservedPower => '1.3.6.1.4.1.2011.5.25.31.1.1.14.1.5',
    hwBatteryInfoTable => '1.3.6.1.4.1.2011.5.25.31.1.1.15',
    hwBatteryInfoEntry => '1.3.6.1.4.1.2011.5.25.31.1.1.15.1',
    hwBatteryState => '1.3.6.1.4.1.2011.5.25.31.1.1.15.1.1',
    hwBatteryStateDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwBatteryState',
    hwBatteryTemperatureLow => '1.3.6.1.4.1.2011.5.25.31.1.1.15.1.2',
    hwBatteryTemperatureHigh => '1.3.6.1.4.1.2011.5.25.31.1.1.15.1.3',
    hwBatteryRemainPercent => '1.3.6.1.4.1.2011.5.25.31.1.1.15.1.4',
    hwBatteryRemainTime => '1.3.6.1.4.1.2011.5.25.31.1.1.15.1.5',
    hwBatteryElecTimes => '1.3.6.1.4.1.2011.5.25.31.1.1.15.1.6',
    hwBatteryLifeThreshold => '1.3.6.1.4.1.2011.5.25.31.1.1.15.1.7',
    hwGPSLocationInfo => '1.3.6.1.4.1.2011.5.25.31.1.1.16',
    hwGPSLongitude => '1.3.6.1.4.1.2011.5.25.31.1.1.16.1',
    hwGPSLatitude => '1.3.6.1.4.1.2011.5.25.31.1.1.16.2',
    hwGPSVelocity => '1.3.6.1.4.1.2011.5.25.31.1.1.16.3',
    hwAdmPortTable => '1.3.6.1.4.1.2011.5.25.31.1.1.17',
    hwAdmPortEntry => '1.3.6.1.4.1.2011.5.25.31.1.1.17.1',
    hwAdmPortDescription => '1.3.6.1.4.1.2011.5.25.31.1.1.17.1.1',
    hwPwrStatusTable => '1.3.6.1.4.1.2011.5.25.31.1.1.18',
    hwPwrStatusEntry => '1.3.6.1.4.1.2011.5.25.31.1.1.18.1',
    hwEntityPwrSlot => '1.3.6.1.4.1.2011.5.25.31.1.1.18.1.1',
    hwEntityPwrSn => '1.3.6.1.4.1.2011.5.25.31.1.1.18.1.2',
    hwEntityPwrReg => '1.3.6.1.4.1.2011.5.25.31.1.1.18.1.3',
    hwEntityPwrRegDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwEntityPwrReg',
    hwEntityPwrMode => '1.3.6.1.4.1.2011.5.25.31.1.1.18.1.4',
    hwEntityPwrModeDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwEntityPwrMode',
    hwEntityPwrPresent => '1.3.6.1.4.1.2011.5.25.31.1.1.18.1.5',
    hwEntityPwrPresentDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwEntityPwrPresent',
    hwEntityPwrState => '1.3.6.1.4.1.2011.5.25.31.1.1.18.1.6',
    hwEntityPwrStateDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwEntityPwrState',
    hwEntityPwrCurrent => '1.3.6.1.4.1.2011.5.25.31.1.1.18.1.7',
    hwEntityPwrVoltage => '1.3.6.1.4.1.2011.5.25.31.1.1.18.1.8',
    hwEntityPwrDesc => '1.3.6.1.4.1.2011.5.25.31.1.1.18.1.9',
    hwEntityPhysicalSpecTable => '1.3.6.1.4.1.2011.5.25.31.1.2',
    hwEntityPhysicalSpecRack => '1.3.6.1.4.1.2011.5.25.31.1.2.1',
    hwEntityPhysicalSpecFrame => '1.3.6.1.4.1.2011.5.25.31.1.2.2',
    hwEntityPhysicalSpecSlot => '1.3.6.1.4.1.2011.5.25.31.1.2.3',
    hwEntityPhysicalSpecBoard => '1.3.6.1.4.1.2011.5.25.31.1.2.4',
    hwEntityPhysicalSpecSubSlot => '1.3.6.1.4.1.2011.5.25.31.1.2.5',
    hwEntityPhysicalSpecSubBoard => '1.3.6.1.4.1.2011.5.25.31.1.2.6',
    hwEntityPhysicalSpecPort => '1.3.6.1.4.1.2011.5.25.31.1.2.7',
    hwEntityPhysicalSpecEmu => '1.3.6.1.4.1.2011.5.25.31.1.2.8',
    hwEntityPhysicalSpecPowerframe => '1.3.6.1.4.1.2011.5.25.31.1.2.9',
    hwEntityPhysicalSpecPowermodule => '1.3.6.1.4.1.2011.5.25.31.1.2.10',
    hwEntityPhysicalSpecBattery => '1.3.6.1.4.1.2011.5.25.31.1.2.11',
    hwEntityExtTraps => '1.3.6.1.4.1.2011.5.25.31.2',
    hwEntityExtTrapsPrefix => '1.3.6.1.4.1.2011.5.25.31.2.0',
    hwEntityExtTrapObject => '1.3.6.1.4.1.2011.5.25.31.2.1',
    hwEntityExtTrapBaseSoftwareVersion => '1.3.6.1.4.1.2011.5.25.31.2.1.1',
    hwEntityExtTrapBoardSoftwareVersion => '1.3.6.1.4.1.2011.5.25.31.2.1.2',
    hwPhysicalName => '1.3.6.1.4.1.2011.5.25.31.2.1.3',
    hwEntityExtTrap => '1.3.6.1.4.1.2011.5.25.31.2.2',
    hwDevicePowerInfoObjects => '1.3.6.1.4.1.2011.5.25.31.3',
    hwDevicePowerInfoTotalPower => '1.3.6.1.4.1.2011.5.25.31.3.1',
    hwDevicePowerInfoUsedPower => '1.3.6.1.4.1.2011.5.25.31.3.2',
    hwEntityExtConformance => '1.3.6.1.4.1.2011.5.25.31.4',
    hwEntityExtCompliances => '1.3.6.1.4.1.2011.5.25.31.4.1',
    hwEntityExtGroups => '1.3.6.1.4.1.2011.5.25.31.4.2',
    hwPnpObjects => '1.3.6.1.4.1.2011.5.25.31.5',
    hwPnpInfo => '1.3.6.1.4.1.2011.5.25.31.5.1',
    hwHardwareCapaSequenceNo => '1.3.6.1.4.1.2011.5.25.31.5.1.1',
    hwAlarmPnPSequenceNo => '1.3.6.1.4.1.2011.5.25.31.5.1.2',
    hwPnpTraps => '1.3.6.1.4.1.2011.5.25.31.5.2',
    hwPnpOperateTable => '1.3.6.1.4.1.2011.5.25.31.5.3',
    hwPnpOperateEntry => '1.3.6.1.4.1.2011.5.25.31.5.3.1',
    hwFileGeneIndex => '1.3.6.1.4.1.2011.5.25.31.5.3.1.1',
    hwFileGeneOperState => '1.3.6.1.4.1.2011.5.25.31.5.3.1.2',
    hwFileGeneOperStateDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwFileGeneOperState',
    hwFileGeneResourceType => '1.3.6.1.4.1.2011.5.25.31.5.3.1.3',
    hwFileGeneResourceTypeDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwFileGeneResourceType',
    hwFileGeneResourceID => '1.3.6.1.4.1.2011.5.25.31.5.3.1.4',
    hwFileGeneDestinationFile => '1.3.6.1.4.1.2011.5.25.31.5.3.1.5',
    hwFileGeneRowStatus => '1.3.6.1.4.1.2011.5.25.31.5.3.1.6',
    hwSystemGlobalObjects => '1.3.6.1.4.1.2011.5.25.31.6',
    hwEntitySystemNetID => '1.3.6.1.4.1.2011.5.25.31.6.1',
    hwEntitySoftwareName => '1.3.6.1.4.1.2011.5.25.31.6.2',
    hwEntitySoftwareVersion => '1.3.6.1.4.1.2011.5.25.31.6.3',
    hwEntitySoftwareVendor => '1.3.6.1.4.1.2011.5.25.31.6.4',
    hwEntitySystemModel => '1.3.6.1.4.1.2011.5.25.31.6.5',
    hwEntitySystemTime => '1.3.6.1.4.1.2011.5.25.31.6.6',
    hwEntitySystemMacAddress => '1.3.6.1.4.1.2011.5.25.31.6.7',
    hwEntitySystemReset => '1.3.6.1.4.1.2011.5.25.31.6.8',
    hwEntitySystemResetDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwEntitySystemReset',
    hwEntitySystemHealthInterval => '1.3.6.1.4.1.2011.5.25.31.6.9',
    hwEntitySystemNEId => '1.3.6.1.4.1.2011.5.25.31.6.10',
    hwEntitySystemServiceType => '1.3.6.1.4.1.2011.5.25.31.6.11',
    hwHeartbeatObjects => '1.3.6.1.4.1.2011.5.25.31.7',
    hwHeartbeatConfig => '1.3.6.1.4.1.2011.5.25.31.7.1',
    hwEntityHeartbeatOnOff => '1.3.6.1.4.1.2011.5.25.31.7.1.1',
    hwEntityHeartbeatOnOffDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwEntityHeartbeatOnOff',
    hwEntityHeartbeatPeriod => '1.3.6.1.4.1.2011.5.25.31.7.1.2',
    hwHeartbeatTrapPrefix => '1.3.6.1.4.1.2011.5.25.31.7.2',
    hwPreDisposeObjects => '1.3.6.1.4.1.2011.5.25.31.8',
    hwPreDisposeInfo => '1.3.6.1.4.1.2011.5.25.31.8.1',
    hwPreDisposeSequenceNo => '1.3.6.1.4.1.2011.5.25.31.8.1.1',
    hwPreDisposedTraps => '1.3.6.1.4.1.2011.5.25.31.8.2',
    hwPreDisposeConfigTable => '1.3.6.1.4.1.2011.5.25.31.8.3',
    hwPreDisposeConfigEntry => '1.3.6.1.4.1.2011.5.25.31.8.3.1',
    hwDisposeSlot => '1.3.6.1.4.1.2011.5.25.31.8.3.1.1',
    hwDisposeCardId => '1.3.6.1.4.1.2011.5.25.31.8.3.1.2',
    hwDisposeSbom => '1.3.6.1.4.1.2011.5.25.31.8.3.1.3',
    hwDisposeRowStatus => '1.3.6.1.4.1.2011.5.25.31.8.3.1.4',
    hwDisposeOperState => '1.3.6.1.4.1.2011.5.25.31.8.3.1.5',
    hwDisposeOperStateDefinition => 'HUAWEI-ENTITY-EXTENT-MIB::hwDisposeOperState',
    hwPreDisposeEntInfoTable => '1.3.6.1.4.1.2011.5.25.31.8.4',
    hwPreDisposeEntInfoEntry => '1.3.6.1.4.1.2011.5.25.31.8.4.1',
    hwDisposeEntPhysicalIndex => '1.3.6.1.4.1.2011.5.25.31.8.4.1.1',
    hwDisposeEntPhysicalDescr => '1.3.6.1.4.1.2011.5.25.31.8.4.1.2',
    hwDisposeEntPhysicalVendorType => '1.3.6.1.4.1.2011.5.25.31.8.4.1.3',
    hwDisposeEntPhysicalContainedIn => '1.3.6.1.4.1.2011.5.25.31.8.4.1.4',
    hwDisposeEntPhysicalClass => '1.3.6.1.4.1.2011.5.25.31.8.4.1.5',
    hwDisposeEntPhysicalParentRelPos => '1.3.6.1.4.1.2011.5.25.31.8.4.1.6',
    hwDisposeEntPhysicalName => '1.3.6.1.4.1.2011.5.25.31.8.4.1.7',
    hwOSPUnifyManageObjects => '1.3.6.1.4.1.2011.5.25.31.9',
    hwEntityExtOSPTrapsPrefix => '1.3.6.1.4.1.2011.5.25.31.9.1',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'HUAWEI-ENTITY-EXTENT-MIB'} = {
    HwAdminState => {
      '1' => 'notSupported',
      '2' => 'locked',
      '3' => 'shuttingDown',
      '4' => 'unlocked',
      '11' => 'up',
      '12' => 'down',
      '13' => 'loopback',
    },
    HwOperState => {
      '1' => 'notSupported',
      '2' => 'disabled',
      '3' => 'enabled',
      '4' => 'offline',
      '11' => 'up',
      '12' => 'down',
      '13' => 'connect',
      '15' => 'protocolUp',
      '16' => 'linkUp',
      '17' => 'linkDown',
    },
    HwStandbyStatus => {
      '1' => 'notSupported',
      '2' => 'hotStandby',
      '3' => 'coldStandby',
      '4' => 'providingService',
    },
    hwEntitySupportFlexCard => {
      '1' => 'notSupported',
      '2' => 'flexible',
      '3' => 'unflexible',
      '4' => 'dummy',
    },
    hwEntityDuplex => {
      '1' => 'notSupported',
      '2' => 'full',
      '3' => 'half',
    },
    hwEntityVolStatus => {
      '1' => 'normal',
      '2' => 'major',
      '3' => 'fatal',
    },
    hwDisposeOperState => {
      '1' => 'opSuccess',
      '2' => 'opInProgress',
      '3' => 'opDevNotSupportPredispose',
      '4' => 'opCardNotSupportPredispose',
      '5' => 'opAlreadyPredispose',
      '6' => 'opCardConflict',
      '7' => 'opDevOperationError',
    },
    hwEntityFanReg => {
      '1' => 'yes',
      '2' => 'no',
    },
    hwVirtualCableTestPairAStatus => {
      '1' => 'normal',
      '2' => 'abnormalOpen',
      '3' => 'abnormalShort',
      '4' => 'abnormalOpenShort',
      '5' => 'abnormalCrossTalk',
      '6' => 'unknown',
      '7' => 'notSupport',
    },
    hwFileGeneResourceType => {
      '1' => 'pnpcard',
      '2' => 'pnpsubcard',
      '3' => 'pnphardcapability',
      '4' => 'pnpPreDisposeCapability',
      '5' => 'pnpframe',
      '6' => 'pnpdevtype',
      '7' => 'pnpalarm',
    },
    hwEntityOpticalDirectionType => {
      '1' => 'notSupported',
      '2' => 'twoFiberBidirection',
      '3' => 'oneFiberBidirection',
      '4' => 'twoFiberTwoPortBidirection',
    },
    hwEntityPortType => {
      '1' => 'notSupported',
      '2' => 'copper',
      '3' => 'fiber100',
      '4' => 'fiber1000',
      '5' => 'fiber10000',
      '6' => 'opticalnotExist',
      '7' => 'optical',
    },
    hwEntityTempStatus => {
      '1' => 'normal',
      '2' => 'minor',
      '3' => 'major',
      '4' => 'fatal',
    },
    hwEntityOpticalFiberType => {
      '0' => 'unknown',
      '1' => 'sc',
      '2' => 'style1CopperConnector',
      '3' => 'style2CopperConnector',
      '4' => 'bncTnc',
      '5' => 'coaxialHeaders',
      '6' => 'fiberJack',
      '7' => 'lc',
      '8' => 'mtRj',
      '9' => 'mu',
      '10' => 'sg',
      '11' => 'opticalPigtail',
      '12' => 'mpo',
      '20' => 'hssdcII',
      '21' => 'copperPigtail',
    },
    hwEntityPwrState => {
      '1' => 'supply',
      '2' => 'notSupply',
      '3' => 'sleep',
      '4' => 'unknown',
    },
    hwEntityPwrPresent => {
      '1' => 'present',
      '2' => 'absent',
    },
    hwVirtualCableTestOperation => {
      '1' => 'startTest',
      '2' => 'resetTestValue',
      '3' => 'readyStartTest',
    },
    hwEntityStartMode => {
      '1' => 'notSupported',
      '2' => 'cold',
      '3' => 'warm',
      '4' => 'unknown',
    },
    hwFileGeneOperState => {
      '1' => 'opInProgress',
      '2' => 'opSuccess',
      '3' => 'opGetFileError',
      '4' => 'opInvalidDestName',
      '5' => 'opNoFlashSpace',
      '6' => 'opWriteFileError',
      '7' => 'opDestoryError',
    },
    hwEntityPwrMode => {
      '1' => 'unknown',
      '2' => 'dc',
      '3' => 'ac',
    },
    hwEntityOpticalPlug => {
      '0' => 'notSupported',
      '1' => 'true',
      '2' => 'false',
    },
    hwEntityFanState => {
      '1' => 'normal',
      '2' => 'abnormal',
    },
    hwEntityBoardClass => {
      '1' => 'notSupported',
      '2' => 'mpu',
      '3' => 'lpu',
      '4' => 'sfu',
      '5' => 'icu',
      '6' => 'ecu',
      '7' => 'fan',
      '8' => 'power',
      '9' => 'lcd',
      '10' => 'pmu',
      '11' => 'cmu',
    },
    hwVirtualCableTestPairCStatus => {
      '1' => 'normal',
      '2' => 'abnormalOpen',
      '3' => 'abnormalShort',
      '4' => 'abnormalOpenShort',
      '5' => 'abnormalCrossTalk',
      '6' => 'unknown',
      '7' => 'notSupport',
    },
    hwEntityPwrReg => {
      '1' => 'yes',
      '2' => 'no',
    },
    hwEntityFaultLight => {
      '1' => 'notSupported',
      '2' => 'normal',
      '3' => 'underRepair',
    },
    hwEntityFanPresent => {
      '1' => 'present',
      '2' => 'absent',
    },
    hwEntityFanSpdAdjMode => {
      '1' => 'auto',
      '2' => 'manual',
      '3' => 'unknown',
    },
    hwVirtualCableTestPairBStatus => {
      '1' => 'normal',
      '2' => 'abnormalOpen',
      '3' => 'abnormalShort',
      '4' => 'abnormalOpenShort',
      '5' => 'abnormalCrossTalk',
      '6' => 'unknown',
      '7' => 'notSupport',
    },
    hwEntitySystemReset => {
      '1' => 'normal',
      '2' => 'restart',
    },
    hwEntityOpticalAuthenticationStatus => {
      '0' => 'unknown',
      '1' => 'authenticated',
      '2' => 'unauthenticated',
    },
    hwEntityOpticalWaveBand => {
      '0' => 'unknown',
      '1' => 'clBand',
      '2' => 'cBand',
      '3' => 'lBand',
      '4' => 'c32Band',
      '5' => 'ramancBand',
      '6' => 'ramanlBand',
      '7' => 'cwdmBand',
      '8' => 'smcBand',
      '9' => 'c96bBand',
      '10' => 'c192bBand',
    },
    hwEntityOpticalMode => {
      '1' => 'notSupported',
      '2' => 'singleMode',
      '3' => 'multiMode5',
      '4' => 'multiMode6',
      '5' => 'noValue',
    },
    hwVirtualCableTestPairStatus => {
      '1' => 'normal',
      '2' => 'abnormalOpen',
      '3' => 'abnormalShort',
      '4' => 'abnormalOpenShort',
      '5' => 'abnormalCrossTalk',
      '6' => 'unknown',
      '7' => 'notSupport',
    },
    hwBatteryState => {
      '1' => 'charge',
      '2' => 'discharge',
      '3' => 'full',
      '4' => 'abnormal',
    },
    hwEntityServiceType => {
      '1' => 'sslvpn',
      '2' => 'firewall',
      '3' => 'loadBalance',
      '4' => 'ipsec',
      '5' => 'netstream',
      '6' => 'wlan',
    },
    hwEntityOpticalType => {
      '0' => 'unknown',
      '1' => 'sc',
      '2' => 'gbic',
      '3' => 'sfp',
      '4' => 'esfp',
      '5' => 'rj45',
      '6' => 'xfp',
      '7' => 'xenpak',
      '8' => 'transponder',
      '9' => 'cfp',
      '10' => 'smb',
      '11' => 'sfpplus',
      '12' => 'cxp',
      '13' => 'qsfp',
      '14' => 'qsfpplus',
      '15' => 'cfp2',
      '16' => 'dwdmsfp',
    },
    hwVirtualCableTestPairDStatus => {
      '1' => 'normal',
      '2' => 'abnormalOpen',
      '3' => 'abnormalShort',
      '4' => 'abnormalOpenShort',
      '5' => 'abnormalCrossTalk',
      '6' => 'unknown',
      '7' => 'notSupport',
    },
    hwEntityHeartbeatOnOff => {
      '1' => 'on',
      '2' => 'off',
    },
    hwEntityOpticalTunableType => {
      '1' => 'notSupported',
      '2' => 'notTunable',
      '3' => 'tunable',
      '4' => 'supportTunableType',
    },
};



package Monitoring::GLPlugin::SNMP::MibsAndOids::HOSTRESOURCESMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'HOST-RESOURCES-MIB'} = {
  url => '',
  name => 'HOST-RESOURCES-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'HOST-RESOURCES-MIB'} =
    '1.3.6.1.2.1.25';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'HOST-RESOURCES-MIB'} = {
  hostResourcesMibModule => '1.3.6.1.2.1.25',
  hrSystem => '1.3.6.1.2.1.25.1',
  hrSystemUptime => '1.3.6.1.2.1.25.1.1',
  hrSystemDate => '1.3.6.1.2.1.25.1.2',
  hrSystemDateDefinition => 'MIB-2-MIB::DateAndTime',
  hrSystemInitialLoadDevice => '1.3.6.1.2.1.25.1.3',
  hrSystemInitialLoadParameters => '1.3.6.1.2.1.25.1.4',
  hrSystemNumUsers => '1.3.6.1.2.1.25.1.5',
  hrSystemProcesses => '1.3.6.1.2.1.25.1.6',
  hrSystemMaxProcesses => '1.3.6.1.2.1.25.1.7',
  hrStorage => '1.3.6.1.2.1.25.2',
  hrStorageTypes => '1.3.6.1.2.1.25.2.1',
  hrStorageTypeDefinition => 'OID::HOST-RESOURCES-MIB',
  hrStorageOther => '1.3.6.1.2.1.25.2.1.1',
  hrStorageRam => '1.3.6.1.2.1.25.2.1.2',
  hrStorageVirtualMemory => '1.3.6.1.2.1.25.2.1.3',
  hrStorageFixedDisk => '1.3.6.1.2.1.25.2.1.4',
  hrStorageRemovableDisk => '1.3.6.1.2.1.25.2.1.5',
  hrStorageFloppyDisk => '1.3.6.1.2.1.25.2.1.6',
  hrStorageCompactDisc => '1.3.6.1.2.1.25.2.1.7',
  hrStorageRamDisk => '1.3.6.1.2.1.25.2.1.8',
  hrMemorySize => '1.3.6.1.2.1.25.2.2',
  hrStorageTable => '1.3.6.1.2.1.25.2.3',
  hrStorageEntry => '1.3.6.1.2.1.25.2.3.1',
  hrStorageIndex => '1.3.6.1.2.1.25.2.3.1.1',
  hrStorageType => '1.3.6.1.2.1.25.2.3.1.2',
  hrStorageDescr => '1.3.6.1.2.1.25.2.3.1.3',
  hrStorageAllocationUnits => '1.3.6.1.2.1.25.2.3.1.4',
  hrStorageSize => '1.3.6.1.2.1.25.2.3.1.5',
  hrStorageUsed => '1.3.6.1.2.1.25.2.3.1.6',
  hrStorageAllocationFailures => '1.3.6.1.2.1.25.2.3.1.7',
  hrDevice => '1.3.6.1.2.1.25.3',
  hrDeviceTypes => '1.3.6.1.2.1.25.3.1',
  hrDeviceTypeDefinition => 'OID::HOST-RESOURCES-MIB',
  hrDeviceOther => '1.3.6.1.2.1.25.3.1.1',
  hrDeviceUnknown => '1.3.6.1.2.1.25.3.1.2',
  hrDeviceProcessor => '1.3.6.1.2.1.25.3.1.3',
  hrDeviceNetwork => '1.3.6.1.2.1.25.3.1.4',
  hrDevicePrinter => '1.3.6.1.2.1.25.3.1.5',
  hrDeviceDiskStorage => '1.3.6.1.2.1.25.3.1.6',
  hrDeviceVideo => '1.3.6.1.2.1.25.3.1.10',
  hrDeviceAudio => '1.3.6.1.2.1.25.3.1.11',
  hrDeviceCoprocessor => '1.3.6.1.2.1.25.3.1.12',
  hrDeviceKeyboard => '1.3.6.1.2.1.25.3.1.13',
  hrDeviceModem => '1.3.6.1.2.1.25.3.1.14',
  hrDeviceParallelPort => '1.3.6.1.2.1.25.3.1.15',
  hrDevicePointing => '1.3.6.1.2.1.25.3.1.16',
  hrDeviceSerialPort => '1.3.6.1.2.1.25.3.1.17',
  hrDeviceTape => '1.3.6.1.2.1.25.3.1.18',
  hrDeviceClock => '1.3.6.1.2.1.25.3.1.19',
  hrDeviceVolatileMemory => '1.3.6.1.2.1.25.3.1.20',
  hrDeviceNonVolatileMemory => '1.3.6.1.2.1.25.3.1.21',
  hrDeviceTable => '1.3.6.1.2.1.25.3.2',
  hrDeviceEntry => '1.3.6.1.2.1.25.3.2.1',
  hrDeviceIndex => '1.3.6.1.2.1.25.3.2.1.1',
  hrDeviceType => '1.3.6.1.2.1.25.3.2.1.2',
  hrDeviceDescr => '1.3.6.1.2.1.25.3.2.1.3',
  hrDeviceID => '1.3.6.1.2.1.25.3.2.1.4',
  hrDeviceStatus => '1.3.6.1.2.1.25.3.2.1.5',
  hrDeviceStatusDefinition => 'HOST-RESOURCES-MIB::hrDeviceStatus',
  hrDeviceErrors => '1.3.6.1.2.1.25.3.2.1.6',
  hrProcessorTable => '1.3.6.1.2.1.25.3.3',
  hrProcessorEntry => '1.3.6.1.2.1.25.3.3.1',
  hrProcessorFrwID => '1.3.6.1.2.1.25.3.3.1.1',
  hrProcessorLoad => '1.3.6.1.2.1.25.3.3.1.2',
  hrNetworkTable => '1.3.6.1.2.1.25.3.4',
  hrNetworkEntry => '1.3.6.1.2.1.25.3.4.1',
  hrNetworkIfIndex => '1.3.6.1.2.1.25.3.4.1.1',
  hrPrinterTable => '1.3.6.1.2.1.25.3.5',
  hrPrinterEntry => '1.3.6.1.2.1.25.3.5.1',
  hrPrinterStatus => '1.3.6.1.2.1.25.3.5.1.1',
  hrPrinterStatusDefinition => 'HOST-RESOURCES-MIB::hrPrinterStatus',
  hrPrinterDetectedErrorState => '1.3.6.1.2.1.25.3.5.1.2',
  hrPrinterDetectedErrorStateDefinition => 'HOST-RESOURCES-MIB::hrPrinterDetectedErrorState',
  hrDiskStorageTable => '1.3.6.1.2.1.25.3.6',
  hrDiskStorageEntry => '1.3.6.1.2.1.25.3.6.1',
  hrDiskStorageAccess => '1.3.6.1.2.1.25.3.6.1.1',
  hrDiskStorageAccessDefinition => 'HOST-RESOURCES-MIB::hrDiskStorageAccess',
  hrDiskStorageMedia => '1.3.6.1.2.1.25.3.6.1.2',
  hrDiskStorageMediaDefinition => 'HOST-RESOURCES-MIB::hrDiskStorageMedia',
  hrDiskStorageRemoveble => '1.3.6.1.2.1.25.3.6.1.3',
  hrDiskStorageRemovebleDefinition => 'HOST-RESOURCES-MIB::Boolean',
  hrDiskStorageCapacity => '1.3.6.1.2.1.25.3.6.1.4',
  hrPartitionTable => '1.3.6.1.2.1.25.3.7',
  hrPartitionEntry => '1.3.6.1.2.1.25.3.7.1',
  hrPartitionIndex => '1.3.6.1.2.1.25.3.7.1.1',
  hrPartitionLabel => '1.3.6.1.2.1.25.3.7.1.2',
  hrPartitionID => '1.3.6.1.2.1.25.3.7.1.3',
  hrPartitionSize => '1.3.6.1.2.1.25.3.7.1.4',
  hrPartitionFSIndex => '1.3.6.1.2.1.25.3.7.1.5',
  hrFSTable => '1.3.6.1.2.1.25.3.8',
  hrFSEntry => '1.3.6.1.2.1.25.3.8.1',
  hrFSIndex => '1.3.6.1.2.1.25.3.8.1.1',
  hrFSMountPoint => '1.3.6.1.2.1.25.3.8.1.2',
  hrFSRemoteMountPoint => '1.3.6.1.2.1.25.3.8.1.3',
  hrFSType => '1.3.6.1.2.1.25.3.8.1.4',
  hrFSAccess => '1.3.6.1.2.1.25.3.8.1.5',
  hrFSAccessDefinition => 'HOST-RESOURCES-MIB::hrFSAccess',
  hrFSBootable => '1.3.6.1.2.1.25.3.8.1.6',
  hrFSBootableDefinition => 'HOST-RESOURCES-MIB::Boolean',
  hrFSStorageIndex => '1.3.6.1.2.1.25.3.8.1.7',
  hrFSLastFullBackupDate => '1.3.6.1.2.1.25.3.8.1.8',
  hrFSLastPartialBackupDate => '1.3.6.1.2.1.25.3.8.1.9',
  hrFSTypes => '1.3.6.1.2.1.25.3.9',
  hrFSTypeDefinition => 'OID::HOST-RESOURCES-MIB',
  hrFSOther => '1.3.6.1.2.1.25.3.9.1',
  hrFSUnknown => '1.3.6.1.2.1.25.3.9.2',
  hrFSBerkeleyFFS => '1.3.6.1.2.1.25.3.9.3',
  hrFSSys5FS => '1.3.6.1.2.1.25.3.9.4',
  hrFSFat => '1.3.6.1.2.1.25.3.9.5',
  hrFSHPFS => '1.3.6.1.2.1.25.3.9.6',
  hrFSHFS => '1.3.6.1.2.1.25.3.9.7',
  hrFSMFS => '1.3.6.1.2.1.25.3.9.8',
  hrFSNTFS => '1.3.6.1.2.1.25.3.9.9',
  hrFSVNode => '1.3.6.1.2.1.25.3.9.10',
  hrFSJournaled => '1.3.6.1.2.1.25.3.9.11',
  hrFSiso9660 => '1.3.6.1.2.1.25.3.9.12',
  hrFSRockRidge => '1.3.6.1.2.1.25.3.9.13',
  hrFSNFS => '1.3.6.1.2.1.25.3.9.14',
  hrFSNetware => '1.3.6.1.2.1.25.3.9.15',
  hrFSAFS => '1.3.6.1.2.1.25.3.9.16',
  hrFSDFS => '1.3.6.1.2.1.25.3.9.17',
  hrFSAppleshare => '1.3.6.1.2.1.25.3.9.18',
  hrFSRFS => '1.3.6.1.2.1.25.3.9.19',
  hrFSDGCFS => '1.3.6.1.2.1.25.3.9.20',
  hrFSBFS => '1.3.6.1.2.1.25.3.9.21',
  hrSWRun => '1.3.6.1.2.1.25.4',
  hrSWOSIndex => '1.3.6.1.2.1.25.4.1',
  hrSWRunTable => '1.3.6.1.2.1.25.4.2',
  hrSWRunEntry => '1.3.6.1.2.1.25.4.2.1',
  hrSWRunIndex => '1.3.6.1.2.1.25.4.2.1.1',
  hrSWRunName => '1.3.6.1.2.1.25.4.2.1.2',
  hrSWRunID => '1.3.6.1.2.1.25.4.2.1.3',
  hrSWRunPath => '1.3.6.1.2.1.25.4.2.1.4',
  hrSWRunParameters => '1.3.6.1.2.1.25.4.2.1.5',
  hrSWRunType => '1.3.6.1.2.1.25.4.2.1.6',
  hrSWRunTypeDefinition => 'HOST-RESOURCES-MIB::hrSWRunType',
  hrSWRunStatus => '1.3.6.1.2.1.25.4.2.1.7',
  hrSWRunStatusDefinition => 'HOST-RESOURCES-MIB::hrSWRunStatus',
  hrSWRunPerf => '1.3.6.1.2.1.25.5',
  hrSWRunPerfTable => '1.3.6.1.2.1.25.5.1',
  hrSWRunPerfEntry => '1.3.6.1.2.1.25.5.1.1',
  hrSWRunPerfCPU => '1.3.6.1.2.1.25.5.1.1.1',
  hrSWRunPerfMem => '1.3.6.1.2.1.25.5.1.1.2',
  hrSWInstalled => '1.3.6.1.2.1.25.6',
  hrSWInstalledLastChange => '1.3.6.1.2.1.25.6.1',
  hrSWInstalledLastUpdateTime => '1.3.6.1.2.1.25.6.2',
  hrSWInstalledTable => '1.3.6.1.2.1.25.6.3',
  hrSWInstalledEntry => '1.3.6.1.2.1.25.6.3.1',
  hrSWInstalledIndex => '1.3.6.1.2.1.25.6.3.1.1',
  hrSWInstalledName => '1.3.6.1.2.1.25.6.3.1.2',
  hrSWInstalledID => '1.3.6.1.2.1.25.6.3.1.3',
  hrSWInstalledType => '1.3.6.1.2.1.25.6.3.1.4',
  hrSWInstalledTypeDefinition => 'HOST-RESOURCES-MIB::hrSWInstalledType',
  hrSWInstalledDate => '1.3.6.1.2.1.25.6.3.1.5',
  hrConformance => '1.3.6.1.2.1.25.7',
  hrMIBCompliances => '1.3.6.1.2.1.25.7.1',
  hrMIBGroups => '1.3.6.1.2.1.25.7.2',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'HOST-RESOURCES-MIB'} = {
  hrDeviceStatus => {
    '1' => 'unknown',
    '2' => 'running',
    '3' => 'warning',
    '4' => 'testing',
    '5' => 'down',
  },
  hrSWInstalledType => {
    '1' => 'unknown',
    '2' => 'operatingSystem',
    '3' => 'deviceDriver',
    '4' => 'application',
  },
  hrPrinterStatus => {
    '1' => 'other',
    '2' => 'unknown',
    '3' => 'idle',
    '4' => 'printing',
    '5' => 'warmup',
  },
  hrDiskStorageAccess => {
    '1' => 'readWrite',
    '2' => 'readOnly',
  },
  hrDiskStorageMedia => {
    '1' => 'other',
    '2' => 'unknown',
    '3' => 'hardDisk',
    '4' => 'floppyDisk',
    '5' => 'opticalDiskROM',
    '6' => 'opticalDiskWORM',
    '7' => 'opticalDiskRW',
    '8' => 'ramDisk',
  },
  hrSWRunType => {
    '1' => 'unknown',
    '2' => 'operatingSystem',
    '3' => 'deviceDriver',
    '4' => 'application',
  },
  Boolean => {
    '1' => 'true',
    '2' => 'false',
  },
  hrFSAccess => {
    '1' => 'readWrite',
    '2' => 'readOnly',
  },
  hrSWRunStatus => {
    '1' => 'running',
    '2' => 'runnable',
    '3' => 'notRunnable',
    '4' => 'invalid',
  },
  hrPrinterDetectedErrorState => sub {
    my $val = shift;
    my $state = unpack("B*", $val);
    my @errors = ();
    my $errors = {
        0 => 'lowPaper',
        1 => 'noPaper',
        2 => 'lowToner',
        3 => 'noToner',
        4 => 'doorOpen',
        5 => 'jammed',
        6 => 'offline',
        7 => 'serviceRequested',
    };
    foreach my $bit (0..7) {
      if (substr($state, $bit, 1) eq "1") {
        push(@errors, $errors->{$bit});
      }
    }
    return @errors ? join("|", @errors) : 'good';
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::HPICFCHASSISMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'HP-ICF-CHASSIS-MIB'} = {
  url => '',
  name => 'HP-ICF-CHASSIS-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'HP-ICF-CHASSIS-MIB'} =
  '1.3.6.1.4.1.11.2.14.11.1.2.6';
# sensor-table, because lots of oids will be superseeded by std. entity-mib
# However, the hpicfSensorTable will still be valid.

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'HP-ICF-CHASSIS-MIB'} = {
  'hpicfSensorTable' => '1.3.6.1.4.1.11.2.14.11.1.2.6',
  'hpicfSensorEntry' => '1.3.6.1.4.1.11.2.14.11.1.2.6.1',
  'hpicfSensorIndex' => '1.3.6.1.4.1.11.2.14.11.1.2.6.1.1',
  'hpicfSensorObjectId' => '1.3.6.1.4.1.11.2.14.11.1.2.6.1.2',
  'hpicfSensorObjectIdDefinition' => {
    '1' => 'fan sensor',
    '2' => 'power supply',
    '3' => 'redundant power supply',
    '4' => 'over-temperature sensor',
  },
  'hpicfSensorNumber' => '1.3.6.1.4.1.11.2.14.11.1.2.6.1.3',
  'hpicfSensorStatus' => '1.3.6.1.4.1.11.2.14.11.1.2.6.1.4',
  'hpicfSensorStatusDefinition' => {
    '1' => 'unknown',
    '2' => 'bad',
    '3' => 'warning',
    '4' => 'good',
    '5' => 'notPresent',
  },
  'hpicfSensorWarnings' => '1.3.6.1.4.1.11.2.14.11.1.2.6.1.5',
  'hpicfSensorFailures' => '1.3.6.1.4.1.11.2.14.11.1.2.6.1.6',
  'hpicfSensorDescr' => '1.3.6.1.4.1.11.2.14.11.1.2.6.1.7',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::IANAIFTYPEMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'IANAIFTYPE-MIB'} = {
  url => '',
  name => 'IANAIFTYPE-MIB',
};

#$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'IANAIFTYPE-MIB'} =

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'IANAIFTYPE-MIB'} = {
  ianaifType => '1.3.6.1.2.1.30',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'IANAIFTYPE-MIB'} = {
  IANAifType => {
    '1' => 'other',
    '2' => 'regular1822',
    '3' => 'hdh1822',
    '4' => 'ddnX25',
    '5' => 'rfc877x25',
    '6' => 'ethernetCsmacd',
    '7' => 'iso88023Csmacd',
    '8' => 'iso88024TokenBus',
    '9' => 'iso88025TokenRing',
    '10' => 'iso88026Man',
    '11' => 'starLan',
    '12' => 'proteon10Mbit',
    '13' => 'proteon80Mbit',
    '14' => 'hyperchannel',
    '15' => 'fddi',
    '16' => 'lapb',
    '17' => 'sdlc',
    '18' => 'ds1',
    '19' => 'e1',
    '20' => 'basicISDN',
    '21' => 'primaryISDN',
    '22' => 'propPointToPointSerial',
    '23' => 'ppp',
    '24' => 'softwareLoopback',
    '25' => 'eon',
    '26' => 'ethernet3Mbit',
    '27' => 'nsip',
    '28' => 'slip',
    '29' => 'ultra',
    '30' => 'ds3',
    '31' => 'sip',
    '32' => 'frameRelay',
    '33' => 'rs232',
    '34' => 'para',
    '35' => 'arcnet',
    '36' => 'arcnetPlus',
    '37' => 'atm',
    '38' => 'miox25',
    '39' => 'sonet',
    '40' => 'x25ple',
    '41' => 'iso88022llc',
    '42' => 'localTalk',
    '43' => 'smdsDxi',
    '44' => 'frameRelayService',
    '45' => 'v35',
    '46' => 'hssi',
    '47' => 'hippi',
    '48' => 'modem',
    '49' => 'aal5',
    '50' => 'sonetPath',
    '51' => 'sonetVT',
    '52' => 'smdsIcip',
    '53' => 'propVirtual',
    '54' => 'propMultiplexor',
    '55' => 'ieee80212',
    '56' => 'fibreChannel',
    '57' => 'hippiInterface',
    '58' => 'frameRelayInterconnect',
    '59' => 'aflane8023',
    '60' => 'aflane8025',
    '61' => 'cctEmul',
    '62' => 'fastEther',
    '63' => 'isdn',
    '64' => 'v11',
    '65' => 'v36',
    '66' => 'g703at64k',
    '67' => 'g703at2mb',
    '68' => 'qllc',
    '69' => 'fastEtherFX',
    '70' => 'channel',
    '71' => 'ieee80211',
    '72' => 'ibm370parChan',
    '73' => 'escon',
    '74' => 'dlsw',
    '75' => 'isdns',
    '76' => 'isdnu',
    '77' => 'lapd',
    '78' => 'ipSwitch',
    '79' => 'rsrb',
    '80' => 'atmLogical',
    '81' => 'ds0',
    '82' => 'ds0Bundle',
    '83' => 'bsc',
    '84' => 'async',
    '85' => 'cnr',
    '86' => 'iso88025Dtr',
    '87' => 'eplrs',
    '88' => 'arap',
    '89' => 'propCnls',
    '90' => 'hostPad',
    '91' => 'termPad',
    '92' => 'frameRelayMPI',
    '93' => 'x213',
    '94' => 'adsl',
    '95' => 'radsl',
    '96' => 'sdsl',
    '97' => 'vdsl',
    '98' => 'iso88025CRFPInt',
    '99' => 'myrinet',
    '100' => 'voiceEM',
    '101' => 'voiceFXO',
    '102' => 'voiceFXS',
    '103' => 'voiceEncap',
    '104' => 'voiceOverIp',
    '105' => 'atmDxi',
    '106' => 'atmFuni',
    '107' => 'atmIma',
    '108' => 'pppMultilinkBundle',
    '109' => 'ipOverCdlc',
    '110' => 'ipOverClaw',
    '111' => 'stackToStack',
    '112' => 'virtualIpAddress',
    '113' => 'mpc',
    '114' => 'ipOverAtm',
    '115' => 'iso88025Fiber',
    '116' => 'tdlc',
    '117' => 'gigabitEthernet',
    '118' => 'hdlc',
    '119' => 'lapf',
    '120' => 'v37',
    '121' => 'x25mlp',
    '122' => 'x25huntGroup',
    '123' => 'transpHdlc',
    '124' => 'interleave',
    '125' => 'fast',
    '126' => 'ip',
    '127' => 'docsCableMaclayer',
    '128' => 'docsCableDownstream',
    '129' => 'docsCableUpstream',
    '130' => 'a12MppSwitch',
    '131' => 'tunnel',
    '132' => 'coffee',
    '133' => 'ces',
    '134' => 'atmSubInterface',
    '135' => 'l2vlan',
    '136' => 'l3ipvlan',
    '137' => 'l3ipxvlan',
    '138' => 'digitalPowerline',
    '139' => 'mediaMailOverIp',
    '140' => 'dtm',
    '141' => 'dcn',
    '142' => 'ipForward',
    '143' => 'msdsl',
    '144' => 'ieee1394',
    '145' => 'if-gsn',
    '146' => 'dvbRccMacLayer',
    '147' => 'dvbRccDownstream',
    '148' => 'dvbRccUpstream',
    '149' => 'atmVirtual',
    '150' => 'mplsTunnel',
    '151' => 'srp',
    '152' => 'voiceOverAtm',
    '153' => 'voiceOverFrameRelay',
    '154' => 'idsl',
    '155' => 'compositeLink',
    '156' => 'ss7SigLink',
    '157' => 'propWirelessP2P',
    '158' => 'frForward',
    '159' => 'rfc1483',
    '160' => 'usb',
    '161' => 'ieee8023adLag',
    '162' => 'bgppolicyaccounting',
    '163' => 'frf16MfrBundle',
    '164' => 'h323Gatekeeper',
    '165' => 'h323Proxy',
    '166' => 'mpls',
    '167' => 'mfSigLink',
    '168' => 'hdsl2',
    '169' => 'shdsl',
    '170' => 'ds1FDL',
    '171' => 'pos',
    '172' => 'dvbAsiIn',
    '173' => 'dvbAsiOut',
    '174' => 'plc',
    '175' => 'nfas',
    '176' => 'tr008',
    '177' => 'gr303RDT',
    '178' => 'gr303IDT',
    '179' => 'isup',
    '180' => 'propDocsWirelessMaclayer',
    '181' => 'propDocsWirelessDownstream',
    '182' => 'propDocsWirelessUpstream',
    '183' => 'hiperlan2',
    '184' => 'propBWAp2Mp',
    '185' => 'sonetOverheadChannel',
    '186' => 'digitalWrapperOverheadChannel',
    '187' => 'aal2',
    '188' => 'radioMAC',
    '189' => 'atmRadio',
    '190' => 'imt',
    '191' => 'mvl',
    '192' => 'reachDSL',
    '193' => 'frDlciEndPt',
    '194' => 'atmVciEndPt',
    '195' => 'opticalChannel',
    '196' => 'opticalTransport',
    '197' => 'propAtm',
    '198' => 'voiceOverCable',
    '199' => 'infiniband',
    '200' => 'teLink',
    '201' => 'q2931',
    '202' => 'virtualTg',
    '203' => 'sipTg',
    '204' => 'sipSig',
    '205' => 'docsCableUpstreamChannel',
    '206' => 'econet',
    '207' => 'pon155',
    '208' => 'pon622',
    '209' => 'bridge',
    '210' => 'linegroup',
    '211' => 'voiceEMFGD',
    '212' => 'voiceFGDEANA',
    '213' => 'voiceDID',
    '214' => 'mpegTransport',
    '215' => 'sixToFour',
    '216' => 'gtp',
    '217' => 'pdnEtherLoop1',
    '218' => 'pdnEtherLoop2',
    '219' => 'opticalChannelGroup',
    '220' => 'homepna',
    '221' => 'gfp',
    '222' => 'ciscoISLvlan',
    '223' => 'actelisMetaLOOP',
    '224' => 'fcipLink',
    '225' => 'rpr',
    '226' => 'qam',
    '227' => 'lmp',
    '228' => 'cblVectaStar',
    '229' => 'docsCableMCmtsDownstream',
    '230' => 'adsl2',
    '231' => 'macSecControlledIF',
    '232' => 'macSecUncontrolledIF',
    '233' => 'aviciOpticalEther',
    '234' => 'atmbond',
    '235' => 'voiceFGDOS',
    '236' => 'mocaVersion1',
    '237' => 'ieee80216WMAN',
    '238' => 'adsl2plus',
    '239' => 'dvbRcsMacLayer',
    '240' => 'dvbTdm',
    '241' => 'dvbRcsTdma',
    '242' => 'x86Laps',
    '243' => 'wwanPP',
    '244' => 'wwanPP2',
    '245' => 'voiceEBS',
    '246' => 'ifPwType',
    '247' => 'ilan',
    '248' => 'pip',
    '249' => 'aluELP',
    '250' => 'gpon',
    '251' => 'vdsl2',
    '252' => 'capwapDot11Profile',
    '253' => 'capwapDot11Bss',
    '254' => 'capwapWtpVirtualRadio',
    '255' => 'bits',
    '256' => 'docsCableUpstreamRfPort',
    '257' => 'cableDownstreamRfPort',
    '258' => 'vmwareVirtualNic',
    '259' => 'ieee802154',
    '260' => 'otnOdu',
    '261' => 'otnOtu',
    '262' => 'ifVfiType',
    '263' => 'g9981',
    '264' => 'g9982',
    '265' => 'g9983',
    '266' => 'aluEpon',
    '267' => 'aluEponOnu',
    '268' => 'aluEponPhysicalUni',
    '269' => 'aluEponLogicalLink',
    '270' => 'aluGponOnu',
    '271' => 'aluGponPhysicalUni',
    '272' => 'vmwareNicTeam',
    '277' => 'docsOfdmDownstream',
    '278' => 'docsOfdmaUpstream',
    '279' => 'gfast',
    '280' => 'sdci',
    '281' => 'xboxWireless',
    '282' => 'fastdsl',
    '283' => 'docsCableScte55d1FwdOob',
    '284' => 'docsCableScte55d1RetOob',
    '285' => 'docsCableScte55d2DsOob',
    '286' => 'docsCableScte55d2UsOob',
    '287' => 'docsCableNdf',
    '288' => 'docsCableNdr',
    '289' => 'ptm',
    '290' => 'ghn',
  },
  IANAtunnelType => {
    '1' => 'other',
    '2' => 'direct',
    '3' => 'gre',
    '4' => 'minimal',
    '5' => 'l2tp',
    '6' => 'pptp',
    '7' => 'l2f',
    '8' => 'udp',
    '9' => 'atmp',
    '10' => 'msdp',
    '11' => 'sixToFour',
    '12' => 'sixOverFour',
    '13' => 'isatap',
    '14' => 'teredo',
    '15' => 'ipHttps',
    '16' => 'softwireMesh',
    '17' => 'dsLite',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::IANARTPROTOMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'IANA-RTPROTO-MIB'} = {
  url => '',
  name => 'IANA-RTPROTO-MIB',
};

#$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'IANA-RTPROTO-MIB'} =

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'IANA-RTPROTO-MIB'} = {
  ianaRtProtoMIB => '0.84',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'IANA-RTPROTO-MIB'} = {
  IANAipRouteProtocol => {
    '1' => 'other',
    '2' => 'local',
    '3' => 'netmgmt',
    '4' => 'icmp',
    '5' => 'egp',
    '6' => 'ggp',
    '7' => 'hello',
    '8' => 'rip',
    '9' => 'isIs',
    '10' => 'esIs',
    '11' => 'ciscoIgrp',
    '12' => 'bbnSpfIgp',
    '13' => 'ospf',
    '14' => 'bgp',
    '15' => 'idpr',
    '16' => 'ciscoEigrp',
    '17' => 'dvmrp',
    '18' => 'rpl',
    '19' => 'dhcp',
    '20' => 'ttdp',
  },
  IANAipMRouteProtocol => {
    '1' => 'other',
    '2' => 'local',
    '3' => 'netmgmt',
    '4' => 'dvmrp',
    '5' => 'mospf',
    '6' => 'pimSparseDense',
    '7' => 'cbt',
    '8' => 'pimSparseMode',
    '9' => 'pimDenseMode',
    '10' => 'igmpOnly',
    '11' => 'bgmp',
    '12' => 'msdp',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::IEEE8023LAGMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'IEEE8023-LAG-MIB'} = {
  url => '',
  name => 'IEEE8023-LAG-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'IEEE8023-LAG-MIB'} =
    '1.2.840.10006.300.43';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'IEEE8023-LAG-MIB'} = {
  lagMIB => '1.2.840.10006.300.43',
  lagMIBObjects => '1.2.840.10006.300.43.1',
  dot3adAgg => '1.2.840.10006.300.43.1.1',
  dot3adAggTable => '1.2.840.10006.300.43.1.1.1',
  dot3adAggEntry => '1.2.840.10006.300.43.1.1.1.1',
  dot3adAggIndex => '1.2.840.10006.300.43.1.1.1.1.1',
  dot3adAggMACAddress => '1.2.840.10006.300.43.1.1.1.1.2',
  dot3adAggActorSystemPriority => '1.2.840.10006.300.43.1.1.1.1.3',
  dot3adAggActorSystemID => '1.2.840.10006.300.43.1.1.1.1.4',
  dot3adAggAggregateOrIndividual => '1.2.840.10006.300.43.1.1.1.1.5',
  dot3adAggActorAdminKey => '1.2.840.10006.300.43.1.1.1.1.6',
  dot3adAggActorOperKey => '1.2.840.10006.300.43.1.1.1.1.7',
  dot3adAggPartnerSystemID => '1.2.840.10006.300.43.1.1.1.1.8',
  dot3adAggPartnerSystemPriority => '1.2.840.10006.300.43.1.1.1.1.9',
  dot3adAggPartnerOperKey => '1.2.840.10006.300.43.1.1.1.1.10',
  dot3adAggCollectorMaxDelay => '1.2.840.10006.300.43.1.1.1.1.11',
  dot3adAggPortListTable => '1.2.840.10006.300.43.1.1.2',
  dot3adAggPortListEntry => '1.2.840.10006.300.43.1.1.2.1',
  dot3adAggPortListPorts => '1.2.840.10006.300.43.1.1.2.1.1',
  dot3adAggPort => '1.2.840.10006.300.43.1.2',
  dot3adAggPortTable => '1.2.840.10006.300.43.1.2.1',
  dot3adAggPortEntry => '1.2.840.10006.300.43.1.2.1.1',
  dot3adAggPortIndex => '1.2.840.10006.300.43.1.2.1.1.1',
  dot3adAggPortActorSystemPriority => '1.2.840.10006.300.43.1.2.1.1.2',
  dot3adAggPortActorSystemID => '1.2.840.10006.300.43.1.2.1.1.3',
  dot3adAggPortActorAdminKey => '1.2.840.10006.300.43.1.2.1.1.4',
  dot3adAggPortActorOperKey => '1.2.840.10006.300.43.1.2.1.1.5',
  dot3adAggPortPartnerAdminSystemPriority => '1.2.840.10006.300.43.1.2.1.1.6',
  dot3adAggPortPartnerOperSystemPriority => '1.2.840.10006.300.43.1.2.1.1.7',
  dot3adAggPortPartnerAdminSystemID => '1.2.840.10006.300.43.1.2.1.1.8',
  dot3adAggPortPartnerOperSystemID => '1.2.840.10006.300.43.1.2.1.1.9',
  dot3adAggPortPartnerAdminKey => '1.2.840.10006.300.43.1.2.1.1.10',
  dot3adAggPortPartnerOperKey => '1.2.840.10006.300.43.1.2.1.1.11',
  dot3adAggPortSelectedAggID => '1.2.840.10006.300.43.1.2.1.1.12',
  dot3adAggPortAttachedAggID => '1.2.840.10006.300.43.1.2.1.1.13',
  dot3adAggPortActorPort => '1.2.840.10006.300.43.1.2.1.1.14',
  dot3adAggPortActorPortPriority => '1.2.840.10006.300.43.1.2.1.1.15',
  dot3adAggPortPartnerAdminPort => '1.2.840.10006.300.43.1.2.1.1.16',
  dot3adAggPortPartnerOperPort => '1.2.840.10006.300.43.1.2.1.1.17',
  dot3adAggPortPartnerAdminPortPriority => '1.2.840.10006.300.43.1.2.1.1.18',
  dot3adAggPortPartnerOperPortPriority => '1.2.840.10006.300.43.1.2.1.1.19',
  dot3adAggPortActorAdminState => '1.2.840.10006.300.43.1.2.1.1.20',
  dot3adAggPortActorOperState => '1.2.840.10006.300.43.1.2.1.1.21',
  dot3adAggPortPartnerAdminState => '1.2.840.10006.300.43.1.2.1.1.22',
  dot3adAggPortPartnerOperState => '1.2.840.10006.300.43.1.2.1.1.23',
  dot3adAggPortAggregateOrIndividual => '1.2.840.10006.300.43.1.2.1.1.24',
  dot3adAggPortStatsTable => '1.2.840.10006.300.43.1.2.2',
  dot3adAggPortStatsEntry => '1.2.840.10006.300.43.1.2.2.1',
  dot3adAggPortStatsLACPDUsRx => '1.2.840.10006.300.43.1.2.2.1.1',
  dot3adAggPortStatsMarkerPDUsRx => '1.2.840.10006.300.43.1.2.2.1.2',
  dot3adAggPortStatsMarkerResponsePDUsRx => '1.2.840.10006.300.43.1.2.2.1.3',
  dot3adAggPortStatsUnknownRx => '1.2.840.10006.300.43.1.2.2.1.4',
  dot3adAggPortStatsIllegalRx => '1.2.840.10006.300.43.1.2.2.1.5',
  dot3adAggPortStatsLACPDUsTx => '1.2.840.10006.300.43.1.2.2.1.6',
  dot3adAggPortStatsMarkerPDUsTx => '1.2.840.10006.300.43.1.2.2.1.7',
  dot3adAggPortStatsMarkerResponsePDUsTx => '1.2.840.10006.300.43.1.2.2.1.8',
  dot3adAggPortDebugTable => '1.2.840.10006.300.43.1.2.3',
  dot3adAggPortDebugEntry => '1.2.840.10006.300.43.1.2.3.1',
  dot3adAggPortDebugRxState => '1.2.840.10006.300.43.1.2.3.1.1',
  dot3adAggPortDebugRxStateDefinition => 'IEEE8023-LAG-MIB::dot3adAggPortDebugRxState',
  dot3adAggPortDebugLastRxTime => '1.2.840.10006.300.43.1.2.3.1.2',
  dot3adAggPortDebugMuxState => '1.2.840.10006.300.43.1.2.3.1.3',
  dot3adAggPortDebugMuxStateDefinition => 'IEEE8023-LAG-MIB::dot3adAggPortDebugMuxState',
  dot3adAggPortDebugMuxReason => '1.2.840.10006.300.43.1.2.3.1.4',
  dot3adAggPortDebugActorChurnState => '1.2.840.10006.300.43.1.2.3.1.5',
  dot3adAggPortDebugActorChurnStateDefinition => 'IEEE8023-LAG-MIB::ChurnState',
  dot3adAggPortDebugPartnerChurnState => '1.2.840.10006.300.43.1.2.3.1.6',
  dot3adAggPortDebugPartnerChurnStateDefinition => 'IEEE8023-LAG-MIB::ChurnState',
  dot3adAggPortDebugActorChurnCount => '1.2.840.10006.300.43.1.2.3.1.7',
  dot3adAggPortDebugPartnerChurnCount => '1.2.840.10006.300.43.1.2.3.1.8',
  dot3adAggPortDebugActorSyncTransitionCount => '1.2.840.10006.300.43.1.2.3.1.9',
  dot3adAggPortDebugPartnerSyncTransitionCount => '1.2.840.10006.300.43.1.2.3.1.10',
  dot3adAggPortDebugActorChangeCount => '1.2.840.10006.300.43.1.2.3.1.11',
  dot3adAggPortDebugPartnerChangeCount => '1.2.840.10006.300.43.1.2.3.1.12',
  dot3adTablesLastChanged => '1.2.840.10006.300.43.1.3',
  dot3adAggConformance => '1.2.840.10006.300.43.2',
  dot3adAggGroups => '1.2.840.10006.300.43.2.1',
  dot3adAggCompliances => '1.2.840.10006.300.43.2.2',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'IEEE8023-LAG-MIB'} = {
  dot3adAggPortDebugMuxState => {
    '1' => 'detached',
    '2' => 'waiting',
    '3' => 'attached',
    '4' => 'collecting',
    '5' => 'distributing',
    '6' => 'collectingDistributing',
  },
  dot3adAggPortDebugRxState => {
    '1' => 'currentRx',
    '2' => 'expired',
    '3' => 'defaulted',
    '4' => 'initialize',
    '5' => 'lacpDisabled',
    '6' => 'portDisabled',
  },
  ChurnState => {
    '1' => 'noChurn',
    '2' => 'churn',
    '3' => 'churnMonitor',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::IFMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'IFMIB'} = {
  url => '',
  name => 'IFMIB',
};

#$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'IFMIB'} = 

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'IFMIB'} = {
  interfaces => '1.3.6.1.2.1.2',
  ifNumber => '1.3.6.1.2.1.2.1',
  ifTable => '1.3.6.1.2.1.2.2',
  ifEntry => '1.3.6.1.2.1.2.2.1',
  ifIndex => '1.3.6.1.2.1.2.2.1.1',
  ifDescr => '1.3.6.1.2.1.2.2.1.2',
  ifType => '1.3.6.1.2.1.2.2.1.3',
  ifTypeDefinition => 'IANAIFTYPE-MIB::IANAifType',
  ifMtu => '1.3.6.1.2.1.2.2.1.4',
  ifSpeed => '1.3.6.1.2.1.2.2.1.5',
  ifPhysAddress => '1.3.6.1.2.1.2.2.1.6',
  ifAdminStatus => '1.3.6.1.2.1.2.2.1.7',
  ifAdminStatusDefinition => 'IFMIB::ifAdminStatus',
  ifOperStatus => '1.3.6.1.2.1.2.2.1.8',
  ifOperStatusDefinition => 'IFMIB::ifOperStatus',
  ifLastChange => '1.3.6.1.2.1.2.2.1.9',
  ifInOctets => '1.3.6.1.2.1.2.2.1.10',
  ifInUcastPkts => '1.3.6.1.2.1.2.2.1.11',
  ifInNUcastPkts => '1.3.6.1.2.1.2.2.1.12',
  ifInDiscards => '1.3.6.1.2.1.2.2.1.13',
  ifInErrors => '1.3.6.1.2.1.2.2.1.14',
  ifInUnknownProtos => '1.3.6.1.2.1.2.2.1.15',
  ifOutOctets => '1.3.6.1.2.1.2.2.1.16',
  ifOutUcastPkts => '1.3.6.1.2.1.2.2.1.17',
  ifOutNUcastPkts => '1.3.6.1.2.1.2.2.1.18',
  ifOutDiscards => '1.3.6.1.2.1.2.2.1.19',
  ifOutErrors => '1.3.6.1.2.1.2.2.1.20',
  ifOutQLen => '1.3.6.1.2.1.2.2.1.21',
  ifSpecific => '1.3.6.1.2.1.2.2.1.22',
  ifMIB => '1.3.6.1.2.1.31',
  ifMIBObjects => '1.3.6.1.2.1.31.1',
  ifXTable => '1.3.6.1.2.1.31.1.1',
  ifXEntry => '1.3.6.1.2.1.31.1.1.1',
  ifName => '1.3.6.1.2.1.31.1.1.1.1',
  ifInMulticastPkts => '1.3.6.1.2.1.31.1.1.1.2',
  ifInBroadcastPkts => '1.3.6.1.2.1.31.1.1.1.3',
  ifOutMulticastPkts => '1.3.6.1.2.1.31.1.1.1.4',
  ifOutBroadcastPkts => '1.3.6.1.2.1.31.1.1.1.5',
  ifHCInOctets => '1.3.6.1.2.1.31.1.1.1.6',
  ifHCInUcastPkts => '1.3.6.1.2.1.31.1.1.1.7',
  ifHCInMulticastPkts => '1.3.6.1.2.1.31.1.1.1.8',
  ifHCInBroadcastPkts => '1.3.6.1.2.1.31.1.1.1.9',
  ifHCOutOctets => '1.3.6.1.2.1.31.1.1.1.10',
  ifHCOutUcastPkts => '1.3.6.1.2.1.31.1.1.1.11',
  ifHCOutMulticastPkts => '1.3.6.1.2.1.31.1.1.1.12',
  ifHCOutBroadcastPkts => '1.3.6.1.2.1.31.1.1.1.13',
  ifLinkUpDownTrapEnable => '1.3.6.1.2.1.31.1.1.1.14',
  ifLinkUpDownTrapEnableDefinition => 'IFMIB::ifLinkUpDownTrapEnable',
  ifHighSpeed => '1.3.6.1.2.1.31.1.1.1.15',
  ifPromiscuousMode => '1.3.6.1.2.1.31.1.1.1.16',
  ifConnectorPresent => '1.3.6.1.2.1.31.1.1.1.17',
  ifAlias => '1.3.6.1.2.1.31.1.1.1.18',
  ifCounterDiscontinuityTime => '1.3.6.1.2.1.31.1.1.1.19',
  ifStackTable => '1.3.6.1.2.1.31.1.2',
  ifStackEntry => '1.3.6.1.2.1.31.1.2.1',
  ifStackHigherLayer => '1.3.6.1.2.1.31.1.2.1.1',
  ifStackLowerLayer => '1.3.6.1.2.1.31.1.2.1.2',
  ifStackStatus => '1.3.6.1.2.1.31.1.2.1.3',
  ifStackStatusDefinition => 'SNMPv2-TC-v1-MIB::RowStatus',
  ifTestTable => '1.3.6.1.2.1.31.1.3',
  ifTestEntry => '1.3.6.1.2.1.31.1.3.1',
  ifTestId => '1.3.6.1.2.1.31.1.3.1.1',
  ifTestStatus => '1.3.6.1.2.1.31.1.3.1.2',
  ifTestStatusDefinition => 'IFMIB::ifTestStatus',
  ifTestType => '1.3.6.1.2.1.31.1.3.1.3',
  ifTestResult => '1.3.6.1.2.1.31.1.3.1.4',
  ifTestResultDefinition => 'IFMIB::ifTestResult',
  ifTestCode => '1.3.6.1.2.1.31.1.3.1.5',
  ifTestOwner => '1.3.6.1.2.1.31.1.3.1.6',
  ifRcvAddressTable => '1.3.6.1.2.1.31.1.4',
  ifRcvAddressEntry => '1.3.6.1.2.1.31.1.4.1',
  ifRcvAddressAddress => '1.3.6.1.2.1.31.1.4.1.1',
  ifRcvAddressStatus => '1.3.6.1.2.1.31.1.4.1.2',
  ifRcvAddressType => '1.3.6.1.2.1.31.1.4.1.3',
  ifRcvAddressTypeDefinition => 'IFMIB::ifRcvAddressType',
  ifTableLastChange => '1.3.6.1.2.1.31.1.5',
  ifStackLastChange => '1.3.6.1.2.1.31.1.6',
  ifConformance => '1.3.6.1.2.1.31.2',
  ifGroups => '1.3.6.1.2.1.31.2.1',
  ifCompliances => '1.3.6.1.2.1.31.2.2',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'IFMIB'} = {
  ifAdminStatus => {
    '1' => 'up',
    '2' => 'down',
    '3' => 'testing',
  },
  ifLinkUpDownTrapEnable => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  ifTestStatus => {
    '1' => 'notInUse',
    '2' => 'inUse',
  },
  ifOperStatus => {
    '1' => 'up',
    '2' => 'down',
    '3' => 'testing',
    '4' => 'unknown',
    '5' => 'dormant',
    '6' => 'notPresent',
    '7' => 'lowerLayerDown',
  },
  ifRcvAddressType => {
    '1' => 'other',
    '2' => 'volatile',
    '3' => 'nonVolatile',
  },
  ifTestResult => {
    '1' => 'none',
    '2' => 'success',
    '3' => 'inProgress',
    '4' => 'notSupported',
    '5' => 'unAbleToRun',
    '6' => 'aborted',
    '7' => 'failed',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::INETADDRESSMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'INET-ADDRESS-MIB'} = {
  url => '',
  name => 'INET-ADDRESS-MIB',
};

#$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'INET-ADDRESS-MIB'} =

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'INET-ADDRESS-MIB'} = {
  inetAddressMIB => '1.3.6.1.2.1.76',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'INET-ADDRESS-MIB'} = {
  InetAddressType => {
    0 => 'unknown',
    1 => 'ipv4',
    2 => 'ipv6',
    3 => 'ipv4z',
    4 => 'ipv6z',
    16 => 'dns',
  },
  InetAddressMaker => sub {
    # wenn die Adresse in den Indizes steckt, dann ruft man das hier
    # mit den Einzelteilen als Array auf
    my ($addrtype, $addrlen, @addroctets) = @_;
    if ($addrtype  && $addrtype eq "ipv6") {
      my $maxidx = $addrlen / 2 - 1;
      return join(":",
	  map {
	      my $idx = 2*$_;
	      sprintf("%02x", $addroctets[$idx]).
	      sprintf("%02x", $addroctets[$idx+1])
          } (0..$maxidx)
      );
      return join(":", map { sprintf "%02x", $_ } @addroctets[0..$addrlen-1]);
    } elsif ($addrtype  && $addrtype eq "ipv4") {
      return join(".", @addroctets[0..$addrlen-1]);
    } else {
      #use Data::Dumper;
#printf STDERR "------------------------------------------------\n";
#printf STDERR "%s\n", Data::Dumper::Dumper([$addr, $addrtype]);
#printf STDERR "..------------------------------------------------\n";
      return sprintf "type=%s, len=%s", $addrtype, $addrlen;
    }
  },
  InetAddress => sub {
    my ($addr, $addrtype) = @_;
    if ($addrtype  && $addrtype eq "ipv6") {
      return Monitoring::GLPlugin::SNMP::TableItem->new()->unhex_ipv6($addr);
    } elsif ($addrtype  && $addrtype eq "ipv4") {
      return Monitoring::GLPlugin::SNMP::TableItem->new()->unhex_ip($addr);
    } else {
      return "unsupported_address_format: ".$addrtype;
    }
  }
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::IPFORWARDMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'IP-FORWARD-MIB'} = {
  url => '',
  name => 'IP-FORWARD-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'IP-FORWARD-MIB'} =
    '1.3.6.1.2.1.4.24';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'IP-FORWARD-MIB'} = {
  ipForward => '1.3.6.1.2.1.4.24',
  ipForwardNumber => '1.3.6.1.2.1.4.24.1',
  ipForwardTable => '1.3.6.1.2.1.4.24.2',
  ipForwardEntry => '1.3.6.1.2.1.4.24.2.1',
  ipForwardDest => '1.3.6.1.2.1.4.24.2.1.1',
  ipForwardMask => '1.3.6.1.2.1.4.24.2.1.2',
  ipForwardPolicy => '1.3.6.1.2.1.4.24.2.1.3',
  ipForwardNextHop => '1.3.6.1.2.1.4.24.2.1.4',
  ipForwardIfIndex => '1.3.6.1.2.1.4.24.2.1.5',
  ipForwardType => '1.3.6.1.2.1.4.24.2.1.6',
  ipForwardTypeDefinition => 'IP-FORWARD-MIB::ipForwardType',
  ipForwardProto => '1.3.6.1.2.1.4.24.2.1.7',
  ipForwardProtoDefinition => 'IP-FORWARD-MIB::ipForwardProto',
  ipForwardAge => '1.3.6.1.2.1.4.24.2.1.8',
  ipForwardInfo => '1.3.6.1.2.1.4.24.2.1.9',
  ipForwardNextHopAS => '1.3.6.1.2.1.4.24.2.1.10',
  ipForwardMetric1 => '1.3.6.1.2.1.4.24.2.1.11',
  ipForwardMetric2 => '1.3.6.1.2.1.4.24.2.1.12',
  ipForwardMetric3 => '1.3.6.1.2.1.4.24.2.1.13',
  ipForwardMetric4 => '1.3.6.1.2.1.4.24.2.1.14',
  ipForwardMetric5 => '1.3.6.1.2.1.4.24.2.1.15',
  ipCidrRouteNumber => '1.3.6.1.2.1.4.24.3',
  ipCidrRouteTable => '1.3.6.1.2.1.4.24.4',
  ipCidrRouteEntry => '1.3.6.1.2.1.4.24.4.1',
  ipCidrRouteDest => '1.3.6.1.2.1.4.24.4.1.1',
  ipCidrRouteMask => '1.3.6.1.2.1.4.24.4.1.2',
  ipCidrRouteTos => '1.3.6.1.2.1.4.24.4.1.3',
  ipCidrRouteNextHop => '1.3.6.1.2.1.4.24.4.1.4',
  ipCidrRouteIfIndex => '1.3.6.1.2.1.4.24.4.1.5',
  ipCidrRouteType => '1.3.6.1.2.1.4.24.4.1.6',
  ipCidrRouteTypeDefinition => 'IP-FORWARD-MIB::ipCidrRouteType',
  ipCidrRouteProto => '1.3.6.1.2.1.4.24.4.1.7',
  ipCidrRouteProtoDefinition => 'IP-FORWARD-MIB::ipCidrRouteProto',
  ipCidrRouteAge => '1.3.6.1.2.1.4.24.4.1.8',
  ipCidrRouteInfo => '1.3.6.1.2.1.4.24.4.1.9',
  ipCidrRouteNextHopAS => '1.3.6.1.2.1.4.24.4.1.10',
  ipCidrRouteMetric1 => '1.3.6.1.2.1.4.24.4.1.11',
  ipCidrRouteMetric2 => '1.3.6.1.2.1.4.24.4.1.12',
  ipCidrRouteMetric3 => '1.3.6.1.2.1.4.24.4.1.13',
  ipCidrRouteMetric4 => '1.3.6.1.2.1.4.24.4.1.14',
  ipCidrRouteMetric5 => '1.3.6.1.2.1.4.24.4.1.15',
  ipCidrRouteStatus => '1.3.6.1.2.1.4.24.4.1.16',
  ipForwardConformance => '1.3.6.1.2.1.4.24.5',
  ipForwardGroups => '1.3.6.1.2.1.4.24.5.1',
  ipForwardCompliances => '1.3.6.1.2.1.4.24.5.2',
  inetCidrRouteNumber => '1.3.6.1.2.1.4.24.6',
  inetCidrRouteTable => '1.3.6.1.2.1.4.24.7',
  inetCidrRouteEntry => '1.3.6.1.2.1.4.24.7.1',
  inetCidrRouteDestType => '1.3.6.1.2.1.4.24.7.1.1',
  inetCidrRouteDest => '1.3.6.1.2.1.4.24.7.1.2',
  inetCidrRoutePfxLen => '1.3.6.1.2.1.4.24.7.1.3',
  inetCidrRoutePolicy => '1.3.6.1.2.1.4.24.7.1.4',
  inetCidrRouteNextHopType => '1.3.6.1.2.1.4.24.7.1.5',
  inetCidrRouteNextHop => '1.3.6.1.2.1.4.24.7.1.6',
  inetCidrRouteIfIndex => '1.3.6.1.2.1.4.24.7.1.7',
  inetCidrRouteType => '1.3.6.1.2.1.4.24.7.1.8',
  inetCidrRouteTypeDefinition => 'IP-FORWARD-MIB::inetCidrRouteType',
  inetCidrRouteProto => '1.3.6.1.2.1.4.24.7.1.9',
  inetCidrRouteProtoDefinition => 'IANA-RTPROTO-MIB::IANAipRouteProtocol',
  inetCidrRouteAge => '1.3.6.1.2.1.4.24.7.1.10',
  inetCidrRouteNextHopAS => '1.3.6.1.2.1.4.24.7.1.11',
  inetCidrRouteMetric1 => '1.3.6.1.2.1.4.24.7.1.12',
  inetCidrRouteMetric2 => '1.3.6.1.2.1.4.24.7.1.13',
  inetCidrRouteMetric3 => '1.3.6.1.2.1.4.24.7.1.14',
  inetCidrRouteMetric4 => '1.3.6.1.2.1.4.24.7.1.15',
  inetCidrRouteMetric5 => '1.3.6.1.2.1.4.24.7.1.16',
  inetCidrRouteStatus => '1.3.6.1.2.1.4.24.7.1.17',
  inetCidrRouteStatusDefinition => 'SNMPv2-TC-v1-MIB::RowStatus',
  inetCidrRouteDiscards => '1.3.6.1.2.1.4.24.8',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'IP-FORWARD-MIB'} = {
  inetCidrRouteType => {
    '1' => 'other',
    '2' => 'reject',
    '3' => 'local',
    '4' => 'remote',
    '5' => 'blackhole',
  },
  ipForwardProto => {
    '1' => 'other',
    '2' => 'local',
    '3' => 'netmgmt',
    '4' => 'icmp',
    '5' => 'egp',
    '6' => 'ggp',
    '7' => 'hello',
    '8' => 'rip',
    '9' => 'is-is',
    '10' => 'es-is',
    '11' => 'ciscoIgrp',
    '12' => 'bbnSpfIgp',
    '13' => 'ospf',
    '14' => 'bgp',
    '15' => 'idpr',
  },
  ipCidrRouteProto => {
    '1' => 'other',
    '2' => 'local',
    '3' => 'netmgmt',
    '4' => 'icmp',
    '5' => 'egp',
    '6' => 'ggp',
    '7' => 'hello',
    '8' => 'rip',
    '9' => 'isIs',
    '10' => 'esIs',
    '11' => 'ciscoIgrp',
    '12' => 'bbnSpfIgp',
    '13' => 'ospf',
    '14' => 'bgp',
    '15' => 'idpr',
    '16' => 'ciscoEigrp',
    '17' => 'dvmrp',
    '18' => 'rpl',
    '19' => 'dhcp',
    '20' => 'ttdp',
  },
  ipCidrRouteType => {
    '1' => 'other',
    '2' => 'reject',
    '3' => 'local',
    '4' => 'remote',
  },
  ipForwardType => {
    '1' => 'other',
    '2' => 'invalid',
    '3' => 'local',
    '4' => 'remote',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::IPMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'IP-MIB'} = {
  url => '',
  name => 'IP-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'IP-MIB'} =
    '1.3.6.1.2.1.4';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'IP-MIB'} = {
  'ip' => '1.3.6.1.2.1.4',
  'ipForwarding' => '1.3.6.1.2.1.4.1',
  'ipForwardingDefinition' => 'IP-MIB::ipForwarding',
  'ipDefaultTTL' => '1.3.6.1.2.1.4.2',
  'ipInReceives' => '1.3.6.1.2.1.4.3',
  'ipInHdrErrors' => '1.3.6.1.2.1.4.4',
  'ipInAddrErrors' => '1.3.6.1.2.1.4.5',
  'ipForwDatagrams' => '1.3.6.1.2.1.4.6',
  'ipInUnknownProtos' => '1.3.6.1.2.1.4.7',
  'ipInDiscards' => '1.3.6.1.2.1.4.8',
  'ipInDelivers' => '1.3.6.1.2.1.4.9',
  'ipOutRequests' => '1.3.6.1.2.1.4.10',
  'ipOutDiscards' => '1.3.6.1.2.1.4.11',
  'ipOutNoRoutes' => '1.3.6.1.2.1.4.12',
  'ipReasmTimeout' => '1.3.6.1.2.1.4.13',
  'ipReasmReqds' => '1.3.6.1.2.1.4.14',
  'ipReasmOKs' => '1.3.6.1.2.1.4.15',
  'ipReasmFails' => '1.3.6.1.2.1.4.16',
  'ipFragOKs' => '1.3.6.1.2.1.4.17',
  'ipFragFails' => '1.3.6.1.2.1.4.18',
  'ipFragCreates' => '1.3.6.1.2.1.4.19',
  'ipAddrTable' => '1.3.6.1.2.1.4.20',
  'ipAddrEntry' => '1.3.6.1.2.1.4.20.1',
  'ipAdEntAddr' => '1.3.6.1.2.1.4.20.1.1',
  'ipAdEntIfIndex' => '1.3.6.1.2.1.4.20.1.2',
  'ipAdEntNetMask' => '1.3.6.1.2.1.4.20.1.3',
  'ipAdEntBcastAddr' => '1.3.6.1.2.1.4.20.1.4',
  'ipAdEntReasmMaxSize' => '1.3.6.1.2.1.4.20.1.5',
  ############################################################
  # die ist eigentlich aus dieser MIB rausgeflogen. weil aber
  # im hintersten winkel von check_nwc_health ein fallback
  # auf diese tabelle zugreift, will ich nicht so sein.
  'ipRouteTable' => '1.3.6.1.2.1.4.21',
  'ipRouteEntry' => '1.3.6.1.2.1.4.21.1',
  'ipRouteDest' => '1.3.6.1.2.1.4.21.1.1',
  'ipRouteIfIndex' => '1.3.6.1.2.1.4.21.1.2',
  'ipRouteMetric1' => '1.3.6.1.2.1.4.21.1.3',
  'ipRouteMetric2' => '1.3.6.1.2.1.4.21.1.4',
  'ipRouteMetric3' => '1.3.6.1.2.1.4.21.1.5',
  'ipRouteMetric4' => '1.3.6.1.2.1.4.21.1.6',
  'ipRouteNextHop' => '1.3.6.1.2.1.4.21.1.7',
  'ipRouteType' => '1.3.6.1.2.1.4.21.1.8',
  'ipRouteProto' => '1.3.6.1.2.1.4.21.1.9',
  'ipRouteAge' => '1.3.6.1.2.1.4.21.1.10',
  'ipRouteMask' => '1.3.6.1.2.1.4.21.1.11',
  'ipRouteMetric5' => '1.3.6.1.2.1.4.21.1.12',
  'ipRouteInfo' => '1.3.6.1.2.1.4.21.1.13',
  ############################################################
  'ipNetToMediaTable' => '1.3.6.1.2.1.4.22',
  'ipNetToMediaEntry' => '1.3.6.1.2.1.4.22.1',
  'ipNetToMediaIfIndex' => '1.3.6.1.2.1.4.22.1.1',
  'ipNetToMediaPhysAddress' => '1.3.6.1.2.1.4.22.1.2',
  'ipNetToMediaNetAddress' => '1.3.6.1.2.1.4.22.1.3',
  'ipNetToMediaType' => '1.3.6.1.2.1.4.22.1.4',
  'ipNetToMediaTypeDefinition' => 'IP-MIB::ipNetToMediaType',
  'ipRoutingDiscards' => '1.3.6.1.2.1.4.23',
  'ipv6IpForwarding' => '1.3.6.1.2.1.4.25',
  'ipv6IpForwardingDefinition' => 'IP-MIB::ipv6IpForwarding',
  'ipv6IpDefaultHopLimit' => '1.3.6.1.2.1.4.26',
  'ipv4InterfaceTableLastChange' => '1.3.6.1.2.1.4.27',
  'ipv4InterfaceTable' => '1.3.6.1.2.1.4.28',
  'ipv4InterfaceEntry' => '1.3.6.1.2.1.4.28.1',
  'ipv4InterfaceIfIndex' => '1.3.6.1.2.1.4.28.1.1',
  'ipv4InterfaceReasmMaxSize' => '1.3.6.1.2.1.4.28.1.2',
  'ipv4InterfaceEnableStatus' => '1.3.6.1.2.1.4.28.1.3',
  'ipv4InterfaceEnableStatusDefinition' => 'IP-MIB::ipv4InterfaceEnableStatus',
  'ipv4InterfaceRetransmitTime' => '1.3.6.1.2.1.4.28.1.4',
  'ipv6InterfaceTableLastChange' => '1.3.6.1.2.1.4.29',
  'ipv6InterfaceTable' => '1.3.6.1.2.1.4.30',
  'ipv6InterfaceEntry' => '1.3.6.1.2.1.4.30.1',
  'ipv6InterfaceIfIndex' => '1.3.6.1.2.1.4.30.1.1',
  'ipv6InterfaceReasmMaxSize' => '1.3.6.1.2.1.4.30.1.2',
  'ipv6InterfaceIdentifier' => '1.3.6.1.2.1.4.30.1.3',
  'ipv6InterfaceEnableStatus' => '1.3.6.1.2.1.4.30.1.5',
  'ipv6InterfaceEnableStatusDefinition' => 'IP-MIB::ipv6InterfaceEnableStatus',
  'ipv6InterfaceReachableTime' => '1.3.6.1.2.1.4.30.1.6',
  'ipv6InterfaceRetransmitTime' => '1.3.6.1.2.1.4.30.1.7',
  'ipv6InterfaceForwarding' => '1.3.6.1.2.1.4.30.1.8',
  'ipv6InterfaceForwardingDefinition' => 'IP-MIB::ipv6InterfaceForwarding',
  'ipTrafficStats' => '1.3.6.1.2.1.4.31',
  'ipSystemStatsTable' => '1.3.6.1.2.1.4.31.1',
  'ipSystemStatsEntry' => '1.3.6.1.2.1.4.31.1.1',
  'ipSystemStatsIPVersion' => '1.3.6.1.2.1.4.31.1.1.1',
  'ipSystemStatsInReceives' => '1.3.6.1.2.1.4.31.1.1.3',
  'ipSystemStatsHCInReceives' => '1.3.6.1.2.1.4.31.1.1.4',
  'ipSystemStatsInOctets' => '1.3.6.1.2.1.4.31.1.1.5',
  'ipSystemStatsHCInOctets' => '1.3.6.1.2.1.4.31.1.1.6',
  'ipSystemStatsInHdrErrors' => '1.3.6.1.2.1.4.31.1.1.7',
  'ipSystemStatsInNoRoutes' => '1.3.6.1.2.1.4.31.1.1.8',
  'ipSystemStatsInAddrErrors' => '1.3.6.1.2.1.4.31.1.1.9',
  'ipSystemStatsInUnknownProtos' => '1.3.6.1.2.1.4.31.1.1.10',
  'ipSystemStatsInTruncatedPkts' => '1.3.6.1.2.1.4.31.1.1.11',
  'ipSystemStatsInForwDatagrams' => '1.3.6.1.2.1.4.31.1.1.12',
  'ipSystemStatsHCInForwDatagrams' => '1.3.6.1.2.1.4.31.1.1.13',
  'ipSystemStatsReasmReqds' => '1.3.6.1.2.1.4.31.1.1.14',
  'ipSystemStatsReasmOKs' => '1.3.6.1.2.1.4.31.1.1.15',
  'ipSystemStatsReasmFails' => '1.3.6.1.2.1.4.31.1.1.16',
  'ipSystemStatsInDiscards' => '1.3.6.1.2.1.4.31.1.1.17',
  'ipSystemStatsInDelivers' => '1.3.6.1.2.1.4.31.1.1.18',
  'ipSystemStatsHCInDelivers' => '1.3.6.1.2.1.4.31.1.1.19',
  'ipSystemStatsOutRequests' => '1.3.6.1.2.1.4.31.1.1.20',
  'ipSystemStatsHCOutRequests' => '1.3.6.1.2.1.4.31.1.1.21',
  'ipSystemStatsOutNoRoutes' => '1.3.6.1.2.1.4.31.1.1.22',
  'ipSystemStatsOutForwDatagrams' => '1.3.6.1.2.1.4.31.1.1.23',
  'ipSystemStatsHCOutForwDatagrams' => '1.3.6.1.2.1.4.31.1.1.24',
  'ipSystemStatsOutDiscards' => '1.3.6.1.2.1.4.31.1.1.25',
  'ipSystemStatsOutFragReqds' => '1.3.6.1.2.1.4.31.1.1.26',
  'ipSystemStatsOutFragOKs' => '1.3.6.1.2.1.4.31.1.1.27',
  'ipSystemStatsOutFragFails' => '1.3.6.1.2.1.4.31.1.1.28',
  'ipSystemStatsOutFragCreates' => '1.3.6.1.2.1.4.31.1.1.29',
  'ipSystemStatsOutTransmits' => '1.3.6.1.2.1.4.31.1.1.30',
  'ipSystemStatsHCOutTransmits' => '1.3.6.1.2.1.4.31.1.1.31',
  'ipSystemStatsOutOctets' => '1.3.6.1.2.1.4.31.1.1.32',
  'ipSystemStatsHCOutOctets' => '1.3.6.1.2.1.4.31.1.1.33',
  'ipSystemStatsInMcastPkts' => '1.3.6.1.2.1.4.31.1.1.34',
  'ipSystemStatsHCInMcastPkts' => '1.3.6.1.2.1.4.31.1.1.35',
  'ipSystemStatsInMcastOctets' => '1.3.6.1.2.1.4.31.1.1.36',
  'ipSystemStatsHCInMcastOctets' => '1.3.6.1.2.1.4.31.1.1.37',
  'ipSystemStatsOutMcastPkts' => '1.3.6.1.2.1.4.31.1.1.38',
  'ipSystemStatsHCOutMcastPkts' => '1.3.6.1.2.1.4.31.1.1.39',
  'ipSystemStatsOutMcastOctets' => '1.3.6.1.2.1.4.31.1.1.40',
  'ipSystemStatsHCOutMcastOctets' => '1.3.6.1.2.1.4.31.1.1.41',
  'ipSystemStatsInBcastPkts' => '1.3.6.1.2.1.4.31.1.1.42',
  'ipSystemStatsHCInBcastPkts' => '1.3.6.1.2.1.4.31.1.1.43',
  'ipSystemStatsOutBcastPkts' => '1.3.6.1.2.1.4.31.1.1.44',
  'ipSystemStatsHCOutBcastPkts' => '1.3.6.1.2.1.4.31.1.1.45',
  'ipSystemStatsDiscontinuityTime' => '1.3.6.1.2.1.4.31.1.1.46',
  'ipSystemStatsRefreshRate' => '1.3.6.1.2.1.4.31.1.1.47',
  'ipIfStatsTableLastChange' => '1.3.6.1.2.1.4.31.2',
  'ipIfStatsTable' => '1.3.6.1.2.1.4.31.3',
  'ipIfStatsEntry' => '1.3.6.1.2.1.4.31.3.1',
  'ipIfStatsIPVersion' => '1.3.6.1.2.1.4.31.3.1.1',
  'ipIfStatsIfIndex' => '1.3.6.1.2.1.4.31.3.1.2',
  'ipIfStatsInReceives' => '1.3.6.1.2.1.4.31.3.1.3',
  'ipIfStatsHCInReceives' => '1.3.6.1.2.1.4.31.3.1.4',
  'ipIfStatsInOctets' => '1.3.6.1.2.1.4.31.3.1.5',
  'ipIfStatsHCInOctets' => '1.3.6.1.2.1.4.31.3.1.6',
  'ipIfStatsInHdrErrors' => '1.3.6.1.2.1.4.31.3.1.7',
  'ipIfStatsInNoRoutes' => '1.3.6.1.2.1.4.31.3.1.8',
  'ipIfStatsInAddrErrors' => '1.3.6.1.2.1.4.31.3.1.9',
  'ipIfStatsInUnknownProtos' => '1.3.6.1.2.1.4.31.3.1.10',
  'ipIfStatsInTruncatedPkts' => '1.3.6.1.2.1.4.31.3.1.11',
  'ipIfStatsInForwDatagrams' => '1.3.6.1.2.1.4.31.3.1.12',
  'ipIfStatsHCInForwDatagrams' => '1.3.6.1.2.1.4.31.3.1.13',
  'ipIfStatsReasmReqds' => '1.3.6.1.2.1.4.31.3.1.14',
  'ipIfStatsReasmOKs' => '1.3.6.1.2.1.4.31.3.1.15',
  'ipIfStatsReasmFails' => '1.3.6.1.2.1.4.31.3.1.16',
  'ipIfStatsInDiscards' => '1.3.6.1.2.1.4.31.3.1.17',
  'ipIfStatsInDelivers' => '1.3.6.1.2.1.4.31.3.1.18',
  'ipIfStatsHCInDelivers' => '1.3.6.1.2.1.4.31.3.1.19',
  'ipIfStatsOutRequests' => '1.3.6.1.2.1.4.31.3.1.20',
  'ipIfStatsHCOutRequests' => '1.3.6.1.2.1.4.31.3.1.21',
  'ipIfStatsOutForwDatagrams' => '1.3.6.1.2.1.4.31.3.1.23',
  'ipIfStatsHCOutForwDatagrams' => '1.3.6.1.2.1.4.31.3.1.24',
  'ipIfStatsOutDiscards' => '1.3.6.1.2.1.4.31.3.1.25',
  'ipIfStatsOutFragReqds' => '1.3.6.1.2.1.4.31.3.1.26',
  'ipIfStatsOutFragOKs' => '1.3.6.1.2.1.4.31.3.1.27',
  'ipIfStatsOutFragFails' => '1.3.6.1.2.1.4.31.3.1.28',
  'ipIfStatsOutFragCreates' => '1.3.6.1.2.1.4.31.3.1.29',
  'ipIfStatsOutTransmits' => '1.3.6.1.2.1.4.31.3.1.30',
  'ipIfStatsHCOutTransmits' => '1.3.6.1.2.1.4.31.3.1.31',
  'ipIfStatsOutOctets' => '1.3.6.1.2.1.4.31.3.1.32',
  'ipIfStatsHCOutOctets' => '1.3.6.1.2.1.4.31.3.1.33',
  'ipIfStatsInMcastPkts' => '1.3.6.1.2.1.4.31.3.1.34',
  'ipIfStatsHCInMcastPkts' => '1.3.6.1.2.1.4.31.3.1.35',
  'ipIfStatsInMcastOctets' => '1.3.6.1.2.1.4.31.3.1.36',
  'ipIfStatsHCInMcastOctets' => '1.3.6.1.2.1.4.31.3.1.37',
  'ipIfStatsOutMcastPkts' => '1.3.6.1.2.1.4.31.3.1.38',
  'ipIfStatsHCOutMcastPkts' => '1.3.6.1.2.1.4.31.3.1.39',
  'ipIfStatsOutMcastOctets' => '1.3.6.1.2.1.4.31.3.1.40',
  'ipIfStatsHCOutMcastOctets' => '1.3.6.1.2.1.4.31.3.1.41',
  'ipIfStatsInBcastPkts' => '1.3.6.1.2.1.4.31.3.1.42',
  'ipIfStatsHCInBcastPkts' => '1.3.6.1.2.1.4.31.3.1.43',
  'ipIfStatsOutBcastPkts' => '1.3.6.1.2.1.4.31.3.1.44',
  'ipIfStatsHCOutBcastPkts' => '1.3.6.1.2.1.4.31.3.1.45',
  'ipIfStatsDiscontinuityTime' => '1.3.6.1.2.1.4.31.3.1.46',
  'ipIfStatsRefreshRate' => '1.3.6.1.2.1.4.31.3.1.47',
  'ipAddressPrefixTable' => '1.3.6.1.2.1.4.32',
  'ipAddressPrefixEntry' => '1.3.6.1.2.1.4.32.1',
  'ipAddressPrefixIfIndex' => '1.3.6.1.2.1.4.32.1.1',
  'ipAddressPrefixType' => '1.3.6.1.2.1.4.32.1.2',
  'ipAddressPrefixPrefix' => '1.3.6.1.2.1.4.32.1.3',
  'ipAddressPrefixLength' => '1.3.6.1.2.1.4.32.1.4',
  'ipAddressPrefixOrigin' => '1.3.6.1.2.1.4.32.1.5',
  'ipAddressPrefixOriginDefinition' => 'IP-MIB::IpAddressPrefixOriginTC',
  'ipAddressPrefixOnLinkFlag' => '1.3.6.1.2.1.4.32.1.6',
  'ipAddressPrefixAutonomousFlag' => '1.3.6.1.2.1.4.32.1.7',
  'ipAddressPrefixAdvPreferredLifetime' => '1.3.6.1.2.1.4.32.1.8',
  'ipAddressPrefixAdvValidLifetime' => '1.3.6.1.2.1.4.32.1.9',
  'ipAddressSpinLock' => '1.3.6.1.2.1.4.33',
  'ipAddressTable' => '1.3.6.1.2.1.4.34',
  'ipAddressEntry' => '1.3.6.1.2.1.4.34.1',
  'ipAddressAddrType' => '1.3.6.1.2.1.4.34.1.1',
  'ipAddressAddr' => '1.3.6.1.2.1.4.34.1.2',
  'ipAddressIfIndex' => '1.3.6.1.2.1.4.34.1.3',
  'ipAddressType' => '1.3.6.1.2.1.4.34.1.4',
  'ipAddressTypeDefinition' => 'IP-MIB::ipAddressType',
  'ipAddressPrefix' => '1.3.6.1.2.1.4.34.1.5',
  'ipAddressOrigin' => '1.3.6.1.2.1.4.34.1.6',
  'ipAddressOriginDefinition' => 'IP-MIB::IpAddressOriginTC',
  'ipAddressStatus' => '1.3.6.1.2.1.4.34.1.7',
  'ipAddressStatusDefinition' => 'IP-MIB::IpAddressStatusTC',
  'ipAddressCreated' => '1.3.6.1.2.1.4.34.1.8',
  'ipAddressLastChanged' => '1.3.6.1.2.1.4.34.1.9',
  'ipAddressRowStatus' => '1.3.6.1.2.1.4.34.1.10',
  'ipAddressStorageType' => '1.3.6.1.2.1.4.34.1.11',
  'ipNetToPhysicalTable' => '1.3.6.1.2.1.4.35',
  'ipNetToPhysicalEntry' => '1.3.6.1.2.1.4.35.1',
  'ipNetToPhysicalIfIndex' => '1.3.6.1.2.1.4.35.1.1',
  'ipNetToPhysicalNetAddressType' => '1.3.6.1.2.1.4.35.1.2',
  'ipNetToPhysicalNetAddress' => '1.3.6.1.2.1.4.35.1.3',
  'ipNetToPhysicalPhysAddress' => '1.3.6.1.2.1.4.35.1.4',
  'ipNetToPhysicalLastUpdated' => '1.3.6.1.2.1.4.35.1.5',
  'ipNetToPhysicalType' => '1.3.6.1.2.1.4.35.1.6',
  'ipNetToPhysicalTypeDefinition' => 'IP-MIB::ipNetToPhysicalType',
  'ipNetToPhysicalState' => '1.3.6.1.2.1.4.35.1.7',
  'ipNetToPhysicalStateDefinition' => 'IP-MIB::ipNetToPhysicalState',
  'ipNetToPhysicalRowStatus' => '1.3.6.1.2.1.4.35.1.8',
  'ipv6ScopeZoneIndexTable' => '1.3.6.1.2.1.4.36',
  'ipv6ScopeZoneIndexEntry' => '1.3.6.1.2.1.4.36.1',
  'ipv6ScopeZoneIndexIfIndex' => '1.3.6.1.2.1.4.36.1.1',
  'ipv6ScopeZoneIndexLinkLocal' => '1.3.6.1.2.1.4.36.1.2',
  'ipv6ScopeZoneIndex3' => '1.3.6.1.2.1.4.36.1.3',
  'ipv6ScopeZoneIndexAdminLocal' => '1.3.6.1.2.1.4.36.1.4',
  'ipv6ScopeZoneIndexSiteLocal' => '1.3.6.1.2.1.4.36.1.5',
  'ipv6ScopeZoneIndex6' => '1.3.6.1.2.1.4.36.1.6',
  'ipv6ScopeZoneIndex7' => '1.3.6.1.2.1.4.36.1.7',
  'ipv6ScopeZoneIndexOrganizationLocal' => '1.3.6.1.2.1.4.36.1.8',
  'ipv6ScopeZoneIndex9' => '1.3.6.1.2.1.4.36.1.9',
  'ipv6ScopeZoneIndexA' => '1.3.6.1.2.1.4.36.1.10',
  'ipv6ScopeZoneIndexB' => '1.3.6.1.2.1.4.36.1.11',
  'ipv6ScopeZoneIndexC' => '1.3.6.1.2.1.4.36.1.12',
  'ipv6ScopeZoneIndexD' => '1.3.6.1.2.1.4.36.1.13',
  'ipDefaultRouterTable' => '1.3.6.1.2.1.4.37',
  'ipDefaultRouterEntry' => '1.3.6.1.2.1.4.37.1',
  'ipDefaultRouterAddressType' => '1.3.6.1.2.1.4.37.1.1',
  'ipDefaultRouterAddress' => '1.3.6.1.2.1.4.37.1.2',
  'ipDefaultRouterIfIndex' => '1.3.6.1.2.1.4.37.1.3',
  'ipDefaultRouterLifetime' => '1.3.6.1.2.1.4.37.1.4',
  'ipDefaultRouterPreference' => '1.3.6.1.2.1.4.37.1.5',
  'ipDefaultRouterPreferenceDefinition' => 'IP-MIB::ipDefaultRouterPreference',
  'ipv6RouterAdvertSpinLock' => '1.3.6.1.2.1.4.38',
  'ipv6RouterAdvertTable' => '1.3.6.1.2.1.4.39',
  'ipv6RouterAdvertEntry' => '1.3.6.1.2.1.4.39.1',
  'ipv6RouterAdvertIfIndex' => '1.3.6.1.2.1.4.39.1.1',
  'ipv6RouterAdvertSendAdverts' => '1.3.6.1.2.1.4.39.1.2',
  'ipv6RouterAdvertMaxInterval' => '1.3.6.1.2.1.4.39.1.3',
  'ipv6RouterAdvertMinInterval' => '1.3.6.1.2.1.4.39.1.4',
  'ipv6RouterAdvertManagedFlag' => '1.3.6.1.2.1.4.39.1.5',
  'ipv6RouterAdvertOtherConfigFlag' => '1.3.6.1.2.1.4.39.1.6',
  'ipv6RouterAdvertLinkMTU' => '1.3.6.1.2.1.4.39.1.7',
  'ipv6RouterAdvertReachableTime' => '1.3.6.1.2.1.4.39.1.8',
  'ipv6RouterAdvertRetransmitTime' => '1.3.6.1.2.1.4.39.1.9',
  'ipv6RouterAdvertCurHopLimit' => '1.3.6.1.2.1.4.39.1.10',
  'ipv6RouterAdvertDefaultLifetime' => '1.3.6.1.2.1.4.39.1.11',
  'ipv6RouterAdvertRowStatus' => '1.3.6.1.2.1.4.39.1.12',
  'icmp' => '1.3.6.1.2.1.5',
  'icmpInMsgs' => '1.3.6.1.2.1.5.1',
  'icmpInErrors' => '1.3.6.1.2.1.5.2',
  'icmpInDestUnreachs' => '1.3.6.1.2.1.5.3',
  'icmpInTimeExcds' => '1.3.6.1.2.1.5.4',
  'icmpInParmProbs' => '1.3.6.1.2.1.5.5',
  'icmpInSrcQuenchs' => '1.3.6.1.2.1.5.6',
  'icmpInRedirects' => '1.3.6.1.2.1.5.7',
  'icmpInEchos' => '1.3.6.1.2.1.5.8',
  'icmpInEchoReps' => '1.3.6.1.2.1.5.9',
  'icmpInTimestamps' => '1.3.6.1.2.1.5.10',
  'icmpInTimestampReps' => '1.3.6.1.2.1.5.11',
  'icmpInAddrMasks' => '1.3.6.1.2.1.5.12',
  'icmpInAddrMaskReps' => '1.3.6.1.2.1.5.13',
  'icmpOutMsgs' => '1.3.6.1.2.1.5.14',
  'icmpOutErrors' => '1.3.6.1.2.1.5.15',
  'icmpOutDestUnreachs' => '1.3.6.1.2.1.5.16',
  'icmpOutTimeExcds' => '1.3.6.1.2.1.5.17',
  'icmpOutParmProbs' => '1.3.6.1.2.1.5.18',
  'icmpOutSrcQuenchs' => '1.3.6.1.2.1.5.19',
  'icmpOutRedirects' => '1.3.6.1.2.1.5.20',
  'icmpOutEchos' => '1.3.6.1.2.1.5.21',
  'icmpOutEchoReps' => '1.3.6.1.2.1.5.22',
  'icmpOutTimestamps' => '1.3.6.1.2.1.5.23',
  'icmpOutTimestampReps' => '1.3.6.1.2.1.5.24',
  'icmpOutAddrMasks' => '1.3.6.1.2.1.5.25',
  'icmpOutAddrMaskReps' => '1.3.6.1.2.1.5.26',
  'icmpStatsTable' => '1.3.6.1.2.1.5.29',
  'icmpStatsEntry' => '1.3.6.1.2.1.5.29.1',
  'icmpStatsIPVersion' => '1.3.6.1.2.1.5.29.1.1',
  'icmpStatsInMsgs' => '1.3.6.1.2.1.5.29.1.2',
  'icmpStatsInErrors' => '1.3.6.1.2.1.5.29.1.3',
  'icmpStatsOutMsgs' => '1.3.6.1.2.1.5.29.1.4',
  'icmpStatsOutErrors' => '1.3.6.1.2.1.5.29.1.5',
  'icmpMsgStatsTable' => '1.3.6.1.2.1.5.30',
  'icmpMsgStatsEntry' => '1.3.6.1.2.1.5.30.1',
  'icmpMsgStatsIPVersion' => '1.3.6.1.2.1.5.30.1.1',
  'icmpMsgStatsType' => '1.3.6.1.2.1.5.30.1.2',
  'icmpMsgStatsInPkts' => '1.3.6.1.2.1.5.30.1.3',
  'icmpMsgStatsOutPkts' => '1.3.6.1.2.1.5.30.1.4',
  'ipMIB' => '1.3.6.1.2.1.48',
  'ipMIBConformance' => '1.3.6.1.2.1.48.2',
  'ipMIBCompliances' => '1.3.6.1.2.1.48.2.1',
  'ipMIBGroups' => '1.3.6.1.2.1.48.2.2',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'IP-MIB'} = {
  'IpAddressStatusTC' => {
    '1' => 'preferred',
    '2' => 'deprecated',
    '3' => 'invalid',
    '4' => 'inaccessible',
    '5' => 'unknown',
    '6' => 'tentative',
    '7' => 'duplicate',
    '8' => 'optimistic',
  },
  'ipv6InterfaceForwarding' => {
    '1' => 'forwarding',
    '2' => 'notForwarding',
  },
  'ipNetToPhysicalType' => {
    '1' => 'other',
    '2' => 'invalid',
    '3' => 'dynamic',
    '4' => 'static',
    '5' => 'local',
  },
  'ipv6IpForwarding' => {
    '1' => 'forwarding',
    '2' => 'notForwarding',
  },
  'ipForwarding' => {
    '1' => 'forwarding',
    '2' => 'notForwarding',
  },
  'ipNetToMediaType' => {
    '1' => 'other',
    '2' => 'invalid',
    '3' => 'dynamic',
    '4' => 'static',
  },
  'ipDefaultRouterPreference' => {
    '0' => 'medium',
    '1' => 'high',
  },
  'ipv4InterfaceEnableStatus' => {
    '1' => 'up',
    '2' => 'down',
  },
  'IpAddressOriginTC' => {
    '1' => 'other',
    '2' => 'manual',
    '4' => 'dhcp',
    '5' => 'linklayer',
    '6' => 'random',
  },
  'ipAddressType' => {
    '1' => 'unicast',
    '2' => 'anycast',
    '3' => 'broadcast',
  },
  'ipNetToPhysicalState' => {
    '1' => 'reachable',
    '2' => 'stale',
    '3' => 'delay',
    '4' => 'probe',
    '5' => 'invalid',
    '6' => 'unknown',
    '7' => 'incomplete',
  },
  'ipv6InterfaceEnableStatus' => {
    '1' => 'up',
    '2' => 'down',
  },
  'IpAddressPrefixOriginTC' => {
    '1' => 'other',
    '2' => 'manual',
    '3' => 'wellknown',
    '4' => 'dhcp',
    '5' => 'routeradv',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::JUNIPERALARMMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'JUNIPER-ALARM-MIB'} = {
  url => '',
  name => 'JUNIPER-ALARM-MIB',
};

#$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'JUNIPER-ALARM-MIB'} =

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'JUNIPER-ALARM-MIB'} = {
  jnxAlarms => '1.3.6.1.4.1.2636.3.4',
  jnxCraftAlarms => '1.3.6.1.4.1.2636.3.4.2',
  jnxAlarmRelayMode => '1.3.6.1.4.1.2636.3.4.2.1',
  jnxAlarmRelayModeDefinition => 'JUNIPER-ALARM-MIB::jnxAlarmRelayMode',
  jnxYellowAlarms => '1.3.6.1.4.1.2636.3.4.2.2',
  jnxYellowAlarmState => '1.3.6.1.4.1.2636.3.4.2.2.1',
  jnxYellowAlarmStateDefinition => 'JUNIPER-ALARM-MIB::jnxYellowAlarmState',
  jnxYellowAlarmCount => '1.3.6.1.4.1.2636.3.4.2.2.2',
  jnxYellowAlarmLastChange => '1.3.6.1.4.1.2636.3.4.2.2.3',
  jnxRedAlarms => '1.3.6.1.4.1.2636.3.4.2.3',
  jnxRedAlarmState => '1.3.6.1.4.1.2636.3.4.2.3.1',
  jnxRedAlarmStateDefinition => 'JUNIPER-ALARM-MIB::jnxRedAlarmState',
  jnxRedAlarmCount => '1.3.6.1.4.1.2636.3.4.2.3.2',
  jnxRedAlarmLastChange => '1.3.6.1.4.1.2636.3.4.2.3.3',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'JUNIPER-ALARM-MIB'} = {
  jnxRedAlarmState => {
    '1' => 'other',
    '2' => 'off',
    '3' => 'on',
  },
  jnxYellowAlarmState => {
    '1' => 'other',
    '2' => 'off',
    '3' => 'on',
  },
  jnxAlarmRelayMode => {
    '1' => 'other',
    '2' => 'passOn',
    '3' => 'cutOff',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::JUNIPERMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'JUNIPER-MIB'} = {
  url => '',
  name => 'JUNIPER-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'JUNIPER-MIB'} =
  '1.3.6.1.4.1.2636.3.1';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'JUNIPER-MIB'} = {
  jnxBoxAnatomy => '1.3.6.1.4.1.2636.3.1',
  jnxBoxClass => '1.3.6.1.4.1.2636.3.1.1',
  jnxBoxDescr => '1.3.6.1.4.1.2636.3.1.2',
  jnxBoxSerialNo => '1.3.6.1.4.1.2636.3.1.3',
  jnxBoxRevision => '1.3.6.1.4.1.2636.3.1.4',
  jnxBoxInstalled => '1.3.6.1.4.1.2636.3.1.5',
  jnxContainersTable => '1.3.6.1.4.1.2636.3.1.6',
  jnxContainersEntry => '1.3.6.1.4.1.2636.3.1.6.1',
  jnxContainersIndex => '1.3.6.1.4.1.2636.3.1.6.1.1',
  jnxContainersView => '1.3.6.1.4.1.2636.3.1.6.1.2',
  jnxContainersLevel => '1.3.6.1.4.1.2636.3.1.6.1.3',
  jnxContainersWithin => '1.3.6.1.4.1.2636.3.1.6.1.4',
  jnxContainersType => '1.3.6.1.4.1.2636.3.1.6.1.5',
  jnxContainersDescr => '1.3.6.1.4.1.2636.3.1.6.1.6',
  jnxContainersCount => '1.3.6.1.4.1.2636.3.1.6.1.7',
  jnxContentsLastChange => '1.3.6.1.4.1.2636.3.1.7',
  jnxContentsTable => '1.3.6.1.4.1.2636.3.1.8',
  jnxContentsEntry => '1.3.6.1.4.1.2636.3.1.8.1',
  jnxContentsContainerIndex => '1.3.6.1.4.1.2636.3.1.8.1.1',
  jnxContentsL1Index => '1.3.6.1.4.1.2636.3.1.8.1.2',
  jnxContentsL2Index => '1.3.6.1.4.1.2636.3.1.8.1.3',
  jnxContentsL3Index => '1.3.6.1.4.1.2636.3.1.8.1.4',
  jnxContentsType => '1.3.6.1.4.1.2636.3.1.8.1.5',
  jnxContentsDescr => '1.3.6.1.4.1.2636.3.1.8.1.6',
  jnxContentsSerialNo => '1.3.6.1.4.1.2636.3.1.8.1.7',
  jnxContentsRevision => '1.3.6.1.4.1.2636.3.1.8.1.8',
  jnxContentsInstalled => '1.3.6.1.4.1.2636.3.1.8.1.9',
  jnxContentsPartNo => '1.3.6.1.4.1.2636.3.1.8.1.10',
  jnxContentsChassisId => '1.3.6.1.4.1.2636.3.1.8.1.11',
  jnxContentsChassisIdDefinition => 'JUNIPER-MIB::JnxChassisId',
  jnxContentsChassisDescr => '1.3.6.1.4.1.2636.3.1.8.1.12',
  jnxContentsChassisCleiCode => '1.3.6.1.4.1.2636.3.1.8.1.13',
  jnxLEDLastChange => '1.3.6.1.4.1.2636.3.1.9',
  jnxLEDTable => '1.3.6.1.4.1.2636.3.1.10',
  jnxLEDEntry => '1.3.6.1.4.1.2636.3.1.10.1',
  jnxLEDAssociateTable => '1.3.6.1.4.1.2636.3.1.10.1.1',
  jnxLEDAssociateTableDefinition => 'JUNIPER-MIB::jnxLEDAssociateTable',
  jnxLEDAssociateIndex => '1.3.6.1.4.1.2636.3.1.10.1.2',
  jnxLEDL1Index => '1.3.6.1.4.1.2636.3.1.10.1.3',
  jnxLEDL2Index => '1.3.6.1.4.1.2636.3.1.10.1.4',
  jnxLEDL3Index => '1.3.6.1.4.1.2636.3.1.10.1.5',
  jnxLEDOriginator => '1.3.6.1.4.1.2636.3.1.10.1.6',
  jnxLEDDescr => '1.3.6.1.4.1.2636.3.1.10.1.7',
  jnxLEDState => '1.3.6.1.4.1.2636.3.1.10.1.8',
  jnxLEDStateDefinition => 'JUNIPER-MIB::jnxLEDState',
  jnxLEDStateOrdered => '1.3.6.1.4.1.2636.3.1.10.1.9',
  jnxLEDStateOrderedDefinition => 'JUNIPER-MIB::jnxLEDStateOrdered',
  jnxFilledLastChange => '1.3.6.1.4.1.2636.3.1.11',
  jnxFilledTable => '1.3.6.1.4.1.2636.3.1.12',
  jnxFilledEntry => '1.3.6.1.4.1.2636.3.1.12.1',
  jnxFilledContainerIndex => '1.3.6.1.4.1.2636.3.1.12.1.1',
  jnxFilledL1Index => '1.3.6.1.4.1.2636.3.1.12.1.2',
  jnxFilledL2Index => '1.3.6.1.4.1.2636.3.1.12.1.3',
  jnxFilledL3Index => '1.3.6.1.4.1.2636.3.1.12.1.4',
  jnxFilledDescr => '1.3.6.1.4.1.2636.3.1.12.1.5',
  jnxFilledState => '1.3.6.1.4.1.2636.3.1.12.1.6',
  jnxFilledStateDefinition => 'JUNIPER-MIB::jnxFilledState',
  jnxFilledChassisId => '1.3.6.1.4.1.2636.3.1.12.1.7',
  jnxFilledChassisIdDefinition => 'JUNIPER-MIB::JnxChassisId',
  jnxFilledChassisDescr => '1.3.6.1.4.1.2636.3.1.12.1.8',
  jnxOperatingTable => '1.3.6.1.4.1.2636.3.1.13',
  jnxOperatingEntry => '1.3.6.1.4.1.2636.3.1.13.1',
  jnxOperatingContentsIndex => '1.3.6.1.4.1.2636.3.1.13.1.1',
  jnxOperatingL1Index => '1.3.6.1.4.1.2636.3.1.13.1.2',
  jnxOperatingL2Index => '1.3.6.1.4.1.2636.3.1.13.1.3',
  jnxOperatingL3Index => '1.3.6.1.4.1.2636.3.1.13.1.4',
  jnxOperatingDescr => '1.3.6.1.4.1.2636.3.1.13.1.5',
  jnxOperatingState => '1.3.6.1.4.1.2636.3.1.13.1.6',
  jnxOperatingStateDefinition => 'JUNIPER-MIB::jnxOperatingState',
  jnxOperatingTemp => '1.3.6.1.4.1.2636.3.1.13.1.7',
  jnxOperatingCPU => '1.3.6.1.4.1.2636.3.1.13.1.8',
  jnxOperatingISR => '1.3.6.1.4.1.2636.3.1.13.1.9',
  jnxOperatingDRAMSize => '1.3.6.1.4.1.2636.3.1.13.1.10',
  jnxOperatingBuffer => '1.3.6.1.4.1.2636.3.1.13.1.11',
  jnxOperatingHeap => '1.3.6.1.4.1.2636.3.1.13.1.12',
  jnxOperatingUpTime => '1.3.6.1.4.1.2636.3.1.13.1.13',
  jnxOperatingLastRestart => '1.3.6.1.4.1.2636.3.1.13.1.14',
  jnxOperatingMemory => '1.3.6.1.4.1.2636.3.1.13.1.15',
  jnxOperatingStateOrdered => '1.3.6.1.4.1.2636.3.1.13.1.16',
  jnxOperatingStateOrderedDefinition => 'JUNIPER-MIB::jnxOperatingStateOrdered',
  jnxOperatingChassisId => '1.3.6.1.4.1.2636.3.1.13.1.17',
  jnxOperatingChassisIdDefinition => 'JUNIPER-MIB::JnxChassisId',
  jnxOperatingChassisDescr => '1.3.6.1.4.1.2636.3.1.13.1.18',
  jnxOperatingRestartTime => '1.3.6.1.4.1.2636.3.1.13.1.19',
  jnxOperatingRestartTimeDefinition => 'MIB-2-MIB::DateAndTime',
  jnxRedundancyTable => '1.3.6.1.4.1.2636.3.1.14',
  jnxRedundancyEntry => '1.3.6.1.4.1.2636.3.1.14.1',
  jnxRedundancyContentsIndex => '1.3.6.1.4.1.2636.3.1.14.1.1',
  jnxRedundancyL1Index => '1.3.6.1.4.1.2636.3.1.14.1.2',
  jnxRedundancyL2Index => '1.3.6.1.4.1.2636.3.1.14.1.3',
  jnxRedundancyL3Index => '1.3.6.1.4.1.2636.3.1.14.1.4',
  jnxRedundancyDescr => '1.3.6.1.4.1.2636.3.1.14.1.5',
  jnxRedundancyConfig => '1.3.6.1.4.1.2636.3.1.14.1.6',
  jnxRedundancyConfigDefinition => 'JUNIPER-MIB::jnxRedundancyConfig',
  jnxRedundancyState => '1.3.6.1.4.1.2636.3.1.14.1.7',
  jnxRedundancyStateDefinition => 'JUNIPER-MIB::jnxRedundancyState',
  jnxRedundancySwitchoverCount => '1.3.6.1.4.1.2636.3.1.14.1.8',
  jnxRedundancySwitchoverTime => '1.3.6.1.4.1.2636.3.1.14.1.9',
  jnxRedundancySwitchoverReason => '1.3.6.1.4.1.2636.3.1.14.1.10',
  jnxRedundancySwitchoverReasonDefinition => 'JUNIPER-MIB::jnxRedundancySwitchoverReason',
  jnxRedundancyKeepaliveHeartbeat => '1.3.6.1.4.1.2636.3.1.14.1.11',
  jnxRedundancyKeepaliveTimeout => '1.3.6.1.4.1.2636.3.1.14.1.12',
  jnxRedundancyKeepaliveElapsed => '1.3.6.1.4.1.2636.3.1.14.1.13',
  jnxRedundancyKeepaliveLoss => '1.3.6.1.4.1.2636.3.1.14.1.14',
  jnxRedundancyChassisId => '1.3.6.1.4.1.2636.3.1.14.1.15',
  jnxRedundancyChassisIdDefinition => 'JUNIPER-MIB::JnxChassisId',
  jnxRedundancyChassisDescr => '1.3.6.1.4.1.2636.3.1.14.1.16',
  jnxFruTable => '1.3.6.1.4.1.2636.3.1.15',
  jnxFruEntry => '1.3.6.1.4.1.2636.3.1.15.1',
  jnxFruContentsIndex => '1.3.6.1.4.1.2636.3.1.15.1.1',
  jnxFruL1Index => '1.3.6.1.4.1.2636.3.1.15.1.2',
  jnxFruL2Index => '1.3.6.1.4.1.2636.3.1.15.1.3',
  jnxFruL3Index => '1.3.6.1.4.1.2636.3.1.15.1.4',
  jnxFruName => '1.3.6.1.4.1.2636.3.1.15.1.5',
  jnxFruType => '1.3.6.1.4.1.2636.3.1.15.1.6',
  jnxFruTypeDefinition => 'JUNIPER-MIB::jnxFruType',
  jnxFruSlot => '1.3.6.1.4.1.2636.3.1.15.1.7',
  jnxFruState => '1.3.6.1.4.1.2636.3.1.15.1.8',
  jnxFruStateDefinition => 'JUNIPER-MIB::jnxFruState',
  jnxFruTemp => '1.3.6.1.4.1.2636.3.1.15.1.9',
  jnxFruOfflineReason => '1.3.6.1.4.1.2636.3.1.15.1.10',
  jnxFruOfflineReasonDefinition => 'JUNIPER-MIB::jnxFruOfflineReason',
  jnxFruLastPowerOff => '1.3.6.1.4.1.2636.3.1.15.1.11',
  jnxFruLastPowerOn => '1.3.6.1.4.1.2636.3.1.15.1.12',
  jnxFruPowerUpTime => '1.3.6.1.4.1.2636.3.1.15.1.13',
  jnxFruChassisId => '1.3.6.1.4.1.2636.3.1.15.1.14',
  jnxFruChassisIdDefinition => 'JUNIPER-MIB::JnxChassisId',
  jnxFruChassisDescr => '1.3.6.1.4.1.2636.3.1.15.1.15',
  jnxFruPsdAssignment => '1.3.6.1.4.1.2636.3.1.15.1.16',
  jnxBoxKernelMemoryUsedPercent => '1.3.6.1.4.1.2636.3.1.16',
  jnxBoxSystemDomainType => '1.3.6.1.4.1.2636.3.1.17',
  jnxBoxSystemDomainTypeDefinition => 'JUNIPER-MIB::jnxBoxSystemDomainType',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'JUNIPER-MIB'} = {
  jnxFruState => {
    '1' => 'unknown',
    '2' => 'empty',
    '3' => 'present',
    '4' => 'ready',
    '5' => 'announceOnline',
    '6' => 'online',
    '7' => 'anounceOffline',
    '8' => 'offline',
    '9' => 'diagnostic',
    '10' => 'standby',
  },
  jnxLEDAssociateTable => {
    '1' => 'other',
    '2' => 'jnxContainersTable',
    '3' => 'jnxContentsTable',
  },
  jnxFruType => {
    '1' => 'other',
    '2' => 'clockGenerator',
    '3' => 'flexiblePicConcentrator',
    '4' => 'switchingAndForwardingModule',
    '5' => 'controlBoard',
    '6' => 'routingEngine',
    '7' => 'powerEntryModule',
    '8' => 'frontPanelModule',
    '9' => 'switchInterfaceBoard',
    '10' => 'processorMezzanineBoardForSIB',
    '11' => 'portInterfaceCard',
    '12' => 'craftInterfacePanel',
    '13' => 'fan',
    '14' => 'lineCardChassis',
    '15' => 'forwardingEngineBoard',
    '16' => 'protectedSystemDomain',
  },
  jnxOperatingState => {
    '1' => 'unknown',
    '2' => 'running',
    '3' => 'ready',
    '4' => 'reset',
    '5' => 'runningAtFullSpeed',
    '6' => 'down',
    '7' => 'standby',
  },
  jnxRedundancySwitchoverReason => {
    '1' => 'other',
    '2' => 'neverSwitched',
    '3' => 'userSwitched',
    '4' => 'autoSwitched',
  },
  jnxFilledState => {
    '1' => 'unknown',
    '2' => 'empty',
    '3' => 'filled',
  },
  jnxBoxSystemDomainType => {
    '1' => 'notApplicable',
    '2' => 'rootSystemDomain',
    '3' => 'protectedSystemDomain',
  },
  JnxChassisId => {
    '1' => 'unknown',
    '2' => 'singleChassis',
    '3' => 'scc',
    '4' => 'lcc0',
    '5' => 'lcc1',
    '6' => 'lcc2',
    '7' => 'lcc3',
    '8' => 'jcs1',
    '9' => 'jcs2',
    '10' => 'jcs3',
    '11' => 'jcs4',
    '12' => 'node0',
    '13' => 'node1',
    '14' => 'sfc0',
    '15' => 'sfc1',
    '16' => 'sfc2',
    '17' => 'sfc3',
    '18' => 'sfc4',
    '19' => 'lcc4',
    '20' => 'lcc5',
    '21' => 'lcc6',
    '22' => 'lcc7',
    '23' => 'lcc8',
    '24' => 'lcc9',
    '25' => 'lcc10',
    '26' => 'lcc11',
    '27' => 'lcc12',
    '28' => 'lcc13',
    '29' => 'lcc14',
    '30' => 'lcc15',
  },
  jnxRedundancyConfig => {
    '1' => 'unknown',
    '2' => 'master',
    '3' => 'backup',
    '4' => 'disabled',
    '5' => 'notApplicable',
  },
  jnxLEDState => {
    '1' => 'other',
    '2' => 'green',
    '3' => 'yellow',
    '4' => 'red',
    '5' => 'blue',
    '6' => 'amber',
  },
  jnxOperatingStateOrdered => {
    '1' => 'running',
    '2' => 'standby',
    '3' => 'ready',
    '4' => 'runningAtFullSpeed',
    '5' => 'reset',
    '6' => 'down',
    '7' => 'unknown',
  },
  jnxFruOfflineReason => {
    '1' => 'unknown',
    '2' => 'none',
    '3' => 'error',
    '4' => 'noPower',
    '5' => 'configPowerOff',
    '6' => 'configHoldInReset',
    '7' => 'cliCommand',
    '8' => 'buttonPress',
    '9' => 'cliRestart',
    '10' => 'overtempShutdown',
    '11' => 'masterClockDown',
    '12' => 'singleSfmModeChange',
    '13' => 'packetSchedulingModeChange',
    '14' => 'physicalRemoval',
    '15' => 'unresponsiveRestart',
    '16' => 'sonetClockAbsent',
    '17' => 'rddPowerOff',
    '18' => 'majorErrors',
    '19' => 'minorErrors',
    '20' => 'lccHardRestart',
    '21' => 'lccVersionMismatch',
    '22' => 'powerCycle',
    '23' => 'reconnect',
    '24' => 'overvoltage',
    '25' => 'pfeVersionMismatch',
    '26' => 'febRddCfgChange',
    '27' => 'fpcMisconfig',
    '28' => 'fruReconnectFail',
    '29' => 'fruFwddReset',
    '30' => 'fruFebSwitch',
    '31' => 'fruFebOffline',
    '32' => 'fruInServSoftUpgradeError',
    '33' => 'fruChasdPowerRatingExceed',
    '34' => 'fruConfigOffline',
    '35' => 'fruServiceRestartRequest',
    '36' => 'spuResetRequest',
    '37' => 'spuFlowdDown',
    '38' => 'spuSpi4Down',
    '39' => 'spuWatchdogTimeout',
    '40' => 'spuCoreDump',
    '41' => 'fpgaSpi4LinkDown',
    '42' => 'i3Spi4LinkDown',
    '43' => 'cppDisconnect',
    '44' => 'cpuNotBoot',
    '45' => 'spuCoreDumpComplete',
    '46' => 'rstOnSpcSpuFailure',
    '47' => 'softRstOnSpcSpuFailure',
    '48' => 'hwAuthenticationFailure',
    '49' => 'reconnectFpcFail',
    '50' => 'fpcAppFailed',
    '51' => 'fpcKernelCrash',
    '52' => 'spuFlowdDownNoCore',
    '53' => 'spuFlowdCoreDumpIncomplete',
    '54' => 'spuFlowdCoreDumpComplete',
    '55' => 'spuIdpdDownNoCore',
    '56' => 'spuIdpdCoreDumpIncomplete',
    '57' => 'spuIdpdCoreDumpComplete',
    '58' => 'spuCoreDumpIncomplete',
    '59' => 'spuIdpdDown',
    '60' => 'fruPfeReset',
    '61' => 'fruReconnectNotReady',
    '62' => 'fruSfLinkDown',
  },
  jnxRedundancyState => {
    '1' => 'unknown',
    '2' => 'master',
    '3' => 'backup',
    '4' => 'disabled',
  },
  jnxLEDStateOrdered => {
    '1' => 'blue',
    '2' => 'green',
    '3' => 'amber',
    '4' => 'yellow',
    '5' => 'red',
    '6' => 'other',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::JUNIPERIVEMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'JUNIPER-IVE-MIB'} = {
  url => '',
  name => 'JUNIPER-IVE-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'JUNIPER-IVE-MIB'} =
    '1.3.6.1.4.1.12532';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'JUNIPER-IVE-MIB'} = {
  'logFullPercent' => '1.3.6.1.4.1.12532.1.0',
  'signedInWebUsers' => '1.3.6.1.4.1.12532.2.0',
  'signedInMailUsers' => '1.3.6.1.4.1.12532.3.0',
  'blockedIP' => '1.3.6.1.4.1.12532.4.0',
  'authServerName' => '1.3.6.1.4.1.12532.5.0',
  'productName' => '1.3.6.1.4.1.12532.6.0',
  'productVersion' => '1.3.6.1.4.1.12532.7.0',
  'fileName' => '1.3.6.1.4.1.12532.8.0',
  'meetingUserCount' => '1.3.6.1.4.1.12532.9.0',
  'iveCpuUtil' => '1.3.6.1.4.1.12532.10.0',
  'iveMemoryUtil' => '1.3.6.1.4.1.12532.11.0',
  'iveConcurrentUsers' => '1.3.6.1.4.1.12532.12.0',
  'clusterConcurrentUsers' => '1.3.6.1.4.1.12532.13.0',
  'iveTotalHits' => '1.3.6.1.4.1.12532.14.0',
  'iveFileHits' => '1.3.6.1.4.1.12532.15.0',
  'iveWebHits' => '1.3.6.1.4.1.12532.16.0',
  'iveAppletHits' => '1.3.6.1.4.1.12532.17.0',
  'ivetermHits' => '1.3.6.1.4.1.12532.18.0',
  'iveSAMHits' => '1.3.6.1.4.1.12532.19.0',
  'iveNCHits' => '1.3.6.1.4.1.12532.20.0',
  'meetingHits' => '1.3.6.1.4.1.12532.21.0',
  'meetingCount' => '1.3.6.1.4.1.12532.22.0',
  'logName' => '1.3.6.1.4.1.12532.23.0',
  'iveSwapUtil' => '1.3.6.1.4.1.12532.24.0',
  'diskFullPercent' => '1.3.6.1.4.1.12532.25.0',
  'logID' => '1.3.6.1.4.1.12532.27.0',
  'logType' => '1.3.6.1.4.1.12532.28.0',
  'logDescription' => '1.3.6.1.4.1.12532.29.0',
  'ivsName' => '1.3.6.1.4.1.12532.30.0',
  'ocspResponderURL' => '1.3.6.1.4.1.12532.31.0',
  'fanDescription' => '1.3.6.1.4.1.12532.32.0',
  'psDescription' => '1.3.6.1.4.1.12532.33.0',
  'raidDescription' => '1.3.6.1.4.1.12532.34.0',
  'clusterName' => '1.3.6.1.4.1.12532.35.0',
  'nodeList' => '1.3.6.1.4.1.12532.36.0',
  'vipType' => '1.3.6.1.4.1.12532.37.0',
  'currentVIP' => '1.3.6.1.4.1.12532.38.0',
  'newVIP' => '1.3.6.1.4.1.12532.39.0',
  'nicEvent' => '1.3.6.1.4.1.12532.40.0',
  'nodeName' => '1.3.6.1.4.1.12532.41.0',
  'iveTemperature' => '1.3.6.1.4.1.12532.42.0',
  'iveVPNTunnels' => '1.3.6.1.4.1.12532.43.0',
  'iveSSLConnections' => '1.3.6.1.4.1.12532.44.0',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::JUNIPERRPSMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'JUNIPER-RPS-MIB'} = {
  url => '',
  name => 'JUNIPER-RPS-MIB',
};

#$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'JUNIPER-RPS-MIB'} =

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'JUNIPER-RPS-MIB'} = {
  jnxRPSMIBObjects => '1.3.6.1.4.1.2636.3.40.1.6.1',
  jnxRPSVersionTable => '1.3.6.1.4.1.2636.3.40.1.6.1.1',
  jnxRPSVersionEntry => '1.3.6.1.4.1.2636.3.40.1.6.1.1.1',
  jnxRPSSerialNumber => '1.3.6.1.4.1.2636.3.40.1.6.1.1.1.1',
  jnxRPSModel => '1.3.6.1.4.1.2636.3.40.1.6.1.1.1.2',
  jnxRPSFirmwareVersion => '1.3.6.1.4.1.2636.3.40.1.6.1.1.1.3',
  jnxRPSUBootVersion => '1.3.6.1.4.1.2636.3.40.1.6.1.1.1.4',
  jnxRPSStatusTable => '1.3.6.1.4.1.2636.3.40.1.6.1.2',
  jnxRPSStatusEntry => '1.3.6.1.4.1.2636.3.40.1.6.1.2.1',
  jnxRPSFanStatus => '1.3.6.1.4.1.2636.3.40.1.6.1.2.1.1',
  jnxRPSFanStatusDefinition => 'JUNIPER-RPS-MIB::JnxRPSStatus',
  jnxRPSSystemStatus => '1.3.6.1.4.1.2636.3.40.1.6.1.2.1.2',
  jnxRPSSystemStatusDefinition => 'JUNIPER-RPS-MIB::JnxRPSStatus',
  jnxRPSPowerSupplyTable => '1.3.6.1.4.1.2636.3.40.1.6.1.3',
  jnxRPSPowerSupplyEntry => '1.3.6.1.4.1.2636.3.40.1.6.1.3.1',
  jnxRPSPowerSupplyIndex => '1.3.6.1.4.1.2636.3.40.1.6.1.3.1.1',
  jnxRPSPowerSupplySlotId => '1.3.6.1.4.1.2636.3.40.1.6.1.3.1.2',
  jnxRPSPowerSupplyStatus => '1.3.6.1.4.1.2636.3.40.1.6.1.3.1.3',
  jnxRPSPowerSupplyDescription => '1.3.6.1.4.1.2636.3.40.1.6.1.3.1.4',
  jnxRPSLedPortStatusTable => '1.3.6.1.4.1.2636.3.40.1.6.1.4',
  jnxRPSLedPortStatusEntry => '1.3.6.1.4.1.2636.3.40.1.6.1.4.1',
  jnxRPSLedPortIndex => '1.3.6.1.4.1.2636.3.40.1.6.1.4.1.1',
  jnxRPSLedPortStatus => '1.3.6.1.4.1.2636.3.40.1.6.1.4.1.2',
  jnxRPSPortStatusTable => '1.3.6.1.4.1.2636.3.40.1.6.1.5',
  jnxRPSPortStatusEntry => '1.3.6.1.4.1.2636.3.40.1.6.1.5.1',
  jnxRPSPortIndex => '1.3.6.1.4.1.2636.3.40.1.6.1.5.1.1',
  jnxRPSPortId => '1.3.6.1.4.1.2636.3.40.1.6.1.5.1.2',
  jnxRPSPortStatus => '1.3.6.1.4.1.2636.3.40.1.6.1.5.1.3',
  jnxRPSPortPriority => '1.3.6.1.4.1.2636.3.40.1.6.1.5.1.4',
  jnxRPSPortPowerRequested => '1.3.6.1.4.1.2636.3.40.1.6.1.5.1.5',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'JUNIPER-RPS-MIB'} = {
  JnxRPSStatus => {
    '0' => 'green',
    '1' => 'red',
    '2' => 'amber',
    '3' => 'green-blink',
    '4' => 'red-blink',
    '5' => 'amber-blink',
    '6' => 'off',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::JUNIPERSRX5000SPUMONITORINGMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'JUNIPER-SRX5000-SPU-MONITORING-MIB'} = {
  url => '',
  name => 'JUNIPER-SRX5000-SPU-MONITORING-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'JUNIPER-SRX5000-SPU-MONITORING-MIB'} =
    '1.3.6.1.4.1.2636.3.39.1.12.1';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'JUNIPER-SRX5000-SPU-MONITORING-MIB'} = {
  jnxJsSPUMonitoringMIB => '1.3.6.1.4.1.2636.3.39.1.12.1',
  jnxJsSPUMonitoringObjectsTable => '1.3.6.1.4.1.2636.3.39.1.12.1.1',
  jnxJsSPUMonitoringObjectsEntry => '1.3.6.1.4.1.2636.3.39.1.12.1.1.1',
  jnxJsSPUMonitoringIndex => '1.3.6.1.4.1.2636.3.39.1.12.1.1.1.1',
  jnxJsSPUMonitoringFPCIndex => '1.3.6.1.4.1.2636.3.39.1.12.1.1.1.2',
  jnxJsSPUMonitoringSPUIndex => '1.3.6.1.4.1.2636.3.39.1.12.1.1.1.3',
  jnxJsSPUMonitoringCPUUsage => '1.3.6.1.4.1.2636.3.39.1.12.1.1.1.4',
  jnxJsSPUMonitoringMemoryUsage => '1.3.6.1.4.1.2636.3.39.1.12.1.1.1.5',
  jnxJsSPUMonitoringCurrentFlowSession => '1.3.6.1.4.1.2636.3.39.1.12.1.1.1.6',
  jnxJsSPUMonitoringMaxFlowSession => '1.3.6.1.4.1.2636.3.39.1.12.1.1.1.7',
  jnxJsSPUMonitoringCurrentCPSession => '1.3.6.1.4.1.2636.3.39.1.12.1.1.1.8',
  jnxJsSPUMonitoringMaxCPSession => '1.3.6.1.4.1.2636.3.39.1.12.1.1.1.9',
  jnxJsSPUMonitoringNodeIndex => '1.3.6.1.4.1.2636.3.39.1.12.1.1.1.10',
  jnxJsSPUMonitoringNodeDescr => '1.3.6.1.4.1.2636.3.39.1.12.1.1.1.11',
  jnxJsSPUMonitoringFlowSessIPv4 => '1.3.6.1.4.1.2636.3.39.1.12.1.1.1.12',
  jnxJsSPUMonitoringFlowSessIPv6 => '1.3.6.1.4.1.2636.3.39.1.12.1.1.1.13',
  jnxJsSPUMonitoringCPSessIPv4 => '1.3.6.1.4.1.2636.3.39.1.12.1.1.1.14',
  jnxJsSPUMonitoringCPSessIPv6 => '1.3.6.1.4.1.2636.3.39.1.12.1.1.1.15',
  jnxJsSPUMonitoringCurrentTotalSession => '1.3.6.1.4.1.2636.3.39.1.12.1.2',
  jnxJsSPUMonitoringMaxTotalSession => '1.3.6.1.4.1.2636.3.39.1.12.1.3',
  jnxSPUClusterObjectsTable => '1.3.6.1.4.1.2636.3.39.1.12.1.4',
  jnxSPUClusterObjectsEntry => '1.3.6.1.4.1.2636.3.39.1.12.1.4.1',
  jnxJsClusterMonitoringNodeIndex => '1.3.6.1.4.1.2636.3.39.1.12.1.4.1.1',
  jnxJsClusterMonitoringNodeDescr => '1.3.6.1.4.1.2636.3.39.1.12.1.4.1.2',
  jnxJsNodeCurrentTotalSession => '1.3.6.1.4.1.2636.3.39.1.12.1.4.1.3',
  jnxJsNodeMaxTotalSession => '1.3.6.1.4.1.2636.3.39.1.12.1.4.1.4',
  jnxJsNodeSessionCreationPerSecond => '1.3.6.1.4.1.2636.3.39.1.12.1.4.1.5',
  jnxJsNodeSessCreationPerSecIPv4 => '1.3.6.1.4.1.2636.3.39.1.12.1.4.1.6',
  jnxJsNodeSessCreationPerSecIPv6 => '1.3.6.1.4.1.2636.3.39.1.12.1.4.1.7',
  jnxJsNodeCurrentTotalSessIPv4 => '1.3.6.1.4.1.2636.3.39.1.12.1.4.1.8',
  jnxJsNodeCurrentTotalSessIPv6 => '1.3.6.1.4.1.2636.3.39.1.12.1.4.1.9',
  jnxJsSPUMonitoringTotalSessIPv4 => '1.3.6.1.4.1.2636.3.39.1.12.1.5',
  jnxJsSPUMonitoringTotalSessIPv6 => '1.3.6.1.4.1.2636.3.39.1.12.1.6',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'JUNIPER-SRX5000-SPU-MONITORING-MIB'} = {
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::JUNOSBGP4V2MIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'JUNOS-BGP4V2-MIB'} = {
  url => '',
  name => 'JUNOS-BGP4V2-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'JUNOS-BGP4V2-MIB'} = {
  'jnxBgpM2Peer' => '1.3.6.1.4.1.2636.5.1.1.2',
  'jnxBgpM2PeerData' => '1.3.6.1.4.1.2636.5.1.1.2.1',
  'jnxBgpM2PeerTable' => '1.3.6.1.4.1.2636.5.1.1.2.1.1',
  'jnxBgpM2PeerEntry' => '1.3.6.1.4.1.2636.5.1.1.2.1.1.1',
  'jnxBgpM2PeerState' => '1.3.6.1.4.1.2636.5.1.1.2.1.1.1.2',
  'jnxBgpM2PeerStateDefinition' => {
    '1' => 'idle',
    '2' => 'connect',
    '3' => 'active',
    '4' => 'opensent',
    '5' => 'openconfirm',
    '6' => 'established',
  },
  'jnxBgpM2PeerStatus' => '1.3.6.1.4.1.2636.5.1.1.2.1.1.1.3',
  'jnxBgpM2PeerStatusDefinition' => {
    '1' => 'halted',
    '2' => 'running',
  },
  'jnxBgpM2PeerRemoteAddrType' => '1.3.6.1.4.1.2636.5.1.1.2.1.1.1.10',
  'jnxBgpM2PeerRemoteAddrTypeDefinition' => {
    '1' => 'ipv4',
    '2' => 'ipv6',
    '3' => 'ipv4z',
    '4' => 'ipv6z',
    '16' => 'dns',
  },
  'jnxBgpM2PeerRemoteAddr' => '1.3.6.1.4.1.2636.5.1.1.2.1.1.1.11',
  'jnxBgpM2PeerRemotePort' => '1.3.6.1.4.1.2636.5.1.1.2.1.1.1.12',
  'jnxBgpM2PeerRemoteAs' => '1.3.6.1.4.1.2636.5.1.1.2.1.1.1.13',
  'jnxBgpM2PeerErrorsTable' => '1.3.6.1.4.1.2636.5.1.1.2.2.1',
  'jnxBgpM2PeerErrorsEntry' => '1.3.6.1.4.1.2636.5.1.1.2.2.1.1',
  'jnxBgpM2PeerLastErrorReceivedText' => '1.3.6.1.4.1.2636.5.1.1.2.2.1.1.5',
  'jnxBgpM2PeerLastErrorSentText' => '1.3.6.1.4.1.2636.5.1.1.2.2.1.1.6',
  'jnxBgpM2PeerEventTimesTable'	=> '1.3.6.1.4.1.2636.5.1.1.2.4.1',
  'jnxBgpM2PeerEventTimesEntry'	=> '1.3.6.1.4.1.2636.5.1.1.2.4.1.1',
  'jnxBgpM2PeerFsmEstablishedTime' => '1.3.6.1.4.1.2636.5.1.1.2.4.1.1.1',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::LARAMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'LARA-MIB'} = {
  url => '',
  name => 'LARA-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'LARA-MIB'} = {
  'lantronix' => '1.3.6.1.4.1.244',
  'products' => '1.3.6.1.4.1.244.1',
  'sls' => '1.3.6.1.4.1.244.1.11',
  'board' => '1.3.6.1.4.1.244.1.11.1',
  'Info' => '1.3.6.1.4.1.244.1.11.1.1',
  'firmwareVersion' => '1.3.6.1.4.1.244.1.11.1.1.1',
  'serialNumber' => '1.3.6.1.4.1.244.1.11.1.1.2',
  'IP' => '1.3.6.1.4.1.244.1.11.1.1.3',
  'Netmask' => '1.3.6.1.4.1.244.1.11.1.1.4',
  'Gateway' => '1.3.6.1.4.1.244.1.11.1.1.5',
  'MAC' => '1.3.6.1.4.1.244.1.11.1.1.6',
  'HardwareRev' => '1.3.6.1.4.1.244.1.11.1.1.7',
  'eventType' => '1.3.6.1.4.1.244.1.11.1.1.8',
  'eventDesc' => '1.3.6.1.4.1.244.1.11.1.1.9',
  'userLoginName' => '1.3.6.1.4.1.244.1.11.1.1.10',
  'remoteHost' => '1.3.6.1.4.1.244.1.11.1.1.11',
  'Users' => '1.3.6.1.4.1.244.1.11.1.2',
  'Actions' => '1.3.6.1.4.1.244.1.11.1.3',
  'host' => '1.3.6.1.4.1.244.1.11.2',
  'HostInfo' => '1.3.6.1.4.1.244.1.11.2.1',
  'checkHostPower' => '1.3.6.1.4.1.244.1.11.2.1.1',
  'checkHostPowerDefinition' => {
    '1' => 'hasPower',
    '2' => 'hasnoPower',
    '3' => 'error',
    '4' => 'notsupported',
  },
  'HostActions' => '1.3.6.1.4.1.244.1.11.2.2',
  'Common' => '1.3.6.1.4.1.244.1.11.3',
  'Traps' => '1.3.6.1.4.1.244.1.11.4',
  'DummyTrap' => '1.3.6.1.4.1.244.1.11.4.1',
  'Loginfailed' => '1.3.6.1.4.1.244.1.11.4.2',
  'Loginsuccess' => '1.3.6.1.4.1.244.1.11.4.3',
  'SecurityViolation' => '1.3.6.1.4.1.244.1.11.4.4',
  'Generic' => '1.3.6.1.4.1.244.1.11.4.5',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::LCOSMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'LCOS-MIB'} = {
  url => '',
  name => 'LCOS-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'LCOS-MIB'} =
    '1.3.6.1.4.1.2356.11';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'LCOS-MIB'} = {
  'lcos' => '1.3.6.1.4.1.2356.11',
  'lcsTrapGrp' => '1.3.6.1.4.1.2356.11.0',
  'lcsTraps' => '1.3.6.1.4.1.2356.11.0.0',
  'lcsStatus' => '1.3.6.1.4.1.2356.11.1',
  'lcsStatusOperatingTime' => '1.3.6.1.4.1.2356.11.1.2',
  'lcsStatusWlan' => '1.3.6.1.4.1.2356.11.1.3',
  'lcsStatusWlanDeleteValues' => '1.3.6.1.4.1.2356.11.1.3.11',
  'lcsStatusWlanStationTableTable' => '1.3.6.1.4.1.2356.11.1.3.32',
  'lcsStatusWlanStationTableEntry' => '1.3.6.1.4.1.2356.11.1.3.32.1',
  'lcsStatusWlanStationTableEntryIndex' => '1.3.6.1.4.1.2356.11.1.3.32.1.1',
  'lcsStatusWlanStationTableEntryMacAddress' => '1.3.6.1.4.1.2356.11.1.3.32.1.4',
  'lcsStatusWlanStationTableEntryTxBytes' => '1.3.6.1.4.1.2356.11.1.3.32.1.6',
  'lcsStatusWlanStationTableEntryRxBytes' => '1.3.6.1.4.1.2356.11.1.3.32.1.7',
  'lcsStatusWlanStationTableEntryIdentification' => '1.3.6.1.4.1.2356.11.1.3.32.1.9',
  'lcsStatusWlanStationTableEntryState' => '1.3.6.1.4.1.2356.11.1.3.32.1.10',
  'lcsStatusWlanStationTableEntryStateDefinition' => 'LCOS-MIB::lcsStatusWlanStationTableEntryState',
  'lcsStatusWlanStationTableEntryRxRate' => '1.3.6.1.4.1.2356.11.1.3.32.1.13',
  'lcsStatusWlanStationTableEntryRxRateDefinition' => 'LCOS-MIB::lcsStatusWlanStationTableEntryRxRate',
  'lcsStatusWlanStationTableEntryKeyType' => '1.3.6.1.4.1.2356.11.1.3.32.1.14',
  'lcsStatusWlanStationTableEntryKeyTypeDefinition' => 'LCOS-MIB::lcsStatusWlanStationTableEntryKeyType',
  'lcsStatusWlanStationTableEntryInterface' => '1.3.6.1.4.1.2356.11.1.3.32.1.15',
  'lcsStatusWlanStationTableEntryInterfaceDefinition' => 'LCOS-MIB::lcsStatusWlanStationTableEntryInterface',
  'lcsStatusWlanStationTableEntryPowerSaving' => '1.3.6.1.4.1.2356.11.1.3.32.1.16',
  'lcsStatusWlanStationTableEntryPowerSavingDefinition' => 'LCOS-MIB::lcsStatusWlanStationTableEntryPowerSaving',
  'lcsStatusWlanStationTableEntryListenInterval' => '1.3.6.1.4.1.2356.11.1.3.32.1.17',
  'lcsStatusWlanStationTableEntryConnectTime' => '1.3.6.1.4.1.2356.11.1.3.32.1.18',
  'lcsStatusWlanStationTableEntryAid' => '1.3.6.1.4.1.2356.11.1.3.32.1.19',
  'lcsStatusWlanStationTableEntryThroughput' => '1.3.6.1.4.1.2356.11.1.3.32.1.20',
  'lcsStatusWlanStationTableEntryShortSlotTime' => '1.3.6.1.4.1.2356.11.1.3.32.1.21',
  'lcsStatusWlanStationTableEntryShortSlotTimeDefinition' => 'LCOS-MIB::lcsStatusWlanStationTableEntryShortSlotTime',
  'lcsStatusWlanStationTableEntryShortPreamble' => '1.3.6.1.4.1.2356.11.1.3.32.1.23',
  'lcsStatusWlanStationTableEntryShortPreambleDefinition' => 'LCOS-MIB::lcsStatusWlanStationTableEntryShortPreamble',
  'lcsStatusWlanStationTableEntryNetwork' => '1.3.6.1.4.1.2356.11.1.3.32.1.25',
  'lcsStatusWlanStationTableEntryNetworkDefinition' => 'LCOS-MIB::lcsStatusWlanStationTableEntryNetwork',
  'lcsStatusWlanStationTableEntryPhySignal' => '1.3.6.1.4.1.2356.11.1.3.32.1.26',
  'lcsStatusWlanStationTableEntryIpv4Address' => '1.3.6.1.4.1.2356.11.1.3.32.1.27',
  'lcsStatusWlanStationTableEntryTxRate' => '1.3.6.1.4.1.2356.11.1.3.32.1.28',
  'lcsStatusWlanStationTableEntryTxRateDefinition' => 'LCOS-MIB::lcsStatusWlanStationTableEntryTxRate',
  'lcsStatusWlanStationTableEntryMaxThroughput' => '1.3.6.1.4.1.2356.11.1.3.32.1.29',
  'lcsStatusWlanStationTableEntryBytesThroughput' => '1.3.6.1.4.1.2356.11.1.3.32.1.30',
  'lcsStatusWlanStationTableEntryBytesMaxThroughput' => '1.3.6.1.4.1.2356.11.1.3.32.1.31',
  'lcsStatusWlanStationTableEntryClBrgSupport' => '1.3.6.1.4.1.2356.11.1.3.32.1.32',
  'lcsStatusWlanStationTableEntryClBrgSupportDefinition' => 'LCOS-MIB::lcsStatusWlanStationTableEntryClBrgSupport',
  'lcsStatusWlanStationTableEntryWpaVersion' => '1.3.6.1.4.1.2356.11.1.3.32.1.33',
  'lcsStatusWlanStationTableEntryWpaVersionDefinition' => 'LCOS-MIB::lcsStatusWlanStationTableEntryWpaVersion',
  'lcsStatusWlanStationTableEntryLastEvent' => '1.3.6.1.4.1.2356.11.1.3.32.1.34',
  'lcsStatusWlanStationTableEntryLastEventDefinition' => 'LCOS-MIB::lcsStatusWlanStationTableEntryLastEvent',
  'lcsStatusWlanStationTableEntryTxLimit' => '1.3.6.1.4.1.2356.11.1.3.32.1.35',
  'lcsStatusWlanStationTableEntryRxLimit' => '1.3.6.1.4.1.2356.11.1.3.32.1.36',
  'lcsStatusWlanStationTableEntryQos' => '1.3.6.1.4.1.2356.11.1.3.32.1.37',
  'lcsStatusWlanStationTableEntryQosDefinition' => 'LCOS-MIB::lcsStatusWlanStationTableEntryQos',
  'lcsStatusWlanStationTableEntryVlanId' => '1.3.6.1.4.1.2356.11.1.3.32.1.38',
  'lcsStatusWlanStationTableEntryUserName' => '1.3.6.1.4.1.2356.11.1.3.32.1.39',
  'lcsStatusWlanStationTableEntryMacCheck' => '1.3.6.1.4.1.2356.11.1.3.32.1.40',
  'lcsStatusWlanStationTableEntryMacCheckDefinition' => 'LCOS-MIB::lcsStatusWlanStationTableEntryMacCheck',
  'lcsStatusWlanStationTableEntryTxPackets' => '1.3.6.1.4.1.2356.11.1.3.32.1.41',
  'lcsStatusWlanStationTableEntryRxPackets' => '1.3.6.1.4.1.2356.11.1.3.32.1.42',
  'lcsStatusWlanStationTableEntryIdleTimeout' => '1.3.6.1.4.1.2356.11.1.3.32.1.43',
  'lcsStatusWlanStationTableEntryLastError' => '1.3.6.1.4.1.2356.11.1.3.32.1.44',
  'lcsStatusWlanStationTableEntryLastErrorDefinition' => 'LCOS-MIB::lcsStatusWlanStationTableEntryLastError',
  'lcsStatusWlanStationTableEntryShortGuardInterval' => '1.3.6.1.4.1.2356.11.1.3.32.1.45',
  'lcsStatusWlanStationTableEntryShortGuardIntervalDefinition' => 'LCOS-MIB::lcsStatusWlanStationTableEntryShortGuardInterval',
  'lcsStatusWlanStationTableEntry40mhzMode' => '1.3.6.1.4.1.2356.11.1.3.32.1.46',
  'lcsStatusWlanStationTableEntry40mhzModeDefinition' => 'LCOS-MIB::lcsStatusWlanStationTableEntry40mhzMode',
  'lcsStatusWlanStationTableEntry40mhzIntolerant' => '1.3.6.1.4.1.2356.11.1.3.32.1.47',
  'lcsStatusWlanStationTableEntry40mhzIntolerantDefinition' => 'LCOS-MIB::lcsStatusWlanStationTableEntry40mhzIntolerant',
  'lcsStatusWlanStationTableEntryMaxAMsduLen' => '1.3.6.1.4.1.2356.11.1.3.32.1.48',
  'lcsStatusWlanStationTableEntryMaxAMpduLen' => '1.3.6.1.4.1.2356.11.1.3.32.1.49',
  'lcsStatusWlanStationTableEntryEffTxRate' => '1.3.6.1.4.1.2356.11.1.3.32.1.50',
  'lcsStatusWlanStationTableEntryEffRxRate' => '1.3.6.1.4.1.2356.11.1.3.32.1.51',
  'lcsStatusWlanStationTableEntryApsd' => '1.3.6.1.4.1.2356.11.1.3.32.1.52',
  'lcsStatusWlanStationTableEntryIpv6Address' => '1.3.6.1.4.1.2356.11.1.3.32.1.53',
  'lcsStatusWlanStationTableEntrySmPwrsave' => '1.3.6.1.4.1.2356.11.1.3.32.1.54',
  'lcsStatusWlanStationTableEntrySmPwrsaveDefinition' => 'LCOS-MIB::lcsStatusWlanStationTableEntrySmPwrsave',
  'lcsStatusWlanStationTableEntryTxErrors' => '1.3.6.1.4.1.2356.11.1.3.32.1.55',
  'lcsStatusWlanStationTableEntryTotalRetries' => '1.3.6.1.4.1.2356.11.1.3.32.1.56',
  'lcsStatusWlanStationTableEntryAlarmState' => '1.3.6.1.4.1.2356.11.1.3.32.1.57',
  'lcsStatusWlanStationTableEntryAlarmStateDefinition' => 'LCOS-MIB::lcsStatusWlanStationTableEntryAlarmState',
  'lcsStatusWlanStationTableEntry40mhzCoexistence' => '1.3.6.1.4.1.2356.11.1.3.32.1.58',
  'lcsStatusWlanStationTableEntry40mhzCoexistenceDefinition' => 'LCOS-MIB::lcsStatusWlanStationTableEntry40mhzCoexistence',
  'lcsStatusWlanStationTableEntry20mhzRequested' => '1.3.6.1.4.1.2356.11.1.3.32.1.59',
  'lcsStatusWlanStationTableEntry20mhzRequestedDefinition' => 'LCOS-MIB::lcsStatusWlanStationTableEntry20mhzRequested',
  'lcsStatusWlanScanResultsTable' => '1.3.6.1.4.1.2356.11.1.3.34',
  'lcsStatusWlanScanResultsEntry' => '1.3.6.1.4.1.2356.11.1.3.34.1',
  'lcsStatusWlanScanResultsEntryBssid' => '1.3.6.1.4.1.2356.11.1.3.34.1.1',
  'lcsStatusWlanScanResultsEntryNetworkName' => '1.3.6.1.4.1.2356.11.1.3.34.1.2',
  'lcsStatusWlanScanResultsEntryOperationMode' => '1.3.6.1.4.1.2356.11.1.3.34.1.3',
  'lcsStatusWlanScanResultsEntryOperationModeDefinition' => 'LCOS-MIB::lcsStatusWlanScanResultsEntryOperationMode',
  'lcsStatusWlanScanResultsEntryBeaconPeriod' => '1.3.6.1.4.1.2356.11.1.3.34.1.6',
  'lcsStatusWlanScanResultsEntryDtimPeriod' => '1.3.6.1.4.1.2356.11.1.3.34.1.7',
  'lcsStatusWlanScanResultsEntryRadioChannel' => '1.3.6.1.4.1.2356.11.1.3.34.1.8',
  'lcsStatusWlanScanResultsEntryPhySignal' => '1.3.6.1.4.1.2356.11.1.3.34.1.10',
  'lcsStatusWlanScanResultsEntryNoiseLevel' => '1.3.6.1.4.1.2356.11.1.3.34.1.11',
  'lcsStatusWlanScanResultsEntryLoad' => '1.3.6.1.4.1.2356.11.1.3.34.1.12',
  'lcsStatusWlanScanResultsEntryEncryption' => '1.3.6.1.4.1.2356.11.1.3.34.1.13',
  'lcsStatusWlanScanResultsEntryEncryptionDefinition' => 'LCOS-MIB::lcsStatusWlanScanResultsEntryEncryption',
  'lcsStatusWlanScanResultsEntryShortPreamble' => '1.3.6.1.4.1.2356.11.1.3.34.1.14',
  'lcsStatusWlanScanResultsEntryShortPreambleDefinition' => 'LCOS-MIB::lcsStatusWlanScanResultsEntryShortPreamble',
  'lcsStatusWlanScanResultsEntryInterface' => '1.3.6.1.4.1.2356.11.1.3.34.1.15',
  'lcsStatusWlanScanResultsEntryInterfaceDefinition' => 'LCOS-MIB::lcsStatusWlanScanResultsEntryInterface',
  'lcsStatusWlanScanResultsEntryRadioBand' => '1.3.6.1.4.1.2356.11.1.3.34.1.16',
  'lcsStatusWlanScanResultsEntryRadioBandDefinition' => 'LCOS-MIB::lcsStatusWlanScanResultsEntryRadioBand',
  'lcsStatusWlanScanResultsEntry108mbpsMode' => '1.3.6.1.4.1.2356.11.1.3.34.1.17',
  'lcsStatusWlanScanResultsEntry108mbpsModeDefinition' => 'LCOS-MIB::lcsStatusWlanScanResultsEntry108mbpsMode',
  'lcsStatusWlanScanResultsEntryShortSlotTime' => '1.3.6.1.4.1.2356.11.1.3.34.1.18',
  'lcsStatusWlanScanResultsEntryShortSlotTimeDefinition' => 'LCOS-MIB::lcsStatusWlanScanResultsEntryShortSlotTime',
  'lcsStatusWlanScanResultsEntryRate' => '1.3.6.1.4.1.2356.11.1.3.34.1.19',
  'lcsStatusWlanScanResultsEntryRateDefinition' => 'LCOS-MIB::lcsStatusWlanScanResultsEntryRate',
  'lcsStatusWlanScanResultsEntryNonerpPresent' => '1.3.6.1.4.1.2356.11.1.3.34.1.20',
  'lcsStatusWlanScanResultsEntryNonerpPresentDefinition' => 'LCOS-MIB::lcsStatusWlanScanResultsEntryNonerpPresent',
  'lcsStatusWlanScanResultsEntryCompression' => '1.3.6.1.4.1.2356.11.1.3.34.1.21',
  'lcsStatusWlanScanResultsEntryCompressionDefinition' => 'LCOS-MIB::lcsStatusWlanScanResultsEntryCompression',
  'lcsStatusWlanScanResultsEntryPcfFunctionality' => '1.3.6.1.4.1.2356.11.1.3.34.1.22',
  'lcsStatusWlanScanResultsEntryPcfFunctionalityDefinition' => 'LCOS-MIB::lcsStatusWlanScanResultsEntryPcfFunctionality',
  'lcsStatusWlanScanResultsEntryIdentification' => '1.3.6.1.4.1.2356.11.1.3.34.1.23',
  'lcsStatusWlanScanResultsEntryQos' => '1.3.6.1.4.1.2356.11.1.3.34.1.24',
  'lcsStatusWlanScanResultsEntryQosDefinition' => 'LCOS-MIB::lcsStatusWlanScanResultsEntryQos',
  'lcsStatusWlanScanResultsEntryAge' => '1.3.6.1.4.1.2356.11.1.3.34.1.25',
  'lcsStatusWlanScanResultsEntrySignalLevel' => '1.3.6.1.4.1.2356.11.1.3.34.1.26',
  'lcsStatusWlanScanResultsEntryShortGuardInterval' => '1.3.6.1.4.1.2356.11.1.3.34.1.27',
  'lcsStatusWlanScanResultsEntryShortGuardIntervalDefinition' => 'LCOS-MIB::lcsStatusWlanScanResultsEntryShortGuardInterval',
  'lcsStatusWlanScanResultsEntryExtChannel' => '1.3.6.1.4.1.2356.11.1.3.34.1.28',
  'lcsStatusWlanScanResultsEntryExtChannelDefinition' => 'LCOS-MIB::lcsStatusWlanScanResultsEntryExtChannel',
  'lcsStatusWlanScanResultsEntry40mhzMode' => '1.3.6.1.4.1.2356.11.1.3.34.1.29',
  'lcsStatusWlanScanResultsEntry40mhzModeDefinition' => 'LCOS-MIB::lcsStatusWlanScanResultsEntry40mhzMode',
  'lcsStatusWlanScanResultsEntry40mhzIntolerant' => '1.3.6.1.4.1.2356.11.1.3.34.1.30',
  'lcsStatusWlanScanResultsEntry40mhzIntolerantDefinition' => 'LCOS-MIB::lcsStatusWlanScanResultsEntry40mhzIntolerant',
  'lcsStatusWlanScanResultsEntryInterpointPeerName' => '1.3.6.1.4.1.2356.11.1.3.34.1.31',
  'lcsStatusWlanScanResultsEntryMaxAMpduLen' => '1.3.6.1.4.1.2356.11.1.3.34.1.32',
  'lcsStatusWlanScanResultsEntryMaxAMsduLen' => '1.3.6.1.4.1.2356.11.1.3.34.1.33',
  'lcsStatusWlanScanResultsEntryVendor' => '1.3.6.1.4.1.2356.11.1.3.34.1.34',
  'lcsStatusWlanScanResultsEntryEffRate' => '1.3.6.1.4.1.2356.11.1.3.34.1.35',
  'lcsStatusWlanScanResultsEntry40mhzCoexistence' => '1.3.6.1.4.1.2356.11.1.3.34.1.36',
  'lcsStatusWlanScanResultsEntry40mhzCoexistenceDefinition' => 'LCOS-MIB::lcsStatusWlanScanResultsEntry40mhzCoexistence',
  'lcsStatusWlanInterpoints' => '1.3.6.1.4.1.2356.11.1.3.36',
  'lcsStatusWlanInterpointsAccesspointListTable' => '1.3.6.1.4.1.2356.11.1.3.36.1',
  'lcsStatusWlanInterpointsAccesspointListEntry' => '1.3.6.1.4.1.2356.11.1.3.36.1.1',
  'lcsStatusWlanInterpointsAccesspointListEntryIndex' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.1',
  'lcsStatusWlanInterpointsAccesspointListEntryIndexDefinition' => 'LCOS-MIB::lcsStatusWlanInterpointsAccesspointListEntryIndex',
  'lcsStatusWlanInterpointsAccesspointListEntryMacAddress' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.2',
  'lcsStatusWlanInterpointsAccesspointListEntryRxRate' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.5',
  'lcsStatusWlanInterpointsAccesspointListEntryRxRateDefinition' => 'LCOS-MIB::lcsStatusWlanInterpointsAccesspointListEntryRxRate',
  'lcsStatusWlanInterpointsAccesspointListEntryTxBytes' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.6',
  'lcsStatusWlanInterpointsAccesspointListEntryRxBytes' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.7',
  'lcsStatusWlanInterpointsAccesspointListEntryThroughput' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.8',
  'lcsStatusWlanInterpointsAccesspointListEntryKeyingState' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.12',
  'lcsStatusWlanInterpointsAccesspointListEntryKeyingStateDefinition' => 'LCOS-MIB::lcsStatusWlanInterpointsAccesspointListEntryKeyingState',
  'lcsStatusWlanInterpointsAccesspointListEntryRxPhySignal' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.13',
  'lcsStatusWlanInterpointsAccesspointListEntryLinkPhySignal' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.14',
  'lcsStatusWlanInterpointsAccesspointListEntryIdentification' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.15',
  'lcsStatusWlanInterpointsAccesspointListEntryTxRate' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.16',
  'lcsStatusWlanInterpointsAccesspointListEntryTxRateDefinition' => 'LCOS-MIB::lcsStatusWlanInterpointsAccesspointListEntryTxRate',
  'lcsStatusWlanInterpointsAccesspointListEntryMaxThroughput' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.17',
  'lcsStatusWlanInterpointsAccesspointListEntryBytesThroughput' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.19',
  'lcsStatusWlanInterpointsAccesspointListEntryBytesMaxThroughput' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.20',
  'lcsStatusWlanInterpointsAccesspointListEntryWpaVersion' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.21',
  'lcsStatusWlanInterpointsAccesspointListEntryWpaVersionDefinition' => 'LCOS-MIB::lcsStatusWlanInterpointsAccesspointListEntryWpaVersion',
  'lcsStatusWlanInterpointsAccesspointListEntryTxLimit' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.22',
  'lcsStatusWlanInterpointsAccesspointListEntryRxLimit' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.23',
  'lcsStatusWlanInterpointsAccesspointListEntryKeyHandshakeRole' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.24',
  'lcsStatusWlanInterpointsAccesspointListEntryKeyHandshakeRoleDefinition' => 'LCOS-MIB::lcsStatusWlanInterpointsAccesspointListEntryKeyHandshakeRole',
  'lcsStatusWlanInterpointsAccesspointListEntryTxPackets' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.25',
  'lcsStatusWlanInterpointsAccesspointListEntryRxPackets' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.26',
  'lcsStatusWlanInterpointsAccesspointListEntryQos' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.27',
  'lcsStatusWlanInterpointsAccesspointListEntryQosDefinition' => 'LCOS-MIB::lcsStatusWlanInterpointsAccesspointListEntryQos',
  'lcsStatusWlanInterpointsAccesspointListEntryInterpointPeerName' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.28',
  'lcsStatusWlanInterpointsAccesspointListEntryMaxAMsduLen' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.29',
  'lcsStatusWlanInterpointsAccesspointListEntryMaxAMpduLen' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.30',
  'lcsStatusWlanInterpointsAccesspointListEntry40mhzMode' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.31',
  'lcsStatusWlanInterpointsAccesspointListEntry40mhzModeDefinition' => 'LCOS-MIB::lcsStatusWlanInterpointsAccesspointListEntry40mhzMode',
  'lcsStatusWlanInterpointsAccesspointListEntryShortPreamble' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.32',
  'lcsStatusWlanInterpointsAccesspointListEntryShortPreambleDefinition' => 'LCOS-MIB::lcsStatusWlanInterpointsAccesspointListEntryShortPreamble',
  'lcsStatusWlanInterpointsAccesspointListEntryShortGuardInterval' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.33',
  'lcsStatusWlanInterpointsAccesspointListEntryShortGuardIntervalDefinition' => 'LCOS-MIB::lcsStatusWlanInterpointsAccesspointListEntryShortGuardInterval',
  'lcsStatusWlanInterpointsAccesspointListEntryEffTxRate' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.34',
  'lcsStatusWlanInterpointsAccesspointListEntryEffRxRate' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.35',
  'lcsStatusWlanInterpointsAccesspointListEntryKeyType' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.36',
  'lcsStatusWlanInterpointsAccesspointListEntryKeyTypeDefinition' => 'LCOS-MIB::lcsStatusWlanInterpointsAccesspointListEntryKeyType',
  'lcsStatusWlanInterpointsAccesspointListEntryTxErrors' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.37',
  'lcsStatusWlanInterpointsAccesspointListEntryTotalRetries' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.38',
  'lcsStatusWlanInterpointsAccesspointListEntryAlarmState' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.39',
  'lcsStatusWlanInterpointsAccesspointListEntryLinkActive' => '1.3.6.1.4.1.2356.11.1.3.36.1.1.40',
  'lcsStatusWlanInterpointsAccesspointListEntryLinkActiveDefinition' => 'LCOS-MIB::lcsStatusWlanInterpointsAccesspointListEntryLinkActive',
  'lcsStatusWlanInterpointsKeyListTable' => '1.3.6.1.4.1.2356.11.1.3.36.3',
  'lcsStatusWlanInterpointsKeyListEntry' => '1.3.6.1.4.1.2356.11.1.3.36.3.1',
  'lcsStatusWlanInterpointsKeyListEntryIndex' => '1.3.6.1.4.1.2356.11.1.3.36.3.1.1',
  'lcsStatusWlanInterpointsKeyListEntryIndexDefinition' => 'LCOS-MIB::lcsStatusWlanInterpointsKeyListEntryIndex',
  'lcsStatusWlanInterpointsKeyListEntrySource' => '1.3.6.1.4.1.2356.11.1.3.36.3.1.2',
  'lcsStatusWlanInterpointsKeyListEntrySourceDefinition' => 'LCOS-MIB::lcsStatusWlanInterpointsKeyListEntrySource',
  'lcsStatusWlanInterpointsKeyListEntryKeyType' => '1.3.6.1.4.1.2356.11.1.3.36.3.1.3',
  'lcsStatusWlanInterpointsKeyListEntryKeyTypeDefinition' => 'LCOS-MIB::lcsStatusWlanInterpointsKeyListEntryKeyType',
  'lcsStatusWlanInterpointsKeyListEntryKeyValue' => '1.3.6.1.4.1.2356.11.1.3.36.3.1.4',
  'lcsStatusWlanInterpointsKeyListEntryTsc' => '1.3.6.1.4.1.2356.11.1.3.36.3.1.5',
  'lcsStatusWlanInterpointsKeyListEntryAge' => '1.3.6.1.4.1.2356.11.1.3.36.3.1.7',
  'lcsStatusWlanInterpointsKeyListEntryIvSequenceErrors' => '1.3.6.1.4.1.2356.11.1.3.36.3.1.8',
  'lcsStatusWlanInterpointsKeyListEntryRscBe' => '1.3.6.1.4.1.2356.11.1.3.36.3.1.16',
  'lcsStatusWlanInterpointsKeyListEntryRscBk' => '1.3.6.1.4.1.2356.11.1.3.36.3.1.17',
  'lcsStatusWlanInterpointsKeyListEntryRscEe' => '1.3.6.1.4.1.2356.11.1.3.36.3.1.19',
  'lcsStatusWlanInterpointsKeyListEntryRscCl' => '1.3.6.1.4.1.2356.11.1.3.36.3.1.20',
  'lcsStatusWlanInterpointsKeyListEntryRscVi' => '1.3.6.1.4.1.2356.11.1.3.36.3.1.21',
  'lcsStatusWlanInterpointsKeyListEntryRscVo' => '1.3.6.1.4.1.2356.11.1.3.36.3.1.22',
  'lcsStatusWlanInterpointsKeyListEntryRscNc' => '1.3.6.1.4.1.2356.11.1.3.36.3.1.23',
  'lcsStatusWlanDeassocStation' => '1.3.6.1.4.1.2356.11.1.3.37',
  'lcsStatusWlanIappTableTable' => '1.3.6.1.4.1.2356.11.1.3.38',
  'lcsStatusWlanIappTableEntry' => '1.3.6.1.4.1.2356.11.1.3.38.1',
  'lcsStatusWlanIappTableEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.3.38.1.1',
  'lcsStatusWlanIappTableEntryBssid' => '1.3.6.1.4.1.2356.11.1.3.38.1.2',
  'lcsStatusWlanIappTableEntryTimer' => '1.3.6.1.4.1.2356.11.1.3.38.1.3',
  'lcsStatusWlanIappTableEntryTimeout' => '1.3.6.1.4.1.2356.11.1.3.38.1.4',
  'lcsStatusWlanIappTableEntryCapabilities' => '1.3.6.1.4.1.2356.11.1.3.38.1.5',
  'lcsStatusWlanIappTableEntryNetworkName' => '1.3.6.1.4.1.2356.11.1.3.38.1.6',
  'lcsStatusWlanForeignStationsTable' => '1.3.6.1.4.1.2356.11.1.3.40',
  'lcsStatusWlanForeignStationsEntry' => '1.3.6.1.4.1.2356.11.1.3.40.1',
  'lcsStatusWlanForeignStationsEntryMacAddress' => '1.3.6.1.4.1.2356.11.1.3.40.1.1',
  'lcsStatusWlanForeignStationsEntryBssid' => '1.3.6.1.4.1.2356.11.1.3.40.1.2',
  'lcsStatusWlanForeignStationsEntryNetworkName' => '1.3.6.1.4.1.2356.11.1.3.40.1.3',
  'lcsStatusWlanGroupEncryptionKeysTable' => '1.3.6.1.4.1.2356.11.1.3.41',
  'lcsStatusWlanGroupEncryptionKeysEntry' => '1.3.6.1.4.1.2356.11.1.3.41.1',
  'lcsStatusWlanGroupEncryptionKeysEntryIndex' => '1.3.6.1.4.1.2356.11.1.3.41.1.1',
  'lcsStatusWlanGroupEncryptionKeysEntrySource' => '1.3.6.1.4.1.2356.11.1.3.41.1.2',
  'lcsStatusWlanGroupEncryptionKeysEntrySourceDefinition' => 'LCOS-MIB::lcsStatusWlanGroupEncryptionKeysEntrySource',
  'lcsStatusWlanGroupEncryptionKeysEntryKeyType' => '1.3.6.1.4.1.2356.11.1.3.41.1.3',
  'lcsStatusWlanGroupEncryptionKeysEntryKeyTypeDefinition' => 'LCOS-MIB::lcsStatusWlanGroupEncryptionKeysEntryKeyType',
  'lcsStatusWlanGroupEncryptionKeysEntryKeyValue' => '1.3.6.1.4.1.2356.11.1.3.41.1.4',
  'lcsStatusWlanGroupEncryptionKeysEntryTsc' => '1.3.6.1.4.1.2356.11.1.3.41.1.5',
  'lcsStatusWlanGroupEncryptionKeysEntryAge' => '1.3.6.1.4.1.2356.11.1.3.41.1.7',
  'lcsStatusWlanGroupEncryptionKeysEntryIvSequenceErrors' => '1.3.6.1.4.1.2356.11.1.3.41.1.8',
  'lcsStatusWlanGroupEncryptionKeysEntryRscBe' => '1.3.6.1.4.1.2356.11.1.3.41.1.16',
  'lcsStatusWlanGroupEncryptionKeysEntryRscBk' => '1.3.6.1.4.1.2356.11.1.3.41.1.17',
  'lcsStatusWlanGroupEncryptionKeysEntryRscEe' => '1.3.6.1.4.1.2356.11.1.3.41.1.19',
  'lcsStatusWlanGroupEncryptionKeysEntryRscCl' => '1.3.6.1.4.1.2356.11.1.3.41.1.20',
  'lcsStatusWlanGroupEncryptionKeysEntryRscVi' => '1.3.6.1.4.1.2356.11.1.3.41.1.21',
  'lcsStatusWlanGroupEncryptionKeysEntryRscVo' => '1.3.6.1.4.1.2356.11.1.3.41.1.22',
  'lcsStatusWlanGroupEncryptionKeysEntryRscNc' => '1.3.6.1.4.1.2356.11.1.3.41.1.23',
  'lcsStatusWlanChannelScanResultsTable' => '1.3.6.1.4.1.2356.11.1.3.42',
  'lcsStatusWlanChannelScanResultsEntry' => '1.3.6.1.4.1.2356.11.1.3.42.1',
  'lcsStatusWlanChannelScanResultsEntryRadioChannel' => '1.3.6.1.4.1.2356.11.1.3.42.1.1',
  'lcsStatusWlanChannelScanResultsEntryInterface' => '1.3.6.1.4.1.2356.11.1.3.42.1.2',
  'lcsStatusWlanChannelScanResultsEntryInterfaceDefinition' => 'LCOS-MIB::lcsStatusWlanChannelScanResultsEntryInterface',
  'lcsStatusWlanChannelScanResultsEntryScanned' => '1.3.6.1.4.1.2356.11.1.3.42.1.3',
  'lcsStatusWlanChannelScanResultsEntryScannedDefinition' => 'LCOS-MIB::lcsStatusWlanChannelScanResultsEntryScanned',
  'lcsStatusWlanChannelScanResultsEntryNoiseLevel' => '1.3.6.1.4.1.2356.11.1.3.42.1.4',
  'lcsStatusWlanChannelScanResultsEntryNumBss' => '1.3.6.1.4.1.2356.11.1.3.42.1.6',
  'lcsStatusWlanChannelScanResultsEntryRadarDetected' => '1.3.6.1.4.1.2356.11.1.3.42.1.7',
  'lcsStatusWlanChannelScanResultsEntryRadarDetectedDefinition' => 'LCOS-MIB::lcsStatusWlanChannelScanResultsEntryRadarDetected',
  'lcsStatusWlanChannelScanResultsEntry108mbpsMode' => '1.3.6.1.4.1.2356.11.1.3.42.1.8',
  'lcsStatusWlanChannelScanResultsEntry108mbpsModeDefinition' => 'LCOS-MIB::lcsStatusWlanChannelScanResultsEntry108mbpsMode',
  'lcsStatusWlanChannelScanResultsEntryRadioBand' => '1.3.6.1.4.1.2356.11.1.3.42.1.9',
  'lcsStatusWlanChannelScanResultsEntryRadioBandDefinition' => 'LCOS-MIB::lcsStatusWlanChannelScanResultsEntryRadioBand',
  'lcsStatusWlanChannelScanResultsEntryPulseCount' => '1.3.6.1.4.1.2356.11.1.3.42.1.10',
  'lcsStatusWlanChannelScanResultsEntryRemTime' => '1.3.6.1.4.1.2356.11.1.3.42.1.11',
  'lcsStatusWlanChannelScanResultsEntryDfsState' => '1.3.6.1.4.1.2356.11.1.3.42.1.12',
  'lcsStatusWlanChannelScanResultsEntryDfsStateDefinition' => 'LCOS-MIB::lcsStatusWlanChannelScanResultsEntryDfsState',
  'lcsStatusWlanChannelScanResultsEntryRadarPattern' => '1.3.6.1.4.1.2356.11.1.3.42.1.13',
  'lcsStatusWlanChannelScanResultsEntryDfsScheme' => '1.3.6.1.4.1.2356.11.1.3.42.1.14',
  'lcsStatusWlanChannelScanResultsEntryDfsSchemeDefinition' => 'LCOS-MIB::lcsStatusWlanChannelScanResultsEntryDfsScheme',
  'lcsStatusWlanChannelScanResultsEntryUsage' => '1.3.6.1.4.1.2356.11.1.3.42.1.15',
  'lcsStatusWlanChannelScanResultsEntryScanAge' => '1.3.6.1.4.1.2356.11.1.3.42.1.16',
  'lcsStatusWlanChannelScanResultsEntryNonHtBss' => '1.3.6.1.4.1.2356.11.1.3.42.1.17',
  'lcsStatusWlanChannelScanResultsEntryNonHtBssDefinition' => 'LCOS-MIB::lcsStatusWlanChannelScanResultsEntryNonHtBss',
  'lcsStatusWlanChannelScanResultsEntryNonHtBssAge' => '1.3.6.1.4.1.2356.11.1.3.42.1.18',
  'lcsStatusWlanChannelScanResultsEntry40mIntolerantBss' => '1.3.6.1.4.1.2356.11.1.3.42.1.19',
  'lcsStatusWlanChannelScanResultsEntry40mIntolerantBssDefinition' => 'LCOS-MIB::lcsStatusWlanChannelScanResultsEntry40mIntolerantBss',
  'lcsStatusWlanChannelScanResultsEntry40mIntolerantBssAge' => '1.3.6.1.4.1.2356.11.1.3.42.1.20',
  'lcsStatusWlanChannelScanResultsEntry40mIntolerantBssReported' => '1.3.6.1.4.1.2356.11.1.3.42.1.21',
  'lcsStatusWlanChannelScanResultsEntry40mIntolerantBssReportedDefinition' => 'LCOS-MIB::lcsStatusWlanChannelScanResultsEntry40mIntolerantBssReported',
  'lcsStatusWlanChannelScanResultsEntry40mIntolerantBssReportedAge' => '1.3.6.1.4.1.2356.11.1.3.42.1.22',
  'lcsStatusWlanClient' => '1.3.6.1.4.1.2356.11.1.3.43',
  'lcsStatusWlanClientIpv4TranslationTableTable' => '1.3.6.1.4.1.2356.11.1.3.43.1',
  'lcsStatusWlanClientIpv4TranslationTableEntry' => '1.3.6.1.4.1.2356.11.1.3.43.1.1',
  'lcsStatusWlanClientIpv4TranslationTableEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.3.43.1.1.1',
  'lcsStatusWlanClientIpv4TranslationTableEntryMacAddress' => '1.3.6.1.4.1.2356.11.1.3.43.1.1.2',
  'lcsStatusWlanClientIpv4TranslationTableEntryAge' => '1.3.6.1.4.1.2356.11.1.3.43.1.1.3',
  'lcsStatusWlanClientPppoeIdTranslationTableTable' => '1.3.6.1.4.1.2356.11.1.3.43.10',
  'lcsStatusWlanClientPppoeIdTranslationTableEntry' => '1.3.6.1.4.1.2356.11.1.3.43.10.1',
  'lcsStatusWlanClientPppoeIdTranslationTableEntrySessionId' => '1.3.6.1.4.1.2356.11.1.3.43.10.1.1',
  'lcsStatusWlanClientPppoeIdTranslationTableEntryMacAddress' => '1.3.6.1.4.1.2356.11.1.3.43.10.1.2',
  'lcsStatusWlanClientPppoeIdTranslationTableEntryAge' => '1.3.6.1.4.1.2356.11.1.3.43.10.1.3',
  'lcsStatusWlanClientPppoeUniqTranslationTableTable' => '1.3.6.1.4.1.2356.11.1.3.43.11',
  'lcsStatusWlanClientPppoeUniqTranslationTableEntry' => '1.3.6.1.4.1.2356.11.1.3.43.11.1',
  'lcsStatusWlanClientPppoeUniqTranslationTableEntryHostUniqLen' => '1.3.6.1.4.1.2356.11.1.3.43.11.1.1',
  'lcsStatusWlanClientPppoeUniqTranslationTableEntryHostUniq' => '1.3.6.1.4.1.2356.11.1.3.43.11.1.2',
  'lcsStatusWlanClientPppoeUniqTranslationTableEntryMacAddress' => '1.3.6.1.4.1.2356.11.1.3.43.11.1.3',
  'lcsStatusWlanClientPppoeUniqTranslationTableEntryAge' => '1.3.6.1.4.1.2356.11.1.3.43.11.1.4',
  'lcsStatusWlanClientIpv6TranslationTableTable' => '1.3.6.1.4.1.2356.11.1.3.43.12',
  'lcsStatusWlanClientIpv6TranslationTableEntry' => '1.3.6.1.4.1.2356.11.1.3.43.12.1',
  'lcsStatusWlanClientIpv6TranslationTableEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.3.43.12.1.1',
  'lcsStatusWlanClientIpv6TranslationTableEntryMacAddress' => '1.3.6.1.4.1.2356.11.1.3.43.12.1.2',
  'lcsStatusWlanClientIpv6TranslationTableEntryAge' => '1.3.6.1.4.1.2356.11.1.3.43.12.1.3',
  'lcsStatusWlanClientIfcsTable' => '1.3.6.1.4.1.2356.11.1.3.43.51',
  'lcsStatusWlanClientIfcsEntry' => '1.3.6.1.4.1.2356.11.1.3.43.51.1',
  'lcsStatusWlanClientIfcsEntryIfc' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.1',
  'lcsStatusWlanClientIfcsEntryState' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.2',
  'lcsStatusWlanClientIfcsEntryStateDefinition' => 'LCOS-MIB::lcsStatusWlanClientIfcsEntryState',
  'lcsStatusWlanClientIfcsEntryStationMode' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.3',
  'lcsStatusWlanClientIfcsEntryStationModeDefinition' => 'LCOS-MIB::lcsStatusWlanClientIfcsEntryStationMode',
  'lcsStatusWlanClientIfcsEntryRxRate' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.5',
  'lcsStatusWlanClientIfcsEntryRxRateDefinition' => 'LCOS-MIB::lcsStatusWlanClientIfcsEntryRxRate',
  'lcsStatusWlanClientIfcsEntryThroughput' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.6',
  'lcsStatusWlanClientIfcsEntryPhySignal' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.7',
  'lcsStatusWlanClientIfcsEntryTxRate' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.9',
  'lcsStatusWlanClientIfcsEntryTxRateDefinition' => 'LCOS-MIB::lcsStatusWlanClientIfcsEntryTxRate',
  'lcsStatusWlanClientIfcsEntryMaxThroughput' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.10',
  'lcsStatusWlanClientIfcsEntryTxBytes' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.11',
  'lcsStatusWlanClientIfcsEntryRxBytes' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.12',
  'lcsStatusWlanClientIfcsEntryBytesThroughput' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.13',
  'lcsStatusWlanClientIfcsEntryBytesMaxThroughput' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.14',
  'lcsStatusWlanClientIfcsEntryClBrgSupport' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.15',
  'lcsStatusWlanClientIfcsEntryClBrgSupportDefinition' => 'LCOS-MIB::lcsStatusWlanClientIfcsEntryClBrgSupport',
  'lcsStatusWlanClientIfcsEntryWpaVersion' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.16',
  'lcsStatusWlanClientIfcsEntryWpaVersionDefinition' => 'LCOS-MIB::lcsStatusWlanClientIfcsEntryWpaVersion',
  'lcsStatusWlanClientIfcsEntryTxLimit' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.17',
  'lcsStatusWlanClientIfcsEntryRxLimit' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.18',
  'lcsStatusWlanClientIfcsEntryQos' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.19',
  'lcsStatusWlanClientIfcsEntryQosDefinition' => 'LCOS-MIB::lcsStatusWlanClientIfcsEntryQos',
  'lcsStatusWlanClientIfcsEntryTxPackets' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.20',
  'lcsStatusWlanClientIfcsEntryRxPackets' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.21',
  'lcsStatusWlanClientIfcsEntryLinkPhySignal' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.22',
  'lcsStatusWlanClientIfcsEntryAid' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.23',
  'lcsStatusWlanClientIfcsEntryIdentification' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.24',
  'lcsStatusWlanClientIfcsEntryConnectTime' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.25',
  'lcsStatusWlanClientIfcsEntryLinkSignalLevel' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.26',
  'lcsStatusWlanClientIfcsEntryMaxAMpduLen' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.27',
  'lcsStatusWlanClientIfcsEntryMaxAMsduLen' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.28',
  'lcsStatusWlanClientIfcsEntryEffTxRate' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.29',
  'lcsStatusWlanClientIfcsEntryEffRxRate' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.30',
  'lcsStatusWlanClientIfcsEntryKeyType' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.31',
  'lcsStatusWlanClientIfcsEntryKeyTypeDefinition' => 'LCOS-MIB::lcsStatusWlanClientIfcsEntryKeyType',
  'lcsStatusWlanClientIfcsEntryTxErrors' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.32',
  'lcsStatusWlanClientIfcsEntryTotalRetries' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.33',
  'lcsStatusWlanClientIfcsEntryAlarmState' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.34',
  'lcsStatusWlanClientIfcsEntryAlarmStateDefinition' => 'LCOS-MIB::lcsStatusWlanClientIfcsEntryAlarmState',
  'lcsStatusWlanClientIfcsEntryAllow40mhz' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.35',
  'lcsStatusWlanClientIfcsEntryAllow40mhzDefinition' => 'LCOS-MIB::lcsStatusWlanClientIfcsEntryAllow40mhz',
  'lcsStatusWlanClientIfcsEntryExtChannel' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.36',
  'lcsStatusWlanClientIfcsEntryExtChannelDefinition' => 'LCOS-MIB::lcsStatusWlanClientIfcsEntryExtChannel',
  'lcsStatusWlanClientIfcsEntry40mhzCoexistence' => '1.3.6.1.4.1.2356.11.1.3.43.51.1.37',
  'lcsStatusWlanClientIfcsEntry40mhzCoexistenceDefinition' => 'LCOS-MIB::lcsStatusWlanClientIfcsEntry40mhzCoexistence',
  'lcsStatusWlanClientConnectionRejectsTable' => '1.3.6.1.4.1.2356.11.1.3.43.52',
  'lcsStatusWlanClientConnectionRejectsEntry' => '1.3.6.1.4.1.2356.11.1.3.43.52.1',
  'lcsStatusWlanClientConnectionRejectsEntryBssid' => '1.3.6.1.4.1.2356.11.1.3.43.52.1.1',
  'lcsStatusWlanClientConnectionRejectsEntryInterface' => '1.3.6.1.4.1.2356.11.1.3.43.52.1.2',
  'lcsStatusWlanClientConnectionRejectsEntryInterfaceDefinition' => 'LCOS-MIB::lcsStatusWlanClientConnectionRejectsEntryInterface',
  'lcsStatusWlanClientConnectionRejectsEntryAge' => '1.3.6.1.4.1.2356.11.1.3.43.52.1.3',
  'lcsStatusWlanClientConnectionRejectsEntryEvent' => '1.3.6.1.4.1.2356.11.1.3.43.52.1.4',
  'lcsStatusWlanClientConnectionRejectsEntryEventDefinition' => 'LCOS-MIB::lcsStatusWlanClientConnectionRejectsEntryEvent',
  'lcsStatusWlanClientConnectionRejectsEntryStatusOrReason' => '1.3.6.1.4.1.2356.11.1.3.43.52.1.5',
  'lcsStatusWlanCompetingNetworksTable' => '1.3.6.1.4.1.2356.11.1.3.44',
  'lcsStatusWlanCompetingNetworksEntry' => '1.3.6.1.4.1.2356.11.1.3.44.1',
  'lcsStatusWlanCompetingNetworksEntryBssid' => '1.3.6.1.4.1.2356.11.1.3.44.1.1',
  'lcsStatusWlanCompetingNetworksEntryNetworkName' => '1.3.6.1.4.1.2356.11.1.3.44.1.2',
  'lcsStatusWlanCompetingNetworksEntryOperationMode' => '1.3.6.1.4.1.2356.11.1.3.44.1.3',
  'lcsStatusWlanCompetingNetworksEntryOperationModeDefinition' => 'LCOS-MIB::lcsStatusWlanCompetingNetworksEntryOperationMode',
  'lcsStatusWlanCompetingNetworksEntryBeaconPeriod' => '1.3.6.1.4.1.2356.11.1.3.44.1.6',
  'lcsStatusWlanCompetingNetworksEntryDtimPeriod' => '1.3.6.1.4.1.2356.11.1.3.44.1.7',
  'lcsStatusWlanCompetingNetworksEntryRadioChannel' => '1.3.6.1.4.1.2356.11.1.3.44.1.8',
  'lcsStatusWlanCompetingNetworksEntryPhySignal' => '1.3.6.1.4.1.2356.11.1.3.44.1.10',
  'lcsStatusWlanCompetingNetworksEntryNoiseLevel' => '1.3.6.1.4.1.2356.11.1.3.44.1.11',
  'lcsStatusWlanCompetingNetworksEntryLoad' => '1.3.6.1.4.1.2356.11.1.3.44.1.12',
  'lcsStatusWlanCompetingNetworksEntryEncryption' => '1.3.6.1.4.1.2356.11.1.3.44.1.13',
  'lcsStatusWlanCompetingNetworksEntryEncryptionDefinition' => 'LCOS-MIB::lcsStatusWlanCompetingNetworksEntryEncryption',
  'lcsStatusWlanCompetingNetworksEntryShortPreamble' => '1.3.6.1.4.1.2356.11.1.3.44.1.14',
  'lcsStatusWlanCompetingNetworksEntryShortPreambleDefinition' => 'LCOS-MIB::lcsStatusWlanCompetingNetworksEntryShortPreamble',
  'lcsStatusWlanCompetingNetworksEntryInterface' => '1.3.6.1.4.1.2356.11.1.3.44.1.15',
  'lcsStatusWlanCompetingNetworksEntryInterfaceDefinition' => 'LCOS-MIB::lcsStatusWlanCompetingNetworksEntryInterface',
  'lcsStatusWlanCompetingNetworksEntryRadioBand' => '1.3.6.1.4.1.2356.11.1.3.44.1.16',
  'lcsStatusWlanCompetingNetworksEntryRadioBandDefinition' => 'LCOS-MIB::lcsStatusWlanCompetingNetworksEntryRadioBand',
  'lcsStatusWlanCompetingNetworksEntry108mbpsMode' => '1.3.6.1.4.1.2356.11.1.3.44.1.17',
  'lcsStatusWlanCompetingNetworksEntry108mbpsModeDefinition' => 'LCOS-MIB::lcsStatusWlanCompetingNetworksEntry108mbpsMode',
  'lcsStatusWlanCompetingNetworksEntryShortSlotTime' => '1.3.6.1.4.1.2356.11.1.3.44.1.18',
  'lcsStatusWlanCompetingNetworksEntryShortSlotTimeDefinition' => 'LCOS-MIB::lcsStatusWlanCompetingNetworksEntryShortSlotTime',
  'lcsStatusWlanCompetingNetworksEntryRate' => '1.3.6.1.4.1.2356.11.1.3.44.1.19',
  'lcsStatusWlanCompetingNetworksEntryRateDefinition' => 'LCOS-MIB::lcsStatusWlanCompetingNetworksEntryRate',
  'lcsStatusWlanCompetingNetworksEntryNonerpPresent' => '1.3.6.1.4.1.2356.11.1.3.44.1.20',
  'lcsStatusWlanCompetingNetworksEntryNonerpPresentDefinition' => 'LCOS-MIB::lcsStatusWlanCompetingNetworksEntryNonerpPresent',
  'lcsStatusWlanCompetingNetworksEntryCompression' => '1.3.6.1.4.1.2356.11.1.3.44.1.21',
  'lcsStatusWlanCompetingNetworksEntryCompressionDefinition' => 'LCOS-MIB::lcsStatusWlanCompetingNetworksEntryCompression',
  'lcsStatusWlanCompetingNetworksEntryPcfFunctionality' => '1.3.6.1.4.1.2356.11.1.3.44.1.22',
  'lcsStatusWlanCompetingNetworksEntryPcfFunctionalityDefinition' => 'LCOS-MIB::lcsStatusWlanCompetingNetworksEntryPcfFunctionality',
  'lcsStatusWlanCompetingNetworksEntryIdentification' => '1.3.6.1.4.1.2356.11.1.3.44.1.23',
  'lcsStatusWlanCompetingNetworksEntryQos' => '1.3.6.1.4.1.2356.11.1.3.44.1.24',
  'lcsStatusWlanCompetingNetworksEntryQosDefinition' => 'LCOS-MIB::lcsStatusWlanCompetingNetworksEntryQos',
  'lcsStatusWlanCompetingNetworksEntryAge' => '1.3.6.1.4.1.2356.11.1.3.44.1.25',
  'lcsStatusWlanCompetingNetworksEntrySignalLevel' => '1.3.6.1.4.1.2356.11.1.3.44.1.26',
  'lcsStatusWlanCompetingNetworksEntryShortGuardInterval' => '1.3.6.1.4.1.2356.11.1.3.44.1.27',
  'lcsStatusWlanCompetingNetworksEntryShortGuardIntervalDefinition' => 'LCOS-MIB::lcsStatusWlanCompetingNetworksEntryShortGuardInterval',
  'lcsStatusWlanCompetingNetworksEntryExtChannel' => '1.3.6.1.4.1.2356.11.1.3.44.1.28',
  'lcsStatusWlanCompetingNetworksEntryExtChannelDefinition' => 'LCOS-MIB::lcsStatusWlanCompetingNetworksEntryExtChannel',
  'lcsStatusWlanCompetingNetworksEntry40mhzMode' => '1.3.6.1.4.1.2356.11.1.3.44.1.29',
  'lcsStatusWlanCompetingNetworksEntry40mhzModeDefinition' => 'LCOS-MIB::lcsStatusWlanCompetingNetworksEntry40mhzMode',
  'lcsStatusWlanCompetingNetworksEntry40mhzIntolerant' => '1.3.6.1.4.1.2356.11.1.3.44.1.30',
  'lcsStatusWlanCompetingNetworksEntry40mhzIntolerantDefinition' => 'LCOS-MIB::lcsStatusWlanCompetingNetworksEntry40mhzIntolerant',
  'lcsStatusWlanCompetingNetworksEntryInterpointPeerName' => '1.3.6.1.4.1.2356.11.1.3.44.1.31',
  'lcsStatusWlanCompetingNetworksEntryMaxAMpduLen' => '1.3.6.1.4.1.2356.11.1.3.44.1.32',
  'lcsStatusWlanCompetingNetworksEntryMaxAMsduLen' => '1.3.6.1.4.1.2356.11.1.3.44.1.33',
  'lcsStatusWlanCompetingNetworksEntryVendor' => '1.3.6.1.4.1.2356.11.1.3.44.1.34',
  'lcsStatusWlanCompetingNetworksEntryEffRate' => '1.3.6.1.4.1.2356.11.1.3.44.1.35',
  'lcsStatusWlanCompetingNetworksEntry40mhzCoexistence' => '1.3.6.1.4.1.2356.11.1.3.44.1.36',
  'lcsStatusWlanCompetingNetworksEntry40mhzCoexistenceDefinition' => 'LCOS-MIB::lcsStatusWlanCompetingNetworksEntry40mhzCoexistence',
  'lcsStatusWlanSeenClientsTable' => '1.3.6.1.4.1.2356.11.1.3.45',
  'lcsStatusWlanSeenClientsEntry' => '1.3.6.1.4.1.2356.11.1.3.45.1',
  'lcsStatusWlanSeenClientsEntryMacAddress' => '1.3.6.1.4.1.2356.11.1.3.45.1.1',
  'lcsStatusWlanSeenClientsEntryInterface' => '1.3.6.1.4.1.2356.11.1.3.45.1.2',
  'lcsStatusWlanSeenClientsEntryInterfaceDefinition' => 'LCOS-MIB::lcsStatusWlanSeenClientsEntryInterface',
  'lcsStatusWlanSeenClientsEntrySignalLevel' => '1.3.6.1.4.1.2356.11.1.3.45.1.3',
  'lcsStatusWlanSeenClientsEntryAge' => '1.3.6.1.4.1.2356.11.1.3.45.1.4',
  'lcsStatusWlanSeenClientsEntryNetworkName' => '1.3.6.1.4.1.2356.11.1.3.45.1.5',
  'lcsStatusWlanSeenClientsEntryRxPhySignal' => '1.3.6.1.4.1.2356.11.1.3.45.1.6',
  'lcsStatusWlanSeenClientsEntryNumProbes' => '1.3.6.1.4.1.2356.11.1.3.45.1.7',
  'lcsStatusWlanSeenClientsEntryVendor' => '1.3.6.1.4.1.2356.11.1.3.45.1.8',
  'lcsStatusWlanLogTableTable' => '1.3.6.1.4.1.2356.11.1.3.46',
  'lcsStatusWlanLogTableEntry' => '1.3.6.1.4.1.2356.11.1.3.46.1',
  'lcsStatusWlanLogTableEntryIndex' => '1.3.6.1.4.1.2356.11.1.3.46.1.1',
  'lcsStatusWlanLogTableEntryTime' => '1.3.6.1.4.1.2356.11.1.3.46.1.2',
  'lcsStatusWlanLogTableEntryInterface' => '1.3.6.1.4.1.2356.11.1.3.46.1.3',
  'lcsStatusWlanLogTableEntryInterfaceDefinition' => 'LCOS-MIB::lcsStatusWlanLogTableEntryInterface',
  'lcsStatusWlanLogTableEntryEvent' => '1.3.6.1.4.1.2356.11.1.3.46.1.4',
  'lcsStatusWlanLogTableEntryAddress' => '1.3.6.1.4.1.2356.11.1.3.46.1.5',
  'lcsStatusWlanLogTableEntryReason' => '1.3.6.1.4.1.2356.11.1.3.46.1.6',
  'lcsStatusWlanPairwiseKeysTable' => '1.3.6.1.4.1.2356.11.1.3.47',
  'lcsStatusWlanPairwiseKeysEntry' => '1.3.6.1.4.1.2356.11.1.3.47.1',
  'lcsStatusWlanPairwiseKeysEntryIndex' => '1.3.6.1.4.1.2356.11.1.3.47.1.1',
  'lcsStatusWlanPairwiseKeysEntryKeyType' => '1.3.6.1.4.1.2356.11.1.3.47.1.3',
  'lcsStatusWlanPairwiseKeysEntryKeyTypeDefinition' => 'LCOS-MIB::lcsStatusWlanPairwiseKeysEntryKeyType',
  'lcsStatusWlanPairwiseKeysEntryKeyValue' => '1.3.6.1.4.1.2356.11.1.3.47.1.4',
  'lcsStatusWlanPairwiseKeysEntryTsc' => '1.3.6.1.4.1.2356.11.1.3.47.1.5',
  'lcsStatusWlanPairwiseKeysEntryAge' => '1.3.6.1.4.1.2356.11.1.3.47.1.7',
  'lcsStatusWlanPairwiseKeysEntryIvSequenceErrors' => '1.3.6.1.4.1.2356.11.1.3.47.1.8',
  'lcsStatusWlanPairwiseKeysEntryRscBe' => '1.3.6.1.4.1.2356.11.1.3.47.1.16',
  'lcsStatusWlanPairwiseKeysEntryRscBk' => '1.3.6.1.4.1.2356.11.1.3.47.1.17',
  'lcsStatusWlanPairwiseKeysEntryRscEe' => '1.3.6.1.4.1.2356.11.1.3.47.1.19',
  'lcsStatusWlanPairwiseKeysEntryRscCl' => '1.3.6.1.4.1.2356.11.1.3.47.1.20',
  'lcsStatusWlanPairwiseKeysEntryRscVi' => '1.3.6.1.4.1.2356.11.1.3.47.1.21',
  'lcsStatusWlanPairwiseKeysEntryRscVo' => '1.3.6.1.4.1.2356.11.1.3.47.1.22',
  'lcsStatusWlanPairwiseKeysEntryRscNc' => '1.3.6.1.4.1.2356.11.1.3.47.1.23',
  'lcsStatusWlanRadiusCacheTable' => '1.3.6.1.4.1.2356.11.1.3.48',
  'lcsStatusWlanRadiusCacheEntry' => '1.3.6.1.4.1.2356.11.1.3.48.1',
  'lcsStatusWlanRadiusCacheEntryMacAddress' => '1.3.6.1.4.1.2356.11.1.3.48.1.1',
  'lcsStatusWlanRadiusCacheEntryAllowed' => '1.3.6.1.4.1.2356.11.1.3.48.1.2',
  'lcsStatusWlanRadiusCacheEntryAllowedDefinition' => 'LCOS-MIB::lcsStatusWlanRadiusCacheEntryAllowed',
  'lcsStatusWlanRadiusCacheEntryAge' => '1.3.6.1.4.1.2356.11.1.3.48.1.3',
  'lcsStatusWlanIfcsTable' => '1.3.6.1.4.1.2356.11.1.3.51',
  'lcsStatusWlanIfcsEntry' => '1.3.6.1.4.1.2356.11.1.3.51.1',
  'lcsStatusWlanIfcsEntryIfc' => '1.3.6.1.4.1.2356.11.1.3.51.1.1',
  'lcsStatusWlanIfcsEntryMacAddress' => '1.3.6.1.4.1.2356.11.1.3.51.1.2',
  'lcsStatusWlanIfcsEntryOperating' => '1.3.6.1.4.1.2356.11.1.3.51.1.3',
  'lcsStatusWlanIfcsEntryOperatingDefinition' => 'LCOS-MIB::lcsStatusWlanIfcsEntryOperating',
  'lcsStatusWlanIfcsEntryQueuePackets' => '1.3.6.1.4.1.2356.11.1.3.51.1.4',
  'lcsStatusWlanIfcsEntryCardId' => '1.3.6.1.4.1.2356.11.1.3.51.1.5',
  'lcsStatusWlanIfcsEntryFirmwareVersion' => '1.3.6.1.4.1.2356.11.1.3.51.1.6',
  'lcsStatusWlanIfcsEntrySerialNumber' => '1.3.6.1.4.1.2356.11.1.3.51.1.7',
  'lcsStatusWlanIfcsEntryNumStations' => '1.3.6.1.4.1.2356.11.1.3.51.1.8',
  'lcsStatusWlanIfcsEntryOperationMode' => '1.3.6.1.4.1.2356.11.1.3.51.1.9',
  'lcsStatusWlanIfcsEntryOperationModeDefinition' => 'LCOS-MIB::lcsStatusWlanIfcsEntryOperationMode',
  'lcsStatusWlanByteTransportTable' => '1.3.6.1.4.1.2356.11.1.3.52',
  'lcsStatusWlanByteTransportEntry' => '1.3.6.1.4.1.2356.11.1.3.52.1',
  'lcsStatusWlanByteTransportEntryIfc' => '1.3.6.1.4.1.2356.11.1.3.52.1.1',
  'lcsStatusWlanByteTransportEntryTxBytes' => '1.3.6.1.4.1.2356.11.1.3.52.1.2',
  'lcsStatusWlanByteTransportEntryRxBytes' => '1.3.6.1.4.1.2356.11.1.3.52.1.3',
  'lcsStatusWlanByteTransportEntryThroughput' => '1.3.6.1.4.1.2356.11.1.3.52.1.4',
  'lcsStatusWlanByteTransportEntryMaxThroughput' => '1.3.6.1.4.1.2356.11.1.3.52.1.5',
  'lcsStatusWlanByteTransportEntryBytesThroughput' => '1.3.6.1.4.1.2356.11.1.3.52.1.6',
  'lcsStatusWlanByteTransportEntryBytesMaxThroughput' => '1.3.6.1.4.1.2356.11.1.3.52.1.7',
  'lcsStatusWlanPacketTransportTable' => '1.3.6.1.4.1.2356.11.1.3.53',
  'lcsStatusWlanPacketTransportEntry' => '1.3.6.1.4.1.2356.11.1.3.53.1',
  'lcsStatusWlanPacketTransportEntryIfc' => '1.3.6.1.4.1.2356.11.1.3.53.1.1',
  'lcsStatusWlanPacketTransportEntryRxPackets' => '1.3.6.1.4.1.2356.11.1.3.53.1.2',
  'lcsStatusWlanPacketTransportEntryTxPackets' => '1.3.6.1.4.1.2356.11.1.3.53.1.3',
  'lcsStatusWlanPacketTransportEntryRxBroadcasts' => '1.3.6.1.4.1.2356.11.1.3.53.1.4',
  'lcsStatusWlanPacketTransportEntryRxMulticasts' => '1.3.6.1.4.1.2356.11.1.3.53.1.5',
  'lcsStatusWlanPacketTransportEntryRxUnicasts' => '1.3.6.1.4.1.2356.11.1.3.53.1.6',
  'lcsStatusWlanPacketTransportEntryTxBroadcasts' => '1.3.6.1.4.1.2356.11.1.3.53.1.7',
  'lcsStatusWlanPacketTransportEntryTxMulticasts' => '1.3.6.1.4.1.2356.11.1.3.53.1.8',
  'lcsStatusWlanPacketTransportEntryTxUnicasts' => '1.3.6.1.4.1.2356.11.1.3.53.1.9',
  'lcsStatusWlanPacketTransportEntryTxAggregates' => '1.3.6.1.4.1.2356.11.1.3.53.1.12',
  'lcsStatusWlanPacketTransportEntryTxAggrFrames' => '1.3.6.1.4.1.2356.11.1.3.53.1.13',
  'lcsStatusWlanPacketTransportEntryRxAggregates' => '1.3.6.1.4.1.2356.11.1.3.53.1.14',
  'lcsStatusWlanPacketTransportEntryRxAggrFrames' => '1.3.6.1.4.1.2356.11.1.3.53.1.15',
  'lcsStatusWlanPacketTransportEntryRxAMsdu' => '1.3.6.1.4.1.2356.11.1.3.53.1.16',
  'lcsStatusWlanErrorsTable' => '1.3.6.1.4.1.2356.11.1.3.54',
  'lcsStatusWlanErrorsEntry' => '1.3.6.1.4.1.2356.11.1.3.54.1',
  'lcsStatusWlanErrorsEntryIfc' => '1.3.6.1.4.1.2356.11.1.3.54.1.1',
  'lcsStatusWlanErrorsEntryRxErrors' => '1.3.6.1.4.1.2356.11.1.3.54.1.2',
  'lcsStatusWlanErrorsEntryTxErrors' => '1.3.6.1.4.1.2356.11.1.3.54.1.3',
  'lcsStatusWlanErrorsEntryStackErrors' => '1.3.6.1.4.1.2356.11.1.3.54.1.4',
  'lcsStatusWlanErrorsEntryNicErrors' => '1.3.6.1.4.1.2356.11.1.3.54.1.5',
  'lcsStatusWlanErrorsEntryQueueErrors' => '1.3.6.1.4.1.2356.11.1.3.54.1.6',
  'lcsStatusWlanErrorsEntryTxDiscarded' => '1.3.6.1.4.1.2356.11.1.3.54.1.7',
  'lcsStatusWlanErrorsEntryRetries' => '1.3.6.1.4.1.2356.11.1.3.54.1.8',
  'lcsStatusWlanErrorsEntryMultipleRetries' => '1.3.6.1.4.1.2356.11.1.3.54.1.9',
  'lcsStatusWlanErrorsEntryUndecryptables' => '1.3.6.1.4.1.2356.11.1.3.54.1.10',
  'lcsStatusWlanErrorsEntryDupeDiscarded' => '1.3.6.1.4.1.2356.11.1.3.54.1.11',
  'lcsStatusWlanErrorsEntryAged' => '1.3.6.1.4.1.2356.11.1.3.54.1.13',
  'lcsStatusWlanErrorsEntryMichaelErrors' => '1.3.6.1.4.1.2356.11.1.3.54.1.14',
  'lcsStatusWlanErrorsEntryIvSequenceErrors' => '1.3.6.1.4.1.2356.11.1.3.54.1.15',
  'lcsStatusWlanErrorsEntryRxCrcErrors' => '1.3.6.1.4.1.2356.11.1.3.54.1.16',
  'lcsStatusWlanErrorsEntrySoftRetries' => '1.3.6.1.4.1.2356.11.1.3.54.1.17',
  'lcsStatusWlanErrorsEntryRxAggrDiscarded' => '1.3.6.1.4.1.2356.11.1.3.54.1.18',
  'lcsStatusWlanErrorsEntryRxPhyErrors' => '1.3.6.1.4.1.2356.11.1.3.54.1.19',
  'lcsStatusWlanErrorsEntryRxFifoOverflow' => '1.3.6.1.4.1.2356.11.1.3.54.1.20',
  'lcsStatusWlanErrorsEntryTxFifoUnderflow' => '1.3.6.1.4.1.2356.11.1.3.54.1.21',
  'lcsStatusWlanErrorsEntryBusErrors' => '1.3.6.1.4.1.2356.11.1.3.54.1.22',
  'lcsStatusWlanWlanParameterTable' => '1.3.6.1.4.1.2356.11.1.3.55',
  'lcsStatusWlanWlanParameterEntry' => '1.3.6.1.4.1.2356.11.1.3.55.1',
  'lcsStatusWlanWlanParameterEntryIfc' => '1.3.6.1.4.1.2356.11.1.3.55.1.1',
  'lcsStatusWlanWlanParameterEntryRadioChannel' => '1.3.6.1.4.1.2356.11.1.3.55.1.3',
  'lcsStatusWlanWlanParameterEntryRegulatoryDomain' => '1.3.6.1.4.1.2356.11.1.3.55.1.4',
  'lcsStatusWlanWlanParameterEntryRegulatoryDomainDefinition' => 'LCOS-MIB::lcsStatusWlanWlanParameterEntryRegulatoryDomain',
  'lcsStatusWlanWlanParameterEntryPhyType' => '1.3.6.1.4.1.2356.11.1.3.55.1.5',
  'lcsStatusWlanWlanParameterEntryPhyTypeDefinition' => 'LCOS-MIB::lcsStatusWlanWlanParameterEntryPhyType',
  'lcsStatusWlanWlanParameterEntryWepSupport' => '1.3.6.1.4.1.2356.11.1.3.55.1.7',
  'lcsStatusWlanWlanParameterEntryWepSupportDefinition' => 'LCOS-MIB::lcsStatusWlanWlanParameterEntryWepSupport',
  'lcsStatusWlanWlanParameterEntryMaximumRate' => '1.3.6.1.4.1.2356.11.1.3.55.1.8',
  'lcsStatusWlanWlanParameterEntryMaximumRateDefinition' => 'LCOS-MIB::lcsStatusWlanWlanParameterEntryMaximumRate',
  'lcsStatusWlanWlanParameterEntryTemperatureRange' => '1.3.6.1.4.1.2356.11.1.3.55.1.9',
  'lcsStatusWlanWlanParameterEntryTemperatureRangeDefinition' => 'LCOS-MIB::lcsStatusWlanWlanParameterEntryTemperatureRange',
  'lcsStatusWlanWlanParameterEntryPhyVariant' => '1.3.6.1.4.1.2356.11.1.3.55.1.10',
  'lcsStatusWlanWlanParameterEntryRadioBand' => '1.3.6.1.4.1.2356.11.1.3.55.1.11',
  'lcsStatusWlanWlanParameterEntryRadioBandDefinition' => 'LCOS-MIB::lcsStatusWlanWlanParameterEntryRadioBand',
  'lcsStatusWlanWlanParameterEntrySupportedBands' => '1.3.6.1.4.1.2356.11.1.3.55.1.12',
  'lcsStatusWlanWlanParameterEntrySupportedBandsDefinition' => 'LCOS-MIB::lcsStatusWlanWlanParameterEntrySupportedBands',
  'lcsStatusWlanWlanParameterEntryNoiseLevel' => '1.3.6.1.4.1.2356.11.1.3.55.1.13',
  'lcsStatusWlanWlanParameterEntrySupportsShortPreamble' => '1.3.6.1.4.1.2356.11.1.3.55.1.14',
  'lcsStatusWlanWlanParameterEntrySupportsShortPreambleDefinition' => 'LCOS-MIB::lcsStatusWlanWlanParameterEntrySupportsShortPreamble',
  'lcsStatusWlanWlanParameterEntryTransmitPower' => '1.3.6.1.4.1.2356.11.1.3.55.1.15',
  'lcsStatusWlanWlanParameterEntry108mbpsMode' => '1.3.6.1.4.1.2356.11.1.3.55.1.16',
  'lcsStatusWlanWlanParameterEntry108mbpsModeDefinition' => 'LCOS-MIB::lcsStatusWlanWlanParameterEntry108mbpsMode',
  'lcsStatusWlanWlanParameterEntrySupportsShortSlotTime' => '1.3.6.1.4.1.2356.11.1.3.55.1.17',
  'lcsStatusWlanWlanParameterEntrySupportsShortSlotTimeDefinition' => 'LCOS-MIB::lcsStatusWlanWlanParameterEntrySupportsShortSlotTime',
  'lcsStatusWlanWlanParameterEntryTkipSupport' => '1.3.6.1.4.1.2356.11.1.3.55.1.18',
  'lcsStatusWlanWlanParameterEntryTkipSupportDefinition' => 'LCOS-MIB::lcsStatusWlanWlanParameterEntryTkipSupport',
  'lcsStatusWlanWlanParameterEntryAesSupport' => '1.3.6.1.4.1.2356.11.1.3.55.1.19',
  'lcsStatusWlanWlanParameterEntryAesSupportDefinition' => 'LCOS-MIB::lcsStatusWlanWlanParameterEntryAesSupport',
  'lcsStatusWlanWlanParameterEntrySupportsCompression' => '1.3.6.1.4.1.2356.11.1.3.55.1.20',
  'lcsStatusWlanWlanParameterEntrySupportsCompressionDefinition' => 'LCOS-MIB::lcsStatusWlanWlanParameterEntrySupportsCompression',
  'lcsStatusWlanWlanParameterEntryMinimumRate' => '1.3.6.1.4.1.2356.11.1.3.55.1.21',
  'lcsStatusWlanWlanParameterEntryMinimumRateDefinition' => 'LCOS-MIB::lcsStatusWlanWlanParameterEntryMinimumRate',
  'lcsStatusWlanWlanParameterEntryEirp' => '1.3.6.1.4.1.2356.11.1.3.55.1.22',
  'lcsStatusWlanWlanParameterEntryExcEirp' => '1.3.6.1.4.1.2356.11.1.3.55.1.23',
  'lcsStatusWlanWlanParameterEntryExcEirpDefinition' => 'LCOS-MIB::lcsStatusWlanWlanParameterEntryExcEirp',
  'lcsStatusWlanWlanParameterEntryModemLoad' => '1.3.6.1.4.1.2356.11.1.3.55.1.24',
  'lcsStatusWlanWlanParameterEntryBeaconPeriod' => '1.3.6.1.4.1.2356.11.1.3.55.1.25',
  'lcsStatusWlanWlanParameterEntrySupportsShortGuardInterval' => '1.3.6.1.4.1.2356.11.1.3.55.1.26',
  'lcsStatusWlanWlanParameterEntrySupportsShortGuardIntervalDefinition' => 'LCOS-MIB::lcsStatusWlanWlanParameterEntrySupportsShortGuardInterval',
  'lcsStatusWlanWlanParameterEntrySupports40mhz' => '1.3.6.1.4.1.2356.11.1.3.55.1.28',
  'lcsStatusWlanWlanParameterEntrySupports40mhzDefinition' => 'LCOS-MIB::lcsStatusWlanWlanParameterEntrySupports40mhz',
  'lcsStatusWlanWlanParameterEntryTxChains' => '1.3.6.1.4.1.2356.11.1.3.55.1.29',
  'lcsStatusWlanWlanParameterEntryRxChains' => '1.3.6.1.4.1.2356.11.1.3.55.1.30',
  'lcsStatusWlanWlanParameterEntrySupportedDfsSchemes' => '1.3.6.1.4.1.2356.11.1.3.55.1.32',
  'lcsStatusWlanWlanParameterEntrySupportedAntennas' => '1.3.6.1.4.1.2356.11.1.3.55.1.33',
  'lcsStatusWlanWlanParameterEntrySupportedAntennasDefinition' => 'LCOS-MIB::lcsStatusWlanWlanParameterEntrySupportedAntennas',
  'lcsStatusWlanNetworksTable' => '1.3.6.1.4.1.2356.11.1.3.56',
  'lcsStatusWlanNetworksEntry' => '1.3.6.1.4.1.2356.11.1.3.56.1',
  'lcsStatusWlanNetworksEntryIfc' => '1.3.6.1.4.1.2356.11.1.3.56.1.1',
  'lcsStatusWlanNetworksEntryOperating' => '1.3.6.1.4.1.2356.11.1.3.56.1.2',
  'lcsStatusWlanNetworksEntryOperatingDefinition' => 'LCOS-MIB::lcsStatusWlanNetworksEntryOperating',
  'lcsStatusWlanNetworksEntryNetworkName' => '1.3.6.1.4.1.2356.11.1.3.56.1.3',
  'lcsStatusWlanNetworksEntryNumStations' => '1.3.6.1.4.1.2356.11.1.3.56.1.4',
  'lcsStatusWlanNetworksEntryMcastPwrSave' => '1.3.6.1.4.1.2356.11.1.3.56.1.5',
  'lcsStatusWlanNetworksEntryMcastPwrSaveDefinition' => 'LCOS-MIB::lcsStatusWlanNetworksEntryMcastPwrSave',
  'lcsStatusWlanNetworksEntryBssid' => '1.3.6.1.4.1.2356.11.1.3.56.1.6',
  'lcsStatusWlanNetworksEntryVlanId' => '1.3.6.1.4.1.2356.11.1.3.56.1.7',
  'lcsStatusWlanNetworksEntryApsd' => '1.3.6.1.4.1.2356.11.1.3.56.1.8',
  'lcsStatusWlanNetworksEntryApsdDefinition' => 'LCOS-MIB::lcsStatusWlanNetworksEntryApsd',
  'lcsStatusWlanNetworksEntryRadioMode' => '1.3.6.1.4.1.2356.11.1.3.56.1.9',
  'lcsStatusWlanNetworksEntryRadioModeDefinition' => 'LCOS-MIB::lcsStatusWlanNetworksEntryRadioMode',
  'lcsStatusWlanNetworksEntryAlarmState' => '1.3.6.1.4.1.2356.11.1.3.56.1.10',
  'lcsStatusWlanNetworksEntryAlarmStateDefinition' => 'LCOS-MIB::lcsStatusWlanNetworksEntryAlarmState',
  'lcsStatusWlanRadiosTable' => '1.3.6.1.4.1.2356.11.1.3.57',
  'lcsStatusWlanRadiosEntry' => '1.3.6.1.4.1.2356.11.1.3.57.1',
  'lcsStatusWlanRadiosEntryIfc' => '1.3.6.1.4.1.2356.11.1.3.57.1.1',
  'lcsStatusWlanRadiosEntryRadioBand' => '1.3.6.1.4.1.2356.11.1.3.57.1.2',
  'lcsStatusWlanRadiosEntryRadioBandDefinition' => 'LCOS-MIB::lcsStatusWlanRadiosEntryRadioBand',
  'lcsStatusWlanRadiosEntryRadioChannel' => '1.3.6.1.4.1.2356.11.1.3.57.1.3',
  'lcsStatusWlanRadiosEntryNoiseLevel' => '1.3.6.1.4.1.2356.11.1.3.57.1.5',
  'lcsStatusWlanRadiosEntryModemLoad' => '1.3.6.1.4.1.2356.11.1.3.57.1.6',
  'lcsStatusWlanRadiosEntryTransmitPower' => '1.3.6.1.4.1.2356.11.1.3.57.1.7',
  'lcsStatusWlanRadiosEntryEirp' => '1.3.6.1.4.1.2356.11.1.3.57.1.8',
  'lcsStatusWlanRadiosEntryExcEirp' => '1.3.6.1.4.1.2356.11.1.3.57.1.9',
  'lcsStatusWlanRadiosEntryExcEirpDefinition' => 'LCOS-MIB::lcsStatusWlanRadiosEntryExcEirp',
  'lcsStatusWlanRadiosEntryBackgroundScan' => '1.3.6.1.4.1.2356.11.1.3.57.1.10',
  'lcsStatusWlanRadiosEntryExtChannel' => '1.3.6.1.4.1.2356.11.1.3.57.1.11',
  'lcsStatusWlanRadiosEntryExtChannelDefinition' => 'LCOS-MIB::lcsStatusWlanRadiosEntryExtChannel',
  'lcsStatusWlanRadiosEntryBackgroundScanUnit' => '1.3.6.1.4.1.2356.11.1.3.57.1.12',
  'lcsStatusWlanRadiosEntryBackgroundScanUnitDefinition' => 'LCOS-MIB::lcsStatusWlanRadiosEntryBackgroundScanUnit',
  'lcsStatusWlanRadiosEntryDfsScheme' => '1.3.6.1.4.1.2356.11.1.3.57.1.13',
  'lcsStatusWlanRadiosEntryDfsSchemeDefinition' => 'LCOS-MIB::lcsStatusWlanRadiosEntryDfsScheme',
  'lcsStatusWlanRadiosEntryRadioMode' => '1.3.6.1.4.1.2356.11.1.3.57.1.14',
  'lcsStatusWlanRadiosEntryRadioModeDefinition' => 'LCOS-MIB::lcsStatusWlanRadiosEntryRadioMode',
  'lcsStatusWlanRadiosEntry40mhzPermitted' => '1.3.6.1.4.1.2356.11.1.3.57.1.15',
  'lcsStatusWlanRadiosEntry40mhzPermittedDefinition' => 'LCOS-MIB::lcsStatusWlanRadiosEntry40mhzPermitted',
  'lcsStatusWlanQosParametersTable' => '1.3.6.1.4.1.2356.11.1.3.58',
  'lcsStatusWlanQosParametersEntry' => '1.3.6.1.4.1.2356.11.1.3.58.1',
  'lcsStatusWlanQosParametersEntryIfc' => '1.3.6.1.4.1.2356.11.1.3.58.1.1',
  'lcsStatusWlanQosParametersEntryAccessCategory' => '1.3.6.1.4.1.2356.11.1.3.58.1.2',
  'lcsStatusWlanQosParametersEntryAccessCategoryDefinition' => 'LCOS-MIB::lcsStatusWlanQosParametersEntryAccessCategory',
  'lcsStatusWlanQosParametersEntryTxop' => '1.3.6.1.4.1.2356.11.1.3.58.1.3',
  'lcsStatusWlanQosParametersEntryCwmin' => '1.3.6.1.4.1.2356.11.1.3.58.1.4',
  'lcsStatusWlanQosParametersEntryCwmax' => '1.3.6.1.4.1.2356.11.1.3.58.1.5',
  'lcsStatusWlanQosParametersEntryAifs' => '1.3.6.1.4.1.2356.11.1.3.58.1.6',
  'lcsStatusWlanQosPacketStatisticsTable' => '1.3.6.1.4.1.2356.11.1.3.59',
  'lcsStatusWlanQosPacketStatisticsEntry' => '1.3.6.1.4.1.2356.11.1.3.59.1',
  'lcsStatusWlanQosPacketStatisticsEntryIfc' => '1.3.6.1.4.1.2356.11.1.3.59.1.1',
  'lcsStatusWlanQosPacketStatisticsEntryAccessCategory' => '1.3.6.1.4.1.2356.11.1.3.59.1.2',
  'lcsStatusWlanQosPacketStatisticsEntryAccessCategoryDefinition' => 'LCOS-MIB::lcsStatusWlanQosPacketStatisticsEntryAccessCategory',
  'lcsStatusWlanQosPacketStatisticsEntryTxPackets' => '1.3.6.1.4.1.2356.11.1.3.59.1.3',
  'lcsStatusWlanQosPacketStatisticsEntryTxDiscarded' => '1.3.6.1.4.1.2356.11.1.3.59.1.4',
  'lcsStatusWlanVlanGroupkeyMappingTable' => '1.3.6.1.4.1.2356.11.1.3.70',
  'lcsStatusWlanVlanGroupkeyMappingEntry' => '1.3.6.1.4.1.2356.11.1.3.70.1',
  'lcsStatusWlanVlanGroupkeyMappingEntryNetwork' => '1.3.6.1.4.1.2356.11.1.3.70.1.1',
  'lcsStatusWlanVlanGroupkeyMappingEntryNetworkDefinition' => 'LCOS-MIB::lcsStatusWlanVlanGroupkeyMappingEntryNetwork',
  'lcsStatusWlanVlanGroupkeyMappingEntryVlanId' => '1.3.6.1.4.1.2356.11.1.3.70.1.2',
  'lcsStatusWlanVlanGroupkeyMappingEntryGroupkeyIndex' => '1.3.6.1.4.1.2356.11.1.3.70.1.3',
  'lcsStatusWlanVlanGroupkeyMappingEntrySource' => '1.3.6.1.4.1.2356.11.1.3.70.1.4',
  'lcsStatusWlanVlanGroupkeyMappingEntrySourceDefinition' => 'LCOS-MIB::lcsStatusWlanVlanGroupkeyMappingEntrySource',
  'lcsStatusWlanDfsForceRescan' => '1.3.6.1.4.1.2356.11.1.3.100',
  'lcsStatusWan' => '1.3.6.1.4.1.2356.11.1.4',
  'lcsStatusWanByteTransportTable' => '1.3.6.1.4.1.2356.11.1.4.1',
  'lcsStatusWanByteTransportEntry' => '1.3.6.1.4.1.2356.11.1.4.1.1',
  'lcsStatusWanByteTransportEntryIfc' => '1.3.6.1.4.1.2356.11.1.4.1.1.1',
  'lcsStatusWanByteTransportEntryIfcDefinition' => 'LCOS-MIB::lcsStatusWanByteTransportEntryIfc',
  'lcsStatusWanByteTransportEntryCrxBytes' => '1.3.6.1.4.1.2356.11.1.4.1.1.2',
  'lcsStatusWanByteTransportEntryRxBytes' => '1.3.6.1.4.1.2356.11.1.4.1.1.3',
  'lcsStatusWanByteTransportEntryTxBytes' => '1.3.6.1.4.1.2356.11.1.4.1.1.4',
  'lcsStatusWanByteTransportEntryCtxBytes' => '1.3.6.1.4.1.2356.11.1.4.1.1.5',
  'lcsStatusWanPacketTransportTable' => '1.3.6.1.4.1.2356.11.1.4.2',
  'lcsStatusWanPacketTransportEntry' => '1.3.6.1.4.1.2356.11.1.4.2.1',
  'lcsStatusWanPacketTransportEntryIfc' => '1.3.6.1.4.1.2356.11.1.4.2.1.1',
  'lcsStatusWanPacketTransportEntryIfcDefinition' => 'LCOS-MIB::lcsStatusWanPacketTransportEntryIfc',
  'lcsStatusWanPacketTransportEntryRx' => '1.3.6.1.4.1.2356.11.1.4.2.1.2',
  'lcsStatusWanPacketTransportEntryTxTotal' => '1.3.6.1.4.1.2356.11.1.4.2.1.3',
  'lcsStatusWanPacketTransportEntryTxNormal' => '1.3.6.1.4.1.2356.11.1.4.2.1.4',
  'lcsStatusWanPacketTransportEntryTxReliable' => '1.3.6.1.4.1.2356.11.1.4.2.1.5',
  'lcsStatusWanPacketTransportEntryTxUrgent' => '1.3.6.1.4.1.2356.11.1.4.2.1.6',
  'lcsStatusWanErrorsTable' => '1.3.6.1.4.1.2356.11.1.4.3',
  'lcsStatusWanErrorsEntry' => '1.3.6.1.4.1.2356.11.1.4.3.1',
  'lcsStatusWanErrorsEntryIfc' => '1.3.6.1.4.1.2356.11.1.4.3.1.1',
  'lcsStatusWanErrorsEntryIfcDefinition' => 'LCOS-MIB::lcsStatusWanErrorsEntryIfc',
  'lcsStatusWanErrorsEntryRxL1Error' => '1.3.6.1.4.1.2356.11.1.4.3.1.2',
  'lcsStatusWanErrorsEntryRxL2Error' => '1.3.6.1.4.1.2356.11.1.4.3.1.3',
  'lcsStatusWanErrorsEntryRxL3Error' => '1.3.6.1.4.1.2356.11.1.4.3.1.4',
  'lcsStatusWanErrorsEntryStackError' => '1.3.6.1.4.1.2356.11.1.4.3.1.5',
  'lcsStatusWanErrorsEntryTxError' => '1.3.6.1.4.1.2356.11.1.4.3.1.6',
  'lcsStatusWanErrorsEntryQueueErrors' => '1.3.6.1.4.1.2356.11.1.4.3.1.7',
  'lcsStatusWanWanTxDiscarded' => '1.3.6.1.4.1.2356.11.1.4.4',
  'lcsStatusWanWanHeapPackets' => '1.3.6.1.4.1.2356.11.1.4.5',
  'lcsStatusWanWanQueuePackets' => '1.3.6.1.4.1.2356.11.1.4.6',
  'lcsStatusWanWanQueueErrors' => '1.3.6.1.4.1.2356.11.1.4.7',
  'lcsStatusWanThroughputTable' => '1.3.6.1.4.1.2356.11.1.4.8',
  'lcsStatusWanThroughputEntry' => '1.3.6.1.4.1.2356.11.1.4.8.1',
  'lcsStatusWanThroughputEntryIfc' => '1.3.6.1.4.1.2356.11.1.4.8.1.1',
  'lcsStatusWanThroughputEntryIfcDefinition' => 'LCOS-MIB::lcsStatusWanThroughputEntryIfc',
  'lcsStatusWanThroughputEntryRxSCurrent' => '1.3.6.1.4.1.2356.11.1.4.8.1.2',
  'lcsStatusWanThroughputEntryTxSCurrent' => '1.3.6.1.4.1.2356.11.1.4.8.1.3',
  'lcsStatusWanThroughputEntryRxSAverage' => '1.3.6.1.4.1.2356.11.1.4.8.1.4',
  'lcsStatusWanThroughputEntryTxSAverage' => '1.3.6.1.4.1.2356.11.1.4.8.1.5',
  'lcsStatusWanDeleteValues' => '1.3.6.1.4.1.2356.11.1.4.9',
  'lcsStatusWanConnections' => '1.3.6.1.4.1.2356.11.1.4.10',
  'lcsStatusWanMtuTable' => '1.3.6.1.4.1.2356.11.1.4.11',
  'lcsStatusWanMtuEntry' => '1.3.6.1.4.1.2356.11.1.4.11.1',
  'lcsStatusWanMtuEntryPeer' => '1.3.6.1.4.1.2356.11.1.4.11.1.1',
  'lcsStatusWanMtuEntryMtu' => '1.3.6.1.4.1.2356.11.1.4.11.1.2',
  'lcsStatusWanActions' => '1.3.6.1.4.1.2356.11.1.4.20',
  'lcsStatusWanActionsActionTableTable' => '1.3.6.1.4.1.2356.11.1.4.20.1',
  'lcsStatusWanActionsActionTableEntry' => '1.3.6.1.4.1.2356.11.1.4.20.1.1',
  'lcsStatusWanActionsActionTableEntryTime' => '1.3.6.1.4.1.2356.11.1.4.20.1.1.1',
  'lcsStatusWanActionsActionTableEntryAction' => '1.3.6.1.4.1.2356.11.1.4.20.1.1.2',
  'lcsStatusWanActionsActionTableEntryResult' => '1.3.6.1.4.1.2356.11.1.4.20.1.1.3',
  'lcsStatusWanActionsLockTableTable' => '1.3.6.1.4.1.2356.11.1.4.20.2',
  'lcsStatusWanActionsLockTableEntry' => '1.3.6.1.4.1.2356.11.1.4.20.2.1',
  'lcsStatusWanActionsLockTableEntryIndex' => '1.3.6.1.4.1.2356.11.1.4.20.2.1.1',
  'lcsStatusWanActionsLockTableEntryRemainingLocktime' => '1.3.6.1.4.1.2356.11.1.4.20.2.1.2',
  'lcsStatusWanWanQueueMgtDrop' => '1.3.6.1.4.1.2356.11.1.4.21',
  'lcsStatusLan' => '1.3.6.1.4.1.2356.11.1.5',
  'lcsStatusLanLanHeapPackets' => '1.3.6.1.4.1.2356.11.1.5.7',
  'lcsStatusLanDeleteValues' => '1.3.6.1.4.1.2356.11.1.5.11',
  'lcsStatusLanInterfacesTable' => '1.3.6.1.4.1.2356.11.1.5.51',
  'lcsStatusLanInterfacesEntry' => '1.3.6.1.4.1.2356.11.1.5.51.1',
  'lcsStatusLanInterfacesEntryIfc' => '1.3.6.1.4.1.2356.11.1.5.51.1.1',
  'lcsStatusLanInterfacesEntryQueuePackets' => '1.3.6.1.4.1.2356.11.1.5.51.1.2',
  'lcsStatusLanInterfacesEntryLinkActive' => '1.3.6.1.4.1.2356.11.1.5.51.1.3',
  'lcsStatusLanInterfacesEntryLinkActiveDefinition' => 'LCOS-MIB::lcsStatusLanInterfacesEntryLinkActive',
  'lcsStatusLanInterfacesEntryConnector' => '1.3.6.1.4.1.2356.11.1.5.51.1.4',
  'lcsStatusLanInterfacesEntryConnectorDefinition' => 'LCOS-MIB::lcsStatusLanInterfacesEntryConnector',
  'lcsStatusLanInterfacesEntryFlowControl' => '1.3.6.1.4.1.2356.11.1.5.51.1.6',
  'lcsStatusLanInterfacesEntryFlowControlDefinition' => 'LCOS-MIB::lcsStatusLanInterfacesEntryFlowControl',
  'lcsStatusLanInterfacesEntryMdiMode' => '1.3.6.1.4.1.2356.11.1.5.51.1.7',
  'lcsStatusLanInterfacesEntryMdiModeDefinition' => 'LCOS-MIB::lcsStatusLanInterfacesEntryMdiMode',
  'lcsStatusLanInterfacesEntryAutoNegotiation' => '1.3.6.1.4.1.2356.11.1.5.51.1.8',
  'lcsStatusLanInterfacesEntryAutoNegotiationDefinition' => 'LCOS-MIB::lcsStatusLanInterfacesEntryAutoNegotiation',
  'lcsStatusLanInterfacesEntryDownshift' => '1.3.6.1.4.1.2356.11.1.5.51.1.9',
  'lcsStatusLanInterfacesEntryDownshiftDefinition' => 'LCOS-MIB::lcsStatusLanInterfacesEntryDownshift',
  'lcsStatusLanInterfacesEntryClockRole' => '1.3.6.1.4.1.2356.11.1.5.51.1.10',
  'lcsStatusLanInterfacesEntryClockRoleDefinition' => 'LCOS-MIB::lcsStatusLanInterfacesEntryClockRole',
  'lcsStatusLanInterfacesEntryRemoteFault' => '1.3.6.1.4.1.2356.11.1.5.51.1.11',
  'lcsStatusLanInterfacesEntryRemoteFaultDefinition' => 'LCOS-MIB::lcsStatusLanInterfacesEntryRemoteFault',
  'lcsStatusLanByteTransportTable' => '1.3.6.1.4.1.2356.11.1.5.52',
  'lcsStatusLanByteTransportEntry' => '1.3.6.1.4.1.2356.11.1.5.52.1',
  'lcsStatusLanByteTransportEntryIfc' => '1.3.6.1.4.1.2356.11.1.5.52.1.1',
  'lcsStatusLanByteTransportEntryTxBytes' => '1.3.6.1.4.1.2356.11.1.5.52.1.2',
  'lcsStatusLanByteTransportEntryRxBytes' => '1.3.6.1.4.1.2356.11.1.5.52.1.3',
  'lcsStatusLanByteTransportEntryThroughput' => '1.3.6.1.4.1.2356.11.1.5.52.1.4',
  'lcsStatusLanByteTransportEntryMaxThroughput' => '1.3.6.1.4.1.2356.11.1.5.52.1.5',
  'lcsStatusLanByteTransportEntryBytesThroughput' => '1.3.6.1.4.1.2356.11.1.5.52.1.6',
  'lcsStatusLanByteTransportEntryBytesMaxThroughput' => '1.3.6.1.4.1.2356.11.1.5.52.1.7',
  'lcsStatusLanPacketTransportTable' => '1.3.6.1.4.1.2356.11.1.5.53',
  'lcsStatusLanPacketTransportEntry' => '1.3.6.1.4.1.2356.11.1.5.53.1',
  'lcsStatusLanPacketTransportEntryIfc' => '1.3.6.1.4.1.2356.11.1.5.53.1.1',
  'lcsStatusLanPacketTransportEntryRxPackets' => '1.3.6.1.4.1.2356.11.1.5.53.1.2',
  'lcsStatusLanPacketTransportEntryTxPackets' => '1.3.6.1.4.1.2356.11.1.5.53.1.3',
  'lcsStatusLanPacketTransportEntryRxBroadcasts' => '1.3.6.1.4.1.2356.11.1.5.53.1.4',
  'lcsStatusLanPacketTransportEntryRxMulticasts' => '1.3.6.1.4.1.2356.11.1.5.53.1.5',
  'lcsStatusLanPacketTransportEntryRxUnicasts' => '1.3.6.1.4.1.2356.11.1.5.53.1.6',
  'lcsStatusLanPacketTransportEntryTxBroadcasts' => '1.3.6.1.4.1.2356.11.1.5.53.1.7',
  'lcsStatusLanPacketTransportEntryTxMulticasts' => '1.3.6.1.4.1.2356.11.1.5.53.1.8',
  'lcsStatusLanPacketTransportEntryTxUnicasts' => '1.3.6.1.4.1.2356.11.1.5.53.1.9',
  'lcsStatusLanErrorsTable' => '1.3.6.1.4.1.2356.11.1.5.54',
  'lcsStatusLanErrorsEntry' => '1.3.6.1.4.1.2356.11.1.5.54.1',
  'lcsStatusLanErrorsEntryIfc' => '1.3.6.1.4.1.2356.11.1.5.54.1.1',
  'lcsStatusLanErrorsEntryRxErrors' => '1.3.6.1.4.1.2356.11.1.5.54.1.2',
  'lcsStatusLanErrorsEntryTxErrors' => '1.3.6.1.4.1.2356.11.1.5.54.1.3',
  'lcsStatusLanErrorsEntryStackErrors' => '1.3.6.1.4.1.2356.11.1.5.54.1.4',
  'lcsStatusLanErrorsEntryNicErrors' => '1.3.6.1.4.1.2356.11.1.5.54.1.5',
  'lcsStatusLanErrorsEntryQueueErrors' => '1.3.6.1.4.1.2356.11.1.5.54.1.6',
  'lcsStatusLanErrorsEntryRxCrcErrors' => '1.3.6.1.4.1.2356.11.1.5.54.1.7',
  'lcsStatusLanErrorsEntryCollisions' => '1.3.6.1.4.1.2356.11.1.5.54.1.8',
  'lcsStatusLanErrorsEntrySingleCollisions' => '1.3.6.1.4.1.2356.11.1.5.54.1.9',
  'lcsStatusLanErrorsEntryMultipleCollisions' => '1.3.6.1.4.1.2356.11.1.5.54.1.10',
  'lcsStatusLanErrorsEntryLateCollisions' => '1.3.6.1.4.1.2356.11.1.5.54.1.11',
  'lcsStatusLanErrorsEntryExcessiveCollisions' => '1.3.6.1.4.1.2356.11.1.5.54.1.12',
  'lcsStatusLanErrorsEntryRxAlignErrors' => '1.3.6.1.4.1.2356.11.1.5.54.1.13',
  'lcsStatusLanErrorsEntryRxTooShort' => '1.3.6.1.4.1.2356.11.1.5.54.1.14',
  'lcsStatusLanErrorsEntryRxTooLong' => '1.3.6.1.4.1.2356.11.1.5.54.1.15',
  'lcsStatusLanErrorsEntryTxCarrier' => '1.3.6.1.4.1.2356.11.1.5.54.1.16',
  'lcsStatusLanErrorsEntryTxDeferred' => '1.3.6.1.4.1.2356.11.1.5.54.1.17',
  'lcsStatusLanErrorsEntryRxPhyErrors' => '1.3.6.1.4.1.2356.11.1.5.54.1.18',
  'lcsStatusLanLanQueueMgtDrop' => '1.3.6.1.4.1.2356.11.1.5.60',
  'lcsStatusLanCableTest' => '1.3.6.1.4.1.2356.11.1.5.70',
  'lcsStatusLanCableTestResultsTable' => '1.3.6.1.4.1.2356.11.1.5.71',
  'lcsStatusLanCableTestResultsEntry' => '1.3.6.1.4.1.2356.11.1.5.71.1',
  'lcsStatusLanCableTestResultsEntryIfc' => '1.3.6.1.4.1.2356.11.1.5.71.1.1',
  'lcsStatusLanCableTestResultsEntryIfcDefinition' => 'LCOS-MIB::lcsStatusLanCableTestResultsEntryIfc',
  'lcsStatusLanCableTestResultsEntryMdi0Status' => '1.3.6.1.4.1.2356.11.1.5.71.1.6',
  'lcsStatusLanCableTestResultsEntryMdi0StatusDefinition' => 'LCOS-MIB::lcsStatusLanCableTestResultsEntryMdi0Status',
  'lcsStatusLanCableTestResultsEntryMdi0Distance' => '1.3.6.1.4.1.2356.11.1.5.71.1.7',
  'lcsStatusLanCableTestResultsEntryMdi1Status' => '1.3.6.1.4.1.2356.11.1.5.71.1.8',
  'lcsStatusLanCableTestResultsEntryMdi1StatusDefinition' => 'LCOS-MIB::lcsStatusLanCableTestResultsEntryMdi1Status',
  'lcsStatusLanCableTestResultsEntryMdi1Distance' => '1.3.6.1.4.1.2356.11.1.5.71.1.9',
  'lcsStatusLanCableTestResultsEntryMdi2Status' => '1.3.6.1.4.1.2356.11.1.5.71.1.10',
  'lcsStatusLanCableTestResultsEntryMdi2StatusDefinition' => 'LCOS-MIB::lcsStatusLanCableTestResultsEntryMdi2Status',
  'lcsStatusLanCableTestResultsEntryMdi2Distance' => '1.3.6.1.4.1.2356.11.1.5.71.1.11',
  'lcsStatusLanCableTestResultsEntryMdi3Status' => '1.3.6.1.4.1.2356.11.1.5.71.1.12',
  'lcsStatusLanCableTestResultsEntryMdi3StatusDefinition' => 'LCOS-MIB::lcsStatusLanCableTestResultsEntryMdi3Status',
  'lcsStatusLanCableTestResultsEntryMdi3Distance' => '1.3.6.1.4.1.2356.11.1.5.71.1.13',
  'lcsStatusLanIeee8021x' => '1.3.6.1.4.1.2356.11.1.5.80',
  'lcsStatusLanIeee8021xSupplicantIfcStateTable' => '1.3.6.1.4.1.2356.11.1.5.80.1',
  'lcsStatusLanIeee8021xSupplicantIfcStateEntry' => '1.3.6.1.4.1.2356.11.1.5.80.1.1',
  'lcsStatusLanIeee8021xSupplicantIfcStateEntryIfc' => '1.3.6.1.4.1.2356.11.1.5.80.1.1.1',
  'lcsStatusLanIeee8021xSupplicantIfcStateEntryIfcDefinition' => 'LCOS-MIB::lcsStatusLanIeee8021xSupplicantIfcStateEntryIfc',
  'lcsStatusLanIeee8021xSupplicantIfcStateEntryMethod' => '1.3.6.1.4.1.2356.11.1.5.80.1.1.2',
  'lcsStatusLanIeee8021xSupplicantIfcStateEntryMethodDefinition' => 'LCOS-MIB::lcsStatusLanIeee8021xSupplicantIfcStateEntryMethod',
  'lcsStatusLanIeee8021xSupplicantIfcStateEntryState' => '1.3.6.1.4.1.2356.11.1.5.80.1.1.3',
  'lcsStatusLanIeee8021xSupplicantIfcStateEntryStateDefinition' => 'LCOS-MIB::lcsStatusLanIeee8021xSupplicantIfcStateEntryState',
  'lcsStatusLanIeee8021xSupplicantIfcStateEntryAuthenticatorAddress' => '1.3.6.1.4.1.2356.11.1.5.80.1.1.4',
  'lcsStatusPpp' => '1.3.6.1.4.1.2356.11.1.6',
  'lcsStatusPppPppPhasesTable' => '1.3.6.1.4.1.2356.11.1.6.1',
  'lcsStatusPppPppPhasesEntry' => '1.3.6.1.4.1.2356.11.1.6.1.1',
  'lcsStatusPppPppPhasesEntryIfc' => '1.3.6.1.4.1.2356.11.1.6.1.1.1',
  'lcsStatusPppPppPhasesEntryIfcDefinition' => 'LCOS-MIB::lcsStatusPppPppPhasesEntryIfc',
  'lcsStatusPppPppPhasesEntryPhaseTo' => '1.3.6.1.4.1.2356.11.1.6.1.1.2',
  'lcsStatusPppPppPhasesEntryPhaseToDefinition' => 'LCOS-MIB::lcsStatusPppPppPhasesEntryPhaseTo',
  'lcsStatusPppPppPhasesEntryLcp' => '1.3.6.1.4.1.2356.11.1.6.1.1.3',
  'lcsStatusPppPppPhasesEntryLcpDefinition' => 'LCOS-MIB::lcsStatusPppPppPhasesEntryLcp',
  'lcsStatusPppPppPhasesEntryIpcp' => '1.3.6.1.4.1.2356.11.1.6.1.1.4',
  'lcsStatusPppPppPhasesEntryIpcpDefinition' => 'LCOS-MIB::lcsStatusPppPppPhasesEntryIpcp',
  'lcsStatusPppPppPhasesEntryCcp' => '1.3.6.1.4.1.2356.11.1.6.1.1.6',
  'lcsStatusPppPppPhasesEntryCcpDefinition' => 'LCOS-MIB::lcsStatusPppPppPhasesEntryCcp',
  'lcsStatusPppPppPhasesEntryBacp' => '1.3.6.1.4.1.2356.11.1.6.1.1.7',
  'lcsStatusPppPppPhasesEntryBacpDefinition' => 'LCOS-MIB::lcsStatusPppPppPhasesEntryBacp',
  'lcsStatusPppLcp' => '1.3.6.1.4.1.2356.11.1.6.2',
  'lcsStatusPppLcpRxErrors' => '1.3.6.1.4.1.2356.11.1.6.2.1',
  'lcsStatusPppLcpRxDiscarded' => '1.3.6.1.4.1.2356.11.1.6.2.2',
  'lcsStatusPppLcpRxConfigRequest' => '1.3.6.1.4.1.2356.11.1.6.2.3',
  'lcsStatusPppLcpRxConfigAck' => '1.3.6.1.4.1.2356.11.1.6.2.4',
  'lcsStatusPppLcpRxConfigNak' => '1.3.6.1.4.1.2356.11.1.6.2.5',
  'lcsStatusPppLcpRxConfigReject' => '1.3.6.1.4.1.2356.11.1.6.2.6',
  'lcsStatusPppLcpRxTerminateRequest' => '1.3.6.1.4.1.2356.11.1.6.2.7',
  'lcsStatusPppLcpRxTerminateAck' => '1.3.6.1.4.1.2356.11.1.6.2.8',
  'lcsStatusPppLcpRxCodeReject' => '1.3.6.1.4.1.2356.11.1.6.2.9',
  'lcsStatusPppLcpRxProtocolReject' => '1.3.6.1.4.1.2356.11.1.6.2.10',
  'lcsStatusPppLcpRxEchoRequest' => '1.3.6.1.4.1.2356.11.1.6.2.11',
  'lcsStatusPppLcpRxEchoReply' => '1.3.6.1.4.1.2356.11.1.6.2.12',
  'lcsStatusPppLcpRxDiscardRequest' => '1.3.6.1.4.1.2356.11.1.6.2.13',
  'lcsStatusPppLcpTxConfigRequest' => '1.3.6.1.4.1.2356.11.1.6.2.14',
  'lcsStatusPppLcpTxConfigAck' => '1.3.6.1.4.1.2356.11.1.6.2.15',
  'lcsStatusPppLcpTxConfigNak' => '1.3.6.1.4.1.2356.11.1.6.2.16',
  'lcsStatusPppLcpTxConfigReject' => '1.3.6.1.4.1.2356.11.1.6.2.17',
  'lcsStatusPppLcpTxTerminateRequest' => '1.3.6.1.4.1.2356.11.1.6.2.18',
  'lcsStatusPppLcpTxTerminateAck' => '1.3.6.1.4.1.2356.11.1.6.2.19',
  'lcsStatusPppLcpTxCodeReject' => '1.3.6.1.4.1.2356.11.1.6.2.20',
  'lcsStatusPppLcpTxProtocolReject' => '1.3.6.1.4.1.2356.11.1.6.2.21',
  'lcsStatusPppLcpTxEchoRequest' => '1.3.6.1.4.1.2356.11.1.6.2.22',
  'lcsStatusPppLcpTxEchoReply' => '1.3.6.1.4.1.2356.11.1.6.2.23',
  'lcsStatusPppLcpTxDiscardRequest' => '1.3.6.1.4.1.2356.11.1.6.2.24',
  'lcsStatusPppLcpDeleteValues' => '1.3.6.1.4.1.2356.11.1.6.2.25',
  'lcsStatusPppPap' => '1.3.6.1.4.1.2356.11.1.6.3',
  'lcsStatusPppPapRxDiscarded' => '1.3.6.1.4.1.2356.11.1.6.3.1',
  'lcsStatusPppPapRxRequest' => '1.3.6.1.4.1.2356.11.1.6.3.2',
  'lcsStatusPppPapRxSuccess' => '1.3.6.1.4.1.2356.11.1.6.3.3',
  'lcsStatusPppPapRxFailure' => '1.3.6.1.4.1.2356.11.1.6.3.4',
  'lcsStatusPppPapTxRetry' => '1.3.6.1.4.1.2356.11.1.6.3.5',
  'lcsStatusPppPapTxRequest' => '1.3.6.1.4.1.2356.11.1.6.3.6',
  'lcsStatusPppPapTxSuccess' => '1.3.6.1.4.1.2356.11.1.6.3.7',
  'lcsStatusPppPapTxFailure' => '1.3.6.1.4.1.2356.11.1.6.3.8',
  'lcsStatusPppPapDeleteValues' => '1.3.6.1.4.1.2356.11.1.6.3.9',
  'lcsStatusPppChap' => '1.3.6.1.4.1.2356.11.1.6.4',
  'lcsStatusPppChapRxDiscarded' => '1.3.6.1.4.1.2356.11.1.6.4.1',
  'lcsStatusPppChapRxChallenge' => '1.3.6.1.4.1.2356.11.1.6.4.2',
  'lcsStatusPppChapRxResponse' => '1.3.6.1.4.1.2356.11.1.6.4.3',
  'lcsStatusPppChapRxSuccess' => '1.3.6.1.4.1.2356.11.1.6.4.4',
  'lcsStatusPppChapRxFailure' => '1.3.6.1.4.1.2356.11.1.6.4.5',
  'lcsStatusPppChapTxRetry' => '1.3.6.1.4.1.2356.11.1.6.4.6',
  'lcsStatusPppChapTxChallenge' => '1.3.6.1.4.1.2356.11.1.6.4.7',
  'lcsStatusPppChapTxResponse' => '1.3.6.1.4.1.2356.11.1.6.4.8',
  'lcsStatusPppChapTxSuccess' => '1.3.6.1.4.1.2356.11.1.6.4.9',
  'lcsStatusPppChapTxFailure' => '1.3.6.1.4.1.2356.11.1.6.4.10',
  'lcsStatusPppChapDeleteValues' => '1.3.6.1.4.1.2356.11.1.6.4.11',
  'lcsStatusPppIpcp' => '1.3.6.1.4.1.2356.11.1.6.6',
  'lcsStatusPppIpcpRxDiscarded' => '1.3.6.1.4.1.2356.11.1.6.6.1',
  'lcsStatusPppIpcpRxConfigRequest' => '1.3.6.1.4.1.2356.11.1.6.6.2',
  'lcsStatusPppIpcpRxConfigAck' => '1.3.6.1.4.1.2356.11.1.6.6.3',
  'lcsStatusPppIpcpRxConfigNak' => '1.3.6.1.4.1.2356.11.1.6.6.4',
  'lcsStatusPppIpcpRxConfigReject' => '1.3.6.1.4.1.2356.11.1.6.6.5',
  'lcsStatusPppIpcpRxTerminateRequest' => '1.3.6.1.4.1.2356.11.1.6.6.6',
  'lcsStatusPppIpcpRxTerminateAck' => '1.3.6.1.4.1.2356.11.1.6.6.7',
  'lcsStatusPppIpcpRxCodeReject' => '1.3.6.1.4.1.2356.11.1.6.6.8',
  'lcsStatusPppIpcpTxConfigRequest' => '1.3.6.1.4.1.2356.11.1.6.6.9',
  'lcsStatusPppIpcpTxConfigAck' => '1.3.6.1.4.1.2356.11.1.6.6.10',
  'lcsStatusPppIpcpTxConfigNak' => '1.3.6.1.4.1.2356.11.1.6.6.11',
  'lcsStatusPppIpcpTxConfigReject' => '1.3.6.1.4.1.2356.11.1.6.6.12',
  'lcsStatusPppIpcpTxTerminateRequest' => '1.3.6.1.4.1.2356.11.1.6.6.13',
  'lcsStatusPppIpcpTxTerminateAck' => '1.3.6.1.4.1.2356.11.1.6.6.14',
  'lcsStatusPppIpcpTxCodeReject' => '1.3.6.1.4.1.2356.11.1.6.6.15',
  'lcsStatusPppIpcpDeleteValues' => '1.3.6.1.4.1.2356.11.1.6.6.16',
  'lcsStatusPppCbcp' => '1.3.6.1.4.1.2356.11.1.6.7',
  'lcsStatusPppCbcpRxDiscarded' => '1.3.6.1.4.1.2356.11.1.6.7.1',
  'lcsStatusPppCbcpRxRequest' => '1.3.6.1.4.1.2356.11.1.6.7.2',
  'lcsStatusPppCbcpRxResponse' => '1.3.6.1.4.1.2356.11.1.6.7.3',
  'lcsStatusPppCbcpRxAcknowledge' => '1.3.6.1.4.1.2356.11.1.6.7.4',
  'lcsStatusPppCbcpTxRequest' => '1.3.6.1.4.1.2356.11.1.6.7.5',
  'lcsStatusPppCbcpTxResponse' => '1.3.6.1.4.1.2356.11.1.6.7.6',
  'lcsStatusPppCbcpTxAcknowledge' => '1.3.6.1.4.1.2356.11.1.6.7.7',
  'lcsStatusPppCbcpDeleteValues' => '1.3.6.1.4.1.2356.11.1.6.7.8',
  'lcsStatusPppRxOptions' => '1.3.6.1.4.1.2356.11.1.6.8',
  'lcsStatusPppRxOptionsLcpTable' => '1.3.6.1.4.1.2356.11.1.6.8.1',
  'lcsStatusPppRxOptionsLcpEntry' => '1.3.6.1.4.1.2356.11.1.6.8.1.1',
  'lcsStatusPppRxOptionsLcpEntryIfc' => '1.3.6.1.4.1.2356.11.1.6.8.1.1.1',
  'lcsStatusPppRxOptionsLcpEntryIfcDefinition' => 'LCOS-MIB::lcsStatusPppRxOptionsLcpEntryIfc',
  'lcsStatusPppRxOptionsLcpEntryMru' => '1.3.6.1.4.1.2356.11.1.6.8.1.1.2',
  'lcsStatusPppRxOptionsLcpEntryAccm' => '1.3.6.1.4.1.2356.11.1.6.8.1.1.3',
  'lcsStatusPppRxOptionsLcpEntryAuthentRequest' => '1.3.6.1.4.1.2356.11.1.6.8.1.1.4',
  'lcsStatusPppRxOptionsLcpEntryAuthentRequestDefinition' => 'LCOS-MIB::lcsStatusPppRxOptionsLcpEntryAuthentRequest',
  'lcsStatusPppRxOptionsLcpEntryCallBack' => '1.3.6.1.4.1.2356.11.1.6.8.1.1.5',
  'lcsStatusPppRxOptionsLcpEntryCallBackDefinition' => 'LCOS-MIB::lcsStatusPppRxOptionsLcpEntryCallBack',
  'lcsStatusPppRxOptionsLcpEntryMagicNum' => '1.3.6.1.4.1.2356.11.1.6.8.1.1.6',
  'lcsStatusPppRxOptionsLcpEntryPfc' => '1.3.6.1.4.1.2356.11.1.6.8.1.1.7',
  'lcsStatusPppRxOptionsLcpEntryPfcDefinition' => 'LCOS-MIB::lcsStatusPppRxOptionsLcpEntryPfc',
  'lcsStatusPppRxOptionsLcpEntryAcfc' => '1.3.6.1.4.1.2356.11.1.6.8.1.1.8',
  'lcsStatusPppRxOptionsLcpEntryAcfcDefinition' => 'LCOS-MIB::lcsStatusPppRxOptionsLcpEntryAcfc',
  'lcsStatusPppRxOptionsIpcpTable' => '1.3.6.1.4.1.2356.11.1.6.8.3',
  'lcsStatusPppRxOptionsIpcpEntry' => '1.3.6.1.4.1.2356.11.1.6.8.3.1',
  'lcsStatusPppRxOptionsIpcpEntryIfc' => '1.3.6.1.4.1.2356.11.1.6.8.3.1.1',
  'lcsStatusPppRxOptionsIpcpEntryIfcDefinition' => 'LCOS-MIB::lcsStatusPppRxOptionsIpcpEntryIfc',
  'lcsStatusPppRxOptionsIpcpEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.6.8.3.1.2',
  'lcsStatusPppRxOptionsIpcpEntryDnsDefault' => '1.3.6.1.4.1.2356.11.1.6.8.3.1.3',
  'lcsStatusPppRxOptionsIpcpEntryNbnsDefault' => '1.3.6.1.4.1.2356.11.1.6.8.3.1.4',
  'lcsStatusPppRxOptionsIpcpEntryDnsBackup' => '1.3.6.1.4.1.2356.11.1.6.8.3.1.5',
  'lcsStatusPppRxOptionsIpcpEntryNbnsBackup' => '1.3.6.1.4.1.2356.11.1.6.8.3.1.6',
  'lcsStatusPppTxOptions' => '1.3.6.1.4.1.2356.11.1.6.9',
  'lcsStatusPppTxOptionsLcpTable' => '1.3.6.1.4.1.2356.11.1.6.9.1',
  'lcsStatusPppTxOptionsLcpEntry' => '1.3.6.1.4.1.2356.11.1.6.9.1.1',
  'lcsStatusPppTxOptionsLcpEntryIfc' => '1.3.6.1.4.1.2356.11.1.6.9.1.1.1',
  'lcsStatusPppTxOptionsLcpEntryIfcDefinition' => 'LCOS-MIB::lcsStatusPppTxOptionsLcpEntryIfc',
  'lcsStatusPppTxOptionsLcpEntryMru' => '1.3.6.1.4.1.2356.11.1.6.9.1.1.2',
  'lcsStatusPppTxOptionsLcpEntryAccm' => '1.3.6.1.4.1.2356.11.1.6.9.1.1.3',
  'lcsStatusPppTxOptionsLcpEntryAuthentRequest' => '1.3.6.1.4.1.2356.11.1.6.9.1.1.4',
  'lcsStatusPppTxOptionsLcpEntryAuthentRequestDefinition' => 'LCOS-MIB::lcsStatusPppTxOptionsLcpEntryAuthentRequest',
  'lcsStatusPppTxOptionsLcpEntryCallBack' => '1.3.6.1.4.1.2356.11.1.6.9.1.1.5',
  'lcsStatusPppTxOptionsLcpEntryCallBackDefinition' => 'LCOS-MIB::lcsStatusPppTxOptionsLcpEntryCallBack',
  'lcsStatusPppTxOptionsLcpEntryMagicNum' => '1.3.6.1.4.1.2356.11.1.6.9.1.1.6',
  'lcsStatusPppTxOptionsLcpEntryPfc' => '1.3.6.1.4.1.2356.11.1.6.9.1.1.7',
  'lcsStatusPppTxOptionsLcpEntryPfcDefinition' => 'LCOS-MIB::lcsStatusPppTxOptionsLcpEntryPfc',
  'lcsStatusPppTxOptionsLcpEntryAcfc' => '1.3.6.1.4.1.2356.11.1.6.9.1.1.8',
  'lcsStatusPppTxOptionsLcpEntryAcfcDefinition' => 'LCOS-MIB::lcsStatusPppTxOptionsLcpEntryAcfc',
  'lcsStatusPppTxOptionsIpcpTable' => '1.3.6.1.4.1.2356.11.1.6.9.3',
  'lcsStatusPppTxOptionsIpcpEntry' => '1.3.6.1.4.1.2356.11.1.6.9.3.1',
  'lcsStatusPppTxOptionsIpcpEntryIfc' => '1.3.6.1.4.1.2356.11.1.6.9.3.1.1',
  'lcsStatusPppTxOptionsIpcpEntryIfcDefinition' => 'LCOS-MIB::lcsStatusPppTxOptionsIpcpEntryIfc',
  'lcsStatusPppTxOptionsIpcpEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.6.9.3.1.2',
  'lcsStatusPppTxOptionsIpcpEntryDnsDefault' => '1.3.6.1.4.1.2356.11.1.6.9.3.1.3',
  'lcsStatusPppTxOptionsIpcpEntryNbnsDefault' => '1.3.6.1.4.1.2356.11.1.6.9.3.1.4',
  'lcsStatusPppTxOptionsIpcpEntryDnsBackup' => '1.3.6.1.4.1.2356.11.1.6.9.3.1.5',
  'lcsStatusPppTxOptionsIpcpEntryNbnsBackup' => '1.3.6.1.4.1.2356.11.1.6.9.3.1.6',
  'lcsStatusPppCcp' => '1.3.6.1.4.1.2356.11.1.6.10',
  'lcsStatusPppCcpRxDiscarded' => '1.3.6.1.4.1.2356.11.1.6.10.1',
  'lcsStatusPppCcpRxConfigRequest' => '1.3.6.1.4.1.2356.11.1.6.10.2',
  'lcsStatusPppCcpRxConfigAck' => '1.3.6.1.4.1.2356.11.1.6.10.3',
  'lcsStatusPppCcpRxConfigNak' => '1.3.6.1.4.1.2356.11.1.6.10.4',
  'lcsStatusPppCcpRxConfigReject' => '1.3.6.1.4.1.2356.11.1.6.10.5',
  'lcsStatusPppCcpRxTerminateRequest' => '1.3.6.1.4.1.2356.11.1.6.10.6',
  'lcsStatusPppCcpRxTerminateAck' => '1.3.6.1.4.1.2356.11.1.6.10.7',
  'lcsStatusPppCcpRxCodeReject' => '1.3.6.1.4.1.2356.11.1.6.10.8',
  'lcsStatusPppCcpRxResetRequest' => '1.3.6.1.4.1.2356.11.1.6.10.9',
  'lcsStatusPppCcpRxResetAck' => '1.3.6.1.4.1.2356.11.1.6.10.10',
  'lcsStatusPppCcpTxConfigRequest' => '1.3.6.1.4.1.2356.11.1.6.10.11',
  'lcsStatusPppCcpTxConfigAck' => '1.3.6.1.4.1.2356.11.1.6.10.12',
  'lcsStatusPppCcpTxConfigNak' => '1.3.6.1.4.1.2356.11.1.6.10.13',
  'lcsStatusPppCcpTxConfigReject' => '1.3.6.1.4.1.2356.11.1.6.10.14',
  'lcsStatusPppCcpTxTerminateRequest' => '1.3.6.1.4.1.2356.11.1.6.10.15',
  'lcsStatusPppCcpTxTerminateAck' => '1.3.6.1.4.1.2356.11.1.6.10.16',
  'lcsStatusPppCcpTxCodeReject' => '1.3.6.1.4.1.2356.11.1.6.10.17',
  'lcsStatusPppCcpTxResetRequest' => '1.3.6.1.4.1.2356.11.1.6.10.19',
  'lcsStatusPppCcpTxResetAck' => '1.3.6.1.4.1.2356.11.1.6.10.20',
  'lcsStatusPppCcpDeleteValues' => '1.3.6.1.4.1.2356.11.1.6.10.21',
  'lcsStatusPppCcpCompressionErrors' => '1.3.6.1.4.1.2356.11.1.6.10.22',
  'lcsStatusPppMl' => '1.3.6.1.4.1.2356.11.1.6.11',
  'lcsStatusPppMlBundleConnections' => '1.3.6.1.4.1.2356.11.1.6.11.1',
  'lcsStatusPppMlRxSeqLost' => '1.3.6.1.4.1.2356.11.1.6.11.2',
  'lcsStatusPppMlRxSeqRepeat' => '1.3.6.1.4.1.2356.11.1.6.11.3',
  'lcsStatusPppMlRxMrruExceeded' => '1.3.6.1.4.1.2356.11.1.6.11.4',
  'lcsStatusPppMlRxHeaderError' => '1.3.6.1.4.1.2356.11.1.6.11.5',
  'lcsStatusPppMlRxDiscarded' => '1.3.6.1.4.1.2356.11.1.6.11.6',
  'lcsStatusPppMlRxFragStart' => '1.3.6.1.4.1.2356.11.1.6.11.7',
  'lcsStatusPppMlRxFragMid' => '1.3.6.1.4.1.2356.11.1.6.11.8',
  'lcsStatusPppMlRxFragEnd' => '1.3.6.1.4.1.2356.11.1.6.11.9',
  'lcsStatusPppMlRxNotFragmented' => '1.3.6.1.4.1.2356.11.1.6.11.10',
  'lcsStatusPppMlDeleteValues' => '1.3.6.1.4.1.2356.11.1.6.11.11',
  'lcsStatusPppBacp' => '1.3.6.1.4.1.2356.11.1.6.12',
  'lcsStatusPppBacpRxErrors' => '1.3.6.1.4.1.2356.11.1.6.12.1',
  'lcsStatusPppBacpRxDiscarded' => '1.3.6.1.4.1.2356.11.1.6.12.2',
  'lcsStatusPppBacpRxCallRequest' => '1.3.6.1.4.1.2356.11.1.6.12.3',
  'lcsStatusPppBacpRxCallResponse' => '1.3.6.1.4.1.2356.11.1.6.12.4',
  'lcsStatusPppBacpRxCallbackRequest' => '1.3.6.1.4.1.2356.11.1.6.12.5',
  'lcsStatusPppBacpRxCallbackResponse' => '1.3.6.1.4.1.2356.11.1.6.12.6',
  'lcsStatusPppBacpRxLinkDropRequest' => '1.3.6.1.4.1.2356.11.1.6.12.7',
  'lcsStatusPppBacpRxLinkDropResponse' => '1.3.6.1.4.1.2356.11.1.6.12.8',
  'lcsStatusPppBacpRxStatusIndication' => '1.3.6.1.4.1.2356.11.1.6.12.9',
  'lcsStatusPppBacpRxStatusResponse' => '1.3.6.1.4.1.2356.11.1.6.12.10',
  'lcsStatusPppBacpTxCallRequest' => '1.3.6.1.4.1.2356.11.1.6.12.11',
  'lcsStatusPppBacpTxCallResponse' => '1.3.6.1.4.1.2356.11.1.6.12.12',
  'lcsStatusPppBacpTxCallbackRequest' => '1.3.6.1.4.1.2356.11.1.6.12.13',
  'lcsStatusPppBacpTxCallbackResponse' => '1.3.6.1.4.1.2356.11.1.6.12.14',
  'lcsStatusPppBacpTxLinkDropRequest' => '1.3.6.1.4.1.2356.11.1.6.12.15',
  'lcsStatusPppBacpTxLinkDropResponse' => '1.3.6.1.4.1.2356.11.1.6.12.16',
  'lcsStatusPppBacpTxStatusIndication' => '1.3.6.1.4.1.2356.11.1.6.12.17',
  'lcsStatusPppBacpTxStatusResponse' => '1.3.6.1.4.1.2356.11.1.6.12.18',
  'lcsStatusPppBacpDeleteValues' => '1.3.6.1.4.1.2356.11.1.6.12.19',
  'lcsStatusPppDeleteValues' => '1.3.6.1.4.1.2356.11.1.6.13',
  'lcsStatusTcpIp' => '1.3.6.1.4.1.2356.11.1.9',
  'lcsStatusTcpIpArp' => '1.3.6.1.4.1.2356.11.1.9.1',
  'lcsStatusTcpIpArpLanRx' => '1.3.6.1.4.1.2356.11.1.9.1.1',
  'lcsStatusTcpIpArpLanTx' => '1.3.6.1.4.1.2356.11.1.9.1.2',
  'lcsStatusTcpIpArpLanErrors' => '1.3.6.1.4.1.2356.11.1.9.1.3',
  'lcsStatusTcpIpArpWanRx' => '1.3.6.1.4.1.2356.11.1.9.1.4',
  'lcsStatusTcpIpArpWanTx' => '1.3.6.1.4.1.2356.11.1.9.1.5',
  'lcsStatusTcpIpArpWanErrors' => '1.3.6.1.4.1.2356.11.1.9.1.6',
  'lcsStatusTcpIpArpTableArpTable' => '1.3.6.1.4.1.2356.11.1.9.1.7',
  'lcsStatusTcpIpArpTableArpEntry' => '1.3.6.1.4.1.2356.11.1.9.1.7.1',
  'lcsStatusTcpIpArpTableArpEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.9.1.7.1.1',
  'lcsStatusTcpIpArpTableArpEntryMacAddress' => '1.3.6.1.4.1.2356.11.1.9.1.7.1.2',
  'lcsStatusTcpIpArpTableArpEntryLastAccess' => '1.3.6.1.4.1.2356.11.1.9.1.7.1.3',
  'lcsStatusTcpIpArpTableArpEntryEthernetPort' => '1.3.6.1.4.1.2356.11.1.9.1.7.1.5',
  'lcsStatusTcpIpArpTableArpEntryEthernetPortDefinition' => 'LCOS-MIB::lcsStatusTcpIpArpTableArpEntryEthernetPort',
  'lcsStatusTcpIpArpTableArpEntryPeer' => '1.3.6.1.4.1.2356.11.1.9.1.7.1.6',
  'lcsStatusTcpIpArpTableArpEntryVlanId' => '1.3.6.1.4.1.2356.11.1.9.1.7.1.7',
  'lcsStatusTcpIpArpTableArpEntryConnect' => '1.3.6.1.4.1.2356.11.1.9.1.7.1.8',
  'lcsStatusTcpIpArpTableArpEntryConnectDefinition' => 'LCOS-MIB::lcsStatusTcpIpArpTableArpEntryConnect',
  'lcsStatusTcpIpArpDeleteValues' => '1.3.6.1.4.1.2356.11.1.9.1.8',
  'lcsStatusTcpIpIp' => '1.3.6.1.4.1.2356.11.1.9.2',
  'lcsStatusTcpIpIpLanRx' => '1.3.6.1.4.1.2356.11.1.9.2.1',
  'lcsStatusTcpIpIpLanTx' => '1.3.6.1.4.1.2356.11.1.9.2.2',
  'lcsStatusTcpIpIpLanChecksumErrors' => '1.3.6.1.4.1.2356.11.1.9.2.3',
  'lcsStatusTcpIpIpLanServiceErrors' => '1.3.6.1.4.1.2356.11.1.9.2.4',
  'lcsStatusTcpIpIpWanRx' => '1.3.6.1.4.1.2356.11.1.9.2.5',
  'lcsStatusTcpIpIpWanTx' => '1.3.6.1.4.1.2356.11.1.9.2.6',
  'lcsStatusTcpIpIpWanChecksumErrors' => '1.3.6.1.4.1.2356.11.1.9.2.7',
  'lcsStatusTcpIpIpWanServiceErrors' => '1.3.6.1.4.1.2356.11.1.9.2.8',
  'lcsStatusTcpIpIpWanRxDisconnect' => '1.3.6.1.4.1.2356.11.1.9.2.9',
  'lcsStatusTcpIpIpLanFragmentationErrors' => '1.3.6.1.4.1.2356.11.1.9.2.10',
  'lcsStatusTcpIpIpWanFragmentationErrors' => '1.3.6.1.4.1.2356.11.1.9.2.11',
  'lcsStatusTcpIpIpDeleteValues' => '1.3.6.1.4.1.2356.11.1.9.2.12',
  'lcsStatusTcpIpIpLanFragmentations' => '1.3.6.1.4.1.2356.11.1.9.2.13',
  'lcsStatusTcpIpIpLanFragmentationsForced' => '1.3.6.1.4.1.2356.11.1.9.2.14',
  'lcsStatusTcpIpIpWanFragmentations' => '1.3.6.1.4.1.2356.11.1.9.2.15',
  'lcsStatusTcpIpIpWanFragmentationsForced' => '1.3.6.1.4.1.2356.11.1.9.2.16',
  'lcsStatusTcpIpIpLoopError' => '1.3.6.1.4.1.2356.11.1.9.2.17',
  'lcsStatusTcpIpIcmp' => '1.3.6.1.4.1.2356.11.1.9.3',
  'lcsStatusTcpIpIcmpLanRx' => '1.3.6.1.4.1.2356.11.1.9.3.1',
  'lcsStatusTcpIpIcmpLanTx' => '1.3.6.1.4.1.2356.11.1.9.3.2',
  'lcsStatusTcpIpIcmpLanChecksumErrors' => '1.3.6.1.4.1.2356.11.1.9.3.3',
  'lcsStatusTcpIpIcmpLanServiceErrors' => '1.3.6.1.4.1.2356.11.1.9.3.4',
  'lcsStatusTcpIpIcmpWanRx' => '1.3.6.1.4.1.2356.11.1.9.3.5',
  'lcsStatusTcpIpIcmpWanTx' => '1.3.6.1.4.1.2356.11.1.9.3.6',
  'lcsStatusTcpIpIcmpWanChecksumErrors' => '1.3.6.1.4.1.2356.11.1.9.3.7',
  'lcsStatusTcpIpIcmpWanServiceErrors' => '1.3.6.1.4.1.2356.11.1.9.3.8',
  'lcsStatusTcpIpIcmpDeleteValues' => '1.3.6.1.4.1.2356.11.1.9.3.9',
  'lcsStatusTcpIpTftp' => '1.3.6.1.4.1.2356.11.1.9.4',
  'lcsStatusTcpIpTftpLanRx' => '1.3.6.1.4.1.2356.11.1.9.4.1',
  'lcsStatusTcpIpTftpLanRxReadRequest' => '1.3.6.1.4.1.2356.11.1.9.4.2',
  'lcsStatusTcpIpTftpLanRxWriteRequest' => '1.3.6.1.4.1.2356.11.1.9.4.3',
  'lcsStatusTcpIpTftpLanRxData' => '1.3.6.1.4.1.2356.11.1.9.4.4',
  'lcsStatusTcpIpTftpLanRxAck' => '1.3.6.1.4.1.2356.11.1.9.4.5',
  'lcsStatusTcpIpTftpLanRxOptionAck' => '1.3.6.1.4.1.2356.11.1.9.4.6',
  'lcsStatusTcpIpTftpLanRxErrors' => '1.3.6.1.4.1.2356.11.1.9.4.7',
  'lcsStatusTcpIpTftpLanRxBadPackets' => '1.3.6.1.4.1.2356.11.1.9.4.8',
  'lcsStatusTcpIpTftpLanTx' => '1.3.6.1.4.1.2356.11.1.9.4.9',
  'lcsStatusTcpIpTftpLanTxData' => '1.3.6.1.4.1.2356.11.1.9.4.10',
  'lcsStatusTcpIpTftpLanTxAck' => '1.3.6.1.4.1.2356.11.1.9.4.11',
  'lcsStatusTcpIpTftpLanTxOptionAck' => '1.3.6.1.4.1.2356.11.1.9.4.12',
  'lcsStatusTcpIpTftpLanTxErrors' => '1.3.6.1.4.1.2356.11.1.9.4.13',
  'lcsStatusTcpIpTftpLanTxRepeats' => '1.3.6.1.4.1.2356.11.1.9.4.14',
  'lcsStatusTcpIpTftpLanConnections' => '1.3.6.1.4.1.2356.11.1.9.4.15',
  'lcsStatusTcpIpTftpWanRx' => '1.3.6.1.4.1.2356.11.1.9.4.16',
  'lcsStatusTcpIpTftpWanRxReadRequest' => '1.3.6.1.4.1.2356.11.1.9.4.17',
  'lcsStatusTcpIpTftpWanRxWriteRequest' => '1.3.6.1.4.1.2356.11.1.9.4.18',
  'lcsStatusTcpIpTftpWanRxData' => '1.3.6.1.4.1.2356.11.1.9.4.19',
  'lcsStatusTcpIpTftpWanRxAck' => '1.3.6.1.4.1.2356.11.1.9.4.20',
  'lcsStatusTcpIpTftpWanRxOptionAck' => '1.3.6.1.4.1.2356.11.1.9.4.21',
  'lcsStatusTcpIpTftpWanRxErrors' => '1.3.6.1.4.1.2356.11.1.9.4.22',
  'lcsStatusTcpIpTftpWanRxBadPackets' => '1.3.6.1.4.1.2356.11.1.9.4.23',
  'lcsStatusTcpIpTftpWanTx' => '1.3.6.1.4.1.2356.11.1.9.4.24',
  'lcsStatusTcpIpTftpWanTxData' => '1.3.6.1.4.1.2356.11.1.9.4.25',
  'lcsStatusTcpIpTftpWanTxAck' => '1.3.6.1.4.1.2356.11.1.9.4.26',
  'lcsStatusTcpIpTftpWanTxOptionAck' => '1.3.6.1.4.1.2356.11.1.9.4.27',
  'lcsStatusTcpIpTftpWanTxErrors' => '1.3.6.1.4.1.2356.11.1.9.4.28',
  'lcsStatusTcpIpTftpWanTxRepeats' => '1.3.6.1.4.1.2356.11.1.9.4.29',
  'lcsStatusTcpIpTftpWanConnections' => '1.3.6.1.4.1.2356.11.1.9.4.30',
  'lcsStatusTcpIpTftpDeleteValues' => '1.3.6.1.4.1.2356.11.1.9.4.31',
  'lcsStatusTcpIpTcp' => '1.3.6.1.4.1.2356.11.1.9.5',
  'lcsStatusTcpIpTcpLanRx' => '1.3.6.1.4.1.2356.11.1.9.5.1',
  'lcsStatusTcpIpTcpLanTx' => '1.3.6.1.4.1.2356.11.1.9.5.2',
  'lcsStatusTcpIpTcpLanTxRepeats' => '1.3.6.1.4.1.2356.11.1.9.5.3',
  'lcsStatusTcpIpTcpLanChecksumErrors' => '1.3.6.1.4.1.2356.11.1.9.5.4',
  'lcsStatusTcpIpTcpLanServiceErrors' => '1.3.6.1.4.1.2356.11.1.9.5.5',
  'lcsStatusTcpIpTcpLanConnections' => '1.3.6.1.4.1.2356.11.1.9.5.6',
  'lcsStatusTcpIpTcpWanRx' => '1.3.6.1.4.1.2356.11.1.9.5.7',
  'lcsStatusTcpIpTcpWanTx' => '1.3.6.1.4.1.2356.11.1.9.5.8',
  'lcsStatusTcpIpTcpWanTxRepeats' => '1.3.6.1.4.1.2356.11.1.9.5.9',
  'lcsStatusTcpIpTcpWanChecksumErrors' => '1.3.6.1.4.1.2356.11.1.9.5.10',
  'lcsStatusTcpIpTcpWanServiceErrors' => '1.3.6.1.4.1.2356.11.1.9.5.11',
  'lcsStatusTcpIpTcpWanConnections' => '1.3.6.1.4.1.2356.11.1.9.5.12',
  'lcsStatusTcpIpTcpDeleteValues' => '1.3.6.1.4.1.2356.11.1.9.5.13',
  'lcsStatusTcpIpDhcp' => '1.3.6.1.4.1.2356.11.1.9.6',
  'lcsStatusTcpIpDhcpLanRx' => '1.3.6.1.4.1.2356.11.1.9.6.1',
  'lcsStatusTcpIpDhcpLanTx' => '1.3.6.1.4.1.2356.11.1.9.6.2',
  'lcsStatusTcpIpDhcpWanRx' => '1.3.6.1.4.1.2356.11.1.9.6.3',
  'lcsStatusTcpIpDhcpDiscard' => '1.3.6.1.4.1.2356.11.1.9.6.4',
  'lcsStatusTcpIpDhcpRxDiscover' => '1.3.6.1.4.1.2356.11.1.9.6.5',
  'lcsStatusTcpIpDhcpRxRequest' => '1.3.6.1.4.1.2356.11.1.9.6.6',
  'lcsStatusTcpIpDhcpRxDecline' => '1.3.6.1.4.1.2356.11.1.9.6.7',
  'lcsStatusTcpIpDhcpRxInform' => '1.3.6.1.4.1.2356.11.1.9.6.8',
  'lcsStatusTcpIpDhcpRxRelease' => '1.3.6.1.4.1.2356.11.1.9.6.9',
  'lcsStatusTcpIpDhcpTxOffer' => '1.3.6.1.4.1.2356.11.1.9.6.10',
  'lcsStatusTcpIpDhcpTxAck' => '1.3.6.1.4.1.2356.11.1.9.6.11',
  'lcsStatusTcpIpDhcpTxNak' => '1.3.6.1.4.1.2356.11.1.9.6.12',
  'lcsStatusTcpIpDhcpServerError' => '1.3.6.1.4.1.2356.11.1.9.6.13',
  'lcsStatusTcpIpDhcpAssigned' => '1.3.6.1.4.1.2356.11.1.9.6.14',
  'lcsStatusTcpIpDhcpMacConflicts' => '1.3.6.1.4.1.2356.11.1.9.6.15',
  'lcsStatusTcpIpDhcpDhcpTableTable' => '1.3.6.1.4.1.2356.11.1.9.6.16',
  'lcsStatusTcpIpDhcpDhcpTableEntry' => '1.3.6.1.4.1.2356.11.1.9.6.16.1',
  'lcsStatusTcpIpDhcpDhcpTableEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.9.6.16.1.1',
  'lcsStatusTcpIpDhcpDhcpTableEntryMacAddress' => '1.3.6.1.4.1.2356.11.1.9.6.16.1.2',
  'lcsStatusTcpIpDhcpDhcpTableEntryTimeout' => '1.3.6.1.4.1.2356.11.1.9.6.16.1.3',
  'lcsStatusTcpIpDhcpDhcpTableEntryHostname' => '1.3.6.1.4.1.2356.11.1.9.6.16.1.4',
  'lcsStatusTcpIpDhcpDhcpTableEntryType' => '1.3.6.1.4.1.2356.11.1.9.6.16.1.5',
  'lcsStatusTcpIpDhcpDhcpTableEntryEthernetPort' => '1.3.6.1.4.1.2356.11.1.9.6.16.1.7',
  'lcsStatusTcpIpDhcpDhcpTableEntryEthernetPortDefinition' => 'LCOS-MIB::lcsStatusTcpIpDhcpDhcpTableEntryEthernetPort',
  'lcsStatusTcpIpDhcpDhcpTableEntryVlanId' => '1.3.6.1.4.1.2356.11.1.9.6.16.1.8',
  'lcsStatusTcpIpDhcpDhcpTableEntryNetworkName' => '1.3.6.1.4.1.2356.11.1.9.6.16.1.9',
  'lcsStatusTcpIpDhcpDhcpTableEntryLanIfc' => '1.3.6.1.4.1.2356.11.1.9.6.16.1.10',
  'lcsStatusTcpIpDhcpDhcpTableEntryLanIfcDefinition' => 'LCOS-MIB::lcsStatusTcpIpDhcpDhcpTableEntryLanIfc',
  'lcsStatusTcpIpDhcpDeleteValues' => '1.3.6.1.4.1.2356.11.1.9.6.18',
  'lcsStatusTcpIpDhcpWanTx' => '1.3.6.1.4.1.2356.11.1.9.6.19',
  'lcsStatusTcpIpDhcpNetworkListTable' => '1.3.6.1.4.1.2356.11.1.9.6.20',
  'lcsStatusTcpIpDhcpNetworkListEntry' => '1.3.6.1.4.1.2356.11.1.9.6.20.1',
  'lcsStatusTcpIpDhcpNetworkListEntryNetworkName' => '1.3.6.1.4.1.2356.11.1.9.6.20.1.1',
  'lcsStatusTcpIpDhcpNetworkListEntryStartAddressPool' => '1.3.6.1.4.1.2356.11.1.9.6.20.1.2',
  'lcsStatusTcpIpDhcpNetworkListEntryEndAddressPool' => '1.3.6.1.4.1.2356.11.1.9.6.20.1.3',
  'lcsStatusTcpIpDhcpNetworkListEntryNetmask' => '1.3.6.1.4.1.2356.11.1.9.6.20.1.4',
  'lcsStatusTcpIpDhcpNetworkListEntryBroadcastAddress' => '1.3.6.1.4.1.2356.11.1.9.6.20.1.5',
  'lcsStatusTcpIpDhcpNetworkListEntryGatewayAddress' => '1.3.6.1.4.1.2356.11.1.9.6.20.1.6',
  'lcsStatusTcpIpDhcpNetworkListEntryDnsDefault' => '1.3.6.1.4.1.2356.11.1.9.6.20.1.7',
  'lcsStatusTcpIpDhcpNetworkListEntryDnsBackup' => '1.3.6.1.4.1.2356.11.1.9.6.20.1.8',
  'lcsStatusTcpIpDhcpNetworkListEntryNbnsDefault' => '1.3.6.1.4.1.2356.11.1.9.6.20.1.9',
  'lcsStatusTcpIpDhcpNetworkListEntryNbnsBackup' => '1.3.6.1.4.1.2356.11.1.9.6.20.1.10',
  'lcsStatusTcpIpDhcpNetworkListEntryServerFlags' => '1.3.6.1.4.1.2356.11.1.9.6.20.1.11',
  'lcsStatusTcpIpDhcpNetworkListEntryBroadcastBit' => '1.3.6.1.4.1.2356.11.1.9.6.20.1.13',
  'lcsStatusTcpIpDhcpNetworkListEntryBroadcastBitDefinition' => 'LCOS-MIB::lcsStatusTcpIpDhcpNetworkListEntryBroadcastBit',
  'lcsStatusTcpIpDhcpNetworkListEntryServerId' => '1.3.6.1.4.1.2356.11.1.9.6.20.1.14',
  'lcsStatusTcpIpDhcpNetworkListEntryVlanId' => '1.3.6.1.4.1.2356.11.1.9.6.20.1.16',
  'lcsStatusTcpIpDhcpNetworkListEntryMasterServer' => '1.3.6.1.4.1.2356.11.1.9.6.20.1.17',
  'lcsStatusTcpIpDhcpNetworkListEntryCache' => '1.3.6.1.4.1.2356.11.1.9.6.20.1.18',
  'lcsStatusTcpIpDhcpNetworkListEntryCacheDefinition' => 'LCOS-MIB::lcsStatusTcpIpDhcpNetworkListEntryCache',
  'lcsStatusTcpIpDhcpNetworkListEntryAdaption' => '1.3.6.1.4.1.2356.11.1.9.6.20.1.19',
  'lcsStatusTcpIpDhcpNetworkListEntryAdaptionDefinition' => 'LCOS-MIB::lcsStatusTcpIpDhcpNetworkListEntryAdaption',
  'lcsStatusTcpIpDhcpNetworkListEntryCluster' => '1.3.6.1.4.1.2356.11.1.9.6.20.1.20',
  'lcsStatusTcpIpDhcpNetworkListEntryClusterDefinition' => 'LCOS-MIB::lcsStatusTcpIpDhcpNetworkListEntryCluster',
  'lcsStatusTcpIpDhcpNetworkListEntry2ndMasterServer' => '1.3.6.1.4.1.2356.11.1.9.6.20.1.21',
  'lcsStatusTcpIpDhcpNetworkListEntry3rdMasterServer' => '1.3.6.1.4.1.2356.11.1.9.6.20.1.22',
  'lcsStatusTcpIpDhcpNetworkListEntry4thMasterServer' => '1.3.6.1.4.1.2356.11.1.9.6.20.1.23',
  'lcsStatusTcpIpDhcpNetworkListEntryLanIfc' => '1.3.6.1.4.1.2356.11.1.9.6.20.1.24',
  'lcsStatusTcpIpDhcpNetworkListEntryLanIfcDefinition' => 'LCOS-MIB::lcsStatusTcpIpDhcpNetworkListEntryLanIfc',
  'lcsStatusTcpIpDeleteValues' => '1.3.6.1.4.1.2356.11.1.9.7',
  'lcsStatusTcpIpNetbios' => '1.3.6.1.4.1.2356.11.1.9.8',
  'lcsStatusTcpIpNetbiosLanRx' => '1.3.6.1.4.1.2356.11.1.9.8.1',
  'lcsStatusTcpIpNetbiosLanTx' => '1.3.6.1.4.1.2356.11.1.9.8.2',
  'lcsStatusTcpIpNetbiosWanRx' => '1.3.6.1.4.1.2356.11.1.9.8.3',
  'lcsStatusTcpIpNetbiosWanTx' => '1.3.6.1.4.1.2356.11.1.9.8.4',
  'lcsStatusTcpIpNetbiosRegisters' => '1.3.6.1.4.1.2356.11.1.9.8.5',
  'lcsStatusTcpIpNetbiosConflicts' => '1.3.6.1.4.1.2356.11.1.9.8.6',
  'lcsStatusTcpIpNetbiosReleases' => '1.3.6.1.4.1.2356.11.1.9.8.7',
  'lcsStatusTcpIpNetbiosRefreshs' => '1.3.6.1.4.1.2356.11.1.9.8.8',
  'lcsStatusTcpIpNetbiosTimeouts' => '1.3.6.1.4.1.2356.11.1.9.8.9',
  'lcsStatusTcpIpNetbiosHosts' => '1.3.6.1.4.1.2356.11.1.9.8.10',
  'lcsStatusTcpIpNetbiosGroups' => '1.3.6.1.4.1.2356.11.1.9.8.11',
  'lcsStatusTcpIpNetbiosBNodes' => '1.3.6.1.4.1.2356.11.1.9.8.12',
  'lcsStatusTcpIpNetbiosPNodes' => '1.3.6.1.4.1.2356.11.1.9.8.13',
  'lcsStatusTcpIpNetbiosMNodes' => '1.3.6.1.4.1.2356.11.1.9.8.14',
  'lcsStatusTcpIpNetbiosWNodes' => '1.3.6.1.4.1.2356.11.1.9.8.15',
  'lcsStatusTcpIpNetbiosPeersTable' => '1.3.6.1.4.1.2356.11.1.9.8.16',
  'lcsStatusTcpIpNetbiosPeersEntry' => '1.3.6.1.4.1.2356.11.1.9.8.16.1',
  'lcsStatusTcpIpNetbiosPeersEntryName' => '1.3.6.1.4.1.2356.11.1.9.8.16.1.1',
  'lcsStatusTcpIpNetbiosPeersEntryType' => '1.3.6.1.4.1.2356.11.1.9.8.16.1.2',
  'lcsStatusTcpIpNetbiosPeersEntryTypeDefinition' => 'LCOS-MIB::lcsStatusTcpIpNetbiosPeersEntryType',
  'lcsStatusTcpIpNetbiosPeersEntryBackoff' => '1.3.6.1.4.1.2356.11.1.9.8.16.1.3',
  'lcsStatusTcpIpNetbiosPeersEntryTime' => '1.3.6.1.4.1.2356.11.1.9.8.16.1.4',
  'lcsStatusTcpIpNetbiosDeleteValues' => '1.3.6.1.4.1.2356.11.1.9.8.17',
  'lcsStatusTcpIpNetbiosNetworksTable' => '1.3.6.1.4.1.2356.11.1.9.8.18',
  'lcsStatusTcpIpNetbiosNetworksEntry' => '1.3.6.1.4.1.2356.11.1.9.8.18.1',
  'lcsStatusTcpIpNetbiosNetworksEntryNetworkName' => '1.3.6.1.4.1.2356.11.1.9.8.18.1.1',
  'lcsStatusTcpIpNetbiosNetworksEntryNtDomain' => '1.3.6.1.4.1.2356.11.1.9.8.18.1.2',
  'lcsStatusTcpIpNetbiosNetworksEntryRtgTag' => '1.3.6.1.4.1.2356.11.1.9.8.18.1.3',
  'lcsStatusTcpIpNetbiosNetworksEntryVlanId' => '1.3.6.1.4.1.2356.11.1.9.8.18.1.5',
  'lcsStatusTcpIpNetbiosNetworksEntryInterface' => '1.3.6.1.4.1.2356.11.1.9.8.18.1.7',
  'lcsStatusTcpIpNetbiosNetworksEntryInterfaceDefinition' => 'LCOS-MIB::lcsStatusTcpIpNetbiosNetworksEntryInterface',
  'lcsStatusTcpIpNetbiosGroupListTable' => '1.3.6.1.4.1.2356.11.1.9.8.19',
  'lcsStatusTcpIpNetbiosGroupListEntry' => '1.3.6.1.4.1.2356.11.1.9.8.19.1',
  'lcsStatusTcpIpNetbiosGroupListEntryGroupDomain' => '1.3.6.1.4.1.2356.11.1.9.8.19.1.1',
  'lcsStatusTcpIpNetbiosGroupListEntryType' => '1.3.6.1.4.1.2356.11.1.9.8.19.1.2',
  'lcsStatusTcpIpNetbiosGroupListEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.9.8.19.1.3',
  'lcsStatusTcpIpNetbiosGroupListEntryPeer' => '1.3.6.1.4.1.2356.11.1.9.8.19.1.4',
  'lcsStatusTcpIpNetbiosGroupListEntryTimeout' => '1.3.6.1.4.1.2356.11.1.9.8.19.1.5',
  'lcsStatusTcpIpNetbiosGroupListEntryFlags' => '1.3.6.1.4.1.2356.11.1.9.8.19.1.6',
  'lcsStatusTcpIpNetbiosGroupListEntryNetworkName' => '1.3.6.1.4.1.2356.11.1.9.8.19.1.7',
  'lcsStatusTcpIpNetbiosGroupListEntryRtgTag' => '1.3.6.1.4.1.2356.11.1.9.8.19.1.8',
  'lcsStatusTcpIpNetbiosHostListTable' => '1.3.6.1.4.1.2356.11.1.9.8.20',
  'lcsStatusTcpIpNetbiosHostListEntry' => '1.3.6.1.4.1.2356.11.1.9.8.20.1',
  'lcsStatusTcpIpNetbiosHostListEntryName' => '1.3.6.1.4.1.2356.11.1.9.8.20.1.1',
  'lcsStatusTcpIpNetbiosHostListEntryType' => '1.3.6.1.4.1.2356.11.1.9.8.20.1.2',
  'lcsStatusTcpIpNetbiosHostListEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.9.8.20.1.3',
  'lcsStatusTcpIpNetbiosHostListEntryPeer' => '1.3.6.1.4.1.2356.11.1.9.8.20.1.4',
  'lcsStatusTcpIpNetbiosHostListEntryTimeout' => '1.3.6.1.4.1.2356.11.1.9.8.20.1.5',
  'lcsStatusTcpIpNetbiosHostListEntryFlags' => '1.3.6.1.4.1.2356.11.1.9.8.20.1.6',
  'lcsStatusTcpIpNetbiosHostListEntryNetworkName' => '1.3.6.1.4.1.2356.11.1.9.8.20.1.7',
  'lcsStatusTcpIpNetbiosHostListEntryRtgTag' => '1.3.6.1.4.1.2356.11.1.9.8.20.1.8',
  'lcsStatusTcpIpNetbiosServerListTable' => '1.3.6.1.4.1.2356.11.1.9.8.21',
  'lcsStatusTcpIpNetbiosServerListEntry' => '1.3.6.1.4.1.2356.11.1.9.8.21.1',
  'lcsStatusTcpIpNetbiosServerListEntryHost' => '1.3.6.1.4.1.2356.11.1.9.8.21.1.1',
  'lcsStatusTcpIpNetbiosServerListEntryGroupDomain' => '1.3.6.1.4.1.2356.11.1.9.8.21.1.2',
  'lcsStatusTcpIpNetbiosServerListEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.9.8.21.1.4',
  'lcsStatusTcpIpNetbiosServerListEntryOsVer' => '1.3.6.1.4.1.2356.11.1.9.8.21.1.5',
  'lcsStatusTcpIpNetbiosServerListEntrySmbVer' => '1.3.6.1.4.1.2356.11.1.9.8.21.1.6',
  'lcsStatusTcpIpNetbiosServerListEntryServerTyp' => '1.3.6.1.4.1.2356.11.1.9.8.21.1.7',
  'lcsStatusTcpIpNetbiosServerListEntryPeer' => '1.3.6.1.4.1.2356.11.1.9.8.21.1.8',
  'lcsStatusTcpIpNetbiosServerListEntryTimeout' => '1.3.6.1.4.1.2356.11.1.9.8.21.1.9',
  'lcsStatusTcpIpNetbiosServerListEntryFlags' => '1.3.6.1.4.1.2356.11.1.9.8.21.1.10',
  'lcsStatusTcpIpNetbiosServerListEntryNetworkName' => '1.3.6.1.4.1.2356.11.1.9.8.21.1.11',
  'lcsStatusTcpIpNetbiosServerListEntryRtgTag' => '1.3.6.1.4.1.2356.11.1.9.8.21.1.12',
  'lcsStatusTcpIpNetbiosBrowserListTable' => '1.3.6.1.4.1.2356.11.1.9.8.22',
  'lcsStatusTcpIpNetbiosBrowserListEntry' => '1.3.6.1.4.1.2356.11.1.9.8.22.1',
  'lcsStatusTcpIpNetbiosBrowserListEntryBrowser' => '1.3.6.1.4.1.2356.11.1.9.8.22.1.1',
  'lcsStatusTcpIpNetbiosBrowserListEntryGroupDomain' => '1.3.6.1.4.1.2356.11.1.9.8.22.1.2',
  'lcsStatusTcpIpNetbiosBrowserListEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.9.8.22.1.4',
  'lcsStatusTcpIpNetbiosBrowserListEntryOsVer' => '1.3.6.1.4.1.2356.11.1.9.8.22.1.5',
  'lcsStatusTcpIpNetbiosBrowserListEntryServerTyp' => '1.3.6.1.4.1.2356.11.1.9.8.22.1.7',
  'lcsStatusTcpIpNetbiosBrowserListEntryPeer' => '1.3.6.1.4.1.2356.11.1.9.8.22.1.8',
  'lcsStatusTcpIpNetbiosBrowserListEntryTimeout' => '1.3.6.1.4.1.2356.11.1.9.8.22.1.9',
  'lcsStatusTcpIpNetbiosBrowserListEntryFlags' => '1.3.6.1.4.1.2356.11.1.9.8.22.1.10',
  'lcsStatusTcpIpNetbiosBrowserListEntryNetworkName' => '1.3.6.1.4.1.2356.11.1.9.8.22.1.11',
  'lcsStatusTcpIpNetbiosBrowserListEntryRtgTag' => '1.3.6.1.4.1.2356.11.1.9.8.22.1.12',
  'lcsStatusTcpIpDns' => '1.3.6.1.4.1.2356.11.1.9.9',
  'lcsStatusTcpIpDnsLanRx' => '1.3.6.1.4.1.2356.11.1.9.9.1',
  'lcsStatusTcpIpDnsLanTx' => '1.3.6.1.4.1.2356.11.1.9.9.2',
  'lcsStatusTcpIpDnsWanRx' => '1.3.6.1.4.1.2356.11.1.9.9.3',
  'lcsStatusTcpIpDnsWanTx' => '1.3.6.1.4.1.2356.11.1.9.9.4',
  'lcsStatusTcpIpDnsForwarded' => '1.3.6.1.4.1.2356.11.1.9.9.5',
  'lcsStatusTcpIpDnsErrors' => '1.3.6.1.4.1.2356.11.1.9.9.6',
  'lcsStatusTcpIpDnsDnsAccess' => '1.3.6.1.4.1.2356.11.1.9.9.7',
  'lcsStatusTcpIpDnsDhcpAccess' => '1.3.6.1.4.1.2356.11.1.9.9.8',
  'lcsStatusTcpIpDnsNetbiosAccess' => '1.3.6.1.4.1.2356.11.1.9.9.9',
  'lcsStatusTcpIpDnsFilter' => '1.3.6.1.4.1.2356.11.1.9.9.10',
  'lcsStatusTcpIpDnsHitListTable' => '1.3.6.1.4.1.2356.11.1.9.9.11',
  'lcsStatusTcpIpDnsHitListEntry' => '1.3.6.1.4.1.2356.11.1.9.9.11.1',
  'lcsStatusTcpIpDnsHitListEntryDomain' => '1.3.6.1.4.1.2356.11.1.9.9.11.1.1',
  'lcsStatusTcpIpDnsHitListEntryRequests' => '1.3.6.1.4.1.2356.11.1.9.9.11.1.2',
  'lcsStatusTcpIpDnsHitListEntryTime' => '1.3.6.1.4.1.2356.11.1.9.9.11.1.3',
  'lcsStatusTcpIpDnsHitListEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.9.9.11.1.4',
  'lcsStatusTcpIpDnsDeleteValues' => '1.3.6.1.4.1.2356.11.1.9.9.12',
  'lcsStatusTcpIpHttp' => '1.3.6.1.4.1.2356.11.1.9.10',
  'lcsStatusTcpIpHttpHttpAccesses' => '1.3.6.1.4.1.2356.11.1.9.10.1',
  'lcsStatusTcpIpHttpHttpNotfoundErrors' => '1.3.6.1.4.1.2356.11.1.9.10.2',
  'lcsStatusTcpIpHttpHttpAuthenticationErrors' => '1.3.6.1.4.1.2356.11.1.9.10.3',
  'lcsStatusTcpIpHttpHttpProtocolErrors' => '1.3.6.1.4.1.2356.11.1.9.10.4',
  'lcsStatusTcpIpHttpDeleteValues' => '1.3.6.1.4.1.2356.11.1.9.10.5',
  'lcsStatusTcpIpHttpHttpsAccesses' => '1.3.6.1.4.1.2356.11.1.9.10.6',
  'lcsStatusTcpIpHttpAgentListTable' => '1.3.6.1.4.1.2356.11.1.9.10.7',
  'lcsStatusTcpIpHttpAgentListEntry' => '1.3.6.1.4.1.2356.11.1.9.10.7.1',
  'lcsStatusTcpIpHttpAgentListEntryAgentName' => '1.3.6.1.4.1.2356.11.1.9.10.7.1.1',
  'lcsStatusTcpIpHttpAgentListEntryAccesses' => '1.3.6.1.4.1.2356.11.1.9.10.7.1.2',
  'lcsStatusTcpIpHttpActiveTunnelsTable' => '1.3.6.1.4.1.2356.11.1.9.10.8',
  'lcsStatusTcpIpHttpActiveTunnelsEntry' => '1.3.6.1.4.1.2356.11.1.9.10.8.1',
  'lcsStatusTcpIpHttpActiveTunnelsEntryIndex' => '1.3.6.1.4.1.2356.11.1.9.10.8.1.1',
  'lcsStatusTcpIpHttpActiveTunnelsEntryRemoteAddress' => '1.3.6.1.4.1.2356.11.1.9.10.8.1.2',
  'lcsStatusTcpIpHttpActiveTunnelsEntryRemotePort' => '1.3.6.1.4.1.2356.11.1.9.10.8.1.3',
  'lcsStatusTcpIpHttpActiveTunnelsEntryLocalHost' => '1.3.6.1.4.1.2356.11.1.9.10.8.1.4',
  'lcsStatusTcpIpHttpActiveTunnelsEntryLocalPort' => '1.3.6.1.4.1.2356.11.1.9.10.8.1.5',
  'lcsStatusTcpIpHttpActiveTunnelsEntryIdleTime' => '1.3.6.1.4.1.2356.11.1.9.10.8.1.6',
  'lcsStatusTcpIpHttpActiveTunnelsEntryLocalRtgTag' => '1.3.6.1.4.1.2356.11.1.9.10.8.1.7',
  'lcsStatusTcpIpHttpActiveTunnelsEntryNumConnections' => '1.3.6.1.4.1.2356.11.1.9.10.8.1.8',
  'lcsStatusTcpIpHttpActiveTunnelsEntryState' => '1.3.6.1.4.1.2356.11.1.9.10.8.1.9',
  'lcsStatusTcpIpHttpActiveTunnelsEntryStateDefinition' => 'LCOS-MIB::lcsStatusTcpIpHttpActiveTunnelsEntryState',
  'lcsStatusTcpIpSyslog' => '1.3.6.1.4.1.2356.11.1.9.11',
  'lcsStatusTcpIpSyslogLastMessagesTable' => '1.3.6.1.4.1.2356.11.1.9.11.11',
  'lcsStatusTcpIpSyslogLastMessagesEntry' => '1.3.6.1.4.1.2356.11.1.9.11.11.1',
  'lcsStatusTcpIpSyslogLastMessagesEntryIdx' => '1.3.6.1.4.1.2356.11.1.9.11.11.1.1',
  'lcsStatusTcpIpSyslogLastMessagesEntryTime' => '1.3.6.1.4.1.2356.11.1.9.11.11.1.2',
  'lcsStatusTcpIpSyslogLastMessagesEntrySource' => '1.3.6.1.4.1.2356.11.1.9.11.11.1.3',
  'lcsStatusTcpIpSyslogLastMessagesEntrySourceDefinition' => 'LCOS-MIB::lcsStatusTcpIpSyslogLastMessagesEntrySource',
  'lcsStatusTcpIpSyslogLastMessagesEntryLevel' => '1.3.6.1.4.1.2356.11.1.9.11.11.1.4',
  'lcsStatusTcpIpSyslogLastMessagesEntryLevelDefinition' => 'LCOS-MIB::lcsStatusTcpIpSyslogLastMessagesEntryLevel',
  'lcsStatusTcpIpSyslogLastMessagesEntryMessage' => '1.3.6.1.4.1.2356.11.1.9.11.11.1.5',
  'lcsStatusTcpIpSyslogDeleteValues' => '1.3.6.1.4.1.2356.11.1.9.11.99',
  'lcsStatusTcpIpRadiuss' => '1.3.6.1.4.1.2356.11.1.9.12',
  'lcsStatusTcpIpRadiussAccess' => '1.3.6.1.4.1.2356.11.1.9.12.1',
  'lcsStatusTcpIpRadiussAccessTotalAccessRequests' => '1.3.6.1.4.1.2356.11.1.9.12.1.5',
  'lcsStatusTcpIpRadiussAccessTotalInvalidAccessRequests' => '1.3.6.1.4.1.2356.11.1.9.12.1.6',
  'lcsStatusTcpIpRadiussAccessTotalDuplicateAccessRequests' => '1.3.6.1.4.1.2356.11.1.9.12.1.7',
  'lcsStatusTcpIpRadiussAccessTotalAccessAccepts' => '1.3.6.1.4.1.2356.11.1.9.12.1.8',
  'lcsStatusTcpIpRadiussAccessTotalAccessRejects' => '1.3.6.1.4.1.2356.11.1.9.12.1.9',
  'lcsStatusTcpIpRadiussAccessTotalAccessChallenges' => '1.3.6.1.4.1.2356.11.1.9.12.1.10',
  'lcsStatusTcpIpRadiussAccessTotalMalformedAccessRequests' => '1.3.6.1.4.1.2356.11.1.9.12.1.11',
  'lcsStatusTcpIpRadiussAccessTotalAccessBadAuthenticator' => '1.3.6.1.4.1.2356.11.1.9.12.1.12',
  'lcsStatusTcpIpRadiussAccessTotalAccessDropped' => '1.3.6.1.4.1.2356.11.1.9.12.1.13',
  'lcsStatusTcpIpRadiussAccessTotalAccessUnknownType' => '1.3.6.1.4.1.2356.11.1.9.12.1.14',
  'lcsStatusTcpIpRadiussAccessClientsTable' => '1.3.6.1.4.1.2356.11.1.9.12.1.15',
  'lcsStatusTcpIpRadiussAccessClientsEntry' => '1.3.6.1.4.1.2356.11.1.9.12.1.15.1',
  'lcsStatusTcpIpRadiussAccessClientsEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.9.12.1.15.1.1',
  'lcsStatusTcpIpRadiussAccessClientsEntryAccessRequests' => '1.3.6.1.4.1.2356.11.1.9.12.1.15.1.4',
  'lcsStatusTcpIpRadiussAccessClientsEntryDuplicateRequests' => '1.3.6.1.4.1.2356.11.1.9.12.1.15.1.5',
  'lcsStatusTcpIpRadiussAccessClientsEntryAccessAccepts' => '1.3.6.1.4.1.2356.11.1.9.12.1.15.1.6',
  'lcsStatusTcpIpRadiussAccessClientsEntryAccessRejects' => '1.3.6.1.4.1.2356.11.1.9.12.1.15.1.7',
  'lcsStatusTcpIpRadiussAccessClientsEntryAccessChallenges' => '1.3.6.1.4.1.2356.11.1.9.12.1.15.1.8',
  'lcsStatusTcpIpRadiussAccessClientsEntryMalfAccReq' => '1.3.6.1.4.1.2356.11.1.9.12.1.15.1.9',
  'lcsStatusTcpIpRadiussAccessClientsEntryBadAuthenticator' => '1.3.6.1.4.1.2356.11.1.9.12.1.15.1.10',
  'lcsStatusTcpIpRadiussAccessClientsEntryDropped' => '1.3.6.1.4.1.2356.11.1.9.12.1.15.1.11',
  'lcsStatusTcpIpRadiussAccessClientsEntryUnknownType' => '1.3.6.1.4.1.2356.11.1.9.12.1.15.1.12',
  'lcsStatusTcpIpRadiussAccessClientsEntryLastRequest' => '1.3.6.1.4.1.2356.11.1.9.12.1.15.1.13',
  'lcsStatusTcpIpRadiussAccessClientsEntryNasIdent' => '1.3.6.1.4.1.2356.11.1.9.12.1.15.1.14',
  'lcsStatusTcpIpRadiussAccessClientsEntryStatusRequests' => '1.3.6.1.4.1.2356.11.1.9.12.1.15.1.30',
  'lcsStatusTcpIpRadiussAccessClientsEntryStatusResponses' => '1.3.6.1.4.1.2356.11.1.9.12.1.15.1.31',
  'lcsStatusTcpIpRadiussAccessClientsEntryLastStatusRequest' => '1.3.6.1.4.1.2356.11.1.9.12.1.15.1.32',
  'lcsStatusTcpIpRadiussAccessTotalStatusRequests' => '1.3.6.1.4.1.2356.11.1.9.12.1.30',
  'lcsStatusTcpIpRadiussAccessTotalStatusResponses' => '1.3.6.1.4.1.2356.11.1.9.12.1.31',
  'lcsStatusTcpIpRadiussAccessDeleteValues' => '1.3.6.1.4.1.2356.11.1.9.12.1.100',
  'lcsStatusTcpIpRadiussAccnt' => '1.3.6.1.4.1.2356.11.1.9.12.2',
  'lcsStatusTcpIpRadiussAccntTotalAccountRequests' => '1.3.6.1.4.1.2356.11.1.9.12.2.5',
  'lcsStatusTcpIpRadiussAccntTotalInvalidAccountRequests' => '1.3.6.1.4.1.2356.11.1.9.12.2.6',
  'lcsStatusTcpIpRadiussAccntTotalDuplicateAccountRequests' => '1.3.6.1.4.1.2356.11.1.9.12.2.7',
  'lcsStatusTcpIpRadiussAccntTotalAccountResponses' => '1.3.6.1.4.1.2356.11.1.9.12.2.8',
  'lcsStatusTcpIpRadiussAccntTotalMalformedAccountRequests' => '1.3.6.1.4.1.2356.11.1.9.12.2.9',
  'lcsStatusTcpIpRadiussAccntTotalAccountBadAuthenticator' => '1.3.6.1.4.1.2356.11.1.9.12.2.10',
  'lcsStatusTcpIpRadiussAccntTotalAccountDropped' => '1.3.6.1.4.1.2356.11.1.9.12.2.11',
  'lcsStatusTcpIpRadiussAccntTotalAccountNorecord' => '1.3.6.1.4.1.2356.11.1.9.12.2.12',
  'lcsStatusTcpIpRadiussAccntTotalAccountUnknownType' => '1.3.6.1.4.1.2356.11.1.9.12.2.13',
  'lcsStatusTcpIpRadiussAccntClientsTable' => '1.3.6.1.4.1.2356.11.1.9.12.2.15',
  'lcsStatusTcpIpRadiussAccntClientsEntry' => '1.3.6.1.4.1.2356.11.1.9.12.2.15.1',
  'lcsStatusTcpIpRadiussAccntClientsEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.9.12.2.15.1.1',
  'lcsStatusTcpIpRadiussAccntClientsEntryAccountRequests' => '1.3.6.1.4.1.2356.11.1.9.12.2.15.1.4',
  'lcsStatusTcpIpRadiussAccntClientsEntryDuplicateRequests' => '1.3.6.1.4.1.2356.11.1.9.12.2.15.1.5',
  'lcsStatusTcpIpRadiussAccntClientsEntryAccountResponses' => '1.3.6.1.4.1.2356.11.1.9.12.2.15.1.6',
  'lcsStatusTcpIpRadiussAccntClientsEntryAccountNorecords' => '1.3.6.1.4.1.2356.11.1.9.12.2.15.1.7',
  'lcsStatusTcpIpRadiussAccntClientsEntryMalfAccReq' => '1.3.6.1.4.1.2356.11.1.9.12.2.15.1.9',
  'lcsStatusTcpIpRadiussAccntClientsEntryBadAuthenticator' => '1.3.6.1.4.1.2356.11.1.9.12.2.15.1.10',
  'lcsStatusTcpIpRadiussAccntClientsEntryDropped' => '1.3.6.1.4.1.2356.11.1.9.12.2.15.1.11',
  'lcsStatusTcpIpRadiussAccntClientsEntryUnknownType' => '1.3.6.1.4.1.2356.11.1.9.12.2.15.1.12',
  'lcsStatusTcpIpRadiussAccntClientsEntryLastRequest' => '1.3.6.1.4.1.2356.11.1.9.12.2.15.1.13',
  'lcsStatusTcpIpRadiussAccntClientsEntryNasIdent' => '1.3.6.1.4.1.2356.11.1.9.12.2.15.1.14',
  'lcsStatusTcpIpRadiussAccntClientsEntryStatusRequests' => '1.3.6.1.4.1.2356.11.1.9.12.2.15.1.30',
  'lcsStatusTcpIpRadiussAccntClientsEntryStatusResponses' => '1.3.6.1.4.1.2356.11.1.9.12.2.15.1.31',
  'lcsStatusTcpIpRadiussAccntClientsEntryLastStatusRequest' => '1.3.6.1.4.1.2356.11.1.9.12.2.15.1.32',
  'lcsStatusTcpIpRadiussAccntActAccntSessTable' => '1.3.6.1.4.1.2356.11.1.9.12.2.16',
  'lcsStatusTcpIpRadiussAccntActAccntSessEntry' => '1.3.6.1.4.1.2356.11.1.9.12.2.16.1',
  'lcsStatusTcpIpRadiussAccntActAccntSessEntryIndex' => '1.3.6.1.4.1.2356.11.1.9.12.2.16.1.1',
  'lcsStatusTcpIpRadiussAccntActAccntSessEntryNasIpAddress' => '1.3.6.1.4.1.2356.11.1.9.12.2.16.1.2',
  'lcsStatusTcpIpRadiussAccntActAccntSessEntryNasIdent' => '1.3.6.1.4.1.2356.11.1.9.12.2.16.1.3',
  'lcsStatusTcpIpRadiussAccntActAccntSessEntrySessionId' => '1.3.6.1.4.1.2356.11.1.9.12.2.16.1.4',
  'lcsStatusTcpIpRadiussAccntActAccntSessEntryUserName' => '1.3.6.1.4.1.2356.11.1.9.12.2.16.1.5',
  'lcsStatusTcpIpRadiussAccntActAccntSessEntrySessionTime' => '1.3.6.1.4.1.2356.11.1.9.12.2.16.1.6',
  'lcsStatusTcpIpRadiussAccntActAccntSessEntryInputPackets' => '1.3.6.1.4.1.2356.11.1.9.12.2.16.1.7',
  'lcsStatusTcpIpRadiussAccntActAccntSessEntryOutputPackets' => '1.3.6.1.4.1.2356.11.1.9.12.2.16.1.8',
  'lcsStatusTcpIpRadiussAccntActAccntSessEntryInputOctets' => '1.3.6.1.4.1.2356.11.1.9.12.2.16.1.9',
  'lcsStatusTcpIpRadiussAccntActAccntSessEntryOutputOctets' => '1.3.6.1.4.1.2356.11.1.9.12.2.16.1.10',
  'lcsStatusTcpIpRadiussAccntActAccntSessEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.9.12.2.16.1.11',
  'lcsStatusTcpIpRadiussAccntActAccntSessEntryStartTime' => '1.3.6.1.4.1.2356.11.1.9.12.2.16.1.12',
  'lcsStatusTcpIpRadiussAccntActAccntSessEntryLastUpdate' => '1.3.6.1.4.1.2356.11.1.9.12.2.16.1.15',
  'lcsStatusTcpIpRadiussAccntActAccntSessEntryUpdateDelta' => '1.3.6.1.4.1.2356.11.1.9.12.2.16.1.16',
  'lcsStatusTcpIpRadiussAccntActAccntSessEntryNasPortType' => '1.3.6.1.4.1.2356.11.1.9.12.2.16.1.17',
  'lcsStatusTcpIpRadiussAccntActAccntSessEntryNasPortTypeDefinition' => 'LCOS-MIB::lcsStatusTcpIpRadiussAccntActAccntSessEntryNasPortType',
  'lcsStatusTcpIpRadiussAccntActAccntSessEntryNasPortId' => '1.3.6.1.4.1.2356.11.1.9.12.2.16.1.18',
  'lcsStatusTcpIpRadiussAccntActAccntSessEntryCalledStationId' => '1.3.6.1.4.1.2356.11.1.9.12.2.16.1.19',
  'lcsStatusTcpIpRadiussAccntActAccntSessEntryCallingStationId' => '1.3.6.1.4.1.2356.11.1.9.12.2.16.1.20',
  'lcsStatusTcpIpRadiussAccntComplAccntSessTable' => '1.3.6.1.4.1.2356.11.1.9.12.2.17',
  'lcsStatusTcpIpRadiussAccntComplAccntSessEntry' => '1.3.6.1.4.1.2356.11.1.9.12.2.17.1',
  'lcsStatusTcpIpRadiussAccntComplAccntSessEntryIndex' => '1.3.6.1.4.1.2356.11.1.9.12.2.17.1.1',
  'lcsStatusTcpIpRadiussAccntComplAccntSessEntryNasIpAddress' => '1.3.6.1.4.1.2356.11.1.9.12.2.17.1.2',
  'lcsStatusTcpIpRadiussAccntComplAccntSessEntryNasIdent' => '1.3.6.1.4.1.2356.11.1.9.12.2.17.1.3',
  'lcsStatusTcpIpRadiussAccntComplAccntSessEntrySessionId' => '1.3.6.1.4.1.2356.11.1.9.12.2.17.1.4',
  'lcsStatusTcpIpRadiussAccntComplAccntSessEntryUserName' => '1.3.6.1.4.1.2356.11.1.9.12.2.17.1.5',
  'lcsStatusTcpIpRadiussAccntComplAccntSessEntrySessionTime' => '1.3.6.1.4.1.2356.11.1.9.12.2.17.1.6',
  'lcsStatusTcpIpRadiussAccntComplAccntSessEntryInputPackets' => '1.3.6.1.4.1.2356.11.1.9.12.2.17.1.7',
  'lcsStatusTcpIpRadiussAccntComplAccntSessEntryOutputPackets' => '1.3.6.1.4.1.2356.11.1.9.12.2.17.1.8',
  'lcsStatusTcpIpRadiussAccntComplAccntSessEntryInputOctets' => '1.3.6.1.4.1.2356.11.1.9.12.2.17.1.9',
  'lcsStatusTcpIpRadiussAccntComplAccntSessEntryOutputOctets' => '1.3.6.1.4.1.2356.11.1.9.12.2.17.1.10',
  'lcsStatusTcpIpRadiussAccntComplAccntSessEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.9.12.2.17.1.11',
  'lcsStatusTcpIpRadiussAccntComplAccntSessEntryStartTime' => '1.3.6.1.4.1.2356.11.1.9.12.2.17.1.12',
  'lcsStatusTcpIpRadiussAccntComplAccntSessEntryStopTime' => '1.3.6.1.4.1.2356.11.1.9.12.2.17.1.13',
  'lcsStatusTcpIpRadiussAccntComplAccntSessEntryTerminateCause' => '1.3.6.1.4.1.2356.11.1.9.12.2.17.1.14',
  'lcsStatusTcpIpRadiussAccntComplAccntSessEntryTerminateCauseDefinition' => 'LCOS-MIB::lcsStatusTcpIpRadiussAccntComplAccntSessEntryTerminateCause',
  'lcsStatusTcpIpRadiussAccntComplAccntSessEntryNasPortType' => '1.3.6.1.4.1.2356.11.1.9.12.2.17.1.17',
  'lcsStatusTcpIpRadiussAccntComplAccntSessEntryNasPortTypeDefinition' => 'LCOS-MIB::lcsStatusTcpIpRadiussAccntComplAccntSessEntryNasPortType',
  'lcsStatusTcpIpRadiussAccntComplAccntSessEntryNasPortId' => '1.3.6.1.4.1.2356.11.1.9.12.2.17.1.18',
  'lcsStatusTcpIpRadiussAccntComplAccntSessEntryCalledStationId' => '1.3.6.1.4.1.2356.11.1.9.12.2.17.1.19',
  'lcsStatusTcpIpRadiussAccntComplAccntSessEntryCallingStationId' => '1.3.6.1.4.1.2356.11.1.9.12.2.17.1.20',
  'lcsStatusTcpIpRadiussAccntAccountingTotalTable' => '1.3.6.1.4.1.2356.11.1.9.12.2.18',
  'lcsStatusTcpIpRadiussAccntAccountingTotalEntry' => '1.3.6.1.4.1.2356.11.1.9.12.2.18.1',
  'lcsStatusTcpIpRadiussAccntAccountingTotalEntryUserName' => '1.3.6.1.4.1.2356.11.1.9.12.2.18.1.1',
  'lcsStatusTcpIpRadiussAccntAccountingTotalEntryTime' => '1.3.6.1.4.1.2356.11.1.9.12.2.18.1.2',
  'lcsStatusTcpIpRadiussAccntAccountingTotalEntryInputPackets' => '1.3.6.1.4.1.2356.11.1.9.12.2.18.1.3',
  'lcsStatusTcpIpRadiussAccntAccountingTotalEntryOutputPackets' => '1.3.6.1.4.1.2356.11.1.9.12.2.18.1.4',
  'lcsStatusTcpIpRadiussAccntAccountingTotalEntryInputOctets' => '1.3.6.1.4.1.2356.11.1.9.12.2.18.1.5',
  'lcsStatusTcpIpRadiussAccntAccountingTotalEntryOutputOctets' => '1.3.6.1.4.1.2356.11.1.9.12.2.18.1.6',
  'lcsStatusTcpIpRadiussAccntAccountingTotalEntryFirstLogin' => '1.3.6.1.4.1.2356.11.1.9.12.2.18.1.7',
  'lcsStatusTcpIpRadiussAccntDeleteAccountingTotal' => '1.3.6.1.4.1.2356.11.1.9.12.2.19',
  'lcsStatusTcpIpRadiussAccntTotalStatusRequests' => '1.3.6.1.4.1.2356.11.1.9.12.2.30',
  'lcsStatusTcpIpRadiussAccntTotalStatusResponses' => '1.3.6.1.4.1.2356.11.1.9.12.2.31',
  'lcsStatusTcpIpRadiussAccntDeleteValues' => '1.3.6.1.4.1.2356.11.1.9.12.2.100',
  'lcsStatusTcpIpRadiussLogTableTable' => '1.3.6.1.4.1.2356.11.1.9.12.10',
  'lcsStatusTcpIpRadiussLogTableEntry' => '1.3.6.1.4.1.2356.11.1.9.12.10.1',
  'lcsStatusTcpIpRadiussLogTableEntryIndex' => '1.3.6.1.4.1.2356.11.1.9.12.10.1.1',
  'lcsStatusTcpIpRadiussLogTableEntryTime' => '1.3.6.1.4.1.2356.11.1.9.12.10.1.2',
  'lcsStatusTcpIpRadiussLogTableEntryEvent' => '1.3.6.1.4.1.2356.11.1.9.12.10.1.3',
  'lcsStatusTcpIpRadiussDeleteValues' => '1.3.6.1.4.1.2356.11.1.9.12.100',
  'lcsStatusTcpIpRadiusc' => '1.3.6.1.4.1.2356.11.1.9.13',
  'lcsStatusTcpIpRadiuscInvalAuthAddrResp' => '1.3.6.1.4.1.2356.11.1.9.13.1',
  'lcsStatusTcpIpRadiuscAuthServTable' => '1.3.6.1.4.1.2356.11.1.9.13.2',
  'lcsStatusTcpIpRadiuscAuthServEntry' => '1.3.6.1.4.1.2356.11.1.9.13.2.1',
  'lcsStatusTcpIpRadiuscAuthServEntryIpAddr' => '1.3.6.1.4.1.2356.11.1.9.13.2.1.1',
  'lcsStatusTcpIpRadiuscAuthServEntryPort' => '1.3.6.1.4.1.2356.11.1.9.13.2.1.2',
  'lcsStatusTcpIpRadiuscAuthServEntryLastRequest' => '1.3.6.1.4.1.2356.11.1.9.13.2.1.3',
  'lcsStatusTcpIpRadiuscAuthServEntryRoundTripTime' => '1.3.6.1.4.1.2356.11.1.9.13.2.1.4',
  'lcsStatusTcpIpRadiuscAuthServEntryAccReq' => '1.3.6.1.4.1.2356.11.1.9.13.2.1.5',
  'lcsStatusTcpIpRadiuscAuthServEntryAccRetrs' => '1.3.6.1.4.1.2356.11.1.9.13.2.1.6',
  'lcsStatusTcpIpRadiuscAuthServEntryAccAccepts' => '1.3.6.1.4.1.2356.11.1.9.13.2.1.7',
  'lcsStatusTcpIpRadiuscAuthServEntryAccRej' => '1.3.6.1.4.1.2356.11.1.9.13.2.1.8',
  'lcsStatusTcpIpRadiuscAuthServEntryAccChallenges' => '1.3.6.1.4.1.2356.11.1.9.13.2.1.9',
  'lcsStatusTcpIpRadiuscAuthServEntryMalfAccResp' => '1.3.6.1.4.1.2356.11.1.9.13.2.1.10',
  'lcsStatusTcpIpRadiuscAuthServEntryBadAuth' => '1.3.6.1.4.1.2356.11.1.9.13.2.1.11',
  'lcsStatusTcpIpRadiuscAuthServEntryPendReq' => '1.3.6.1.4.1.2356.11.1.9.13.2.1.12',
  'lcsStatusTcpIpRadiuscAuthServEntryTimeouts' => '1.3.6.1.4.1.2356.11.1.9.13.2.1.13',
  'lcsStatusTcpIpRadiuscAuthServEntryUnknownTypes' => '1.3.6.1.4.1.2356.11.1.9.13.2.1.14',
  'lcsStatusTcpIpRadiuscAuthServEntryDropped' => '1.3.6.1.4.1.2356.11.1.9.13.2.1.15',
  'lcsStatusTcpIpRadiuscInvalAccntAddrResp' => '1.3.6.1.4.1.2356.11.1.9.13.11',
  'lcsStatusTcpIpRadiuscAccntServTable' => '1.3.6.1.4.1.2356.11.1.9.13.12',
  'lcsStatusTcpIpRadiuscAccntServEntry' => '1.3.6.1.4.1.2356.11.1.9.13.12.1',
  'lcsStatusTcpIpRadiuscAccntServEntryIpAddr' => '1.3.6.1.4.1.2356.11.1.9.13.12.1.1',
  'lcsStatusTcpIpRadiuscAccntServEntryPort' => '1.3.6.1.4.1.2356.11.1.9.13.12.1.2',
  'lcsStatusTcpIpRadiuscAccntServEntryLastRequest' => '1.3.6.1.4.1.2356.11.1.9.13.12.1.3',
  'lcsStatusTcpIpRadiuscAccntServEntryRoundTripTime' => '1.3.6.1.4.1.2356.11.1.9.13.12.1.4',
  'lcsStatusTcpIpRadiuscAccntServEntryAccntReq' => '1.3.6.1.4.1.2356.11.1.9.13.12.1.5',
  'lcsStatusTcpIpRadiuscAccntServEntryAccntRetrans' => '1.3.6.1.4.1.2356.11.1.9.13.12.1.6',
  'lcsStatusTcpIpRadiuscAccntServEntryAccntResp' => '1.3.6.1.4.1.2356.11.1.9.13.12.1.7',
  'lcsStatusTcpIpRadiuscAccntServEntryMalfAccntResp' => '1.3.6.1.4.1.2356.11.1.9.13.12.1.8',
  'lcsStatusTcpIpRadiuscAccntServEntryBadAuth' => '1.3.6.1.4.1.2356.11.1.9.13.12.1.9',
  'lcsStatusTcpIpRadiuscAccntServEntryPendReq' => '1.3.6.1.4.1.2356.11.1.9.13.12.1.10',
  'lcsStatusTcpIpRadiuscAccntServEntryTimeouts' => '1.3.6.1.4.1.2356.11.1.9.13.12.1.11',
  'lcsStatusTcpIpRadiuscAccntServEntryUnknownTypes' => '1.3.6.1.4.1.2356.11.1.9.13.12.1.12',
  'lcsStatusTcpIpRadiuscAccntServEntryDropped' => '1.3.6.1.4.1.2356.11.1.9.13.12.1.13',
  'lcsStatusTcpIpNetworkListTable' => '1.3.6.1.4.1.2356.11.1.9.20',
  'lcsStatusTcpIpNetworkListEntry' => '1.3.6.1.4.1.2356.11.1.9.20.1',
  'lcsStatusTcpIpNetworkListEntryNetworkName' => '1.3.6.1.4.1.2356.11.1.9.20.1.1',
  'lcsStatusTcpIpNetworkListEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.9.20.1.2',
  'lcsStatusTcpIpNetworkListEntryIpNetmask' => '1.3.6.1.4.1.2356.11.1.9.20.1.3',
  'lcsStatusTcpIpNetworkListEntryVlanId' => '1.3.6.1.4.1.2356.11.1.9.20.1.4',
  'lcsStatusTcpIpNetworkListEntryInterface' => '1.3.6.1.4.1.2356.11.1.9.20.1.5',
  'lcsStatusTcpIpNetworkListEntryInterfaceDefinition' => 'LCOS-MIB::lcsStatusTcpIpNetworkListEntryInterface',
  'lcsStatusTcpIpNetworkListEntrySrcCheck' => '1.3.6.1.4.1.2356.11.1.9.20.1.6',
  'lcsStatusTcpIpNetworkListEntrySrcCheckDefinition' => 'LCOS-MIB::lcsStatusTcpIpNetworkListEntrySrcCheck',
  'lcsStatusTcpIpNetworkListEntryType' => '1.3.6.1.4.1.2356.11.1.9.20.1.7',
  'lcsStatusTcpIpNetworkListEntryTypeDefinition' => 'LCOS-MIB::lcsStatusTcpIpNetworkListEntryType',
  'lcsStatusTcpIpNetworkListEntryRtgTag' => '1.3.6.1.4.1.2356.11.1.9.20.1.8',
  'lcsStatusIpRouter' => '1.3.6.1.4.1.2356.11.1.10',
  'lcsStatusIpRouterLanRx' => '1.3.6.1.4.1.2356.11.1.10.1',
  'lcsStatusIpRouterLanTx' => '1.3.6.1.4.1.2356.11.1.10.2',
  'lcsStatusIpRouterLanLocalRoutings' => '1.3.6.1.4.1.2356.11.1.10.3',
  'lcsStatusIpRouterLanNetworkErrors' => '1.3.6.1.4.1.2356.11.1.10.4',
  'lcsStatusIpRouterLanRoutingErrors' => '1.3.6.1.4.1.2356.11.1.10.5',
  'lcsStatusIpRouterLanTtlErrors' => '1.3.6.1.4.1.2356.11.1.10.6',
  'lcsStatusIpRouterLanFilters' => '1.3.6.1.4.1.2356.11.1.10.7',
  'lcsStatusIpRouterLanDiscards' => '1.3.6.1.4.1.2356.11.1.10.8',
  'lcsStatusIpRouterWanRx' => '1.3.6.1.4.1.2356.11.1.10.9',
  'lcsStatusIpRouterWanTx' => '1.3.6.1.4.1.2356.11.1.10.10',
  'lcsStatusIpRouterWanNetworkErrors' => '1.3.6.1.4.1.2356.11.1.10.11',
  'lcsStatusIpRouterWanTtlErrors' => '1.3.6.1.4.1.2356.11.1.10.12',
  'lcsStatusIpRouterWanFilters' => '1.3.6.1.4.1.2356.11.1.10.13',
  'lcsStatusIpRouterWanDiscards' => '1.3.6.1.4.1.2356.11.1.10.14',
  'lcsStatusIpRouterWanTypeErrors' => '1.3.6.1.4.1.2356.11.1.10.15',
  'lcsStatusIpRouterArpErrors' => '1.3.6.1.4.1.2356.11.1.10.16',
  'lcsStatusIpRouterEstablishTableTable' => '1.3.6.1.4.1.2356.11.1.10.17',
  'lcsStatusIpRouterEstablishTableEntry' => '1.3.6.1.4.1.2356.11.1.10.17.1',
  'lcsStatusIpRouterEstablishTableEntryTime' => '1.3.6.1.4.1.2356.11.1.10.17.1.1',
  'lcsStatusIpRouterEstablishTableEntryDestAddress' => '1.3.6.1.4.1.2356.11.1.10.17.1.2',
  'lcsStatusIpRouterEstablishTableEntrySrcAddress' => '1.3.6.1.4.1.2356.11.1.10.17.1.3',
  'lcsStatusIpRouterEstablishTableEntryProt' => '1.3.6.1.4.1.2356.11.1.10.17.1.4',
  'lcsStatusIpRouterEstablishTableEntryProtDefinition' => 'LCOS-MIB::lcsStatusIpRouterEstablishTableEntryProt',
  'lcsStatusIpRouterEstablishTableEntryDPortFrom' => '1.3.6.1.4.1.2356.11.1.10.17.1.5',
  'lcsStatusIpRouterEstablishTableEntrySourcePort' => '1.3.6.1.4.1.2356.11.1.10.17.1.6',
  'lcsStatusIpRouterEstablishTableEntryCounter' => '1.3.6.1.4.1.2356.11.1.10.17.1.7',
  'lcsStatusIpRouterProtocolTableTable' => '1.3.6.1.4.1.2356.11.1.10.18',
  'lcsStatusIpRouterProtocolTableEntry' => '1.3.6.1.4.1.2356.11.1.10.18.1',
  'lcsStatusIpRouterProtocolTableEntryProt' => '1.3.6.1.4.1.2356.11.1.10.18.1.1',
  'lcsStatusIpRouterProtocolTableEntryProtDefinition' => 'LCOS-MIB::lcsStatusIpRouterProtocolTableEntryProt',
  'lcsStatusIpRouterProtocolTableEntryLanTx' => '1.3.6.1.4.1.2356.11.1.10.18.1.2',
  'lcsStatusIpRouterProtocolTableEntryWanTx' => '1.3.6.1.4.1.2356.11.1.10.18.1.3',
  'lcsStatusIpRouterRip' => '1.3.6.1.4.1.2356.11.1.10.19',
  'lcsStatusIpRouterRipRx' => '1.3.6.1.4.1.2356.11.1.10.19.1',
  'lcsStatusIpRouterRipRequests' => '1.3.6.1.4.1.2356.11.1.10.19.2',
  'lcsStatusIpRouterRipResponse' => '1.3.6.1.4.1.2356.11.1.10.19.3',
  'lcsStatusIpRouterRipDiscards' => '1.3.6.1.4.1.2356.11.1.10.19.4',
  'lcsStatusIpRouterRipErrors' => '1.3.6.1.4.1.2356.11.1.10.19.5',
  'lcsStatusIpRouterRipEntryErrors' => '1.3.6.1.4.1.2356.11.1.10.19.6',
  'lcsStatusIpRouterRipTx' => '1.3.6.1.4.1.2356.11.1.10.19.7',
  'lcsStatusIpRouterRipBestRoutesTable' => '1.3.6.1.4.1.2356.11.1.10.19.8',
  'lcsStatusIpRouterRipBestRoutesEntry' => '1.3.6.1.4.1.2356.11.1.10.19.8.1',
  'lcsStatusIpRouterRipBestRoutesEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.10.19.8.1.1',
  'lcsStatusIpRouterRipBestRoutesEntryIpNetmask' => '1.3.6.1.4.1.2356.11.1.10.19.8.1.2',
  'lcsStatusIpRouterRipBestRoutesEntryTime' => '1.3.6.1.4.1.2356.11.1.10.19.8.1.3',
  'lcsStatusIpRouterRipBestRoutesEntryDistance' => '1.3.6.1.4.1.2356.11.1.10.19.8.1.4',
  'lcsStatusIpRouterRipBestRoutesEntryGateway' => '1.3.6.1.4.1.2356.11.1.10.19.8.1.5',
  'lcsStatusIpRouterRipBestRoutesEntryRtgTag' => '1.3.6.1.4.1.2356.11.1.10.19.8.1.6',
  'lcsStatusIpRouterRipBestRoutesEntryPeer' => '1.3.6.1.4.1.2356.11.1.10.19.8.1.8',
  'lcsStatusIpRouterRipBestRoutesEntryVlanId' => '1.3.6.1.4.1.2356.11.1.10.19.8.1.10',
  'lcsStatusIpRouterRipBestRoutesEntryNetworkName' => '1.3.6.1.4.1.2356.11.1.10.19.8.1.11',
  'lcsStatusIpRouterRipBestRoutesEntryPort' => '1.3.6.1.4.1.2356.11.1.10.19.8.1.12',
  'lcsStatusIpRouterRipBestRoutesEntryPortDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipBestRoutesEntryPort',
  'lcsStatusIpRouterRipDeleteValues' => '1.3.6.1.4.1.2356.11.1.10.19.9',
  'lcsStatusIpRouterRipLanSitesTable' => '1.3.6.1.4.1.2356.11.1.10.19.10',
  'lcsStatusIpRouterRipLanSitesEntry' => '1.3.6.1.4.1.2356.11.1.10.19.10.1',
  'lcsStatusIpRouterRipLanSitesEntryNetworkName' => '1.3.6.1.4.1.2356.11.1.10.19.10.1.1',
  'lcsStatusIpRouterRipLanSitesEntryRipType' => '1.3.6.1.4.1.2356.11.1.10.19.10.1.2',
  'lcsStatusIpRouterRipLanSitesEntryRipTypeDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipLanSitesEntryRipType',
  'lcsStatusIpRouterRipLanSitesEntryRipAccept' => '1.3.6.1.4.1.2356.11.1.10.19.10.1.3',
  'lcsStatusIpRouterRipLanSitesEntryRipAcceptDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipLanSitesEntryRipAccept',
  'lcsStatusIpRouterRipLanSitesEntryPropagate' => '1.3.6.1.4.1.2356.11.1.10.19.10.1.4',
  'lcsStatusIpRouterRipLanSitesEntryPropagateDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipLanSitesEntryPropagate',
  'lcsStatusIpRouterRipLanSitesEntryDftRtgTag' => '1.3.6.1.4.1.2356.11.1.10.19.10.1.5',
  'lcsStatusIpRouterRipLanSitesEntryRtgTagList' => '1.3.6.1.4.1.2356.11.1.10.19.10.1.6',
  'lcsStatusIpRouterRipLanSitesEntryVlanId' => '1.3.6.1.4.1.2356.11.1.10.19.10.1.8',
  'lcsStatusIpRouterRipLanSitesEntryPoisonedReverse' => '1.3.6.1.4.1.2356.11.1.10.19.10.1.9',
  'lcsStatusIpRouterRipLanSitesEntryPoisonedReverseDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipLanSitesEntryPoisonedReverse',
  'lcsStatusIpRouterRipLanSitesEntryRxFilter' => '1.3.6.1.4.1.2356.11.1.10.19.10.1.10',
  'lcsStatusIpRouterRipLanSitesEntryTxFilter' => '1.3.6.1.4.1.2356.11.1.10.19.10.1.11',
  'lcsStatusIpRouterRipLanSitesEntryRipSend' => '1.3.6.1.4.1.2356.11.1.10.19.10.1.12',
  'lcsStatusIpRouterRipLanSitesEntryRipSendDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipLanSitesEntryRipSend',
  'lcsStatusIpRouterRipLanSitesEntryPort' => '1.3.6.1.4.1.2356.11.1.10.19.10.1.31',
  'lcsStatusIpRouterRipLanSitesEntryPortDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipLanSitesEntryPort',
  'lcsStatusIpRouterRipWanSitesTable' => '1.3.6.1.4.1.2356.11.1.10.19.11',
  'lcsStatusIpRouterRipWanSitesEntry' => '1.3.6.1.4.1.2356.11.1.10.19.11.1',
  'lcsStatusIpRouterRipWanSitesEntryPeer' => '1.3.6.1.4.1.2356.11.1.10.19.11.1.1',
  'lcsStatusIpRouterRipWanSitesEntryRipType' => '1.3.6.1.4.1.2356.11.1.10.19.11.1.2',
  'lcsStatusIpRouterRipWanSitesEntryRipTypeDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipWanSitesEntryRipType',
  'lcsStatusIpRouterRipWanSitesEntryRipAccept' => '1.3.6.1.4.1.2356.11.1.10.19.11.1.3',
  'lcsStatusIpRouterRipWanSitesEntryRipAcceptDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipWanSitesEntryRipAccept',
  'lcsStatusIpRouterRipWanSitesEntryMasquerade' => '1.3.6.1.4.1.2356.11.1.10.19.11.1.4',
  'lcsStatusIpRouterRipWanSitesEntryMasqueradeDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipWanSitesEntryMasquerade',
  'lcsStatusIpRouterRipWanSitesEntryDftRtgTag' => '1.3.6.1.4.1.2356.11.1.10.19.11.1.5',
  'lcsStatusIpRouterRipWanSitesEntryRtgTagList' => '1.3.6.1.4.1.2356.11.1.10.19.11.1.6',
  'lcsStatusIpRouterRipWanSitesEntryPoisonedReverse' => '1.3.6.1.4.1.2356.11.1.10.19.11.1.7',
  'lcsStatusIpRouterRipWanSitesEntryPoisonedReverseDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipWanSitesEntryPoisonedReverse',
  'lcsStatusIpRouterRipWanSitesEntryRfc2091' => '1.3.6.1.4.1.2356.11.1.10.19.11.1.8',
  'lcsStatusIpRouterRipWanSitesEntryRfc2091Definition' => 'LCOS-MIB::lcsStatusIpRouterRipWanSitesEntryRfc2091',
  'lcsStatusIpRouterRipWanSitesEntryGateway' => '1.3.6.1.4.1.2356.11.1.10.19.11.1.9',
  'lcsStatusIpRouterRipWanSitesEntryRxFilter' => '1.3.6.1.4.1.2356.11.1.10.19.11.1.10',
  'lcsStatusIpRouterRipWanSitesEntryTxFilter' => '1.3.6.1.4.1.2356.11.1.10.19.11.1.11',
  'lcsStatusIpRouterRipWanSitesEntryRipSend' => '1.3.6.1.4.1.2356.11.1.10.19.11.1.12',
  'lcsStatusIpRouterRipWanSitesEntryRipSendDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipWanSitesEntryRipSend',
  'lcsStatusIpRouterRipVrrpSitesTable' => '1.3.6.1.4.1.2356.11.1.10.19.12',
  'lcsStatusIpRouterRipVrrpSitesEntry' => '1.3.6.1.4.1.2356.11.1.10.19.12.1',
  'lcsStatusIpRouterRipVrrpSitesEntryNetworkName' => '1.3.6.1.4.1.2356.11.1.10.19.12.1.1',
  'lcsStatusIpRouterRipVrrpSitesEntryRipType' => '1.3.6.1.4.1.2356.11.1.10.19.12.1.2',
  'lcsStatusIpRouterRipVrrpSitesEntryRipTypeDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipVrrpSitesEntryRipType',
  'lcsStatusIpRouterRipVrrpSitesEntryRouterId' => '1.3.6.1.4.1.2356.11.1.10.19.12.1.3',
  'lcsStatusIpRouterRipDynLanSitesTable' => '1.3.6.1.4.1.2356.11.1.10.19.13',
  'lcsStatusIpRouterRipDynLanSitesEntry' => '1.3.6.1.4.1.2356.11.1.10.19.13.1',
  'lcsStatusIpRouterRipDynLanSitesEntryGateway' => '1.3.6.1.4.1.2356.11.1.10.19.13.1.1',
  'lcsStatusIpRouterRipDynLanSitesEntryRipType' => '1.3.6.1.4.1.2356.11.1.10.19.13.1.2',
  'lcsStatusIpRouterRipDynLanSitesEntryRipTypeDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipDynLanSitesEntryRipType',
  'lcsStatusIpRouterRipDynLanSitesEntryRipAccept' => '1.3.6.1.4.1.2356.11.1.10.19.13.1.3',
  'lcsStatusIpRouterRipDynLanSitesEntryRipAcceptDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipDynLanSitesEntryRipAccept',
  'lcsStatusIpRouterRipDynLanSitesEntryPoisonedReverse' => '1.3.6.1.4.1.2356.11.1.10.19.13.1.4',
  'lcsStatusIpRouterRipDynLanSitesEntryPoisonedReverseDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipDynLanSitesEntryPoisonedReverse',
  'lcsStatusIpRouterRipDynLanSitesEntryDftRtgTag' => '1.3.6.1.4.1.2356.11.1.10.19.13.1.5',
  'lcsStatusIpRouterRipDynLanSitesEntryRtgTagList' => '1.3.6.1.4.1.2356.11.1.10.19.13.1.6',
  'lcsStatusIpRouterRipDynLanSitesEntryVlanId' => '1.3.6.1.4.1.2356.11.1.10.19.13.1.8',
  'lcsStatusIpRouterRipDynLanSitesEntryRxFilter' => '1.3.6.1.4.1.2356.11.1.10.19.13.1.10',
  'lcsStatusIpRouterRipDynLanSitesEntryTxFilter' => '1.3.6.1.4.1.2356.11.1.10.19.13.1.11',
  'lcsStatusIpRouterRipDynLanSitesEntryRipSend' => '1.3.6.1.4.1.2356.11.1.10.19.13.1.12',
  'lcsStatusIpRouterRipDynLanSitesEntryRipSendDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipDynLanSitesEntryRipSend',
  'lcsStatusIpRouterRipDynLanSitesEntryPort' => '1.3.6.1.4.1.2356.11.1.10.19.13.1.31',
  'lcsStatusIpRouterRipDynLanSitesEntryPortDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipDynLanSitesEntryPort',
  'lcsStatusIpRouterRipDynWanSitesTable' => '1.3.6.1.4.1.2356.11.1.10.19.14',
  'lcsStatusIpRouterRipDynWanSitesEntry' => '1.3.6.1.4.1.2356.11.1.10.19.14.1',
  'lcsStatusIpRouterRipDynWanSitesEntryPeer' => '1.3.6.1.4.1.2356.11.1.10.19.14.1.1',
  'lcsStatusIpRouterRipDynWanSitesEntryRipType' => '1.3.6.1.4.1.2356.11.1.10.19.14.1.2',
  'lcsStatusIpRouterRipDynWanSitesEntryRipTypeDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipDynWanSitesEntryRipType',
  'lcsStatusIpRouterRipDynWanSitesEntryRipAccept' => '1.3.6.1.4.1.2356.11.1.10.19.14.1.3',
  'lcsStatusIpRouterRipDynWanSitesEntryRipAcceptDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipDynWanSitesEntryRipAccept',
  'lcsStatusIpRouterRipDynWanSitesEntryMasquerade' => '1.3.6.1.4.1.2356.11.1.10.19.14.1.4',
  'lcsStatusIpRouterRipDynWanSitesEntryMasqueradeDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipDynWanSitesEntryMasquerade',
  'lcsStatusIpRouterRipDynWanSitesEntryDftRtgTag' => '1.3.6.1.4.1.2356.11.1.10.19.14.1.5',
  'lcsStatusIpRouterRipDynWanSitesEntryRtgTagList' => '1.3.6.1.4.1.2356.11.1.10.19.14.1.6',
  'lcsStatusIpRouterRipDynWanSitesEntryPoisonedReverse' => '1.3.6.1.4.1.2356.11.1.10.19.14.1.7',
  'lcsStatusIpRouterRipDynWanSitesEntryPoisonedReverseDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipDynWanSitesEntryPoisonedReverse',
  'lcsStatusIpRouterRipDynWanSitesEntryRfc2091' => '1.3.6.1.4.1.2356.11.1.10.19.14.1.8',
  'lcsStatusIpRouterRipDynWanSitesEntryRfc2091Definition' => 'LCOS-MIB::lcsStatusIpRouterRipDynWanSitesEntryRfc2091',
  'lcsStatusIpRouterRipDynWanSitesEntryGateway' => '1.3.6.1.4.1.2356.11.1.10.19.14.1.9',
  'lcsStatusIpRouterRipDynWanSitesEntryRxFilter' => '1.3.6.1.4.1.2356.11.1.10.19.14.1.10',
  'lcsStatusIpRouterRipDynWanSitesEntryTxFilter' => '1.3.6.1.4.1.2356.11.1.10.19.14.1.11',
  'lcsStatusIpRouterRipDynWanSitesEntryRipSend' => '1.3.6.1.4.1.2356.11.1.10.19.14.1.12',
  'lcsStatusIpRouterRipDynWanSitesEntryRipSendDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipDynWanSitesEntryRipSend',
  'lcsStatusIpRouterRipFilterTable' => '1.3.6.1.4.1.2356.11.1.10.19.15',
  'lcsStatusIpRouterRipFilterEntry' => '1.3.6.1.4.1.2356.11.1.10.19.15.1',
  'lcsStatusIpRouterRipFilterEntryIdx' => '1.3.6.1.4.1.2356.11.1.10.19.15.1.1',
  'lcsStatusIpRouterRipFilterEntryType' => '1.3.6.1.4.1.2356.11.1.10.19.15.1.2',
  'lcsStatusIpRouterRipFilterEntryTypeDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipFilterEntryType',
  'lcsStatusIpRouterRipFilterEntryName' => '1.3.6.1.4.1.2356.11.1.10.19.15.1.3',
  'lcsStatusIpRouterRipFilterEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.10.19.15.1.4',
  'lcsStatusIpRouterRipFilterEntryIpNetmask' => '1.3.6.1.4.1.2356.11.1.10.19.15.1.5',
  'lcsStatusIpRouterRipWildcardSitesTable' => '1.3.6.1.4.1.2356.11.1.10.19.16',
  'lcsStatusIpRouterRipWildcardSitesEntry' => '1.3.6.1.4.1.2356.11.1.10.19.16.1',
  'lcsStatusIpRouterRipWildcardSitesEntryPeer' => '1.3.6.1.4.1.2356.11.1.10.19.16.1.1',
  'lcsStatusIpRouterRipWildcardSitesEntryRipType' => '1.3.6.1.4.1.2356.11.1.10.19.16.1.2',
  'lcsStatusIpRouterRipWildcardSitesEntryRipTypeDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipWildcardSitesEntryRipType',
  'lcsStatusIpRouterRipWildcardSitesEntryRipAccept' => '1.3.6.1.4.1.2356.11.1.10.19.16.1.3',
  'lcsStatusIpRouterRipWildcardSitesEntryRipAcceptDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipWildcardSitesEntryRipAccept',
  'lcsStatusIpRouterRipWildcardSitesEntryMasquerade' => '1.3.6.1.4.1.2356.11.1.10.19.16.1.4',
  'lcsStatusIpRouterRipWildcardSitesEntryMasqueradeDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipWildcardSitesEntryMasquerade',
  'lcsStatusIpRouterRipWildcardSitesEntryDftRtgTag' => '1.3.6.1.4.1.2356.11.1.10.19.16.1.5',
  'lcsStatusIpRouterRipWildcardSitesEntryRtgTagList' => '1.3.6.1.4.1.2356.11.1.10.19.16.1.6',
  'lcsStatusIpRouterRipWildcardSitesEntryPoisonedReverse' => '1.3.6.1.4.1.2356.11.1.10.19.16.1.7',
  'lcsStatusIpRouterRipWildcardSitesEntryPoisonedReverseDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipWildcardSitesEntryPoisonedReverse',
  'lcsStatusIpRouterRipWildcardSitesEntryRfc2091' => '1.3.6.1.4.1.2356.11.1.10.19.16.1.8',
  'lcsStatusIpRouterRipWildcardSitesEntryRfc2091Definition' => 'LCOS-MIB::lcsStatusIpRouterRipWildcardSitesEntryRfc2091',
  'lcsStatusIpRouterRipWildcardSitesEntryGateway' => '1.3.6.1.4.1.2356.11.1.10.19.16.1.9',
  'lcsStatusIpRouterRipWildcardSitesEntryRxFilter' => '1.3.6.1.4.1.2356.11.1.10.19.16.1.10',
  'lcsStatusIpRouterRipWildcardSitesEntryTxFilter' => '1.3.6.1.4.1.2356.11.1.10.19.16.1.11',
  'lcsStatusIpRouterRipWildcardSitesEntryRipSend' => '1.3.6.1.4.1.2356.11.1.10.19.16.1.12',
  'lcsStatusIpRouterRipWildcardSitesEntryRipSendDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipWildcardSitesEntryRipSend',
  'lcsStatusIpRouterRipAllRoutesTable' => '1.3.6.1.4.1.2356.11.1.10.19.20',
  'lcsStatusIpRouterRipAllRoutesEntry' => '1.3.6.1.4.1.2356.11.1.10.19.20.1',
  'lcsStatusIpRouterRipAllRoutesEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.10.19.20.1.1',
  'lcsStatusIpRouterRipAllRoutesEntryIpNetmask' => '1.3.6.1.4.1.2356.11.1.10.19.20.1.2',
  'lcsStatusIpRouterRipAllRoutesEntryTime' => '1.3.6.1.4.1.2356.11.1.10.19.20.1.3',
  'lcsStatusIpRouterRipAllRoutesEntryDistance' => '1.3.6.1.4.1.2356.11.1.10.19.20.1.4',
  'lcsStatusIpRouterRipAllRoutesEntryGateway' => '1.3.6.1.4.1.2356.11.1.10.19.20.1.5',
  'lcsStatusIpRouterRipAllRoutesEntryRtgTag' => '1.3.6.1.4.1.2356.11.1.10.19.20.1.6',
  'lcsStatusIpRouterRipAllRoutesEntryPeer' => '1.3.6.1.4.1.2356.11.1.10.19.20.1.8',
  'lcsStatusIpRouterRipAllRoutesEntryVlanId' => '1.3.6.1.4.1.2356.11.1.10.19.20.1.10',
  'lcsStatusIpRouterRipAllRoutesEntryNetworkName' => '1.3.6.1.4.1.2356.11.1.10.19.20.1.11',
  'lcsStatusIpRouterRipAllRoutesEntryPort' => '1.3.6.1.4.1.2356.11.1.10.19.20.1.12',
  'lcsStatusIpRouterRipAllRoutesEntryPortDefinition' => 'LCOS-MIB::lcsStatusIpRouterRipAllRoutesEntryPort',
  'lcsStatusIpRouterDeleteValues' => '1.3.6.1.4.1.2356.11.1.10.20',
  'lcsStatusIpRouterServiceTableTable' => '1.3.6.1.4.1.2356.11.1.10.21',
  'lcsStatusIpRouterServiceTableEntry' => '1.3.6.1.4.1.2356.11.1.10.21.1',
  'lcsStatusIpRouterServiceTableEntryService' => '1.3.6.1.4.1.2356.11.1.10.21.1.1',
  'lcsStatusIpRouterServiceTableEntryServiceDefinition' => 'LCOS-MIB::lcsStatusIpRouterServiceTableEntryService',
  'lcsStatusIpRouterServiceTableEntryPacketRx' => '1.3.6.1.4.1.2356.11.1.10.21.1.2',
  'lcsStatusIpRouterServiceTableEntryPacketTx' => '1.3.6.1.4.1.2356.11.1.10.21.1.3',
  'lcsStatusIpRouterServiceTableEntryPacketRel' => '1.3.6.1.4.1.2356.11.1.10.21.1.4',
  'lcsStatusIpRouterServiceTableEntryKbytesRx' => '1.3.6.1.4.1.2356.11.1.10.21.1.5',
  'lcsStatusIpRouterServiceTableEntryKbytesTx' => '1.3.6.1.4.1.2356.11.1.10.21.1.6',
  'lcsStatusIpRouterServiceTableEntryKbytesRel' => '1.3.6.1.4.1.2356.11.1.10.21.1.7',
  'lcsStatusIpRouterFilterListTable' => '1.3.6.1.4.1.2356.11.1.10.22',
  'lcsStatusIpRouterFilterListEntry' => '1.3.6.1.4.1.2356.11.1.10.22.1',
  'lcsStatusIpRouterFilterListEntryIdx' => '1.3.6.1.4.1.2356.11.1.10.22.1.1',
  'lcsStatusIpRouterFilterListEntryProt' => '1.3.6.1.4.1.2356.11.1.10.22.1.2',
  'lcsStatusIpRouterFilterListEntrySrcAddress' => '1.3.6.1.4.1.2356.11.1.10.22.1.3',
  'lcsStatusIpRouterFilterListEntrySrcNetmask' => '1.3.6.1.4.1.2356.11.1.10.22.1.4',
  'lcsStatusIpRouterFilterListEntrySSt' => '1.3.6.1.4.1.2356.11.1.10.22.1.5',
  'lcsStatusIpRouterFilterListEntrySEnd' => '1.3.6.1.4.1.2356.11.1.10.22.1.6',
  'lcsStatusIpRouterFilterListEntryDstAddress' => '1.3.6.1.4.1.2356.11.1.10.22.1.7',
  'lcsStatusIpRouterFilterListEntryDstNetmask' => '1.3.6.1.4.1.2356.11.1.10.22.1.8',
  'lcsStatusIpRouterFilterListEntryDSt' => '1.3.6.1.4.1.2356.11.1.10.22.1.9',
  'lcsStatusIpRouterFilterListEntryDEnd' => '1.3.6.1.4.1.2356.11.1.10.22.1.10',
  'lcsStatusIpRouterFilterListEntryAction' => '1.3.6.1.4.1.2356.11.1.10.22.1.11',
  'lcsStatusIpRouterFilterListEntrySrcMac' => '1.3.6.1.4.1.2356.11.1.10.22.1.13',
  'lcsStatusIpRouterFilterListEntryDstMac' => '1.3.6.1.4.1.2356.11.1.10.22.1.14',
  'lcsStatusIpRouterFilterListEntryLinked' => '1.3.6.1.4.1.2356.11.1.10.22.1.15',
  'lcsStatusIpRouterFilterListEntryLinkedDefinition' => 'LCOS-MIB::lcsStatusIpRouterFilterListEntryLinked',
  'lcsStatusIpRouterFilterListEntryPrio' => '1.3.6.1.4.1.2356.11.1.10.22.1.16',
  'lcsStatusIpRouterFilterListEntryRtgTag' => '1.3.6.1.4.1.2356.11.1.10.22.1.17',
  'lcsStatusIpRouterConnectionListTable' => '1.3.6.1.4.1.2356.11.1.10.23',
  'lcsStatusIpRouterConnectionListEntry' => '1.3.6.1.4.1.2356.11.1.10.23.1',
  'lcsStatusIpRouterConnectionListEntrySrcAddress' => '1.3.6.1.4.1.2356.11.1.10.23.1.1',
  'lcsStatusIpRouterConnectionListEntryDstAddress' => '1.3.6.1.4.1.2356.11.1.10.23.1.2',
  'lcsStatusIpRouterConnectionListEntryProt' => '1.3.6.1.4.1.2356.11.1.10.23.1.3',
  'lcsStatusIpRouterConnectionListEntrySrcPort' => '1.3.6.1.4.1.2356.11.1.10.23.1.4',
  'lcsStatusIpRouterConnectionListEntryDstPort' => '1.3.6.1.4.1.2356.11.1.10.23.1.5',
  'lcsStatusIpRouterConnectionListEntryTimeout' => '1.3.6.1.4.1.2356.11.1.10.23.1.6',
  'lcsStatusIpRouterConnectionListEntryFlags' => '1.3.6.1.4.1.2356.11.1.10.23.1.7',
  'lcsStatusIpRouterConnectionListEntryFilterRule' => '1.3.6.1.4.1.2356.11.1.10.23.1.8',
  'lcsStatusIpRouterConnectionListEntrySrcRoute' => '1.3.6.1.4.1.2356.11.1.10.23.1.9',
  'lcsStatusIpRouterConnectionListEntryDestRoute' => '1.3.6.1.4.1.2356.11.1.10.23.1.10',
  'lcsStatusIpRouterConnectionListEntryRtgTag' => '1.3.6.1.4.1.2356.11.1.10.23.1.11',
  'lcsStatusIpRouterHostBlockListTable' => '1.3.6.1.4.1.2356.11.1.10.24',
  'lcsStatusIpRouterHostBlockListEntry' => '1.3.6.1.4.1.2356.11.1.10.24.1',
  'lcsStatusIpRouterHostBlockListEntrySrcAddress' => '1.3.6.1.4.1.2356.11.1.10.24.1.1',
  'lcsStatusIpRouterHostBlockListEntryTimeout' => '1.3.6.1.4.1.2356.11.1.10.24.1.2',
  'lcsStatusIpRouterHostBlockListEntryFilterRule' => '1.3.6.1.4.1.2356.11.1.10.24.1.3',
  'lcsStatusIpRouterPortBlockListTable' => '1.3.6.1.4.1.2356.11.1.10.25',
  'lcsStatusIpRouterPortBlockListEntry' => '1.3.6.1.4.1.2356.11.1.10.25.1',
  'lcsStatusIpRouterPortBlockListEntryDstAddress' => '1.3.6.1.4.1.2356.11.1.10.25.1.1',
  'lcsStatusIpRouterPortBlockListEntryProt' => '1.3.6.1.4.1.2356.11.1.10.25.1.2',
  'lcsStatusIpRouterPortBlockListEntryDstPort' => '1.3.6.1.4.1.2356.11.1.10.25.1.3',
  'lcsStatusIpRouterPortBlockListEntryTimeout' => '1.3.6.1.4.1.2356.11.1.10.25.1.4',
  'lcsStatusIpRouterPortBlockListEntryFilterRule' => '1.3.6.1.4.1.2356.11.1.10.25.1.5',
  'lcsStatusIpRouterLogTableTable' => '1.3.6.1.4.1.2356.11.1.10.26',
  'lcsStatusIpRouterLogTableEntry' => '1.3.6.1.4.1.2356.11.1.10.26.1',
  'lcsStatusIpRouterLogTableEntryIdx' => '1.3.6.1.4.1.2356.11.1.10.26.1.1',
  'lcsStatusIpRouterLogTableEntrySystemTime' => '1.3.6.1.4.1.2356.11.1.10.26.1.2',
  'lcsStatusIpRouterLogTableEntrySrcAddress' => '1.3.6.1.4.1.2356.11.1.10.26.1.3',
  'lcsStatusIpRouterLogTableEntryDstAddress' => '1.3.6.1.4.1.2356.11.1.10.26.1.4',
  'lcsStatusIpRouterLogTableEntryProt' => '1.3.6.1.4.1.2356.11.1.10.26.1.5',
  'lcsStatusIpRouterLogTableEntrySrcPort' => '1.3.6.1.4.1.2356.11.1.10.26.1.6',
  'lcsStatusIpRouterLogTableEntryDstPort' => '1.3.6.1.4.1.2356.11.1.10.26.1.7',
  'lcsStatusIpRouterLogTableEntryFilterRule' => '1.3.6.1.4.1.2356.11.1.10.26.1.8',
  'lcsStatusIpRouterLogTableEntryLimit' => '1.3.6.1.4.1.2356.11.1.10.26.1.9',
  'lcsStatusIpRouterLogTableEntryThreshold' => '1.3.6.1.4.1.2356.11.1.10.26.1.10',
  'lcsStatusIpRouterLogTableEntryAction' => '1.3.6.1.4.1.2356.11.1.10.26.1.11',
  'lcsStatusIpRouterHoConnListTable' => '1.3.6.1.4.1.2356.11.1.10.27',
  'lcsStatusIpRouterHoConnListEntry' => '1.3.6.1.4.1.2356.11.1.10.27.1',
  'lcsStatusIpRouterHoConnListEntryDstAddress' => '1.3.6.1.4.1.2356.11.1.10.27.1.1',
  'lcsStatusIpRouterHoConnListEntryNumHoConn' => '1.3.6.1.4.1.2356.11.1.10.27.1.2',
  'lcsStatusIpRouterHoConnListEntryTimeout' => '1.3.6.1.4.1.2356.11.1.10.27.1.3',
  'lcsStatusIpRouterQosTable' => '1.3.6.1.4.1.2356.11.1.10.28',
  'lcsStatusIpRouterQosEntry' => '1.3.6.1.4.1.2356.11.1.10.28.1',
  'lcsStatusIpRouterQosEntryIfc' => '1.3.6.1.4.1.2356.11.1.10.28.1.1',
  'lcsStatusIpRouterQosEntryIfcDefinition' => 'LCOS-MIB::lcsStatusIpRouterQosEntryIfc',
  'lcsStatusIpRouterQosEntryPeer' => '1.3.6.1.4.1.2356.11.1.10.28.1.2',
  'lcsStatusIpRouterQosEntryDownstreamRate' => '1.3.6.1.4.1.2356.11.1.10.28.1.3',
  'lcsStatusIpRouterQosEntryRxReserved' => '1.3.6.1.4.1.2356.11.1.10.28.1.4',
  'lcsStatusIpRouterQosEntryRxBlocksPending' => '1.3.6.1.4.1.2356.11.1.10.28.1.5',
  'lcsStatusIpRouterQosEntryFragmentSize' => '1.3.6.1.4.1.2356.11.1.10.28.1.6',
  'lcsStatusIpRouterQosEntryPmtuSize' => '1.3.6.1.4.1.2356.11.1.10.28.1.7',
  'lcsStatusIpRouterQosEntryUpstreamRate' => '1.3.6.1.4.1.2356.11.1.10.28.1.8',
  'lcsStatusIpRouterQosEntryTxReserved' => '1.3.6.1.4.1.2356.11.1.10.28.1.9',
  'lcsStatusIpRouterQosEntryTxBlocksPending' => '1.3.6.1.4.1.2356.11.1.10.28.1.10',
  'lcsStatusIpRouterQosEntryRxRequested' => '1.3.6.1.4.1.2356.11.1.10.28.1.11',
  'lcsStatusIpRouterQosEntryTxRequested' => '1.3.6.1.4.1.2356.11.1.10.28.1.12',
  'lcsStatusIpRouterQosEntryTxFavoured' => '1.3.6.1.4.1.2356.11.1.10.28.1.13',
  'lcsStatusIpRouterOpenPortListTable' => '1.3.6.1.4.1.2356.11.1.10.29',
  'lcsStatusIpRouterOpenPortListEntry' => '1.3.6.1.4.1.2356.11.1.10.29.1',
  'lcsStatusIpRouterOpenPortListEntrySrcAddress' => '1.3.6.1.4.1.2356.11.1.10.29.1.1',
  'lcsStatusIpRouterOpenPortListEntryDstAddress' => '1.3.6.1.4.1.2356.11.1.10.29.1.2',
  'lcsStatusIpRouterOpenPortListEntryProt' => '1.3.6.1.4.1.2356.11.1.10.29.1.3',
  'lcsStatusIpRouterOpenPortListEntryDstPort' => '1.3.6.1.4.1.2356.11.1.10.29.1.5',
  'lcsStatusIpRouterOpenPortListEntryTimeout' => '1.3.6.1.4.1.2356.11.1.10.29.1.6',
  'lcsStatusIpRouterOpenPortListEntryFilterRule' => '1.3.6.1.4.1.2356.11.1.10.29.1.8',
  'lcsStatusIpRouterOpenPortListEntrySrcRoute' => '1.3.6.1.4.1.2356.11.1.10.29.1.9',
  'lcsStatusIpRouterActIpRoutingTabTable' => '1.3.6.1.4.1.2356.11.1.10.30',
  'lcsStatusIpRouterActIpRoutingTabEntry' => '1.3.6.1.4.1.2356.11.1.10.30.1',
  'lcsStatusIpRouterActIpRoutingTabEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.10.30.1.1',
  'lcsStatusIpRouterActIpRoutingTabEntryIpNetmask' => '1.3.6.1.4.1.2356.11.1.10.30.1.2',
  'lcsStatusIpRouterActIpRoutingTabEntryRtgTag' => '1.3.6.1.4.1.2356.11.1.10.30.1.3',
  'lcsStatusIpRouterActIpRoutingTabEntryGateway' => '1.3.6.1.4.1.2356.11.1.10.30.1.4',
  'lcsStatusIpRouterActIpRoutingTabEntryPeer' => '1.3.6.1.4.1.2356.11.1.10.30.1.5',
  'lcsStatusIpRouterActIpRoutingTabEntryDistance' => '1.3.6.1.4.1.2356.11.1.10.30.1.6',
  'lcsStatusIpRouterActIpRoutingTabEntryMasquerade' => '1.3.6.1.4.1.2356.11.1.10.30.1.7',
  'lcsStatusIpRouterActIpRoutingTabEntryMasqueradeDefinition' => 'LCOS-MIB::lcsStatusIpRouterActIpRoutingTabEntryMasquerade',
  'lcsStatusIpRouterActIpRoutingTabEntryType' => '1.3.6.1.4.1.2356.11.1.10.30.1.8',
  'lcsStatusIpRouterActIpRoutingTabEntryTypeDefinition' => 'LCOS-MIB::lcsStatusIpRouterActIpRoutingTabEntryType',
  'lcsStatusIpRouterL4Errors' => '1.3.6.1.4.1.2356.11.1.10.31',
  'lcsStatusIpRouterLoadBalancer' => '1.3.6.1.4.1.2356.11.1.10.32',
  'lcsStatusIpRouterLoadBalancerOperating' => '1.3.6.1.4.1.2356.11.1.10.32.1',
  'lcsStatusIpRouterLoadBalancerOperatingDefinition' => 'LCOS-MIB::lcsStatusIpRouterLoadBalancerOperating',
  'lcsStatusIpRouterLoadBalancerConnectionsTable' => '1.3.6.1.4.1.2356.11.1.10.32.2',
  'lcsStatusIpRouterLoadBalancerConnectionsEntry' => '1.3.6.1.4.1.2356.11.1.10.32.2.1',
  'lcsStatusIpRouterLoadBalancerConnectionsEntryPeer' => '1.3.6.1.4.1.2356.11.1.10.32.2.1.1',
  'lcsStatusIpRouterLoadBalancerConnectionsEntryBundlePeer' => '1.3.6.1.4.1.2356.11.1.10.32.2.1.2',
  'lcsStatusIpRouterLoadBalancerConnectionsEntryState' => '1.3.6.1.4.1.2356.11.1.10.32.2.1.3',
  'lcsStatusIpRouterLoadBalancerConnectionsEntryStateDefinition' => 'LCOS-MIB::lcsStatusIpRouterLoadBalancerConnectionsEntryState',
  'lcsStatusIpRouterLoadBalancerConnectionsEntryTcpIpSessions' => '1.3.6.1.4.1.2356.11.1.10.32.2.1.4',
  'lcsStatusIpRouterLoadBalancerConnectionsEntryPptpSessions' => '1.3.6.1.4.1.2356.11.1.10.32.2.1.5',
  'lcsStatusIpRouterLoadBalancerConnectionsEntryVpnSessions' => '1.3.6.1.4.1.2356.11.1.10.32.2.1.6',
  'lcsStatusIpRouterVrrp' => '1.3.6.1.4.1.2356.11.1.10.33',
  'lcsStatusIpRouterVrrpRx' => '1.3.6.1.4.1.2356.11.1.10.33.1',
  'lcsStatusIpRouterVrrpTx' => '1.3.6.1.4.1.2356.11.1.10.33.2',
  'lcsStatusIpRouterVrrpError' => '1.3.6.1.4.1.2356.11.1.10.33.3',
  'lcsStatusIpRouterVrrpDrop' => '1.3.6.1.4.1.2356.11.1.10.33.4',
  'lcsStatusIpRouterVrrpOperating' => '1.3.6.1.4.1.2356.11.1.10.33.5',
  'lcsStatusIpRouterVrrpOperatingDefinition' => 'LCOS-MIB::lcsStatusIpRouterVrrpOperating',
  'lcsStatusIpRouterVrrpInternalServices' => '1.3.6.1.4.1.2356.11.1.10.33.6',
  'lcsStatusIpRouterVrrpInternalServicesDefinition' => 'LCOS-MIB::lcsStatusIpRouterVrrpInternalServices',
  'lcsStatusIpRouterVrrpQueueErrors' => '1.3.6.1.4.1.2356.11.1.10.33.7',
  'lcsStatusIpRouterVrrpVirtualRouterTable' => '1.3.6.1.4.1.2356.11.1.10.33.10',
  'lcsStatusIpRouterVrrpVirtualRouterEntry' => '1.3.6.1.4.1.2356.11.1.10.33.10.1',
  'lcsStatusIpRouterVrrpVirtualRouterEntryRouterId' => '1.3.6.1.4.1.2356.11.1.10.33.10.1.1',
  'lcsStatusIpRouterVrrpVirtualRouterEntryVirtAddress' => '1.3.6.1.4.1.2356.11.1.10.33.10.1.2',
  'lcsStatusIpRouterVrrpVirtualRouterEntryPrio' => '1.3.6.1.4.1.2356.11.1.10.33.10.1.3',
  'lcsStatusIpRouterVrrpVirtualRouterEntryBPrio' => '1.3.6.1.4.1.2356.11.1.10.33.10.1.4',
  'lcsStatusIpRouterVrrpVirtualRouterEntryPeer' => '1.3.6.1.4.1.2356.11.1.10.33.10.1.5',
  'lcsStatusIpRouterVrrpVirtualRouterEntryState' => '1.3.6.1.4.1.2356.11.1.10.33.10.1.6',
  'lcsStatusIpRouterVrrpVirtualRouterEntryStateDefinition' => 'LCOS-MIB::lcsStatusIpRouterVrrpVirtualRouterEntryState',
  'lcsStatusIpRouterVrrpVirtualRouterEntryBackup' => '1.3.6.1.4.1.2356.11.1.10.33.10.1.7',
  'lcsStatusIpRouterVrrpVirtualRouterEntryBackupDefinition' => 'LCOS-MIB::lcsStatusIpRouterVrrpVirtualRouterEntryBackup',
  'lcsStatusIpRouterVrrpVirtualRouterEntryMaster' => '1.3.6.1.4.1.2356.11.1.10.33.10.1.8',
  'lcsStatusIpRouterVrrpVirtualRouterEntryVlanId' => '1.3.6.1.4.1.2356.11.1.10.33.10.1.10',
  'lcsStatusIpRouterVrrpVirtualRouterEntryNetworkName' => '1.3.6.1.4.1.2356.11.1.10.33.10.1.11',
  'lcsStatusIpRouterVrrpVirtualRouterEntryPort' => '1.3.6.1.4.1.2356.11.1.10.33.10.1.12',
  'lcsStatusIpRouterVrrpVirtualRouterEntryPortDefinition' => 'LCOS-MIB::lcsStatusIpRouterVrrpVirtualRouterEntryPort',
  'lcsStatusIpRouterVrrpMacListTable' => '1.3.6.1.4.1.2356.11.1.10.33.11',
  'lcsStatusIpRouterVrrpMacListEntry' => '1.3.6.1.4.1.2356.11.1.10.33.11.1',
  'lcsStatusIpRouterVrrpMacListEntryVirtAddress' => '1.3.6.1.4.1.2356.11.1.10.33.11.1.1',
  'lcsStatusIpRouterVrrpMacListEntryMacAddress' => '1.3.6.1.4.1.2356.11.1.10.33.11.1.2',
  'lcsStatusIpRouterVrrpMacListEntryRouterId' => '1.3.6.1.4.1.2356.11.1.10.33.11.1.3',
  'lcsStatusIpRouterVrrpEventLogTable' => '1.3.6.1.4.1.2356.11.1.10.33.12',
  'lcsStatusIpRouterVrrpEventLogEntry' => '1.3.6.1.4.1.2356.11.1.10.33.12.1',
  'lcsStatusIpRouterVrrpEventLogEntryIdx' => '1.3.6.1.4.1.2356.11.1.10.33.12.1.1',
  'lcsStatusIpRouterVrrpEventLogEntrySystemTime' => '1.3.6.1.4.1.2356.11.1.10.33.12.1.2',
  'lcsStatusIpRouterVrrpEventLogEntrySrcAddress' => '1.3.6.1.4.1.2356.11.1.10.33.12.1.3',
  'lcsStatusIpRouterVrrpEventLogEntryVrid' => '1.3.6.1.4.1.2356.11.1.10.33.12.1.4',
  'lcsStatusIpRouterVrrpEventLogEntryEvent' => '1.3.6.1.4.1.2356.11.1.10.33.12.1.5',
  'lcsStatusIpRouterVrrpEventLogEntryEventDefinition' => 'LCOS-MIB::lcsStatusIpRouterVrrpEventLogEntryEvent',
  'lcsStatusIpRouterVrrpEventLogEntryInfo' => '1.3.6.1.4.1.2356.11.1.10.33.12.1.6',
  'lcsStatusIpRouterVrrpDeleteValues' => '1.3.6.1.4.1.2356.11.1.10.33.20',
  'lcsStatusIpRouterRules' => '1.3.6.1.4.1.2356.11.1.10.34',
  'lcsStatusIpRouterFilter' => '1.3.6.1.4.1.2356.11.1.10.35',
  'lcsStatusConfig' => '1.3.6.1.4.1.2356.11.1.11',
  'lcsStatusConfigLanActiveConnections' => '1.3.6.1.4.1.2356.11.1.11.1',
  'lcsStatusConfigLanTotalConnections' => '1.3.6.1.4.1.2356.11.1.11.2',
  'lcsStatusConfigWanActiveConnections' => '1.3.6.1.4.1.2356.11.1.11.3',
  'lcsStatusConfigWanTotalConnections' => '1.3.6.1.4.1.2356.11.1.11.4',
  'lcsStatusConfigOutbandActiveConnections' => '1.3.6.1.4.1.2356.11.1.11.5',
  'lcsStatusConfigOutbandTotalConnections' => '1.3.6.1.4.1.2356.11.1.11.6',
  'lcsStatusConfigOutbandBitrate' => '1.3.6.1.4.1.2356.11.1.11.7',
  'lcsStatusConfigLoginErrors' => '1.3.6.1.4.1.2356.11.1.11.8',
  'lcsStatusConfigLoginLocks' => '1.3.6.1.4.1.2356.11.1.11.9',
  'lcsStatusConfigLoginRejects' => '1.3.6.1.4.1.2356.11.1.11.10',
  'lcsStatusConfigDeleteValues' => '1.3.6.1.4.1.2356.11.1.11.11',
  'lcsStatusConfigEventLogTable' => '1.3.6.1.4.1.2356.11.1.11.12',
  'lcsStatusConfigEventLogEntry' => '1.3.6.1.4.1.2356.11.1.11.12.1',
  'lcsStatusConfigEventLogEntryIdx' => '1.3.6.1.4.1.2356.11.1.11.12.1.1',
  'lcsStatusConfigEventLogEntryEvent' => '1.3.6.1.4.1.2356.11.1.11.12.1.2',
  'lcsStatusConfigEventLogEntryEventDefinition' => 'LCOS-MIB::lcsStatusConfigEventLogEntryEvent',
  'lcsStatusConfigEventLogEntryAccess' => '1.3.6.1.4.1.2356.11.1.11.12.1.3',
  'lcsStatusConfigEventLogEntryAccessDefinition' => 'LCOS-MIB::lcsStatusConfigEventLogEntryAccess',
  'lcsStatusConfigEventLogEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.11.12.1.4',
  'lcsStatusConfigEventLogEntryInfo1' => '1.3.6.1.4.1.2356.11.1.11.12.1.5',
  'lcsStatusConfigEventLogEntryInfo2' => '1.3.6.1.4.1.2356.11.1.11.12.1.6',
  'lcsStatusConfigEventLogEntrySystemTime' => '1.3.6.1.4.1.2356.11.1.11.12.1.7',
  'lcsStatusConfigStartScan' => '1.3.6.1.4.1.2356.11.1.11.13',
  'lcsStatusConfigScanResultsTable' => '1.3.6.1.4.1.2356.11.1.11.14',
  'lcsStatusConfigScanResultsEntry' => '1.3.6.1.4.1.2356.11.1.11.14.1',
  'lcsStatusConfigScanResultsEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.11.14.1.1',
  'lcsStatusConfigScanResultsEntryName' => '1.3.6.1.4.1.2356.11.1.11.14.1.2',
  'lcsStatusConfigScanResultsEntryDeviceType' => '1.3.6.1.4.1.2356.11.1.11.14.1.3',
  'lcsStatusConfigScanResultsEntryVersion' => '1.3.6.1.4.1.2356.11.1.11.14.1.4',
  'lcsStatusConfigScanResultsEntryState' => '1.3.6.1.4.1.2356.11.1.11.14.1.5',
  'lcsStatusConfigScanResultsEntryStateDefinition' => 'LCOS-MIB::lcsStatusConfigScanResultsEntryState',
  'lcsStatusConfigScanResultsEntryCapiPort' => '1.3.6.1.4.1.2356.11.1.11.14.1.6',
  'lcsStatusConfigScanResultsEntryHttpPort' => '1.3.6.1.4.1.2356.11.1.11.14.1.7',
  'lcsStatusConfigScanResultsEntryHttpsPort' => '1.3.6.1.4.1.2356.11.1.11.14.1.8',
  'lcsStatusConfigScanResultsEntryRtgTag' => '1.3.6.1.4.1.2356.11.1.11.14.1.9',
  'lcsStatusConfigAntiTheftProtection' => '1.3.6.1.4.1.2356.11.1.11.15',
  'lcsStatusConfigAntiTheftProtectionState' => '1.3.6.1.4.1.2356.11.1.11.15.1',
  'lcsStatusConfigAntiTheftProtectionStateDefinition' => 'LCOS-MIB::lcsStatusConfigAntiTheftProtectionState',
  'lcsStatusConfigAntiTheftProtectionSendingCallTo' => '1.3.6.1.4.1.2356.11.1.11.15.2',
  'lcsStatusConfigAntiTheftProtectionWaitingForCallFrom' => '1.3.6.1.4.1.2356.11.1.11.15.3',
  'lcsStatusConfigAntiTheftProtectionLastSeenCallFrom' => '1.3.6.1.4.1.2356.11.1.11.15.4',
  'lcsStatusConfigAntiTheftProtectionCallAccepted' => '1.3.6.1.4.1.2356.11.1.11.15.5',
  'lcsStatusConfigAntiTheftProtectionCallAcceptedDefinition' => 'LCOS-MIB::lcsStatusConfigAntiTheftProtectionCallAccepted',
  'lcsStatusConfigAntiTheftProtectionLastError' => '1.3.6.1.4.1.2356.11.1.11.15.6',
  'lcsStatusConfigAntiTheftProtectionLastErrorDefinition' => 'LCOS-MIB::lcsStatusConfigAntiTheftProtectionLastError',
  'lcsStatusConfigAntiTheftProtectionIncomingCall' => '1.3.6.1.4.1.2356.11.1.11.15.7',
  'lcsStatusConfigAntiTheftProtectionIncomingCallDefinition' => 'LCOS-MIB::lcsStatusConfigAntiTheftProtectionIncomingCall',
  'lcsStatusConfigAntiTheftProtectionMethod' => '1.3.6.1.4.1.2356.11.1.11.15.8',
  'lcsStatusConfigAntiTheftProtectionMethodDefinition' => 'LCOS-MIB::lcsStatusConfigAntiTheftProtectionMethod',
  'lcsStatusConfigAntiTheftProtectionPositionValid' => '1.3.6.1.4.1.2356.11.1.11.15.9',
  'lcsStatusConfigAntiTheftProtectionPositionValidDefinition' => 'LCOS-MIB::lcsStatusConfigAntiTheftProtectionPositionValid',
  'lcsStatusConfigAntiTheftProtectionExpectedLongitudeDeg' => '1.3.6.1.4.1.2356.11.1.11.15.10',
  'lcsStatusConfigAntiTheftProtectionCurrentLongitudeDeg' => '1.3.6.1.4.1.2356.11.1.11.15.11',
  'lcsStatusConfigAntiTheftProtectionExpectedLatitudeDeg' => '1.3.6.1.4.1.2356.11.1.11.15.12',
  'lcsStatusConfigAntiTheftProtectionCurrentLatitudeDeg' => '1.3.6.1.4.1.2356.11.1.11.15.13',
  'lcsStatusConfigAntiTheftProtectionDeltaLongitudeM' => '1.3.6.1.4.1.2356.11.1.11.15.14',
  'lcsStatusConfigAntiTheftProtectionDeltaLatitudeM' => '1.3.6.1.4.1.2356.11.1.11.15.15',
  'lcsStatusConfigFeaturesTable' => '1.3.6.1.4.1.2356.11.1.11.16',
  'lcsStatusConfigFeaturesEntry' => '1.3.6.1.4.1.2356.11.1.11.16.1',
  'lcsStatusConfigFeaturesEntryFeature' => '1.3.6.1.4.1.2356.11.1.11.16.1.1',
  'lcsStatusConfigFeaturesEntryFeatureDefinition' => 'LCOS-MIB::lcsStatusConfigFeaturesEntryFeature',
  'lcsStatusConfigFeaturesEntryExpires' => '1.3.6.1.4.1.2356.11.1.11.16.1.2',
  'lcsStatusConfigFeaturesEntryExpire' => '1.3.6.1.4.1.2356.11.1.11.16.1.3',
  'lcsStatusConfigFeaturesEntryState' => '1.3.6.1.4.1.2356.11.1.11.16.1.4',
  'lcsStatusConfigFeaturesEntryStateDefinition' => 'LCOS-MIB::lcsStatusConfigFeaturesEntryState',
  'lcsStatusConfigFeaturesEntryIndex' => '1.3.6.1.4.1.2356.11.1.11.16.1.5',
  'lcsStatusConfigFeaturesEntryCount' => '1.3.6.1.4.1.2356.11.1.11.16.1.6',
  'lcsStatusConfigLl2m' => '1.3.6.1.4.1.2356.11.1.11.65',
  'lcsStatusConfigLl2mRxPackets' => '1.3.6.1.4.1.2356.11.1.11.65.1',
  'lcsStatusConfigLl2mRxBroadcastPackets' => '1.3.6.1.4.1.2356.11.1.11.65.2',
  'lcsStatusConfigLl2mRxMulticastPackets' => '1.3.6.1.4.1.2356.11.1.11.65.3',
  'lcsStatusConfigLl2mRxUnicastPackets' => '1.3.6.1.4.1.2356.11.1.11.65.4',
  'lcsStatusConfigLl2mRxDiscard' => '1.3.6.1.4.1.2356.11.1.11.65.5',
  'lcsStatusConfigLl2mRxMalformed' => '1.3.6.1.4.1.2356.11.1.11.65.6',
  'lcsStatusConfigLl2mServer' => '1.3.6.1.4.1.2356.11.1.11.65.20',
  'lcsStatusConfigLl2mServerRxPackets' => '1.3.6.1.4.1.2356.11.1.11.65.20.1',
  'lcsStatusConfigLl2mServerRxBroadcastPackets' => '1.3.6.1.4.1.2356.11.1.11.65.20.2',
  'lcsStatusConfigLl2mServerRxMulticastPackets' => '1.3.6.1.4.1.2356.11.1.11.65.20.3',
  'lcsStatusConfigLl2mServerRxUnicastPackets' => '1.3.6.1.4.1.2356.11.1.11.65.20.4',
  'lcsStatusConfigLl2mServerRxDiscard' => '1.3.6.1.4.1.2356.11.1.11.65.20.5',
  'lcsStatusConfigLl2mServerDeleteValues' => '1.3.6.1.4.1.2356.11.1.11.65.20.99',
  'lcsStatusConfigLl2mClient' => '1.3.6.1.4.1.2356.11.1.11.65.30',
  'lcsStatusConfigLl2mClientRxPackets' => '1.3.6.1.4.1.2356.11.1.11.65.30.1',
  'lcsStatusConfigLl2mClientRxBroadcastPackets' => '1.3.6.1.4.1.2356.11.1.11.65.30.2',
  'lcsStatusConfigLl2mClientRxMulticastPackets' => '1.3.6.1.4.1.2356.11.1.11.65.30.3',
  'lcsStatusConfigLl2mClientRxUnicastPackets' => '1.3.6.1.4.1.2356.11.1.11.65.30.4',
  'lcsStatusConfigLl2mClientRxDiscard' => '1.3.6.1.4.1.2356.11.1.11.65.30.5',
  'lcsStatusConfigLl2mClientDeleteValues' => '1.3.6.1.4.1.2356.11.1.11.65.30.99',
  'lcsStatusConfigLl2mDeleteValues' => '1.3.6.1.4.1.2356.11.1.11.65.99',
  'lcsStatusConfigDownloadStatus' => '1.3.6.1.4.1.2356.11.1.11.70',
  'lcsStatusConfigDownloadStatusFirmwareSuccesses' => '1.3.6.1.4.1.2356.11.1.11.70.1',
  'lcsStatusConfigDownloadStatusFirmwareFailures' => '1.3.6.1.4.1.2356.11.1.11.70.2',
  'lcsStatusConfigDownloadStatusConfigurationSuccesses' => '1.3.6.1.4.1.2356.11.1.11.70.3',
  'lcsStatusConfigDownloadStatusConfigurationFailures' => '1.3.6.1.4.1.2356.11.1.11.70.4',
  'lcsStatusConfigDownloadStatusScriptSuccesses' => '1.3.6.1.4.1.2356.11.1.11.70.5',
  'lcsStatusConfigDownloadStatusScriptFailures' => '1.3.6.1.4.1.2356.11.1.11.70.6',
  'lcsStatusConfigDownloadStatusFileSuccesses' => '1.3.6.1.4.1.2356.11.1.11.70.7',
  'lcsStatusConfigDownloadStatusFileFailures' => '1.3.6.1.4.1.2356.11.1.11.70.8',
  'lcsStatusConfigDownloadStatusLastOperationsTable' => '1.3.6.1.4.1.2356.11.1.11.70.20',
  'lcsStatusConfigDownloadStatusLastOperationsEntry' => '1.3.6.1.4.1.2356.11.1.11.70.20.1',
  'lcsStatusConfigDownloadStatusLastOperationsEntryIndex' => '1.3.6.1.4.1.2356.11.1.11.70.20.1.1',
  'lcsStatusConfigDownloadStatusLastOperationsEntryIdentifier' => '1.3.6.1.4.1.2356.11.1.11.70.20.1.2',
  'lcsStatusConfigDownloadStatusLastOperationsEntryType' => '1.3.6.1.4.1.2356.11.1.11.70.20.1.3',
  'lcsStatusConfigDownloadStatusLastOperationsEntryTypeDefinition' => 'LCOS-MIB::lcsStatusConfigDownloadStatusLastOperationsEntryType',
  'lcsStatusConfigDownloadStatusLastOperationsEntryUrl' => '1.3.6.1.4.1.2356.11.1.11.70.20.1.4',
  'lcsStatusConfigDownloadStatusLastOperationsEntryStatus' => '1.3.6.1.4.1.2356.11.1.11.70.20.1.5',
  'lcsStatusConfigDownloadStatusLastOperationsEntryStatusDefinition' => 'LCOS-MIB::lcsStatusConfigDownloadStatusLastOperationsEntryStatus',
  'lcsStatusConfigDownloadStatusLastOperationsEntryFailureReason' => '1.3.6.1.4.1.2356.11.1.11.70.20.1.6',
  'lcsStatusConfigDownloadStatusDeleteValues' => '1.3.6.1.4.1.2356.11.1.11.70.99',
  'lcsStatusQueue' => '1.3.6.1.4.1.2356.11.1.12',
  'lcsStatusQueueLanHeapPackets' => '1.3.6.1.4.1.2356.11.1.12.1',
  'lcsStatusQueueQueuePackets' => '1.3.6.1.4.1.2356.11.1.12.2',
  'lcsStatusQueueWanHeapPackets' => '1.3.6.1.4.1.2356.11.1.12.3',
  'lcsStatusQueueWanQueuePackets' => '1.3.6.1.4.1.2356.11.1.12.4',
  'lcsStatusQueueArpQueryQueuePackets' => '1.3.6.1.4.1.2356.11.1.12.7',
  'lcsStatusQueueArpQueuePackets' => '1.3.6.1.4.1.2356.11.1.12.8',
  'lcsStatusQueueIpQueuePackets' => '1.3.6.1.4.1.2356.11.1.12.9',
  'lcsStatusQueueIpUrgentQueuePackets' => '1.3.6.1.4.1.2356.11.1.12.10',
  'lcsStatusQueueIcmpQueuePackets' => '1.3.6.1.4.1.2356.11.1.12.11',
  'lcsStatusQueueTcpQueuePackets' => '1.3.6.1.4.1.2356.11.1.12.12',
  'lcsStatusQueueTftpServerQueuePackets' => '1.3.6.1.4.1.2356.11.1.12.13',
  'lcsStatusQueueSnmpQueuePackets' => '1.3.6.1.4.1.2356.11.1.12.14',
  'lcsStatusQueueProtHeapPackets' => '1.3.6.1.4.1.2356.11.1.12.22',
  'lcsStatusQueueDhcpServerQueuePackets' => '1.3.6.1.4.1.2356.11.1.12.27',
  'lcsStatusQueueDhcpClientQueuePackets' => '1.3.6.1.4.1.2356.11.1.12.28',
  'lcsStatusQueueIprRipQueuePackets' => '1.3.6.1.4.1.2356.11.1.12.29',
  'lcsStatusQueueDnsTxQueuePackets' => '1.3.6.1.4.1.2356.11.1.12.30',
  'lcsStatusQueueDnsRxQueuePackets' => '1.3.6.1.4.1.2356.11.1.12.31',
  'lcsStatusQueueWlanManagementHeapPackets' => '1.3.6.1.4.1.2356.11.1.12.40',
  'lcsStatusConnectionTable' => '1.3.6.1.4.1.2356.11.1.13',
  'lcsStatusConnectionEntry' => '1.3.6.1.4.1.2356.11.1.13.1',
  'lcsStatusConnectionEntryIfc' => '1.3.6.1.4.1.2356.11.1.13.1.1',
  'lcsStatusConnectionEntryIfcDefinition' => 'LCOS-MIB::lcsStatusConnectionEntryIfc',
  'lcsStatusConnectionEntryConnections' => '1.3.6.1.4.1.2356.11.1.13.1.2',
  'lcsStatusConnectionEntryActive' => '1.3.6.1.4.1.2356.11.1.13.1.3',
  'lcsStatusConnectionEntryPassive' => '1.3.6.1.4.1.2356.11.1.13.1.4',
  'lcsStatusConnectionEntryErrors' => '1.3.6.1.4.1.2356.11.1.13.1.5',
  'lcsStatusConnectionEntryConTime' => '1.3.6.1.4.1.2356.11.1.13.1.6',
  'lcsStatusConnectionEntryCharge' => '1.3.6.1.4.1.2356.11.1.13.1.7',
  'lcsStatusInfoConnectionTable' => '1.3.6.1.4.1.2356.11.1.14',
  'lcsStatusInfoConnectionEntry' => '1.3.6.1.4.1.2356.11.1.14.1',
  'lcsStatusInfoConnectionEntryIfc' => '1.3.6.1.4.1.2356.11.1.14.1.1',
  'lcsStatusInfoConnectionEntryIfcDefinition' => 'LCOS-MIB::lcsStatusInfoConnectionEntryIfc',
  'lcsStatusInfoConnectionEntryStatus' => '1.3.6.1.4.1.2356.11.1.14.1.2',
  'lcsStatusInfoConnectionEntryMode' => '1.3.6.1.4.1.2356.11.1.14.1.3',
  'lcsStatusInfoConnectionEntryModeDefinition' => 'LCOS-MIB::lcsStatusInfoConnectionEntryMode',
  'lcsStatusInfoConnectionEntryDialupRemote' => '1.3.6.1.4.1.2356.11.1.14.1.4',
  'lcsStatusInfoConnectionEntryPeer' => '1.3.6.1.4.1.2356.11.1.14.1.5',
  'lcsStatusInfoConnectionEntryB1Dt' => '1.3.6.1.4.1.2356.11.1.14.1.6',
  'lcsStatusInfoConnectionEntryB2Dt' => '1.3.6.1.4.1.2356.11.1.14.1.7',
  'lcsStatusLayerConnectionTable' => '1.3.6.1.4.1.2356.11.1.15',
  'lcsStatusLayerConnectionEntry' => '1.3.6.1.4.1.2356.11.1.15.1',
  'lcsStatusLayerConnectionEntryIfc' => '1.3.6.1.4.1.2356.11.1.15.1.1',
  'lcsStatusLayerConnectionEntryIfcDefinition' => 'LCOS-MIB::lcsStatusLayerConnectionEntryIfc',
  'lcsStatusLayerConnectionEntryWanLayer' => '1.3.6.1.4.1.2356.11.1.15.1.2',
  'lcsStatusLayerConnectionEntryEncaps' => '1.3.6.1.4.1.2356.11.1.15.1.3',
  'lcsStatusLayerConnectionEntryEncapsDefinition' => 'LCOS-MIB::lcsStatusLayerConnectionEntryEncaps',
  'lcsStatusLayerConnectionEntryLay3' => '1.3.6.1.4.1.2356.11.1.15.1.4',
  'lcsStatusLayerConnectionEntryLay3Definition' => 'LCOS-MIB::lcsStatusLayerConnectionEntryLay3',
  'lcsStatusLayerConnectionEntryLay2' => '1.3.6.1.4.1.2356.11.1.15.1.5',
  'lcsStatusLayerConnectionEntryLay2Definition' => 'LCOS-MIB::lcsStatusLayerConnectionEntryLay2',
  'lcsStatusLayerConnectionEntryL2Opt' => '1.3.6.1.4.1.2356.11.1.15.1.6',
  'lcsStatusLayerConnectionEntryL2OptDefinition' => 'LCOS-MIB::lcsStatusLayerConnectionEntryL2Opt',
  'lcsStatusLayerConnectionEntryLay1' => '1.3.6.1.4.1.2356.11.1.15.1.7',
  'lcsStatusLayerConnectionEntryLay1Definition' => 'LCOS-MIB::lcsStatusLayerConnectionEntryLay1',
  'lcsStatusLayerConnectionEntryL1Parameter' => '1.3.6.1.4.1.2356.11.1.15.1.8',
  'lcsStatusLayerConnectionEntryL1ParameterDefinition' => 'LCOS-MIB::lcsStatusLayerConnectionEntryL1Parameter',
  'lcsStatusCallInformationTable' => '1.3.6.1.4.1.2356.11.1.16',
  'lcsStatusCallInformationEntry' => '1.3.6.1.4.1.2356.11.1.16.1',
  'lcsStatusCallInformationEntrySystemTime' => '1.3.6.1.4.1.2356.11.1.16.1.1',
  'lcsStatusCallInformationEntryIfc' => '1.3.6.1.4.1.2356.11.1.16.1.2',
  'lcsStatusCallInformationEntryIfcDefinition' => 'LCOS-MIB::lcsStatusCallInformationEntryIfc',
  'lcsStatusCallInformationEntryClipCaller' => '1.3.6.1.4.1.2356.11.1.16.1.3',
  'lcsStatusCallInformationEntryDialCaller' => '1.3.6.1.4.1.2356.11.1.16.1.4',
  'lcsStatusCallInformationEntryCapab' => '1.3.6.1.4.1.2356.11.1.16.1.5',
  'lcsStatusCallInformationEntryCapabDefinition' => 'LCOS-MIB::lcsStatusCallInformationEntryCapab',
  'lcsStatusCallInformationEntryBChan' => '1.3.6.1.4.1.2356.11.1.16.1.6',
  'lcsStatusCallInformationEntryCounter' => '1.3.6.1.4.1.2356.11.1.16.1.7',
  'lcsStatusRemoteConnectionsTable' => '1.3.6.1.4.1.2356.11.1.17',
  'lcsStatusRemoteConnectionsEntry' => '1.3.6.1.4.1.2356.11.1.17.1',
  'lcsStatusRemoteConnectionsEntryConnStart' => '1.3.6.1.4.1.2356.11.1.17.1.1',
  'lcsStatusRemoteConnectionsEntryRemoteId' => '1.3.6.1.4.1.2356.11.1.17.1.2',
  'lcsStatusRemoteConnectionsEntryMode' => '1.3.6.1.4.1.2356.11.1.17.1.3',
  'lcsStatusRemoteConnectionsEntryModeDefinition' => 'LCOS-MIB::lcsStatusRemoteConnectionsEntryMode',
  'lcsStatusRemoteConnectionsEntryIfc' => '1.3.6.1.4.1.2356.11.1.17.1.4',
  'lcsStatusRemoteConnectionsEntryIfcDefinition' => 'LCOS-MIB::lcsStatusRemoteConnectionsEntryIfc',
  'lcsStatusRemoteConnectionsEntryConnTime' => '1.3.6.1.4.1.2356.11.1.17.1.5',
  'lcsStatusRemoteConnectionsEntryCharge' => '1.3.6.1.4.1.2356.11.1.17.1.6',
  'lcsStatusRemoteConnectionsEntryCounter' => '1.3.6.1.4.1.2356.11.1.17.1.8',
  'lcsStatusCurrentTime' => '1.3.6.1.4.1.2356.11.1.18',
  'lcsStatusTime' => '1.3.6.1.4.1.2356.11.1.21',
  'lcsStatusTimeCurrentTime' => '1.3.6.1.4.1.2356.11.1.21.1',
  'lcsStatusTimeSource' => '1.3.6.1.4.1.2356.11.1.21.2',
  'lcsStatusTimeSourceDefinition' => 'LCOS-MIB::lcsStatusTimeSource',
  'lcsStatusTimeSetCount' => '1.3.6.1.4.1.2356.11.1.21.3',
  'lcsStatusTimeIsdn' => '1.3.6.1.4.1.2356.11.1.21.4',
  'lcsStatusTimeIsdnConnection' => '1.3.6.1.4.1.2356.11.1.21.4.1',
  'lcsStatusTimeIsdnInformation' => '1.3.6.1.4.1.2356.11.1.21.4.2',
  'lcsStatusTimeIsdnInfoError' => '1.3.6.1.4.1.2356.11.1.21.4.3',
  'lcsStatusTimeIsdnUnits' => '1.3.6.1.4.1.2356.11.1.21.4.4',
  'lcsStatusTimeIsdnDeleteValues' => '1.3.6.1.4.1.2356.11.1.21.4.5',
  'lcsStatusTimeUtcInSeconds' => '1.3.6.1.4.1.2356.11.1.21.7',
  'lcsStatusTimeTimezone' => '1.3.6.1.4.1.2356.11.1.21.10',
  'lcsStatusTimeTimezoneDefinition' => 'LCOS-MIB::lcsStatusTimeTimezone',
  'lcsStatusTimeDaylightSavingTime' => '1.3.6.1.4.1.2356.11.1.21.11',
  'lcsStatusTimeDaylightSavingTimeDefinition' => 'LCOS-MIB::lcsStatusTimeDaylightSavingTime',
  'lcsStatusTimeDstClockChangesTable' => '1.3.6.1.4.1.2356.11.1.21.12',
  'lcsStatusTimeDstClockChangesEntry' => '1.3.6.1.4.1.2356.11.1.21.12.1',
  'lcsStatusTimeDstClockChangesEntryEvent' => '1.3.6.1.4.1.2356.11.1.21.12.1.1',
  'lcsStatusTimeDstClockChangesEntryEventDefinition' => 'LCOS-MIB::lcsStatusTimeDstClockChangesEntryEvent',
  'lcsStatusTimeDstClockChangesEntryIndex' => '1.3.6.1.4.1.2356.11.1.21.12.1.2',
  'lcsStatusTimeDstClockChangesEntryIndexDefinition' => 'LCOS-MIB::lcsStatusTimeDstClockChangesEntryIndex',
  'lcsStatusTimeDstClockChangesEntryDay' => '1.3.6.1.4.1.2356.11.1.21.12.1.3',
  'lcsStatusTimeDstClockChangesEntryDayDefinition' => 'LCOS-MIB::lcsStatusTimeDstClockChangesEntryDay',
  'lcsStatusTimeDstClockChangesEntryMonth' => '1.3.6.1.4.1.2356.11.1.21.12.1.4',
  'lcsStatusTimeDstClockChangesEntryMonthDefinition' => 'LCOS-MIB::lcsStatusTimeDstClockChangesEntryMonth',
  'lcsStatusTimeDstClockChangesEntryHour' => '1.3.6.1.4.1.2356.11.1.21.12.1.5',
  'lcsStatusTimeDstClockChangesEntryMinute' => '1.3.6.1.4.1.2356.11.1.21.12.1.6',
  'lcsStatusTimeDstClockChangesEntryTimeType' => '1.3.6.1.4.1.2356.11.1.21.12.1.7',
  'lcsStatusTimeDstClockChangesEntryTimeTypeDefinition' => 'LCOS-MIB::lcsStatusTimeDstClockChangesEntryTimeType',
  'lcsStatusLcr' => '1.3.6.1.4.1.2356.11.1.22',
  'lcsStatusLcrTotalCalls' => '1.3.6.1.4.1.2356.11.1.22.1',
  'lcsStatusLcrFoundEvents' => '1.3.6.1.4.1.2356.11.1.22.2',
  'lcsStatusLcrNotfoundErrors' => '1.3.6.1.4.1.2356.11.1.22.3',
  'lcsStatusLcrMissingtimeErrors' => '1.3.6.1.4.1.2356.11.1.22.4',
  'lcsStatusLcrProviderTable' => '1.3.6.1.4.1.2356.11.1.22.6',
  'lcsStatusLcrProviderEntry' => '1.3.6.1.4.1.2356.11.1.22.6.1',
  'lcsStatusLcrProviderEntryProvider' => '1.3.6.1.4.1.2356.11.1.22.6.1.1',
  'lcsStatusLcrProviderEntryFailures' => '1.3.6.1.4.1.2356.11.1.22.6.1.2',
  'lcsStatusLcrProviderEntrySuccesses' => '1.3.6.1.4.1.2356.11.1.22.6.1.3',
  'lcsStatusLcrDeleteValues' => '1.3.6.1.4.1.2356.11.1.22.7',
  'lcsStatusLcrPppoe' => '1.3.6.1.4.1.2356.11.1.22.31',
  'lcsStatusLcrPppoeTxPadi' => '1.3.6.1.4.1.2356.11.1.22.31.1',
  'lcsStatusLcrPppoeRxPado' => '1.3.6.1.4.1.2356.11.1.22.31.2',
  'lcsStatusLcrPppoeTxPadr' => '1.3.6.1.4.1.2356.11.1.22.31.3',
  'lcsStatusLcrPppoeRxPads' => '1.3.6.1.4.1.2356.11.1.22.31.4',
  'lcsStatusLcrPppoeTxPadt' => '1.3.6.1.4.1.2356.11.1.22.31.5',
  'lcsStatusLcrPppoeRxPadt' => '1.3.6.1.4.1.2356.11.1.22.31.6',
  'lcsStatusLcrPppoeTxProtocol' => '1.3.6.1.4.1.2356.11.1.22.31.7',
  'lcsStatusLcrPppoeRxProtocol' => '1.3.6.1.4.1.2356.11.1.22.31.8',
  'lcsStatusLcrPppoeTxData' => '1.3.6.1.4.1.2356.11.1.22.31.9',
  'lcsStatusLcrPppoeRxData' => '1.3.6.1.4.1.2356.11.1.22.31.10',
  'lcsStatusLcrPppoeRxBad' => '1.3.6.1.4.1.2356.11.1.22.31.11',
  'lcsStatusLcrPppoeAcName' => '1.3.6.1.4.1.2356.11.1.22.31.12',
  'lcsStatusLcrPppoeService' => '1.3.6.1.4.1.2356.11.1.22.31.13',
  'lcsStatusLcrPppoeDeleteValues' => '1.3.6.1.4.1.2356.11.1.22.31.30',
  'lcsStatusCharging' => '1.3.6.1.4.1.2356.11.1.24',
  'lcsStatusChargingSpareDslBroadbandMinutes' => '1.3.6.1.4.1.2356.11.1.24.1',
  'lcsStatusChargingTimeTableTable' => '1.3.6.1.4.1.2356.11.1.24.2',
  'lcsStatusChargingTimeTableEntry' => '1.3.6.1.4.1.2356.11.1.24.2.1',
  'lcsStatusChargingTimeTableEntryIfc' => '1.3.6.1.4.1.2356.11.1.24.2.1.1',
  'lcsStatusChargingTimeTableEntryIfcDefinition' => 'LCOS-MIB::lcsStatusChargingTimeTableEntryIfc',
  'lcsStatusChargingTimeTableEntryBudgetMinutes' => '1.3.6.1.4.1.2356.11.1.24.2.1.2',
  'lcsStatusChargingTimeTableEntrySpareMinutes' => '1.3.6.1.4.1.2356.11.1.24.2.1.3',
  'lcsStatusChargingTimeTableEntryMinutesActive' => '1.3.6.1.4.1.2356.11.1.24.2.1.4',
  'lcsStatusChargingTimeTableEntryMinutesPassive' => '1.3.6.1.4.1.2356.11.1.24.2.1.5',
  'lcsStatusChargingDeleteValues' => '1.3.6.1.4.1.2356.11.1.24.3',
  'lcsStatusChargingSpareUnits' => '1.3.6.1.4.1.2356.11.1.24.4',
  'lcsStatusChargingTableBudgetTable' => '1.3.6.1.4.1.2356.11.1.24.5',
  'lcsStatusChargingTableBudgetEntry' => '1.3.6.1.4.1.2356.11.1.24.5.1',
  'lcsStatusChargingTableBudgetEntryIfc' => '1.3.6.1.4.1.2356.11.1.24.5.1.1',
  'lcsStatusChargingTableBudgetEntryIfcDefinition' => 'LCOS-MIB::lcsStatusChargingTableBudgetEntryIfc',
  'lcsStatusChargingTableBudgetEntryBudgetUnits' => '1.3.6.1.4.1.2356.11.1.24.5.1.2',
  'lcsStatusChargingTableBudgetEntrySpareBudget' => '1.3.6.1.4.1.2356.11.1.24.5.1.3',
  'lcsStatusChargingTableBudgetEntryTotalUnits' => '1.3.6.1.4.1.2356.11.1.24.5.1.4',
  'lcsStatusChargingSpareDaysPerPeriod' => '1.3.6.1.4.1.2356.11.1.24.6',
  'lcsStatusChargingRouterUnits' => '1.3.6.1.4.1.2356.11.1.24.7',
  'lcsStatusChargingTotalUnits' => '1.3.6.1.4.1.2356.11.1.24.8',
  'lcsStatusChargingRouterDslBroadbandMinutesActive' => '1.3.6.1.4.1.2356.11.1.24.9',
  'lcsStatusChargingSpareDialupMinutes' => '1.3.6.1.4.1.2356.11.1.24.10',
  'lcsStatusChargingDialupMinutesActive' => '1.3.6.1.4.1.2356.11.1.24.11',
  'lcsStatusChargingPppoe' => '1.3.6.1.4.1.2356.11.1.24.31',
  'lcsStatusChargingPppoeTxPadi' => '1.3.6.1.4.1.2356.11.1.24.31.1',
  'lcsStatusChargingPppoeRxPado' => '1.3.6.1.4.1.2356.11.1.24.31.2',
  'lcsStatusChargingPppoeTxPadr' => '1.3.6.1.4.1.2356.11.1.24.31.3',
  'lcsStatusChargingPppoeRxPads' => '1.3.6.1.4.1.2356.11.1.24.31.4',
  'lcsStatusChargingPppoeTxPadt' => '1.3.6.1.4.1.2356.11.1.24.31.5',
  'lcsStatusChargingPppoeRxPadt' => '1.3.6.1.4.1.2356.11.1.24.31.6',
  'lcsStatusChargingPppoeTxProtocol' => '1.3.6.1.4.1.2356.11.1.24.31.7',
  'lcsStatusChargingPppoeRxProtocol' => '1.3.6.1.4.1.2356.11.1.24.31.8',
  'lcsStatusChargingPppoeTxData' => '1.3.6.1.4.1.2356.11.1.24.31.9',
  'lcsStatusChargingPppoeRxData' => '1.3.6.1.4.1.2356.11.1.24.31.10',
  'lcsStatusChargingPppoeRxBad' => '1.3.6.1.4.1.2356.11.1.24.31.11',
  'lcsStatusChargingPppoeAcName' => '1.3.6.1.4.1.2356.11.1.24.31.12',
  'lcsStatusChargingPppoeService' => '1.3.6.1.4.1.2356.11.1.24.31.13',
  'lcsStatusChargingPppoeDeleteValues' => '1.3.6.1.4.1.2356.11.1.24.31.30',
  'lcsStatusDslol' => '1.3.6.1.4.1.2356.11.1.25',
  'lcsStatusDslolRxPackets' => '1.3.6.1.4.1.2356.11.1.25.1',
  'lcsStatusDslolTxPackets' => '1.3.6.1.4.1.2356.11.1.25.2',
  'lcsStatusDslolRxErrors' => '1.3.6.1.4.1.2356.11.1.25.3',
  'lcsStatusDslolTxErrors' => '1.3.6.1.4.1.2356.11.1.25.4',
  'lcsStatusDslolRxNoConnection' => '1.3.6.1.4.1.2356.11.1.25.5',
  'lcsStatusDslolNicErrors' => '1.3.6.1.4.1.2356.11.1.25.6',
  'lcsStatusDslolQueuePackets' => '1.3.6.1.4.1.2356.11.1.25.7',
  'lcsStatusDslolQueueErrors' => '1.3.6.1.4.1.2356.11.1.25.8',
  'lcsStatusDslolRxBytes' => '1.3.6.1.4.1.2356.11.1.25.9',
  'lcsStatusDslolTxBytes' => '1.3.6.1.4.1.2356.11.1.25.10',
  'lcsStatusDslolRxUnicasts' => '1.3.6.1.4.1.2356.11.1.25.11',
  'lcsStatusDslolTxBroadcasts' => '1.3.6.1.4.1.2356.11.1.25.12',
  'lcsStatusDslolTxUnicasts' => '1.3.6.1.4.1.2356.11.1.25.13',
  'lcsStatusDslolLinkActive' => '1.3.6.1.4.1.2356.11.1.25.14',
  'lcsStatusDslolLinkActiveDefinition' => 'LCOS-MIB::lcsStatusDslolLinkActive',
  'lcsStatusDslolRxCrcErrors' => '1.3.6.1.4.1.2356.11.1.25.17',
  'lcsStatusDslolRxAlignErrors' => '1.3.6.1.4.1.2356.11.1.25.18',
  'lcsStatusDslolCollisions' => '1.3.6.1.4.1.2356.11.1.25.19',
  'lcsStatusDslolSingleCollisions' => '1.3.6.1.4.1.2356.11.1.25.20',
  'lcsStatusDslolMultipleCollisions' => '1.3.6.1.4.1.2356.11.1.25.21',
  'lcsStatusDslolLateCollisions' => '1.3.6.1.4.1.2356.11.1.25.22',
  'lcsStatusDslolExcessiveCollisions' => '1.3.6.1.4.1.2356.11.1.25.23',
  'lcsStatusDslolDslol' => '1.3.6.1.4.1.2356.11.1.25.24',
  'lcsStatusDslolDslolIpConfiguration' => '1.3.6.1.4.1.2356.11.1.25.24.1',
  'lcsStatusDslolDslolIpConfigurationDefinition' => 'LCOS-MIB::lcsStatusDslolDslolIpConfiguration',
  'lcsStatusDslolDslolIpNetwork' => '1.3.6.1.4.1.2356.11.1.25.24.2',
  'lcsStatusDslolDslolIpNetmask' => '1.3.6.1.4.1.2356.11.1.25.24.3',
  'lcsStatusDslolDslolGatewayIp' => '1.3.6.1.4.1.2356.11.1.25.24.4',
  'lcsStatusDslolDslolGatewayMac' => '1.3.6.1.4.1.2356.11.1.25.24.5',
  'lcsStatusDslolDslolCatchDhcp' => '1.3.6.1.4.1.2356.11.1.25.24.6',
  'lcsStatusDslolDslolCatchDhcpDefinition' => 'LCOS-MIB::lcsStatusDslolDslolCatchDhcp',
  'lcsStatusDslolDslolExclusiveMode' => '1.3.6.1.4.1.2356.11.1.25.24.7',
  'lcsStatusDslolDslolExclusiveModeDefinition' => 'LCOS-MIB::lcsStatusDslolDslolExclusiveMode',
  'lcsStatusDslolRxTooShort' => '1.3.6.1.4.1.2356.11.1.25.25',
  'lcsStatusDslolRxTooLong' => '1.3.6.1.4.1.2356.11.1.25.26',
  'lcsStatusDslolTxCarrier' => '1.3.6.1.4.1.2356.11.1.25.27',
  'lcsStatusDslolTxDeferred' => '1.3.6.1.4.1.2356.11.1.25.28',
  'lcsStatusDslolDeleteValues' => '1.3.6.1.4.1.2356.11.1.25.30',
  'lcsStatusDslolPppoe' => '1.3.6.1.4.1.2356.11.1.25.31',
  'lcsStatusDslolPppoeTxPadi' => '1.3.6.1.4.1.2356.11.1.25.31.1',
  'lcsStatusDslolPppoeRxPado' => '1.3.6.1.4.1.2356.11.1.25.31.2',
  'lcsStatusDslolPppoeTxPadr' => '1.3.6.1.4.1.2356.11.1.25.31.3',
  'lcsStatusDslolPppoeRxPads' => '1.3.6.1.4.1.2356.11.1.25.31.4',
  'lcsStatusDslolPppoeTxPadt' => '1.3.6.1.4.1.2356.11.1.25.31.5',
  'lcsStatusDslolPppoeRxPadt' => '1.3.6.1.4.1.2356.11.1.25.31.6',
  'lcsStatusDslolPppoeTxProtocol' => '1.3.6.1.4.1.2356.11.1.25.31.7',
  'lcsStatusDslolPppoeRxProtocol' => '1.3.6.1.4.1.2356.11.1.25.31.8',
  'lcsStatusDslolPppoeTxData' => '1.3.6.1.4.1.2356.11.1.25.31.9',
  'lcsStatusDslolPppoeRxData' => '1.3.6.1.4.1.2356.11.1.25.31.10',
  'lcsStatusDslolPppoeRxBad' => '1.3.6.1.4.1.2356.11.1.25.31.11',
  'lcsStatusDslolPppoeAcName' => '1.3.6.1.4.1.2356.11.1.25.31.12',
  'lcsStatusDslolPppoeService' => '1.3.6.1.4.1.2356.11.1.25.31.13',
  'lcsStatusDslolPppoeDeleteValues' => '1.3.6.1.4.1.2356.11.1.25.31.30',
  'lcsStatusVpn' => '1.3.6.1.4.1.2356.11.1.26',
  'lcsStatusVpnPeers' => '1.3.6.1.4.1.2356.11.1.26.1',
  'lcsStatusVpnRules' => '1.3.6.1.4.1.2356.11.1.26.2',
  'lcsStatusVpnTunnel' => '1.3.6.1.4.1.2356.11.1.26.4',
  'lcsStatusVpnIkeSas' => '1.3.6.1.4.1.2356.11.1.26.5',
  'lcsStatusVpnEspSas' => '1.3.6.1.4.1.2356.11.1.26.6',
  'lcsStatusVpnAhSas' => '1.3.6.1.4.1.2356.11.1.26.7',
  'lcsStatusVpnIkeTable' => '1.3.6.1.4.1.2356.11.1.26.8',
  'lcsStatusVpnIkeEntry' => '1.3.6.1.4.1.2356.11.1.26.8.1',
  'lcsStatusVpnIkeEntryIdx' => '1.3.6.1.4.1.2356.11.1.26.8.1.1',
  'lcsStatusVpnIkeEntryPeer' => '1.3.6.1.4.1.2356.11.1.26.8.1.2',
  'lcsStatusVpnIkeEntryDestAddress' => '1.3.6.1.4.1.2356.11.1.26.8.1.3',
  'lcsStatusVpnIkeEntrySrcAddress' => '1.3.6.1.4.1.2356.11.1.26.8.1.4',
  'lcsStatusVpnIkeEntryCryptAlg' => '1.3.6.1.4.1.2356.11.1.26.8.1.5',
  'lcsStatusVpnIkeEntryHashAlg' => '1.3.6.1.4.1.2356.11.1.26.8.1.6',
  'lcsStatusVpnIkeEntryAge' => '1.3.6.1.4.1.2356.11.1.26.8.1.8',
  'lcsStatusVpnIkeEntryInitiator' => '1.3.6.1.4.1.2356.11.1.26.8.1.9',
  'lcsStatusVpnIkeEntrySoftSec' => '1.3.6.1.4.1.2356.11.1.26.8.1.10',
  'lcsStatusVpnIkeEntryMaxSec' => '1.3.6.1.4.1.2356.11.1.26.8.1.11',
  'lcsStatusVpnIkeEntryKbyte' => '1.3.6.1.4.1.2356.11.1.26.8.1.12',
  'lcsStatusVpnIkeEntrySoftKbyte' => '1.3.6.1.4.1.2356.11.1.26.8.1.13',
  'lcsStatusVpnIkeEntryMaxKbyte' => '1.3.6.1.4.1.2356.11.1.26.8.1.14',
  'lcsStatusVpnIkeEntryIkeAuthMode' => '1.3.6.1.4.1.2356.11.1.26.8.1.15',
  'lcsStatusVpnIkeEntryIkeAuthModeDefinition' => 'LCOS-MIB::lcsStatusVpnIkeEntryIkeAuthMode',
  'lcsStatusVpnIkeEntryDstPort' => '1.3.6.1.4.1.2356.11.1.26.8.1.16',
  'lcsStatusVpnIkeEntrySrcPort' => '1.3.6.1.4.1.2356.11.1.26.8.1.17',
  'lcsStatusVpnEspTable' => '1.3.6.1.4.1.2356.11.1.26.9',
  'lcsStatusVpnEspEntry' => '1.3.6.1.4.1.2356.11.1.26.9.1',
  'lcsStatusVpnEspEntryIdx' => '1.3.6.1.4.1.2356.11.1.26.9.1.1',
  'lcsStatusVpnEspEntryPeer' => '1.3.6.1.4.1.2356.11.1.26.9.1.2',
  'lcsStatusVpnEspEntryDestAddress' => '1.3.6.1.4.1.2356.11.1.26.9.1.3',
  'lcsStatusVpnEspEntrySrcAddress' => '1.3.6.1.4.1.2356.11.1.26.9.1.4',
  'lcsStatusVpnEspEntryMode' => '1.3.6.1.4.1.2356.11.1.26.9.1.5',
  'lcsStatusVpnEspEntryCryptAlg' => '1.3.6.1.4.1.2356.11.1.26.9.1.6',
  'lcsStatusVpnEspEntryHashAlg' => '1.3.6.1.4.1.2356.11.1.26.9.1.7',
  'lcsStatusVpnEspEntrySpi' => '1.3.6.1.4.1.2356.11.1.26.9.1.9',
  'lcsStatusVpnEspEntryAge' => '1.3.6.1.4.1.2356.11.1.26.9.1.10',
  'lcsStatusVpnEspEntrySoftSec' => '1.3.6.1.4.1.2356.11.1.26.9.1.11',
  'lcsStatusVpnEspEntryMaxSec' => '1.3.6.1.4.1.2356.11.1.26.9.1.12',
  'lcsStatusVpnEspEntryKbyte' => '1.3.6.1.4.1.2356.11.1.26.9.1.13',
  'lcsStatusVpnEspEntrySoftKbyte' => '1.3.6.1.4.1.2356.11.1.26.9.1.14',
  'lcsStatusVpnEspEntryMaxKbyte' => '1.3.6.1.4.1.2356.11.1.26.9.1.15',
  'lcsStatusVpnAhTable' => '1.3.6.1.4.1.2356.11.1.26.10',
  'lcsStatusVpnAhEntry' => '1.3.6.1.4.1.2356.11.1.26.10.1',
  'lcsStatusVpnAhEntryIdx' => '1.3.6.1.4.1.2356.11.1.26.10.1.1',
  'lcsStatusVpnAhEntryPeer' => '1.3.6.1.4.1.2356.11.1.26.10.1.2',
  'lcsStatusVpnAhEntryDestAddress' => '1.3.6.1.4.1.2356.11.1.26.10.1.3',
  'lcsStatusVpnAhEntrySrcAddress' => '1.3.6.1.4.1.2356.11.1.26.10.1.4',
  'lcsStatusVpnAhEntryMode' => '1.3.6.1.4.1.2356.11.1.26.10.1.5',
  'lcsStatusVpnAhEntryCryptAlg' => '1.3.6.1.4.1.2356.11.1.26.10.1.6',
  'lcsStatusVpnAhEntryHashAlg' => '1.3.6.1.4.1.2356.11.1.26.10.1.7',
  'lcsStatusVpnAhEntrySpi' => '1.3.6.1.4.1.2356.11.1.26.10.1.9',
  'lcsStatusVpnAhEntryAge' => '1.3.6.1.4.1.2356.11.1.26.10.1.10',
  'lcsStatusVpnAhEntrySoftSec' => '1.3.6.1.4.1.2356.11.1.26.10.1.11',
  'lcsStatusVpnAhEntryMaxSec' => '1.3.6.1.4.1.2356.11.1.26.10.1.12',
  'lcsStatusVpnAhEntryKbyte' => '1.3.6.1.4.1.2356.11.1.26.10.1.13',
  'lcsStatusVpnAhEntrySoftKbyte' => '1.3.6.1.4.1.2356.11.1.26.10.1.14',
  'lcsStatusVpnAhEntryMaxKbyte' => '1.3.6.1.4.1.2356.11.1.26.10.1.15',
  'lcsStatusVpnDeleteValues' => '1.3.6.1.4.1.2356.11.1.26.12',
  'lcsStatusVpnIpcompSas' => '1.3.6.1.4.1.2356.11.1.26.13',
  'lcsStatusVpnIpcompTable' => '1.3.6.1.4.1.2356.11.1.26.14',
  'lcsStatusVpnIpcompEntry' => '1.3.6.1.4.1.2356.11.1.26.14.1',
  'lcsStatusVpnIpcompEntryIdx' => '1.3.6.1.4.1.2356.11.1.26.14.1.1',
  'lcsStatusVpnIpcompEntryPeer' => '1.3.6.1.4.1.2356.11.1.26.14.1.2',
  'lcsStatusVpnIpcompEntryDestAddress' => '1.3.6.1.4.1.2356.11.1.26.14.1.3',
  'lcsStatusVpnIpcompEntrySrcAddress' => '1.3.6.1.4.1.2356.11.1.26.14.1.4',
  'lcsStatusVpnIpcompEntryMode' => '1.3.6.1.4.1.2356.11.1.26.14.1.5',
  'lcsStatusVpnIpcompEntryCryptAlg' => '1.3.6.1.4.1.2356.11.1.26.14.1.6',
  'lcsStatusVpnIpcompEntryHashAlg' => '1.3.6.1.4.1.2356.11.1.26.14.1.7',
  'lcsStatusVpnIpcompEntrySpi' => '1.3.6.1.4.1.2356.11.1.26.14.1.9',
  'lcsStatusVpnIpcompEntryAge' => '1.3.6.1.4.1.2356.11.1.26.14.1.10',
  'lcsStatusVpnIpcompEntrySoftSec' => '1.3.6.1.4.1.2356.11.1.26.14.1.11',
  'lcsStatusVpnIpcompEntryMaxSec' => '1.3.6.1.4.1.2356.11.1.26.14.1.12',
  'lcsStatusVpnIpcompEntryKbyte' => '1.3.6.1.4.1.2356.11.1.26.14.1.13',
  'lcsStatusVpnIpcompEntrySoftKbyte' => '1.3.6.1.4.1.2356.11.1.26.14.1.14',
  'lcsStatusVpnIpcompEntryMaxKbyte' => '1.3.6.1.4.1.2356.11.1.26.14.1.15',
  'lcsStatusVpnConnectionsTable' => '1.3.6.1.4.1.2356.11.1.26.17',
  'lcsStatusVpnConnectionsEntry' => '1.3.6.1.4.1.2356.11.1.26.17.1',
  'lcsStatusVpnConnectionsEntryPeer' => '1.3.6.1.4.1.2356.11.1.26.17.1.1',
  'lcsStatusVpnConnectionsEntryPhysConn' => '1.3.6.1.4.1.2356.11.1.26.17.1.2',
  'lcsStatusVpnConnectionsEntryRemoteGw' => '1.3.6.1.4.1.2356.11.1.26.17.1.3',
  'lcsStatusVpnConnectionsEntryCryptAlg' => '1.3.6.1.4.1.2356.11.1.26.17.1.4',
  'lcsStatusVpnConnectionsEntryCryptLength' => '1.3.6.1.4.1.2356.11.1.26.17.1.5',
  'lcsStatusVpnConnectionsEntryHashAlg' => '1.3.6.1.4.1.2356.11.1.26.17.1.6',
  'lcsStatusVpnConnectionsEntryHashLength' => '1.3.6.1.4.1.2356.11.1.26.17.1.7',
  'lcsStatusVpnConnectionsEntryHmacAlg' => '1.3.6.1.4.1.2356.11.1.26.17.1.8',
  'lcsStatusVpnConnectionsEntryHmacLength' => '1.3.6.1.4.1.2356.11.1.26.17.1.9',
  'lcsStatusVpnConnectionsEntryComprAlg' => '1.3.6.1.4.1.2356.11.1.26.17.1.10',
  'lcsStatusVpnConnectionsEntryState' => '1.3.6.1.4.1.2356.11.1.26.17.1.11',
  'lcsStatusVpnConnectionsEntryStateDefinition' => 'LCOS-MIB::lcsStatusVpnConnectionsEntryState',
  'lcsStatusVpnConnectionsEntryMode' => '1.3.6.1.4.1.2356.11.1.26.17.1.12',
  'lcsStatusVpnConnectionsEntryModeDefinition' => 'LCOS-MIB::lcsStatusVpnConnectionsEntryMode',
  'lcsStatusVpnConnectionsEntryShTime' => '1.3.6.1.4.1.2356.11.1.26.17.1.13',
  'lcsStatusVpnConnectionsEntryB1Dt' => '1.3.6.1.4.1.2356.11.1.26.17.1.14',
  'lcsStatusVpnConnectionsEntryLastError' => '1.3.6.1.4.1.2356.11.1.26.17.1.16',
  'lcsStatusVpnConnectionsEntryLastErrorDefinition' => 'LCOS-MIB::lcsStatusVpnConnectionsEntryLastError',
  'lcsStatusVpnConnectionsEntryClientSn' => '1.3.6.1.4.1.2356.11.1.26.17.1.17',
  'lcsStatusVpnConnectionsEntryClientSnDefinition' => 'LCOS-MIB::lcsStatusVpnConnectionsEntryClientSn',
  'lcsStatusVpnConnectionsEntryNatDetection' => '1.3.6.1.4.1.2356.11.1.26.17.1.18',
  'lcsStatusVpnConnectionsEntryNatDetectionDefinition' => 'LCOS-MIB::lcsStatusVpnConnectionsEntryNatDetection',
  'lcsStatusVpnConnectionsEntryConnTime' => '1.3.6.1.4.1.2356.11.1.26.17.1.19',
  'lcsStatusVpnConnectionsEntrySslEncaps' => '1.3.6.1.4.1.2356.11.1.26.17.1.20',
  'lcsStatusVpnConnectionsEntrySslEncapsDefinition' => 'LCOS-MIB::lcsStatusVpnConnectionsEntrySslEncaps',
  'lcsStatusVpnRxPackets' => '1.3.6.1.4.1.2356.11.1.26.20',
  'lcsStatusVpnTxPackets' => '1.3.6.1.4.1.2356.11.1.26.21',
  'lcsStatusVpnTxDropped' => '1.3.6.1.4.1.2356.11.1.26.22',
  'lcsStatusVpnRxErrors' => '1.3.6.1.4.1.2356.11.1.26.23',
  'lcsStatusVpnTxInvalid' => '1.3.6.1.4.1.2356.11.1.26.25',
  'lcsStatusVpnTxNoSa' => '1.3.6.1.4.1.2356.11.1.26.26',
  'lcsStatusVpnTxNoPolicy' => '1.3.6.1.4.1.2356.11.1.26.27',
  'lcsStatusVpnRxEspAuthFail' => '1.3.6.1.4.1.2356.11.1.26.28',
  'lcsStatusVpnRxAhAuthFail' => '1.3.6.1.4.1.2356.11.1.26.29',
  'lcsStatusVpnRxIpcompFail' => '1.3.6.1.4.1.2356.11.1.26.30',
  'lcsStatusVpnRxEspReplay' => '1.3.6.1.4.1.2356.11.1.26.31',
  'lcsStatusVpnRxAhReplay' => '1.3.6.1.4.1.2356.11.1.26.32',
  'lcsStatusVpnRxBadSpi' => '1.3.6.1.4.1.2356.11.1.26.33',
  'lcsStatusVpnRxInvalid' => '1.3.6.1.4.1.2356.11.1.26.34',
  'lcsStatusVpnRxNoSa' => '1.3.6.1.4.1.2356.11.1.26.35',
  'lcsStatusVpnQueueError' => '1.3.6.1.4.1.2356.11.1.26.36',
  'lcsStatusPptp' => '1.3.6.1.4.1.2356.11.1.27',
  'lcsStatusPptpRxPackets' => '1.3.6.1.4.1.2356.11.1.27.1',
  'lcsStatusPptpTxPackets' => '1.3.6.1.4.1.2356.11.1.27.2',
  'lcsStatusPptpEchoRetries' => '1.3.6.1.4.1.2356.11.1.27.3',
  'lcsStatusPptpAckTimeouts' => '1.3.6.1.4.1.2356.11.1.27.4',
  'lcsStatusPptpDroppedPackets' => '1.3.6.1.4.1.2356.11.1.27.5',
  'lcsStatusPptpRxErrors' => '1.3.6.1.4.1.2356.11.1.27.6',
  'lcsStatusPptpTcpErrors' => '1.3.6.1.4.1.2356.11.1.27.7',
  'lcsStatusPptpCallErrors' => '1.3.6.1.4.1.2356.11.1.27.8',
  'lcsStatusPptpConnectionsTable' => '1.3.6.1.4.1.2356.11.1.27.9',
  'lcsStatusPptpConnectionsEntry' => '1.3.6.1.4.1.2356.11.1.27.9.1',
  'lcsStatusPptpConnectionsEntryChannel' => '1.3.6.1.4.1.2356.11.1.27.9.1.1',
  'lcsStatusPptpConnectionsEntryState' => '1.3.6.1.4.1.2356.11.1.27.9.1.3',
  'lcsStatusPptpConnectionsEntryStateDefinition' => 'LCOS-MIB::lcsStatusPptpConnectionsEntryState',
  'lcsStatusPptpConnectionsEntryMode' => '1.3.6.1.4.1.2356.11.1.27.9.1.4',
  'lcsStatusPptpConnectionsEntryModeDefinition' => 'LCOS-MIB::lcsStatusPptpConnectionsEntryMode',
  'lcsStatusPptpConnectionsEntryShTime' => '1.3.6.1.4.1.2356.11.1.27.9.1.5',
  'lcsStatusPptpConnectionsEntryPhysConnection' => '1.3.6.1.4.1.2356.11.1.27.9.1.6',
  'lcsStatusPptpConnectionsEntryPeerAddress' => '1.3.6.1.4.1.2356.11.1.27.9.1.7',
  'lcsStatusPptpConnectionsEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.27.9.1.8',
  'lcsStatusPptpConnectionsEntryDnsDefault' => '1.3.6.1.4.1.2356.11.1.27.9.1.9',
  'lcsStatusPptpConnectionsEntryNbnsDefault' => '1.3.6.1.4.1.2356.11.1.27.9.1.10',
  'lcsStatusPptpConnectionsEntryLastError' => '1.3.6.1.4.1.2356.11.1.27.9.1.11',
  'lcsStatusPptpConnectionsEntryLastErrorDefinition' => 'LCOS-MIB::lcsStatusPptpConnectionsEntryLastError',
  'lcsStatusPptpConnectionsEntryDnsBackup' => '1.3.6.1.4.1.2356.11.1.27.9.1.12',
  'lcsStatusPptpConnectionsEntryNbnsBackup' => '1.3.6.1.4.1.2356.11.1.27.9.1.13',
  'lcsStatusPptpConnectionsEntryConnTime' => '1.3.6.1.4.1.2356.11.1.27.9.1.14',
  'lcsStatusPptpConnectionsEntryGateway' => '1.3.6.1.4.1.2356.11.1.27.9.1.15',
  'lcsStatusPptpConnectionsEntryEncryption' => '1.3.6.1.4.1.2356.11.1.27.9.1.16',
  'lcsStatusPptpConnectionsEntryEncryptionDefinition' => 'LCOS-MIB::lcsStatusPptpConnectionsEntryEncryption',
  'lcsStatusPptpTunnel' => '1.3.6.1.4.1.2356.11.1.27.10',
  'lcsStatusPptpDeleteValues' => '1.3.6.1.4.1.2356.11.1.27.11',
  'lcsStatusPptpFlowControlQueue' => '1.3.6.1.4.1.2356.11.1.27.12',
  'lcsStatusLanBridge' => '1.3.6.1.4.1.2356.11.1.31',
  'lcsStatusLanBridgeAddressTableTable' => '1.3.6.1.4.1.2356.11.1.31.1',
  'lcsStatusLanBridgeAddressTableEntry' => '1.3.6.1.4.1.2356.11.1.31.1.1',
  'lcsStatusLanBridgeAddressTableEntryIndex' => '1.3.6.1.4.1.2356.11.1.31.1.1.1',
  'lcsStatusLanBridgeAddressTableEntryAge' => '1.3.6.1.4.1.2356.11.1.31.1.1.2',
  'lcsStatusLanBridgeAddressTableEntryMacAddress' => '1.3.6.1.4.1.2356.11.1.31.1.1.3',
  'lcsStatusLanBridgeAddressTableEntryEthernetPort' => '1.3.6.1.4.1.2356.11.1.31.1.1.5',
  'lcsStatusLanBridgeAddressTableEntryEthernetPortDefinition' => 'LCOS-MIB::lcsStatusLanBridgeAddressTableEntryEthernetPort',
  'lcsStatusLanBridgeAddressTableEntryBrgAddr' => '1.3.6.1.4.1.2356.11.1.31.1.1.6',
  'lcsStatusLanBridgeAddressTableEntryVlanId' => '1.3.6.1.4.1.2356.11.1.31.1.1.7',
  'lcsStatusLanBridgeAddressTableEntryBridgeGroup' => '1.3.6.1.4.1.2356.11.1.31.1.1.8',
  'lcsStatusLanBridgeAddressTableEntryBridgeGroupDefinition' => 'LCOS-MIB::lcsStatusLanBridgeAddressTableEntryBridgeGroup',
  'lcsStatusLanBridgeAddressTableEntryPort' => '1.3.6.1.4.1.2356.11.1.31.1.1.9',
  'lcsStatusLanBridgeIsolatedMode' => '1.3.6.1.4.1.2356.11.1.31.8',
  'lcsStatusLanBridgeIsolatedModeDefinition' => 'LCOS-MIB::lcsStatusLanBridgeIsolatedMode',
  'lcsStatusLanBridgeConnectionTableTable' => '1.3.6.1.4.1.2356.11.1.31.9',
  'lcsStatusLanBridgeConnectionTableEntry' => '1.3.6.1.4.1.2356.11.1.31.9.1',
  'lcsStatusLanBridgeConnectionTableEntryIndex' => '1.3.6.1.4.1.2356.11.1.31.9.1.1',
  'lcsStatusLanBridgeConnectionTableEntryProtocol' => '1.3.6.1.4.1.2356.11.1.31.9.1.3',
  'lcsStatusLanBridgeConnectionTableEntrySubProtocol' => '1.3.6.1.4.1.2356.11.1.31.9.1.4',
  'lcsStatusLanBridgeConnectionTableEntrySourceAddress' => '1.3.6.1.4.1.2356.11.1.31.9.1.5',
  'lcsStatusLanBridgeConnectionTableEntrySourcePort' => '1.3.6.1.4.1.2356.11.1.31.9.1.6',
  'lcsStatusLanBridgeConnectionTableEntryDestPort' => '1.3.6.1.4.1.2356.11.1.31.9.1.7',
  'lcsStatusLanBridgeConnectionTableEntryDestAddress' => '1.3.6.1.4.1.2356.11.1.31.9.1.8',
  'lcsStatusLanBridgeConnectionTableEntryDestMac' => '1.3.6.1.4.1.2356.11.1.31.9.1.9',
  'lcsStatusLanBridgeConnectionTableEntryAge' => '1.3.6.1.4.1.2356.11.1.31.9.1.10',
  'lcsStatusLanBridgeConnectionTableEntryInterface' => '1.3.6.1.4.1.2356.11.1.31.9.1.11',
  'lcsStatusLanBridgeConnectionTableEntryInterfaceDefinition' => 'LCOS-MIB::lcsStatusLanBridgeConnectionTableEntryInterface',
  'lcsStatusLanBridgeConnectionTableEntryName' => '1.3.6.1.4.1.2356.11.1.31.9.1.12',
  'lcsStatusLanBridgeDhcpTableTable' => '1.3.6.1.4.1.2356.11.1.31.10',
  'lcsStatusLanBridgeDhcpTableEntry' => '1.3.6.1.4.1.2356.11.1.31.10.1',
  'lcsStatusLanBridgeDhcpTableEntryMacAddress' => '1.3.6.1.4.1.2356.11.1.31.10.1.1',
  'lcsStatusLanBridgeDhcpTableEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.31.10.1.4',
  'lcsStatusLanBridgeDhcpTableEntryLastUpdate' => '1.3.6.1.4.1.2356.11.1.31.10.1.5',
  'lcsStatusLanBridgeDhcpTableEntryPort' => '1.3.6.1.4.1.2356.11.1.31.10.1.6',
  'lcsStatusLanBridgeDhcpTableEntrySrcPort' => '1.3.6.1.4.1.2356.11.1.31.10.1.7',
  'lcsStatusLanBridgePortDataTable' => '1.3.6.1.4.1.2356.11.1.31.11',
  'lcsStatusLanBridgePortDataEntry' => '1.3.6.1.4.1.2356.11.1.31.11.1',
  'lcsStatusLanBridgePortDataEntryPort' => '1.3.6.1.4.1.2356.11.1.31.11.1.1',
  'lcsStatusLanBridgePortDataEntryPointToPointPort' => '1.3.6.1.4.1.2356.11.1.31.11.1.2',
  'lcsStatusLanBridgePortDataEntryPointToPointPortDefinition' => 'LCOS-MIB::lcsStatusLanBridgePortDataEntryPointToPointPort',
  'lcsStatusLanBridgePortDataEntryOperatingState' => '1.3.6.1.4.1.2356.11.1.31.11.1.3',
  'lcsStatusLanBridgePortDataEntryOperatingStateDefinition' => 'LCOS-MIB::lcsStatusLanBridgePortDataEntryOperatingState',
  'lcsStatusLanBridgePortDataEntryBridgeGroup' => '1.3.6.1.4.1.2356.11.1.31.11.1.5',
  'lcsStatusLanBridgePortDataEntryBridgeGroupDefinition' => 'LCOS-MIB::lcsStatusLanBridgePortDataEntryBridgeGroup',
  'lcsStatusLanBridgePortDataEntryInPackets' => '1.3.6.1.4.1.2356.11.1.31.11.1.6',
  'lcsStatusLanBridgePortDataEntryOutPackets' => '1.3.6.1.4.1.2356.11.1.31.11.1.7',
  'lcsStatusLanBridgePortDataEntryInDiscards' => '1.3.6.1.4.1.2356.11.1.31.11.1.8',
  'lcsStatusLanBridgeSpanningTree' => '1.3.6.1.4.1.2356.11.1.31.20',
  'lcsStatusLanBridgeSpanningTreeOperating' => '1.3.6.1.4.1.2356.11.1.31.20.1',
  'lcsStatusLanBridgeSpanningTreeOperatingDefinition' => 'LCOS-MIB::lcsStatusLanBridgeSpanningTreeOperating',
  'lcsStatusLanBridgeSpanningTreeBridgeId' => '1.3.6.1.4.1.2356.11.1.31.20.2',
  'lcsStatusLanBridgeSpanningTreeRootBridge' => '1.3.6.1.4.1.2356.11.1.31.20.3',
  'lcsStatusLanBridgeSpanningTreeRootPathCost' => '1.3.6.1.4.1.2356.11.1.31.20.5',
  'lcsStatusLanBridgeSpanningTreePortTableTable' => '1.3.6.1.4.1.2356.11.1.31.20.6',
  'lcsStatusLanBridgeSpanningTreePortTableEntry' => '1.3.6.1.4.1.2356.11.1.31.20.6.1',
  'lcsStatusLanBridgeSpanningTreePortTableEntryDescription' => '1.3.6.1.4.1.2356.11.1.31.20.6.1.1',
  'lcsStatusLanBridgeSpanningTreePortTableEntryPriority' => '1.3.6.1.4.1.2356.11.1.31.20.6.1.2',
  'lcsStatusLanBridgeSpanningTreePortTableEntryState' => '1.3.6.1.4.1.2356.11.1.31.20.6.1.3',
  'lcsStatusLanBridgeSpanningTreePortTableEntryStateDefinition' => 'LCOS-MIB::lcsStatusLanBridgeSpanningTreePortTableEntryState',
  'lcsStatusLanBridgeSpanningTreePortTableEntryRoot' => '1.3.6.1.4.1.2356.11.1.31.20.6.1.4',
  'lcsStatusLanBridgeSpanningTreePortTableEntryBridge' => '1.3.6.1.4.1.2356.11.1.31.20.6.1.5',
  'lcsStatusLanBridgeSpanningTreePortTableEntryPathCost' => '1.3.6.1.4.1.2356.11.1.31.20.6.1.6',
  'lcsStatusLanBridgeSpanningTreeProtocolVersion' => '1.3.6.1.4.1.2356.11.1.31.20.7',
  'lcsStatusLanBridgeSpanningTreeProtocolVersionDefinition' => 'LCOS-MIB::lcsStatusLanBridgeSpanningTreeProtocolVersion',
  'lcsStatusLanBridgeSpanningTreePathCostComputation' => '1.3.6.1.4.1.2356.11.1.31.20.8',
  'lcsStatusLanBridgeSpanningTreePathCostComputationDefinition' => 'LCOS-MIB::lcsStatusLanBridgeSpanningTreePathCostComputation',
  'lcsStatusLanBridgeSpanningTreeBridgePriority' => '1.3.6.1.4.1.2356.11.1.31.20.9',
  'lcsStatusLanBridgeSpanningTreeRstpPortTableTable' => '1.3.6.1.4.1.2356.11.1.31.20.10',
  'lcsStatusLanBridgeSpanningTreeRstpPortTableEntry' => '1.3.6.1.4.1.2356.11.1.31.20.10.1',
  'lcsStatusLanBridgeSpanningTreeRstpPortTableEntryDescription' => '1.3.6.1.4.1.2356.11.1.31.20.10.1.1',
  'lcsStatusLanBridgeSpanningTreeRstpPortTableEntryRole' => '1.3.6.1.4.1.2356.11.1.31.20.10.1.2',
  'lcsStatusLanBridgeSpanningTreeRstpPortTableEntryRoleDefinition' => 'LCOS-MIB::lcsStatusLanBridgeSpanningTreeRstpPortTableEntryRole',
  'lcsStatusLanBridgeSpanningTreeRstpPortTableEntryLearning' => '1.3.6.1.4.1.2356.11.1.31.20.10.1.3',
  'lcsStatusLanBridgeSpanningTreeRstpPortTableEntryLearningDefinition' => 'LCOS-MIB::lcsStatusLanBridgeSpanningTreeRstpPortTableEntryLearning',
  'lcsStatusLanBridgeSpanningTreeRstpPortTableEntryForwarding' => '1.3.6.1.4.1.2356.11.1.31.20.10.1.4',
  'lcsStatusLanBridgeSpanningTreeRstpPortTableEntryForwardingDefinition' => 'LCOS-MIB::lcsStatusLanBridgeSpanningTreeRstpPortTableEntryForwarding',
  'lcsStatusLanBridgeSpanningTreeRstpPortTableEntryEdgePort' => '1.3.6.1.4.1.2356.11.1.31.20.10.1.5',
  'lcsStatusLanBridgeSpanningTreeRstpPortTableEntryEdgePortDefinition' => 'LCOS-MIB::lcsStatusLanBridgeSpanningTreeRstpPortTableEntryEdgePort',
  'lcsStatusLanBridgeSpanningTreeRstpPortTableEntryProtocolVersion' => '1.3.6.1.4.1.2356.11.1.31.20.10.1.6',
  'lcsStatusLanBridgeSpanningTreeRstpPortTableEntryProtocolVersionDefinition' => 'LCOS-MIB::lcsStatusLanBridgeSpanningTreeRstpPortTableEntryProtocolVersion',
  'lcsStatusLanBridgeSpanningTreeRstpPortTableEntryPathCost' => '1.3.6.1.4.1.2356.11.1.31.20.10.1.7',
  'lcsStatusLanBridgeSpanningTreeRootPort' => '1.3.6.1.4.1.2356.11.1.31.20.11',
  'lcsStatusLanBridgeSpanningTreeLogTableTable' => '1.3.6.1.4.1.2356.11.1.31.20.12',
  'lcsStatusLanBridgeSpanningTreeLogTableEntry' => '1.3.6.1.4.1.2356.11.1.31.20.12.1',
  'lcsStatusLanBridgeSpanningTreeLogTableEntryIndex' => '1.3.6.1.4.1.2356.11.1.31.20.12.1.1',
  'lcsStatusLanBridgeSpanningTreeLogTableEntryTime' => '1.3.6.1.4.1.2356.11.1.31.20.12.1.2',
  'lcsStatusLanBridgeSpanningTreeLogTableEntryEvent' => '1.3.6.1.4.1.2356.11.1.31.20.12.1.3',
  'lcsStatusLanBridgeIgmpSnooping' => '1.3.6.1.4.1.2356.11.1.31.30',
  'lcsStatusLanBridgeIgmpSnoopingOperating' => '1.3.6.1.4.1.2356.11.1.31.30.1',
  'lcsStatusLanBridgeIgmpSnoopingOperatingDefinition' => 'LCOS-MIB::lcsStatusLanBridgeIgmpSnoopingOperating',
  'lcsStatusLanBridgeIgmpSnoopingPortStatusTable' => '1.3.6.1.4.1.2356.11.1.31.30.2',
  'lcsStatusLanBridgeIgmpSnoopingPortStatusEntry' => '1.3.6.1.4.1.2356.11.1.31.30.2.1',
  'lcsStatusLanBridgeIgmpSnoopingPortStatusEntryPort' => '1.3.6.1.4.1.2356.11.1.31.30.2.1.1',
  'lcsStatusLanBridgeIgmpSnoopingPortStatusEntryRouterPort' => '1.3.6.1.4.1.2356.11.1.31.30.2.1.2',
  'lcsStatusLanBridgeIgmpSnoopingPortStatusEntryRouterPortDefinition' => 'LCOS-MIB::lcsStatusLanBridgeIgmpSnoopingPortStatusEntryRouterPort',
  'lcsStatusLanBridgeIgmpSnoopingPortStatusEntryIpv4Packets' => '1.3.6.1.4.1.2356.11.1.31.30.2.1.10',
  'lcsStatusLanBridgeIgmpSnoopingPortStatusEntryDataPackets' => '1.3.6.1.4.1.2356.11.1.31.30.2.1.12',
  'lcsStatusLanBridgeIgmpSnoopingPortStatusEntryControlPackets' => '1.3.6.1.4.1.2356.11.1.31.30.2.1.13',
  'lcsStatusLanBridgeIgmpSnoopingPortStatusEntryBadPackets' => '1.3.6.1.4.1.2356.11.1.31.30.2.1.14',
  'lcsStatusLanBridgeIgmpSnoopingGroupsTable' => '1.3.6.1.4.1.2356.11.1.31.30.3',
  'lcsStatusLanBridgeIgmpSnoopingGroupsEntry' => '1.3.6.1.4.1.2356.11.1.31.30.3.1',
  'lcsStatusLanBridgeIgmpSnoopingGroupsEntryAddress' => '1.3.6.1.4.1.2356.11.1.31.30.3.1.1',
  'lcsStatusLanBridgeIgmpSnoopingGroupsEntryDynamicMembers' => '1.3.6.1.4.1.2356.11.1.31.30.3.1.2',
  'lcsStatusLanBridgeIgmpSnoopingGroupsEntryStaticMembers' => '1.3.6.1.4.1.2356.11.1.31.30.3.1.3',
  'lcsStatusLanBridgeIgmpSnoopingGroupsEntryVlanId' => '1.3.6.1.4.1.2356.11.1.31.30.3.1.4',
  'lcsStatusLanBridgeIgmpSnoopingGroupsEntryAllowLearning' => '1.3.6.1.4.1.2356.11.1.31.30.3.1.5',
  'lcsStatusLanBridgeIgmpSnoopingGroupsEntryAllowLearningDefinition' => 'LCOS-MIB::lcsStatusLanBridgeIgmpSnoopingGroupsEntryAllowLearning',
  'lcsStatusLanBridgeIgmpSnoopingSimulatedQueriersTable' => '1.3.6.1.4.1.2356.11.1.31.30.4',
  'lcsStatusLanBridgeIgmpSnoopingSimulatedQueriersEntry' => '1.3.6.1.4.1.2356.11.1.31.30.4.1',
  'lcsStatusLanBridgeIgmpSnoopingSimulatedQueriersEntryName' => '1.3.6.1.4.1.2356.11.1.31.30.4.1.1',
  'lcsStatusLanBridgeIgmpSnoopingSimulatedQueriersEntryBridgeGroup' => '1.3.6.1.4.1.2356.11.1.31.30.4.1.3',
  'lcsStatusLanBridgeIgmpSnoopingSimulatedQueriersEntryBridgeGroupDefinition' => 'LCOS-MIB::lcsStatusLanBridgeIgmpSnoopingSimulatedQueriersEntryBridgeGroup',
  'lcsStatusLanBridgeIgmpSnoopingSimulatedQueriersEntryVlanId' => '1.3.6.1.4.1.2356.11.1.31.30.4.1.4',
  'lcsStatusLanBridgeIgmpSnoopingSimulatedQueriersEntryStatus' => '1.3.6.1.4.1.2356.11.1.31.30.4.1.5',
  'lcsStatusLanBridgeIgmpSnoopingSimulatedQueriersEntryStatusDefinition' => 'LCOS-MIB::lcsStatusLanBridgeIgmpSnoopingSimulatedQueriersEntryStatus',
  'lcsStatusLanBridgeIgmpSnoopingIpv4Packets' => '1.3.6.1.4.1.2356.11.1.31.30.10',
  'lcsStatusLanBridgeIgmpSnoopingDataPackets' => '1.3.6.1.4.1.2356.11.1.31.30.12',
  'lcsStatusLanBridgeIgmpSnoopingControlPackets' => '1.3.6.1.4.1.2356.11.1.31.30.13',
  'lcsStatusLanBridgeIgmpSnoopingBadPackets' => '1.3.6.1.4.1.2356.11.1.31.30.14',
  'lcsStatusLanBridgeIgmpSnoopingDeleteValues' => '1.3.6.1.4.1.2356.11.1.31.30.99',
  'lcsStatusLanBridgeDeleteValues' => '1.3.6.1.4.1.2356.11.1.31.99',
  'lcsStatusDhcpClient' => '1.3.6.1.4.1.2356.11.1.32',
  'lcsStatusDhcpClientWanIpListTable' => '1.3.6.1.4.1.2356.11.1.32.20',
  'lcsStatusDhcpClientWanIpListEntry' => '1.3.6.1.4.1.2356.11.1.32.20.1',
  'lcsStatusDhcpClientWanIpListEntryIfc' => '1.3.6.1.4.1.2356.11.1.32.20.1.1',
  'lcsStatusDhcpClientWanIpListEntryIfcDefinition' => 'LCOS-MIB::lcsStatusDhcpClientWanIpListEntryIfc',
  'lcsStatusDhcpClientWanIpListEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.32.20.1.2',
  'lcsStatusDhcpClientWanIpListEntryIpNetmask' => '1.3.6.1.4.1.2356.11.1.32.20.1.3',
  'lcsStatusDhcpClientWanIpListEntryGateway' => '1.3.6.1.4.1.2356.11.1.32.20.1.4',
  'lcsStatusDhcpClientWanIpListEntryDnsDefault' => '1.3.6.1.4.1.2356.11.1.32.20.1.5',
  'lcsStatusDhcpClientWanIpListEntryDnsBackup' => '1.3.6.1.4.1.2356.11.1.32.20.1.6',
  'lcsStatusDhcpClientWanIpListEntryNbnsDefault' => '1.3.6.1.4.1.2356.11.1.32.20.1.7',
  'lcsStatusDhcpClientWanIpListEntryNbnsBackup' => '1.3.6.1.4.1.2356.11.1.32.20.1.8',
  'lcsStatusDhcpClientWanIpListEntryDhcpServer' => '1.3.6.1.4.1.2356.11.1.32.20.1.9',
  'lcsStatusDhcpClientWanIpListEntryDomain' => '1.3.6.1.4.1.2356.11.1.32.20.1.10',
  'lcsStatusDhcpClientLanIpListTable' => '1.3.6.1.4.1.2356.11.1.32.21',
  'lcsStatusDhcpClientLanIpListEntry' => '1.3.6.1.4.1.2356.11.1.32.21.1',
  'lcsStatusDhcpClientLanIpListEntryIfc' => '1.3.6.1.4.1.2356.11.1.32.21.1.1',
  'lcsStatusDhcpClientLanIpListEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.32.21.1.2',
  'lcsStatusDhcpClientLanIpListEntryIpNetmask' => '1.3.6.1.4.1.2356.11.1.32.21.1.3',
  'lcsStatusDhcpClientLanIpListEntryGateway' => '1.3.6.1.4.1.2356.11.1.32.21.1.4',
  'lcsStatusDhcpClientLanIpListEntryDnsDefault' => '1.3.6.1.4.1.2356.11.1.32.21.1.5',
  'lcsStatusDhcpClientLanIpListEntryDnsBackup' => '1.3.6.1.4.1.2356.11.1.32.21.1.6',
  'lcsStatusDhcpClientLanIpListEntryNbnsDefault' => '1.3.6.1.4.1.2356.11.1.32.21.1.7',
  'lcsStatusDhcpClientLanIpListEntryNbnsBackup' => '1.3.6.1.4.1.2356.11.1.32.21.1.8',
  'lcsStatusDhcpClientLanIpListEntryDhcpServer' => '1.3.6.1.4.1.2356.11.1.32.21.1.9',
  'lcsStatusDhcpClientLanIpListEntryDomain' => '1.3.6.1.4.1.2356.11.1.32.21.1.10',
  'lcsStatusIsdn' => '1.3.6.1.4.1.2356.11.1.33',
  'lcsStatusIsdnLine' => '1.3.6.1.4.1.2356.11.1.33.1',
  'lcsStatusIsdnLineS0Table' => '1.3.6.1.4.1.2356.11.1.33.1.1',
  'lcsStatusIsdnLineS0Entry' => '1.3.6.1.4.1.2356.11.1.33.1.1.1',
  'lcsStatusIsdnLineS0EntryIfc' => '1.3.6.1.4.1.2356.11.1.33.1.1.1.1',
  'lcsStatusIsdnLineS0EntryIfcDefinition' => 'LCOS-MIB::lcsStatusIsdnLineS0EntryIfc',
  'lcsStatusIsdnLineS0EntryOperating' => '1.3.6.1.4.1.2356.11.1.33.1.1.1.2',
  'lcsStatusIsdnLineS0EntryOperatingDefinition' => 'LCOS-MIB::lcsStatusIsdnLineS0EntryOperating',
  'lcsStatusIsdnFraming' => '1.3.6.1.4.1.2356.11.1.33.2',
  'lcsStatusIsdnFramingS0Table' => '1.3.6.1.4.1.2356.11.1.33.2.1',
  'lcsStatusIsdnFramingS0Entry' => '1.3.6.1.4.1.2356.11.1.33.2.1.1',
  'lcsStatusIsdnFramingS0EntryIfc' => '1.3.6.1.4.1.2356.11.1.33.2.1.1.1',
  'lcsStatusIsdnFramingS0EntryIfcDefinition' => 'LCOS-MIB::lcsStatusIsdnFramingS0EntryIfc',
  'lcsStatusIsdnFramingS0EntryState' => '1.3.6.1.4.1.2356.11.1.33.2.1.1.2',
  'lcsStatusIsdnFramingS0EntryB1Frame' => '1.3.6.1.4.1.2356.11.1.33.2.1.1.3',
  'lcsStatusIsdnFramingS0EntryB2Frame' => '1.3.6.1.4.1.2356.11.1.33.2.1.1.4',
  'lcsStatusIsdnFramingPcmSyncSource' => '1.3.6.1.4.1.2356.11.1.33.2.2',
  'lcsStatusIsdnSignaling' => '1.3.6.1.4.1.2356.11.1.33.3',
  'lcsStatusIsdnSignalingLayer2' => '1.3.6.1.4.1.2356.11.1.33.3.1',
  'lcsStatusIsdnSignalingLayer2LapdTable' => '1.3.6.1.4.1.2356.11.1.33.3.1.1',
  'lcsStatusIsdnSignalingLayer2LapdEntry' => '1.3.6.1.4.1.2356.11.1.33.3.1.1.1',
  'lcsStatusIsdnSignalingLayer2LapdEntryChannel' => '1.3.6.1.4.1.2356.11.1.33.3.1.1.1.1',
  'lcsStatusIsdnSignalingLayer2LapdEntryChannelDefinition' => 'LCOS-MIB::lcsStatusIsdnSignalingLayer2LapdEntryChannel',
  'lcsStatusIsdnSignalingLayer2LapdEntryTei' => '1.3.6.1.4.1.2356.11.1.33.3.1.1.1.2',
  'lcsStatusIsdnSignalingLayer2LapdEntryTeiDefinition' => 'LCOS-MIB::lcsStatusIsdnSignalingLayer2LapdEntryTei',
  'lcsStatusIsdnSignalingLayer2LapdEntryL2Activation' => '1.3.6.1.4.1.2356.11.1.33.3.1.1.1.3',
  'lcsStatusIsdnSignalingLayer2LapdEntryL2ActivationDefinition' => 'LCOS-MIB::lcsStatusIsdnSignalingLayer2LapdEntryL2Activation',
  'lcsStatusIsdnSignalingLayer2LapdEntryConnections' => '1.3.6.1.4.1.2356.11.1.33.3.1.1.1.4',
  'lcsStatusIsdnSignalingManagement' => '1.3.6.1.4.1.2356.11.1.33.3.3',
  'lcsStatusIsdnSignalingManagementDInfoTable' => '1.3.6.1.4.1.2356.11.1.33.3.3.1',
  'lcsStatusIsdnSignalingManagementDInfoEntry' => '1.3.6.1.4.1.2356.11.1.33.3.3.1.1',
  'lcsStatusIsdnSignalingManagementDInfoEntryChannel' => '1.3.6.1.4.1.2356.11.1.33.3.3.1.1.1',
  'lcsStatusIsdnSignalingManagementDInfoEntryChannelDefinition' => 'LCOS-MIB::lcsStatusIsdnSignalingManagementDInfoEntryChannel',
  'lcsStatusIsdnSignalingManagementDInfoEntryProtocol' => '1.3.6.1.4.1.2356.11.1.33.3.3.1.1.2',
  'lcsStatusIsdnSignalingManagementDInfoEntryProtocolDefinition' => 'LCOS-MIB::lcsStatusIsdnSignalingManagementDInfoEntryProtocol',
  'lcsStatusIsdnSignalingManagementDInfoEntryLayer2' => '1.3.6.1.4.1.2356.11.1.33.3.3.1.1.3',
  'lcsStatusIsdnSignalingManagementDInfoEntryLayer2Definition' => 'LCOS-MIB::lcsStatusIsdnSignalingManagementDInfoEntryLayer2',
  'lcsStatusIsdnSignalingManagementDInfoEntryTei' => '1.3.6.1.4.1.2356.11.1.33.3.3.1.1.4',
  'lcsStatusIsdnSignalingManagementDInfoEntryTeiDefinition' => 'LCOS-MIB::lcsStatusIsdnSignalingManagementDInfoEntryTei',
  'lcsStatusIsdnSignalingManagementDInfoEntryS0Activation' => '1.3.6.1.4.1.2356.11.1.33.3.3.1.1.5',
  'lcsStatusIsdnSignalingManagementDInfoEntryS0ActivationDefinition' => 'LCOS-MIB::lcsStatusIsdnSignalingManagementDInfoEntryS0Activation',
  'lcsStatusIsdnSignalingManagementErrorStatisticTable' => '1.3.6.1.4.1.2356.11.1.33.3.3.2',
  'lcsStatusIsdnSignalingManagementErrorStatisticEntry' => '1.3.6.1.4.1.2356.11.1.33.3.3.2.1',
  'lcsStatusIsdnSignalingManagementErrorStatisticEntryIfc' => '1.3.6.1.4.1.2356.11.1.33.3.3.2.1.1',
  'lcsStatusIsdnSignalingManagementErrorStatisticEntryIfcDefinition' => 'LCOS-MIB::lcsStatusIsdnSignalingManagementErrorStatisticEntryIfc',
  'lcsStatusIsdnSignalingManagementErrorStatisticEntryA' => '1.3.6.1.4.1.2356.11.1.33.3.3.2.1.2',
  'lcsStatusIsdnSignalingManagementErrorStatisticEntryB' => '1.3.6.1.4.1.2356.11.1.33.3.3.2.1.3',
  'lcsStatusIsdnSignalingManagementErrorStatisticEntryC' => '1.3.6.1.4.1.2356.11.1.33.3.3.2.1.4',
  'lcsStatusIsdnSignalingManagementErrorStatisticEntryD' => '1.3.6.1.4.1.2356.11.1.33.3.3.2.1.5',
  'lcsStatusIsdnSignalingManagementErrorStatisticEntryE' => '1.3.6.1.4.1.2356.11.1.33.3.3.2.1.6',
  'lcsStatusIsdnSignalingManagementErrorStatisticEntryF' => '1.3.6.1.4.1.2356.11.1.33.3.3.2.1.7',
  'lcsStatusIsdnSignalingManagementErrorStatisticEntryG' => '1.3.6.1.4.1.2356.11.1.33.3.3.2.1.8',
  'lcsStatusIsdnSignalingManagementErrorStatisticEntryH' => '1.3.6.1.4.1.2356.11.1.33.3.3.2.1.9',
  'lcsStatusIsdnSignalingManagementErrorStatisticEntryI' => '1.3.6.1.4.1.2356.11.1.33.3.3.2.1.10',
  'lcsStatusIsdnSignalingManagementErrorStatisticEntryJ' => '1.3.6.1.4.1.2356.11.1.33.3.3.2.1.11',
  'lcsStatusIsdnSignalingManagementErrorStatisticEntryK' => '1.3.6.1.4.1.2356.11.1.33.3.3.2.1.12',
  'lcsStatusIsdnSignalingManagementErrorStatisticEntryL' => '1.3.6.1.4.1.2356.11.1.33.3.3.2.1.13',
  'lcsStatusIsdnSignalingManagementErrorStatisticEntryM' => '1.3.6.1.4.1.2356.11.1.33.3.3.2.1.14',
  'lcsStatusIsdnSignalingManagementErrorStatisticEntryN' => '1.3.6.1.4.1.2356.11.1.33.3.3.2.1.15',
  'lcsStatusIsdnSignalingManagementErrorStatisticEntryO' => '1.3.6.1.4.1.2356.11.1.33.3.3.2.1.16',
  'lcsStatusIsdnPcmSwitch' => '1.3.6.1.4.1.2356.11.1.33.20',
  'lcsStatusIsdnPcmSwitchPcmConnectionTable' => '1.3.6.1.4.1.2356.11.1.33.20.1',
  'lcsStatusIsdnPcmSwitchPcmConnectionEntry' => '1.3.6.1.4.1.2356.11.1.33.20.1.1',
  'lcsStatusIsdnPcmSwitchPcmConnectionEntryDevice' => '1.3.6.1.4.1.2356.11.1.33.20.1.1.1',
  'lcsStatusIsdnPcmSwitchPcmConnectionEntryType' => '1.3.6.1.4.1.2356.11.1.33.20.1.1.2',
  'lcsStatusIsdnPcmSwitchPcmConnectionEntryTypeDefinition' => 'LCOS-MIB::lcsStatusIsdnPcmSwitchPcmConnectionEntryType',
  'lcsStatusIsdnPcmSwitchPcmConnectionEntryNumber' => '1.3.6.1.4.1.2356.11.1.33.20.1.1.3',
  'lcsStatusIsdnPcmSwitchPcmConnectionEntryFifo' => '1.3.6.1.4.1.2356.11.1.33.20.1.1.4',
  'lcsStatusIsdnPcmSwitchPcmConnectionEntryFlow' => '1.3.6.1.4.1.2356.11.1.33.20.1.1.5',
  'lcsStatusIsdnPcmSwitchPcmConnectionEntryChannel' => '1.3.6.1.4.1.2356.11.1.33.20.1.1.6',
  'lcsStatusIsdnPcmSwitchPcmConnectionEntryTimeslot' => '1.3.6.1.4.1.2356.11.1.33.20.1.1.7',
  'lcsStatusIsdnDeleteValues' => '1.3.6.1.4.1.2356.11.1.33.99',
  'lcsStatusSnmp' => '1.3.6.1.4.1.2356.11.1.35',
  'lcsStatusSnmpEventTable' => '1.3.6.1.4.1.2356.11.1.35.1',
  'lcsStatusSnmpEventEntry' => '1.3.6.1.4.1.2356.11.1.35.1.1',
  'lcsStatusSnmpEventEntryTrapName' => '1.3.6.1.4.1.2356.11.1.35.1.1.1',
  'lcsStatusSnmpEventEntryTrapNameDefinition' => 'LCOS-MIB::lcsStatusSnmpEventEntryTrapName',
  'lcsStatusSnmpEventEntryVendorName' => '1.3.6.1.4.1.2356.11.1.35.1.1.2',
  'lcsStatusSnmpEventEntryVendorNameDefinition' => 'LCOS-MIB::lcsStatusSnmpEventEntryVendorName',
  'lcsStatusSnmpEventEntryCount' => '1.3.6.1.4.1.2356.11.1.35.1.1.3',
  'lcsStatusSnmpRejectedRequests' => '1.3.6.1.4.1.2356.11.1.35.2',
  'lcsStatusSnmpQueueBlockErrors' => '1.3.6.1.4.1.2356.11.1.35.3',
  'lcsStatusSnmpDroppedPackets' => '1.3.6.1.4.1.2356.11.1.35.4',
  'lcsStatusSnmpLogTableTable' => '1.3.6.1.4.1.2356.11.1.35.6',
  'lcsStatusSnmpLogTableEntry' => '1.3.6.1.4.1.2356.11.1.35.6.1',
  'lcsStatusSnmpLogTableEntryIndex' => '1.3.6.1.4.1.2356.11.1.35.6.1.1',
  'lcsStatusSnmpLogTableEntryTime' => '1.3.6.1.4.1.2356.11.1.35.6.1.2',
  'lcsStatusSnmpLogTableEntryEvent' => '1.3.6.1.4.1.2356.11.1.35.6.1.3',
  'lcsStatusAdsl' => '1.3.6.1.4.1.2356.11.1.41',
  'lcsStatusAdslLineState' => '1.3.6.1.4.1.2356.11.1.41.1',
  'lcsStatusAdslLineStateDefinition' => 'LCOS-MIB::lcsStatusAdslLineState',
  'lcsStatusAdslLineType' => '1.3.6.1.4.1.2356.11.1.41.2',
  'lcsStatusAdslStandard' => '1.3.6.1.4.1.2356.11.1.41.3',
  'lcsStatusAdslStandardDefinition' => 'LCOS-MIB::lcsStatusAdslStandard',
  'lcsStatusAdslDataRateUpstreamKbps' => '1.3.6.1.4.1.2356.11.1.41.4',
  'lcsStatusAdslDataRateDownstreamKbps' => '1.3.6.1.4.1.2356.11.1.41.5',
  'lcsStatusAdslSnrDownstreamDb' => '1.3.6.1.4.1.2356.11.1.41.6',
  'lcsStatusAdslSnrUpstreamDb' => '1.3.6.1.4.1.2356.11.1.41.7',
  'lcsStatusAdslAttenuationDownstreamDb' => '1.3.6.1.4.1.2356.11.1.41.8',
  'lcsStatusAdslAttenuationUpstreamDb' => '1.3.6.1.4.1.2356.11.1.41.9',
  'lcsStatusAdslInterleaveUpstreamMs' => '1.3.6.1.4.1.2356.11.1.41.10',
  'lcsStatusAdslInterleaveDownstreamMs' => '1.3.6.1.4.1.2356.11.1.41.11',
  'lcsStatusAdslConnectionHistoryTable' => '1.3.6.1.4.1.2356.11.1.41.12',
  'lcsStatusAdslConnectionHistoryEntry' => '1.3.6.1.4.1.2356.11.1.41.12.1',
  'lcsStatusAdslConnectionHistoryEntrySyncTime' => '1.3.6.1.4.1.2356.11.1.41.12.1.1',
  'lcsStatusAdslConnectionHistoryEntryStandard' => '1.3.6.1.4.1.2356.11.1.41.12.1.2',
  'lcsStatusAdslConnectionHistoryEntryStandardDefinition' => 'LCOS-MIB::lcsStatusAdslConnectionHistoryEntryStandard',
  'lcsStatusAdslConnectionHistoryEntryDsDatarate' => '1.3.6.1.4.1.2356.11.1.41.12.1.3',
  'lcsStatusAdslConnectionHistoryEntryUsDatarate' => '1.3.6.1.4.1.2356.11.1.41.12.1.4',
  'lcsStatusAdslConnectionHistoryEntryDsAttenuation' => '1.3.6.1.4.1.2356.11.1.41.12.1.5',
  'lcsStatusAdslConnectionHistoryEntryDsSnr' => '1.3.6.1.4.1.2356.11.1.41.12.1.6',
  'lcsStatusAdslConnectionHistoryEntryDisconnectTime' => '1.3.6.1.4.1.2356.11.1.41.12.1.7',
  'lcsStatusAdslConnectionHistoryEntryIndex' => '1.3.6.1.4.1.2356.11.1.41.12.1.8',
  'lcsStatusAdslConnectionHistoryEntryReason' => '1.3.6.1.4.1.2356.11.1.41.12.1.9',
  'lcsStatusAdslConnectionHistoryEntryReasonDefinition' => 'LCOS-MIB::lcsStatusAdslConnectionHistoryEntryReason',
  'lcsStatusAdslConnectionHistoryEntryUsAttenuation' => '1.3.6.1.4.1.2356.11.1.41.12.1.10',
  'lcsStatusAdslConnectionHistoryEntryUsSnr' => '1.3.6.1.4.1.2356.11.1.41.12.1.11',
  'lcsStatusAdslRetrain' => '1.3.6.1.4.1.2356.11.1.41.13',
  'lcsStatusAdslDslamChipsetManufacturer' => '1.3.6.1.4.1.2356.11.1.41.14',
  'lcsStatusAdslModemType' => '1.3.6.1.4.1.2356.11.1.41.23',
  'lcsStatusAdslAdvanced' => '1.3.6.1.4.1.2356.11.1.41.25',
  'lcsStatusAdslAdvancedLineState' => '1.3.6.1.4.1.2356.11.1.41.25.1',
  'lcsStatusAdslAdvancedLineStateDefinition' => 'LCOS-MIB::lcsStatusAdslAdvancedLineState',
  'lcsStatusAdslAdvancedStandard' => '1.3.6.1.4.1.2356.11.1.41.25.2',
  'lcsStatusAdslAdvancedStandardDefinition' => 'LCOS-MIB::lcsStatusAdslAdvancedStandard',
  'lcsStatusAdslAdvancedDsDataRateKbps' => '1.3.6.1.4.1.2356.11.1.41.25.3',
  'lcsStatusAdslAdvancedDsSnrMarginDb' => '1.3.6.1.4.1.2356.11.1.41.25.4',
  'lcsStatusAdslAdvancedDsLineAttenuationDb' => '1.3.6.1.4.1.2356.11.1.41.25.5',
  'lcsStatusAdslAdvancedDsInterleaveMs' => '1.3.6.1.4.1.2356.11.1.41.25.6',
  'lcsStatusAdslAdvancedDsBitLoadingTable' => '1.3.6.1.4.1.2356.11.1.41.25.13',
  'lcsStatusAdslAdvancedDsBitLoadingEntry' => '1.3.6.1.4.1.2356.11.1.41.25.13.1',
  'lcsStatusAdslAdvancedDsBitLoadingEntryBinNumber' => '1.3.6.1.4.1.2356.11.1.41.25.13.1.1',
  'lcsStatusAdslAdvancedDsBitLoadingEntryX0' => '1.3.6.1.4.1.2356.11.1.41.25.13.1.2',
  'lcsStatusAdslAdvancedDsBitLoadingEntryX1' => '1.3.6.1.4.1.2356.11.1.41.25.13.1.3',
  'lcsStatusAdslAdvancedDsBitLoadingEntryX2' => '1.3.6.1.4.1.2356.11.1.41.25.13.1.4',
  'lcsStatusAdslAdvancedDsBitLoadingEntryX3' => '1.3.6.1.4.1.2356.11.1.41.25.13.1.5',
  'lcsStatusAdslAdvancedDsBitLoadingEntryX4' => '1.3.6.1.4.1.2356.11.1.41.25.13.1.6',
  'lcsStatusAdslAdvancedDsBitLoadingEntryX5' => '1.3.6.1.4.1.2356.11.1.41.25.13.1.7',
  'lcsStatusAdslAdvancedDsBitLoadingEntryX6' => '1.3.6.1.4.1.2356.11.1.41.25.13.1.8',
  'lcsStatusAdslAdvancedDsBitLoadingEntryX7' => '1.3.6.1.4.1.2356.11.1.41.25.13.1.9',
  'lcsStatusAdslAdvancedDsBitLoadingEntryX8' => '1.3.6.1.4.1.2356.11.1.41.25.13.1.10',
  'lcsStatusAdslAdvancedDsBitLoadingEntryX9' => '1.3.6.1.4.1.2356.11.1.41.25.13.1.11',
  'lcsStatusAdslAdvancedDsBitLoadingEntryGraph' => '1.3.6.1.4.1.2356.11.1.41.25.13.1.12',
  'lcsStatusAdslAdvancedUsDataRateKbps' => '1.3.6.1.4.1.2356.11.1.41.25.15',
  'lcsStatusAdslAdvancedUsSnrMarginDb' => '1.3.6.1.4.1.2356.11.1.41.25.16',
  'lcsStatusAdslAdvancedUsLineAttenuationDb' => '1.3.6.1.4.1.2356.11.1.41.25.17',
  'lcsStatusAdslAdvancedUsInterleaveMs' => '1.3.6.1.4.1.2356.11.1.41.25.18',
  'lcsStatusAdslAdvancedUsBitLoadingTable' => '1.3.6.1.4.1.2356.11.1.41.25.25',
  'lcsStatusAdslAdvancedUsBitLoadingEntry' => '1.3.6.1.4.1.2356.11.1.41.25.25.1',
  'lcsStatusAdslAdvancedUsBitLoadingEntryBinNumber' => '1.3.6.1.4.1.2356.11.1.41.25.25.1.1',
  'lcsStatusAdslAdvancedUsBitLoadingEntryX0' => '1.3.6.1.4.1.2356.11.1.41.25.25.1.2',
  'lcsStatusAdslAdvancedUsBitLoadingEntryX1' => '1.3.6.1.4.1.2356.11.1.41.25.25.1.3',
  'lcsStatusAdslAdvancedUsBitLoadingEntryX2' => '1.3.6.1.4.1.2356.11.1.41.25.25.1.4',
  'lcsStatusAdslAdvancedUsBitLoadingEntryX3' => '1.3.6.1.4.1.2356.11.1.41.25.25.1.5',
  'lcsStatusAdslAdvancedUsBitLoadingEntryX4' => '1.3.6.1.4.1.2356.11.1.41.25.25.1.6',
  'lcsStatusAdslAdvancedUsBitLoadingEntryX5' => '1.3.6.1.4.1.2356.11.1.41.25.25.1.7',
  'lcsStatusAdslAdvancedUsBitLoadingEntryX6' => '1.3.6.1.4.1.2356.11.1.41.25.25.1.8',
  'lcsStatusAdslAdvancedUsBitLoadingEntryX7' => '1.3.6.1.4.1.2356.11.1.41.25.25.1.9',
  'lcsStatusAdslAdvancedUsBitLoadingEntryX8' => '1.3.6.1.4.1.2356.11.1.41.25.25.1.10',
  'lcsStatusAdslAdvancedUsBitLoadingEntryX9' => '1.3.6.1.4.1.2356.11.1.41.25.25.1.11',
  'lcsStatusAdslAdvancedUsBitLoadingEntryGraph' => '1.3.6.1.4.1.2356.11.1.41.25.25.1.12',
  'lcsStatusAdslAdvancedRetrain' => '1.3.6.1.4.1.2356.11.1.41.25.26',
  'lcsStatusAdslAdvancedDslamManufacturer' => '1.3.6.1.4.1.2356.11.1.41.25.41',
  'lcsStatusAdslAdvancedDslamVersion' => '1.3.6.1.4.1.2356.11.1.41.25.42',
  'lcsStatusAdslAdvancedDslamSerialNumber' => '1.3.6.1.4.1.2356.11.1.41.25.43',
  'lcsStatusAdslAdvancedDslamChipsetManufacturer' => '1.3.6.1.4.1.2356.11.1.41.25.44',
  'lcsStatusAdslAdvancedDsAttainableDataRateKbps' => '1.3.6.1.4.1.2356.11.1.41.25.100',
  'lcsStatusAdslAdvancedDsInpSymbols' => '1.3.6.1.4.1.2356.11.1.41.25.101',
  'lcsStatusAdslAdvancedDsCrcErrors' => '1.3.6.1.4.1.2356.11.1.41.25.102',
  'lcsStatusAdslAdvancedDsFecErrors' => '1.3.6.1.4.1.2356.11.1.41.25.103',
  'lcsStatusAdslAdvancedDsAtmHecErrors' => '1.3.6.1.4.1.2356.11.1.41.25.104',
  'lcsStatusAdslAdvancedDsDataPathCrcpErrors' => '1.3.6.1.4.1.2356.11.1.41.25.105',
  'lcsStatusAdslAdvancedDsDataPathCrcnpErrors' => '1.3.6.1.4.1.2356.11.1.41.25.106',
  'lcsStatusAdslAdvancedDsDataPathCvpErrors' => '1.3.6.1.4.1.2356.11.1.41.25.107',
  'lcsStatusAdslAdvancedDsDataPathCvnpErrors' => '1.3.6.1.4.1.2356.11.1.41.25.108',
  'lcsStatusAdslAdvancedDsAtmIdleBitErrors' => '1.3.6.1.4.1.2356.11.1.41.25.109',
  'lcsStatusAdslAdvancedDsAtmCells' => '1.3.6.1.4.1.2356.11.1.41.25.110',
  'lcsStatusAdslAdvancedUsAttainableDataRateKbps' => '1.3.6.1.4.1.2356.11.1.41.25.120',
  'lcsStatusAdslAdvancedUsInpSymbols' => '1.3.6.1.4.1.2356.11.1.41.25.121',
  'lcsStatusAdslAdvancedUsCrcErrors' => '1.3.6.1.4.1.2356.11.1.41.25.122',
  'lcsStatusAdslAdvancedUsFecErrors' => '1.3.6.1.4.1.2356.11.1.41.25.123',
  'lcsStatusAdslAdvancedUsAtmHecErrors' => '1.3.6.1.4.1.2356.11.1.41.25.124',
  'lcsStatusAdslAdvancedUsDataPathCrcpErrors' => '1.3.6.1.4.1.2356.11.1.41.25.125',
  'lcsStatusAdslAdvancedUsDataPathCrcnpErrors' => '1.3.6.1.4.1.2356.11.1.41.25.126',
  'lcsStatusAdslAdvancedUsDataPathCvpErrors' => '1.3.6.1.4.1.2356.11.1.41.25.127',
  'lcsStatusAdslAdvancedUsDataPathCvnpErrors' => '1.3.6.1.4.1.2356.11.1.41.25.128',
  'lcsStatusAdslAdvancedUsAtmIdleBitErrors' => '1.3.6.1.4.1.2356.11.1.41.25.129',
  'lcsStatusAdslAdvancedUsAtmCells' => '1.3.6.1.4.1.2356.11.1.41.25.130',
  'lcsStatusAdslAdvancedWanTxPacketCount' => '1.3.6.1.4.1.2356.11.1.41.25.140',
  'lcsStatusAdslAdvancedWanTxPacketBytes' => '1.3.6.1.4.1.2356.11.1.41.25.141',
  'lcsStatusAdslAdvancedWanTxPacketErrors' => '1.3.6.1.4.1.2356.11.1.41.25.142',
  'lcsStatusAdslAdvancedWanTxPacketDrops' => '1.3.6.1.4.1.2356.11.1.41.25.143',
  'lcsStatusAdslAdvancedWanTxOverruns' => '1.3.6.1.4.1.2356.11.1.41.25.144',
  'lcsStatusAdslAdvancedWanRxPacketCount' => '1.3.6.1.4.1.2356.11.1.41.25.150',
  'lcsStatusAdslAdvancedWanRxPacketBytes' => '1.3.6.1.4.1.2356.11.1.41.25.151',
  'lcsStatusAdslAdvancedWanRxPacketErrors' => '1.3.6.1.4.1.2356.11.1.41.25.152',
  'lcsStatusAdslAdvancedWanRxPacketDrops' => '1.3.6.1.4.1.2356.11.1.41.25.153',
  'lcsStatusAdslAdvancedWanRxOverruns' => '1.3.6.1.4.1.2356.11.1.41.25.154',
  'lcsStatusAdslInpDownstreamSymbols' => '1.3.6.1.4.1.2356.11.1.41.34',
  'lcsStatusAdslInpUpstreamSymbols' => '1.3.6.1.4.1.2356.11.1.41.35',
  'lcsStatusAdslAttainableDataRateDownstreamKbps' => '1.3.6.1.4.1.2356.11.1.41.36',
  'lcsStatusAdslAttainableDataRateUpstreamKbps' => '1.3.6.1.4.1.2356.11.1.41.37',
  'lcsStatusAdslDslamManufacturer' => '1.3.6.1.4.1.2356.11.1.41.41',
  'lcsStatusAdslDslamVersion' => '1.3.6.1.4.1.2356.11.1.41.42',
  'lcsStatusAdslDslamSerialNumber' => '1.3.6.1.4.1.2356.11.1.41.43',
  'lcsStatusAdslModem' => '1.3.6.1.4.1.2356.11.1.41.500',
  'lcsStatusAdslModemModemState' => '1.3.6.1.4.1.2356.11.1.41.500.1',
  'lcsStatusAdslModemModemStateDefinition' => 'LCOS-MIB::lcsStatusAdslModemModemState',
  'lcsStatusAdslModemOptions' => '1.3.6.1.4.1.2356.11.1.41.500.2',
  'lcsStatusAdslModemMemoryTest' => '1.3.6.1.4.1.2356.11.1.41.500.3',
  'lcsStatusAdslModemMemoryTestDefinition' => 'LCOS-MIB::lcsStatusAdslModemMemoryTest',
  'lcsStatusAdslModemRebootModem' => '1.3.6.1.4.1.2356.11.1.41.500.4',
  'lcsStatusAdslModemLink' => '1.3.6.1.4.1.2356.11.1.41.500.5',
  'lcsStatusAdslModemLastError' => '1.3.6.1.4.1.2356.11.1.41.500.6',
  'lcsStatusAdslModemAdslPotsFirmware' => '1.3.6.1.4.1.2356.11.1.41.500.8',
  'lcsStatusAdslModemAdslIsdnFirmware' => '1.3.6.1.4.1.2356.11.1.41.500.9',
  'lcsStatusAdslModemDslApiVersion' => '1.3.6.1.4.1.2356.11.1.41.500.10',
  'lcsStatusAdslModemDspFirmwareVersion' => '1.3.6.1.4.1.2356.11.1.41.500.11',
  'lcsStatusAdslModemHardwareVersion' => '1.3.6.1.4.1.2356.11.1.41.500.12',
  'lcsStatusAdslModemChipsetType' => '1.3.6.1.4.1.2356.11.1.41.500.13',
  'lcsStatusAdslModemDriverVersion' => '1.3.6.1.4.1.2356.11.1.41.500.14',
  'lcsStatusAdslModemBootCount' => '1.3.6.1.4.1.2356.11.1.41.500.15',
  'lcsStatusAdslModemHybrid' => '1.3.6.1.4.1.2356.11.1.41.500.16',
  'lcsStatusAdslModemHybridDefinition' => 'LCOS-MIB::lcsStatusAdslModemHybrid',
  'lcsStatusAdslModemDefaultLineType' => '1.3.6.1.4.1.2356.11.1.41.500.20',
  'lcsStatusAdslModemDefaultLineTypeDefinition' => 'LCOS-MIB::lcsStatusAdslModemDefaultLineType',
  'lcsStatusMail' => '1.3.6.1.4.1.2356.11.1.43',
  'lcsStatusMailBufferedMails' => '1.3.6.1.4.1.2356.11.1.43.1',
  'lcsStatusMailSentMails' => '1.3.6.1.4.1.2356.11.1.43.2',
  'lcsStatusMailDiscardedMails' => '1.3.6.1.4.1.2356.11.1.43.3',
  'lcsStatusMailClearBuffer' => '1.3.6.1.4.1.2356.11.1.43.4',
  'lcsStatusMailDeleteStatistics' => '1.3.6.1.4.1.2356.11.1.43.5',
  'lcsStatusPublicSpot' => '1.3.6.1.4.1.2356.11.1.44',
  'lcsStatusPublicSpotStationTableTable' => '1.3.6.1.4.1.2356.11.1.44.1',
  'lcsStatusPublicSpotStationTableEntry' => '1.3.6.1.4.1.2356.11.1.44.1.1',
  'lcsStatusPublicSpotStationTableEntryMacAddress' => '1.3.6.1.4.1.2356.11.1.44.1.1.1',
  'lcsStatusPublicSpotStationTableEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.44.1.1.2',
  'lcsStatusPublicSpotStationTableEntryName' => '1.3.6.1.4.1.2356.11.1.44.1.1.3',
  'lcsStatusPublicSpotStationTableEntryProvider' => '1.3.6.1.4.1.2356.11.1.44.1.1.4',
  'lcsStatusPublicSpotStationTableEntryTxBytes' => '1.3.6.1.4.1.2356.11.1.44.1.1.5',
  'lcsStatusPublicSpotStationTableEntryRxBytes' => '1.3.6.1.4.1.2356.11.1.44.1.1.6',
  'lcsStatusPublicSpotStationTableEntryTxPackets' => '1.3.6.1.4.1.2356.11.1.44.1.1.7',
  'lcsStatusPublicSpotStationTableEntryRxPackets' => '1.3.6.1.4.1.2356.11.1.44.1.1.8',
  'lcsStatusPublicSpotStationTableEntryLoginTime' => '1.3.6.1.4.1.2356.11.1.44.1.1.9',
  'lcsStatusPublicSpotStationTableEntryState' => '1.3.6.1.4.1.2356.11.1.44.1.1.10',
  'lcsStatusPublicSpotStationTableEntryStateDefinition' => 'LCOS-MIB::lcsStatusPublicSpotStationTableEntryState',
  'lcsStatusPublicSpotStationTableEntrySessionId' => '1.3.6.1.4.1.2356.11.1.44.1.1.11',
  'lcsStatusPublicSpotStationTableEntrySecExpire' => '1.3.6.1.4.1.2356.11.1.44.1.1.12',
  'lcsStatusPublicSpotStationTableEntryVolExpire' => '1.3.6.1.4.1.2356.11.1.44.1.1.13',
  'lcsStatusPublicSpotStationTableEntryAccCycle' => '1.3.6.1.4.1.2356.11.1.44.1.1.14',
  'lcsStatusPublicSpotStationTableEntryIdleTimeout' => '1.3.6.1.4.1.2356.11.1.44.1.1.16',
  'lcsStatusPublicSpotStationTableEntryTxLimit' => '1.3.6.1.4.1.2356.11.1.44.1.1.17',
  'lcsStatusPublicSpotStationTableEntryRxLimit' => '1.3.6.1.4.1.2356.11.1.44.1.1.18',
  'lcsStatusPublicSpotStationTableEntryPort' => '1.3.6.1.4.1.2356.11.1.44.1.1.19',
  'lcsStatusPublicSpotStationTableEntryOrigHost' => '1.3.6.1.4.1.2356.11.1.44.1.1.20',
  'lcsStatusPublicSpotDeleteStation' => '1.3.6.1.4.1.2356.11.1.44.2',
  'lcsStatusPublicSpotCleanupTable' => '1.3.6.1.4.1.2356.11.1.44.3',
  'lcsStatusPublicSpotDeleteValues' => '1.3.6.1.4.1.2356.11.1.44.4',
  'lcsStatusPublicSpotDisconnectUser' => '1.3.6.1.4.1.2356.11.1.44.5',
  'lcsStatusPublicSpotLogTableTable' => '1.3.6.1.4.1.2356.11.1.44.6',
  'lcsStatusPublicSpotLogTableEntry' => '1.3.6.1.4.1.2356.11.1.44.6.1',
  'lcsStatusPublicSpotLogTableEntryIndex' => '1.3.6.1.4.1.2356.11.1.44.6.1.1',
  'lcsStatusPublicSpotLogTableEntryTime' => '1.3.6.1.4.1.2356.11.1.44.6.1.2',
  'lcsStatusPublicSpotLogTableEntryEvent' => '1.3.6.1.4.1.2356.11.1.44.6.1.3',
  'lcsStatusPublicSpotRadiusMacCheckCacheTable' => '1.3.6.1.4.1.2356.11.1.44.7',
  'lcsStatusPublicSpotRadiusMacCheckCacheEntry' => '1.3.6.1.4.1.2356.11.1.44.7.1',
  'lcsStatusPublicSpotRadiusMacCheckCacheEntryMacAddress' => '1.3.6.1.4.1.2356.11.1.44.7.1.1',
  'lcsStatusPublicSpotRadiusMacCheckCacheEntryState' => '1.3.6.1.4.1.2356.11.1.44.7.1.2',
  'lcsStatusPublicSpotRadiusMacCheckCacheEntryStateDefinition' => 'LCOS-MIB::lcsStatusPublicSpotRadiusMacCheckCacheEntryState',
  'lcsStatusPublicSpotRadiusMacCheckCacheEntryAge' => '1.3.6.1.4.1.2356.11.1.44.7.1.3',
  'lcsStatusPublicSpotRadiusMacCheckCacheEntryResponseAge' => '1.3.6.1.4.1.2356.11.1.44.7.1.4',
  'lcsStatusPublicSpotFreeNetworksTable' => '1.3.6.1.4.1.2356.11.1.44.30',
  'lcsStatusPublicSpotFreeNetworksEntry' => '1.3.6.1.4.1.2356.11.1.44.30.1',
  'lcsStatusPublicSpotFreeNetworksEntryHostName' => '1.3.6.1.4.1.2356.11.1.44.30.1.1',
  'lcsStatusPublicSpotFreeNetworksEntryAddress' => '1.3.6.1.4.1.2356.11.1.44.30.1.2',
  'lcsStatusPublicSpotFreeNetworksEntryMask' => '1.3.6.1.4.1.2356.11.1.44.30.1.3',
  'lcsStatusPublicSpotFreeNetworksEntryTtl' => '1.3.6.1.4.1.2356.11.1.44.30.1.4',
  'lcsStatusPublicSpotFreeNetworksEntryAge' => '1.3.6.1.4.1.2356.11.1.44.30.1.5',
  'lcsStatusIeee8021x' => '1.3.6.1.4.1.2356.11.1.46',
  'lcsStatusIeee8021xStationTableTable' => '1.3.6.1.4.1.2356.11.1.46.1',
  'lcsStatusIeee8021xStationTableEntry' => '1.3.6.1.4.1.2356.11.1.46.1.1',
  'lcsStatusIeee8021xStationTableEntryMacAddress' => '1.3.6.1.4.1.2356.11.1.46.1.1.1',
  'lcsStatusIeee8021xStationTableEntryAuthIfc' => '1.3.6.1.4.1.2356.11.1.46.1.1.2',
  'lcsStatusIeee8021xStationTableEntrySessionId' => '1.3.6.1.4.1.2356.11.1.46.1.1.3',
  'lcsStatusIeee8021xStationTableEntryPortMode' => '1.3.6.1.4.1.2356.11.1.46.1.1.4',
  'lcsStatusIeee8021xStationTableEntryPortModeDefinition' => 'LCOS-MIB::lcsStatusIeee8021xStationTableEntryPortMode',
  'lcsStatusIeee8021xStationTableEntryPortStatus' => '1.3.6.1.4.1.2356.11.1.46.1.1.5',
  'lcsStatusIeee8021xStationTableEntryPortStatusDefinition' => 'LCOS-MIB::lcsStatusIeee8021xStationTableEntryPortStatus',
  'lcsStatusIeee8021xStationTableEntryUserName' => '1.3.6.1.4.1.2356.11.1.46.1.1.6',
  'lcsStatusIeee8021xStationTableEntryReplyMsg' => '1.3.6.1.4.1.2356.11.1.46.1.1.7',
  'lcsStatusIeee8021xStationTableEntryCommIfc' => '1.3.6.1.4.1.2356.11.1.46.1.1.8',
  'lcsStatusHardwareInfo' => '1.3.6.1.4.1.2356.11.1.47',
  'lcsStatusHardwareInfoCpuType' => '1.3.6.1.4.1.2356.11.1.47.1',
  'lcsStatusHardwareInfoCpuClockMhz' => '1.3.6.1.4.1.2356.11.1.47.2',
  'lcsStatusHardwareInfoCpuLoadPercent' => '1.3.6.1.4.1.2356.11.1.47.3',
  'lcsStatusHardwareInfoTotalMemoryKbytes' => '1.3.6.1.4.1.2356.11.1.47.4',
  'lcsStatusHardwareInfoFreeMemoryKbytes' => '1.3.6.1.4.1.2356.11.1.47.5',
  'lcsStatusHardwareInfoModelNumber' => '1.3.6.1.4.1.2356.11.1.47.6',
  'lcsStatusHardwareInfoSerialNumber' => '1.3.6.1.4.1.2356.11.1.47.7',
  'lcsStatusHardwareInfoBoardRevision' => '1.3.6.1.4.1.2356.11.1.47.8',
  'lcsStatusHardwareInfoSwVersion' => '1.3.6.1.4.1.2356.11.1.47.9',
  'lcsStatusHardwareInfoEthernetSwitchType' => '1.3.6.1.4.1.2356.11.1.47.10',
  'lcsStatusHardwareInfoSecurityEngine' => '1.3.6.1.4.1.2356.11.1.47.11',
  'lcsStatusHardwareInfoSecurityEngineDefinition' => 'LCOS-MIB::lcsStatusHardwareInfoSecurityEngine',
  'lcsStatusHardwareInfoCpuLoad1sPercent' => '1.3.6.1.4.1.2356.11.1.47.12',
  'lcsStatusHardwareInfoCpuLoad5sPercent' => '1.3.6.1.4.1.2356.11.1.47.13',
  'lcsStatusHardwareInfoCpuLoad60sPercent' => '1.3.6.1.4.1.2356.11.1.47.14',
  'lcsStatusHardwareInfoCpuLoad300sPercent' => '1.3.6.1.4.1.2356.11.1.47.15',
  'lcsStatusHardwareInfoSecUnit' => '1.3.6.1.4.1.2356.11.1.47.16',
  'lcsStatusHardwareInfoSecUnitChannelStateTable' => '1.3.6.1.4.1.2356.11.1.47.16.1',
  'lcsStatusHardwareInfoSecUnitChannelStateEntry' => '1.3.6.1.4.1.2356.11.1.47.16.1.1',
  'lcsStatusHardwareInfoSecUnitChannelStateEntryChan' => '1.3.6.1.4.1.2356.11.1.47.16.1.1.1',
  'lcsStatusHardwareInfoSecUnitChannelStateEntryDone' => '1.3.6.1.4.1.2356.11.1.47.16.1.1.2',
  'lcsStatusHardwareInfoSecUnitChannelStateEntryErrirq' => '1.3.6.1.4.1.2356.11.1.47.16.1.1.3',
  'lcsStatusHardwareInfoSecUnitChannelStateEntryOverrun' => '1.3.6.1.4.1.2356.11.1.47.16.1.1.4',
  'lcsStatusHardwareInfoSecUnitChannelStateEntryDoubleFetch' => '1.3.6.1.4.1.2356.11.1.47.16.1.1.5',
  'lcsStatusHardwareInfoSecUnitChannelStateEntrySingleFetch' => '1.3.6.1.4.1.2356.11.1.47.16.1.1.6',
  'lcsStatusHardwareInfoSecUnitChannelStateEntryMasterTranferError' => '1.3.6.1.4.1.2356.11.1.47.16.1.1.7',
  'lcsStatusHardwareInfoSecUnitChannelStateEntryScatGathDLen' => '1.3.6.1.4.1.2356.11.1.47.16.1.1.8',
  'lcsStatusHardwareInfoSecUnitChannelStateEntryFetchpointerZero' => '1.3.6.1.4.1.2356.11.1.47.16.1.1.9',
  'lcsStatusHardwareInfoSecUnitChannelStateEntryIllegalHeader' => '1.3.6.1.4.1.2356.11.1.47.16.1.1.10',
  'lcsStatusHardwareInfoSecUnitChannelStateEntryIllegalAssign' => '1.3.6.1.4.1.2356.11.1.47.16.1.1.11',
  'lcsStatusHardwareInfoSecUnitChannelStateEntryExeunit' => '1.3.6.1.4.1.2356.11.1.47.16.1.1.12',
  'lcsStatusHardwareInfoSecUnitChannelStateEntryGatherBound' => '1.3.6.1.4.1.2356.11.1.47.16.1.1.13',
  'lcsStatusHardwareInfoSecUnitChannelStateEntryGatherLen' => '1.3.6.1.4.1.2356.11.1.47.16.1.1.14',
  'lcsStatusHardwareInfoSecUnitChannelStateEntryScatterBound' => '1.3.6.1.4.1.2356.11.1.47.16.1.1.15',
  'lcsStatusHardwareInfoSecUnitChannelStateEntryScatterLen' => '1.3.6.1.4.1.2356.11.1.47.16.1.1.16',
  'lcsStatusHardwareInfoSecUnitChannelStateEntryOther' => '1.3.6.1.4.1.2356.11.1.47.16.1.1.17',
  'lcsStatusHardwareInfoSecUnitChannelStateEntryChannelReset' => '1.3.6.1.4.1.2356.11.1.47.16.1.1.18',
  'lcsStatusHardwareInfoSecUnitDeleteValues' => '1.3.6.1.4.1.2356.11.1.47.16.2',
  'lcsStatusHardwareInfoSecUnitTestRandomNumbers' => '1.3.6.1.4.1.2356.11.1.47.16.3',
  'lcsStatusHardwareInfoOnboardUsbHub' => '1.3.6.1.4.1.2356.11.1.47.17',
  'lcsStatusHardwareInfoOnboardUsbHubDefinition' => 'LCOS-MIB::lcsStatusHardwareInfoOnboardUsbHub',
  'lcsStatusHardwareInfoTemperatureDegrees' => '1.3.6.1.4.1.2356.11.1.47.20',
  'lcsStatusHardwareInfoPciDeviceListTable' => '1.3.6.1.4.1.2356.11.1.47.30',
  'lcsStatusHardwareInfoPciDeviceListEntry' => '1.3.6.1.4.1.2356.11.1.47.30.1',
  'lcsStatusHardwareInfoPciDeviceListEntryHostBridge' => '1.3.6.1.4.1.2356.11.1.47.30.1.1',
  'lcsStatusHardwareInfoPciDeviceListEntryBus' => '1.3.6.1.4.1.2356.11.1.47.30.1.2',
  'lcsStatusHardwareInfoPciDeviceListEntryDevice' => '1.3.6.1.4.1.2356.11.1.47.30.1.3',
  'lcsStatusHardwareInfoPciDeviceListEntryFunction' => '1.3.6.1.4.1.2356.11.1.47.30.1.4',
  'lcsStatusHardwareInfoPciDeviceListEntryDeviceId' => '1.3.6.1.4.1.2356.11.1.47.30.1.5',
  'lcsStatusHardwareInfoPciDeviceListEntrySubsystemId' => '1.3.6.1.4.1.2356.11.1.47.30.1.6',
  'lcsStatusHardwareInfoPciDeviceListEntryClass' => '1.3.6.1.4.1.2356.11.1.47.30.1.7',
  'lcsStatusHardwareInfoPciDeviceListEntryClassDefinition' => 'LCOS-MIB::lcsStatusHardwareInfoPciDeviceListEntryClass',
  'lcsStatusHardwareInfoPciDeviceListEntryType' => '1.3.6.1.4.1.2356.11.1.47.30.1.8',
  'lcsStatusHardwareInfoPciDeviceListEntryTypeDefinition' => 'LCOS-MIB::lcsStatusHardwareInfoPciDeviceListEntryType',
  'lcsStatusHardwareInfoPciDeviceListEntryInterruptCount' => '1.3.6.1.4.1.2356.11.1.47.30.1.9',
  'lcsStatusHardwareInfoPciClocksTable' => '1.3.6.1.4.1.2356.11.1.47.31',
  'lcsStatusHardwareInfoPciClocksEntry' => '1.3.6.1.4.1.2356.11.1.47.31.1',
  'lcsStatusHardwareInfoPciClocksEntryHostBridge' => '1.3.6.1.4.1.2356.11.1.47.31.1.1',
  'lcsStatusHardwareInfoPciClocksEntryBus' => '1.3.6.1.4.1.2356.11.1.47.31.1.2',
  'lcsStatusHardwareInfoPciClocksEntryClockKhz' => '1.3.6.1.4.1.2356.11.1.47.31.1.3',
  'lcsStatusHardwareInfoAdvErrorReportingLogTable' => '1.3.6.1.4.1.2356.11.1.47.32',
  'lcsStatusHardwareInfoAdvErrorReportingLogEntry' => '1.3.6.1.4.1.2356.11.1.47.32.1',
  'lcsStatusHardwareInfoAdvErrorReportingLogEntryIndex' => '1.3.6.1.4.1.2356.11.1.47.32.1.1',
  'lcsStatusHardwareInfoAdvErrorReportingLogEntryTime' => '1.3.6.1.4.1.2356.11.1.47.32.1.2',
  'lcsStatusHardwareInfoAdvErrorReportingLogEntrySeverity' => '1.3.6.1.4.1.2356.11.1.47.32.1.3',
  'lcsStatusHardwareInfoAdvErrorReportingLogEntrySeverityDefinition' => 'LCOS-MIB::lcsStatusHardwareInfoAdvErrorReportingLogEntrySeverity',
  'lcsStatusHardwareInfoAdvErrorReportingLogEntryMultiple' => '1.3.6.1.4.1.2356.11.1.47.32.1.4',
  'lcsStatusHardwareInfoAdvErrorReportingLogEntryMultipleDefinition' => 'LCOS-MIB::lcsStatusHardwareInfoAdvErrorReportingLogEntryMultiple',
  'lcsStatusHardwareInfoAdvErrorReportingLogEntrySource' => '1.3.6.1.4.1.2356.11.1.47.32.1.5',
  'lcsStatusHardwareInfoAdvErrorReportingLogEntryLayer' => '1.3.6.1.4.1.2356.11.1.47.32.1.6',
  'lcsStatusHardwareInfoAdvErrorReportingLogEntryLayerDefinition' => 'LCOS-MIB::lcsStatusHardwareInfoAdvErrorReportingLogEntryLayer',
  'lcsStatusHardwareInfoAdvErrorReportingLogEntryEvent' => '1.3.6.1.4.1.2356.11.1.47.32.1.7',
  'lcsStatusHardwareInfoModLevel' => '1.3.6.1.4.1.2356.11.1.47.40',
  'lcsStatusHardwareInfoProductionDate' => '1.3.6.1.4.1.2356.11.1.47.41',
  'lcsStatusHardwareInfoWideRangePowerSupplyMv' => '1.3.6.1.4.1.2356.11.1.47.50',
  'lcsStatusChannelTable' => '1.3.6.1.4.1.2356.11.1.48',
  'lcsStatusChannelEntry' => '1.3.6.1.4.1.2356.11.1.48.1',
  'lcsStatusChannelEntryChan' => '1.3.6.1.4.1.2356.11.1.48.1.1',
  'lcsStatusChannelEntryChanDefinition' => 'LCOS-MIB::lcsStatusChannelEntryChan',
  'lcsStatusChannelEntryPlci' => '1.3.6.1.4.1.2356.11.1.48.1.2',
  'lcsStatusChannelEntryBus' => '1.3.6.1.4.1.2356.11.1.48.1.3',
  'lcsStatusChannelEntryState' => '1.3.6.1.4.1.2356.11.1.48.1.4',
  'lcsStatusChannelEntryApp' => '1.3.6.1.4.1.2356.11.1.48.1.5',
  'lcsStatusChannelEntryAppDefinition' => 'LCOS-MIB::lcsStatusChannelEntryApp',
  'lcsStatusChannelEntryConnector' => '1.3.6.1.4.1.2356.11.1.48.1.6',
  'lcsStatusChannelEntryConnectorDefinition' => 'LCOS-MIB::lcsStatusChannelEntryConnector',
  'lcsStatusChannelEntryCause' => '1.3.6.1.4.1.2356.11.1.48.1.7',
  'lcsStatusChannelEntryNumber' => '1.3.6.1.4.1.2356.11.1.48.1.8',
  'lcsStatusChannelEntryCharge' => '1.3.6.1.4.1.2356.11.1.48.1.10',
  'lcsStatusChannelEntryExtra' => '1.3.6.1.4.1.2356.11.1.48.1.11',
  'lcsStatusChannelEntryConnTime' => '1.3.6.1.4.1.2356.11.1.48.1.12',
  'lcsStatusChannelEntryConnStart' => '1.3.6.1.4.1.2356.11.1.48.1.13',
  'lcsStatusChannelEntryIsdnDisplay' => '1.3.6.1.4.1.2356.11.1.48.1.14',
  'lcsStatusChannelEntryPhChan' => '1.3.6.1.4.1.2356.11.1.48.1.15',
  'lcsStatusChannelEntryPptpConns' => '1.3.6.1.4.1.2356.11.1.48.1.16',
  'lcsStatusChannelEntryVpnConns' => '1.3.6.1.4.1.2356.11.1.48.1.17',
  'lcsStatusChannelEntrySubaddress' => '1.3.6.1.4.1.2356.11.1.48.1.18',
  'lcsStatusModemMobile' => '1.3.6.1.4.1.2356.11.1.49',
  'lcsStatusModemMobileModemInfo' => '1.3.6.1.4.1.2356.11.1.49.1',
  'lcsStatusModemMobileConnectInfo' => '1.3.6.1.4.1.2356.11.1.49.2',
  'lcsStatusModemMobileState' => '1.3.6.1.4.1.2356.11.1.49.3',
  'lcsStatusModemMobileStateDefinition' => 'LCOS-MIB::lcsStatusModemMobileState',
  'lcsStatusModemMobileOperating' => '1.3.6.1.4.1.2356.11.1.49.4',
  'lcsStatusModemMobileOperatingDefinition' => 'LCOS-MIB::lcsStatusModemMobileOperating',
  'lcsStatusModemMobileDataRate' => '1.3.6.1.4.1.2356.11.1.49.5',
  'lcsStatusModemMobileSignalDbm' => '1.3.6.1.4.1.2356.11.1.49.6',
  'lcsStatusModemMobileRegistration' => '1.3.6.1.4.1.2356.11.1.49.7',
  'lcsStatusModemMobileRegistrationDefinition' => 'LCOS-MIB::lcsStatusModemMobileRegistration',
  'lcsStatusModemMobileNetwork' => '1.3.6.1.4.1.2356.11.1.49.8',
  'lcsStatusModemMobileNetworkListTable' => '1.3.6.1.4.1.2356.11.1.49.9',
  'lcsStatusModemMobileNetworkListEntry' => '1.3.6.1.4.1.2356.11.1.49.9.1',
  'lcsStatusModemMobileNetworkListEntryNetwork' => '1.3.6.1.4.1.2356.11.1.49.9.1.1',
  'lcsStatusModemMobileNetworkListEntryState' => '1.3.6.1.4.1.2356.11.1.49.9.1.2',
  'lcsStatusModemMobileNetworkListEntryStateDefinition' => 'LCOS-MIB::lcsStatusModemMobileNetworkListEntryState',
  'lcsStatusModemMobileNetworkListEntryMode' => '1.3.6.1.4.1.2356.11.1.49.9.1.3',
  'lcsStatusModemMobileNetworkListEntryNumeric' => '1.3.6.1.4.1.2356.11.1.49.9.1.4',
  'lcsStatusModemMobileScanNetworks' => '1.3.6.1.4.1.2356.11.1.49.10',
  'lcsStatusModemMobileInputPuk' => '1.3.6.1.4.1.2356.11.1.49.11',
  'lcsStatusModemMobileMode' => '1.3.6.1.4.1.2356.11.1.49.12',
  'lcsStatusModemMobileModeDefinition' => 'LCOS-MIB::lcsStatusModemMobileMode',
  'lcsStatusModemMobilePort' => '1.3.6.1.4.1.2356.11.1.49.13',
  'lcsStatusModemMobilePortDefinition' => 'LCOS-MIB::lcsStatusModemMobilePort',
  'lcsStatusModemMobileDroppedTxPackets' => '1.3.6.1.4.1.2356.11.1.49.14',
  'lcsStatusModemMobileHardwareResets' => '1.3.6.1.4.1.2356.11.1.49.15',
  'lcsStatusModemMobileHistoryTable' => '1.3.6.1.4.1.2356.11.1.49.16',
  'lcsStatusModemMobileHistoryEntry' => '1.3.6.1.4.1.2356.11.1.49.16.1',
  'lcsStatusModemMobileHistoryEntryIndex' => '1.3.6.1.4.1.2356.11.1.49.16.1.1',
  'lcsStatusModemMobileHistoryEntryTimestamp' => '1.3.6.1.4.1.2356.11.1.49.16.1.2',
  'lcsStatusModemMobileHistoryEntrySignalDbm' => '1.3.6.1.4.1.2356.11.1.49.16.1.3',
  'lcsStatusModemMobileHistoryEntryNetwork' => '1.3.6.1.4.1.2356.11.1.49.16.1.4',
  'lcsStatusModemMobileHistoryEntryMode' => '1.3.6.1.4.1.2356.11.1.49.16.1.5',
  'lcsStatusModemMobileHistoryEntryModeDefinition' => 'LCOS-MIB::lcsStatusModemMobileHistoryEntryMode',
  'lcsStatusModemMobileHistoryEntryRegistration' => '1.3.6.1.4.1.2356.11.1.49.16.1.6',
  'lcsStatusModemMobileHistoryEntryRegistrationDefinition' => 'LCOS-MIB::lcsStatusModemMobileHistoryEntryRegistration',
  'lcsStatusModemMobileTemperatureStatus' => '1.3.6.1.4.1.2356.11.1.49.17',
  'lcsStatusModemMobileTemperatureStatusDefinition' => 'LCOS-MIB::lcsStatusModemMobileTemperatureStatus',
  'lcsStatusModemMobileTemperatureDegc' => '1.3.6.1.4.1.2356.11.1.49.18',
  'lcsStatusModemMobileSupplyVoltageStatus' => '1.3.6.1.4.1.2356.11.1.49.19',
  'lcsStatusModemMobileSupplyVoltageStatusDefinition' => 'LCOS-MIB::lcsStatusModemMobileSupplyVoltageStatus',
  'lcsStatusModemMobileSupplyVoltageMv' => '1.3.6.1.4.1.2356.11.1.49.20',
  'lcsStatusModemMobilePinStatus' => '1.3.6.1.4.1.2356.11.1.49.21',
  'lcsStatusModemMobileRxTimeouts' => '1.3.6.1.4.1.2356.11.1.49.22',
  'lcsStatusModemMobileSimIdIccid' => '1.3.6.1.4.1.2356.11.1.49.23',
  'lcsStatusModemMobileFallbackTo2g' => '1.3.6.1.4.1.2356.11.1.49.25',
  'lcsStatusModemMobileFallbackTo2gDefinition' => 'LCOS-MIB::lcsStatusModemMobileFallbackTo2g',
  'lcsStatusModemMobileMobileCountryCode' => '1.3.6.1.4.1.2356.11.1.49.26',
  'lcsStatusModemMobileMobileCountryCodeDefinition' => 'LCOS-MIB::lcsStatusModemMobileMobileCountryCode',
  'lcsStatusModemMobileMobileNetworkCode' => '1.3.6.1.4.1.2356.11.1.49.27',
  'lcsStatusModemMobileCellId' => '1.3.6.1.4.1.2356.11.1.49.28',
  'lcsStatusModemMobileLocalAreaCode' => '1.3.6.1.4.1.2356.11.1.49.29',
  'lcsStatusModemMobileRelease' => '1.3.6.1.4.1.2356.11.1.49.30',
  'lcsStatusFileSystem' => '1.3.6.1.4.1.2356.11.1.50',
  'lcsStatusFileSystemContentsTable' => '1.3.6.1.4.1.2356.11.1.50.1',
  'lcsStatusFileSystemContentsEntry' => '1.3.6.1.4.1.2356.11.1.50.1.1',
  'lcsStatusFileSystemContentsEntryName' => '1.3.6.1.4.1.2356.11.1.50.1.1.1',
  'lcsStatusFileSystemContentsEntrySize' => '1.3.6.1.4.1.2356.11.1.50.1.1.2',
  'lcsStatusFileSystemVolumesTable' => '1.3.6.1.4.1.2356.11.1.50.2',
  'lcsStatusFileSystemVolumesEntry' => '1.3.6.1.4.1.2356.11.1.50.2.1',
  'lcsStatusFileSystemVolumesEntryId' => '1.3.6.1.4.1.2356.11.1.50.2.1.1',
  'lcsStatusFileSystemVolumesEntryMountpoints' => '1.3.6.1.4.1.2356.11.1.50.2.1.2',
  'lcsStatusFileSystemVolumesEntryFilesystem' => '1.3.6.1.4.1.2356.11.1.50.2.1.3',
  'lcsStatusFileSystemVolumesEntryUnmountable' => '1.3.6.1.4.1.2356.11.1.50.2.1.4',
  'lcsStatusFileSystemVolumesEntryFree' => '1.3.6.1.4.1.2356.11.1.50.2.1.5',
  'lcsStatusFileSystemVolumesEntrySize' => '1.3.6.1.4.1.2356.11.1.50.2.1.6',
  'lcsStatusFileSystemVolumesEntryFb' => '1.3.6.1.4.1.2356.11.1.50.2.1.7',
  'lcsStatusFileSystemVolumesEntrySb' => '1.3.6.1.4.1.2356.11.1.50.2.1.8',
  'lcsStatusFileSystemUnmount' => '1.3.6.1.4.1.2356.11.1.50.3',
  'lcsStatusEthernetPorts' => '1.3.6.1.4.1.2356.11.1.51',
  'lcsStatusEthernetPortsPortsTable' => '1.3.6.1.4.1.2356.11.1.51.1',
  'lcsStatusEthernetPortsPortsEntry' => '1.3.6.1.4.1.2356.11.1.51.1.1',
  'lcsStatusEthernetPortsPortsEntryPort' => '1.3.6.1.4.1.2356.11.1.51.1.1.1',
  'lcsStatusEthernetPortsPortsEntryPortDefinition' => 'LCOS-MIB::lcsStatusEthernetPortsPortsEntryPort',
  'lcsStatusEthernetPortsPortsEntryLinkActive' => '1.3.6.1.4.1.2356.11.1.51.1.1.3',
  'lcsStatusEthernetPortsPortsEntryLinkActiveDefinition' => 'LCOS-MIB::lcsStatusEthernetPortsPortsEntryLinkActive',
  'lcsStatusEthernetPortsPortsEntryConnector' => '1.3.6.1.4.1.2356.11.1.51.1.1.4',
  'lcsStatusEthernetPortsPortsEntryConnectorDefinition' => 'LCOS-MIB::lcsStatusEthernetPortsPortsEntryConnector',
  'lcsStatusEthernetPortsPortsEntryMdiMode' => '1.3.6.1.4.1.2356.11.1.51.1.1.6',
  'lcsStatusEthernetPortsPortsEntryMdiModeDefinition' => 'LCOS-MIB::lcsStatusEthernetPortsPortsEntryMdiMode',
  'lcsStatusEthernetPortsPortsEntryAssignment' => '1.3.6.1.4.1.2356.11.1.51.1.1.7',
  'lcsStatusEthernetPortsPortsEntryAssignmentDefinition' => 'LCOS-MIB::lcsStatusEthernetPortsPortsEntryAssignment',
  'lcsStatusEthernetPortsPortsEntryFlowControl' => '1.3.6.1.4.1.2356.11.1.51.1.1.8',
  'lcsStatusEthernetPortsPortsEntryFlowControlDefinition' => 'LCOS-MIB::lcsStatusEthernetPortsPortsEntryFlowControl',
  'lcsStatusEthernetPortsPortsEntryPrivateMode' => '1.3.6.1.4.1.2356.11.1.51.1.1.9',
  'lcsStatusEthernetPortsPortsEntryPrivateModeDefinition' => 'LCOS-MIB::lcsStatusEthernetPortsPortsEntryPrivateMode',
  'lcsStatusEthernetPortsPortsEntryAutoNegotiation' => '1.3.6.1.4.1.2356.11.1.51.1.1.10',
  'lcsStatusEthernetPortsPortsEntryAutoNegotiationDefinition' => 'LCOS-MIB::lcsStatusEthernetPortsPortsEntryAutoNegotiation',
  'lcsStatusEthernetPortsPortsEntryDownshift' => '1.3.6.1.4.1.2356.11.1.51.1.1.11',
  'lcsStatusEthernetPortsPortsEntryDownshiftDefinition' => 'LCOS-MIB::lcsStatusEthernetPortsPortsEntryDownshift',
  'lcsStatusEthernetPortsPortsEntryClockRole' => '1.3.6.1.4.1.2356.11.1.51.1.1.12',
  'lcsStatusEthernetPortsPortsEntryClockRoleDefinition' => 'LCOS-MIB::lcsStatusEthernetPortsPortsEntryClockRole',
  'lcsStatusEthernetPortsPortsEntryPowerSaving' => '1.3.6.1.4.1.2356.11.1.51.1.1.13',
  'lcsStatusEthernetPortsPortsEntryPowerSavingDefinition' => 'LCOS-MIB::lcsStatusEthernetPortsPortsEntryPowerSaving',
  'lcsStatusEthernetPortsPortsEntryRemoteFault' => '1.3.6.1.4.1.2356.11.1.51.1.1.14',
  'lcsStatusEthernetPortsPortsEntryRemoteFaultDefinition' => 'LCOS-MIB::lcsStatusEthernetPortsPortsEntryRemoteFault',
  'lcsStatusEthernetPortsCableTest' => '1.3.6.1.4.1.2356.11.1.51.2',
  'lcsStatusEthernetPortsCableTestResultsTable' => '1.3.6.1.4.1.2356.11.1.51.3',
  'lcsStatusEthernetPortsCableTestResultsEntry' => '1.3.6.1.4.1.2356.11.1.51.3.1',
  'lcsStatusEthernetPortsCableTestResultsEntryIfc' => '1.3.6.1.4.1.2356.11.1.51.3.1.1',
  'lcsStatusEthernetPortsCableTestResultsEntryIfcDefinition' => 'LCOS-MIB::lcsStatusEthernetPortsCableTestResultsEntryIfc',
  'lcsStatusEthernetPortsCableTestResultsEntryRxStatus' => '1.3.6.1.4.1.2356.11.1.51.3.1.2',
  'lcsStatusEthernetPortsCableTestResultsEntryRxStatusDefinition' => 'LCOS-MIB::lcsStatusEthernetPortsCableTestResultsEntryRxStatus',
  'lcsStatusEthernetPortsCableTestResultsEntryRxDistance' => '1.3.6.1.4.1.2356.11.1.51.3.1.3',
  'lcsStatusEthernetPortsCableTestResultsEntryTxStatus' => '1.3.6.1.4.1.2356.11.1.51.3.1.4',
  'lcsStatusEthernetPortsCableTestResultsEntryTxStatusDefinition' => 'LCOS-MIB::lcsStatusEthernetPortsCableTestResultsEntryTxStatus',
  'lcsStatusEthernetPortsCableTestResultsEntryTxDistance' => '1.3.6.1.4.1.2356.11.1.51.3.1.5',
  'lcsStatusEthernetPortsCableTestResultsEntryMdi0Status' => '1.3.6.1.4.1.2356.11.1.51.3.1.6',
  'lcsStatusEthernetPortsCableTestResultsEntryMdi0StatusDefinition' => 'LCOS-MIB::lcsStatusEthernetPortsCableTestResultsEntryMdi0Status',
  'lcsStatusEthernetPortsCableTestResultsEntryMdi0Distance' => '1.3.6.1.4.1.2356.11.1.51.3.1.7',
  'lcsStatusEthernetPortsCableTestResultsEntryMdi1Status' => '1.3.6.1.4.1.2356.11.1.51.3.1.8',
  'lcsStatusEthernetPortsCableTestResultsEntryMdi1StatusDefinition' => 'LCOS-MIB::lcsStatusEthernetPortsCableTestResultsEntryMdi1Status',
  'lcsStatusEthernetPortsCableTestResultsEntryMdi1Distance' => '1.3.6.1.4.1.2356.11.1.51.3.1.9',
  'lcsStatusEthernetPortsCableTestResultsEntryMdi2Status' => '1.3.6.1.4.1.2356.11.1.51.3.1.10',
  'lcsStatusEthernetPortsCableTestResultsEntryMdi2StatusDefinition' => 'LCOS-MIB::lcsStatusEthernetPortsCableTestResultsEntryMdi2Status',
  'lcsStatusEthernetPortsCableTestResultsEntryMdi2Distance' => '1.3.6.1.4.1.2356.11.1.51.3.1.11',
  'lcsStatusEthernetPortsCableTestResultsEntryMdi3Status' => '1.3.6.1.4.1.2356.11.1.51.3.1.12',
  'lcsStatusEthernetPortsCableTestResultsEntryMdi3StatusDefinition' => 'LCOS-MIB::lcsStatusEthernetPortsCableTestResultsEntryMdi3Status',
  'lcsStatusEthernetPortsCableTestResultsEntryMdi3Distance' => '1.3.6.1.4.1.2356.11.1.51.3.1.13',
  'lcsStatusEthernetPortsErrorsTable' => '1.3.6.1.4.1.2356.11.1.51.4',
  'lcsStatusEthernetPortsErrorsEntry' => '1.3.6.1.4.1.2356.11.1.51.4.1',
  'lcsStatusEthernetPortsErrorsEntryIfc' => '1.3.6.1.4.1.2356.11.1.51.4.1.1',
  'lcsStatusEthernetPortsErrorsEntryIfcDefinition' => 'LCOS-MIB::lcsStatusEthernetPortsErrorsEntryIfc',
  'lcsStatusEthernetPortsErrorsEntryRxErrors' => '1.3.6.1.4.1.2356.11.1.51.4.1.2',
  'lcsStatusEthernetPortsErrorsEntryTxErrors' => '1.3.6.1.4.1.2356.11.1.51.4.1.3',
  'lcsStatusEthernetPortsErrorsEntryStackErrors' => '1.3.6.1.4.1.2356.11.1.51.4.1.4',
  'lcsStatusEthernetPortsErrorsEntryNicErrors' => '1.3.6.1.4.1.2356.11.1.51.4.1.5',
  'lcsStatusEthernetPortsErrorsEntryQueueErrors' => '1.3.6.1.4.1.2356.11.1.51.4.1.6',
  'lcsStatusEthernetPortsErrorsEntryRxCrcErrors' => '1.3.6.1.4.1.2356.11.1.51.4.1.7',
  'lcsStatusEthernetPortsErrorsEntryCollisions' => '1.3.6.1.4.1.2356.11.1.51.4.1.8',
  'lcsStatusEthernetPortsErrorsEntrySingleCollisions' => '1.3.6.1.4.1.2356.11.1.51.4.1.9',
  'lcsStatusEthernetPortsErrorsEntryMultipleCollisions' => '1.3.6.1.4.1.2356.11.1.51.4.1.10',
  'lcsStatusEthernetPortsErrorsEntryLateCollisions' => '1.3.6.1.4.1.2356.11.1.51.4.1.11',
  'lcsStatusEthernetPortsErrorsEntryExcessiveCollisions' => '1.3.6.1.4.1.2356.11.1.51.4.1.12',
  'lcsStatusEthernetPortsErrorsEntryRxAlignErrors' => '1.3.6.1.4.1.2356.11.1.51.4.1.13',
  'lcsStatusEthernetPortsErrorsEntryRxTooShort' => '1.3.6.1.4.1.2356.11.1.51.4.1.14',
  'lcsStatusEthernetPortsErrorsEntryRxTooLong' => '1.3.6.1.4.1.2356.11.1.51.4.1.15',
  'lcsStatusEthernetPortsErrorsEntryTxCarrier' => '1.3.6.1.4.1.2356.11.1.51.4.1.16',
  'lcsStatusEthernetPortsErrorsEntryTxDeferred' => '1.3.6.1.4.1.2356.11.1.51.4.1.17',
  'lcsStatusEthernetPortsErrorsEntryRxPhyErrors' => '1.3.6.1.4.1.2356.11.1.51.4.1.18',
  'lcsStatusEthernetPortsDeleteValues' => '1.3.6.1.4.1.2356.11.1.51.99',
  'lcsStatusPppoeServer' => '1.3.6.1.4.1.2356.11.1.52',
  'lcsStatusPppoeServerRxPackets' => '1.3.6.1.4.1.2356.11.1.52.1',
  'lcsStatusPppoeServerTxPackets' => '1.3.6.1.4.1.2356.11.1.52.2',
  'lcsStatusPppoeServerDroppedPackets' => '1.3.6.1.4.1.2356.11.1.52.5',
  'lcsStatusPppoeServerRxErrors' => '1.3.6.1.4.1.2356.11.1.52.6',
  'lcsStatusPppoeServerSessionErrors' => '1.3.6.1.4.1.2356.11.1.52.8',
  'lcsStatusPppoeServerConnectionsTable' => '1.3.6.1.4.1.2356.11.1.52.9',
  'lcsStatusPppoeServerConnectionsEntry' => '1.3.6.1.4.1.2356.11.1.52.9.1',
  'lcsStatusPppoeServerConnectionsEntryChannel' => '1.3.6.1.4.1.2356.11.1.52.9.1.1',
  'lcsStatusPppoeServerConnectionsEntryMacAddress' => '1.3.6.1.4.1.2356.11.1.52.9.1.2',
  'lcsStatusPppoeServerConnectionsEntryState' => '1.3.6.1.4.1.2356.11.1.52.9.1.3',
  'lcsStatusPppoeServerConnectionsEntryStateDefinition' => 'LCOS-MIB::lcsStatusPppoeServerConnectionsEntryState',
  'lcsStatusPppoeServerConnectionsEntryLastError' => '1.3.6.1.4.1.2356.11.1.52.9.1.4',
  'lcsStatusPppoeServerConnectionsEntryLastErrorDefinition' => 'LCOS-MIB::lcsStatusPppoeServerConnectionsEntryLastError',
  'lcsStatusPppoeServerConnectionsEntryShTime' => '1.3.6.1.4.1.2356.11.1.52.9.1.5',
  'lcsStatusPppoeServerConnectionsEntryPeerAddress' => '1.3.6.1.4.1.2356.11.1.52.9.1.6',
  'lcsStatusPppoeServerConnectionsEntryConnTime' => '1.3.6.1.4.1.2356.11.1.52.9.1.7',
  'lcsStatusPppoeServerNumConnections' => '1.3.6.1.4.1.2356.11.1.52.10',
  'lcsStatusPppoeServerDeleteValues' => '1.3.6.1.4.1.2356.11.1.52.11',
  'lcsStatusUsb' => '1.3.6.1.4.1.2356.11.1.54',
  'lcsStatusUsbDevicesTable' => '1.3.6.1.4.1.2356.11.1.54.1',
  'lcsStatusUsbDevicesEntry' => '1.3.6.1.4.1.2356.11.1.54.1.1',
  'lcsStatusUsbDevicesEntryBus' => '1.3.6.1.4.1.2356.11.1.54.1.1.1',
  'lcsStatusUsbDevicesEntryAddress' => '1.3.6.1.4.1.2356.11.1.54.1.1.2',
  'lcsStatusUsbDevicesEntryVendor' => '1.3.6.1.4.1.2356.11.1.54.1.1.3',
  'lcsStatusUsbDevicesEntryVendorId' => '1.3.6.1.4.1.2356.11.1.54.1.1.4',
  'lcsStatusUsbDevicesEntryProduct' => '1.3.6.1.4.1.2356.11.1.54.1.1.5',
  'lcsStatusUsbDevicesEntryProductId' => '1.3.6.1.4.1.2356.11.1.54.1.1.6',
  'lcsStatusUsbDevicesEntryDepth' => '1.3.6.1.4.1.2356.11.1.54.1.1.8',
  'lcsStatusUsbDevicesEntrySpeed' => '1.3.6.1.4.1.2356.11.1.54.1.1.9',
  'lcsStatusUsbDevicesEntryInterfaces' => '1.3.6.1.4.1.2356.11.1.54.1.1.10',
  'lcsStatusUsbDevicesEntryPower' => '1.3.6.1.4.1.2356.11.1.54.1.1.11',
  'lcsStatusUsbDevicesEntryDriver' => '1.3.6.1.4.1.2356.11.1.54.1.1.12',
  'lcsStatusUsbDevicesEntryParent' => '1.3.6.1.4.1.2356.11.1.54.1.1.13',
  'lcsStatusUsbReinit' => '1.3.6.1.4.1.2356.11.1.54.2',
  'lcsStatusUsbStatisticsTable' => '1.3.6.1.4.1.2356.11.1.54.3',
  'lcsStatusUsbStatisticsEntry' => '1.3.6.1.4.1.2356.11.1.54.3.1',
  'lcsStatusUsbStatisticsEntryBus' => '1.3.6.1.4.1.2356.11.1.54.3.1.1',
  'lcsStatusUsbStatisticsEntryProduct' => '1.3.6.1.4.1.2356.11.1.54.3.1.2',
  'lcsStatusUsbStatisticsEntryTransactions' => '1.3.6.1.4.1.2356.11.1.54.3.1.3',
  'lcsStatusUsbStatisticsEntryInRetransmissions' => '1.3.6.1.4.1.2356.11.1.54.3.1.10',
  'lcsStatusUsbStatisticsEntryInBabbles' => '1.3.6.1.4.1.2356.11.1.54.3.1.11',
  'lcsStatusUsbStatisticsEntryInBufferErrors' => '1.3.6.1.4.1.2356.11.1.54.3.1.12',
  'lcsStatusUsbStatisticsEntryOutRetransmissions' => '1.3.6.1.4.1.2356.11.1.54.3.1.20',
  'lcsStatusUsbStatisticsEntryOutBabbles' => '1.3.6.1.4.1.2356.11.1.54.3.1.21',
  'lcsStatusUsbStatisticsEntryOutBufferErrors' => '1.3.6.1.4.1.2356.11.1.54.3.1.22',
  'lcsStatusUsbClearStatistics' => '1.3.6.1.4.1.2356.11.1.54.4',
  'lcsStatusUsbQueryHubStatus' => '1.3.6.1.4.1.2356.11.1.54.5',
  'lcsStatusAccounting' => '1.3.6.1.4.1.2356.11.1.56',
  'lcsStatusAccountingCurrentUserTable' => '1.3.6.1.4.1.2356.11.1.56.1',
  'lcsStatusAccountingCurrentUserEntry' => '1.3.6.1.4.1.2356.11.1.56.1.1',
  'lcsStatusAccountingCurrentUserEntryUsername' => '1.3.6.1.4.1.2356.11.1.56.1.1.1',
  'lcsStatusAccountingCurrentUserEntryMacAddress' => '1.3.6.1.4.1.2356.11.1.56.1.1.2',
  'lcsStatusAccountingCurrentUserEntryPeer' => '1.3.6.1.4.1.2356.11.1.56.1.1.3',
  'lcsStatusAccountingCurrentUserEntryConnType' => '1.3.6.1.4.1.2356.11.1.56.1.1.4',
  'lcsStatusAccountingCurrentUserEntryConnTypeDefinition' => 'LCOS-MIB::lcsStatusAccountingCurrentUserEntryConnType',
  'lcsStatusAccountingCurrentUserEntryRxKbytes' => '1.3.6.1.4.1.2356.11.1.56.1.1.5',
  'lcsStatusAccountingCurrentUserEntryTxKbytes' => '1.3.6.1.4.1.2356.11.1.56.1.1.6',
  'lcsStatusAccountingCurrentUserEntryTotalTime' => '1.3.6.1.4.1.2356.11.1.56.1.1.8',
  'lcsStatusAccountingCurrentUserEntryConnections' => '1.3.6.1.4.1.2356.11.1.56.1.1.9',
  'lcsStatusAccountingAccountingListTable' => '1.3.6.1.4.1.2356.11.1.56.2',
  'lcsStatusAccountingAccountingListEntry' => '1.3.6.1.4.1.2356.11.1.56.2.1',
  'lcsStatusAccountingAccountingListEntryUsername' => '1.3.6.1.4.1.2356.11.1.56.2.1.1',
  'lcsStatusAccountingAccountingListEntryMacAddress' => '1.3.6.1.4.1.2356.11.1.56.2.1.2',
  'lcsStatusAccountingAccountingListEntryPeer' => '1.3.6.1.4.1.2356.11.1.56.2.1.3',
  'lcsStatusAccountingAccountingListEntryConnType' => '1.3.6.1.4.1.2356.11.1.56.2.1.4',
  'lcsStatusAccountingAccountingListEntryConnTypeDefinition' => 'LCOS-MIB::lcsStatusAccountingAccountingListEntryConnType',
  'lcsStatusAccountingAccountingListEntryRxKbytes' => '1.3.6.1.4.1.2356.11.1.56.2.1.5',
  'lcsStatusAccountingAccountingListEntryTxKbytes' => '1.3.6.1.4.1.2356.11.1.56.2.1.6',
  'lcsStatusAccountingAccountingListEntryTotalTime' => '1.3.6.1.4.1.2356.11.1.56.2.1.8',
  'lcsStatusAccountingAccountingListEntryConnections' => '1.3.6.1.4.1.2356.11.1.56.2.1.9',
  'lcsStatusAccountingLastSnapshotTable' => '1.3.6.1.4.1.2356.11.1.56.3',
  'lcsStatusAccountingLastSnapshotEntry' => '1.3.6.1.4.1.2356.11.1.56.3.1',
  'lcsStatusAccountingLastSnapshotEntryUsername' => '1.3.6.1.4.1.2356.11.1.56.3.1.1',
  'lcsStatusAccountingLastSnapshotEntryMacAddress' => '1.3.6.1.4.1.2356.11.1.56.3.1.2',
  'lcsStatusAccountingLastSnapshotEntryPeer' => '1.3.6.1.4.1.2356.11.1.56.3.1.3',
  'lcsStatusAccountingLastSnapshotEntryConnType' => '1.3.6.1.4.1.2356.11.1.56.3.1.4',
  'lcsStatusAccountingLastSnapshotEntryConnTypeDefinition' => 'LCOS-MIB::lcsStatusAccountingLastSnapshotEntryConnType',
  'lcsStatusAccountingLastSnapshotEntryRxKbytes' => '1.3.6.1.4.1.2356.11.1.56.3.1.5',
  'lcsStatusAccountingLastSnapshotEntryTxKbytes' => '1.3.6.1.4.1.2356.11.1.56.3.1.6',
  'lcsStatusAccountingLastSnapshotEntryTotalTime' => '1.3.6.1.4.1.2356.11.1.56.3.1.8',
  'lcsStatusAccountingLastSnapshotEntryConnections' => '1.3.6.1.4.1.2356.11.1.56.3.1.9',
  'lcsStatusAccountingDeleteValues' => '1.3.6.1.4.1.2356.11.1.56.4',
  'lcsStatusAccountingTimeLastSnapshotTable' => '1.3.6.1.4.1.2356.11.1.56.5',
  'lcsStatusAccountingTimeLastSnapshotEntry' => '1.3.6.1.4.1.2356.11.1.56.5.1',
  'lcsStatusAccountingTimeLastSnapshotEntrySystemTime' => '1.3.6.1.4.1.2356.11.1.56.5.1.1',
  'lcsStatusWtpMngmt' => '1.3.6.1.4.1.2356.11.1.59',
  'lcsStatusWtpMngmtApConnectionsTable' => '1.3.6.1.4.1.2356.11.1.59.1',
  'lcsStatusWtpMngmtApConnectionsEntry' => '1.3.6.1.4.1.2356.11.1.59.1.1',
  'lcsStatusWtpMngmtApConnectionsEntryConnId' => '1.3.6.1.4.1.2356.11.1.59.1.1.1',
  'lcsStatusWtpMngmtApConnectionsEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.59.1.1.2',
  'lcsStatusWtpMngmtApConnectionsEntryPort' => '1.3.6.1.4.1.2356.11.1.59.1.1.3',
  'lcsStatusWtpMngmtApConnectionsEntryResptime' => '1.3.6.1.4.1.2356.11.1.59.1.1.4',
  'lcsStatusWtpMngmtApConnectionsEntryName' => '1.3.6.1.4.1.2356.11.1.59.1.1.5',
  'lcsStatusWtpMngmtApConnectionsEntryState' => '1.3.6.1.4.1.2356.11.1.59.1.1.6',
  'lcsStatusWtpMngmtApConnectionsEntryStateDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtApConnectionsEntryState',
  'lcsStatusWtpMngmtApConnectionsEntryResult' => '1.3.6.1.4.1.2356.11.1.59.1.1.7',
  'lcsStatusWtpMngmtApConnectionsEntryResultDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtApConnectionsEntryResult',
  'lcsStatusWtpMngmtApConnectionsEntryPriority' => '1.3.6.1.4.1.2356.11.1.59.1.1.8',
  'lcsStatusWtpMngmtApConnectionsEntryPriorityDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtApConnectionsEntryPriority',
  'lcsStatusWtpMngmtApConnectionsEntryUtilisation' => '1.3.6.1.4.1.2356.11.1.59.1.1.9',
  'lcsStatusWtpMngmtApConnectionsEntryFirmwareVersion' => '1.3.6.1.4.1.2356.11.1.59.1.1.10',
  'lcsStatusWtpMngmtApConnectionsEntryPmtu' => '1.3.6.1.4.1.2356.11.1.59.1.1.11',
  'lcsStatusWtpMngmtApConnectionsEntryDscpForControlPackets' => '1.3.6.1.4.1.2356.11.1.59.1.1.12',
  'lcsStatusWtpMngmtApConnectionsEntryDscpForControlPacketsDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtApConnectionsEntryDscpForControlPackets',
  'lcsStatusWtpMngmtApConnectionsEntryDscpForDataPackets' => '1.3.6.1.4.1.2356.11.1.59.1.1.13',
  'lcsStatusWtpMngmtApConnectionsEntryDscpForDataPacketsDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtApConnectionsEntryDscpForDataPackets',
  'lcsStatusWtpMngmtGlobalconfigTable' => '1.3.6.1.4.1.2356.11.1.59.99',
  'lcsStatusWtpMngmtGlobalconfigEntry' => '1.3.6.1.4.1.2356.11.1.59.99.1',
  'lcsStatusWtpMngmtGlobalconfigEntryVersion' => '1.3.6.1.4.1.2356.11.1.59.99.1.1',
  'lcsStatusWtpMngmtGlobalconfigEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.59.99.1.2',
  'lcsStatusWtpMngmtGlobalconfigEntryNetMask' => '1.3.6.1.4.1.2356.11.1.59.99.1.3',
  'lcsStatusWtpMngmtGlobalconfigEntryGateway' => '1.3.6.1.4.1.2356.11.1.59.99.1.4',
  'lcsStatusWtpMngmtGlobalconfigEntryDns1' => '1.3.6.1.4.1.2356.11.1.59.99.1.5',
  'lcsStatusWtpMngmtGlobalconfigEntryDns2' => '1.3.6.1.4.1.2356.11.1.59.99.1.6',
  'lcsStatusWtpMngmtGlobalconfigEntryMgmtVlanid' => '1.3.6.1.4.1.2356.11.1.59.99.1.8',
  'lcsStatusWtpMngmtGlobalconfigEntryMgmtVlantrunk' => '1.3.6.1.4.1.2356.11.1.59.99.1.9',
  'lcsStatusWtpMngmtGlobalconfigEntryDnsSuffix' => '1.3.6.1.4.1.2356.11.1.59.99.1.14',
  'lcsStatusWtpMngmtLastWlcTable' => '1.3.6.1.4.1.2356.11.1.59.100',
  'lcsStatusWtpMngmtLastWlcEntry' => '1.3.6.1.4.1.2356.11.1.59.100.1',
  'lcsStatusWtpMngmtLastWlcEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.59.100.1.1',
  'lcsStatusWtpMngmtLastWlcEntryPort' => '1.3.6.1.4.1.2356.11.1.59.100.1.2',
  'lcsStatusWtpMngmtLastWlcEntryName' => '1.3.6.1.4.1.2356.11.1.59.100.1.3',
  'lcsStatusWtpMngmtLastWlcEntryRoutetag' => '1.3.6.1.4.1.2356.11.1.59.100.1.4',
  'lcsStatusWtpMngmtLastWlcEntryType' => '1.3.6.1.4.1.2356.11.1.59.100.1.5',
  'lcsStatusWtpMngmtLastWlcEntryMgmtVlanId' => '1.3.6.1.4.1.2356.11.1.59.100.1.6',
  'lcsStatusWtpMngmtRadioprofilsTable' => '1.3.6.1.4.1.2356.11.1.59.101',
  'lcsStatusWtpMngmtRadioprofilsEntry' => '1.3.6.1.4.1.2356.11.1.59.101.1',
  'lcsStatusWtpMngmtRadioprofilsEntryName' => '1.3.6.1.4.1.2356.11.1.59.101.1.1',
  'lcsStatusWtpMngmtRadioprofilsEntryCountry' => '1.3.6.1.4.1.2356.11.1.59.101.1.4',
  'lcsStatusWtpMngmtRadioprofilsEntryCountryDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtRadioprofilsEntryCountry',
  'lcsStatusWtpMngmtRadioprofilsEntry24ghzMode' => '1.3.6.1.4.1.2356.11.1.59.101.1.6',
  'lcsStatusWtpMngmtRadioprofilsEntry24ghzModeDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtRadioprofilsEntry24ghzMode',
  'lcsStatusWtpMngmtRadioprofilsEntry5ghzMode' => '1.3.6.1.4.1.2356.11.1.59.101.1.7',
  'lcsStatusWtpMngmtRadioprofilsEntry5ghzModeDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtRadioprofilsEntry5ghzMode',
  'lcsStatusWtpMngmtRadioprofilsEntrySubbands' => '1.3.6.1.4.1.2356.11.1.59.101.1.8',
  'lcsStatusWtpMngmtRadioprofilsEntrySubbandsDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtRadioprofilsEntrySubbands',
  'lcsStatusWtpMngmtRadioprofilsEntryQos' => '1.3.6.1.4.1.2356.11.1.59.101.1.9',
  'lcsStatusWtpMngmtRadioprofilsEntryQosDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtRadioprofilsEntryQos',
  'lcsStatusWtpMngmtRadioprofilsEntryDtimPeriod' => '1.3.6.1.4.1.2356.11.1.59.101.1.10',
  'lcsStatusWtpMngmtRadioprofilsEntryBackgroundScan' => '1.3.6.1.4.1.2356.11.1.59.101.1.11',
  'lcsStatusWtpMngmtRadioprofilsEntryAntennaGain' => '1.3.6.1.4.1.2356.11.1.59.101.1.12',
  'lcsStatusWtpMngmtRadioprofilsEntryTxPowerReduction' => '1.3.6.1.4.1.2356.11.1.59.101.1.13',
  'lcsStatusWtpMngmtRadioprofilsEntryMgmtVLANId' => '1.3.6.1.4.1.2356.11.1.59.101.1.14',
  'lcsStatusWtpMngmtRadioprofilsEntryMgmtVlanTrunk' => '1.3.6.1.4.1.2356.11.1.59.101.1.15',
  'lcsStatusWtpMngmtRadioprofilsEntryIndoorOnlyOperation' => '1.3.6.1.4.1.2356.11.1.59.101.1.16',
  'lcsStatusWtpMngmtRadioprofilsEntryIndoorOnlyOperationDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtRadioprofilsEntryIndoorOnlyOperation',
  'lcsStatusWtpMngmtRadioprofilsEntryMgmtVLANIdnew' => '1.3.6.1.4.1.2356.11.1.59.101.1.19',
  'lcsStatusWtpMngmtRadioprofilsEntryReportSeenClients' => '1.3.6.1.4.1.2356.11.1.59.101.1.20',
  'lcsStatusWtpMngmtRadioprofilsEntryReportSeenClientsDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtRadioprofilsEntryReportSeenClients',
  'lcsStatusWtpMngmtRadioModeTable' => '1.3.6.1.4.1.2356.11.1.59.102',
  'lcsStatusWtpMngmtRadioModeEntry' => '1.3.6.1.4.1.2356.11.1.59.102.1',
  'lcsStatusWtpMngmtRadioModeEntryIndex' => '1.3.6.1.4.1.2356.11.1.59.102.1.1',
  'lcsStatusWtpMngmtRadioModeEntryRadioMode' => '1.3.6.1.4.1.2356.11.1.59.102.1.2',
  'lcsStatusWtpMngmtRadioModeEntryRadioModeDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtRadioModeEntryRadioMode',
  'lcsStatusWtpMngmtRadioModeEntryOperating' => '1.3.6.1.4.1.2356.11.1.59.102.1.3',
  'lcsStatusWtpMngmtRadioModeEntryOperatingDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtRadioModeEntryOperating',
  'lcsStatusWtpMngmtRadioModeEntryChannelList' => '1.3.6.1.4.1.2356.11.1.59.102.1.4',
  'lcsStatusWtpMngmtRadioModeEntryRadioChannel' => '1.3.6.1.4.1.2356.11.1.59.102.1.5',
  'lcsStatusWtpMngmtRadioModeEntryRadioChannelDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtRadioModeEntryRadioChannel',
  'lcsStatusWtpMngmtRadioModeEntryAllow40mhz' => '1.3.6.1.4.1.2356.11.1.59.102.1.6',
  'lcsStatusWtpMngmtRadioModeEntryAllow40mhzDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtRadioModeEntryAllow40mhz',
  'lcsStatusWtpMngmtRadioModeEntryAntennaMask' => '1.3.6.1.4.1.2356.11.1.59.102.1.7',
  'lcsStatusWtpMngmtRadioModeEntryAntennaMaskDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtRadioModeEntryAntennaMask',
  'lcsStatusWtpMngmtRadioModeEntryAntennaGain' => '1.3.6.1.4.1.2356.11.1.59.102.1.8',
  'lcsStatusWtpMngmtRadioModeEntryTxPowerReduction' => '1.3.6.1.4.1.2356.11.1.59.102.1.9',
  'lcsStatusWtpMngmtNetwprofilsTable' => '1.3.6.1.4.1.2356.11.1.59.103',
  'lcsStatusWtpMngmtNetwprofilsEntry' => '1.3.6.1.4.1.2356.11.1.59.103.1',
  'lcsStatusWtpMngmtNetwprofilsEntryName' => '1.3.6.1.4.1.2356.11.1.59.103.1.1',
  'lcsStatusWtpMngmtNetwprofilsEntryOperating' => '1.3.6.1.4.1.2356.11.1.59.103.1.4',
  'lcsStatusWtpMngmtNetwprofilsEntryOperatingDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtNetwprofilsEntryOperating',
  'lcsStatusWtpMngmtNetwprofilsEntryVlanId' => '1.3.6.1.4.1.2356.11.1.59.103.1.5',
  'lcsStatusWtpMngmtNetwprofilsEntryEncryption' => '1.3.6.1.4.1.2356.11.1.59.103.1.6',
  'lcsStatusWtpMngmtNetwprofilsEntryEncryptionDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtNetwprofilsEntryEncryption',
  'lcsStatusWtpMngmtNetwprofilsEntryWpa1SessionKeytypes' => '1.3.6.1.4.1.2356.11.1.59.103.1.7',
  'lcsStatusWtpMngmtNetwprofilsEntryWpa1SessionKeytypesDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtNetwprofilsEntryWpa1SessionKeytypes',
  'lcsStatusWtpMngmtNetwprofilsEntryWpaVersion' => '1.3.6.1.4.1.2356.11.1.59.103.1.8',
  'lcsStatusWtpMngmtNetwprofilsEntryWpaVersionDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtNetwprofilsEntryWpaVersion',
  'lcsStatusWtpMngmtNetwprofilsEntryKey' => '1.3.6.1.4.1.2356.11.1.59.103.1.9',
  'lcsStatusWtpMngmtNetwprofilsEntryRadioBand' => '1.3.6.1.4.1.2356.11.1.59.103.1.10',
  'lcsStatusWtpMngmtNetwprofilsEntryRadioBandDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtNetwprofilsEntryRadioBand',
  'lcsStatusWtpMngmtNetwprofilsEntryContinuation' => '1.3.6.1.4.1.2356.11.1.59.103.1.11',
  'lcsStatusWtpMngmtNetwprofilsEntryMinTxRate' => '1.3.6.1.4.1.2356.11.1.59.103.1.12',
  'lcsStatusWtpMngmtNetwprofilsEntryMinTxRateDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtNetwprofilsEntryMinTxRate',
  'lcsStatusWtpMngmtNetwprofilsEntryMaxTxRate' => '1.3.6.1.4.1.2356.11.1.59.103.1.13',
  'lcsStatusWtpMngmtNetwprofilsEntryMaxTxRateDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtNetwprofilsEntryMaxTxRate',
  'lcsStatusWtpMngmtNetwprofilsEntryBasicRate' => '1.3.6.1.4.1.2356.11.1.59.103.1.14',
  'lcsStatusWtpMngmtNetwprofilsEntryBasicRateDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtNetwprofilsEntryBasicRate',
  'lcsStatusWtpMngmtNetwprofilsEntry11bPreamble' => '1.3.6.1.4.1.2356.11.1.59.103.1.15',
  'lcsStatusWtpMngmtNetwprofilsEntry11bPreambleDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtNetwprofilsEntry11bPreamble',
  'lcsStatusWtpMngmtNetwprofilsEntryMacFilter' => '1.3.6.1.4.1.2356.11.1.59.103.1.16',
  'lcsStatusWtpMngmtNetwprofilsEntryMacFilterDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtNetwprofilsEntryMacFilter',
  'lcsStatusWtpMngmtNetwprofilsEntryClBrgSupport' => '1.3.6.1.4.1.2356.11.1.59.103.1.17',
  'lcsStatusWtpMngmtNetwprofilsEntryClBrgSupportDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtNetwprofilsEntryClBrgSupport',
  'lcsStatusWtpMngmtNetwprofilsEntryMaxStations' => '1.3.6.1.4.1.2356.11.1.59.103.1.18',
  'lcsStatusWtpMngmtNetwprofilsEntrySsidBroadcast' => '1.3.6.1.4.1.2356.11.1.59.103.1.19',
  'lcsStatusWtpMngmtNetwprofilsEntrySsidBroadcastDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtNetwprofilsEntrySsidBroadcast',
  'lcsStatusWtpMngmtNetwprofilsEntryVlanTrunk' => '1.3.6.1.4.1.2356.11.1.59.103.1.20',
  'lcsStatusWtpMngmtNetwprofilsEntrySsid' => '1.3.6.1.4.1.2356.11.1.59.103.1.21',
  'lcsStatusWtpMngmtNetwprofilsEntryMinHtMcs' => '1.3.6.1.4.1.2356.11.1.59.103.1.22',
  'lcsStatusWtpMngmtNetwprofilsEntryMinHtMcsDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtNetwprofilsEntryMinHtMcs',
  'lcsStatusWtpMngmtNetwprofilsEntryMaxHtMcs' => '1.3.6.1.4.1.2356.11.1.59.103.1.23',
  'lcsStatusWtpMngmtNetwprofilsEntryMaxHtMcsDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtNetwprofilsEntryMaxHtMcs',
  'lcsStatusWtpMngmtNetwprofilsEntryShortGuardInterval' => '1.3.6.1.4.1.2356.11.1.59.103.1.24',
  'lcsStatusWtpMngmtNetwprofilsEntryShortGuardIntervalDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtNetwprofilsEntryShortGuardInterval',
  'lcsStatusWtpMngmtNetwprofilsEntryMaxSpatialStreams' => '1.3.6.1.4.1.2356.11.1.59.103.1.25',
  'lcsStatusWtpMngmtNetwprofilsEntryMaxSpatialStreamsDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtNetwprofilsEntryMaxSpatialStreams',
  'lcsStatusWtpMngmtNetwprofilsEntrySendAggregates' => '1.3.6.1.4.1.2356.11.1.59.103.1.26',
  'lcsStatusWtpMngmtNetwprofilsEntrySendAggregatesDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtNetwprofilsEntrySendAggregates',
  'lcsStatusWtpMngmtNetwprofilsEntryWpa2SessionKeytypes' => '1.3.6.1.4.1.2356.11.1.59.103.1.27',
  'lcsStatusWtpMngmtNetwprofilsEntryWpa2SessionKeytypesDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtNetwprofilsEntryWpa2SessionKeytypes',
  'lcsStatusWtpMngmtNetwprofilsEntryRadiusAccounting' => '1.3.6.1.4.1.2356.11.1.59.103.1.28',
  'lcsStatusWtpMngmtNetwprofilsEntryRadiusAccountingDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtNetwprofilsEntryRadiusAccounting',
  'lcsStatusWtpMngmtNetwprofilsEntryVlanMode' => '1.3.6.1.4.1.2356.11.1.59.103.1.30',
  'lcsStatusWtpMngmtNetwprofilsEntryVlanModeDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtNetwprofilsEntryVlanMode',
  'lcsStatusWtpMngmtNetwprofilsEntryConnectSsidTo' => '1.3.6.1.4.1.2356.11.1.59.103.1.32',
  'lcsStatusWtpMngmtNetwprofilsEntryConnectSsidToDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtNetwprofilsEntryConnectSsidTo',
  'lcsStatusWtpMngmtNetwprofilsEntryInterStationTraffic' => '1.3.6.1.4.1.2356.11.1.59.103.1.33',
  'lcsStatusWtpMngmtNetwprofilsEntryInterStationTrafficDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtNetwprofilsEntryInterStationTraffic',
  'lcsStatusWtpMngmtNetwprofilsEntryVlanIdnew' => '1.3.6.1.4.1.2356.11.1.59.103.1.34',
  'lcsStatusWtpMngmtApBridgeInterfacesTable' => '1.3.6.1.4.1.2356.11.1.59.104',
  'lcsStatusWtpMngmtApBridgeInterfacesEntry' => '1.3.6.1.4.1.2356.11.1.59.104.1',
  'lcsStatusWtpMngmtApBridgeInterfacesEntryBridgeInterface' => '1.3.6.1.4.1.2356.11.1.59.104.1.1',
  'lcsStatusWtpMngmtApBridgeInterfacesEntryBridgeInterfaceDefinition' => 'LCOS-MIB::lcsStatusWtpMngmtApBridgeInterfacesEntryBridgeInterface',
  'lcsStatusWtpMngmtApBridgeInterfacesEntryRegisteredConnections' => '1.3.6.1.4.1.2356.11.1.59.104.1.2',
  'lcsStatusWtpMngmtApBridgeInterfacesEntryRecvUnicasts' => '1.3.6.1.4.1.2356.11.1.59.104.1.3',
  'lcsStatusWtpMngmtApBridgeInterfacesEntryRecvMulticasts' => '1.3.6.1.4.1.2356.11.1.59.104.1.4',
  'lcsStatusWtpMngmtApBridgeInterfacesEntryRecvBroadcasts' => '1.3.6.1.4.1.2356.11.1.59.104.1.5',
  'lcsStatusWtpMngmtApBridgeInterfacesEntryTransUnicastPackets' => '1.3.6.1.4.1.2356.11.1.59.104.1.6',
  'lcsStatusWtpMngmtApBridgeInterfacesEntryTransMultiBroadPckts' => '1.3.6.1.4.1.2356.11.1.59.104.1.7',
  'lcsStatusWtpMngmtApBridgeInterfacesEntryDroppedPackets' => '1.3.6.1.4.1.2356.11.1.59.104.1.8',
  'lcsStatusWtpMngmtLogTableTable' => '1.3.6.1.4.1.2356.11.1.59.120',
  'lcsStatusWtpMngmtLogTableEntry' => '1.3.6.1.4.1.2356.11.1.59.120.1',
  'lcsStatusWtpMngmtLogTableEntryIndex' => '1.3.6.1.4.1.2356.11.1.59.120.1.1',
  'lcsStatusWtpMngmtLogTableEntryTime' => '1.3.6.1.4.1.2356.11.1.59.120.1.2',
  'lcsStatusWtpMngmtLogTableEntryEvent' => '1.3.6.1.4.1.2356.11.1.59.120.1.6',
  'lcsStatusCerts' => '1.3.6.1.4.1.2356.11.1.61',
  'lcsStatusCertsScepClnt' => '1.3.6.1.4.1.2356.11.1.61.1',
  'lcsStatusCertsScepClntCasTable' => '1.3.6.1.4.1.2356.11.1.61.1.4',
  'lcsStatusCertsScepClntCasEntry' => '1.3.6.1.4.1.2356.11.1.61.1.4.1',
  'lcsStatusCertsScepClntCasEntryIdx' => '1.3.6.1.4.1.2356.11.1.61.1.4.1.1',
  'lcsStatusCertsScepClntCasEntryName' => '1.3.6.1.4.1.2356.11.1.61.1.4.1.2',
  'lcsStatusCertsScepClntCasEntryExpires' => '1.3.6.1.4.1.2356.11.1.61.1.4.1.3',
  'lcsStatusCertsScepClntCasEntryIssued' => '1.3.6.1.4.1.2356.11.1.61.1.4.1.4',
  'lcsStatusCertsScepClntCasEntryKeyUsage' => '1.3.6.1.4.1.2356.11.1.61.1.4.1.5',
  'lcsStatusCertsScepClntCasEntryIssuer' => '1.3.6.1.4.1.2356.11.1.61.1.4.1.6',
  'lcsStatusCertsScepClntCasEntrySubject' => '1.3.6.1.4.1.2356.11.1.61.1.4.1.7',
  'lcsStatusCertsScepClntCasEntryStatus' => '1.3.6.1.4.1.2356.11.1.61.1.4.1.8',
  'lcsStatusCertsScepClntCasEntryIkeCertificate' => '1.3.6.1.4.1.2356.11.1.61.1.4.1.9',
  'lcsStatusCertsScepClntCasEntryMd5Fingerprint' => '1.3.6.1.4.1.2356.11.1.61.1.4.1.10',
  'lcsStatusCertsScepClntCasEntrySha1Fingerprint' => '1.3.6.1.4.1.2356.11.1.61.1.4.1.11',
  'lcsStatusCertsScepClntCasEntryExpSnmp' => '1.3.6.1.4.1.2356.11.1.61.1.4.1.12',
  'lcsStatusCertsScepClntCasEntryIssSnmp' => '1.3.6.1.4.1.2356.11.1.61.1.4.1.13',
  'lcsStatusCertsScepClntRasTable' => '1.3.6.1.4.1.2356.11.1.61.1.5',
  'lcsStatusCertsScepClntRasEntry' => '1.3.6.1.4.1.2356.11.1.61.1.5.1',
  'lcsStatusCertsScepClntRasEntryIdx' => '1.3.6.1.4.1.2356.11.1.61.1.5.1.1',
  'lcsStatusCertsScepClntRasEntryName' => '1.3.6.1.4.1.2356.11.1.61.1.5.1.2',
  'lcsStatusCertsScepClntRasEntryExpires' => '1.3.6.1.4.1.2356.11.1.61.1.5.1.3',
  'lcsStatusCertsScepClntRasEntryIssued' => '1.3.6.1.4.1.2356.11.1.61.1.5.1.4',
  'lcsStatusCertsScepClntRasEntryKeyUsage' => '1.3.6.1.4.1.2356.11.1.61.1.5.1.5',
  'lcsStatusCertsScepClntRasEntryIssuer' => '1.3.6.1.4.1.2356.11.1.61.1.5.1.6',
  'lcsStatusCertsScepClntRasEntrySubject' => '1.3.6.1.4.1.2356.11.1.61.1.5.1.7',
  'lcsStatusCertsScepClntRasEntryStatus' => '1.3.6.1.4.1.2356.11.1.61.1.5.1.8',
  'lcsStatusCertsScepClntRasEntryExpSnmp' => '1.3.6.1.4.1.2356.11.1.61.1.5.1.9',
  'lcsStatusCertsScepClntRasEntryIssSnmp' => '1.3.6.1.4.1.2356.11.1.61.1.5.1.10',
  'lcsStatusCertsScepClntCertsTable' => '1.3.6.1.4.1.2356.11.1.61.1.6',
  'lcsStatusCertsScepClntCertsEntry' => '1.3.6.1.4.1.2356.11.1.61.1.6.1',
  'lcsStatusCertsScepClntCertsEntryIdx' => '1.3.6.1.4.1.2356.11.1.61.1.6.1.1',
  'lcsStatusCertsScepClntCertsEntryName' => '1.3.6.1.4.1.2356.11.1.61.1.6.1.2',
  'lcsStatusCertsScepClntCertsEntryExpires' => '1.3.6.1.4.1.2356.11.1.61.1.6.1.3',
  'lcsStatusCertsScepClntCertsEntryIssued' => '1.3.6.1.4.1.2356.11.1.61.1.6.1.4',
  'lcsStatusCertsScepClntCertsEntryKeyUsage' => '1.3.6.1.4.1.2356.11.1.61.1.6.1.5',
  'lcsStatusCertsScepClntCertsEntrySubjectaltname' => '1.3.6.1.4.1.2356.11.1.61.1.6.1.6',
  'lcsStatusCertsScepClntCertsEntryIssuer' => '1.3.6.1.4.1.2356.11.1.61.1.6.1.7',
  'lcsStatusCertsScepClntCertsEntrySubject' => '1.3.6.1.4.1.2356.11.1.61.1.6.1.8',
  'lcsStatusCertsScepClntCertsEntryStatus' => '1.3.6.1.4.1.2356.11.1.61.1.6.1.9',
  'lcsStatusCertsScepClntCertsEntryExpSnmp' => '1.3.6.1.4.1.2356.11.1.61.1.6.1.10',
  'lcsStatusCertsScepClntCertsEntryIssSnmp' => '1.3.6.1.4.1.2356.11.1.61.1.6.1.11',
  'lcsStatusCertsScepClntCertsEntryExtendedKeyusage' => '1.3.6.1.4.1.2356.11.1.61.1.6.1.12',
  'lcsStatusCertsScepClntCertsEntryFilename' => '1.3.6.1.4.1.2356.11.1.61.1.6.1.13',
  'lcsStatusCertsScepClntScepClientState' => '1.3.6.1.4.1.2356.11.1.61.1.8',
  'lcsStatusCertsScepCa' => '1.3.6.1.4.1.2356.11.1.61.2',
  'lcsStatusCertsScepCaCerts' => '1.3.6.1.4.1.2356.11.1.61.2.1',
  'lcsStatusCertsScepCaCertsCertsStatusTabTable' => '1.3.6.1.4.1.2356.11.1.61.2.1.1',
  'lcsStatusCertsScepCaCertsCertsStatusTabEntry' => '1.3.6.1.4.1.2356.11.1.61.2.1.1.1',
  'lcsStatusCertsScepCaCertsCertsStatusTabEntryIndex' => '1.3.6.1.4.1.2356.11.1.61.2.1.1.1.1',
  'lcsStatusCertsScepCaCertsCertsStatusTabEntrySerialnumber' => '1.3.6.1.4.1.2356.11.1.61.2.1.1.1.2',
  'lcsStatusCertsScepCaCertsCertsStatusTabEntryStatus' => '1.3.6.1.4.1.2356.11.1.61.2.1.1.1.3',
  'lcsStatusCertsScepCaCertsCertsStatusTabEntryCreationDate' => '1.3.6.1.4.1.2356.11.1.61.2.1.1.1.4',
  'lcsStatusCertsScepCaCertsCertsStatusTabEntryEndTime' => '1.3.6.1.4.1.2356.11.1.61.2.1.1.1.5',
  'lcsStatusCertsScepCaCertsCertsStatusTabEntryRevTime' => '1.3.6.1.4.1.2356.11.1.61.2.1.1.1.6',
  'lcsStatusCertsScepCaCertsCertsStatusTabEntryRevReas' => '1.3.6.1.4.1.2356.11.1.61.2.1.1.1.7',
  'lcsStatusCertsScepCaCertsCertsStatusTabEntryMacAddress' => '1.3.6.1.4.1.2356.11.1.61.2.1.1.1.8',
  'lcsStatusCertsScepCaCertsCertsStatusTabEntryDn' => '1.3.6.1.4.1.2356.11.1.61.2.1.1.1.9',
  'lcsStatusCertsScepCaCertsRevokeCertificate' => '1.3.6.1.4.1.2356.11.1.61.2.1.2',
  'lcsStatusCertsScepCaCertsSetCertificateOnHold' => '1.3.6.1.4.1.2356.11.1.61.2.1.3',
  'lcsStatusCertsScepCaCertsDeclCertsValid' => '1.3.6.1.4.1.2356.11.1.61.2.1.4',
  'lcsStatusCertsScepCaRequests' => '1.3.6.1.4.1.2356.11.1.61.2.2',
  'lcsStatusCertsScepCaRequestsPendReqTable' => '1.3.6.1.4.1.2356.11.1.61.2.2.1',
  'lcsStatusCertsScepCaRequestsPendReqEntry' => '1.3.6.1.4.1.2356.11.1.61.2.2.1.1',
  'lcsStatusCertsScepCaRequestsPendReqEntryIndex' => '1.3.6.1.4.1.2356.11.1.61.2.2.1.1.1',
  'lcsStatusCertsScepCaRequestsPendReqEntryTransactionId' => '1.3.6.1.4.1.2356.11.1.61.2.2.1.1.2',
  'lcsStatusCertsScepCaRequestsPendReqEntryMacAddress' => '1.3.6.1.4.1.2356.11.1.61.2.2.1.1.3',
  'lcsStatusCertsScepCaRequestsPendReqEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.61.2.2.1.1.4',
  'lcsStatusCertsScepCaRequestsPendReqEntryPkiStatus' => '1.3.6.1.4.1.2356.11.1.61.2.2.1.1.5',
  'lcsStatusCertsScepCaRequestsPendReqEntryReason' => '1.3.6.1.4.1.2356.11.1.61.2.2.1.1.6',
  'lcsStatusCertsScepCaRequestsPendReqEntryReasonDefinition' => 'LCOS-MIB::lcsStatusCertsScepCaRequestsPendReqEntryReason',
  'lcsStatusCertsScepCaRequestsPendReqEntryRequestFingerprint' => '1.3.6.1.4.1.2356.11.1.61.2.2.1.1.7',
  'lcsStatusCertsScepCaRequestsPendReqEntryDn' => '1.3.6.1.4.1.2356.11.1.61.2.2.1.1.8',
  'lcsStatusCertsScepCaRequestsPendReqEntryReceiveDate' => '1.3.6.1.4.1.2356.11.1.61.2.2.1.1.9',
  'lcsStatusCertsScepCaRequestsIssueCertificate' => '1.3.6.1.4.1.2356.11.1.61.2.2.2',
  'lcsStatusCertsScepCaRequestsGrantAllCertificates' => '1.3.6.1.4.1.2356.11.1.61.2.2.3',
  'lcsStatusCertsScepCaRequestsDeclineRequest' => '1.3.6.1.4.1.2356.11.1.61.2.2.4',
  'lcsStatusCertsScepCaRequestsDenyAllRequests' => '1.3.6.1.4.1.2356.11.1.61.2.2.5',
  'lcsStatusCertsScepCaRequestsDeletePendingRequest' => '1.3.6.1.4.1.2356.11.1.61.2.2.6',
  'lcsStatusCertsScepCaRequestsDeleteAllPendingRequests' => '1.3.6.1.4.1.2356.11.1.61.2.2.7',
  'lcsStatusCertsScepCaCaStatus' => '1.3.6.1.4.1.2356.11.1.61.2.3',
  'lcsStatusCertsScepCaCaStatusCaStatus' => '1.3.6.1.4.1.2356.11.1.61.2.3.1',
  'lcsStatusCertsScepCaCaStatusCaStatusDefinition' => 'LCOS-MIB::lcsStatusCertsScepCaCaStatusCaStatus',
  'lcsStatusCertsScepCaCaStatusError' => '1.3.6.1.4.1.2356.11.1.61.2.3.2',
  'lcsStatusCertsScepCaCaStatusErrorDefinition' => 'LCOS-MIB::lcsStatusCertsScepCaCaStatusError',
  'lcsStatusCertsScepCaCaStatusAdditonalErrorInformation' => '1.3.6.1.4.1.2356.11.1.61.2.3.3',
  'lcsStatusCertsScepCaCaStatusFingerprintAlgorithm' => '1.3.6.1.4.1.2356.11.1.61.2.3.4',
  'lcsStatusCertsScepCaCaStatusFingerprintAlgorithmDefinition' => 'LCOS-MIB::lcsStatusCertsScepCaCaStatusFingerprintAlgorithm',
  'lcsStatusCertsScepCaCaStatusCaCertificateFingerprint' => '1.3.6.1.4.1.2356.11.1.61.2.3.5',
  'lcsStatusCertsScepCaCaStatusRaCertificateFingerprint' => '1.3.6.1.4.1.2356.11.1.61.2.3.6',
  'lcsStatusCertsCrls' => '1.3.6.1.4.1.2356.11.1.61.3',
  'lcsStatusCertsCrlsNumcrls' => '1.3.6.1.4.1.2356.11.1.61.3.1',
  'lcsStatusCertsCrlsCrlsTable' => '1.3.6.1.4.1.2356.11.1.61.3.2',
  'lcsStatusCertsCrlsCrlsEntry' => '1.3.6.1.4.1.2356.11.1.61.3.2.1',
  'lcsStatusCertsCrlsCrlsEntryIdx' => '1.3.6.1.4.1.2356.11.1.61.3.2.1.1',
  'lcsStatusCertsCrlsCrlsEntryExpires' => '1.3.6.1.4.1.2356.11.1.61.3.2.1.2',
  'lcsStatusCertsCrlsCrlsEntryIssued' => '1.3.6.1.4.1.2356.11.1.61.3.2.1.3',
  'lcsStatusCertsCrlsCrlsEntryIssuer' => '1.3.6.1.4.1.2356.11.1.61.3.2.1.4',
  'lcsStatusCertsCrlsCrlsEntryDistributionPoint' => '1.3.6.1.4.1.2356.11.1.61.3.2.1.5',
  'lcsStatusCertsCrlsCrlsEntryStatSnmp' => '1.3.6.1.4.1.2356.11.1.61.3.2.1.6',
  'lcsStatusCertsCrlsCrlsEntryExpSnmp' => '1.3.6.1.4.1.2356.11.1.61.3.2.1.7',
  'lcsStatusCertsCrlsCrlsEntryIssSnmp' => '1.3.6.1.4.1.2356.11.1.61.3.2.1.8',
  'lcsStatusCertsCrlsCrlsEntryStatus' => '1.3.6.1.4.1.2356.11.1.61.3.2.1.9',
  'lcsStatusCertsDeviceCertificatesTable' => '1.3.6.1.4.1.2356.11.1.61.4',
  'lcsStatusCertsDeviceCertificatesEntry' => '1.3.6.1.4.1.2356.11.1.61.4.1',
  'lcsStatusCertsDeviceCertificatesEntryFilename' => '1.3.6.1.4.1.2356.11.1.61.4.1.1',
  'lcsStatusCertsDeviceCertificatesEntryAvailable' => '1.3.6.1.4.1.2356.11.1.61.4.1.2',
  'lcsStatusCertsDeviceCertificatesEntryAvailableDefinition' => 'LCOS-MIB::lcsStatusCertsDeviceCertificatesEntryAvailable',
  'lcsStatusCertsDeviceCertificatesEntryExpires' => '1.3.6.1.4.1.2356.11.1.61.4.1.3',
  'lcsStatusCertsDeviceCertificatesEntryIssued' => '1.3.6.1.4.1.2356.11.1.61.4.1.4',
  'lcsStatusCertsDeviceCertificatesEntryKeyUsage' => '1.3.6.1.4.1.2356.11.1.61.4.1.5',
  'lcsStatusCertsDeviceCertificatesEntrySubjectaltname' => '1.3.6.1.4.1.2356.11.1.61.4.1.6',
  'lcsStatusCertsDeviceCertificatesEntryIssuer' => '1.3.6.1.4.1.2356.11.1.61.4.1.7',
  'lcsStatusCertsDeviceCertificatesEntrySubject' => '1.3.6.1.4.1.2356.11.1.61.4.1.8',
  'lcsStatusCertsDeviceCertificatesEntryApplication' => '1.3.6.1.4.1.2356.11.1.61.4.1.9',
  'lcsStatusCertsDeviceCertificatesEntryExtendedKeyusage' => '1.3.6.1.4.1.2356.11.1.61.4.1.12',
  'lcsStatusCertsOcspClient' => '1.3.6.1.4.1.2356.11.1.61.6',
  'lcsStatusCertsOcspClientCaStatusTableTable' => '1.3.6.1.4.1.2356.11.1.61.6.1',
  'lcsStatusCertsOcspClientCaStatusTableEntry' => '1.3.6.1.4.1.2356.11.1.61.6.1.1',
  'lcsStatusCertsOcspClientCaStatusTableEntryProfileName' => '1.3.6.1.4.1.2356.11.1.61.6.1.1.1',
  'lcsStatusCertsOcspClientCaStatusTableEntryRequests' => '1.3.6.1.4.1.2356.11.1.61.6.1.1.2',
  'lcsStatusCertsOcspClientCaStatusTableEntryResponses' => '1.3.6.1.4.1.2356.11.1.61.6.1.1.3',
  'lcsStatusCertsOcspClientCaStatusTableEntryGoodResponses' => '1.3.6.1.4.1.2356.11.1.61.6.1.1.4',
  'lcsStatusCertsOcspClientCaStatusTableEntryRevokeResponses' => '1.3.6.1.4.1.2356.11.1.61.6.1.1.5',
  'lcsStatusCertsOcspClientCaStatusTableEntryUnknownResponses' => '1.3.6.1.4.1.2356.11.1.61.6.1.1.6',
  'lcsStatusCertsOcspClientCaStatusTableEntrySuccessfulResponses' => '1.3.6.1.4.1.2356.11.1.61.6.1.1.7',
  'lcsStatusCertsOcspClientCaStatusTableEntryErrorResponses' => '1.3.6.1.4.1.2356.11.1.61.6.1.1.8',
  'lcsStatusCertsOcspClientCaStatusTableEntryMalformedRequests' => '1.3.6.1.4.1.2356.11.1.61.6.1.1.9',
  'lcsStatusCertsOcspClientCaStatusTableEntryIntErrorResponses' => '1.3.6.1.4.1.2356.11.1.61.6.1.1.10',
  'lcsStatusCertsOcspClientCaStatusTableEntryTryLaterResponses' => '1.3.6.1.4.1.2356.11.1.61.6.1.1.11',
  'lcsStatusCertsOcspClientCaStatusTableEntrySignRequiredResponses' => '1.3.6.1.4.1.2356.11.1.61.6.1.1.12',
  'lcsStatusCertsOcspClientCaStatusTableEntryUnauthorizedResponses' => '1.3.6.1.4.1.2356.11.1.61.6.1.1.13',
  'lcsStatusCertsOcspClientCaStatusTableEntrySignerVerifyFailures' => '1.3.6.1.4.1.2356.11.1.61.6.1.1.14',
  'lcsStatusCertsOcspClientCaStatusTableEntryCertTimedOuts' => '1.3.6.1.4.1.2356.11.1.61.6.1.1.15',
  'lcsStatusCertsOcspClientCaStatusTableEntryGenericErrors' => '1.3.6.1.4.1.2356.11.1.61.6.1.1.16',
  'lcsStatusCertsOcspClientCaStatusTableEntryTransportErrors' => '1.3.6.1.4.1.2356.11.1.61.6.1.1.17',
  'lcsStatusVlan' => '1.3.6.1.4.1.2356.11.1.62',
  'lcsStatusVlanNetworksTable' => '1.3.6.1.4.1.2356.11.1.62.1',
  'lcsStatusVlanNetworksEntry' => '1.3.6.1.4.1.2356.11.1.62.1.1',
  'lcsStatusVlanNetworksEntryVlanId' => '1.3.6.1.4.1.2356.11.1.62.1.1.1',
  'lcsStatusVlanNetworksEntryPorts' => '1.3.6.1.4.1.2356.11.1.62.1.1.4',
  'lcsStatusVlanPortTableTable' => '1.3.6.1.4.1.2356.11.1.62.2',
  'lcsStatusVlanPortTableEntry' => '1.3.6.1.4.1.2356.11.1.62.2.1',
  'lcsStatusVlanPortTableEntryPort' => '1.3.6.1.4.1.2356.11.1.62.2.1.1',
  'lcsStatusVlanPortTableEntryAllowAllVlans' => '1.3.6.1.4.1.2356.11.1.62.2.1.4',
  'lcsStatusVlanPortTableEntryAllowAllVlansDefinition' => 'LCOS-MIB::lcsStatusVlanPortTableEntryAllowAllVlans',
  'lcsStatusVlanPortTableEntryPortVlanId' => '1.3.6.1.4.1.2356.11.1.62.2.1.5',
  'lcsStatusVlanPortTableEntryTaggingMode' => '1.3.6.1.4.1.2356.11.1.62.2.1.6',
  'lcsStatusVlanPortTableEntryTaggingModeDefinition' => 'LCOS-MIB::lcsStatusVlanPortTableEntryTaggingMode',
  'lcsStatusVlanOperating' => '1.3.6.1.4.1.2356.11.1.62.4',
  'lcsStatusVlanOperatingDefinition' => 'LCOS-MIB::lcsStatusVlanOperating',
  'lcsStatusGps' => '1.3.6.1.4.1.2356.11.1.63',
  'lcsStatusGpsOperating' => '1.3.6.1.4.1.2356.11.1.63.1',
  'lcsStatusGpsOperatingDefinition' => 'LCOS-MIB::lcsStatusGpsOperating',
  'lcsStatusGpsFixType' => '1.3.6.1.4.1.2356.11.1.63.2',
  'lcsStatusGpsFixTypeDefinition' => 'LCOS-MIB::lcsStatusGpsFixType',
  'lcsStatusGpsTimestampGps' => '1.3.6.1.4.1.2356.11.1.63.3',
  'lcsStatusGpsLongitudeDeg' => '1.3.6.1.4.1.2356.11.1.63.4',
  'lcsStatusGpsLatitudeDeg' => '1.3.6.1.4.1.2356.11.1.63.5',
  'lcsStatusGpsAltitudeM' => '1.3.6.1.4.1.2356.11.1.63.6',
  'lcsStatusGpsPositionValid' => '1.3.6.1.4.1.2356.11.1.63.7',
  'lcsStatusGpsPositionValidDefinition' => 'LCOS-MIB::lcsStatusGpsPositionValid',
  'lcsStatusUtm' => '1.3.6.1.4.1.2356.11.1.64',
  'lcsStatusUtmCf' => '1.3.6.1.4.1.2356.11.1.64.3',
  'lcsStatusUtmCfAllowedUrls' => '1.3.6.1.4.1.2356.11.1.64.3.1',
  'lcsStatusUtmCfOverridddenUrls' => '1.3.6.1.4.1.2356.11.1.64.3.2',
  'lcsStatusUtmCfBlockedUrls' => '1.3.6.1.4.1.2356.11.1.64.3.3',
  'lcsStatusUtmCfWhitelistedUrls' => '1.3.6.1.4.1.2356.11.1.64.3.4',
  'lcsStatusUtmCfBlacklistedUrls' => '1.3.6.1.4.1.2356.11.1.64.3.5',
  'lcsStatusUtmCfErrorCount' => '1.3.6.1.4.1.2356.11.1.64.3.6',
  'lcsStatusUtmCfUncategorizedUrls' => '1.3.6.1.4.1.2356.11.1.64.3.7',
  'lcsStatusUtmCfStatisticsFlush' => '1.3.6.1.4.1.2356.11.1.64.3.8',
  'lcsStatusUtmCfLogTable' => '1.3.6.1.4.1.2356.11.1.64.3.17',
  'lcsStatusUtmCfLogEntry' => '1.3.6.1.4.1.2356.11.1.64.3.17.1',
  'lcsStatusUtmCfLogEntryIdx' => '1.3.6.1.4.1.2356.11.1.64.3.17.1.1',
  'lcsStatusUtmCfLogEntrySystemTime' => '1.3.6.1.4.1.2356.11.1.64.3.17.1.2',
  'lcsStatusUtmCfLogEntryCause' => '1.3.6.1.4.1.2356.11.1.64.3.17.1.3',
  'lcsStatusUtmCfLogEntryCauseDefinition' => 'LCOS-MIB::lcsStatusUtmCfLogEntryCause',
  'lcsStatusUtmCfLogEntryUserProfile' => '1.3.6.1.4.1.2356.11.1.64.3.17.1.4',
  'lcsStatusUtmCfLogEntryCategoryError' => '1.3.6.1.4.1.2356.11.1.64.3.17.1.5',
  'lcsStatusUtmCfLogEntryUrl' => '1.3.6.1.4.1.2356.11.1.64.3.17.1.6',
  'lcsStatusUtmCfLicenseCount' => '1.3.6.1.4.1.2356.11.1.64.3.18',
  'lcsStatusUtmCfUsersTable' => '1.3.6.1.4.1.2356.11.1.64.3.19',
  'lcsStatusUtmCfUsersEntry' => '1.3.6.1.4.1.2356.11.1.64.3.19.1',
  'lcsStatusUtmCfUsersEntryIndex' => '1.3.6.1.4.1.2356.11.1.64.3.19.1.1',
  'lcsStatusUtmCfUsersEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.64.3.19.1.2',
  'lcsStatusUtmCfUsersEntryMacAddress' => '1.3.6.1.4.1.2356.11.1.64.3.19.1.3',
  'lcsStatusUtmCfOverrideLogTable' => '1.3.6.1.4.1.2356.11.1.64.3.20',
  'lcsStatusUtmCfOverrideLogEntry' => '1.3.6.1.4.1.2356.11.1.64.3.20.1',
  'lcsStatusUtmCfOverrideLogEntryIndex' => '1.3.6.1.4.1.2356.11.1.64.3.20.1.1',
  'lcsStatusUtmCfOverrideLogEntryDateTime' => '1.3.6.1.4.1.2356.11.1.64.3.20.1.2',
  'lcsStatusUtmCfOverrideLogEntryUserIp' => '1.3.6.1.4.1.2356.11.1.64.3.20.1.3',
  'lcsStatusUtmCfOverrideLogEntryUserMac' => '1.3.6.1.4.1.2356.11.1.64.3.20.1.4',
  'lcsStatusUtmCfOverrideLogEntryTargetUrl' => '1.3.6.1.4.1.2356.11.1.64.3.20.1.5',
  'lcsStatusUtmCfLogFlush' => '1.3.6.1.4.1.2356.11.1.64.3.21',
  'lcsStatusUtmCfCategoryStatisticsTable' => '1.3.6.1.4.1.2356.11.1.64.3.22',
  'lcsStatusUtmCfCategoryStatisticsEntry' => '1.3.6.1.4.1.2356.11.1.64.3.22.1',
  'lcsStatusUtmCfCategoryStatisticsEntryCat' => '1.3.6.1.4.1.2356.11.1.64.3.22.1.1',
  'lcsStatusUtmCfCategoryStatisticsEntryCatDefinition' => 'LCOS-MIB::lcsStatusUtmCfCategoryStatisticsEntryCat',
  'lcsStatusUtmCfCategoryStatisticsEntryHit' => '1.3.6.1.4.1.2356.11.1.64.3.22.1.2',
  'lcsStatusUtmCfLastSnapshotTable' => '1.3.6.1.4.1.2356.11.1.64.3.23',
  'lcsStatusUtmCfLastSnapshotEntry' => '1.3.6.1.4.1.2356.11.1.64.3.23.1',
  'lcsStatusUtmCfLastSnapshotEntryCat' => '1.3.6.1.4.1.2356.11.1.64.3.23.1.1',
  'lcsStatusUtmCfLastSnapshotEntryCatDefinition' => 'LCOS-MIB::lcsStatusUtmCfLastSnapshotEntryCat',
  'lcsStatusUtmCfLastSnapshotEntryHit' => '1.3.6.1.4.1.2356.11.1.64.3.23.1.2',
  'lcsStatusUtmCfSnapshotDate' => '1.3.6.1.4.1.2356.11.1.64.3.24',
  'lcsStatusUtmCfCategoryStatisticsFlush' => '1.3.6.1.4.1.2356.11.1.64.3.25',
  'lcsStatusUtmCfPerf' => '1.3.6.1.4.1.2356.11.1.64.3.27',
  'lcsStatusUtmCfPerfRatingServer' => '1.3.6.1.4.1.2356.11.1.64.3.27.1',
  'lcsStatusUtmCfPerfUsedSince' => '1.3.6.1.4.1.2356.11.1.64.3.27.2',
  'lcsStatusUtmCfPerfIniServTime' => '1.3.6.1.4.1.2356.11.1.64.3.27.3',
  'lcsStatusUtmCfPerfProcUrls' => '1.3.6.1.4.1.2356.11.1.64.3.27.4',
  'lcsStatusUtmCfPerfProcTimeouts' => '1.3.6.1.4.1.2356.11.1.64.3.27.5',
  'lcsStatusUtmCfPerfMinProcTime' => '1.3.6.1.4.1.2356.11.1.64.3.27.6',
  'lcsStatusUtmCfPerfMaxProcTime' => '1.3.6.1.4.1.2356.11.1.64.3.27.7',
  'lcsStatusUtmCfPerfAvgProcTime' => '1.3.6.1.4.1.2356.11.1.64.3.27.8',
  'lcsStatusUtmCfPerf5minProcTime' => '1.3.6.1.4.1.2356.11.1.64.3.27.9',
  'lcsStatusUtmCfPerfServRequests' => '1.3.6.1.4.1.2356.11.1.64.3.27.10',
  'lcsStatusUtmCfPerfServTimeouts' => '1.3.6.1.4.1.2356.11.1.64.3.27.11',
  'lcsStatusUtmCfPerfMinServTime' => '1.3.6.1.4.1.2356.11.1.64.3.27.12',
  'lcsStatusUtmCfPerfMaxServTime' => '1.3.6.1.4.1.2356.11.1.64.3.27.13',
  'lcsStatusUtmCfPerfAvgServTime' => '1.3.6.1.4.1.2356.11.1.64.3.27.14',
  'lcsStatusUtmCfPerf5minServTime' => '1.3.6.1.4.1.2356.11.1.64.3.27.15',
  'lcsStatusUtmCfPerfPerfLogTable' => '1.3.6.1.4.1.2356.11.1.64.3.27.16',
  'lcsStatusUtmCfPerfPerfLogEntry' => '1.3.6.1.4.1.2356.11.1.64.3.27.16.1',
  'lcsStatusUtmCfPerfPerfLogEntryIdx' => '1.3.6.1.4.1.2356.11.1.64.3.27.16.1.1',
  'lcsStatusUtmCfPerfPerfLogEntryRatingServer' => '1.3.6.1.4.1.2356.11.1.64.3.27.16.1.2',
  'lcsStatusUtmCfPerfPerfLogEntryUsedSince' => '1.3.6.1.4.1.2356.11.1.64.3.27.16.1.3',
  'lcsStatusUtmCfPerfPerfLogEntryUsedSinceNumerical' => '1.3.6.1.4.1.2356.11.1.64.3.27.16.1.4',
  'lcsStatusUtmCfPerfPerfLogEntryIniServTime' => '1.3.6.1.4.1.2356.11.1.64.3.27.16.1.5',
  'lcsStatusUtmCfPerfPerfLogEntryProcUrls' => '1.3.6.1.4.1.2356.11.1.64.3.27.16.1.6',
  'lcsStatusUtmCfPerfPerfLogEntryProcTimeouts' => '1.3.6.1.4.1.2356.11.1.64.3.27.16.1.7',
  'lcsStatusUtmCfPerfPerfLogEntryMinProcTimeNumerical' => '1.3.6.1.4.1.2356.11.1.64.3.27.16.1.8',
  'lcsStatusUtmCfPerfPerfLogEntryMaxProcTimeNumerical' => '1.3.6.1.4.1.2356.11.1.64.3.27.16.1.9',
  'lcsStatusUtmCfPerfPerfLogEntryAvgProcTimeNumerical' => '1.3.6.1.4.1.2356.11.1.64.3.27.16.1.10',
  'lcsStatusUtmCfPerfPerfLogEntry5minProcTimeNumerical' => '1.3.6.1.4.1.2356.11.1.64.3.27.16.1.11',
  'lcsStatusUtmCfPerfPerfLogEntryServRequests' => '1.3.6.1.4.1.2356.11.1.64.3.27.16.1.12',
  'lcsStatusUtmCfPerfPerfLogEntryServTimeouts' => '1.3.6.1.4.1.2356.11.1.64.3.27.16.1.13',
  'lcsStatusUtmCfPerfPerfLogEntryMinServTimeNumerical' => '1.3.6.1.4.1.2356.11.1.64.3.27.16.1.14',
  'lcsStatusUtmCfPerfPerfLogEntryMaxServTimeNumerical' => '1.3.6.1.4.1.2356.11.1.64.3.27.16.1.15',
  'lcsStatusUtmCfPerfPerfLogEntryAvgServTimeNumerical' => '1.3.6.1.4.1.2356.11.1.64.3.27.16.1.16',
  'lcsStatusUtmCfPerfPerfLogEntry5minServTimeNumerical' => '1.3.6.1.4.1.2356.11.1.64.3.27.16.1.17',
  'lcsStatusUtmCfPerfPerfLogEntryMinProcTime' => '1.3.6.1.4.1.2356.11.1.64.3.27.16.1.18',
  'lcsStatusUtmCfPerfPerfLogEntryMaxProcTime' => '1.3.6.1.4.1.2356.11.1.64.3.27.16.1.19',
  'lcsStatusUtmCfPerfPerfLogEntryAvgProcTime' => '1.3.6.1.4.1.2356.11.1.64.3.27.16.1.20',
  'lcsStatusUtmCfPerfPerfLogEntry5minProcTime' => '1.3.6.1.4.1.2356.11.1.64.3.27.16.1.21',
  'lcsStatusUtmCfPerfPerfLogEntryMinServTime' => '1.3.6.1.4.1.2356.11.1.64.3.27.16.1.22',
  'lcsStatusUtmCfPerfPerfLogEntryMaxServTime' => '1.3.6.1.4.1.2356.11.1.64.3.27.16.1.23',
  'lcsStatusUtmCfPerfPerfLogEntryAvgServTime' => '1.3.6.1.4.1.2356.11.1.64.3.27.16.1.24',
  'lcsStatusUtmCfPerfPerfLogEntry5minServTime' => '1.3.6.1.4.1.2356.11.1.64.3.27.16.1.25',
  'lcsStatusUtmCfPerfResetPerfStat' => '1.3.6.1.4.1.2356.11.1.64.3.27.17',
  'lcsStatusUtmCfProxConn' => '1.3.6.1.4.1.2356.11.1.64.3.28',
  'lcsStatusUtmCfProxConnCurrentConnections' => '1.3.6.1.4.1.2356.11.1.64.3.28.1',
  'lcsStatusUtmCfProxConnProxyConnectionsLimit' => '1.3.6.1.4.1.2356.11.1.64.3.28.2',
  'lcsStatusUtmCfProxConnMaxConnections' => '1.3.6.1.4.1.2356.11.1.64.3.28.3',
  'lcsStatusUtmCfProxConnAvgConnections' => '1.3.6.1.4.1.2356.11.1.64.3.28.4',
  'lcsStatusUtmCfProxConn5minAvgConnections' => '1.3.6.1.4.1.2356.11.1.64.3.28.5',
  'lcsStatusUtmCfProxConnTotalConnections' => '1.3.6.1.4.1.2356.11.1.64.3.28.6',
  'lcsStatusUtmCfProxConnDeniedConnectionAttempts' => '1.3.6.1.4.1.2356.11.1.64.3.28.7',
  'lcsStatusUtmCfProxConnConnectionStatisticsSince' => '1.3.6.1.4.1.2356.11.1.64.3.28.8',
  'lcsStatusUtmCfProxConnResetConnectionStatistics' => '1.3.6.1.4.1.2356.11.1.64.3.28.9',
  'lcsStatusUtmCfCache' => '1.3.6.1.4.1.2356.11.1.64.3.29',
  'lcsStatusUtmCfCacheMaximumSize' => '1.3.6.1.4.1.2356.11.1.64.3.29.1',
  'lcsStatusUtmCfCacheCurrentSize' => '1.3.6.1.4.1.2356.11.1.64.3.29.2',
  'lcsStatusUtmCfCacheHitRatInPerc' => '1.3.6.1.4.1.2356.11.1.64.3.29.3',
  'lcsStatusUtmCfCacheTop10AllowedHostsTable' => '1.3.6.1.4.1.2356.11.1.64.3.29.4',
  'lcsStatusUtmCfCacheTop10AllowedHostsEntry' => '1.3.6.1.4.1.2356.11.1.64.3.29.4.1',
  'lcsStatusUtmCfCacheTop10AllowedHostsEntryHost' => '1.3.6.1.4.1.2356.11.1.64.3.29.4.1.1',
  'lcsStatusUtmCfCacheTop10AllowedHostsEntryCat' => '1.3.6.1.4.1.2356.11.1.64.3.29.4.1.2',
  'lcsStatusUtmCfCacheTop10AllowedHostsEntryCount' => '1.3.6.1.4.1.2356.11.1.64.3.29.4.1.3',
  'lcsStatusUtmCfCacheTop10OverriddenHostsTable' => '1.3.6.1.4.1.2356.11.1.64.3.29.5',
  'lcsStatusUtmCfCacheTop10OverriddenHostsEntry' => '1.3.6.1.4.1.2356.11.1.64.3.29.5.1',
  'lcsStatusUtmCfCacheTop10OverriddenHostsEntryHost' => '1.3.6.1.4.1.2356.11.1.64.3.29.5.1.1',
  'lcsStatusUtmCfCacheTop10OverriddenHostsEntryCat' => '1.3.6.1.4.1.2356.11.1.64.3.29.5.1.2',
  'lcsStatusUtmCfCacheTop10OverriddenHostsEntryCount' => '1.3.6.1.4.1.2356.11.1.64.3.29.5.1.3',
  'lcsStatusUtmCfCacheTop10BlockedHostsTable' => '1.3.6.1.4.1.2356.11.1.64.3.29.6',
  'lcsStatusUtmCfCacheTop10BlockedHostsEntry' => '1.3.6.1.4.1.2356.11.1.64.3.29.6.1',
  'lcsStatusUtmCfCacheTop10BlockedHostsEntryHost' => '1.3.6.1.4.1.2356.11.1.64.3.29.6.1.1',
  'lcsStatusUtmCfCacheTop10BlockedHostsEntryCat' => '1.3.6.1.4.1.2356.11.1.64.3.29.6.1.2',
  'lcsStatusUtmCfCacheTop10BlockedHostsEntryCount' => '1.3.6.1.4.1.2356.11.1.64.3.29.6.1.3',
  'lcsStatusUtmCfCacheCacheFlush' => '1.3.6.1.4.1.2356.11.1.64.3.29.7',
  'lcsStatusUtmCfOperating' => '1.3.6.1.4.1.2356.11.1.64.3.255',
  'lcsStatusUtmCfOperatingDefinition' => 'LCOS-MIB::lcsStatusUtmCfOperating',
  'lcsStatusComPorts' => '1.3.6.1.4.1.2356.11.1.67',
  'lcsStatusComPortsDevTable' => '1.3.6.1.4.1.2356.11.1.67.1',
  'lcsStatusComPortsDevEntry' => '1.3.6.1.4.1.2356.11.1.67.1.1',
  'lcsStatusComPortsDevEntryIndex' => '1.3.6.1.4.1.2356.11.1.67.1.1.1',
  'lcsStatusComPortsDevEntryDeviceType' => '1.3.6.1.4.1.2356.11.1.67.1.1.2',
  'lcsStatusComPortsDevEntryDeviceTypeDefinition' => 'LCOS-MIB::lcsStatusComPortsDevEntryDeviceType',
  'lcsStatusComPortsDevEntryBus' => '1.3.6.1.4.1.2356.11.1.67.1.1.3',
  'lcsStatusComPortsDevEntryBusDefinition' => 'LCOS-MIB::lcsStatusComPortsDevEntryBus',
  'lcsStatusComPortsDevEntryDevice' => '1.3.6.1.4.1.2356.11.1.67.1.1.4',
  'lcsStatusComPortsDevEntryVendor' => '1.3.6.1.4.1.2356.11.1.67.1.1.5',
  'lcsStatusComPortsDevEntryUsbDriver' => '1.3.6.1.4.1.2356.11.1.67.1.1.11',
  'lcsStatusComPortsDevEntryUsbDriverDefinition' => 'LCOS-MIB::lcsStatusComPortsDevEntryUsbDriver',
  'lcsStatusComPortsDevEntryState' => '1.3.6.1.4.1.2356.11.1.67.1.1.13',
  'lcsStatusComPortsDevEntryStateDefinition' => 'LCOS-MIB::lcsStatusComPortsDevEntryState',
  'lcsStatusComPortsDevEntryFirmwareVersion' => '1.3.6.1.4.1.2356.11.1.67.1.1.14',
  'lcsStatusComPortsDevEntryServ' => '1.3.6.1.4.1.2356.11.1.67.1.1.15',
  'lcsStatusComPortsDevEntryServDefinition' => 'LCOS-MIB::lcsStatusComPortsDevEntryServ',
  'lcsStatusComPortsDevEntryFullName' => '1.3.6.1.4.1.2356.11.1.67.1.1.99',
  'lcsStatusComPortsComPortServer' => '1.3.6.1.4.1.2356.11.1.67.2',
  'lcsStatusComPortsComPortServerNetworkStatusTable' => '1.3.6.1.4.1.2356.11.1.67.2.1',
  'lcsStatusComPortsComPortServerNetworkStatusEntry' => '1.3.6.1.4.1.2356.11.1.67.2.1.1',
  'lcsStatusComPortsComPortServerNetworkStatusEntryDeviceType' => '1.3.6.1.4.1.2356.11.1.67.2.1.1.1',
  'lcsStatusComPortsComPortServerNetworkStatusEntryDeviceTypeDefinition' => 'LCOS-MIB::lcsStatusComPortsComPortServerNetworkStatusEntryDeviceType',
  'lcsStatusComPortsComPortServerNetworkStatusEntryPortNumber' => '1.3.6.1.4.1.2356.11.1.67.2.1.1.2',
  'lcsStatusComPortsComPortServerNetworkStatusEntryConnectionStatus' => '1.3.6.1.4.1.2356.11.1.67.2.1.1.4',
  'lcsStatusComPortsComPortServerNetworkStatusEntryConnectionStatusDefinition' => 'LCOS-MIB::lcsStatusComPortsComPortServerNetworkStatusEntryConnectionStatus',
  'lcsStatusComPortsComPortServerNetworkStatusEntryLastError' => '1.3.6.1.4.1.2356.11.1.67.2.1.1.5',
  'lcsStatusComPortsComPortServerNetworkStatusEntryLastErrorDefinition' => 'LCOS-MIB::lcsStatusComPortsComPortServerNetworkStatusEntryLastError',
  'lcsStatusComPortsComPortServerNetworkStatusEntryRemoteAddress' => '1.3.6.1.4.1.2356.11.1.67.2.1.1.6',
  'lcsStatusComPortsComPortServerNetworkStatusEntryLocalPort' => '1.3.6.1.4.1.2356.11.1.67.2.1.1.7',
  'lcsStatusComPortsComPortServerNetworkStatusEntryRemotePort' => '1.3.6.1.4.1.2356.11.1.67.2.1.1.8',
  'lcsStatusComPortsComPortServerNetworkStatusEntryFullName' => '1.3.6.1.4.1.2356.11.1.67.2.1.1.99',
  'lcsStatusComPortsComPortServerComPortStatusTable' => '1.3.6.1.4.1.2356.11.1.67.2.2',
  'lcsStatusComPortsComPortServerComPortStatusEntry' => '1.3.6.1.4.1.2356.11.1.67.2.2.1',
  'lcsStatusComPortsComPortServerComPortStatusEntryDeviceType' => '1.3.6.1.4.1.2356.11.1.67.2.2.1.1',
  'lcsStatusComPortsComPortServerComPortStatusEntryDeviceTypeDefinition' => 'LCOS-MIB::lcsStatusComPortsComPortServerComPortStatusEntryDeviceType',
  'lcsStatusComPortsComPortServerComPortStatusEntryPortNumber' => '1.3.6.1.4.1.2356.11.1.67.2.2.1.2',
  'lcsStatusComPortsComPortServerComPortStatusEntryInterfaceStatus' => '1.3.6.1.4.1.2356.11.1.67.2.2.1.4',
  'lcsStatusComPortsComPortServerComPortStatusEntryInterfaceStatusDefinition' => 'LCOS-MIB::lcsStatusComPortsComPortServerComPortStatusEntryInterfaceStatus',
  'lcsStatusComPortsComPortServerComPortStatusEntryBitRate' => '1.3.6.1.4.1.2356.11.1.67.2.2.1.5',
  'lcsStatusComPortsComPortServerComPortStatusEntryBitRateDefinition' => 'LCOS-MIB::lcsStatusComPortsComPortServerComPortStatusEntryBitRate',
  'lcsStatusComPortsComPortServerComPortStatusEntryDataBits' => '1.3.6.1.4.1.2356.11.1.67.2.2.1.6',
  'lcsStatusComPortsComPortServerComPortStatusEntryDataBitsDefinition' => 'LCOS-MIB::lcsStatusComPortsComPortServerComPortStatusEntryDataBits',
  'lcsStatusComPortsComPortServerComPortStatusEntryParity' => '1.3.6.1.4.1.2356.11.1.67.2.2.1.7',
  'lcsStatusComPortsComPortServerComPortStatusEntryParityDefinition' => 'LCOS-MIB::lcsStatusComPortsComPortServerComPortStatusEntryParity',
  'lcsStatusComPortsComPortServerComPortStatusEntryStopBits' => '1.3.6.1.4.1.2356.11.1.67.2.2.1.8',
  'lcsStatusComPortsComPortServerComPortStatusEntryStopBitsDefinition' => 'LCOS-MIB::lcsStatusComPortsComPortServerComPortStatusEntryStopBits',
  'lcsStatusComPortsComPortServerComPortStatusEntryHandshake' => '1.3.6.1.4.1.2356.11.1.67.2.2.1.9',
  'lcsStatusComPortsComPortServerComPortStatusEntryHandshakeDefinition' => 'LCOS-MIB::lcsStatusComPortsComPortServerComPortStatusEntryHandshake',
  'lcsStatusComPortsComPortServerComPortStatusEntryFullName' => '1.3.6.1.4.1.2356.11.1.67.2.2.1.99',
  'lcsStatusComPortsComPortServerByteCountersTable' => '1.3.6.1.4.1.2356.11.1.67.2.3',
  'lcsStatusComPortsComPortServerByteCountersEntry' => '1.3.6.1.4.1.2356.11.1.67.2.3.1',
  'lcsStatusComPortsComPortServerByteCountersEntryDeviceType' => '1.3.6.1.4.1.2356.11.1.67.2.3.1.1',
  'lcsStatusComPortsComPortServerByteCountersEntryDeviceTypeDefinition' => 'LCOS-MIB::lcsStatusComPortsComPortServerByteCountersEntryDeviceType',
  'lcsStatusComPortsComPortServerByteCountersEntryPortNumber' => '1.3.6.1.4.1.2356.11.1.67.2.3.1.2',
  'lcsStatusComPortsComPortServerByteCountersEntrySerialTx' => '1.3.6.1.4.1.2356.11.1.67.2.3.1.4',
  'lcsStatusComPortsComPortServerByteCountersEntrySerialRx' => '1.3.6.1.4.1.2356.11.1.67.2.3.1.5',
  'lcsStatusComPortsComPortServerByteCountersEntryNetworkTx' => '1.3.6.1.4.1.2356.11.1.67.2.3.1.6',
  'lcsStatusComPortsComPortServerByteCountersEntryNetworkRx' => '1.3.6.1.4.1.2356.11.1.67.2.3.1.7',
  'lcsStatusComPortsComPortServerByteCountersEntryFullName' => '1.3.6.1.4.1.2356.11.1.67.2.3.1.99',
  'lcsStatusComPortsComPortServerComPortErrorsTable' => '1.3.6.1.4.1.2356.11.1.67.2.4',
  'lcsStatusComPortsComPortServerComPortErrorsEntry' => '1.3.6.1.4.1.2356.11.1.67.2.4.1',
  'lcsStatusComPortsComPortServerComPortErrorsEntryDeviceType' => '1.3.6.1.4.1.2356.11.1.67.2.4.1.1',
  'lcsStatusComPortsComPortServerComPortErrorsEntryDeviceTypeDefinition' => 'LCOS-MIB::lcsStatusComPortsComPortServerComPortErrorsEntryDeviceType',
  'lcsStatusComPortsComPortServerComPortErrorsEntryPortNumber' => '1.3.6.1.4.1.2356.11.1.67.2.4.1.2',
  'lcsStatusComPortsComPortServerComPortErrorsEntryParityErrors' => '1.3.6.1.4.1.2356.11.1.67.2.4.1.4',
  'lcsStatusComPortsComPortServerComPortErrorsEntryFramingErrors' => '1.3.6.1.4.1.2356.11.1.67.2.4.1.5',
  'lcsStatusComPortsComPortServerComPortErrorsEntryRxLostErrors' => '1.3.6.1.4.1.2356.11.1.67.2.4.1.6',
  'lcsStatusComPortsComPortServerComPortErrorsEntryFullName' => '1.3.6.1.4.1.2356.11.1.67.2.4.1.99',
  'lcsStatusComPortsComPortServerConnTable' => '1.3.6.1.4.1.2356.11.1.67.2.5',
  'lcsStatusComPortsComPortServerConnEntry' => '1.3.6.1.4.1.2356.11.1.67.2.5.1',
  'lcsStatusComPortsComPortServerConnEntryDeviceType' => '1.3.6.1.4.1.2356.11.1.67.2.5.1.1',
  'lcsStatusComPortsComPortServerConnEntryDeviceTypeDefinition' => 'LCOS-MIB::lcsStatusComPortsComPortServerConnEntryDeviceType',
  'lcsStatusComPortsComPortServerConnEntryPortNumber' => '1.3.6.1.4.1.2356.11.1.67.2.5.1.2',
  'lcsStatusComPortsComPortServerConnEntryServGrant' => '1.3.6.1.4.1.2356.11.1.67.2.5.1.4',
  'lcsStatusComPortsComPortServerConnEntryServRej' => '1.3.6.1.4.1.2356.11.1.67.2.5.1.5',
  'lcsStatusComPortsComPortServerConnEntryClntSucc' => '1.3.6.1.4.1.2356.11.1.67.2.5.1.6',
  'lcsStatusComPortsComPortServerConnEntryClntDnsErr' => '1.3.6.1.4.1.2356.11.1.67.2.5.1.7',
  'lcsStatusComPortsComPortServerConnEntryClntTcpErr' => '1.3.6.1.4.1.2356.11.1.67.2.5.1.8',
  'lcsStatusComPortsComPortServerConnEntryClntRemDisc' => '1.3.6.1.4.1.2356.11.1.67.2.5.1.9',
  'lcsStatusComPortsComPortServerConnEntryFullName' => '1.3.6.1.4.1.2356.11.1.67.2.5.1.99',
  'lcsStatusComPortsComPortServerDeleteValues' => '1.3.6.1.4.1.2356.11.1.67.2.99',
  'lcsStatusBlockDevices' => '1.3.6.1.4.1.2356.11.1.68',
  'lcsStatusBlockDevicesDeviceListTable' => '1.3.6.1.4.1.2356.11.1.68.1',
  'lcsStatusBlockDevicesDeviceListEntry' => '1.3.6.1.4.1.2356.11.1.68.1.1',
  'lcsStatusBlockDevicesDeviceListEntryId' => '1.3.6.1.4.1.2356.11.1.68.1.1.1',
  'lcsStatusBlockDevicesDeviceListEntryType' => '1.3.6.1.4.1.2356.11.1.68.1.1.2',
  'lcsStatusBlockDevicesDeviceListEntryBlocksize' => '1.3.6.1.4.1.2356.11.1.68.1.1.3',
  'lcsStatusBlockDevicesDeviceListEntryBlockcount' => '1.3.6.1.4.1.2356.11.1.68.1.1.4',
  'lcsStatusBlockDevicesDeviceListEntryPartition' => '1.3.6.1.4.1.2356.11.1.68.1.1.5',
  'lcsStatusBlockDevicesDeviceListEntryFirstBlock' => '1.3.6.1.4.1.2356.11.1.68.1.1.6',
  'lcsStatusTacacsPlus' => '1.3.6.1.4.1.2356.11.1.69',
  'lcsStatusTacacsPlusAuthenticationErrors' => '1.3.6.1.4.1.2356.11.1.69.1',
  'lcsStatusTacacsPlusAuthorisationErrors' => '1.3.6.1.4.1.2356.11.1.69.2',
  'lcsStatusTacacsPlusDeleteValues' => '1.3.6.1.4.1.2356.11.1.69.3',
  'lcsStatusTemperatureMonitor' => '1.3.6.1.4.1.2356.11.1.70',
  'lcsStatusTemperatureMonitorExtremesTable' => '1.3.6.1.4.1.2356.11.1.70.1',
  'lcsStatusTemperatureMonitorExtremesEntry' => '1.3.6.1.4.1.2356.11.1.70.1.1',
  'lcsStatusTemperatureMonitorExtremesEntryType' => '1.3.6.1.4.1.2356.11.1.70.1.1.1',
  'lcsStatusTemperatureMonitorExtremesEntryTypeDefinition' => 'LCOS-MIB::lcsStatusTemperatureMonitorExtremesEntryType',
  'lcsStatusTemperatureMonitorExtremesEntryValue' => '1.3.6.1.4.1.2356.11.1.70.1.1.2',
  'lcsStatusTemperatureMonitorExtremesEntryTime' => '1.3.6.1.4.1.2356.11.1.70.1.1.3',
  'lcsStatusDsl' => '1.3.6.1.4.1.2356.11.1.72',
  'lcsStatusDslInterfacesTable' => '1.3.6.1.4.1.2356.11.1.72.1',
  'lcsStatusDslInterfacesEntry' => '1.3.6.1.4.1.2356.11.1.72.1.1',
  'lcsStatusDslInterfacesEntryIfc' => '1.3.6.1.4.1.2356.11.1.72.1.1.1',
  'lcsStatusDslInterfacesEntryLinkActive' => '1.3.6.1.4.1.2356.11.1.72.1.1.3',
  'lcsStatusDslInterfacesEntryLinkActiveDefinition' => 'LCOS-MIB::lcsStatusDslInterfacesEntryLinkActive',
  'lcsStatusDslByteTransportTable' => '1.3.6.1.4.1.2356.11.1.72.2',
  'lcsStatusDslByteTransportEntry' => '1.3.6.1.4.1.2356.11.1.72.2.1',
  'lcsStatusDslByteTransportEntryIfc' => '1.3.6.1.4.1.2356.11.1.72.2.1.1',
  'lcsStatusDslByteTransportEntryTxBytes' => '1.3.6.1.4.1.2356.11.1.72.2.1.2',
  'lcsStatusDslByteTransportEntryRxBytes' => '1.3.6.1.4.1.2356.11.1.72.2.1.3',
  'lcsStatusDslPacketTransportTable' => '1.3.6.1.4.1.2356.11.1.72.3',
  'lcsStatusDslPacketTransportEntry' => '1.3.6.1.4.1.2356.11.1.72.3.1',
  'lcsStatusDslPacketTransportEntryIfc' => '1.3.6.1.4.1.2356.11.1.72.3.1.1',
  'lcsStatusDslPacketTransportEntryRxPackets' => '1.3.6.1.4.1.2356.11.1.72.3.1.2',
  'lcsStatusDslPacketTransportEntryTxPackets' => '1.3.6.1.4.1.2356.11.1.72.3.1.3',
  'lcsStatusDslPacketTransportEntryRxBroadcasts' => '1.3.6.1.4.1.2356.11.1.72.3.1.4',
  'lcsStatusDslPacketTransportEntryRxMulticasts' => '1.3.6.1.4.1.2356.11.1.72.3.1.5',
  'lcsStatusDslPacketTransportEntryRxUnicasts' => '1.3.6.1.4.1.2356.11.1.72.3.1.6',
  'lcsStatusDslPacketTransportEntryTxBroadcasts' => '1.3.6.1.4.1.2356.11.1.72.3.1.7',
  'lcsStatusDslPacketTransportEntryTxMulticasts' => '1.3.6.1.4.1.2356.11.1.72.3.1.8',
  'lcsStatusDslPacketTransportEntryTxUnicasts' => '1.3.6.1.4.1.2356.11.1.72.3.1.9',
  'lcsStatusDslErrorsTable' => '1.3.6.1.4.1.2356.11.1.72.4',
  'lcsStatusDslErrorsEntry' => '1.3.6.1.4.1.2356.11.1.72.4.1',
  'lcsStatusDslErrorsEntryIfc' => '1.3.6.1.4.1.2356.11.1.72.4.1.1',
  'lcsStatusDslErrorsEntryRxErrors' => '1.3.6.1.4.1.2356.11.1.72.4.1.2',
  'lcsStatusDslErrorsEntryTxErrors' => '1.3.6.1.4.1.2356.11.1.72.4.1.3',
  'lcsStatusDslErrorsEntryStackErrors' => '1.3.6.1.4.1.2356.11.1.72.4.1.4',
  'lcsStatusDslErrorsEntryNicErrors' => '1.3.6.1.4.1.2356.11.1.72.4.1.5',
  'lcsStatusDslErrorsEntryQueueErrors' => '1.3.6.1.4.1.2356.11.1.72.4.1.6',
  'lcsStatusDslErrorsEntryRxCrcErrors' => '1.3.6.1.4.1.2356.11.1.72.4.1.7',
  'lcsStatusDslErrorsEntryCollisions' => '1.3.6.1.4.1.2356.11.1.72.4.1.8',
  'lcsStatusDslErrorsEntrySingleCollisions' => '1.3.6.1.4.1.2356.11.1.72.4.1.9',
  'lcsStatusDslErrorsEntryMultipleCollisions' => '1.3.6.1.4.1.2356.11.1.72.4.1.10',
  'lcsStatusDslErrorsEntryLateCollisions' => '1.3.6.1.4.1.2356.11.1.72.4.1.11',
  'lcsStatusDslErrorsEntryExcessiveCollisions' => '1.3.6.1.4.1.2356.11.1.72.4.1.12',
  'lcsStatusDslErrorsEntryRxAlignErrors' => '1.3.6.1.4.1.2356.11.1.72.4.1.13',
  'lcsStatusDslErrorsEntryRxTooShort' => '1.3.6.1.4.1.2356.11.1.72.4.1.14',
  'lcsStatusDslErrorsEntryRxTooLong' => '1.3.6.1.4.1.2356.11.1.72.4.1.15',
  'lcsStatusDslErrorsEntryTxCarrier' => '1.3.6.1.4.1.2356.11.1.72.4.1.16',
  'lcsStatusDslErrorsEntryTxDeferred' => '1.3.6.1.4.1.2356.11.1.72.4.1.17',
  'lcsStatusDslDeleteValues' => '1.3.6.1.4.1.2356.11.1.72.30',
  'lcsStatusWlanMngmt' => '1.3.6.1.4.1.2356.11.1.73',
  'lcsStatusWlanMngmtControllerState' => '1.3.6.1.4.1.2356.11.1.73.1',
  'lcsStatusWlanMngmtControllerStateDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtControllerState',
  'lcsStatusWlanMngmtApConf' => '1.3.6.1.4.1.2356.11.1.73.2',
  'lcsStatusWlanMngmtApConfNetwprofilsTable' => '1.3.6.1.4.1.2356.11.1.73.2.1',
  'lcsStatusWlanMngmtApConfNetwprofilsEntry' => '1.3.6.1.4.1.2356.11.1.73.2.1.1',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryName' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.1',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryOperating' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.4',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryOperatingDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfNetwprofilsEntryOperating',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryVlanId' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.5',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryEncryption' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.6',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryEncryptionDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfNetwprofilsEntryEncryption',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryWpa1SessionKeytypes' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.7',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryWpa1SessionKeytypesDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfNetwprofilsEntryWpa1SessionKeytypes',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryWpaVersion' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.8',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryWpaVersionDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfNetwprofilsEntryWpaVersion',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryKey' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.9',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryRadioBand' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.10',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryRadioBandDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfNetwprofilsEntryRadioBand',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryContinuation' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.11',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryMinTxRate' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.12',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryMinTxRateDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfNetwprofilsEntryMinTxRate',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryMaxTxRate' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.13',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryMaxTxRateDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfNetwprofilsEntryMaxTxRate',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryBasicRate' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.14',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryBasicRateDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfNetwprofilsEntryBasicRate',
  'lcsStatusWlanMngmtApConfNetwprofilsEntry11bPreamble' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.15',
  'lcsStatusWlanMngmtApConfNetwprofilsEntry11bPreambleDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfNetwprofilsEntry11bPreamble',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryMacFilter' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.16',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryMacFilterDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfNetwprofilsEntryMacFilter',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryClBrgSupport' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.17',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryClBrgSupportDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfNetwprofilsEntryClBrgSupport',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryMaxStations' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.18',
  'lcsStatusWlanMngmtApConfNetwprofilsEntrySsidBroadcast' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.19',
  'lcsStatusWlanMngmtApConfNetwprofilsEntrySsidBroadcastDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfNetwprofilsEntrySsidBroadcast',
  'lcsStatusWlanMngmtApConfNetwprofilsEntrySsid' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.21',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryMinHtMcs' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.22',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryMinHtMcsDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfNetwprofilsEntryMinHtMcs',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryMaxHtMcs' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.23',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryMaxHtMcsDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfNetwprofilsEntryMaxHtMcs',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryShortGuardInterval' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.24',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryShortGuardIntervalDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfNetwprofilsEntryShortGuardInterval',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryMaxSpatialStreams' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.25',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryMaxSpatialStreamsDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfNetwprofilsEntryMaxSpatialStreams',
  'lcsStatusWlanMngmtApConfNetwprofilsEntrySendAggregates' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.26',
  'lcsStatusWlanMngmtApConfNetwprofilsEntrySendAggregatesDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfNetwprofilsEntrySendAggregates',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryWpa2SessionKeytypes' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.27',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryWpa2SessionKeytypesDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfNetwprofilsEntryWpa2SessionKeytypes',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryRadiusAccounting' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.28',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryRadiusAccountingDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfNetwprofilsEntryRadiusAccounting',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryVlanMode' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.30',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryVlanModeDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfNetwprofilsEntryVlanMode',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryConnectSsidTo' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.32',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryConnectSsidToDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfNetwprofilsEntryConnectSsidTo',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryInterStationTraffic' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.33',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryInterStationTrafficDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfNetwprofilsEntryInterStationTraffic',
  'lcsStatusWlanMngmtApConfNetwprofilsEntryVlanIdnew' => '1.3.6.1.4.1.2356.11.1.73.2.1.1.34',
  'lcsStatusWlanMngmtApConfRadioprofilsTable' => '1.3.6.1.4.1.2356.11.1.73.2.2',
  'lcsStatusWlanMngmtApConfRadioprofilsEntry' => '1.3.6.1.4.1.2356.11.1.73.2.2.1',
  'lcsStatusWlanMngmtApConfRadioprofilsEntryName' => '1.3.6.1.4.1.2356.11.1.73.2.2.1.1',
  'lcsStatusWlanMngmtApConfRadioprofilsEntryCountry' => '1.3.6.1.4.1.2356.11.1.73.2.2.1.4',
  'lcsStatusWlanMngmtApConfRadioprofilsEntryCountryDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfRadioprofilsEntryCountry',
  'lcsStatusWlanMngmtApConfRadioprofilsEntryChannelList' => '1.3.6.1.4.1.2356.11.1.73.2.2.1.5',
  'lcsStatusWlanMngmtApConfRadioprofilsEntry24ghzMode' => '1.3.6.1.4.1.2356.11.1.73.2.2.1.6',
  'lcsStatusWlanMngmtApConfRadioprofilsEntry24ghzModeDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfRadioprofilsEntry24ghzMode',
  'lcsStatusWlanMngmtApConfRadioprofilsEntry5ghzMode' => '1.3.6.1.4.1.2356.11.1.73.2.2.1.7',
  'lcsStatusWlanMngmtApConfRadioprofilsEntry5ghzModeDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfRadioprofilsEntry5ghzMode',
  'lcsStatusWlanMngmtApConfRadioprofilsEntrySubbands' => '1.3.6.1.4.1.2356.11.1.73.2.2.1.8',
  'lcsStatusWlanMngmtApConfRadioprofilsEntrySubbandsDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfRadioprofilsEntrySubbands',
  'lcsStatusWlanMngmtApConfRadioprofilsEntryQos' => '1.3.6.1.4.1.2356.11.1.73.2.2.1.9',
  'lcsStatusWlanMngmtApConfRadioprofilsEntryQosDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfRadioprofilsEntryQos',
  'lcsStatusWlanMngmtApConfRadioprofilsEntryDtimPeriod' => '1.3.6.1.4.1.2356.11.1.73.2.2.1.10',
  'lcsStatusWlanMngmtApConfRadioprofilsEntryBackgroundScan' => '1.3.6.1.4.1.2356.11.1.73.2.2.1.11',
  'lcsStatusWlanMngmtApConfRadioprofilsEntryAntennaGain' => '1.3.6.1.4.1.2356.11.1.73.2.2.1.12',
  'lcsStatusWlanMngmtApConfRadioprofilsEntryTxPowerReduction' => '1.3.6.1.4.1.2356.11.1.73.2.2.1.13',
  'lcsStatusWlanMngmtApConfRadioprofilsEntryMgmtVLANId' => '1.3.6.1.4.1.2356.11.1.73.2.2.1.14',
  'lcsStatusWlanMngmtApConfRadioprofilsEntryIndoorOnlyOperation' => '1.3.6.1.4.1.2356.11.1.73.2.2.1.16',
  'lcsStatusWlanMngmtApConfRadioprofilsEntryIndoorOnlyOperationDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfRadioprofilsEntryIndoorOnlyOperation',
  'lcsStatusWlanMngmtApConfRadioprofilsEntryActVlanModOfMngdAps' => '1.3.6.1.4.1.2356.11.1.73.2.2.1.17',
  'lcsStatusWlanMngmtApConfRadioprofilsEntryActVlanModOfMngdApsDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfRadioprofilsEntryActVlanModOfMngdAps',
  'lcsStatusWlanMngmtApConfRadioprofilsEntryMgmtVlanMode' => '1.3.6.1.4.1.2356.11.1.73.2.2.1.18',
  'lcsStatusWlanMngmtApConfRadioprofilsEntryMgmtVlanModeDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfRadioprofilsEntryMgmtVlanMode',
  'lcsStatusWlanMngmtApConfRadioprofilsEntryMgmtVLANIdnew' => '1.3.6.1.4.1.2356.11.1.73.2.2.1.19',
  'lcsStatusWlanMngmtApConfRadioprofilsEntryReportSeenClients' => '1.3.6.1.4.1.2356.11.1.73.2.2.1.20',
  'lcsStatusWlanMngmtApConfRadioprofilsEntryReportSeenClientsDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfRadioprofilsEntryReportSeenClients',
  'lcsStatusWlanMngmtApConfCommonprofilsTable' => '1.3.6.1.4.1.2356.11.1.73.2.3',
  'lcsStatusWlanMngmtApConfCommonprofilsEntry' => '1.3.6.1.4.1.2356.11.1.73.2.3.1',
  'lcsStatusWlanMngmtApConfCommonprofilsEntryName' => '1.3.6.1.4.1.2356.11.1.73.2.3.1.1',
  'lcsStatusWlanMngmtApConfCommonprofilsEntryNetw' => '1.3.6.1.4.1.2356.11.1.73.2.3.1.2',
  'lcsStatusWlanMngmtApConfCommonprofilsEntryApParams' => '1.3.6.1.4.1.2356.11.1.73.2.3.1.3',
  'lcsStatusWlanMngmtApConfCommonprofilsEntryContr' => '1.3.6.1.4.1.2356.11.1.73.2.3.1.4',
  'lcsStatusWlanMngmtApConfApsTable' => '1.3.6.1.4.1.2356.11.1.73.2.4',
  'lcsStatusWlanMngmtApConfApsEntry' => '1.3.6.1.4.1.2356.11.1.73.2.4.1',
  'lcsStatusWlanMngmtApConfApsEntryMacAddress' => '1.3.6.1.4.1.2356.11.1.73.2.4.1.1',
  'lcsStatusWlanMngmtApConfApsEntryName' => '1.3.6.1.4.1.2356.11.1.73.2.4.1.2',
  'lcsStatusWlanMngmtApConfApsEntryLocation' => '1.3.6.1.4.1.2356.11.1.73.2.4.1.3',
  'lcsStatusWlanMngmtApConfApsEntryProfile' => '1.3.6.1.4.1.2356.11.1.73.2.4.1.4',
  'lcsStatusWlanMngmtApConfApsEntryDeviceParameters' => '1.3.6.1.4.1.2356.11.1.73.2.4.1.5',
  'lcsStatusWlanMngmtApConfApsEntryEncryption' => '1.3.6.1.4.1.2356.11.1.73.2.4.1.6',
  'lcsStatusWlanMngmtApConfApsEntryEncryptionDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfApsEntryEncryption',
  'lcsStatusWlanMngmtApConfApsEntryWlanModule1' => '1.3.6.1.4.1.2356.11.1.73.2.4.1.7',
  'lcsStatusWlanMngmtApConfApsEntryWlanModule1Definition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfApsEntryWlanModule1',
  'lcsStatusWlanMngmtApConfApsEntryWlanModule2' => '1.3.6.1.4.1.2356.11.1.73.2.4.1.8',
  'lcsStatusWlanMngmtApConfApsEntryWlanModule2Definition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfApsEntryWlanModule2',
  'lcsStatusWlanMngmtApConfApsEntryModule1ChannelList' => '1.3.6.1.4.1.2356.11.1.73.2.4.1.9',
  'lcsStatusWlanMngmtApConfApsEntryModule2ChannelList' => '1.3.6.1.4.1.2356.11.1.73.2.4.1.10',
  'lcsStatusWlanMngmtApConfApsEntryOperating' => '1.3.6.1.4.1.2356.11.1.73.2.4.1.11',
  'lcsStatusWlanMngmtApConfApsEntryOperatingDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfApsEntryOperating',
  'lcsStatusWlanMngmtApConfApsEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.73.2.4.1.12',
  'lcsStatusWlanMngmtApConfApsEntryNetmask' => '1.3.6.1.4.1.2356.11.1.73.2.4.1.13',
  'lcsStatusWlanMngmtApConfApsEntryGateway' => '1.3.6.1.4.1.2356.11.1.73.2.4.1.14',
  'lcsStatusWlanMngmtApConfApsEntryAllow40mhz' => '1.3.6.1.4.1.2356.11.1.73.2.4.1.15',
  'lcsStatusWlanMngmtApConfApsEntryAllow40mhzDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfApsEntryAllow40mhz',
  'lcsStatusWlanMngmtApConfApsEntryAntennaMask' => '1.3.6.1.4.1.2356.11.1.73.2.4.1.16',
  'lcsStatusWlanMngmtApConfApsEntryAntennaMaskDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfApsEntryAntennaMask',
  'lcsStatusWlanMngmtApConfApsEntryApIntranet' => '1.3.6.1.4.1.2356.11.1.73.2.4.1.17',
  'lcsStatusWlanMngmtApConfApsEntryManageFirmware' => '1.3.6.1.4.1.2356.11.1.73.2.4.1.18',
  'lcsStatusWlanMngmtApConfApsEntryManageFirmwareDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfApsEntryManageFirmware',
  'lcsStatusWlanMngmtApConfApsEntryMngmtFwAddInfo' => '1.3.6.1.4.1.2356.11.1.73.2.4.1.19',
  'lcsStatusWlanMngmtApConfApsEntryMngmtFwAddInfoDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfApsEntryMngmtFwAddInfo',
  'lcsStatusWlanMngmtApConfApsEntryModule1AntGain' => '1.3.6.1.4.1.2356.11.1.73.2.4.1.20',
  'lcsStatusWlanMngmtApConfApsEntryModule2AntGain' => '1.3.6.1.4.1.2356.11.1.73.2.4.1.21',
  'lcsStatusWlanMngmtApConfApsEntryModule1TxReduct' => '1.3.6.1.4.1.2356.11.1.73.2.4.1.22',
  'lcsStatusWlanMngmtApConfApsEntryModule2TxReduct' => '1.3.6.1.4.1.2356.11.1.73.2.4.1.23',
  'lcsStatusWlanMngmtApConfNetwProfErrorsTable' => '1.3.6.1.4.1.2356.11.1.73.2.5',
  'lcsStatusWlanMngmtApConfNetwProfErrorsEntry' => '1.3.6.1.4.1.2356.11.1.73.2.5.1',
  'lcsStatusWlanMngmtApConfNetwProfErrorsEntryIndex' => '1.3.6.1.4.1.2356.11.1.73.2.5.1.1',
  'lcsStatusWlanMngmtApConfNetwProfErrorsEntryName' => '1.3.6.1.4.1.2356.11.1.73.2.5.1.2',
  'lcsStatusWlanMngmtApConfNetwProfErrorsEntryError' => '1.3.6.1.4.1.2356.11.1.73.2.5.1.3',
  'lcsStatusWlanMngmtApConfNetwProfErrorsEntryErrorDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfNetwProfErrorsEntryError',
  'lcsStatusWlanMngmtApConfRadioProfErrorsTable' => '1.3.6.1.4.1.2356.11.1.73.2.6',
  'lcsStatusWlanMngmtApConfRadioProfErrorsEntry' => '1.3.6.1.4.1.2356.11.1.73.2.6.1',
  'lcsStatusWlanMngmtApConfRadioProfErrorsEntryIndex' => '1.3.6.1.4.1.2356.11.1.73.2.6.1.1',
  'lcsStatusWlanMngmtApConfRadioProfErrorsEntryName' => '1.3.6.1.4.1.2356.11.1.73.2.6.1.2',
  'lcsStatusWlanMngmtApConfRadioProfErrorsEntryError' => '1.3.6.1.4.1.2356.11.1.73.2.6.1.3',
  'lcsStatusWlanMngmtApConfRadioProfErrorsEntryErrorDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfRadioProfErrorsEntryError',
  'lcsStatusWlanMngmtApConfCommProfErrorsTable' => '1.3.6.1.4.1.2356.11.1.73.2.7',
  'lcsStatusWlanMngmtApConfCommProfErrorsEntry' => '1.3.6.1.4.1.2356.11.1.73.2.7.1',
  'lcsStatusWlanMngmtApConfCommProfErrorsEntryIndex' => '1.3.6.1.4.1.2356.11.1.73.2.7.1.1',
  'lcsStatusWlanMngmtApConfCommProfErrorsEntryName' => '1.3.6.1.4.1.2356.11.1.73.2.7.1.2',
  'lcsStatusWlanMngmtApConfCommProfErrorsEntryError' => '1.3.6.1.4.1.2356.11.1.73.2.7.1.3',
  'lcsStatusWlanMngmtApConfCommProfErrorsEntryErrorDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfCommProfErrorsEntryError',
  'lcsStatusWlanMngmtApConfCommProfErrorsEntryNetworkApParameters' => '1.3.6.1.4.1.2356.11.1.73.2.7.1.4',
  'lcsStatusWlanMngmtApConfApConfErrorsTable' => '1.3.6.1.4.1.2356.11.1.73.2.8',
  'lcsStatusWlanMngmtApConfApConfErrorsEntry' => '1.3.6.1.4.1.2356.11.1.73.2.8.1',
  'lcsStatusWlanMngmtApConfApConfErrorsEntryIndex' => '1.3.6.1.4.1.2356.11.1.73.2.8.1.1',
  'lcsStatusWlanMngmtApConfApConfErrorsEntryName' => '1.3.6.1.4.1.2356.11.1.73.2.8.1.2',
  'lcsStatusWlanMngmtApConfApConfErrorsEntryError' => '1.3.6.1.4.1.2356.11.1.73.2.8.1.3',
  'lcsStatusWlanMngmtApConfApConfErrorsEntryErrorDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfApConfErrorsEntryError',
  'lcsStatusWlanMngmtApConfApConfErrorsEntryProfile' => '1.3.6.1.4.1.2356.11.1.73.2.8.1.4',
  'lcsStatusWlanMngmtApConfApIntranetsTable' => '1.3.6.1.4.1.2356.11.1.73.2.9',
  'lcsStatusWlanMngmtApConfApIntranetsEntry' => '1.3.6.1.4.1.2356.11.1.73.2.9.1',
  'lcsStatusWlanMngmtApConfApIntranetsEntryName' => '1.3.6.1.4.1.2356.11.1.73.2.9.1.1',
  'lcsStatusWlanMngmtApConfApIntranetsEntryParentName' => '1.3.6.1.4.1.2356.11.1.73.2.9.1.2',
  'lcsStatusWlanMngmtApConfApIntranetsEntryLocVal' => '1.3.6.1.4.1.2356.11.1.73.2.9.1.3',
  'lcsStatusWlanMngmtApConfApIntranetsEntryDomainName' => '1.3.6.1.4.1.2356.11.1.73.2.9.1.4',
  'lcsStatusWlanMngmtApConfApIntranetsEntryNetmask' => '1.3.6.1.4.1.2356.11.1.73.2.9.1.5',
  'lcsStatusWlanMngmtApConfApIntranetsEntryGateway' => '1.3.6.1.4.1.2356.11.1.73.2.9.1.6',
  'lcsStatusWlanMngmtApConfApIntranetsEntryPrimaryDnsSrv' => '1.3.6.1.4.1.2356.11.1.73.2.9.1.7',
  'lcsStatusWlanMngmtApConfApIntranetsEntrySecondaryDnsSrv' => '1.3.6.1.4.1.2356.11.1.73.2.9.1.8',
  'lcsStatusWlanMngmtApConfApIntranetErrorsTable' => '1.3.6.1.4.1.2356.11.1.73.2.10',
  'lcsStatusWlanMngmtApConfApIntranetErrorsEntry' => '1.3.6.1.4.1.2356.11.1.73.2.10.1',
  'lcsStatusWlanMngmtApConfApIntranetErrorsEntryIndex' => '1.3.6.1.4.1.2356.11.1.73.2.10.1.1',
  'lcsStatusWlanMngmtApConfApIntranetErrorsEntryName' => '1.3.6.1.4.1.2356.11.1.73.2.10.1.2',
  'lcsStatusWlanMngmtApConfApIntranetErrorsEntryError' => '1.3.6.1.4.1.2356.11.1.73.2.10.1.3',
  'lcsStatusWlanMngmtApConfApIntranetErrorsEntryErrorDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConfApIntranetErrorsEntryError',
  'lcsStatusWlanMngmtNumberOfApConnections' => '1.3.6.1.4.1.2356.11.1.73.3',
  'lcsStatusWlanMngmtApConnectionsTable' => '1.3.6.1.4.1.2356.11.1.73.4',
  'lcsStatusWlanMngmtApConnectionsEntry' => '1.3.6.1.4.1.2356.11.1.73.4.1',
  'lcsStatusWlanMngmtApConnectionsEntryJob' => '1.3.6.1.4.1.2356.11.1.73.4.1.1',
  'lcsStatusWlanMngmtApConnectionsEntryJobId' => '1.3.6.1.4.1.2356.11.1.73.4.1.2',
  'lcsStatusWlanMngmtApConnectionsEntryApLanMac' => '1.3.6.1.4.1.2356.11.1.73.4.1.3',
  'lcsStatusWlanMngmtApConnectionsEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.73.4.1.4',
  'lcsStatusWlanMngmtApConnectionsEntryAuthorized' => '1.3.6.1.4.1.2356.11.1.73.4.1.5',
  'lcsStatusWlanMngmtApConnectionsEntryAuthorizedDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConnectionsEntryAuthorized',
  'lcsStatusWlanMngmtApConnectionsEntryState' => '1.3.6.1.4.1.2356.11.1.73.4.1.6',
  'lcsStatusWlanMngmtApConnectionsEntryStateDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConnectionsEntryState',
  'lcsStatusWlanMngmtApConnectionsEntryConfiguration' => '1.3.6.1.4.1.2356.11.1.73.4.1.7',
  'lcsStatusWlanMngmtApConnectionsEntryConfigurationDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConnectionsEntryConfiguration',
  'lcsStatusWlanMngmtApConnectionsEntryEncrypted' => '1.3.6.1.4.1.2356.11.1.73.4.1.8',
  'lcsStatusWlanMngmtApConnectionsEntryEncryptedDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConnectionsEntryEncrypted',
  'lcsStatusWlanMngmtApConnectionsEntryPmtu' => '1.3.6.1.4.1.2356.11.1.73.4.1.9',
  'lcsStatusWlanMngmtApConnectionsEntryDscpForControlPackets' => '1.3.6.1.4.1.2356.11.1.73.4.1.10',
  'lcsStatusWlanMngmtApConnectionsEntryDscpForControlPacketsDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConnectionsEntryDscpForControlPackets',
  'lcsStatusWlanMngmtApConnectionsEntryDscpForDataPackets' => '1.3.6.1.4.1.2356.11.1.73.4.1.11',
  'lcsStatusWlanMngmtApConnectionsEntryDscpForDataPacketsDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApConnectionsEntryDscpForDataPackets',
  'lcsStatusWlanMngmtExpectedAp' => '1.3.6.1.4.1.2356.11.1.73.5',
  'lcsStatusWlanMngmtConnectedExpectedAp' => '1.3.6.1.4.1.2356.11.1.73.6',
  'lcsStatusWlanMngmtConnectedManagedAp' => '1.3.6.1.4.1.2356.11.1.73.7',
  'lcsStatusWlanMngmtConnectedNewAp' => '1.3.6.1.4.1.2356.11.1.73.8',
  'lcsStatusWlanMngmtApStatus' => '1.3.6.1.4.1.2356.11.1.73.9',
  'lcsStatusWlanMngmtApStatusMissingApTable' => '1.3.6.1.4.1.2356.11.1.73.9.1',
  'lcsStatusWlanMngmtApStatusMissingApEntry' => '1.3.6.1.4.1.2356.11.1.73.9.1.1',
  'lcsStatusWlanMngmtApStatusMissingApEntryApLanMac' => '1.3.6.1.4.1.2356.11.1.73.9.1.1.1',
  'lcsStatusWlanMngmtApStatusMissingApEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.73.9.1.1.2',
  'lcsStatusWlanMngmtApStatusMissingApEntryName' => '1.3.6.1.4.1.2356.11.1.73.9.1.1.3',
  'lcsStatusWlanMngmtApStatusMissingApEntryLocation' => '1.3.6.1.4.1.2356.11.1.73.9.1.1.4',
  'lcsStatusWlanMngmtApStatusMissingApEntryValid' => '1.3.6.1.4.1.2356.11.1.73.9.1.1.5',
  'lcsStatusWlanMngmtApStatusMissingApEntryValidDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApStatusMissingApEntryValid',
  'lcsStatusWlanMngmtApStatusMissingApEntryModule' => '1.3.6.1.4.1.2356.11.1.73.9.1.1.21',
  'lcsStatusWlanMngmtApStatusActiveRadiosTable' => '1.3.6.1.4.1.2356.11.1.73.9.2',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntry' => '1.3.6.1.4.1.2356.11.1.73.9.2.1',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryApLanMac' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.1',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.2',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryName' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.3',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryLocation' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.4',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryValid' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.5',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryValidDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApStatusActiveRadiosEntryValid',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryApWlanMac' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.6',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryIfc' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.7',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryRadioBand' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.8',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryRadioChannel' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.9',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryClientCount' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.10',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryBackgroundScan' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.11',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryCardId' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.12',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryCardFirmwareVersion' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.13',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryCardSerialNumber' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.14',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryOperating' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.15',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryOperatingDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApStatusActiveRadiosEntryOperating',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryTransmitPower' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.16',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryEirp' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.17',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryExcEirp' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.18',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryInternal' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.19',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryInternalDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApStatusActiveRadiosEntryInternal',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryRadios' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.20',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryModule' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.21',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntrySerialNumber' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.22',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryVersion' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.23',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryCardState' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.24',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryCardStateDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApStatusActiveRadiosEntryCardState',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryRadioFldOpt' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.25',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryRadioFldOptDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApStatusActiveRadiosEntryRadioFldOpt',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryMinimalModemLoad' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.26',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryMaximalModemLoad' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.27',
  'lcsStatusWlanMngmtApStatusActiveRadiosEntryAverageModemLoad' => '1.3.6.1.4.1.2356.11.1.73.9.2.1.28',
  'lcsStatusWlanMngmtApStatusNewApTable' => '1.3.6.1.4.1.2356.11.1.73.9.3',
  'lcsStatusWlanMngmtApStatusNewApEntry' => '1.3.6.1.4.1.2356.11.1.73.9.3.1',
  'lcsStatusWlanMngmtApStatusNewApEntryApLanMac' => '1.3.6.1.4.1.2356.11.1.73.9.3.1.1',
  'lcsStatusWlanMngmtApStatusNewApEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.73.9.3.1.2',
  'lcsStatusWlanMngmtApStatusNewApEntryName' => '1.3.6.1.4.1.2356.11.1.73.9.3.1.3',
  'lcsStatusWlanMngmtApStatusNewApEntryLocation' => '1.3.6.1.4.1.2356.11.1.73.9.3.1.4',
  'lcsStatusWlanMngmtApStatusNewApEntryValid' => '1.3.6.1.4.1.2356.11.1.73.9.3.1.5',
  'lcsStatusWlanMngmtApStatusNewApEntryValidDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApStatusNewApEntryValid',
  'lcsStatusWlanMngmtApStatusNewApEntryConfiguration' => '1.3.6.1.4.1.2356.11.1.73.9.3.1.6',
  'lcsStatusWlanMngmtApStatusNewApEntryConfigurationDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApStatusNewApEntryConfiguration',
  'lcsStatusWlanMngmtApStatusNextdoorApTable' => '1.3.6.1.4.1.2356.11.1.73.9.4',
  'lcsStatusWlanMngmtApStatusNextdoorApEntry' => '1.3.6.1.4.1.2356.11.1.73.9.4.1',
  'lcsStatusWlanMngmtApStatusNextdoorApEntryApLanMac' => '1.3.6.1.4.1.2356.11.1.73.9.4.1.1',
  'lcsStatusWlanMngmtApStatusNextdoorApEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.73.9.4.1.2',
  'lcsStatusWlanMngmtApStatusNextdoorApEntryName' => '1.3.6.1.4.1.2356.11.1.73.9.4.1.3',
  'lcsStatusWlanMngmtApStatusNextdoorApEntryLocation' => '1.3.6.1.4.1.2356.11.1.73.9.4.1.4',
  'lcsStatusWlanMngmtApStatusNextdoorApEntryValid' => '1.3.6.1.4.1.2356.11.1.73.9.4.1.5',
  'lcsStatusWlanMngmtApStatusNextdoorApEntryValidDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtApStatusNextdoorApEntryValid',
  'lcsStatusWlanMngmtApStatusNextdoorApEntryWlcName' => '1.3.6.1.4.1.2356.11.1.73.9.4.1.6',
  'lcsStatusWlanMngmtApStatusNextdoorApEntryWlcLanMac' => '1.3.6.1.4.1.2356.11.1.73.9.4.1.7',
  'lcsStatusWlanMngmtAcceptAp' => '1.3.6.1.4.1.2356.11.1.73.10',
  'lcsStatusWlanMngmtDisconnectAp' => '1.3.6.1.4.1.2356.11.1.73.11',
  'lcsStatusWlanMngmtCentralFwMngmt' => '1.3.6.1.4.1.2356.11.1.73.20',
  'lcsStatusWlanMngmtCentralFwMngmtAvailFwTable' => '1.3.6.1.4.1.2356.11.1.73.20.12',
  'lcsStatusWlanMngmtCentralFwMngmtAvailFwEntry' => '1.3.6.1.4.1.2356.11.1.73.20.12.1',
  'lcsStatusWlanMngmtCentralFwMngmtAvailFwEntryIndex' => '1.3.6.1.4.1.2356.11.1.73.20.12.1.1',
  'lcsStatusWlanMngmtCentralFwMngmtAvailFwEntryDevice' => '1.3.6.1.4.1.2356.11.1.73.20.12.1.2',
  'lcsStatusWlanMngmtCentralFwMngmtAvailFwEntryVersion' => '1.3.6.1.4.1.2356.11.1.73.20.12.1.3',
  'lcsStatusWlanMngmtCentralFwMngmtAvailFwEntryDate' => '1.3.6.1.4.1.2356.11.1.73.20.12.1.4',
  'lcsStatusWlanMngmtCentralFwMngmtAvailFwEntryDescription' => '1.3.6.1.4.1.2356.11.1.73.20.12.1.5',
  'lcsStatusWlanMngmtCentralFwMngmtAvailFwEntryFileType' => '1.3.6.1.4.1.2356.11.1.73.20.12.1.6',
  'lcsStatusWlanMngmtCentralFwMngmtAvailFwEntryFileTypeDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtCentralFwMngmtAvailFwEntryFileType',
  'lcsStatusWlanMngmtCentralFwMngmtAvailFwEntryFilesize' => '1.3.6.1.4.1.2356.11.1.73.20.12.1.7',
  'lcsStatusWlanMngmtCentralFwMngmtAvailFwEntryLoaded' => '1.3.6.1.4.1.2356.11.1.73.20.12.1.8',
  'lcsStatusWlanMngmtCentralFwMngmtAvailFwEntryLoadedDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtCentralFwMngmtAvailFwEntryLoaded',
  'lcsStatusWlanMngmtCentralFwMngmtAvailFwEntryRunningUpdates' => '1.3.6.1.4.1.2356.11.1.73.20.12.1.9',
  'lcsStatusWlanMngmtCentralFwMngmtAvailFwEntryCompatibilityId' => '1.3.6.1.4.1.2356.11.1.73.20.12.1.10',
  'lcsStatusWlanMngmtCentralFwMngmtAvailableScriptsTable' => '1.3.6.1.4.1.2356.11.1.73.20.13',
  'lcsStatusWlanMngmtCentralFwMngmtAvailableScriptsEntry' => '1.3.6.1.4.1.2356.11.1.73.20.13.1',
  'lcsStatusWlanMngmtCentralFwMngmtAvailableScriptsEntryIndex' => '1.3.6.1.4.1.2356.11.1.73.20.13.1.1',
  'lcsStatusWlanMngmtCentralFwMngmtAvailableScriptsEntryName' => '1.3.6.1.4.1.2356.11.1.73.20.13.1.2',
  'lcsStatusWlanMngmtCentralFwMngmtAvailableScriptsEntryFilesize' => '1.3.6.1.4.1.2356.11.1.73.20.13.1.3',
  'lcsStatusWlanMngmtCentralFwMngmtAvailableScriptsEntryCommentary' => '1.3.6.1.4.1.2356.11.1.73.20.13.1.4',
  'lcsStatusWlanMngmtCentralFwMngmtAvailableScriptsEntryRunTransm' => '1.3.6.1.4.1.2356.11.1.73.20.13.1.5',
  'lcsStatusWlanMngmtCentralFwMngmtFetchJobStatus' => '1.3.6.1.4.1.2356.11.1.73.20.14',
  'lcsStatusWlanMngmtCentralFwMngmtFetchJobStatusDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtCentralFwMngmtFetchJobStatus',
  'lcsStatusWlanMngmtCentralFwMngmtLoadedFirmwares' => '1.3.6.1.4.1.2356.11.1.73.20.15',
  'lcsStatusWlanMngmtCentralFwMngmtUsedMemory' => '1.3.6.1.4.1.2356.11.1.73.20.16',
  'lcsStatusWlanMngmtCentralFwMngmtUpdFwScriptInfo' => '1.3.6.1.4.1.2356.11.1.73.20.17',
  'lcsStatusWlanMngmtCentralFwMngmtRebootUpdatedAps' => '1.3.6.1.4.1.2356.11.1.73.20.18',
  'lcsStatusWlanMngmtLicenseCount' => '1.3.6.1.4.1.2356.11.1.73.32',
  'lcsStatusWlanMngmtLicenseLimit' => '1.3.6.1.4.1.2356.11.1.73.33',
  'lcsStatusWlanMngmtQueueBlockErrors' => '1.3.6.1.4.1.2356.11.1.73.34',
  'lcsStatusWlanMngmtClientCount' => '1.3.6.1.4.1.2356.11.1.73.35',
  'lcsStatusWlanMngmtWlcBridgeInterfacesTable' => '1.3.6.1.4.1.2356.11.1.73.36',
  'lcsStatusWlanMngmtWlcBridgeInterfacesEntry' => '1.3.6.1.4.1.2356.11.1.73.36.1',
  'lcsStatusWlanMngmtWlcBridgeInterfacesEntryBridgeInterface' => '1.3.6.1.4.1.2356.11.1.73.36.1.1',
  'lcsStatusWlanMngmtWlcBridgeInterfacesEntryBridgeInterfaceDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtWlcBridgeInterfacesEntryBridgeInterface',
  'lcsStatusWlanMngmtWlcBridgeInterfacesEntryRegisteredConnections' => '1.3.6.1.4.1.2356.11.1.73.36.1.2',
  'lcsStatusWlanMngmtWlcBridgeInterfacesEntryRecvUnicasts' => '1.3.6.1.4.1.2356.11.1.73.36.1.3',
  'lcsStatusWlanMngmtWlcBridgeInterfacesEntryRecvMulticasts' => '1.3.6.1.4.1.2356.11.1.73.36.1.4',
  'lcsStatusWlanMngmtWlcBridgeInterfacesEntryRecvBroadcasts' => '1.3.6.1.4.1.2356.11.1.73.36.1.5',
  'lcsStatusWlanMngmtWlcBridgeInterfacesEntryTransUnicastPackets' => '1.3.6.1.4.1.2356.11.1.73.36.1.6',
  'lcsStatusWlanMngmtWlcBridgeInterfacesEntryTransMultiBroadPckts' => '1.3.6.1.4.1.2356.11.1.73.36.1.7',
  'lcsStatusWlanMngmtWlcBridgeInterfacesEntryDroppedPackets' => '1.3.6.1.4.1.2356.11.1.73.36.1.8',
  'lcsStatusWlanMngmtWlcBridgeInterfacesEntryUnicastConnections' => '1.3.6.1.4.1.2356.11.1.73.36.1.9',
  'lcsStatusWlanMngmtWlcTunnels' => '1.3.6.1.4.1.2356.11.1.73.40',
  'lcsStatusWlanMngmtWlcTunnelsWlcDataTunnelActive' => '1.3.6.1.4.1.2356.11.1.73.40.2',
  'lcsStatusWlanMngmtWlcTunnelsWlcDataTunnelActiveDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtWlcTunnelsWlcDataTunnelActive',
  'lcsStatusWlanMngmtWlcTunnelsNumberOfWlcConn' => '1.3.6.1.4.1.2356.11.1.73.40.4',
  'lcsStatusWlanMngmtWlcTunnelsActiveConnections' => '1.3.6.1.4.1.2356.11.1.73.40.5',
  'lcsStatusWlanMngmtWlcTunnelsWlcConnectionsTable' => '1.3.6.1.4.1.2356.11.1.73.40.6',
  'lcsStatusWlanMngmtWlcTunnelsWlcConnectionsEntry' => '1.3.6.1.4.1.2356.11.1.73.40.6.1',
  'lcsStatusWlanMngmtWlcTunnelsWlcConnectionsEntryConnId' => '1.3.6.1.4.1.2356.11.1.73.40.6.1.1',
  'lcsStatusWlanMngmtWlcTunnelsWlcConnectionsEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.73.40.6.1.2',
  'lcsStatusWlanMngmtWlcTunnelsWlcConnectionsEntryPort' => '1.3.6.1.4.1.2356.11.1.73.40.6.1.3',
  'lcsStatusWlanMngmtWlcTunnelsWlcConnectionsEntryResult' => '1.3.6.1.4.1.2356.11.1.73.40.6.1.4',
  'lcsStatusWlanMngmtWlcTunnelsWlcConnectionsEntryResultDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtWlcTunnelsWlcConnectionsEntryResult',
  'lcsStatusWlanMngmtWlcTunnelsWlcConnectionsEntryName' => '1.3.6.1.4.1.2356.11.1.73.40.6.1.5',
  'lcsStatusWlanMngmtWlcTunnelsWlcConnectionsEntryState' => '1.3.6.1.4.1.2356.11.1.73.40.6.1.6',
  'lcsStatusWlanMngmtWlcTunnelsWlcConnectionsEntryStateDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtWlcTunnelsWlcConnectionsEntryState',
  'lcsStatusWlanMngmtWlcTunnelsWlcConnectionsEntryValid' => '1.3.6.1.4.1.2356.11.1.73.40.6.1.7',
  'lcsStatusWlanMngmtWlcTunnelsWlcConnectionsEntryValidDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtWlcTunnelsWlcConnectionsEntryValid',
  'lcsStatusWlanMngmtWlcTunnelsWlcConnectionsEntryMacAddress' => '1.3.6.1.4.1.2356.11.1.73.40.6.1.8',
  'lcsStatusWlanMngmtWlcTunnelsWlcConnectionsEntryFirmwareVersion' => '1.3.6.1.4.1.2356.11.1.73.40.6.1.9',
  'lcsStatusWlanMngmtWlcTunnelsWlcConnectionsEntryPmtu' => '1.3.6.1.4.1.2356.11.1.73.40.6.1.10',
  'lcsStatusWlanMngmtWlcTunnelsWlcDiscoveryTable' => '1.3.6.1.4.1.2356.11.1.73.40.7',
  'lcsStatusWlanMngmtWlcTunnelsWlcDiscoveryEntry' => '1.3.6.1.4.1.2356.11.1.73.40.7.1',
  'lcsStatusWlanMngmtWlcTunnelsWlcDiscoveryEntryNetwork' => '1.3.6.1.4.1.2356.11.1.73.40.7.1.1',
  'lcsStatusWlanMngmtWlcTunnelsWlcDiscoveryEntryActive' => '1.3.6.1.4.1.2356.11.1.73.40.7.1.2',
  'lcsStatusWlanMngmtWlcTunnelsWlcDiscoveryEntryActiveDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtWlcTunnelsWlcDiscoveryEntryActive',
  'lcsStatusWlanMngmtNextdoorAp' => '1.3.6.1.4.1.2356.11.1.73.41',
  'lcsStatusWlanMngmtStationTableTable' => '1.3.6.1.4.1.2356.11.1.73.100',
  'lcsStatusWlanMngmtStationTableEntry' => '1.3.6.1.4.1.2356.11.1.73.100.1',
  'lcsStatusWlanMngmtStationTableEntryClientMac' => '1.3.6.1.4.1.2356.11.1.73.100.1.1',
  'lcsStatusWlanMngmtStationTableEntryApWlanMac' => '1.3.6.1.4.1.2356.11.1.73.100.1.2',
  'lcsStatusWlanMngmtStationTableEntryIdentification' => '1.3.6.1.4.1.2356.11.1.73.100.1.3',
  'lcsStatusWlanMngmtStationTableEntryTrap' => '1.3.6.1.4.1.2356.11.1.73.100.1.4',
  'lcsStatusWlanMngmtStationTableEntryPhySignal' => '1.3.6.1.4.1.2356.11.1.73.100.1.5',
  'lcsStatusWlanMngmtStationTableEntryTxRate' => '1.3.6.1.4.1.2356.11.1.73.100.1.6',
  'lcsStatusWlanMngmtStationTableEntryTxRateDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtStationTableEntryTxRate',
  'lcsStatusWlanMngmtStationTableEntryRxRate' => '1.3.6.1.4.1.2356.11.1.73.100.1.7',
  'lcsStatusWlanMngmtStationTableEntryRxRateDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtStationTableEntryRxRate',
  'lcsStatusWlanMngmtStationTableEntryNetworkName' => '1.3.6.1.4.1.2356.11.1.73.100.1.8',
  'lcsStatusWlanMngmtStationTableEntryKeyType' => '1.3.6.1.4.1.2356.11.1.73.100.1.9',
  'lcsStatusWlanMngmtStationTableEntryKeyTypeDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtStationTableEntryKeyType',
  'lcsStatusWlanMngmtStationTableEntryWpaVersion' => '1.3.6.1.4.1.2356.11.1.73.100.1.10',
  'lcsStatusWlanMngmtStationTableEntryWpaVersionDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtStationTableEntryWpaVersion',
  'lcsStatusWlanMngmtStationTableEntryState' => '1.3.6.1.4.1.2356.11.1.73.100.1.11',
  'lcsStatusWlanMngmtStationTableEntryStateDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtStationTableEntryState',
  'lcsStatusWlanMngmtStationTableEntryLastError' => '1.3.6.1.4.1.2356.11.1.73.100.1.12',
  'lcsStatusWlanMngmtStationTableEntryLastErrorDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtStationTableEntryLastError',
  'lcsStatusWlanMngmtStationTableEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.73.100.1.13',
  'lcsStatusWlanMngmtStationTableEntryInterface' => '1.3.6.1.4.1.2356.11.1.73.100.1.14',
  'lcsStatusWlanMngmtStationTableEntryInterfaceDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtStationTableEntryInterface',
  'lcsStatusWlanMngmtStationTableEntryThroughput' => '1.3.6.1.4.1.2356.11.1.73.100.1.15',
  'lcsStatusWlanMngmtStationTableEntryCompression' => '1.3.6.1.4.1.2356.11.1.73.100.1.16',
  'lcsStatusWlanMngmtStationTableEntryApLanMac' => '1.3.6.1.4.1.2356.11.1.73.100.1.17',
  'lcsStatusWlanMngmtStationTableEntryApName' => '1.3.6.1.4.1.2356.11.1.73.100.1.18',
  'lcsStatusWlanMngmtStationTableEntryValid' => '1.3.6.1.4.1.2356.11.1.73.100.1.19',
  'lcsStatusWlanMngmtStationTableEntryValidDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtStationTableEntryValid',
  'lcsStatusWlanMngmtStationTableEntryEffTxRate' => '1.3.6.1.4.1.2356.11.1.73.100.1.20',
  'lcsStatusWlanMngmtStationTableEntryEffRxRate' => '1.3.6.1.4.1.2356.11.1.73.100.1.21',
  'lcsStatusWlanMngmtStationTableEntryBssid' => '1.3.6.1.4.1.2356.11.1.73.100.1.22',
  'lcsStatusWlanMngmtNetworksTable' => '1.3.6.1.4.1.2356.11.1.73.101',
  'lcsStatusWlanMngmtNetworksEntry' => '1.3.6.1.4.1.2356.11.1.73.101.1',
  'lcsStatusWlanMngmtNetworksEntryBssid' => '1.3.6.1.4.1.2356.11.1.73.101.1.1',
  'lcsStatusWlanMngmtNetworksEntryApLanMac' => '1.3.6.1.4.1.2356.11.1.73.101.1.2',
  'lcsStatusWlanMngmtNetworksEntryApWlanMac' => '1.3.6.1.4.1.2356.11.1.73.101.1.3',
  'lcsStatusWlanMngmtNetworksEntryApName' => '1.3.6.1.4.1.2356.11.1.73.101.1.4',
  'lcsStatusWlanMngmtNetworksEntryInterface' => '1.3.6.1.4.1.2356.11.1.73.101.1.5',
  'lcsStatusWlanMngmtNetworksEntryInterfaceDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtNetworksEntryInterface',
  'lcsStatusWlanMngmtNetworksEntryNetNumber' => '1.3.6.1.4.1.2356.11.1.73.101.1.6',
  'lcsStatusWlanMngmtNetworksEntryName' => '1.3.6.1.4.1.2356.11.1.73.101.1.7',
  'lcsStatusWlanMngmtNetworksEntryClientCount' => '1.3.6.1.4.1.2356.11.1.73.101.1.8',
  'lcsStatusWlanMngmtNetworksEntryValid' => '1.3.6.1.4.1.2356.11.1.73.101.1.9',
  'lcsStatusWlanMngmtNetworksEntryValidDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtNetworksEntryValid',
  'lcsStatusWlanMngmtNetCountTable' => '1.3.6.1.4.1.2356.11.1.73.102',
  'lcsStatusWlanMngmtNetCountEntry' => '1.3.6.1.4.1.2356.11.1.73.102.1',
  'lcsStatusWlanMngmtNetCountEntryName' => '1.3.6.1.4.1.2356.11.1.73.102.1.1',
  'lcsStatusWlanMngmtNetCountEntryNumRadios' => '1.3.6.1.4.1.2356.11.1.73.102.1.2',
  'lcsStatusWlanMngmtNetCountEntryNumStations' => '1.3.6.1.4.1.2356.11.1.73.102.1.3',
  'lcsStatusWlanMngmtNetCountEntrySsid' => '1.3.6.1.4.1.2356.11.1.73.102.1.4',
  'lcsStatusWlanMngmtNetCountEntryBridgeInterface' => '1.3.6.1.4.1.2356.11.1.73.102.1.5',
  'lcsStatusWlanMngmtNetCountEntryBridgeInterfaceDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtNetCountEntryBridgeInterface',
  'lcsStatusWlanMngmtScanResultsTable' => '1.3.6.1.4.1.2356.11.1.73.120',
  'lcsStatusWlanMngmtScanResultsEntry' => '1.3.6.1.4.1.2356.11.1.73.120.1',
  'lcsStatusWlanMngmtScanResultsEntryBssid' => '1.3.6.1.4.1.2356.11.1.73.120.1.1',
  'lcsStatusWlanMngmtScanResultsEntryApName' => '1.3.6.1.4.1.2356.11.1.73.120.1.2',
  'lcsStatusWlanMngmtScanResultsEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.73.120.1.3',
  'lcsStatusWlanMngmtScanResultsEntryApLanMac' => '1.3.6.1.4.1.2356.11.1.73.120.1.4',
  'lcsStatusWlanMngmtScanResultsEntryInterface' => '1.3.6.1.4.1.2356.11.1.73.120.1.5',
  'lcsStatusWlanMngmtScanResultsEntryInterfaceDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtScanResultsEntryInterface',
  'lcsStatusWlanMngmtScanResultsEntryNetworkName' => '1.3.6.1.4.1.2356.11.1.73.120.1.6',
  'lcsStatusWlanMngmtScanResultsEntryEncryption' => '1.3.6.1.4.1.2356.11.1.73.120.1.7',
  'lcsStatusWlanMngmtScanResultsEntryEncryptionDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtScanResultsEntryEncryption',
  'lcsStatusWlanMngmtScanResultsEntryRadioBand' => '1.3.6.1.4.1.2356.11.1.73.120.1.8',
  'lcsStatusWlanMngmtScanResultsEntryRadioBandDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtScanResultsEntryRadioBand',
  'lcsStatusWlanMngmtScanResultsEntryRadioChannel' => '1.3.6.1.4.1.2356.11.1.73.120.1.9',
  'lcsStatusWlanMngmtScanResultsEntry108mbpsMode' => '1.3.6.1.4.1.2356.11.1.73.120.1.10',
  'lcsStatusWlanMngmtScanResultsEntryPhySignal' => '1.3.6.1.4.1.2356.11.1.73.120.1.11',
  'lcsStatusWlanMngmtScanResultsEntryNoiseLevel' => '1.3.6.1.4.1.2356.11.1.73.120.1.12',
  'lcsStatusWlanMngmtScanResultsEntryIdentification' => '1.3.6.1.4.1.2356.11.1.73.120.1.13',
  'lcsStatusWlanMngmtScanResultsEntryAge' => '1.3.6.1.4.1.2356.11.1.73.120.1.14',
  'lcsStatusWlanMngmtSeenClientsTable' => '1.3.6.1.4.1.2356.11.1.73.121',
  'lcsStatusWlanMngmtSeenClientsEntry' => '1.3.6.1.4.1.2356.11.1.73.121.1',
  'lcsStatusWlanMngmtSeenClientsEntryClientMac' => '1.3.6.1.4.1.2356.11.1.73.121.1.1',
  'lcsStatusWlanMngmtSeenClientsEntryApName' => '1.3.6.1.4.1.2356.11.1.73.121.1.2',
  'lcsStatusWlanMngmtSeenClientsEntryIpAddress' => '1.3.6.1.4.1.2356.11.1.73.121.1.3',
  'lcsStatusWlanMngmtSeenClientsEntryApLanMac' => '1.3.6.1.4.1.2356.11.1.73.121.1.4',
  'lcsStatusWlanMngmtSeenClientsEntryInterface' => '1.3.6.1.4.1.2356.11.1.73.121.1.5',
  'lcsStatusWlanMngmtSeenClientsEntryInterfaceDefinition' => 'LCOS-MIB::lcsStatusWlanMngmtSeenClientsEntryInterface',
  'lcsStatusWlanMngmtSeenClientsEntryRxPhySignal' => '1.3.6.1.4.1.2356.11.1.73.121.1.6',
  'lcsStatusWlanMngmtSeenClientsEntryAge' => '1.3.6.1.4.1.2356.11.1.73.121.1.7',
  'lcsStatusWlanMngmtSeenClientsEntryNetworkName' => '1.3.6.1.4.1.2356.11.1.73.121.1.8',
  'lcsStatusMcp' => '1.3.6.1.4.1.2356.11.1.74',
  'lcsStatusMcpMcpUmtsState' => '1.3.6.1.4.1.2356.11.1.74.1',
  'lcsStatusMcpMcpUmtsStateDefinition' => 'LCOS-MIB::lcsStatusMcpMcpUmtsState',
  'lcsStatusMcpUsbReinitCount' => '1.3.6.1.4.1.2356.11.1.74.2',
  'lcsStatusMcpUsbReinitTryCount' => '1.3.6.1.4.1.2356.11.1.74.3',
  'lcsStatusVdsl' => '1.3.6.1.4.1.2356.11.1.75',
  'lcsStatusVdslLineState' => '1.3.6.1.4.1.2356.11.1.75.1',
  'lcsStatusVdslLineStateDefinition' => 'LCOS-MIB::lcsStatusVdslLineState',
  'lcsStatusVdslLineType' => '1.3.6.1.4.1.2356.11.1.75.2',
  'lcsStatusVdslStandard' => '1.3.6.1.4.1.2356.11.1.75.3',
  'lcsStatusVdslStandardDefinition' => 'LCOS-MIB::lcsStatusVdslStandard',
  'lcsStatusVdslDataRateUpstreamKbps' => '1.3.6.1.4.1.2356.11.1.75.4',
  'lcsStatusVdslDataRateDownstreamKbps' => '1.3.6.1.4.1.2356.11.1.75.5',
  'lcsStatusVdslSnrDownstreamDb' => '1.3.6.1.4.1.2356.11.1.75.6',
  'lcsStatusVdslSnrUpstreamDb' => '1.3.6.1.4.1.2356.11.1.75.7',
  'lcsStatusVdslAttenuationDownstreamDb' => '1.3.6.1.4.1.2356.11.1.75.8',
  'lcsStatusVdslAttenuationUpstreamDb' => '1.3.6.1.4.1.2356.11.1.75.9',
  'lcsStatusVdslInterleaveUpstreamMs' => '1.3.6.1.4.1.2356.11.1.75.10',
  'lcsStatusVdslInterleaveDownstreamMs' => '1.3.6.1.4.1.2356.11.1.75.11',
  'lcsStatusVdslConnectionHistoryTable' => '1.3.6.1.4.1.2356.11.1.75.12',
  'lcsStatusVdslConnectionHistoryEntry' => '1.3.6.1.4.1.2356.11.1.75.12.1',
  'lcsStatusVdslConnectionHistoryEntrySyncTime' => '1.3.6.1.4.1.2356.11.1.75.12.1.1',
  'lcsStatusVdslConnectionHistoryEntryStandard' => '1.3.6.1.4.1.2356.11.1.75.12.1.2',
  'lcsStatusVdslConnectionHistoryEntryStandardDefinition' => 'LCOS-MIB::lcsStatusVdslConnectionHistoryEntryStandard',
  'lcsStatusVdslConnectionHistoryEntryDsDatarate' => '1.3.6.1.4.1.2356.11.1.75.12.1.3',
  'lcsStatusVdslConnectionHistoryEntryUsDatarate' => '1.3.6.1.4.1.2356.11.1.75.12.1.4',
  'lcsStatusVdslConnectionHistoryEntryDsAttenuation' => '1.3.6.1.4.1.2356.11.1.75.12.1.5',
  'lcsStatusVdslConnectionHistoryEntryDsSnr' => '1.3.6.1.4.1.2356.11.1.75.12.1.6',
  'lcsStatusVdslConnectionHistoryEntryDisconnectTime' => '1.3.6.1.4.1.2356.11.1.75.12.1.7',
  'lcsStatusVdslConnectionHistoryEntryIndex' => '1.3.6.1.4.1.2356.11.1.75.12.1.8',
  'lcsStatusVdslConnectionHistoryEntryReason' => '1.3.6.1.4.1.2356.11.1.75.12.1.9',
  'lcsStatusVdslConnectionHistoryEntryReasonDefinition' => 'LCOS-MIB::lcsStatusVdslConnectionHistoryEntryReason',
  'lcsStatusVdslConnectionHistoryEntryUsAttenuation' => '1.3.6.1.4.1.2356.11.1.75.12.1.10',
  'lcsStatusVdslConnectionHistoryEntryUsSnr' => '1.3.6.1.4.1.2356.11.1.75.12.1.11',
  'lcsStatusVdslConnectionHistoryEntryVdslProfile' => '1.3.6.1.4.1.2356.11.1.75.12.1.13',
  'lcsStatusVdslConnectionHistoryEntryVdslProfileDefinition' => 'LCOS-MIB::lcsStatusVdslConnectionHistoryEntryVdslProfile',
  'lcsStatusVdslRetrain' => '1.3.6.1.4.1.2356.11.1.75.13',
  'lcsStatusVdslDslamChipsetManufacturer' => '1.3.6.1.4.1.2356.11.1.75.14',
  'lcsStatusVdslAdvanced' => '1.3.6.1.4.1.2356.11.1.75.25',
  'lcsStatusVdslAdvancedLineState' => '1.3.6.1.4.1.2356.11.1.75.25.1',
  'lcsStatusVdslAdvancedLineStateDefinition' => 'LCOS-MIB::lcsStatusVdslAdvancedLineState',
  'lcsStatusVdslAdvancedStandard' => '1.3.6.1.4.1.2356.11.1.75.25.2',
  'lcsStatusVdslAdvancedStandardDefinition' => 'LCOS-MIB::lcsStatusVdslAdvancedStandard',
  'lcsStatusVdslAdvancedDsDataRateKbps' => '1.3.6.1.4.1.2356.11.1.75.25.3',
  'lcsStatusVdslAdvancedDsSnrMarginDb' => '1.3.6.1.4.1.2356.11.1.75.25.4',
  'lcsStatusVdslAdvancedDsLineAttenuationDb' => '1.3.6.1.4.1.2356.11.1.75.25.5',
  'lcsStatusVdslAdvancedDsInterleaveMs' => '1.3.6.1.4.1.2356.11.1.75.25.6',
  'lcsStatusVdslAdvancedDsBitLoadingTable' => '1.3.6.1.4.1.2356.11.1.75.25.13',
  'lcsStatusVdslAdvancedDsBitLoadingEntry' => '1.3.6.1.4.1.2356.11.1.75.25.13.1',
  'lcsStatusVdslAdvancedDsBitLoadingEntryBinNumber' => '1.3.6.1.4.1.2356.11.1.75.25.13.1.1',
  'lcsStatusVdslAdvancedDsBitLoadingEntryX0' => '1.3.6.1.4.1.2356.11.1.75.25.13.1.2',
  'lcsStatusVdslAdvancedDsBitLoadingEntryX1' => '1.3.6.1.4.1.2356.11.1.75.25.13.1.3',
  'lcsStatusVdslAdvancedDsBitLoadingEntryX2' => '1.3.6.1.4.1.2356.11.1.75.25.13.1.4',
  'lcsStatusVdslAdvancedDsBitLoadingEntryX3' => '1.3.6.1.4.1.2356.11.1.75.25.13.1.5',
  'lcsStatusVdslAdvancedDsBitLoadingEntryX4' => '1.3.6.1.4.1.2356.11.1.75.25.13.1.6',
  'lcsStatusVdslAdvancedDsBitLoadingEntryX5' => '1.3.6.1.4.1.2356.11.1.75.25.13.1.7',
  'lcsStatusVdslAdvancedDsBitLoadingEntryX6' => '1.3.6.1.4.1.2356.11.1.75.25.13.1.8',
  'lcsStatusVdslAdvancedDsBitLoadingEntryX7' => '1.3.6.1.4.1.2356.11.1.75.25.13.1.9',
  'lcsStatusVdslAdvancedDsBitLoadingEntryX8' => '1.3.6.1.4.1.2356.11.1.75.25.13.1.10',
  'lcsStatusVdslAdvancedDsBitLoadingEntryX9' => '1.3.6.1.4.1.2356.11.1.75.25.13.1.11',
  'lcsStatusVdslAdvancedDsBitLoadingEntryGraph' => '1.3.6.1.4.1.2356.11.1.75.25.13.1.12',
  'lcsStatusVdslAdvancedUsDataRateKbps' => '1.3.6.1.4.1.2356.11.1.75.25.15',
  'lcsStatusVdslAdvancedUsSnrMarginDb' => '1.3.6.1.4.1.2356.11.1.75.25.16',
  'lcsStatusVdslAdvancedUsLineAttenuationDb' => '1.3.6.1.4.1.2356.11.1.75.25.17',
  'lcsStatusVdslAdvancedUsInterleaveMs' => '1.3.6.1.4.1.2356.11.1.75.25.18',
  'lcsStatusVdslAdvancedUsBitLoadingTable' => '1.3.6.1.4.1.2356.11.1.75.25.25',
  'lcsStatusVdslAdvancedUsBitLoadingEntry' => '1.3.6.1.4.1.2356.11.1.75.25.25.1',
  'lcsStatusVdslAdvancedUsBitLoadingEntryBinNumber' => '1.3.6.1.4.1.2356.11.1.75.25.25.1.1',
  'lcsStatusVdslAdvancedUsBitLoadingEntryX0' => '1.3.6.1.4.1.2356.11.1.75.25.25.1.2',
  'lcsStatusVdslAdvancedUsBitLoadingEntryX1' => '1.3.6.1.4.1.2356.11.1.75.25.25.1.3',
  'lcsStatusVdslAdvancedUsBitLoadingEntryX2' => '1.3.6.1.4.1.2356.11.1.75.25.25.1.4',
  'lcsStatusVdslAdvancedUsBitLoadingEntryX3' => '1.3.6.1.4.1.2356.11.1.75.25.25.1.5',
  'lcsStatusVdslAdvancedUsBitLoadingEntryX4' => '1.3.6.1.4.1.2356.11.1.75.25.25.1.6',
  'lcsStatusVdslAdvancedUsBitLoadingEntryX5' => '1.3.6.1.4.1.2356.11.1.75.25.25.1.7',
  'lcsStatusVdslAdvancedUsBitLoadingEntryX6' => '1.3.6.1.4.1.2356.11.1.75.25.25.1.8',
  'lcsStatusVdslAdvancedUsBitLoadingEntryX7' => '1.3.6.1.4.1.2356.11.1.75.25.25.1.9',
  'lcsStatusVdslAdvancedUsBitLoadingEntryX8' => '1.3.6.1.4.1.2356.11.1.75.25.25.1.10',
  'lcsStatusVdslAdvancedUsBitLoadingEntryX9' => '1.3.6.1.4.1.2356.11.1.75.25.25.1.11',
  'lcsStatusVdslAdvancedUsBitLoadingEntryGraph' => '1.3.6.1.4.1.2356.11.1.75.25.25.1.12',
  'lcsStatusVdslAdvancedRetrain' => '1.3.6.1.4.1.2356.11.1.75.25.26',
  'lcsStatusVdslAdvancedTransmittedAtmCells' => '1.3.6.1.4.1.2356.11.1.75.25.29',
  'lcsStatusVdslAdvancedVdslProfile' => '1.3.6.1.4.1.2356.11.1.75.25.40',
  'lcsStatusVdslAdvancedVdslProfileDefinition' => 'LCOS-MIB::lcsStatusVdslAdvancedVdslProfile',
  'lcsStatusVdslAdvancedDslamManufacturer' => '1.3.6.1.4.1.2356.11.1.75.25.41',
  'lcsStatusVdslAdvancedDslamVersion' => '1.3.6.1.4.1.2356.11.1.75.25.42',
  'lcsStatusVdslAdvancedDslamSerialNumber' => '1.3.6.1.4.1.2356.11.1.75.25.43',
  'lcsStatusVdslAdvancedDslamChipsetManufacturer' => '1.3.6.1.4.1.2356.11.1.75.25.44',
  'lcsStatusVdslAdvancedDsAttainableDataRateKbps' => '1.3.6.1.4.1.2356.11.1.75.25.100',
  'lcsStatusVdslAdvancedDsInpSymbols' => '1.3.6.1.4.1.2356.11.1.75.25.101',
  'lcsStatusVdslAdvancedDsCrcErrors' => '1.3.6.1.4.1.2356.11.1.75.25.102',
  'lcsStatusVdslAdvancedDsFecErrors' => '1.3.6.1.4.1.2356.11.1.75.25.103',
  'lcsStatusVdslAdvancedDsAtmHecErrors' => '1.3.6.1.4.1.2356.11.1.75.25.104',
  'lcsStatusVdslAdvancedDsDataPathCrcpErrors' => '1.3.6.1.4.1.2356.11.1.75.25.105',
  'lcsStatusVdslAdvancedDsDataPathCrcnpErrors' => '1.3.6.1.4.1.2356.11.1.75.25.106',
  'lcsStatusVdslAdvancedDsDataPathCvpErrors' => '1.3.6.1.4.1.2356.11.1.75.25.107',
  'lcsStatusVdslAdvancedDsDataPathCvnpErrors' => '1.3.6.1.4.1.2356.11.1.75.25.108',
  'lcsStatusVdslAdvancedDsAtmIdleBitErrors' => '1.3.6.1.4.1.2356.11.1.75.25.109',
  'lcsStatusVdslAdvancedDsAtmCells' => '1.3.6.1.4.1.2356.11.1.75.25.110',
  'lcsStatusVdslAdvancedDsPacketCount' => '1.3.6.1.4.1.2356.11.1.75.25.111',
  'lcsStatusVdslAdvancedDsPacketBytes' => '1.3.6.1.4.1.2356.11.1.75.25.112',
  'lcsStatusVdslAdvancedDsPacketErrors' => '1.3.6.1.4.1.2356.11.1.75.25.113',
  'lcsStatusVdslAdvancedDsPausePackets' => '1.3.6.1.4.1.2356.11.1.75.25.114',
  'lcsStatusVdslAdvancedDsPacketFcsErrors' => '1.3.6.1.4.1.2356.11.1.75.25.115',
  'lcsStatusVdslAdvancedDsPacketAllignmentErrors' => '1.3.6.1.4.1.2356.11.1.75.25.116',
  'lcsStatusVdslAdvancedDsPacketsTooLong' => '1.3.6.1.4.1.2356.11.1.75.25.117',
  'lcsStatusVdslAdvancedDsPacketsTooShort' => '1.3.6.1.4.1.2356.11.1.75.25.118',
  'lcsStatusVdslAdvancedUsAttainableDataRateKbps' => '1.3.6.1.4.1.2356.11.1.75.25.120',
  'lcsStatusVdslAdvancedUsInpSymbols' => '1.3.6.1.4.1.2356.11.1.75.25.121',
  'lcsStatusVdslAdvancedUsCrcErrors' => '1.3.6.1.4.1.2356.11.1.75.25.122',
  'lcsStatusVdslAdvancedUsFecErrors' => '1.3.6.1.4.1.2356.11.1.75.25.123',
  'lcsStatusVdslAdvancedUsAtmHecErrors' => '1.3.6.1.4.1.2356.11.1.75.25.124',
  'lcsStatusVdslAdvancedUsDataPathCrcpErrors' => '1.3.6.1.4.1.2356.11.1.75.25.125',
  'lcsStatusVdslAdvancedUsDataPathCrcnpErrors' => '1.3.6.1.4.1.2356.11.1.75.25.126',
  'lcsStatusVdslAdvancedUsDataPathCvpErrors' => '1.3.6.1.4.1.2356.11.1.75.25.127',
  'lcsStatusVdslAdvancedUsDataPathCvnpErrors' => '1.3.6.1.4.1.2356.11.1.75.25.128',
  'lcsStatusVdslAdvancedUsAtmIdleBitErrors' => '1.3.6.1.4.1.2356.11.1.75.25.129',
  'lcsStatusVdslAdvancedUsAtmCells' => '1.3.6.1.4.1.2356.11.1.75.25.130',
  'lcsStatusVdslAdvancedUsPacketCount' => '1.3.6.1.4.1.2356.11.1.75.25.131',
  'lcsStatusVdslAdvancedUsPacketBytes' => '1.3.6.1.4.1.2356.11.1.75.25.132',
  'lcsStatusVdslAdvancedUsPacketErrors' => '1.3.6.1.4.1.2356.11.1.75.25.133',
  'lcsStatusVdslAdvancedUsPausePackets' => '1.3.6.1.4.1.2356.11.1.75.25.134',
  'lcsStatusVdslAdvancedWanTxPacketCount' => '1.3.6.1.4.1.2356.11.1.75.25.140',
  'lcsStatusVdslAdvancedWanTxPacketBytes' => '1.3.6.1.4.1.2356.11.1.75.25.141',
  'lcsStatusVdslAdvancedWanTxPacketErrors' => '1.3.6.1.4.1.2356.11.1.75.25.142',
  'lcsStatusVdslAdvancedWanTxPacketDrops' => '1.3.6.1.4.1.2356.11.1.75.25.143',
  'lcsStatusVdslAdvancedWanTxOverruns' => '1.3.6.1.4.1.2356.11.1.75.25.144',
  'lcsStatusVdslAdvancedWanTxDelta' => '1.3.6.1.4.1.2356.11.1.75.25.145',
  'lcsStatusVdslAdvancedWanRxPacketCount' => '1.3.6.1.4.1.2356.11.1.75.25.150',
  'lcsStatusVdslAdvancedWanRxPacketBytes' => '1.3.6.1.4.1.2356.11.1.75.25.151',
  'lcsStatusVdslAdvancedWanRxPacketErrors' => '1.3.6.1.4.1.2356.11.1.75.25.152',
  'lcsStatusVdslAdvancedWanRxPacketDrops' => '1.3.6.1.4.1.2356.11.1.75.25.153',
  'lcsStatusVdslAdvancedWanRxOverruns' => '1.3.6.1.4.1.2356.11.1.75.25.154',
  'lcsStatusVdslAdvancedWanRxDelta' => '1.3.6.1.4.1.2356.11.1.75.25.155',
  'lcsStatusVdslInpDownstreamSymbols' => '1.3.6.1.4.1.2356.11.1.75.34',
  'lcsStatusVdslInpUpstreamSymbols' => '1.3.6.1.4.1.2356.11.1.75.35',
  'lcsStatusVdslAttainableDataRateDownstreamKbps' => '1.3.6.1.4.1.2356.11.1.75.36',
  'lcsStatusVdslAttainableDataRateUpstreamKbps' => '1.3.6.1.4.1.2356.11.1.75.37',
  'lcsStatusVdslVdslProfile' => '1.3.6.1.4.1.2356.11.1.75.40',
  'lcsStatusVdslVdslProfileDefinition' => 'LCOS-MIB::lcsStatusVdslVdslProfile',
  'lcsStatusVdslDslamManufacturer' => '1.3.6.1.4.1.2356.11.1.75.41',
  'lcsStatusVdslDslamVersion' => '1.3.6.1.4.1.2356.11.1.75.42',
  'lcsStatusVdslDslamSerialNumber' => '1.3.6.1.4.1.2356.11.1.75.43',
  'lcsStatusVdslAtmVpi' => '1.3.6.1.4.1.2356.11.1.75.50',
  'lcsStatusVdslAtmVci' => '1.3.6.1.4.1.2356.11.1.75.51',
  'lcsStatusVdslAtmMuxmode' => '1.3.6.1.4.1.2356.11.1.75.52',
  'lcsStatusVdslAtmMuxmodeDefinition' => 'LCOS-MIB::lcsStatusVdslAtmMuxmode',
  'lcsStatusVdslModem' => '1.3.6.1.4.1.2356.11.1.75.500',
  'lcsStatusVdslModemModemState' => '1.3.6.1.4.1.2356.11.1.75.500.1',
  'lcsStatusVdslModemModemStateDefinition' => 'LCOS-MIB::lcsStatusVdslModemModemState',
  'lcsStatusVdslModemOptions' => '1.3.6.1.4.1.2356.11.1.75.500.2',
  'lcsStatusVdslModemMemoryTest' => '1.3.6.1.4.1.2356.11.1.75.500.3',
  'lcsStatusVdslModemMemoryTestDefinition' => 'LCOS-MIB::lcsStatusVdslModemMemoryTest',
  'lcsStatusVdslModemRebootModem' => '1.3.6.1.4.1.2356.11.1.75.500.4',
  'lcsStatusVdslModemLink' => '1.3.6.1.4.1.2356.11.1.75.500.5',
  'lcsStatusVdslModemLastError' => '1.3.6.1.4.1.2356.11.1.75.500.6',
  'lcsStatusVdslModemVdslFirmware' => '1.3.6.1.4.1.2356.11.1.75.500.7',
  'lcsStatusVdslModemAdslPotsFirmware' => '1.3.6.1.4.1.2356.11.1.75.500.8',
  'lcsStatusVdslModemAdslIsdnFirmware' => '1.3.6.1.4.1.2356.11.1.75.500.9',
  'lcsStatusVdslModemDslApiVersion' => '1.3.6.1.4.1.2356.11.1.75.500.10',
  'lcsStatusVdslModemDspFirmwareVersion' => '1.3.6.1.4.1.2356.11.1.75.500.11',
  'lcsStatusVdslModemHardwareVersion' => '1.3.6.1.4.1.2356.11.1.75.500.12',
  'lcsStatusVdslModemChipsetType' => '1.3.6.1.4.1.2356.11.1.75.500.13',
  'lcsStatusVdslModemDriverVersion' => '1.3.6.1.4.1.2356.11.1.75.500.14',
  'lcsStatusVdslModemBootCount' => '1.3.6.1.4.1.2356.11.1.75.500.15',
  'lcsStatusVdslModemHybrid' => '1.3.6.1.4.1.2356.11.1.75.500.16',
  'lcsStatusVdslModemHybridDefinition' => 'LCOS-MIB::lcsStatusVdslModemHybrid',
  'lcsStatusVdslModemDefaultAtmVpi' => '1.3.6.1.4.1.2356.11.1.75.500.17',
  'lcsStatusVdslModemDefaultAtmVci' => '1.3.6.1.4.1.2356.11.1.75.500.18',
  'lcsStatusVdslModemDefaultAtmMuxmode' => '1.3.6.1.4.1.2356.11.1.75.500.19',
  'lcsStatusVdslModemDefaultAtmMuxmodeDefinition' => 'LCOS-MIB::lcsStatusVdslModemDefaultAtmMuxmode',
  'lcsStatusDeleteValues' => '1.3.6.1.4.1.2356.11.1.100',
  'lcsSetup' => '1.3.6.1.4.1.2356.11.2',
  'lcsSetupName' => '1.3.6.1.4.1.2356.11.2.1',
  'lcsSetupWan' => '1.3.6.1.4.1.2356.11.2.2',
  'lcsSetupWanDialupPeersTable' => '1.3.6.1.4.1.2356.11.2.2.2',
  'lcsSetupWanDialupPeersEntry' => '1.3.6.1.4.1.2356.11.2.2.2.1',
  'lcsSetupWanDialupPeersEntryPeer' => '1.3.6.1.4.1.2356.11.2.2.2.1.1',
  'lcsSetupWanDialupPeersEntryDialupRemote' => '1.3.6.1.4.1.2356.11.2.2.2.1.2',
  'lcsSetupWanDialupPeersEntryB1Dt' => '1.3.6.1.4.1.2356.11.2.2.2.1.3',
  'lcsSetupWanDialupPeersEntryB2Dt' => '1.3.6.1.4.1.2356.11.2.2.2.1.4',
  'lcsSetupWanDialupPeersEntryWanLayer' => '1.3.6.1.4.1.2356.11.2.2.2.1.5',
  'lcsSetupWanDialupPeersEntryCallback' => '1.3.6.1.4.1.2356.11.2.2.2.1.6',
  'lcsSetupWanDialupPeersEntryCallbackDefinition' => 'LCOS-MIB::lcsSetupWanDialupPeersEntryCallback',
  'lcsSetupWanRoundrobinTable' => '1.3.6.1.4.1.2356.11.2.2.3',
  'lcsSetupWanRoundrobinEntry' => '1.3.6.1.4.1.2356.11.2.2.3.1',
  'lcsSetupWanRoundrobinEntryPeer' => '1.3.6.1.4.1.2356.11.2.2.3.1.1',
  'lcsSetupWanRoundrobinEntryRoundRobin' => '1.3.6.1.4.1.2356.11.2.2.3.1.2',
  'lcsSetupWanRoundrobinEntryHead' => '1.3.6.1.4.1.2356.11.2.2.3.1.3',
  'lcsSetupWanRoundrobinEntryHeadDefinition' => 'LCOS-MIB::lcsSetupWanRoundrobinEntryHead',
  'lcsSetupWanLayerTable' => '1.3.6.1.4.1.2356.11.2.2.4',
  'lcsSetupWanLayerEntry' => '1.3.6.1.4.1.2356.11.2.2.4.1',
  'lcsSetupWanLayerEntryWanLayer' => '1.3.6.1.4.1.2356.11.2.2.4.1.1',
  'lcsSetupWanLayerEntryEncaps' => '1.3.6.1.4.1.2356.11.2.2.4.1.2',
  'lcsSetupWanLayerEntryEncapsDefinition' => 'LCOS-MIB::lcsSetupWanLayerEntryEncaps',
  'lcsSetupWanLayerEntryLay3' => '1.3.6.1.4.1.2356.11.2.2.4.1.3',
  'lcsSetupWanLayerEntryLay3Definition' => 'LCOS-MIB::lcsSetupWanLayerEntryLay3',
  'lcsSetupWanLayerEntryLay2' => '1.3.6.1.4.1.2356.11.2.2.4.1.4',
  'lcsSetupWanLayerEntryLay2Definition' => 'LCOS-MIB::lcsSetupWanLayerEntryLay2',
  'lcsSetupWanLayerEntryL2Opt' => '1.3.6.1.4.1.2356.11.2.2.4.1.5',
  'lcsSetupWanLayerEntryL2OptDefinition' => 'LCOS-MIB::lcsSetupWanLayerEntryL2Opt',
  'lcsSetupWanLayerEntryLay1' => '1.3.6.1.4.1.2356.11.2.2.4.1.6',
  'lcsSetupWanLayerEntryLay1Definition' => 'LCOS-MIB::lcsSetupWanLayerEntryLay1',
  'lcsSetupWanPppTable' => '1.3.6.1.4.1.2356.11.2.2.5',
  'lcsSetupWanPppEntry' => '1.3.6.1.4.1.2356.11.2.2.5.1',
  'lcsSetupWanPppEntryPeer' => '1.3.6.1.4.1.2356.11.2.2.5.1.1',
  'lcsSetupWanPppEntryAuthentRequest' => '1.3.6.1.4.1.2356.11.2.2.5.1.2',
  'lcsSetupWanPppEntryKey' => '1.3.6.1.4.1.2356.11.2.2.5.1.3',
  'lcsSetupWanPppEntryTime' => '1.3.6.1.4.1.2356.11.2.2.5.1.4',
  'lcsSetupWanPppEntryTry' => '1.3.6.1.4.1.2356.11.2.2.5.1.5',
  'lcsSetupWanPppEntryUsername' => '1.3.6.1.4.1.2356.11.2.2.5.1.6',
  'lcsSetupWanPppEntryConf' => '1.3.6.1.4.1.2356.11.2.2.5.1.7',
  'lcsSetupWanPppEntryFail' => '1.3.6.1.4.1.2356.11.2.2.5.1.8',
  'lcsSetupWanPppEntryTerm' => '1.3.6.1.4.1.2356.11.2.2.5.1.9',
  'lcsSetupWanPppEntryRights' => '1.3.6.1.4.1.2356.11.2.2.5.1.10',
  'lcsSetupWanPppEntryAuthentResponse' => '1.3.6.1.4.1.2356.11.2.2.5.1.11',
  'lcsSetupWanIncomingCallingNumbersTable' => '1.3.6.1.4.1.2356.11.2.2.6',
  'lcsSetupWanIncomingCallingNumbersEntry' => '1.3.6.1.4.1.2356.11.2.2.6.1',
  'lcsSetupWanIncomingCallingNumbersEntryDialupRemote' => '1.3.6.1.4.1.2356.11.2.2.6.1.1',
  'lcsSetupWanIncomingCallingNumbersEntryPeer' => '1.3.6.1.4.1.2356.11.2.2.6.1.2',
  'lcsSetupWanDialPrefix' => '1.3.6.1.4.1.2356.11.2.2.7',
  'lcsSetupWanScriptsTable' => '1.3.6.1.4.1.2356.11.2.2.8',
  'lcsSetupWanScriptsEntry' => '1.3.6.1.4.1.2356.11.2.2.8.1',
  'lcsSetupWanScriptsEntryPeer' => '1.3.6.1.4.1.2356.11.2.2.8.1.1',
  'lcsSetupWanScriptsEntryScript' => '1.3.6.1.4.1.2356.11.2.2.8.1.2',
  'lcsSetupWanProtect' => '1.3.6.1.4.1.2356.11.2.2.9',
  'lcsSetupWanProtectDefinition' => 'LCOS-MIB::lcsSetupWanProtect',
  'lcsSetupWanCallbackAttempts' => '1.3.6.1.4.1.2356.11.2.2.10',
  'lcsSetupWanRouterInterfaceTable' => '1.3.6.1.4.1.2356.11.2.2.11',
  'lcsSetupWanRouterInterfaceEntry' => '1.3.6.1.4.1.2356.11.2.2.11.1',
  'lcsSetupWanRouterInterfaceEntryIfc' => '1.3.6.1.4.1.2356.11.2.2.11.1.1',
  'lcsSetupWanRouterInterfaceEntryIfcDefinition' => 'LCOS-MIB::lcsSetupWanRouterInterfaceEntryIfc',
  'lcsSetupWanRouterInterfaceEntryMsnEaz' => '1.3.6.1.4.1.2356.11.2.2.11.1.2',
  'lcsSetupWanRouterInterfaceEntryClip' => '1.3.6.1.4.1.2356.11.2.2.11.1.3',
  'lcsSetupWanRouterInterfaceEntryClipDefinition' => 'LCOS-MIB::lcsSetupWanRouterInterfaceEntryClip',
  'lcsSetupWanRouterInterfaceEntryYc' => '1.3.6.1.4.1.2356.11.2.2.11.1.8',
  'lcsSetupWanRouterInterfaceEntryYcDefinition' => 'LCOS-MIB::lcsSetupWanRouterInterfaceEntryYc',
  'lcsSetupWanRouterInterfaceEntryAcceptCalls' => '1.3.6.1.4.1.2356.11.2.2.11.1.9',
  'lcsSetupWanRouterInterfaceEntryAcceptCallsDefinition' => 'LCOS-MIB::lcsSetupWanRouterInterfaceEntryAcceptCalls',
  'lcsSetupWanRouterInterfaceEntryTypeOfInterface' => '1.3.6.1.4.1.2356.11.2.2.11.1.10',
  'lcsSetupWanManualDialing' => '1.3.6.1.4.1.2356.11.2.2.13',
  'lcsSetupWanManualDialingConnect' => '1.3.6.1.4.1.2356.11.2.2.13.1',
  'lcsSetupWanManualDialingDisconnect' => '1.3.6.1.4.1.2356.11.2.2.13.2',
  'lcsSetupWanBackupDelaySeconds' => '1.3.6.1.4.1.2356.11.2.2.18',
  'lcsSetupWanDslBroadbandPeersTable' => '1.3.6.1.4.1.2356.11.2.2.19',
  'lcsSetupWanDslBroadbandPeersEntry' => '1.3.6.1.4.1.2356.11.2.2.19.1',
  'lcsSetupWanDslBroadbandPeersEntryPeer' => '1.3.6.1.4.1.2356.11.2.2.19.1.1',
  'lcsSetupWanDslBroadbandPeersEntryShTime' => '1.3.6.1.4.1.2356.11.2.2.19.1.3',
  'lcsSetupWanDslBroadbandPeersEntryWanLayer' => '1.3.6.1.4.1.2356.11.2.2.19.1.5',
  'lcsSetupWanDslBroadbandPeersEntryAcName' => '1.3.6.1.4.1.2356.11.2.2.19.1.9',
  'lcsSetupWanDslBroadbandPeersEntryServicename' => '1.3.6.1.4.1.2356.11.2.2.19.1.10',
  'lcsSetupWanDslBroadbandPeersEntryAtmVpi' => '1.3.6.1.4.1.2356.11.2.2.19.1.11',
  'lcsSetupWanDslBroadbandPeersEntryAtmVci' => '1.3.6.1.4.1.2356.11.2.2.19.1.12',
  'lcsSetupWanDslBroadbandPeersEntryUserDefMac' => '1.3.6.1.4.1.2356.11.2.2.19.1.13',
  'lcsSetupWanDslBroadbandPeersEntryDslIfcS' => '1.3.6.1.4.1.2356.11.2.2.19.1.14',
  'lcsSetupWanDslBroadbandPeersEntryMacType' => '1.3.6.1.4.1.2356.11.2.2.19.1.15',
  'lcsSetupWanDslBroadbandPeersEntryMacTypeDefinition' => 'LCOS-MIB::lcsSetupWanDslBroadbandPeersEntryMacType',
  'lcsSetupWanDslBroadbandPeersEntryVlanId' => '1.3.6.1.4.1.2356.11.2.2.19.1.16',
  'lcsSetupWanIpListTable' => '1.3.6.1.4.1.2356.11.2.2.20',
  'lcsSetupWanIpListEntry' => '1.3.6.1.4.1.2356.11.2.2.20.1',
  'lcsSetupWanIpListEntryPeer' => '1.3.6.1.4.1.2356.11.2.2.20.1.1',
  'lcsSetupWanIpListEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.2.20.1.2',
  'lcsSetupWanIpListEntryIpNetmask' => '1.3.6.1.4.1.2356.11.2.2.20.1.3',
  'lcsSetupWanIpListEntryGateway' => '1.3.6.1.4.1.2356.11.2.2.20.1.4',
  'lcsSetupWanIpListEntryDnsDefault' => '1.3.6.1.4.1.2356.11.2.2.20.1.5',
  'lcsSetupWanIpListEntryDnsBackup' => '1.3.6.1.4.1.2356.11.2.2.20.1.6',
  'lcsSetupWanIpListEntryNbnsDefault' => '1.3.6.1.4.1.2356.11.2.2.20.1.7',
  'lcsSetupWanIpListEntryNbnsBackup' => '1.3.6.1.4.1.2356.11.2.2.20.1.8',
  'lcsSetupWanIpListEntryMasqIpAddr' => '1.3.6.1.4.1.2356.11.2.2.20.1.9',
  'lcsSetupWanPptpPeersTable' => '1.3.6.1.4.1.2356.11.2.2.21',
  'lcsSetupWanPptpPeersEntry' => '1.3.6.1.4.1.2356.11.2.2.21.1',
  'lcsSetupWanPptpPeersEntryPeer' => '1.3.6.1.4.1.2356.11.2.2.21.1.1',
  'lcsSetupWanPptpPeersEntryPort' => '1.3.6.1.4.1.2356.11.2.2.21.1.3',
  'lcsSetupWanPptpPeersEntryShTime' => '1.3.6.1.4.1.2356.11.2.2.21.1.4',
  'lcsSetupWanPptpPeersEntryRtgTag' => '1.3.6.1.4.1.2356.11.2.2.21.1.5',
  'lcsSetupWanPptpPeersEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.2.21.1.6',
  'lcsSetupWanPptpPeersEntryEncryption' => '1.3.6.1.4.1.2356.11.2.2.21.1.7',
  'lcsSetupWanPptpPeersEntryEncryptionDefinition' => 'LCOS-MIB::lcsSetupWanPptpPeersEntryEncryption',
  'lcsSetupWanRadius' => '1.3.6.1.4.1.2356.11.2.2.22',
  'lcsSetupWanRadiusOperating' => '1.3.6.1.4.1.2356.11.2.2.22.1',
  'lcsSetupWanRadiusOperatingDefinition' => 'LCOS-MIB::lcsSetupWanRadiusOperating',
  'lcsSetupWanRadiusServerAddress' => '1.3.6.1.4.1.2356.11.2.2.22.2',
  'lcsSetupWanRadiusAuthPort' => '1.3.6.1.4.1.2356.11.2.2.22.3',
  'lcsSetupWanRadiusSecret' => '1.3.6.1.4.1.2356.11.2.2.22.4',
  'lcsSetupWanRadiusPppOperation' => '1.3.6.1.4.1.2356.11.2.2.22.5',
  'lcsSetupWanRadiusPppOperationDefinition' => 'LCOS-MIB::lcsSetupWanRadiusPppOperation',
  'lcsSetupWanRadiusClipOperation' => '1.3.6.1.4.1.2356.11.2.2.22.6',
  'lcsSetupWanRadiusClipOperationDefinition' => 'LCOS-MIB::lcsSetupWanRadiusClipOperation',
  'lcsSetupWanRadiusClipPassword' => '1.3.6.1.4.1.2356.11.2.2.22.7',
  'lcsSetupWanRadiusLoopbackAddr' => '1.3.6.1.4.1.2356.11.2.2.22.8',
  'lcsSetupWanRadiusProtocol' => '1.3.6.1.4.1.2356.11.2.2.22.9',
  'lcsSetupWanRadiusProtocolDefinition' => 'LCOS-MIB::lcsSetupWanRadiusProtocol',
  'lcsSetupWanRadiusAuthProtocols' => '1.3.6.1.4.1.2356.11.2.2.22.10',
  'lcsSetupWanPollingTableTable' => '1.3.6.1.4.1.2356.11.2.2.23',
  'lcsSetupWanPollingTableEntry' => '1.3.6.1.4.1.2356.11.2.2.23.1',
  'lcsSetupWanPollingTableEntryPeer' => '1.3.6.1.4.1.2356.11.2.2.23.1.1',
  'lcsSetupWanPollingTableEntryIpAddress1' => '1.3.6.1.4.1.2356.11.2.2.23.1.2',
  'lcsSetupWanPollingTableEntryTime' => '1.3.6.1.4.1.2356.11.2.2.23.1.3',
  'lcsSetupWanPollingTableEntryTry' => '1.3.6.1.4.1.2356.11.2.2.23.1.4',
  'lcsSetupWanPollingTableEntryIpAddress2' => '1.3.6.1.4.1.2356.11.2.2.23.1.5',
  'lcsSetupWanPollingTableEntryIpAddress3' => '1.3.6.1.4.1.2356.11.2.2.23.1.6',
  'lcsSetupWanPollingTableEntryIpAddress4' => '1.3.6.1.4.1.2356.11.2.2.23.1.7',
  'lcsSetupWanPollingTableEntryLoopbackAddr' => '1.3.6.1.4.1.2356.11.2.2.23.1.8',
  'lcsSetupWanPollingTableEntryType' => '1.3.6.1.4.1.2356.11.2.2.23.1.9',
  'lcsSetupWanPollingTableEntryTypeDefinition' => 'LCOS-MIB::lcsSetupWanPollingTableEntryType',
  'lcsSetupWanBackupPeersTable' => '1.3.6.1.4.1.2356.11.2.2.24',
  'lcsSetupWanBackupPeersEntry' => '1.3.6.1.4.1.2356.11.2.2.24.1',
  'lcsSetupWanBackupPeersEntryPeer' => '1.3.6.1.4.1.2356.11.2.2.24.1.1',
  'lcsSetupWanBackupPeersEntryAlternativePeers' => '1.3.6.1.4.1.2356.11.2.2.24.1.2',
  'lcsSetupWanBackupPeersEntryHead' => '1.3.6.1.4.1.2356.11.2.2.24.1.3',
  'lcsSetupWanBackupPeersEntryHeadDefinition' => 'LCOS-MIB::lcsSetupWanBackupPeersEntryHead',
  'lcsSetupWanActionTableTable' => '1.3.6.1.4.1.2356.11.2.2.25',
  'lcsSetupWanActionTableEntry' => '1.3.6.1.4.1.2356.11.2.2.25.1',
  'lcsSetupWanActionTableEntryIndex' => '1.3.6.1.4.1.2356.11.2.2.25.1.1',
  'lcsSetupWanActionTableEntryHostName' => '1.3.6.1.4.1.2356.11.2.2.25.1.2',
  'lcsSetupWanActionTableEntryPeer' => '1.3.6.1.4.1.2356.11.2.2.25.1.3',
  'lcsSetupWanActionTableEntryLockTime' => '1.3.6.1.4.1.2356.11.2.2.25.1.4',
  'lcsSetupWanActionTableEntryCondition' => '1.3.6.1.4.1.2356.11.2.2.25.1.5',
  'lcsSetupWanActionTableEntryConditionDefinition' => 'LCOS-MIB::lcsSetupWanActionTableEntryCondition',
  'lcsSetupWanActionTableEntryAction' => '1.3.6.1.4.1.2356.11.2.2.25.1.6',
  'lcsSetupWanActionTableEntryCheckFor' => '1.3.6.1.4.1.2356.11.2.2.25.1.7',
  'lcsSetupWanActionTableEntryActive' => '1.3.6.1.4.1.2356.11.2.2.25.1.8',
  'lcsSetupWanActionTableEntryActiveDefinition' => 'LCOS-MIB::lcsSetupWanActionTableEntryActive',
  'lcsSetupWanActionTableEntryOwner' => '1.3.6.1.4.1.2356.11.2.2.25.1.9',
  'lcsSetupWanMtuListTable' => '1.3.6.1.4.1.2356.11.2.2.26',
  'lcsSetupWanMtuListEntry' => '1.3.6.1.4.1.2356.11.2.2.26.1',
  'lcsSetupWanMtuListEntryPeer' => '1.3.6.1.4.1.2356.11.2.2.26.1.1',
  'lcsSetupWanMtuListEntryMtu' => '1.3.6.1.4.1.2356.11.2.2.26.1.2',
  'lcsSetupWanAdditionalPptpGatewaysTable' => '1.3.6.1.4.1.2356.11.2.2.30',
  'lcsSetupWanAdditionalPptpGatewaysEntry' => '1.3.6.1.4.1.2356.11.2.2.30.1',
  'lcsSetupWanAdditionalPptpGatewaysEntryPeer' => '1.3.6.1.4.1.2356.11.2.2.30.1.1',
  'lcsSetupWanAdditionalPptpGatewaysEntryBeginWith' => '1.3.6.1.4.1.2356.11.2.2.30.1.2',
  'lcsSetupWanAdditionalPptpGatewaysEntryBeginWithDefinition' => 'LCOS-MIB::lcsSetupWanAdditionalPptpGatewaysEntryBeginWith',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway1' => '1.3.6.1.4.1.2356.11.2.2.30.1.3',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag1' => '1.3.6.1.4.1.2356.11.2.2.30.1.4',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway2' => '1.3.6.1.4.1.2356.11.2.2.30.1.5',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag2' => '1.3.6.1.4.1.2356.11.2.2.30.1.6',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway3' => '1.3.6.1.4.1.2356.11.2.2.30.1.7',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag3' => '1.3.6.1.4.1.2356.11.2.2.30.1.8',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway4' => '1.3.6.1.4.1.2356.11.2.2.30.1.9',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag4' => '1.3.6.1.4.1.2356.11.2.2.30.1.10',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway5' => '1.3.6.1.4.1.2356.11.2.2.30.1.11',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag5' => '1.3.6.1.4.1.2356.11.2.2.30.1.12',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway6' => '1.3.6.1.4.1.2356.11.2.2.30.1.13',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag6' => '1.3.6.1.4.1.2356.11.2.2.30.1.14',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway7' => '1.3.6.1.4.1.2356.11.2.2.30.1.15',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag7' => '1.3.6.1.4.1.2356.11.2.2.30.1.16',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway8' => '1.3.6.1.4.1.2356.11.2.2.30.1.17',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag8' => '1.3.6.1.4.1.2356.11.2.2.30.1.18',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway9' => '1.3.6.1.4.1.2356.11.2.2.30.1.19',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag9' => '1.3.6.1.4.1.2356.11.2.2.30.1.20',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway10' => '1.3.6.1.4.1.2356.11.2.2.30.1.21',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag10' => '1.3.6.1.4.1.2356.11.2.2.30.1.22',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway11' => '1.3.6.1.4.1.2356.11.2.2.30.1.23',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag11' => '1.3.6.1.4.1.2356.11.2.2.30.1.24',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway12' => '1.3.6.1.4.1.2356.11.2.2.30.1.25',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag12' => '1.3.6.1.4.1.2356.11.2.2.30.1.26',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway13' => '1.3.6.1.4.1.2356.11.2.2.30.1.27',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag13' => '1.3.6.1.4.1.2356.11.2.2.30.1.28',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway14' => '1.3.6.1.4.1.2356.11.2.2.30.1.29',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag14' => '1.3.6.1.4.1.2356.11.2.2.30.1.30',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway15' => '1.3.6.1.4.1.2356.11.2.2.30.1.31',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag15' => '1.3.6.1.4.1.2356.11.2.2.30.1.32',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway16' => '1.3.6.1.4.1.2356.11.2.2.30.1.33',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag16' => '1.3.6.1.4.1.2356.11.2.2.30.1.34',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway17' => '1.3.6.1.4.1.2356.11.2.2.30.1.35',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag17' => '1.3.6.1.4.1.2356.11.2.2.30.1.36',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway18' => '1.3.6.1.4.1.2356.11.2.2.30.1.37',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag18' => '1.3.6.1.4.1.2356.11.2.2.30.1.38',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway19' => '1.3.6.1.4.1.2356.11.2.2.30.1.39',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag19' => '1.3.6.1.4.1.2356.11.2.2.30.1.40',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway20' => '1.3.6.1.4.1.2356.11.2.2.30.1.41',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag20' => '1.3.6.1.4.1.2356.11.2.2.30.1.42',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway21' => '1.3.6.1.4.1.2356.11.2.2.30.1.43',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag21' => '1.3.6.1.4.1.2356.11.2.2.30.1.44',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway22' => '1.3.6.1.4.1.2356.11.2.2.30.1.45',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag22' => '1.3.6.1.4.1.2356.11.2.2.30.1.46',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway23' => '1.3.6.1.4.1.2356.11.2.2.30.1.47',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag23' => '1.3.6.1.4.1.2356.11.2.2.30.1.48',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway24' => '1.3.6.1.4.1.2356.11.2.2.30.1.49',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag24' => '1.3.6.1.4.1.2356.11.2.2.30.1.50',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway25' => '1.3.6.1.4.1.2356.11.2.2.30.1.51',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag25' => '1.3.6.1.4.1.2356.11.2.2.30.1.52',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway26' => '1.3.6.1.4.1.2356.11.2.2.30.1.53',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag26' => '1.3.6.1.4.1.2356.11.2.2.30.1.54',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway27' => '1.3.6.1.4.1.2356.11.2.2.30.1.55',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag27' => '1.3.6.1.4.1.2356.11.2.2.30.1.56',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway28' => '1.3.6.1.4.1.2356.11.2.2.30.1.57',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag28' => '1.3.6.1.4.1.2356.11.2.2.30.1.58',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway29' => '1.3.6.1.4.1.2356.11.2.2.30.1.59',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag29' => '1.3.6.1.4.1.2356.11.2.2.30.1.60',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway30' => '1.3.6.1.4.1.2356.11.2.2.30.1.61',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag30' => '1.3.6.1.4.1.2356.11.2.2.30.1.62',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway31' => '1.3.6.1.4.1.2356.11.2.2.30.1.63',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag31' => '1.3.6.1.4.1.2356.11.2.2.30.1.64',
  'lcsSetupWanAdditionalPptpGatewaysEntryGateway32' => '1.3.6.1.4.1.2356.11.2.2.30.1.65',
  'lcsSetupWanAdditionalPptpGatewaysEntryRtgTag32' => '1.3.6.1.4.1.2356.11.2.2.30.1.66',
  'lcsSetupWanPptpSourceCheck' => '1.3.6.1.4.1.2356.11.2.2.31',
  'lcsSetupWanPptpSourceCheckDefinition' => 'LCOS-MIB::lcsSetupWanPptpSourceCheck',
  'lcsSetupCharges' => '1.3.6.1.4.1.2356.11.2.3',
  'lcsSetupChargesBudgetUnits' => '1.3.6.1.4.1.2356.11.2.3.1',
  'lcsSetupChargesDaysPerPeriod' => '1.3.6.1.4.1.2356.11.2.3.2',
  'lcsSetupChargesSpareUnits' => '1.3.6.1.4.1.2356.11.2.3.3',
  'lcsSetupChargesRouterUnits' => '1.3.6.1.4.1.2356.11.2.3.4',
  'lcsSetupChargesTableBudgetTable' => '1.3.6.1.4.1.2356.11.2.3.5',
  'lcsSetupChargesTableBudgetEntry' => '1.3.6.1.4.1.2356.11.2.3.5.1',
  'lcsSetupChargesTableBudgetEntryIfc' => '1.3.6.1.4.1.2356.11.2.3.5.1.1',
  'lcsSetupChargesTableBudgetEntryIfcDefinition' => 'LCOS-MIB::lcsSetupChargesTableBudgetEntryIfc',
  'lcsSetupChargesTableBudgetEntryBudgetUnits' => '1.3.6.1.4.1.2356.11.2.3.5.1.2',
  'lcsSetupChargesTableBudgetEntrySpareBudget' => '1.3.6.1.4.1.2356.11.2.3.5.1.3',
  'lcsSetupChargesTableBudgetEntryTotalUnits' => '1.3.6.1.4.1.2356.11.2.3.5.1.4',
  'lcsSetupChargesTotalUnits' => '1.3.6.1.4.1.2356.11.2.3.6',
  'lcsSetupChargesTimeTableTable' => '1.3.6.1.4.1.2356.11.2.3.7',
  'lcsSetupChargesTimeTableEntry' => '1.3.6.1.4.1.2356.11.2.3.7.1',
  'lcsSetupChargesTimeTableEntryIfc' => '1.3.6.1.4.1.2356.11.2.3.7.1.1',
  'lcsSetupChargesTimeTableEntryIfcDefinition' => 'LCOS-MIB::lcsSetupChargesTimeTableEntryIfc',
  'lcsSetupChargesTimeTableEntryBudgetMinutes' => '1.3.6.1.4.1.2356.11.2.3.7.1.2',
  'lcsSetupChargesTimeTableEntrySpareMinutes' => '1.3.6.1.4.1.2356.11.2.3.7.1.3',
  'lcsSetupChargesTimeTableEntryMinutesActive' => '1.3.6.1.4.1.2356.11.2.3.7.1.4',
  'lcsSetupChargesTimeTableEntryMinutesPassive' => '1.3.6.1.4.1.2356.11.2.3.7.1.5',
  'lcsSetupChargesDslBroadbandMinutesBudget' => '1.3.6.1.4.1.2356.11.2.3.8',
  'lcsSetupChargesSpareDslBroadbandMinutes' => '1.3.6.1.4.1.2356.11.2.3.9',
  'lcsSetupChargesRouterDslBroadbandMinutesActive' => '1.3.6.1.4.1.2356.11.2.3.10',
  'lcsSetupChargesAdditionalDslBroadbandBudget' => '1.3.6.1.4.1.2356.11.2.3.11',
  'lcsSetupChargesActivateAdditionalBudget' => '1.3.6.1.4.1.2356.11.2.3.12',
  'lcsSetupChargesDialupMinutesBudget' => '1.3.6.1.4.1.2356.11.2.3.13',
  'lcsSetupChargesSpareDialupMinutes' => '1.3.6.1.4.1.2356.11.2.3.14',
  'lcsSetupChargesDialupMinutesActive' => '1.3.6.1.4.1.2356.11.2.3.15',
  'lcsSetupChargesResetBudgets' => '1.3.6.1.4.1.2356.11.2.3.16',
  'lcsSetupLan' => '1.3.6.1.4.1.2356.11.2.4',
  'lcsSetupLanMacAddress' => '1.3.6.1.4.1.2356.11.2.4.2',
  'lcsSetupLanSpareHeap' => '1.3.6.1.4.1.2356.11.2.4.3',
  'lcsSetupLanTraceMac' => '1.3.6.1.4.1.2356.11.2.4.8',
  'lcsSetupLanTraceLevel' => '1.3.6.1.4.1.2356.11.2.4.9',
  'lcsSetupLanIeee8021x' => '1.3.6.1.4.1.2356.11.2.4.10',
  'lcsSetupLanIeee8021xSupplicantIfcSetupTable' => '1.3.6.1.4.1.2356.11.2.4.10.1',
  'lcsSetupLanIeee8021xSupplicantIfcSetupEntry' => '1.3.6.1.4.1.2356.11.2.4.10.1.1',
  'lcsSetupLanIeee8021xSupplicantIfcSetupEntryIfc' => '1.3.6.1.4.1.2356.11.2.4.10.1.1.1',
  'lcsSetupLanIeee8021xSupplicantIfcSetupEntryIfcDefinition' => 'LCOS-MIB::lcsSetupLanIeee8021xSupplicantIfcSetupEntryIfc',
  'lcsSetupLanIeee8021xSupplicantIfcSetupEntryMethod' => '1.3.6.1.4.1.2356.11.2.4.10.1.1.2',
  'lcsSetupLanIeee8021xSupplicantIfcSetupEntryMethodDefinition' => 'LCOS-MIB::lcsSetupLanIeee8021xSupplicantIfcSetupEntryMethod',
  'lcsSetupLanIeee8021xSupplicantIfcSetupEntryCredentials' => '1.3.6.1.4.1.2356.11.2.4.10.1.1.3',
  'lcsSetupLanLinkupReportDelayMs' => '1.3.6.1.4.1.2356.11.2.4.11',
  'lcsSetupTcpIp' => '1.3.6.1.4.1.2356.11.2.7',
  'lcsSetupTcpIpOperating' => '1.3.6.1.4.1.2356.11.2.7.1',
  'lcsSetupTcpIpOperatingDefinition' => 'LCOS-MIB::lcsSetupTcpIpOperating',
  'lcsSetupTcpIpAccessListTable' => '1.3.6.1.4.1.2356.11.2.7.6',
  'lcsSetupTcpIpAccessListEntry' => '1.3.6.1.4.1.2356.11.2.7.6.1',
  'lcsSetupTcpIpAccessListEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.7.6.1.1',
  'lcsSetupTcpIpAccessListEntryIpNetmask' => '1.3.6.1.4.1.2356.11.2.7.6.1.2',
  'lcsSetupTcpIpAccessListEntryRtgTag' => '1.3.6.1.4.1.2356.11.2.7.6.1.3',
  'lcsSetupTcpIpDnsDefault' => '1.3.6.1.4.1.2356.11.2.7.7',
  'lcsSetupTcpIpDnsBackup' => '1.3.6.1.4.1.2356.11.2.7.8',
  'lcsSetupTcpIpNbnsDefault' => '1.3.6.1.4.1.2356.11.2.7.9',
  'lcsSetupTcpIpNbnsBackup' => '1.3.6.1.4.1.2356.11.2.7.10',
  'lcsSetupTcpIpArpAgingMinutes' => '1.3.6.1.4.1.2356.11.2.7.11',
  'lcsSetupTcpIpArpTableTable' => '1.3.6.1.4.1.2356.11.2.7.16',
  'lcsSetupTcpIpArpTableEntry' => '1.3.6.1.4.1.2356.11.2.7.16.1',
  'lcsSetupTcpIpArpTableEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.7.16.1.1',
  'lcsSetupTcpIpArpTableEntryMacAddress' => '1.3.6.1.4.1.2356.11.2.7.16.1.2',
  'lcsSetupTcpIpArpTableEntryLastAccess' => '1.3.6.1.4.1.2356.11.2.7.16.1.3',
  'lcsSetupTcpIpArpTableEntryEthernetPort' => '1.3.6.1.4.1.2356.11.2.7.16.1.5',
  'lcsSetupTcpIpArpTableEntryEthernetPortDefinition' => 'LCOS-MIB::lcsSetupTcpIpArpTableEntryEthernetPort',
  'lcsSetupTcpIpArpTableEntryPeer' => '1.3.6.1.4.1.2356.11.2.7.16.1.6',
  'lcsSetupTcpIpArpTableEntryVlanId' => '1.3.6.1.4.1.2356.11.2.7.16.1.7',
  'lcsSetupTcpIpArpTableEntryConnect' => '1.3.6.1.4.1.2356.11.2.7.16.1.8',
  'lcsSetupTcpIpArpTableEntryConnectDefinition' => 'LCOS-MIB::lcsSetupTcpIpArpTableEntryConnect',
  'lcsSetupTcpIpLoopbackListTable' => '1.3.6.1.4.1.2356.11.2.7.17',
  'lcsSetupTcpIpLoopbackListEntry' => '1.3.6.1.4.1.2356.11.2.7.17.1',
  'lcsSetupTcpIpLoopbackListEntryLoopbackAddr' => '1.3.6.1.4.1.2356.11.2.7.17.1.1',
  'lcsSetupTcpIpLoopbackListEntryName' => '1.3.6.1.4.1.2356.11.2.7.17.1.2',
  'lcsSetupTcpIpLoopbackListEntryRtgTag' => '1.3.6.1.4.1.2356.11.2.7.17.1.3',
  'lcsSetupTcpIpNonLocArpReplies' => '1.3.6.1.4.1.2356.11.2.7.20',
  'lcsSetupTcpIpNonLocArpRepliesDefinition' => 'LCOS-MIB::lcsSetupTcpIpNonLocArpReplies',
  'lcsSetupTcpIpAliveTest' => '1.3.6.1.4.1.2356.11.2.7.21',
  'lcsSetupTcpIpAliveTestTargetAddress' => '1.3.6.1.4.1.2356.11.2.7.21.1',
  'lcsSetupTcpIpAliveTestTestInterval' => '1.3.6.1.4.1.2356.11.2.7.21.2',
  'lcsSetupTcpIpAliveTestRetryCount' => '1.3.6.1.4.1.2356.11.2.7.21.3',
  'lcsSetupTcpIpAliveTestRetryInterval' => '1.3.6.1.4.1.2356.11.2.7.21.4',
  'lcsSetupTcpIpAliveTestFailLimit' => '1.3.6.1.4.1.2356.11.2.7.21.5',
  'lcsSetupTcpIpAliveTestBootType' => '1.3.6.1.4.1.2356.11.2.7.21.6',
  'lcsSetupTcpIpAliveTestBootTypeDefinition' => 'LCOS-MIB::lcsSetupTcpIpAliveTestBootType',
  'lcsSetupTcpIpIcmpOnArpTimeout' => '1.3.6.1.4.1.2356.11.2.7.22',
  'lcsSetupTcpIpIcmpOnArpTimeoutDefinition' => 'LCOS-MIB::lcsSetupTcpIpIcmpOnArpTimeout',
  'lcsSetupTcpIpNetworkListTable' => '1.3.6.1.4.1.2356.11.2.7.30',
  'lcsSetupTcpIpNetworkListEntry' => '1.3.6.1.4.1.2356.11.2.7.30.1',
  'lcsSetupTcpIpNetworkListEntryNetworkName' => '1.3.6.1.4.1.2356.11.2.7.30.1.1',
  'lcsSetupTcpIpNetworkListEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.7.30.1.2',
  'lcsSetupTcpIpNetworkListEntryIpNetmask' => '1.3.6.1.4.1.2356.11.2.7.30.1.3',
  'lcsSetupTcpIpNetworkListEntryVlanId' => '1.3.6.1.4.1.2356.11.2.7.30.1.4',
  'lcsSetupTcpIpNetworkListEntryInterface' => '1.3.6.1.4.1.2356.11.2.7.30.1.5',
  'lcsSetupTcpIpNetworkListEntryInterfaceDefinition' => 'LCOS-MIB::lcsSetupTcpIpNetworkListEntryInterface',
  'lcsSetupTcpIpNetworkListEntrySrcCheck' => '1.3.6.1.4.1.2356.11.2.7.30.1.6',
  'lcsSetupTcpIpNetworkListEntrySrcCheckDefinition' => 'LCOS-MIB::lcsSetupTcpIpNetworkListEntrySrcCheck',
  'lcsSetupTcpIpNetworkListEntryType' => '1.3.6.1.4.1.2356.11.2.7.30.1.7',
  'lcsSetupTcpIpNetworkListEntryTypeDefinition' => 'LCOS-MIB::lcsSetupTcpIpNetworkListEntryType',
  'lcsSetupTcpIpNetworkListEntryRtgTag' => '1.3.6.1.4.1.2356.11.2.7.30.1.8',
  'lcsSetupTcpIpNetworkListEntryComment' => '1.3.6.1.4.1.2356.11.2.7.30.1.9',
  'lcsSetupIpRouter' => '1.3.6.1.4.1.2356.11.2.8',
  'lcsSetupIpRouterOperating' => '1.3.6.1.4.1.2356.11.2.8.1',
  'lcsSetupIpRouterOperatingDefinition' => 'LCOS-MIB::lcsSetupIpRouterOperating',
  'lcsSetupIpRouterIpRoutingTableTable' => '1.3.6.1.4.1.2356.11.2.8.2',
  'lcsSetupIpRouterIpRoutingTableEntry' => '1.3.6.1.4.1.2356.11.2.8.2.1',
  'lcsSetupIpRouterIpRoutingTableEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.8.2.1.1',
  'lcsSetupIpRouterIpRoutingTableEntryIpNetmask' => '1.3.6.1.4.1.2356.11.2.8.2.1.2',
  'lcsSetupIpRouterIpRoutingTableEntryPeerOrIp' => '1.3.6.1.4.1.2356.11.2.8.2.1.3',
  'lcsSetupIpRouterIpRoutingTableEntryDistance' => '1.3.6.1.4.1.2356.11.2.8.2.1.4',
  'lcsSetupIpRouterIpRoutingTableEntryMasquerade' => '1.3.6.1.4.1.2356.11.2.8.2.1.5',
  'lcsSetupIpRouterIpRoutingTableEntryMasqueradeDefinition' => 'LCOS-MIB::lcsSetupIpRouterIpRoutingTableEntryMasquerade',
  'lcsSetupIpRouterIpRoutingTableEntryActive' => '1.3.6.1.4.1.2356.11.2.8.2.1.6',
  'lcsSetupIpRouterIpRoutingTableEntryActiveDefinition' => 'LCOS-MIB::lcsSetupIpRouterIpRoutingTableEntryActive',
  'lcsSetupIpRouterIpRoutingTableEntryComment' => '1.3.6.1.4.1.2356.11.2.8.2.1.7',
  'lcsSetupIpRouterIpRoutingTableEntryRtgTag' => '1.3.6.1.4.1.2356.11.2.8.2.1.8',
  'lcsSetupIpRouterProxyArp' => '1.3.6.1.4.1.2356.11.2.8.5',
  'lcsSetupIpRouterProxyArpDefinition' => 'LCOS-MIB::lcsSetupIpRouterProxyArp',
  'lcsSetupIpRouterSendIcmpRedirect' => '1.3.6.1.4.1.2356.11.2.8.6',
  'lcsSetupIpRouterSendIcmpRedirectDefinition' => 'LCOS-MIB::lcsSetupIpRouterSendIcmpRedirect',
  'lcsSetupIpRouterRoutingMethod' => '1.3.6.1.4.1.2356.11.2.8.7',
  'lcsSetupIpRouterRoutingMethodRoutingMethod' => '1.3.6.1.4.1.2356.11.2.8.7.1',
  'lcsSetupIpRouterRoutingMethodRoutingMethodDefinition' => 'LCOS-MIB::lcsSetupIpRouterRoutingMethodRoutingMethod',
  'lcsSetupIpRouterRoutingMethodIcmpRoutingMethod' => '1.3.6.1.4.1.2356.11.2.8.7.2',
  'lcsSetupIpRouterRoutingMethodIcmpRoutingMethodDefinition' => 'LCOS-MIB::lcsSetupIpRouterRoutingMethodIcmpRoutingMethod',
  'lcsSetupIpRouterRoutingMethodSynAckSpeedup' => '1.3.6.1.4.1.2356.11.2.8.7.3',
  'lcsSetupIpRouterRoutingMethodSynAckSpeedupDefinition' => 'LCOS-MIB::lcsSetupIpRouterRoutingMethodSynAckSpeedup',
  'lcsSetupIpRouterRoutingMethodL2L3Tagging' => '1.3.6.1.4.1.2356.11.2.8.7.4',
  'lcsSetupIpRouterRoutingMethodL2L3TaggingDefinition' => 'LCOS-MIB::lcsSetupIpRouterRoutingMethodL2L3Tagging',
  'lcsSetupIpRouterRoutingMethodL3L2Tagging' => '1.3.6.1.4.1.2356.11.2.8.7.5',
  'lcsSetupIpRouterRoutingMethodL3L2TaggingDefinition' => 'LCOS-MIB::lcsSetupIpRouterRoutingMethodL3L2Tagging',
  'lcsSetupIpRouterRoutingMethodRouteInternalServices' => '1.3.6.1.4.1.2356.11.2.8.7.6',
  'lcsSetupIpRouterRoutingMethodRouteInternalServicesDefinition' => 'LCOS-MIB::lcsSetupIpRouterRoutingMethodRouteInternalServices',
  'lcsSetupIpRouterRip' => '1.3.6.1.4.1.2356.11.2.8.8',
  'lcsSetupIpRouterRipR1Mask' => '1.3.6.1.4.1.2356.11.2.8.8.2',
  'lcsSetupIpRouterRipR1MaskDefinition' => 'LCOS-MIB::lcsSetupIpRouterRipR1Mask',
  'lcsSetupIpRouterRipWanSitesTable' => '1.3.6.1.4.1.2356.11.2.8.8.4',
  'lcsSetupIpRouterRipWanSitesEntry' => '1.3.6.1.4.1.2356.11.2.8.8.4.1',
  'lcsSetupIpRouterRipWanSitesEntryPeer' => '1.3.6.1.4.1.2356.11.2.8.8.4.1.1',
  'lcsSetupIpRouterRipWanSitesEntryRipType' => '1.3.6.1.4.1.2356.11.2.8.8.4.1.2',
  'lcsSetupIpRouterRipWanSitesEntryRipTypeDefinition' => 'LCOS-MIB::lcsSetupIpRouterRipWanSitesEntryRipType',
  'lcsSetupIpRouterRipWanSitesEntryRipAccept' => '1.3.6.1.4.1.2356.11.2.8.8.4.1.3',
  'lcsSetupIpRouterRipWanSitesEntryRipAcceptDefinition' => 'LCOS-MIB::lcsSetupIpRouterRipWanSitesEntryRipAccept',
  'lcsSetupIpRouterRipWanSitesEntryMasquerade' => '1.3.6.1.4.1.2356.11.2.8.8.4.1.4',
  'lcsSetupIpRouterRipWanSitesEntryMasqueradeDefinition' => 'LCOS-MIB::lcsSetupIpRouterRipWanSitesEntryMasquerade',
  'lcsSetupIpRouterRipWanSitesEntryDftRtgTag' => '1.3.6.1.4.1.2356.11.2.8.8.4.1.5',
  'lcsSetupIpRouterRipWanSitesEntryRtgTagList' => '1.3.6.1.4.1.2356.11.2.8.8.4.1.6',
  'lcsSetupIpRouterRipWanSitesEntryPoisonedReverse' => '1.3.6.1.4.1.2356.11.2.8.8.4.1.7',
  'lcsSetupIpRouterRipWanSitesEntryPoisonedReverseDefinition' => 'LCOS-MIB::lcsSetupIpRouterRipWanSitesEntryPoisonedReverse',
  'lcsSetupIpRouterRipWanSitesEntryRfc2091' => '1.3.6.1.4.1.2356.11.2.8.8.4.1.8',
  'lcsSetupIpRouterRipWanSitesEntryRfc2091Definition' => 'LCOS-MIB::lcsSetupIpRouterRipWanSitesEntryRfc2091',
  'lcsSetupIpRouterRipWanSitesEntryGateway' => '1.3.6.1.4.1.2356.11.2.8.8.4.1.9',
  'lcsSetupIpRouterRipWanSitesEntryRxFilter' => '1.3.6.1.4.1.2356.11.2.8.8.4.1.10',
  'lcsSetupIpRouterRipWanSitesEntryTxFilter' => '1.3.6.1.4.1.2356.11.2.8.8.4.1.11',
  'lcsSetupIpRouterRipWanSitesEntryRipSend' => '1.3.6.1.4.1.2356.11.2.8.8.4.1.12',
  'lcsSetupIpRouterRipWanSitesEntryRipSendDefinition' => 'LCOS-MIB::lcsSetupIpRouterRipWanSitesEntryRipSend',
  'lcsSetupIpRouterRipLanSitesTable' => '1.3.6.1.4.1.2356.11.2.8.8.5',
  'lcsSetupIpRouterRipLanSitesEntry' => '1.3.6.1.4.1.2356.11.2.8.8.5.1',
  'lcsSetupIpRouterRipLanSitesEntryNetworkName' => '1.3.6.1.4.1.2356.11.2.8.8.5.1.1',
  'lcsSetupIpRouterRipLanSitesEntryRipType' => '1.3.6.1.4.1.2356.11.2.8.8.5.1.2',
  'lcsSetupIpRouterRipLanSitesEntryRipTypeDefinition' => 'LCOS-MIB::lcsSetupIpRouterRipLanSitesEntryRipType',
  'lcsSetupIpRouterRipLanSitesEntryRipAccept' => '1.3.6.1.4.1.2356.11.2.8.8.5.1.3',
  'lcsSetupIpRouterRipLanSitesEntryRipAcceptDefinition' => 'LCOS-MIB::lcsSetupIpRouterRipLanSitesEntryRipAccept',
  'lcsSetupIpRouterRipLanSitesEntryPropagate' => '1.3.6.1.4.1.2356.11.2.8.8.5.1.4',
  'lcsSetupIpRouterRipLanSitesEntryPropagateDefinition' => 'LCOS-MIB::lcsSetupIpRouterRipLanSitesEntryPropagate',
  'lcsSetupIpRouterRipLanSitesEntryDftRtgTag' => '1.3.6.1.4.1.2356.11.2.8.8.5.1.5',
  'lcsSetupIpRouterRipLanSitesEntryRtgTagList' => '1.3.6.1.4.1.2356.11.2.8.8.5.1.6',
  'lcsSetupIpRouterRipLanSitesEntryPoisonedReverse' => '1.3.6.1.4.1.2356.11.2.8.8.5.1.7',
  'lcsSetupIpRouterRipLanSitesEntryPoisonedReverseDefinition' => 'LCOS-MIB::lcsSetupIpRouterRipLanSitesEntryPoisonedReverse',
  'lcsSetupIpRouterRipLanSitesEntryRxFilter' => '1.3.6.1.4.1.2356.11.2.8.8.5.1.10',
  'lcsSetupIpRouterRipLanSitesEntryTxFilter' => '1.3.6.1.4.1.2356.11.2.8.8.5.1.11',
  'lcsSetupIpRouterRipLanSitesEntryRipSend' => '1.3.6.1.4.1.2356.11.2.8.8.5.1.12',
  'lcsSetupIpRouterRipLanSitesEntryRipSendDefinition' => 'LCOS-MIB::lcsSetupIpRouterRipLanSitesEntryRipSend',
  'lcsSetupIpRouterRipParameter' => '1.3.6.1.4.1.2356.11.2.8.8.6',
  'lcsSetupIpRouterRipParameterUpdate' => '1.3.6.1.4.1.2356.11.2.8.8.6.1',
  'lcsSetupIpRouterRipParameterHolddown' => '1.3.6.1.4.1.2356.11.2.8.8.6.2',
  'lcsSetupIpRouterRipParameterInvalidate' => '1.3.6.1.4.1.2356.11.2.8.8.6.3',
  'lcsSetupIpRouterRipParameterFlush' => '1.3.6.1.4.1.2356.11.2.8.8.6.4',
  'lcsSetupIpRouterRipParameterUpdDelay' => '1.3.6.1.4.1.2356.11.2.8.8.6.5',
  'lcsSetupIpRouterRipParameterMaxHopcount' => '1.3.6.1.4.1.2356.11.2.8.8.6.6',
  'lcsSetupIpRouterRipParameterRoutesPerFrame' => '1.3.6.1.4.1.2356.11.2.8.8.6.7',
  'lcsSetupIpRouterRipFilterTable' => '1.3.6.1.4.1.2356.11.2.8.8.7',
  'lcsSetupIpRouterRipFilterEntry' => '1.3.6.1.4.1.2356.11.2.8.8.7.1',
  'lcsSetupIpRouterRipFilterEntryName' => '1.3.6.1.4.1.2356.11.2.8.8.7.1.1',
  'lcsSetupIpRouterRipFilterEntryFilter' => '1.3.6.1.4.1.2356.11.2.8.8.7.1.2',
  'lcsSetupIpRouterRipBestRoutesTable' => '1.3.6.1.4.1.2356.11.2.8.8.8',
  'lcsSetupIpRouterRipBestRoutesEntry' => '1.3.6.1.4.1.2356.11.2.8.8.8.1',
  'lcsSetupIpRouterRipBestRoutesEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.8.8.8.1.1',
  'lcsSetupIpRouterRipBestRoutesEntryIpNetmask' => '1.3.6.1.4.1.2356.11.2.8.8.8.1.2',
  'lcsSetupIpRouterRipBestRoutesEntryTime' => '1.3.6.1.4.1.2356.11.2.8.8.8.1.3',
  'lcsSetupIpRouterRipBestRoutesEntryDistance' => '1.3.6.1.4.1.2356.11.2.8.8.8.1.4',
  'lcsSetupIpRouterRipBestRoutesEntryGateway' => '1.3.6.1.4.1.2356.11.2.8.8.8.1.5',
  'lcsSetupIpRouterRipBestRoutesEntryRtgTag' => '1.3.6.1.4.1.2356.11.2.8.8.8.1.6',
  'lcsSetupIpRouterRipBestRoutesEntryPeer' => '1.3.6.1.4.1.2356.11.2.8.8.8.1.8',
  'lcsSetupIpRouterRipBestRoutesEntryVlanId' => '1.3.6.1.4.1.2356.11.2.8.8.8.1.10',
  'lcsSetupIpRouterRipBestRoutesEntryNetworkName' => '1.3.6.1.4.1.2356.11.2.8.8.8.1.11',
  'lcsSetupIpRouterRipBestRoutesEntryPort' => '1.3.6.1.4.1.2356.11.2.8.8.8.1.12',
  'lcsSetupIpRouterRipBestRoutesEntryPortDefinition' => 'LCOS-MIB::lcsSetupIpRouterRipBestRoutesEntryPort',
  'lcsSetupIpRouterRipAllRoutesTable' => '1.3.6.1.4.1.2356.11.2.8.8.9',
  'lcsSetupIpRouterRipAllRoutesEntry' => '1.3.6.1.4.1.2356.11.2.8.8.9.1',
  'lcsSetupIpRouterRipAllRoutesEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.8.8.9.1.1',
  'lcsSetupIpRouterRipAllRoutesEntryIpNetmask' => '1.3.6.1.4.1.2356.11.2.8.8.9.1.2',
  'lcsSetupIpRouterRipAllRoutesEntryTime' => '1.3.6.1.4.1.2356.11.2.8.8.9.1.3',
  'lcsSetupIpRouterRipAllRoutesEntryDistance' => '1.3.6.1.4.1.2356.11.2.8.8.9.1.4',
  'lcsSetupIpRouterRipAllRoutesEntryGateway' => '1.3.6.1.4.1.2356.11.2.8.8.9.1.5',
  'lcsSetupIpRouterRipAllRoutesEntryRtgTag' => '1.3.6.1.4.1.2356.11.2.8.8.9.1.6',
  'lcsSetupIpRouterRipAllRoutesEntryPeer' => '1.3.6.1.4.1.2356.11.2.8.8.9.1.8',
  'lcsSetupIpRouterRipAllRoutesEntryVlanId' => '1.3.6.1.4.1.2356.11.2.8.8.9.1.10',
  'lcsSetupIpRouterRipAllRoutesEntryNetworkName' => '1.3.6.1.4.1.2356.11.2.8.8.9.1.11',
  'lcsSetupIpRouterRipAllRoutesEntryPort' => '1.3.6.1.4.1.2356.11.2.8.8.9.1.12',
  'lcsSetupIpRouterRipAllRoutesEntryPortDefinition' => 'LCOS-MIB::lcsSetupIpRouterRipAllRoutesEntryPort',
  'lcsSetupIpRouter1NNat' => '1.3.6.1.4.1.2356.11.2.8.9',
  'lcsSetupIpRouter1NNatTcpAgingSeconds' => '1.3.6.1.4.1.2356.11.2.8.9.1',
  'lcsSetupIpRouter1NNatUdpAgingSeconds' => '1.3.6.1.4.1.2356.11.2.8.9.2',
  'lcsSetupIpRouter1NNatIcmpAgingSeconds' => '1.3.6.1.4.1.2356.11.2.8.9.3',
  'lcsSetupIpRouter1NNatServiceTableTable' => '1.3.6.1.4.1.2356.11.2.8.9.4',
  'lcsSetupIpRouter1NNatServiceTableEntry' => '1.3.6.1.4.1.2356.11.2.8.9.4.1',
  'lcsSetupIpRouter1NNatServiceTableEntryDPortFrom' => '1.3.6.1.4.1.2356.11.2.8.9.4.1.1',
  'lcsSetupIpRouter1NNatServiceTableEntryIntranetAddress' => '1.3.6.1.4.1.2356.11.2.8.9.4.1.2',
  'lcsSetupIpRouter1NNatServiceTableEntryDPortTo' => '1.3.6.1.4.1.2356.11.2.8.9.4.1.3',
  'lcsSetupIpRouter1NNatServiceTableEntryMapPort' => '1.3.6.1.4.1.2356.11.2.8.9.4.1.4',
  'lcsSetupIpRouter1NNatServiceTableEntryActive' => '1.3.6.1.4.1.2356.11.2.8.9.4.1.5',
  'lcsSetupIpRouter1NNatServiceTableEntryActiveDefinition' => 'LCOS-MIB::lcsSetupIpRouter1NNatServiceTableEntryActive',
  'lcsSetupIpRouter1NNatServiceTableEntryComment' => '1.3.6.1.4.1.2356.11.2.8.9.4.1.6',
  'lcsSetupIpRouter1NNatServiceTableEntryPeer' => '1.3.6.1.4.1.2356.11.2.8.9.4.1.7',
  'lcsSetupIpRouter1NNatServiceTableEntryProtocol' => '1.3.6.1.4.1.2356.11.2.8.9.4.1.8',
  'lcsSetupIpRouter1NNatServiceTableEntryProtocolDefinition' => 'LCOS-MIB::lcsSetupIpRouter1NNatServiceTableEntryProtocol',
  'lcsSetupIpRouter1NNatServiceTableEntryWanAddress' => '1.3.6.1.4.1.2356.11.2.8.9.4.1.9',
  'lcsSetupIpRouter1NNatTable1NNatTable' => '1.3.6.1.4.1.2356.11.2.8.9.5',
  'lcsSetupIpRouter1NNatTable1NNatEntry' => '1.3.6.1.4.1.2356.11.2.8.9.5.1',
  'lcsSetupIpRouter1NNatTable1NNatEntryIntranetAddress' => '1.3.6.1.4.1.2356.11.2.8.9.5.1.1',
  'lcsSetupIpRouter1NNatTable1NNatEntrySourcePort' => '1.3.6.1.4.1.2356.11.2.8.9.5.1.2',
  'lcsSetupIpRouter1NNatTable1NNatEntryProtocol' => '1.3.6.1.4.1.2356.11.2.8.9.5.1.3',
  'lcsSetupIpRouter1NNatTable1NNatEntryProtocolDefinition' => 'LCOS-MIB::lcsSetupIpRouter1NNatTable1NNatEntryProtocol',
  'lcsSetupIpRouter1NNatTable1NNatEntryTimeout' => '1.3.6.1.4.1.2356.11.2.8.9.5.1.4',
  'lcsSetupIpRouter1NNatTable1NNatEntryHandler' => '1.3.6.1.4.1.2356.11.2.8.9.5.1.5',
  'lcsSetupIpRouter1NNatTable1NNatEntryRemoteAddress' => '1.3.6.1.4.1.2356.11.2.8.9.5.1.6',
  'lcsSetupIpRouter1NNatFragments' => '1.3.6.1.4.1.2356.11.2.8.9.6',
  'lcsSetupIpRouter1NNatFragmentsDefinition' => 'LCOS-MIB::lcsSetupIpRouter1NNatFragments',
  'lcsSetupIpRouter1NNatFragmentAgingSeconds' => '1.3.6.1.4.1.2356.11.2.8.9.7',
  'lcsSetupIpRouter1NNatIpsecAgingSeconds' => '1.3.6.1.4.1.2356.11.2.8.9.8',
  'lcsSetupIpRouter1NNatIpsecTableTable' => '1.3.6.1.4.1.2356.11.2.8.9.9',
  'lcsSetupIpRouter1NNatIpsecTableEntry' => '1.3.6.1.4.1.2356.11.2.8.9.9.1',
  'lcsSetupIpRouter1NNatIpsecTableEntryRemoteAddress' => '1.3.6.1.4.1.2356.11.2.8.9.9.1.1',
  'lcsSetupIpRouter1NNatIpsecTableEntryLocalAddress' => '1.3.6.1.4.1.2356.11.2.8.9.9.1.2',
  'lcsSetupIpRouter1NNatIpsecTableEntryRcHi' => '1.3.6.1.4.1.2356.11.2.8.9.9.1.3',
  'lcsSetupIpRouter1NNatIpsecTableEntryRcLo' => '1.3.6.1.4.1.2356.11.2.8.9.9.1.4',
  'lcsSetupIpRouter1NNatIpsecTableEntryLcHi' => '1.3.6.1.4.1.2356.11.2.8.9.9.1.5',
  'lcsSetupIpRouter1NNatIpsecTableEntryLcLo' => '1.3.6.1.4.1.2356.11.2.8.9.9.1.6',
  'lcsSetupIpRouter1NNatIpsecTableEntryRemoteSpi' => '1.3.6.1.4.1.2356.11.2.8.9.9.1.7',
  'lcsSetupIpRouter1NNatIpsecTableEntryLocalSpi' => '1.3.6.1.4.1.2356.11.2.8.9.9.1.8',
  'lcsSetupIpRouter1NNatIpsecTableEntryTimeout' => '1.3.6.1.4.1.2356.11.2.8.9.9.1.9',
  'lcsSetupIpRouter1NNatIpsecTableEntryFlags' => '1.3.6.1.4.1.2356.11.2.8.9.9.1.10',
  'lcsSetupIpRouter1NNatIpsecTableEntryCo' => '1.3.6.1.4.1.2356.11.2.8.9.9.1.11',
  'lcsSetupIpRouter1NNatIpsecTableEntryNl' => '1.3.6.1.4.1.2356.11.2.8.9.9.1.12',
  'lcsSetupIpRouter1NNatIpsecTableEntryNr' => '1.3.6.1.4.1.2356.11.2.8.9.9.1.13',
  'lcsSetupIpRouter1NNatIpsecTableEntryDp' => '1.3.6.1.4.1.2356.11.2.8.9.9.1.14',
  'lcsSetupIpRouter1NNatIdSpoofing' => '1.3.6.1.4.1.2356.11.2.8.9.10',
  'lcsSetupIpRouter1NNatIdSpoofingDefinition' => 'LCOS-MIB::lcsSetupIpRouter1NNatIdSpoofing',
  'lcsSetupIpRouterFirewall' => '1.3.6.1.4.1.2356.11.2.8.10',
  'lcsSetupIpRouterFirewallObjectsTable' => '1.3.6.1.4.1.2356.11.2.8.10.1',
  'lcsSetupIpRouterFirewallObjectsEntry' => '1.3.6.1.4.1.2356.11.2.8.10.1.1',
  'lcsSetupIpRouterFirewallObjectsEntryName' => '1.3.6.1.4.1.2356.11.2.8.10.1.1.1',
  'lcsSetupIpRouterFirewallObjectsEntryDescription' => '1.3.6.1.4.1.2356.11.2.8.10.1.1.2',
  'lcsSetupIpRouterFirewallRulesTable' => '1.3.6.1.4.1.2356.11.2.8.10.2',
  'lcsSetupIpRouterFirewallRulesEntry' => '1.3.6.1.4.1.2356.11.2.8.10.2.1',
  'lcsSetupIpRouterFirewallRulesEntryName' => '1.3.6.1.4.1.2356.11.2.8.10.2.1.1',
  'lcsSetupIpRouterFirewallRulesEntryProt' => '1.3.6.1.4.1.2356.11.2.8.10.2.1.2',
  'lcsSetupIpRouterFirewallRulesEntrySource' => '1.3.6.1.4.1.2356.11.2.8.10.2.1.3',
  'lcsSetupIpRouterFirewallRulesEntryDestination' => '1.3.6.1.4.1.2356.11.2.8.10.2.1.4',
  'lcsSetupIpRouterFirewallRulesEntryAction' => '1.3.6.1.4.1.2356.11.2.8.10.2.1.7',
  'lcsSetupIpRouterFirewallRulesEntryLinked' => '1.3.6.1.4.1.2356.11.2.8.10.2.1.8',
  'lcsSetupIpRouterFirewallRulesEntryLinkedDefinition' => 'LCOS-MIB::lcsSetupIpRouterFirewallRulesEntryLinked',
  'lcsSetupIpRouterFirewallRulesEntryPrio' => '1.3.6.1.4.1.2356.11.2.8.10.2.1.9',
  'lcsSetupIpRouterFirewallRulesEntryFirewallRule' => '1.3.6.1.4.1.2356.11.2.8.10.2.1.10',
  'lcsSetupIpRouterFirewallRulesEntryFirewallRuleDefinition' => 'LCOS-MIB::lcsSetupIpRouterFirewallRulesEntryFirewallRule',
  'lcsSetupIpRouterFirewallRulesEntryVpnRule' => '1.3.6.1.4.1.2356.11.2.8.10.2.1.11',
  'lcsSetupIpRouterFirewallRulesEntryVpnRuleDefinition' => 'LCOS-MIB::lcsSetupIpRouterFirewallRulesEntryVpnRule',
  'lcsSetupIpRouterFirewallRulesEntryStateful' => '1.3.6.1.4.1.2356.11.2.8.10.2.1.12',
  'lcsSetupIpRouterFirewallRulesEntryStatefulDefinition' => 'LCOS-MIB::lcsSetupIpRouterFirewallRulesEntryStateful',
  'lcsSetupIpRouterFirewallRulesEntryComment' => '1.3.6.1.4.1.2356.11.2.8.10.2.1.13',
  'lcsSetupIpRouterFirewallRulesEntryRtgTag' => '1.3.6.1.4.1.2356.11.2.8.10.2.1.14',
  'lcsSetupIpRouterFirewallFilterListTable' => '1.3.6.1.4.1.2356.11.2.8.10.3',
  'lcsSetupIpRouterFirewallFilterListEntry' => '1.3.6.1.4.1.2356.11.2.8.10.3.1',
  'lcsSetupIpRouterFirewallFilterListEntryIdx' => '1.3.6.1.4.1.2356.11.2.8.10.3.1.1',
  'lcsSetupIpRouterFirewallFilterListEntryProt' => '1.3.6.1.4.1.2356.11.2.8.10.3.1.2',
  'lcsSetupIpRouterFirewallFilterListEntrySrcAddress' => '1.3.6.1.4.1.2356.11.2.8.10.3.1.3',
  'lcsSetupIpRouterFirewallFilterListEntrySrcNetmask' => '1.3.6.1.4.1.2356.11.2.8.10.3.1.4',
  'lcsSetupIpRouterFirewallFilterListEntrySSt' => '1.3.6.1.4.1.2356.11.2.8.10.3.1.5',
  'lcsSetupIpRouterFirewallFilterListEntrySEnd' => '1.3.6.1.4.1.2356.11.2.8.10.3.1.6',
  'lcsSetupIpRouterFirewallFilterListEntryDstAddress' => '1.3.6.1.4.1.2356.11.2.8.10.3.1.7',
  'lcsSetupIpRouterFirewallFilterListEntryDstNetmask' => '1.3.6.1.4.1.2356.11.2.8.10.3.1.8',
  'lcsSetupIpRouterFirewallFilterListEntryDSt' => '1.3.6.1.4.1.2356.11.2.8.10.3.1.9',
  'lcsSetupIpRouterFirewallFilterListEntryDEnd' => '1.3.6.1.4.1.2356.11.2.8.10.3.1.10',
  'lcsSetupIpRouterFirewallFilterListEntryAction' => '1.3.6.1.4.1.2356.11.2.8.10.3.1.11',
  'lcsSetupIpRouterFirewallFilterListEntrySrcMac' => '1.3.6.1.4.1.2356.11.2.8.10.3.1.13',
  'lcsSetupIpRouterFirewallFilterListEntryDstMac' => '1.3.6.1.4.1.2356.11.2.8.10.3.1.14',
  'lcsSetupIpRouterFirewallFilterListEntryLinked' => '1.3.6.1.4.1.2356.11.2.8.10.3.1.15',
  'lcsSetupIpRouterFirewallFilterListEntryLinkedDefinition' => 'LCOS-MIB::lcsSetupIpRouterFirewallFilterListEntryLinked',
  'lcsSetupIpRouterFirewallFilterListEntryPrio' => '1.3.6.1.4.1.2356.11.2.8.10.3.1.16',
  'lcsSetupIpRouterFirewallFilterListEntryRtgTag' => '1.3.6.1.4.1.2356.11.2.8.10.3.1.17',
  'lcsSetupIpRouterFirewallActionsTable' => '1.3.6.1.4.1.2356.11.2.8.10.4',
  'lcsSetupIpRouterFirewallActionsEntry' => '1.3.6.1.4.1.2356.11.2.8.10.4.1',
  'lcsSetupIpRouterFirewallActionsEntryName' => '1.3.6.1.4.1.2356.11.2.8.10.4.1.1',
  'lcsSetupIpRouterFirewallActionsEntryDescription' => '1.3.6.1.4.1.2356.11.2.8.10.4.1.2',
  'lcsSetupIpRouterFirewallConnectionListTable' => '1.3.6.1.4.1.2356.11.2.8.10.5',
  'lcsSetupIpRouterFirewallConnectionListEntry' => '1.3.6.1.4.1.2356.11.2.8.10.5.1',
  'lcsSetupIpRouterFirewallConnectionListEntrySrcAddress' => '1.3.6.1.4.1.2356.11.2.8.10.5.1.1',
  'lcsSetupIpRouterFirewallConnectionListEntryDstAddress' => '1.3.6.1.4.1.2356.11.2.8.10.5.1.2',
  'lcsSetupIpRouterFirewallConnectionListEntryProt' => '1.3.6.1.4.1.2356.11.2.8.10.5.1.3',
  'lcsSetupIpRouterFirewallConnectionListEntrySrcPort' => '1.3.6.1.4.1.2356.11.2.8.10.5.1.4',
  'lcsSetupIpRouterFirewallConnectionListEntryDstPort' => '1.3.6.1.4.1.2356.11.2.8.10.5.1.5',
  'lcsSetupIpRouterFirewallConnectionListEntryTimeout' => '1.3.6.1.4.1.2356.11.2.8.10.5.1.6',
  'lcsSetupIpRouterFirewallConnectionListEntryFlags' => '1.3.6.1.4.1.2356.11.2.8.10.5.1.7',
  'lcsSetupIpRouterFirewallConnectionListEntryFilterRule' => '1.3.6.1.4.1.2356.11.2.8.10.5.1.8',
  'lcsSetupIpRouterFirewallConnectionListEntrySrcRoute' => '1.3.6.1.4.1.2356.11.2.8.10.5.1.9',
  'lcsSetupIpRouterFirewallConnectionListEntryDestRoute' => '1.3.6.1.4.1.2356.11.2.8.10.5.1.10',
  'lcsSetupIpRouterFirewallConnectionListEntryRtgTag' => '1.3.6.1.4.1.2356.11.2.8.10.5.1.11',
  'lcsSetupIpRouterFirewallHostBlockListTable' => '1.3.6.1.4.1.2356.11.2.8.10.6',
  'lcsSetupIpRouterFirewallHostBlockListEntry' => '1.3.6.1.4.1.2356.11.2.8.10.6.1',
  'lcsSetupIpRouterFirewallHostBlockListEntrySrcAddress' => '1.3.6.1.4.1.2356.11.2.8.10.6.1.1',
  'lcsSetupIpRouterFirewallHostBlockListEntryTimeout' => '1.3.6.1.4.1.2356.11.2.8.10.6.1.2',
  'lcsSetupIpRouterFirewallHostBlockListEntryFilterRule' => '1.3.6.1.4.1.2356.11.2.8.10.6.1.3',
  'lcsSetupIpRouterFirewallPortBlockListTable' => '1.3.6.1.4.1.2356.11.2.8.10.7',
  'lcsSetupIpRouterFirewallPortBlockListEntry' => '1.3.6.1.4.1.2356.11.2.8.10.7.1',
  'lcsSetupIpRouterFirewallPortBlockListEntryDstAddress' => '1.3.6.1.4.1.2356.11.2.8.10.7.1.1',
  'lcsSetupIpRouterFirewallPortBlockListEntryProt' => '1.3.6.1.4.1.2356.11.2.8.10.7.1.2',
  'lcsSetupIpRouterFirewallPortBlockListEntryDstPort' => '1.3.6.1.4.1.2356.11.2.8.10.7.1.3',
  'lcsSetupIpRouterFirewallPortBlockListEntryTimeout' => '1.3.6.1.4.1.2356.11.2.8.10.7.1.4',
  'lcsSetupIpRouterFirewallPortBlockListEntryFilterRule' => '1.3.6.1.4.1.2356.11.2.8.10.7.1.5',
  'lcsSetupIpRouterFirewallMaxHalfOpenConns' => '1.3.6.1.4.1.2356.11.2.8.10.8',
  'lcsSetupIpRouterFirewallDosAction' => '1.3.6.1.4.1.2356.11.2.8.10.9',
  'lcsSetupIpRouterFirewallAdminEmail' => '1.3.6.1.4.1.2356.11.2.8.10.10',
  'lcsSetupIpRouterFirewallOperating' => '1.3.6.1.4.1.2356.11.2.8.10.11',
  'lcsSetupIpRouterFirewallOperatingDefinition' => 'LCOS-MIB::lcsSetupIpRouterFirewallOperating',
  'lcsSetupIpRouterFirewallPortScanThreshold' => '1.3.6.1.4.1.2356.11.2.8.10.12',
  'lcsSetupIpRouterFirewallIdsAction' => '1.3.6.1.4.1.2356.11.2.8.10.13',
  'lcsSetupIpRouterFirewallPingBlock' => '1.3.6.1.4.1.2356.11.2.8.10.14',
  'lcsSetupIpRouterFirewallPingBlockDefinition' => 'LCOS-MIB::lcsSetupIpRouterFirewallPingBlock',
  'lcsSetupIpRouterFirewallStealthMode' => '1.3.6.1.4.1.2356.11.2.8.10.15',
  'lcsSetupIpRouterFirewallStealthModeDefinition' => 'LCOS-MIB::lcsSetupIpRouterFirewallStealthMode',
  'lcsSetupIpRouterFirewallAuthPort' => '1.3.6.1.4.1.2356.11.2.8.10.16',
  'lcsSetupIpRouterFirewallAuthPortDefinition' => 'LCOS-MIB::lcsSetupIpRouterFirewallAuthPort',
  'lcsSetupIpRouterFirewallDenySessionRecover' => '1.3.6.1.4.1.2356.11.2.8.10.17',
  'lcsSetupIpRouterFirewallDenySessionRecoverDefinition' => 'LCOS-MIB::lcsSetupIpRouterFirewallDenySessionRecover',
  'lcsSetupIpRouterFirewallOpenPortListTable' => '1.3.6.1.4.1.2356.11.2.8.10.19',
  'lcsSetupIpRouterFirewallOpenPortListEntry' => '1.3.6.1.4.1.2356.11.2.8.10.19.1',
  'lcsSetupIpRouterFirewallOpenPortListEntrySrcAddress' => '1.3.6.1.4.1.2356.11.2.8.10.19.1.1',
  'lcsSetupIpRouterFirewallOpenPortListEntryDstAddress' => '1.3.6.1.4.1.2356.11.2.8.10.19.1.2',
  'lcsSetupIpRouterFirewallOpenPortListEntryProt' => '1.3.6.1.4.1.2356.11.2.8.10.19.1.3',
  'lcsSetupIpRouterFirewallOpenPortListEntryDstPort' => '1.3.6.1.4.1.2356.11.2.8.10.19.1.5',
  'lcsSetupIpRouterFirewallOpenPortListEntryTimeout' => '1.3.6.1.4.1.2356.11.2.8.10.19.1.6',
  'lcsSetupIpRouterFirewallOpenPortListEntryFilterRule' => '1.3.6.1.4.1.2356.11.2.8.10.19.1.8',
  'lcsSetupIpRouterFirewallOpenPortListEntrySrcRoute' => '1.3.6.1.4.1.2356.11.2.8.10.19.1.9',
  'lcsSetupIpRouterFirewallApplications' => '1.3.6.1.4.1.2356.11.2.8.10.20',
  'lcsSetupIpRouterFirewallApplicationsFtp' => '1.3.6.1.4.1.2356.11.2.8.10.20.1',
  'lcsSetupIpRouterFirewallApplicationsFtpFtpBlock' => '1.3.6.1.4.1.2356.11.2.8.10.20.1.1',
  'lcsSetupIpRouterFirewallApplicationsFtpFtpBlockDefinition' => 'LCOS-MIB::lcsSetupIpRouterFirewallApplicationsFtpFtpBlock',
  'lcsSetupIpRouterFirewallApplicationsFtpActiveFtpBlock' => '1.3.6.1.4.1.2356.11.2.8.10.20.1.2',
  'lcsSetupIpRouterFirewallApplicationsFtpActiveFtpBlockDefinition' => 'LCOS-MIB::lcsSetupIpRouterFirewallApplicationsFtpActiveFtpBlock',
  'lcsSetupIpRouterFirewallApplicationsFtpMinPort' => '1.3.6.1.4.1.2356.11.2.8.10.20.1.3',
  'lcsSetupIpRouterFirewallApplicationsFtpCheckHostIp' => '1.3.6.1.4.1.2356.11.2.8.10.20.1.4',
  'lcsSetupIpRouterFirewallApplicationsFtpCheckHostIpDefinition' => 'LCOS-MIB::lcsSetupIpRouterFirewallApplicationsFtpCheckHostIp',
  'lcsSetupIpRouterFirewallApplicationsFtpFxpBlock' => '1.3.6.1.4.1.2356.11.2.8.10.20.1.5',
  'lcsSetupIpRouterFirewallApplicationsFtpFxpBlockDefinition' => 'LCOS-MIB::lcsSetupIpRouterFirewallApplicationsFtpFxpBlock',
  'lcsSetupIpRouterFirewallApplicationsIrc' => '1.3.6.1.4.1.2356.11.2.8.10.20.2',
  'lcsSetupIpRouterFirewallApplicationsIrcIrcBlock' => '1.3.6.1.4.1.2356.11.2.8.10.20.2.1',
  'lcsSetupIpRouterFirewallApplicationsIrcIrcBlockDefinition' => 'LCOS-MIB::lcsSetupIpRouterFirewallApplicationsIrcIrcBlock',
  'lcsSetupIpRouterFirewallApplicationsIrcDdcBlock' => '1.3.6.1.4.1.2356.11.2.8.10.20.2.2',
  'lcsSetupIpRouterFirewallApplicationsIrcDdcBlockDefinition' => 'LCOS-MIB::lcsSetupIpRouterFirewallApplicationsIrcDdcBlock',
  'lcsSetupIpRouterFirewallApplicationsIrcMinPort' => '1.3.6.1.4.1.2356.11.2.8.10.20.2.3',
  'lcsSetupIpRouterFirewallApplicationsIrcCheckHostIp' => '1.3.6.1.4.1.2356.11.2.8.10.20.2.4',
  'lcsSetupIpRouterFirewallApplicationsIrcCheckHostIpDefinition' => 'LCOS-MIB::lcsSetupIpRouterFirewallApplicationsIrcCheckHostIp',
  'lcsSetupIpRouterFirewallApplicationsApplAction' => '1.3.6.1.4.1.2356.11.2.8.10.20.10',
  'lcsSetupIpRouterStartWanPool' => '1.3.6.1.4.1.2356.11.2.8.11',
  'lcsSetupIpRouterEndWanPool' => '1.3.6.1.4.1.2356.11.2.8.12',
  'lcsSetupIpRouterDefaultTimeListTable' => '1.3.6.1.4.1.2356.11.2.8.13',
  'lcsSetupIpRouterDefaultTimeListEntry' => '1.3.6.1.4.1.2356.11.2.8.13.1',
  'lcsSetupIpRouterDefaultTimeListEntryIndex' => '1.3.6.1.4.1.2356.11.2.8.13.1.1',
  'lcsSetupIpRouterDefaultTimeListEntryDays' => '1.3.6.1.4.1.2356.11.2.8.13.1.2',
  'lcsSetupIpRouterDefaultTimeListEntryStart' => '1.3.6.1.4.1.2356.11.2.8.13.1.3',
  'lcsSetupIpRouterDefaultTimeListEntryStop' => '1.3.6.1.4.1.2356.11.2.8.13.1.4',
  'lcsSetupIpRouterDefaultTimeListEntryPeer' => '1.3.6.1.4.1.2356.11.2.8.13.1.5',
  'lcsSetupIpRouterUsageDefaultTimetable' => '1.3.6.1.4.1.2356.11.2.8.14',
  'lcsSetupIpRouterUsageDefaultTimetableDefinition' => 'LCOS-MIB::lcsSetupIpRouterUsageDefaultTimetable',
  'lcsSetupIpRouterNNNatTable' => '1.3.6.1.4.1.2356.11.2.8.19',
  'lcsSetupIpRouterNNNatEntry' => '1.3.6.1.4.1.2356.11.2.8.19.1',
  'lcsSetupIpRouterNNNatEntryIdx' => '1.3.6.1.4.1.2356.11.2.8.19.1.1',
  'lcsSetupIpRouterNNNatEntrySrcAddress' => '1.3.6.1.4.1.2356.11.2.8.19.1.2',
  'lcsSetupIpRouterNNNatEntrySrcMask' => '1.3.6.1.4.1.2356.11.2.8.19.1.3',
  'lcsSetupIpRouterNNNatEntryDstStation' => '1.3.6.1.4.1.2356.11.2.8.19.1.4',
  'lcsSetupIpRouterNNNatEntryMappedNetwork' => '1.3.6.1.4.1.2356.11.2.8.19.1.5',
  'lcsSetupIpRouterLoadBalancer' => '1.3.6.1.4.1.2356.11.2.8.20',
  'lcsSetupIpRouterLoadBalancerOperating' => '1.3.6.1.4.1.2356.11.2.8.20.1',
  'lcsSetupIpRouterLoadBalancerOperatingDefinition' => 'LCOS-MIB::lcsSetupIpRouterLoadBalancerOperating',
  'lcsSetupIpRouterLoadBalancerBundlePeersTable' => '1.3.6.1.4.1.2356.11.2.8.20.2',
  'lcsSetupIpRouterLoadBalancerBundlePeersEntry' => '1.3.6.1.4.1.2356.11.2.8.20.2.1',
  'lcsSetupIpRouterLoadBalancerBundlePeersEntryPeer' => '1.3.6.1.4.1.2356.11.2.8.20.2.1.1',
  'lcsSetupIpRouterLoadBalancerBundlePeersEntryBundlePeer1' => '1.3.6.1.4.1.2356.11.2.8.20.2.1.2',
  'lcsSetupIpRouterLoadBalancerBundlePeersEntryBundlePeer2' => '1.3.6.1.4.1.2356.11.2.8.20.2.1.3',
  'lcsSetupIpRouterLoadBalancerBundlePeersEntryBundlePeer3' => '1.3.6.1.4.1.2356.11.2.8.20.2.1.4',
  'lcsSetupIpRouterLoadBalancerBundlePeersEntryBundlePeer4' => '1.3.6.1.4.1.2356.11.2.8.20.2.1.5',
  'lcsSetupIpRouterVrrp' => '1.3.6.1.4.1.2356.11.2.8.21',
  'lcsSetupIpRouterVrrpOperating' => '1.3.6.1.4.1.2356.11.2.8.21.1',
  'lcsSetupIpRouterVrrpOperatingDefinition' => 'LCOS-MIB::lcsSetupIpRouterVrrpOperating',
  'lcsSetupIpRouterVrrpVrrpListTable' => '1.3.6.1.4.1.2356.11.2.8.21.2',
  'lcsSetupIpRouterVrrpVrrpListEntry' => '1.3.6.1.4.1.2356.11.2.8.21.2.1',
  'lcsSetupIpRouterVrrpVrrpListEntryRouterId' => '1.3.6.1.4.1.2356.11.2.8.21.2.1.1',
  'lcsSetupIpRouterVrrpVrrpListEntryVirtAddress' => '1.3.6.1.4.1.2356.11.2.8.21.2.1.2',
  'lcsSetupIpRouterVrrpVrrpListEntryPrio' => '1.3.6.1.4.1.2356.11.2.8.21.2.1.3',
  'lcsSetupIpRouterVrrpVrrpListEntryBPrio' => '1.3.6.1.4.1.2356.11.2.8.21.2.1.4',
  'lcsSetupIpRouterVrrpVrrpListEntryPeer' => '1.3.6.1.4.1.2356.11.2.8.21.2.1.5',
  'lcsSetupIpRouterVrrpVrrpListEntryComment' => '1.3.6.1.4.1.2356.11.2.8.21.2.1.6',
  'lcsSetupIpRouterVrrpReconnectDelay' => '1.3.6.1.4.1.2356.11.2.8.21.3',
  'lcsSetupIpRouterVrrpAdvertIntervall' => '1.3.6.1.4.1.2356.11.2.8.21.4',
  'lcsSetupIpRouterVrrpInternalServices' => '1.3.6.1.4.1.2356.11.2.8.21.5',
  'lcsSetupIpRouterVrrpInternalServicesDefinition' => 'LCOS-MIB::lcsSetupIpRouterVrrpInternalServices',
  'lcsSetupIpRouterWanTagCreation' => '1.3.6.1.4.1.2356.11.2.8.22',
  'lcsSetupIpRouterWanTagCreationDefinition' => 'LCOS-MIB::lcsSetupIpRouterWanTagCreation',
  'lcsSetupIpRouterTagTableTable' => '1.3.6.1.4.1.2356.11.2.8.23',
  'lcsSetupIpRouterTagTableEntry' => '1.3.6.1.4.1.2356.11.2.8.23.1',
  'lcsSetupIpRouterTagTableEntryPeer' => '1.3.6.1.4.1.2356.11.2.8.23.1.1',
  'lcsSetupIpRouterTagTableEntryRtgTag' => '1.3.6.1.4.1.2356.11.2.8.23.1.2',
  'lcsSetupIpRouterTagTableEntryStartWanPool' => '1.3.6.1.4.1.2356.11.2.8.23.1.3',
  'lcsSetupIpRouterTagTableEntryEndWanPool' => '1.3.6.1.4.1.2356.11.2.8.23.1.4',
  'lcsSetupSnmp' => '1.3.6.1.4.1.2356.11.2.9',
  'lcsSetupSnmpSendTraps' => '1.3.6.1.4.1.2356.11.2.9.1',
  'lcsSetupSnmpSendTrapsDefinition' => 'LCOS-MIB::lcsSetupSnmpSendTraps',
  'lcsSetupSnmpIpTrapsTable' => '1.3.6.1.4.1.2356.11.2.9.2',
  'lcsSetupSnmpIpTrapsEntry' => '1.3.6.1.4.1.2356.11.2.9.2.1',
  'lcsSetupSnmpIpTrapsEntryTrapIp' => '1.3.6.1.4.1.2356.11.2.9.2.1.1',
  'lcsSetupSnmpIpTrapsEntryLoopbackAddr' => '1.3.6.1.4.1.2356.11.2.9.2.1.3',
  'lcsSetupSnmpIpTrapsEntryVersion' => '1.3.6.1.4.1.2356.11.2.9.2.1.4',
  'lcsSetupSnmpIpTrapsEntryVersionDefinition' => 'LCOS-MIB::lcsSetupSnmpIpTrapsEntryVersion',
  'lcsSetupSnmpAdministrator' => '1.3.6.1.4.1.2356.11.2.9.3',
  'lcsSetupSnmpLocation' => '1.3.6.1.4.1.2356.11.2.9.4',
  'lcsSetupSnmpRegisterMonitor' => '1.3.6.1.4.1.2356.11.2.9.5',
  'lcsSetupSnmpDeleteMonitor' => '1.3.6.1.4.1.2356.11.2.9.6',
  'lcsSetupSnmpMonitorTableTable' => '1.3.6.1.4.1.2356.11.2.9.7',
  'lcsSetupSnmpMonitorTableEntry' => '1.3.6.1.4.1.2356.11.2.9.7.1',
  'lcsSetupSnmpMonitorTableEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.9.7.1.1',
  'lcsSetupSnmpMonitorTableEntryPort' => '1.3.6.1.4.1.2356.11.2.9.7.1.2',
  'lcsSetupSnmpMonitorTableEntryTimeout' => '1.3.6.1.4.1.2356.11.2.9.7.1.3',
  'lcsSetupSnmpMonitorTableEntryMacAddress' => '1.3.6.1.4.1.2356.11.2.9.7.1.4',
  'lcsSetupSnmpMonitorTableEntryPeer' => '1.3.6.1.4.1.2356.11.2.9.7.1.5',
  'lcsSetupSnmpMonitorTableEntryLoopbackAddr' => '1.3.6.1.4.1.2356.11.2.9.7.1.6',
  'lcsSetupSnmpMonitorTableEntryVlanId' => '1.3.6.1.4.1.2356.11.2.9.7.1.7',
  'lcsSetupSnmpMonitorTableEntryLanIfc' => '1.3.6.1.4.1.2356.11.2.9.7.1.8',
  'lcsSetupSnmpMonitorTableEntryEthernetPort' => '1.3.6.1.4.1.2356.11.2.9.7.1.9',
  'lcsSetupSnmpPasswordRequiredForSnmpReadAccess' => '1.3.6.1.4.1.2356.11.2.9.10',
  'lcsSetupSnmpPasswordRequiredForSnmpReadAccessDefinition' => 'LCOS-MIB::lcsSetupSnmpPasswordRequiredForSnmpReadAccess',
  'lcsSetupSnmpComment1' => '1.3.6.1.4.1.2356.11.2.9.11',
  'lcsSetupSnmpComment2' => '1.3.6.1.4.1.2356.11.2.9.12',
  'lcsSetupSnmpComment3' => '1.3.6.1.4.1.2356.11.2.9.13',
  'lcsSetupSnmpComment4' => '1.3.6.1.4.1.2356.11.2.9.14',
  'lcsSetupSnmpReadOnlyCommunity' => '1.3.6.1.4.1.2356.11.2.9.15',
  'lcsSetupSnmpComment5' => '1.3.6.1.4.1.2356.11.2.9.16',
  'lcsSetupSnmpComment6' => '1.3.6.1.4.1.2356.11.2.9.17',
  'lcsSetupSnmpComment7' => '1.3.6.1.4.1.2356.11.2.9.18',
  'lcsSetupSnmpComment8' => '1.3.6.1.4.1.2356.11.2.9.19',
  'lcsSetupSnmpFullHostMib' => '1.3.6.1.4.1.2356.11.2.9.20',
  'lcsSetupSnmpFullHostMibDefinition' => 'LCOS-MIB::lcsSetupSnmpFullHostMib',
  'lcsSetupDhcp' => '1.3.6.1.4.1.2356.11.2.10',
  'lcsSetupDhcpMaxLeaseTimeMinutes' => '1.3.6.1.4.1.2356.11.2.10.6',
  'lcsSetupDhcpDefaultLeaseTimeMinutes' => '1.3.6.1.4.1.2356.11.2.10.7',
  'lcsSetupDhcpDhcpTableTable' => '1.3.6.1.4.1.2356.11.2.10.8',
  'lcsSetupDhcpDhcpTableEntry' => '1.3.6.1.4.1.2356.11.2.10.8.1',
  'lcsSetupDhcpDhcpTableEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.10.8.1.1',
  'lcsSetupDhcpDhcpTableEntryMacAddress' => '1.3.6.1.4.1.2356.11.2.10.8.1.2',
  'lcsSetupDhcpDhcpTableEntryTimeout' => '1.3.6.1.4.1.2356.11.2.10.8.1.3',
  'lcsSetupDhcpDhcpTableEntryHostname' => '1.3.6.1.4.1.2356.11.2.10.8.1.4',
  'lcsSetupDhcpDhcpTableEntryType' => '1.3.6.1.4.1.2356.11.2.10.8.1.5',
  'lcsSetupDhcpDhcpTableEntryEthernetPort' => '1.3.6.1.4.1.2356.11.2.10.8.1.7',
  'lcsSetupDhcpDhcpTableEntryEthernetPortDefinition' => 'LCOS-MIB::lcsSetupDhcpDhcpTableEntryEthernetPort',
  'lcsSetupDhcpDhcpTableEntryVlanId' => '1.3.6.1.4.1.2356.11.2.10.8.1.8',
  'lcsSetupDhcpDhcpTableEntryNetworkName' => '1.3.6.1.4.1.2356.11.2.10.8.1.9',
  'lcsSetupDhcpDhcpTableEntryLanIfc' => '1.3.6.1.4.1.2356.11.2.10.8.1.10',
  'lcsSetupDhcpDhcpTableEntryLanIfcDefinition' => 'LCOS-MIB::lcsSetupDhcpDhcpTableEntryLanIfc',
  'lcsSetupDhcpHostsTable' => '1.3.6.1.4.1.2356.11.2.10.9',
  'lcsSetupDhcpHostsEntry' => '1.3.6.1.4.1.2356.11.2.10.9.1',
  'lcsSetupDhcpHostsEntryMacAddress' => '1.3.6.1.4.1.2356.11.2.10.9.1.1',
  'lcsSetupDhcpHostsEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.10.9.1.2',
  'lcsSetupDhcpHostsEntryHostname' => '1.3.6.1.4.1.2356.11.2.10.9.1.3',
  'lcsSetupDhcpHostsEntryImageAlias' => '1.3.6.1.4.1.2356.11.2.10.9.1.4',
  'lcsSetupDhcpHostsEntryNetworkName' => '1.3.6.1.4.1.2356.11.2.10.9.1.5',
  'lcsSetupDhcpAliasListTable' => '1.3.6.1.4.1.2356.11.2.10.10',
  'lcsSetupDhcpAliasListEntry' => '1.3.6.1.4.1.2356.11.2.10.10.1',
  'lcsSetupDhcpAliasListEntryImageAlias' => '1.3.6.1.4.1.2356.11.2.10.10.1.1',
  'lcsSetupDhcpAliasListEntryImageFile' => '1.3.6.1.4.1.2356.11.2.10.10.1.2',
  'lcsSetupDhcpAliasListEntryImageServer' => '1.3.6.1.4.1.2356.11.2.10.10.1.3',
  'lcsSetupDhcpPortsTable' => '1.3.6.1.4.1.2356.11.2.10.18',
  'lcsSetupDhcpPortsEntry' => '1.3.6.1.4.1.2356.11.2.10.18.1',
  'lcsSetupDhcpPortsEntryPort' => '1.3.6.1.4.1.2356.11.2.10.18.1.2',
  'lcsSetupDhcpPortsEntryEnableDhcp' => '1.3.6.1.4.1.2356.11.2.10.18.1.3',
  'lcsSetupDhcpPortsEntryEnableDhcpDefinition' => 'LCOS-MIB::lcsSetupDhcpPortsEntryEnableDhcp',
  'lcsSetupDhcpUserClassIdentifer' => '1.3.6.1.4.1.2356.11.2.10.19',
  'lcsSetupDhcpNetworkListTable' => '1.3.6.1.4.1.2356.11.2.10.20',
  'lcsSetupDhcpNetworkListEntry' => '1.3.6.1.4.1.2356.11.2.10.20.1',
  'lcsSetupDhcpNetworkListEntryNetworkName' => '1.3.6.1.4.1.2356.11.2.10.20.1.1',
  'lcsSetupDhcpNetworkListEntryStartAddressPool' => '1.3.6.1.4.1.2356.11.2.10.20.1.2',
  'lcsSetupDhcpNetworkListEntryEndAddressPool' => '1.3.6.1.4.1.2356.11.2.10.20.1.3',
  'lcsSetupDhcpNetworkListEntryNetmask' => '1.3.6.1.4.1.2356.11.2.10.20.1.4',
  'lcsSetupDhcpNetworkListEntryBroadcastAddress' => '1.3.6.1.4.1.2356.11.2.10.20.1.5',
  'lcsSetupDhcpNetworkListEntryGatewayAddress' => '1.3.6.1.4.1.2356.11.2.10.20.1.6',
  'lcsSetupDhcpNetworkListEntryDnsDefault' => '1.3.6.1.4.1.2356.11.2.10.20.1.7',
  'lcsSetupDhcpNetworkListEntryDnsBackup' => '1.3.6.1.4.1.2356.11.2.10.20.1.8',
  'lcsSetupDhcpNetworkListEntryNbnsDefault' => '1.3.6.1.4.1.2356.11.2.10.20.1.9',
  'lcsSetupDhcpNetworkListEntryNbnsBackup' => '1.3.6.1.4.1.2356.11.2.10.20.1.10',
  'lcsSetupDhcpNetworkListEntryOperating' => '1.3.6.1.4.1.2356.11.2.10.20.1.11',
  'lcsSetupDhcpNetworkListEntryOperatingDefinition' => 'LCOS-MIB::lcsSetupDhcpNetworkListEntryOperating',
  'lcsSetupDhcpNetworkListEntryBroadcastBit' => '1.3.6.1.4.1.2356.11.2.10.20.1.12',
  'lcsSetupDhcpNetworkListEntryBroadcastBitDefinition' => 'LCOS-MIB::lcsSetupDhcpNetworkListEntryBroadcastBit',
  'lcsSetupDhcpNetworkListEntryMasterServer' => '1.3.6.1.4.1.2356.11.2.10.20.1.13',
  'lcsSetupDhcpNetworkListEntryCache' => '1.3.6.1.4.1.2356.11.2.10.20.1.14',
  'lcsSetupDhcpNetworkListEntryCacheDefinition' => 'LCOS-MIB::lcsSetupDhcpNetworkListEntryCache',
  'lcsSetupDhcpNetworkListEntryAdaption' => '1.3.6.1.4.1.2356.11.2.10.20.1.15',
  'lcsSetupDhcpNetworkListEntryAdaptionDefinition' => 'LCOS-MIB::lcsSetupDhcpNetworkListEntryAdaption',
  'lcsSetupDhcpNetworkListEntryCluster' => '1.3.6.1.4.1.2356.11.2.10.20.1.16',
  'lcsSetupDhcpNetworkListEntryClusterDefinition' => 'LCOS-MIB::lcsSetupDhcpNetworkListEntryCluster',
  'lcsSetupDhcpNetworkListEntry2ndMasterServer' => '1.3.6.1.4.1.2356.11.2.10.20.1.17',
  'lcsSetupDhcpNetworkListEntry3rdMasterServer' => '1.3.6.1.4.1.2356.11.2.10.20.1.18',
  'lcsSetupDhcpNetworkListEntry4thMasterServer' => '1.3.6.1.4.1.2356.11.2.10.20.1.19',
  'lcsSetupDhcpAdditionalOptionsTable' => '1.3.6.1.4.1.2356.11.2.10.21',
  'lcsSetupDhcpAdditionalOptionsEntry' => '1.3.6.1.4.1.2356.11.2.10.21.1',
  'lcsSetupDhcpAdditionalOptionsEntryOptionNumber' => '1.3.6.1.4.1.2356.11.2.10.21.1.1',
  'lcsSetupDhcpAdditionalOptionsEntryNetworkName' => '1.3.6.1.4.1.2356.11.2.10.21.1.2',
  'lcsSetupDhcpAdditionalOptionsEntryOptionValue' => '1.3.6.1.4.1.2356.11.2.10.21.1.3',
  'lcsSetupDhcpAdditionalOptionsEntryOptionType' => '1.3.6.1.4.1.2356.11.2.10.21.1.4',
  'lcsSetupDhcpAdditionalOptionsEntryOptionTypeDefinition' => 'LCOS-MIB::lcsSetupDhcpAdditionalOptionsEntryOptionType',
  'lcsSetupDhcpVendorClassIdentifer' => '1.3.6.1.4.1.2356.11.2.10.22',
  'lcsSetupConfig' => '1.3.6.1.4.1.2356.11.2.11',
  'lcsSetupConfigLan' => '1.3.6.1.4.1.2356.11.2.11.1',
  'lcsSetupConfigWan' => '1.3.6.1.4.1.2356.11.2.11.2',
  'lcsSetupConfigPasswordRequiredForSnmpReadAccess' => '1.3.6.1.4.1.2356.11.2.11.3',
  'lcsSetupConfigPasswordRequiredForSnmpReadAccessDefinition' => 'LCOS-MIB::lcsSetupConfigPasswordRequiredForSnmpReadAccess',
  'lcsSetupConfigMaximumConnections' => '1.3.6.1.4.1.2356.11.2.11.4',
  'lcsSetupConfigConfigAgingMinutes' => '1.3.6.1.4.1.2356.11.2.11.5',
  'lcsSetupConfigLanguage' => '1.3.6.1.4.1.2356.11.2.11.6',
  'lcsSetupConfigLanguageDefinition' => 'LCOS-MIB::lcsSetupConfigLanguage',
  'lcsSetupConfigLoginErrors' => '1.3.6.1.4.1.2356.11.2.11.7',
  'lcsSetupConfigLockMinutes' => '1.3.6.1.4.1.2356.11.2.11.8',
  'lcsSetupConfigAdminEazMsn' => '1.3.6.1.4.1.2356.11.2.11.9',
  'lcsSetupConfigDisplayContrast' => '1.3.6.1.4.1.2356.11.2.11.10',
  'lcsSetupConfigDisplayContrastDefinition' => 'LCOS-MIB::lcsSetupConfigDisplayContrast',
  'lcsSetupConfigWlanConfig' => '1.3.6.1.4.1.2356.11.2.11.11',
  'lcsSetupConfigWlanAuthenticationPagesOnly' => '1.3.6.1.4.1.2356.11.2.11.12',
  'lcsSetupConfigWlanAuthenticationPagesOnlyDefinition' => 'LCOS-MIB::lcsSetupConfigWlanAuthenticationPagesOnly',
  'lcsSetupConfigTftpClient' => '1.3.6.1.4.1.2356.11.2.11.13',
  'lcsSetupConfigTftpClientConfigAddress' => '1.3.6.1.4.1.2356.11.2.11.13.1',
  'lcsSetupConfigTftpClientConfigFilename' => '1.3.6.1.4.1.2356.11.2.11.13.2',
  'lcsSetupConfigTftpClientFirmwareAddress' => '1.3.6.1.4.1.2356.11.2.11.13.3',
  'lcsSetupConfigTftpClientFirmwareFilename' => '1.3.6.1.4.1.2356.11.2.11.13.4',
  'lcsSetupConfigTftpClientBytesPerHashmark' => '1.3.6.1.4.1.2356.11.2.11.13.5',
  'lcsSetupConfigTftpClientScriptAddress' => '1.3.6.1.4.1.2356.11.2.11.13.6',
  'lcsSetupConfigTftpClientScriptFilename' => '1.3.6.1.4.1.2356.11.2.11.13.7',
  'lcsSetupConfigAccessTableTable' => '1.3.6.1.4.1.2356.11.2.11.15',
  'lcsSetupConfigAccessTableEntry' => '1.3.6.1.4.1.2356.11.2.11.15.1',
  'lcsSetupConfigAccessTableEntryIfc' => '1.3.6.1.4.1.2356.11.2.11.15.1.1',
  'lcsSetupConfigAccessTableEntryIfcDefinition' => 'LCOS-MIB::lcsSetupConfigAccessTableEntryIfc',
  'lcsSetupConfigAccessTableEntryTelnet' => '1.3.6.1.4.1.2356.11.2.11.15.1.2',
  'lcsSetupConfigAccessTableEntryTelnetDefinition' => 'LCOS-MIB::lcsSetupConfigAccessTableEntryTelnet',
  'lcsSetupConfigAccessTableEntryTftp' => '1.3.6.1.4.1.2356.11.2.11.15.1.3',
  'lcsSetupConfigAccessTableEntryTftpDefinition' => 'LCOS-MIB::lcsSetupConfigAccessTableEntryTftp',
  'lcsSetupConfigAccessTableEntryHttp' => '1.3.6.1.4.1.2356.11.2.11.15.1.4',
  'lcsSetupConfigAccessTableEntryHttpDefinition' => 'LCOS-MIB::lcsSetupConfigAccessTableEntryHttp',
  'lcsSetupConfigAccessTableEntrySnmp' => '1.3.6.1.4.1.2356.11.2.11.15.1.5',
  'lcsSetupConfigAccessTableEntrySnmpDefinition' => 'LCOS-MIB::lcsSetupConfigAccessTableEntrySnmp',
  'lcsSetupConfigAccessTableEntryHttps' => '1.3.6.1.4.1.2356.11.2.11.15.1.6',
  'lcsSetupConfigAccessTableEntryHttpsDefinition' => 'LCOS-MIB::lcsSetupConfigAccessTableEntryHttps',
  'lcsSetupConfigAccessTableEntryTelnetSsl' => '1.3.6.1.4.1.2356.11.2.11.15.1.7',
  'lcsSetupConfigAccessTableEntryTelnetSslDefinition' => 'LCOS-MIB::lcsSetupConfigAccessTableEntryTelnetSsl',
  'lcsSetupConfigAccessTableEntrySsh' => '1.3.6.1.4.1.2356.11.2.11.15.1.8',
  'lcsSetupConfigAccessTableEntrySshDefinition' => 'LCOS-MIB::lcsSetupConfigAccessTableEntrySsh',
  'lcsSetupConfigScreenHeight' => '1.3.6.1.4.1.2356.11.2.11.16',
  'lcsSetupConfigPrompt' => '1.3.6.1.4.1.2356.11.2.11.17',
  'lcsSetupConfigLedTest' => '1.3.6.1.4.1.2356.11.2.11.18',
  'lcsSetupConfigLedTestDefinition' => 'LCOS-MIB::lcsSetupConfigLedTest',
  'lcsSetupConfigCronTableTable' => '1.3.6.1.4.1.2356.11.2.11.20',
  'lcsSetupConfigCronTableEntry' => '1.3.6.1.4.1.2356.11.2.11.20.1',
  'lcsSetupConfigCronTableEntryIndex' => '1.3.6.1.4.1.2356.11.2.11.20.1.1',
  'lcsSetupConfigCronTableEntryMinute' => '1.3.6.1.4.1.2356.11.2.11.20.1.2',
  'lcsSetupConfigCronTableEntryHour' => '1.3.6.1.4.1.2356.11.2.11.20.1.3',
  'lcsSetupConfigCronTableEntryDayofweek' => '1.3.6.1.4.1.2356.11.2.11.20.1.4',
  'lcsSetupConfigCronTableEntryDay' => '1.3.6.1.4.1.2356.11.2.11.20.1.5',
  'lcsSetupConfigCronTableEntryMonth' => '1.3.6.1.4.1.2356.11.2.11.20.1.6',
  'lcsSetupConfigCronTableEntryCommand' => '1.3.6.1.4.1.2356.11.2.11.20.1.7',
  'lcsSetupConfigCronTableEntryBase' => '1.3.6.1.4.1.2356.11.2.11.20.1.8',
  'lcsSetupConfigCronTableEntryBaseDefinition' => 'LCOS-MIB::lcsSetupConfigCronTableEntryBase',
  'lcsSetupConfigCronTableEntryActive' => '1.3.6.1.4.1.2356.11.2.11.20.1.9',
  'lcsSetupConfigCronTableEntryActiveDefinition' => 'LCOS-MIB::lcsSetupConfigCronTableEntryActive',
  'lcsSetupConfigCronTableEntryOwner' => '1.3.6.1.4.1.2356.11.2.11.20.1.10',
  'lcsSetupConfigCronTableEntryVariation' => '1.3.6.1.4.1.2356.11.2.11.20.1.11',
  'lcsSetupConfigAdminsTable' => '1.3.6.1.4.1.2356.11.2.11.21',
  'lcsSetupConfigAdminsEntry' => '1.3.6.1.4.1.2356.11.2.11.21.1',
  'lcsSetupConfigAdminsEntryAdministrator' => '1.3.6.1.4.1.2356.11.2.11.21.1.1',
  'lcsSetupConfigAdminsEntryPassword' => '1.3.6.1.4.1.2356.11.2.11.21.1.2',
  'lcsSetupConfigAdminsEntryFunctionRights' => '1.3.6.1.4.1.2356.11.2.11.21.1.3',
  'lcsSetupConfigAdminsEntryActive' => '1.3.6.1.4.1.2356.11.2.11.21.1.4',
  'lcsSetupConfigAdminsEntryActiveDefinition' => 'LCOS-MIB::lcsSetupConfigAdminsEntryActive',
  'lcsSetupConfigAdminsEntryAccessRights' => '1.3.6.1.4.1.2356.11.2.11.21.1.5',
  'lcsSetupConfigAdminsEntryAccessRightsDefinition' => 'LCOS-MIB::lcsSetupConfigAdminsEntryAccessRights',
  'lcsSetupConfigTelnetPort' => '1.3.6.1.4.1.2356.11.2.11.23',
  'lcsSetupConfigTelnetSslPort' => '1.3.6.1.4.1.2356.11.2.11.24',
  'lcsSetupConfigSshPort' => '1.3.6.1.4.1.2356.11.2.11.25',
  'lcsSetupConfigSshAuthenticationMethodsTable' => '1.3.6.1.4.1.2356.11.2.11.26',
  'lcsSetupConfigSshAuthenticationMethodsEntry' => '1.3.6.1.4.1.2356.11.2.11.26.1',
  'lcsSetupConfigSshAuthenticationMethodsEntryIfc' => '1.3.6.1.4.1.2356.11.2.11.26.1.1',
  'lcsSetupConfigSshAuthenticationMethodsEntryIfcDefinition' => 'LCOS-MIB::lcsSetupConfigSshAuthenticationMethodsEntryIfc',
  'lcsSetupConfigSshAuthenticationMethodsEntryMethods' => '1.3.6.1.4.1.2356.11.2.11.26.1.2',
  'lcsSetupConfigSshAuthenticationMethodsEntryMethodsDefinition' => 'LCOS-MIB::lcsSetupConfigSshAuthenticationMethodsEntryMethods',
  'lcsSetupConfigPredefAdminsTable' => '1.3.6.1.4.1.2356.11.2.11.27',
  'lcsSetupConfigPredefAdminsEntry' => '1.3.6.1.4.1.2356.11.2.11.27.1',
  'lcsSetupConfigPredefAdminsEntryName' => '1.3.6.1.4.1.2356.11.2.11.27.1.1',
  'lcsSetupConfigUpdateClient' => '1.3.6.1.4.1.2356.11.2.11.30',
  'lcsSetupConfigUpdateClientOperating' => '1.3.6.1.4.1.2356.11.2.11.30.1',
  'lcsSetupConfigUpdateClientOperatingDefinition' => 'LCOS-MIB::lcsSetupConfigUpdateClientOperating',
  'lcsSetupConfigUpdateClientServerName' => '1.3.6.1.4.1.2356.11.2.11.30.2',
  'lcsSetupConfigUpdateClientServerPort' => '1.3.6.1.4.1.2356.11.2.11.30.3',
  'lcsSetupConfigUpdateClientResponseTimeout' => '1.3.6.1.4.1.2356.11.2.11.30.4',
  'lcsSetupConfigUpdateClientRetryFailure' => '1.3.6.1.4.1.2356.11.2.11.30.5',
  'lcsSetupConfigUpdateClientRetryOk' => '1.3.6.1.4.1.2356.11.2.11.30.6',
  'lcsSetupConfigUpdateClientLastFirmwareUpdate' => '1.3.6.1.4.1.2356.11.2.11.30.7',
  'lcsSetupConfigUpdateClientLastConfigUpdate' => '1.3.6.1.4.1.2356.11.2.11.30.8',
  'lcsSetupConfigAntiTheftProtection' => '1.3.6.1.4.1.2356.11.2.11.31',
  'lcsSetupConfigAntiTheftProtectionEnabled' => '1.3.6.1.4.1.2356.11.2.11.31.1',
  'lcsSetupConfigAntiTheftProtectionEnabledDefinition' => 'LCOS-MIB::lcsSetupConfigAntiTheftProtectionEnabled',
  'lcsSetupConfigAntiTheftProtectionCalledNumber' => '1.3.6.1.4.1.2356.11.2.11.31.2',
  'lcsSetupConfigAntiTheftProtectionOutgoingCallingNumber' => '1.3.6.1.4.1.2356.11.2.11.31.3',
  'lcsSetupConfigAntiTheftProtectionCheckedCallingNumber' => '1.3.6.1.4.1.2356.11.2.11.31.4',
  'lcsSetupConfigAntiTheftProtectionMethod' => '1.3.6.1.4.1.2356.11.2.11.31.6',
  'lcsSetupConfigAntiTheftProtectionMethodDefinition' => 'LCOS-MIB::lcsSetupConfigAntiTheftProtectionMethod',
  'lcsSetupConfigAntiTheftProtectionIsdnIfc' => '1.3.6.1.4.1.2356.11.2.11.31.7',
  'lcsSetupConfigAntiTheftProtectionIsdnIfcDefinition' => 'LCOS-MIB::lcsSetupConfigAntiTheftProtectionIsdnIfc',
  'lcsSetupConfigAntiTheftProtectionDeviationM' => '1.3.6.1.4.1.2356.11.2.11.31.8',
  'lcsSetupConfigAntiTheftProtectionLongitudeDeg' => '1.3.6.1.4.1.2356.11.2.11.31.9',
  'lcsSetupConfigAntiTheftProtectionLatitudeDeg' => '1.3.6.1.4.1.2356.11.2.11.31.10',
  'lcsSetupConfigAntiTheftProtectionGetGpsPosition' => '1.3.6.1.4.1.2356.11.2.11.31.12',
  'lcsSetupConfigAntiTheftProtectionGetGpsPositionDefinition' => 'LCOS-MIB::lcsSetupConfigAntiTheftProtectionGetGpsPosition',
  'lcsSetupConfigResetButton' => '1.3.6.1.4.1.2356.11.2.11.32',
  'lcsSetupConfigResetButtonDefinition' => 'LCOS-MIB::lcsSetupConfigResetButton',
  'lcsSetupConfigOutbandAgingMinutes' => '1.3.6.1.4.1.2356.11.2.11.33',
  'lcsSetupConfigMonitortrace' => '1.3.6.1.4.1.2356.11.2.11.35',
  'lcsSetupConfigMonitortraceTracemask1' => '1.3.6.1.4.1.2356.11.2.11.35.1',
  'lcsSetupConfigMonitortraceTracemask2' => '1.3.6.1.4.1.2356.11.2.11.35.2',
  'lcsSetupConfigLicenseExpiryEmail' => '1.3.6.1.4.1.2356.11.2.11.39',
  'lcsSetupConfigCrashMessage' => '1.3.6.1.4.1.2356.11.2.11.40',
  'lcsSetupConfigAdminGender' => '1.3.6.1.4.1.2356.11.2.11.41',
  'lcsSetupConfigAdminGenderDefinition' => 'LCOS-MIB::lcsSetupConfigAdminGender',
  'lcsSetupConfigAssertAction' => '1.3.6.1.4.1.2356.11.2.11.42',
  'lcsSetupConfigAssertActionDefinition' => 'LCOS-MIB::lcsSetupConfigAssertAction',
  'lcsSetupConfigFunctionKeysTable' => '1.3.6.1.4.1.2356.11.2.11.43',
  'lcsSetupConfigFunctionKeysEntry' => '1.3.6.1.4.1.2356.11.2.11.43.1',
  'lcsSetupConfigFunctionKeysEntryKey' => '1.3.6.1.4.1.2356.11.2.11.43.1.1',
  'lcsSetupConfigFunctionKeysEntryKeyDefinition' => 'LCOS-MIB::lcsSetupConfigFunctionKeysEntryKey',
  'lcsSetupConfigFunctionKeysEntryMapping' => '1.3.6.1.4.1.2356.11.2.11.43.1.2',
  'lcsSetupConfigConfigDate' => '1.3.6.1.4.1.2356.11.2.11.44',
  'lcsSetupConfigConfigDateNew' => '1.3.6.1.4.1.2356.11.2.11.45',
  'lcsSetupConfigLl2m' => '1.3.6.1.4.1.2356.11.2.11.50',
  'lcsSetupConfigLl2mOperating' => '1.3.6.1.4.1.2356.11.2.11.50.1',
  'lcsSetupConfigLl2mOperatingDefinition' => 'LCOS-MIB::lcsSetupConfigLl2mOperating',
  'lcsSetupConfigLl2mTimeLimit' => '1.3.6.1.4.1.2356.11.2.11.50.2',
  'lcsSetupConfigCpuLoadInterval' => '1.3.6.1.4.1.2356.11.2.11.60',
  'lcsSetupConfigCpuLoadIntervalDefinition' => 'LCOS-MIB::lcsSetupConfigCpuLoadInterval',
  'lcsSetupWlan' => '1.3.6.1.4.1.2356.11.2.12',
  'lcsSetupWlanSpareHeap' => '1.3.6.1.4.1.2356.11.2.12.3',
  'lcsSetupWlanAccessListTable' => '1.3.6.1.4.1.2356.11.2.12.7',
  'lcsSetupWlanAccessListEntry' => '1.3.6.1.4.1.2356.11.2.12.7.1',
  'lcsSetupWlanAccessListEntryMacAddress' => '1.3.6.1.4.1.2356.11.2.12.7.1.1',
  'lcsSetupWlanAccessListEntryName' => '1.3.6.1.4.1.2356.11.2.12.7.1.2',
  'lcsSetupWlanAccessListEntryComment' => '1.3.6.1.4.1.2356.11.2.12.7.1.3',
  'lcsSetupWlanAccessListEntryWpaPassphrase' => '1.3.6.1.4.1.2356.11.2.12.7.1.4',
  'lcsSetupWlanAccessListEntryTxLimit' => '1.3.6.1.4.1.2356.11.2.12.7.1.5',
  'lcsSetupWlanAccessListEntryRxLimit' => '1.3.6.1.4.1.2356.11.2.12.7.1.6',
  'lcsSetupWlanAccessListEntryVlanId' => '1.3.6.1.4.1.2356.11.2.12.7.1.7',
  'lcsSetupWlanAccessMode' => '1.3.6.1.4.1.2356.11.2.12.8',
  'lcsSetupWlanAccessModeDefinition' => 'LCOS-MIB::lcsSetupWlanAccessMode',
  'lcsSetupWlanIappProtocol' => '1.3.6.1.4.1.2356.11.2.12.12',
  'lcsSetupWlanIappProtocolDefinition' => 'LCOS-MIB::lcsSetupWlanIappProtocol',
  'lcsSetupWlanIappAnnounceInterval' => '1.3.6.1.4.1.2356.11.2.12.13',
  'lcsSetupWlanIappHandoverTimeout' => '1.3.6.1.4.1.2356.11.2.12.14',
  'lcsSetupWlanInterSsidTraffic' => '1.3.6.1.4.1.2356.11.2.12.26',
  'lcsSetupWlanInterSsidTrafficDefinition' => 'LCOS-MIB::lcsSetupWlanInterSsidTraffic',
  'lcsSetupWlanSuperviseStations' => '1.3.6.1.4.1.2356.11.2.12.27',
  'lcsSetupWlanSuperviseStationsDefinition' => 'LCOS-MIB::lcsSetupWlanSuperviseStations',
  'lcsSetupWlanRadiusAccessCheck' => '1.3.6.1.4.1.2356.11.2.12.29',
  'lcsSetupWlanRadiusAccessCheckServerAddress' => '1.3.6.1.4.1.2356.11.2.12.29.1',
  'lcsSetupWlanRadiusAccessCheckAuthPort' => '1.3.6.1.4.1.2356.11.2.12.29.2',
  'lcsSetupWlanRadiusAccessCheckSecret' => '1.3.6.1.4.1.2356.11.2.12.29.3',
  'lcsSetupWlanRadiusAccessCheckBackupServerIpAddress' => '1.3.6.1.4.1.2356.11.2.12.29.4',
  'lcsSetupWlanRadiusAccessCheckBackupAuthPort' => '1.3.6.1.4.1.2356.11.2.12.29.5',
  'lcsSetupWlanRadiusAccessCheckBackupSecret' => '1.3.6.1.4.1.2356.11.2.12.29.6',
  'lcsSetupWlanRadiusAccessCheckResponseLifetime' => '1.3.6.1.4.1.2356.11.2.12.29.7',
  'lcsSetupWlanRadiusAccessCheckPasswordSource' => '1.3.6.1.4.1.2356.11.2.12.29.8',
  'lcsSetupWlanRadiusAccessCheckPasswordSourceDefinition' => 'LCOS-MIB::lcsSetupWlanRadiusAccessCheckPasswordSource',
  'lcsSetupWlanRadiusAccessCheckRecheckCycle' => '1.3.6.1.4.1.2356.11.2.12.29.9',
  'lcsSetupWlanRadiusAccessCheckProvideServerDatabase' => '1.3.6.1.4.1.2356.11.2.12.29.10',
  'lcsSetupWlanRadiusAccessCheckProvideServerDatabaseDefinition' => 'LCOS-MIB::lcsSetupWlanRadiusAccessCheckProvideServerDatabase',
  'lcsSetupWlanRadiusAccessCheckLoopbackAddress' => '1.3.6.1.4.1.2356.11.2.12.29.11',
  'lcsSetupWlanRadiusAccessCheckBackupLoopbackAddress' => '1.3.6.1.4.1.2356.11.2.12.29.12',
  'lcsSetupWlanRadiusAccessCheckProtocol' => '1.3.6.1.4.1.2356.11.2.12.29.13',
  'lcsSetupWlanRadiusAccessCheckProtocolDefinition' => 'LCOS-MIB::lcsSetupWlanRadiusAccessCheckProtocol',
  'lcsSetupWlanRadiusAccessCheckBackupProtocol' => '1.3.6.1.4.1.2356.11.2.12.29.14',
  'lcsSetupWlanRadiusAccessCheckBackupProtocolDefinition' => 'LCOS-MIB::lcsSetupWlanRadiusAccessCheckBackupProtocol',
  'lcsSetupWlanCountry' => '1.3.6.1.4.1.2356.11.2.12.36',
  'lcsSetupWlanCountryDefinition' => 'LCOS-MIB::lcsSetupWlanCountry',
  'lcsSetupWlanArpHandling' => '1.3.6.1.4.1.2356.11.2.12.38',
  'lcsSetupWlanArpHandlingDefinition' => 'LCOS-MIB::lcsSetupWlanArpHandling',
  'lcsSetupWlanMailAddress' => '1.3.6.1.4.1.2356.11.2.12.41',
  'lcsSetupWlanAllowIllegalAssociationWithoutAuthentication' => '1.3.6.1.4.1.2356.11.2.12.44',
  'lcsSetupWlanAllowIllegalAssociationWithoutAuthenticationDefinition' => 'LCOS-MIB::lcsSetupWlanAllowIllegalAssociationWithoutAuthentication',
  'lcsSetupWlanRadiusAccounting' => '1.3.6.1.4.1.2356.11.2.12.45',
  'lcsSetupWlanRadiusAccountingServerAddress' => '1.3.6.1.4.1.2356.11.2.12.45.1',
  'lcsSetupWlanRadiusAccountingAccntPort' => '1.3.6.1.4.1.2356.11.2.12.45.2',
  'lcsSetupWlanRadiusAccountingSecret' => '1.3.6.1.4.1.2356.11.2.12.45.3',
  'lcsSetupWlanRadiusAccountingBackupServerIpAddress' => '1.3.6.1.4.1.2356.11.2.12.45.4',
  'lcsSetupWlanRadiusAccountingBackupAccntPort' => '1.3.6.1.4.1.2356.11.2.12.45.5',
  'lcsSetupWlanRadiusAccountingBackupSecret' => '1.3.6.1.4.1.2356.11.2.12.45.6',
  'lcsSetupWlanRadiusAccountingClientBrgHandling' => '1.3.6.1.4.1.2356.11.2.12.45.7',
  'lcsSetupWlanRadiusAccountingClientBrgHandlingDefinition' => 'LCOS-MIB::lcsSetupWlanRadiusAccountingClientBrgHandling',
  'lcsSetupWlanRadiusAccountingInterimUpdatePeriod' => '1.3.6.1.4.1.2356.11.2.12.45.8',
  'lcsSetupWlanRadiusAccountingExcludedVlan' => '1.3.6.1.4.1.2356.11.2.12.45.9',
  'lcsSetupWlanRadiusAccountingLoopbackAddress' => '1.3.6.1.4.1.2356.11.2.12.45.10',
  'lcsSetupWlanRadiusAccountingBackupLoopbackAddress' => '1.3.6.1.4.1.2356.11.2.12.45.11',
  'lcsSetupWlanRadiusAccountingProtocol' => '1.3.6.1.4.1.2356.11.2.12.45.12',
  'lcsSetupWlanRadiusAccountingProtocolDefinition' => 'LCOS-MIB::lcsSetupWlanRadiusAccountingProtocol',
  'lcsSetupWlanRadiusAccountingBackupProtocol' => '1.3.6.1.4.1.2356.11.2.12.45.13',
  'lcsSetupWlanRadiusAccountingBackupProtocolDefinition' => 'LCOS-MIB::lcsSetupWlanRadiusAccountingBackupProtocol',
  'lcsSetupWlanRadiusAccountingRestartAccounting' => '1.3.6.1.4.1.2356.11.2.12.45.14',
  'lcsSetupWlanIndoorOnlyOperation' => '1.3.6.1.4.1.2356.11.2.12.46',
  'lcsSetupWlanIndoorOnlyOperationDefinition' => 'LCOS-MIB::lcsSetupWlanIndoorOnlyOperation',
  'lcsSetupWlanIdleTimeout' => '1.3.6.1.4.1.2356.11.2.12.47',
  'lcsSetupWlanUseFullChannelset' => '1.3.6.1.4.1.2356.11.2.12.48',
  'lcsSetupWlanUseFullChannelsetDefinition' => 'LCOS-MIB::lcsSetupWlanUseFullChannelset',
  'lcsSetupWlanSigAvrg' => '1.3.6.1.4.1.2356.11.2.12.50',
  'lcsSetupWlanSigAvrgMeth' => '1.3.6.1.4.1.2356.11.2.12.50.1',
  'lcsSetupWlanSigAvrgMethDefinition' => 'LCOS-MIB::lcsSetupWlanSigAvrgMeth',
  'lcsSetupWlanSigAvrgStdParams' => '1.3.6.1.4.1.2356.11.2.12.50.2',
  'lcsSetupWlanSigAvrgStdParamsFactor' => '1.3.6.1.4.1.2356.11.2.12.50.2.1',
  'lcsSetupWlanSigAvrgFiltParms' => '1.3.6.1.4.1.2356.11.2.12.50.3',
  'lcsSetupWlanSigAvrgFiltParmsCt' => '1.3.6.1.4.1.2356.11.2.12.50.3.1',
  'lcsSetupWlanSigAvrgFiltParmsCoeffTable' => '1.3.6.1.4.1.2356.11.2.12.50.3.2',
  'lcsSetupWlanSigAvrgFiltParmsCoeffEntry' => '1.3.6.1.4.1.2356.11.2.12.50.3.2.1',
  'lcsSetupWlanSigAvrgFiltParmsCoeffEntryIdx' => '1.3.6.1.4.1.2356.11.2.12.50.3.2.1.1',
  'lcsSetupWlanSigAvrgFiltParmsCoeffEntryVal' => '1.3.6.1.4.1.2356.11.2.12.50.3.2.1.2',
  'lcsSetupWlanRateAdaption' => '1.3.6.1.4.1.2356.11.2.12.51',
  'lcsSetupWlanRateAdaptionMethod' => '1.3.6.1.4.1.2356.11.2.12.51.1',
  'lcsSetupWlanRateAdaptionMethodDefinition' => 'LCOS-MIB::lcsSetupWlanRateAdaptionMethod',
  'lcsSetupWlanRateAdaptionInitialRate' => '1.3.6.1.4.1.2356.11.2.12.51.2',
  'lcsSetupWlanRateAdaptionInitialRateDefinition' => 'LCOS-MIB::lcsSetupWlanRateAdaptionInitialRate',
  'lcsSetupWlanRateAdaptionAveragingFactor' => '1.3.6.1.4.1.2356.11.2.12.51.3',
  'lcsSetupWlanIappIpNetwork' => '1.3.6.1.4.1.2356.11.2.12.60',
  'lcsSetupWlanVlanGroupkeyMappingTable' => '1.3.6.1.4.1.2356.11.2.12.70',
  'lcsSetupWlanVlanGroupkeyMappingEntry' => '1.3.6.1.4.1.2356.11.2.12.70.1',
  'lcsSetupWlanVlanGroupkeyMappingEntryNetwork' => '1.3.6.1.4.1.2356.11.2.12.70.1.1',
  'lcsSetupWlanVlanGroupkeyMappingEntryNetworkDefinition' => 'LCOS-MIB::lcsSetupWlanVlanGroupkeyMappingEntryNetwork',
  'lcsSetupWlanVlanGroupkeyMappingEntryVlanId' => '1.3.6.1.4.1.2356.11.2.12.70.1.2',
  'lcsSetupWlanVlanGroupkeyMappingEntryGroupkeyIndex' => '1.3.6.1.4.1.2356.11.2.12.70.1.3',
  'lcsSetupWlanCardReinitCycle' => '1.3.6.1.4.1.2356.11.2.12.100',
  'lcsSetupWlanNoiseCalibrationCycle' => '1.3.6.1.4.1.2356.11.2.12.101',
  'lcsSetupWlanTraceMac' => '1.3.6.1.4.1.2356.11.2.12.103',
  'lcsSetupWlanThermRecalCycle' => '1.3.6.1.4.1.2356.11.2.12.105',
  'lcsSetupWlanRadarPatternThresholdsTable' => '1.3.6.1.4.1.2356.11.2.12.107',
  'lcsSetupWlanRadarPatternThresholdsEntry' => '1.3.6.1.4.1.2356.11.2.12.107.1',
  'lcsSetupWlanRadarPatternThresholdsEntryPatternPps' => '1.3.6.1.4.1.2356.11.2.12.107.1.1',
  'lcsSetupWlanRadarPatternThresholdsEntryPatternPpsDefinition' => 'LCOS-MIB::lcsSetupWlanRadarPatternThresholdsEntryPatternPps',
  'lcsSetupWlanRadarPatternThresholdsEntryThreshold' => '1.3.6.1.4.1.2356.11.2.12.107.1.2',
  'lcsSetupWlanRadarLoadThreshold' => '1.3.6.1.4.1.2356.11.2.12.108',
  'lcsSetupWlanNoiseOffsetsTable' => '1.3.6.1.4.1.2356.11.2.12.109',
  'lcsSetupWlanNoiseOffsetsEntry' => '1.3.6.1.4.1.2356.11.2.12.109.1',
  'lcsSetupWlanNoiseOffsetsEntryBand' => '1.3.6.1.4.1.2356.11.2.12.109.1.1',
  'lcsSetupWlanNoiseOffsetsEntryBandDefinition' => 'LCOS-MIB::lcsSetupWlanNoiseOffsetsEntryBand',
  'lcsSetupWlanNoiseOffsetsEntryChannel' => '1.3.6.1.4.1.2356.11.2.12.109.1.2',
  'lcsSetupWlanNoiseOffsetsEntryInterface' => '1.3.6.1.4.1.2356.11.2.12.109.1.3',
  'lcsSetupWlanNoiseOffsetsEntryInterfaceDefinition' => 'LCOS-MIB::lcsSetupWlanNoiseOffsetsEntryInterface',
  'lcsSetupWlanNoiseOffsetsEntryValue' => '1.3.6.1.4.1.2356.11.2.12.109.1.4',
  'lcsSetupWlanTraceLevel' => '1.3.6.1.4.1.2356.11.2.12.110',
  'lcsSetupWlanNoiseImmunity' => '1.3.6.1.4.1.2356.11.2.12.111',
  'lcsSetupWlanNoiseImmunityNoiseImmunityLevel' => '1.3.6.1.4.1.2356.11.2.12.111.1',
  'lcsSetupWlanNoiseImmunityOfdmWeakSignalDetection' => '1.3.6.1.4.1.2356.11.2.12.111.2',
  'lcsSetupWlanNoiseImmunityCckWeakSignalDetectionThreshold' => '1.3.6.1.4.1.2356.11.2.12.111.3',
  'lcsSetupWlanNoiseImmunityFirStepLevel' => '1.3.6.1.4.1.2356.11.2.12.111.4',
  'lcsSetupWlanNoiseImmunitySpuriousImmunityLevel' => '1.3.6.1.4.1.2356.11.2.12.111.5',
  'lcsSetupWlanAggregateRetryLimit' => '1.3.6.1.4.1.2356.11.2.12.114',
  'lcsSetupWlanOmitGlobalCryptoSequenceCheck' => '1.3.6.1.4.1.2356.11.2.12.115',
  'lcsSetupWlanOmitGlobalCryptoSequenceCheckDefinition' => 'LCOS-MIB::lcsSetupWlanOmitGlobalCryptoSequenceCheck',
  'lcsSetupWlanTracePackets' => '1.3.6.1.4.1.2356.11.2.12.116',
  'lcsSetupWlanWpaHandshakeDelayMs' => '1.3.6.1.4.1.2356.11.2.12.117',
  'lcsSetupWlanWpaHandshakeTimeoutOverrideMs' => '1.3.6.1.4.1.2356.11.2.12.118',
  'lcsSetupLancapi' => '1.3.6.1.4.1.2356.11.2.13',
  'lcsSetupLancapiAccessListTable' => '1.3.6.1.4.1.2356.11.2.13.1',
  'lcsSetupLancapiAccessListEntry' => '1.3.6.1.4.1.2356.11.2.13.1.1',
  'lcsSetupLancapiAccessListEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.13.1.1.1',
  'lcsSetupLancapiAccessListEntryIpNetmask' => '1.3.6.1.4.1.2356.11.2.13.1.1.2',
  'lcsSetupLancapiAccessListEntryRtgTag' => '1.3.6.1.4.1.2356.11.2.13.1.1.3',
  'lcsSetupLancapiUdpPort' => '1.3.6.1.4.1.2356.11.2.13.3',
  'lcsSetupLancapiInterfaceListTable' => '1.3.6.1.4.1.2356.11.2.13.6',
  'lcsSetupLancapiInterfaceListEntry' => '1.3.6.1.4.1.2356.11.2.13.6.1',
  'lcsSetupLancapiInterfaceListEntryIfc' => '1.3.6.1.4.1.2356.11.2.13.6.1.1',
  'lcsSetupLancapiInterfaceListEntryIfcDefinition' => 'LCOS-MIB::lcsSetupLancapiInterfaceListEntryIfc',
  'lcsSetupLancapiInterfaceListEntryOperating' => '1.3.6.1.4.1.2356.11.2.13.6.1.2',
  'lcsSetupLancapiInterfaceListEntryOperatingDefinition' => 'LCOS-MIB::lcsSetupLancapiInterfaceListEntryOperating',
  'lcsSetupLancapiInterfaceListEntryEazMsnS' => '1.3.6.1.4.1.2356.11.2.13.6.1.3',
  'lcsSetupLancapiInterfaceListEntryForceOutMsn' => '1.3.6.1.4.1.2356.11.2.13.6.1.5',
  'lcsSetupLancapiInterfaceListEntryForceOutMsnDefinition' => 'LCOS-MIB::lcsSetupLancapiInterfaceListEntryForceOutMsn',
  'lcsSetupLancapiInterfaceListEntryMaxConnections' => '1.3.6.1.4.1.2356.11.2.13.6.1.6',
  'lcsSetupLancapiPriorityListTable' => '1.3.6.1.4.1.2356.11.2.13.7',
  'lcsSetupLancapiPriorityListEntry' => '1.3.6.1.4.1.2356.11.2.13.7.1',
  'lcsSetupLancapiPriorityListEntryIfc' => '1.3.6.1.4.1.2356.11.2.13.7.1.1',
  'lcsSetupLancapiPriorityListEntryIfcDefinition' => 'LCOS-MIB::lcsSetupLancapiPriorityListEntryIfc',
  'lcsSetupLancapiPriorityListEntryPrioOut' => '1.3.6.1.4.1.2356.11.2.13.7.1.2',
  'lcsSetupLancapiPriorityListEntryPrioOutDefinition' => 'LCOS-MIB::lcsSetupLancapiPriorityListEntryPrioOut',
  'lcsSetupTime' => '1.3.6.1.4.1.2356.11.2.14',
  'lcsSetupTimeFetchMethod' => '1.3.6.1.4.1.2356.11.2.14.1',
  'lcsSetupTimeFetchMethodDefinition' => 'LCOS-MIB::lcsSetupTimeFetchMethod',
  'lcsSetupTimeCurrentTime' => '1.3.6.1.4.1.2356.11.2.14.2',
  'lcsSetupTimeTimeCallNumber' => '1.3.6.1.4.1.2356.11.2.14.3',
  'lcsSetupTimeCallAttempts' => '1.3.6.1.4.1.2356.11.2.14.5',
  'lcsSetupTimeUtcInSeconds' => '1.3.6.1.4.1.2356.11.2.14.7',
  'lcsSetupTimeTimezone' => '1.3.6.1.4.1.2356.11.2.14.10',
  'lcsSetupTimeTimezoneDefinition' => 'LCOS-MIB::lcsSetupTimeTimezone',
  'lcsSetupTimeDaylightSavingTime' => '1.3.6.1.4.1.2356.11.2.14.11',
  'lcsSetupTimeDaylightSavingTimeDefinition' => 'LCOS-MIB::lcsSetupTimeDaylightSavingTime',
  'lcsSetupTimeDstClockChangesTable' => '1.3.6.1.4.1.2356.11.2.14.12',
  'lcsSetupTimeDstClockChangesEntry' => '1.3.6.1.4.1.2356.11.2.14.12.1',
  'lcsSetupTimeDstClockChangesEntryEvent' => '1.3.6.1.4.1.2356.11.2.14.12.1.1',
  'lcsSetupTimeDstClockChangesEntryEventDefinition' => 'LCOS-MIB::lcsSetupTimeDstClockChangesEntryEvent',
  'lcsSetupTimeDstClockChangesEntryIndex' => '1.3.6.1.4.1.2356.11.2.14.12.1.2',
  'lcsSetupTimeDstClockChangesEntryIndexDefinition' => 'LCOS-MIB::lcsSetupTimeDstClockChangesEntryIndex',
  'lcsSetupTimeDstClockChangesEntryDay' => '1.3.6.1.4.1.2356.11.2.14.12.1.3',
  'lcsSetupTimeDstClockChangesEntryDayDefinition' => 'LCOS-MIB::lcsSetupTimeDstClockChangesEntryDay',
  'lcsSetupTimeDstClockChangesEntryMonth' => '1.3.6.1.4.1.2356.11.2.14.12.1.4',
  'lcsSetupTimeDstClockChangesEntryMonthDefinition' => 'LCOS-MIB::lcsSetupTimeDstClockChangesEntryMonth',
  'lcsSetupTimeDstClockChangesEntryHour' => '1.3.6.1.4.1.2356.11.2.14.12.1.5',
  'lcsSetupTimeDstClockChangesEntryMinute' => '1.3.6.1.4.1.2356.11.2.14.12.1.6',
  'lcsSetupTimeDstClockChangesEntryTimeType' => '1.3.6.1.4.1.2356.11.2.14.12.1.7',
  'lcsSetupTimeDstClockChangesEntryTimeTypeDefinition' => 'LCOS-MIB::lcsSetupTimeDstClockChangesEntryTimeType',
  'lcsSetupTimeGetTime' => '1.3.6.1.4.1.2356.11.2.14.13',
  'lcsSetupTimeHolidaysTable' => '1.3.6.1.4.1.2356.11.2.14.15',
  'lcsSetupTimeHolidaysEntry' => '1.3.6.1.4.1.2356.11.2.14.15.1',
  'lcsSetupTimeHolidaysEntryIndex' => '1.3.6.1.4.1.2356.11.2.14.15.1.1',
  'lcsSetupTimeHolidaysEntryDate' => '1.3.6.1.4.1.2356.11.2.14.15.1.2',
  'lcsSetupTimeTimeframeTable' => '1.3.6.1.4.1.2356.11.2.14.16',
  'lcsSetupTimeTimeframeEntry' => '1.3.6.1.4.1.2356.11.2.14.16.1',
  'lcsSetupTimeTimeframeEntryName' => '1.3.6.1.4.1.2356.11.2.14.16.1.1',
  'lcsSetupTimeTimeframeEntryStart' => '1.3.6.1.4.1.2356.11.2.14.16.1.2',
  'lcsSetupTimeTimeframeEntryStop' => '1.3.6.1.4.1.2356.11.2.14.16.1.3',
  'lcsSetupTimeTimeframeEntryWeekdays' => '1.3.6.1.4.1.2356.11.2.14.16.1.4',
  'lcsSetupLcr' => '1.3.6.1.4.1.2356.11.2.15',
  'lcsSetupLcrRouterUsage' => '1.3.6.1.4.1.2356.11.2.15.1',
  'lcsSetupLcrRouterUsageDefinition' => 'LCOS-MIB::lcsSetupLcrRouterUsage',
  'lcsSetupLcrLancapiUsage' => '1.3.6.1.4.1.2356.11.2.15.2',
  'lcsSetupLcrLancapiUsageDefinition' => 'LCOS-MIB::lcsSetupLcrLancapiUsage',
  'lcsSetupLcrTimeListTable' => '1.3.6.1.4.1.2356.11.2.15.4',
  'lcsSetupLcrTimeListEntry' => '1.3.6.1.4.1.2356.11.2.15.4.1',
  'lcsSetupLcrTimeListEntryIndex' => '1.3.6.1.4.1.2356.11.2.15.4.1.1',
  'lcsSetupLcrTimeListEntryPrefix' => '1.3.6.1.4.1.2356.11.2.15.4.1.2',
  'lcsSetupLcrTimeListEntryDays' => '1.3.6.1.4.1.2356.11.2.15.4.1.3',
  'lcsSetupLcrTimeListEntryStart' => '1.3.6.1.4.1.2356.11.2.15.4.1.4',
  'lcsSetupLcrTimeListEntryStop' => '1.3.6.1.4.1.2356.11.2.15.4.1.5',
  'lcsSetupLcrTimeListEntryNumberList' => '1.3.6.1.4.1.2356.11.2.15.4.1.6',
  'lcsSetupLcrTimeListEntryFallback' => '1.3.6.1.4.1.2356.11.2.15.4.1.7',
  'lcsSetupLcrTimeListEntryFallbackDefinition' => 'LCOS-MIB::lcsSetupLcrTimeListEntryFallback',
  'lcsSetupNetbios' => '1.3.6.1.4.1.2356.11.2.16',
  'lcsSetupNetbiosOperating' => '1.3.6.1.4.1.2356.11.2.16.1',
  'lcsSetupNetbiosOperatingDefinition' => 'LCOS-MIB::lcsSetupNetbiosOperating',
  'lcsSetupNetbiosScopeId' => '1.3.6.1.4.1.2356.11.2.16.2',
  'lcsSetupNetbiosPeersTable' => '1.3.6.1.4.1.2356.11.2.16.4',
  'lcsSetupNetbiosPeersEntry' => '1.3.6.1.4.1.2356.11.2.16.4.1',
  'lcsSetupNetbiosPeersEntryName' => '1.3.6.1.4.1.2356.11.2.16.4.1.1',
  'lcsSetupNetbiosPeersEntryType' => '1.3.6.1.4.1.2356.11.2.16.4.1.3',
  'lcsSetupNetbiosPeersEntryTypeDefinition' => 'LCOS-MIB::lcsSetupNetbiosPeersEntryType',
  'lcsSetupNetbiosGroupListTable' => '1.3.6.1.4.1.2356.11.2.16.5',
  'lcsSetupNetbiosGroupListEntry' => '1.3.6.1.4.1.2356.11.2.16.5.1',
  'lcsSetupNetbiosGroupListEntryGroupDomain' => '1.3.6.1.4.1.2356.11.2.16.5.1.1',
  'lcsSetupNetbiosGroupListEntryType' => '1.3.6.1.4.1.2356.11.2.16.5.1.2',
  'lcsSetupNetbiosGroupListEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.16.5.1.3',
  'lcsSetupNetbiosGroupListEntryPeer' => '1.3.6.1.4.1.2356.11.2.16.5.1.4',
  'lcsSetupNetbiosGroupListEntryTimeout' => '1.3.6.1.4.1.2356.11.2.16.5.1.5',
  'lcsSetupNetbiosGroupListEntryFlags' => '1.3.6.1.4.1.2356.11.2.16.5.1.6',
  'lcsSetupNetbiosGroupListEntryNetworkName' => '1.3.6.1.4.1.2356.11.2.16.5.1.7',
  'lcsSetupNetbiosGroupListEntryRtgTag' => '1.3.6.1.4.1.2356.11.2.16.5.1.8',
  'lcsSetupNetbiosHostListTable' => '1.3.6.1.4.1.2356.11.2.16.6',
  'lcsSetupNetbiosHostListEntry' => '1.3.6.1.4.1.2356.11.2.16.6.1',
  'lcsSetupNetbiosHostListEntryName' => '1.3.6.1.4.1.2356.11.2.16.6.1.1',
  'lcsSetupNetbiosHostListEntryType' => '1.3.6.1.4.1.2356.11.2.16.6.1.2',
  'lcsSetupNetbiosHostListEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.16.6.1.3',
  'lcsSetupNetbiosHostListEntryPeer' => '1.3.6.1.4.1.2356.11.2.16.6.1.4',
  'lcsSetupNetbiosHostListEntryTimeout' => '1.3.6.1.4.1.2356.11.2.16.6.1.5',
  'lcsSetupNetbiosHostListEntryFlags' => '1.3.6.1.4.1.2356.11.2.16.6.1.6',
  'lcsSetupNetbiosHostListEntryNetworkName' => '1.3.6.1.4.1.2356.11.2.16.6.1.7',
  'lcsSetupNetbiosHostListEntryRtgTag' => '1.3.6.1.4.1.2356.11.2.16.6.1.8',
  'lcsSetupNetbiosServerListTable' => '1.3.6.1.4.1.2356.11.2.16.7',
  'lcsSetupNetbiosServerListEntry' => '1.3.6.1.4.1.2356.11.2.16.7.1',
  'lcsSetupNetbiosServerListEntryHost' => '1.3.6.1.4.1.2356.11.2.16.7.1.1',
  'lcsSetupNetbiosServerListEntryGroupDomain' => '1.3.6.1.4.1.2356.11.2.16.7.1.2',
  'lcsSetupNetbiosServerListEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.16.7.1.4',
  'lcsSetupNetbiosServerListEntryOsVer' => '1.3.6.1.4.1.2356.11.2.16.7.1.5',
  'lcsSetupNetbiosServerListEntrySmbVer' => '1.3.6.1.4.1.2356.11.2.16.7.1.6',
  'lcsSetupNetbiosServerListEntryServerTyp' => '1.3.6.1.4.1.2356.11.2.16.7.1.7',
  'lcsSetupNetbiosServerListEntryPeer' => '1.3.6.1.4.1.2356.11.2.16.7.1.8',
  'lcsSetupNetbiosServerListEntryTimeout' => '1.3.6.1.4.1.2356.11.2.16.7.1.9',
  'lcsSetupNetbiosServerListEntryFlags' => '1.3.6.1.4.1.2356.11.2.16.7.1.10',
  'lcsSetupNetbiosServerListEntryNetworkName' => '1.3.6.1.4.1.2356.11.2.16.7.1.11',
  'lcsSetupNetbiosServerListEntryRtgTag' => '1.3.6.1.4.1.2356.11.2.16.7.1.12',
  'lcsSetupNetbiosWatchdogs' => '1.3.6.1.4.1.2356.11.2.16.8',
  'lcsSetupNetbiosWatchdogsDefinition' => 'LCOS-MIB::lcsSetupNetbiosWatchdogs',
  'lcsSetupNetbiosUpdate' => '1.3.6.1.4.1.2356.11.2.16.9',
  'lcsSetupNetbiosUpdateDefinition' => 'LCOS-MIB::lcsSetupNetbiosUpdate',
  'lcsSetupNetbiosWanUpdateMinutes' => '1.3.6.1.4.1.2356.11.2.16.10',
  'lcsSetupNetbiosLeasetime' => '1.3.6.1.4.1.2356.11.2.16.11',
  'lcsSetupNetbiosNetworksTable' => '1.3.6.1.4.1.2356.11.2.16.12',
  'lcsSetupNetbiosNetworksEntry' => '1.3.6.1.4.1.2356.11.2.16.12.1',
  'lcsSetupNetbiosNetworksEntryNetworkName' => '1.3.6.1.4.1.2356.11.2.16.12.1.1',
  'lcsSetupNetbiosNetworksEntryOperating' => '1.3.6.1.4.1.2356.11.2.16.12.1.2',
  'lcsSetupNetbiosNetworksEntryOperatingDefinition' => 'LCOS-MIB::lcsSetupNetbiosNetworksEntryOperating',
  'lcsSetupNetbiosNetworksEntryNtDomain' => '1.3.6.1.4.1.2356.11.2.16.12.1.3',
  'lcsSetupNetbiosBrowserListTable' => '1.3.6.1.4.1.2356.11.2.16.13',
  'lcsSetupNetbiosBrowserListEntry' => '1.3.6.1.4.1.2356.11.2.16.13.1',
  'lcsSetupNetbiosBrowserListEntryBrowser' => '1.3.6.1.4.1.2356.11.2.16.13.1.1',
  'lcsSetupNetbiosBrowserListEntryGroupDomain' => '1.3.6.1.4.1.2356.11.2.16.13.1.2',
  'lcsSetupNetbiosBrowserListEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.16.13.1.4',
  'lcsSetupNetbiosBrowserListEntryOsVer' => '1.3.6.1.4.1.2356.11.2.16.13.1.5',
  'lcsSetupNetbiosBrowserListEntryServerTyp' => '1.3.6.1.4.1.2356.11.2.16.13.1.7',
  'lcsSetupNetbiosBrowserListEntryPeer' => '1.3.6.1.4.1.2356.11.2.16.13.1.8',
  'lcsSetupNetbiosBrowserListEntryTimeout' => '1.3.6.1.4.1.2356.11.2.16.13.1.9',
  'lcsSetupNetbiosBrowserListEntryFlags' => '1.3.6.1.4.1.2356.11.2.16.13.1.10',
  'lcsSetupNetbiosBrowserListEntryNetworkName' => '1.3.6.1.4.1.2356.11.2.16.13.1.11',
  'lcsSetupNetbiosBrowserListEntryRtgTag' => '1.3.6.1.4.1.2356.11.2.16.13.1.12',
  'lcsSetupNetbiosSupportBrowsing' => '1.3.6.1.4.1.2356.11.2.16.14',
  'lcsSetupNetbiosSupportBrowsingDefinition' => 'LCOS-MIB::lcsSetupNetbiosSupportBrowsing',
  'lcsSetupDns' => '1.3.6.1.4.1.2356.11.2.17',
  'lcsSetupDnsOperating' => '1.3.6.1.4.1.2356.11.2.17.1',
  'lcsSetupDnsOperatingDefinition' => 'LCOS-MIB::lcsSetupDnsOperating',
  'lcsSetupDnsDomain' => '1.3.6.1.4.1.2356.11.2.17.2',
  'lcsSetupDnsDhcpUsage' => '1.3.6.1.4.1.2356.11.2.17.3',
  'lcsSetupDnsDhcpUsageDefinition' => 'LCOS-MIB::lcsSetupDnsDhcpUsage',
  'lcsSetupDnsNetbiosUsage' => '1.3.6.1.4.1.2356.11.2.17.4',
  'lcsSetupDnsNetbiosUsageDefinition' => 'LCOS-MIB::lcsSetupDnsNetbiosUsage',
  'lcsSetupDnsDnsListTable' => '1.3.6.1.4.1.2356.11.2.17.5',
  'lcsSetupDnsDnsListEntry' => '1.3.6.1.4.1.2356.11.2.17.5.1',
  'lcsSetupDnsDnsListEntryHostName' => '1.3.6.1.4.1.2356.11.2.17.5.1.1',
  'lcsSetupDnsDnsListEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.17.5.1.2',
  'lcsSetupDnsFilterListTable' => '1.3.6.1.4.1.2356.11.2.17.6',
  'lcsSetupDnsFilterListEntry' => '1.3.6.1.4.1.2356.11.2.17.6.1',
  'lcsSetupDnsFilterListEntryIdx' => '1.3.6.1.4.1.2356.11.2.17.6.1.1',
  'lcsSetupDnsFilterListEntryDomain' => '1.3.6.1.4.1.2356.11.2.17.6.1.2',
  'lcsSetupDnsFilterListEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.17.6.1.3',
  'lcsSetupDnsFilterListEntryNetmask' => '1.3.6.1.4.1.2356.11.2.17.6.1.4',
  'lcsSetupDnsLeasetime' => '1.3.6.1.4.1.2356.11.2.17.7',
  'lcsSetupDnsDynDnsListTable' => '1.3.6.1.4.1.2356.11.2.17.8',
  'lcsSetupDnsDynDnsListEntry' => '1.3.6.1.4.1.2356.11.2.17.8.1',
  'lcsSetupDnsDynDnsListEntryHostName' => '1.3.6.1.4.1.2356.11.2.17.8.1.1',
  'lcsSetupDnsDynDnsListEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.17.8.1.2',
  'lcsSetupDnsDynDnsListEntryTimeout' => '1.3.6.1.4.1.2356.11.2.17.8.1.3',
  'lcsSetupDnsDnsDestinationsTable' => '1.3.6.1.4.1.2356.11.2.17.9',
  'lcsSetupDnsDnsDestinationsEntry' => '1.3.6.1.4.1.2356.11.2.17.9.1',
  'lcsSetupDnsDnsDestinationsEntryDomainName' => '1.3.6.1.4.1.2356.11.2.17.9.1.1',
  'lcsSetupDnsDnsDestinationsEntryDestination' => '1.3.6.1.4.1.2356.11.2.17.9.1.2',
  'lcsSetupDnsServiceLocationListTable' => '1.3.6.1.4.1.2356.11.2.17.10',
  'lcsSetupDnsServiceLocationListEntry' => '1.3.6.1.4.1.2356.11.2.17.10.1',
  'lcsSetupDnsServiceLocationListEntryServiceName' => '1.3.6.1.4.1.2356.11.2.17.10.1.1',
  'lcsSetupDnsServiceLocationListEntryHostName' => '1.3.6.1.4.1.2356.11.2.17.10.1.2',
  'lcsSetupDnsServiceLocationListEntryPort' => '1.3.6.1.4.1.2356.11.2.17.10.1.3',
  'lcsSetupDnsDynamicSrvListTable' => '1.3.6.1.4.1.2356.11.2.17.11',
  'lcsSetupDnsDynamicSrvListEntry' => '1.3.6.1.4.1.2356.11.2.17.11.1',
  'lcsSetupDnsDynamicSrvListEntryServiceName' => '1.3.6.1.4.1.2356.11.2.17.11.1.1',
  'lcsSetupDnsDynamicSrvListEntryHostName' => '1.3.6.1.4.1.2356.11.2.17.11.1.2',
  'lcsSetupDnsDynamicSrvListEntryPort' => '1.3.6.1.4.1.2356.11.2.17.11.1.3',
  'lcsSetupDnsResolveDomain' => '1.3.6.1.4.1.2356.11.2.17.12',
  'lcsSetupDnsResolveDomainDefinition' => 'LCOS-MIB::lcsSetupDnsResolveDomain',
  'lcsSetupDnsSubDomainsTable' => '1.3.6.1.4.1.2356.11.2.17.13',
  'lcsSetupDnsSubDomainsEntry' => '1.3.6.1.4.1.2356.11.2.17.13.1',
  'lcsSetupDnsSubDomainsEntryNetworkName' => '1.3.6.1.4.1.2356.11.2.17.13.1.1',
  'lcsSetupDnsSubDomainsEntrySubDomain' => '1.3.6.1.4.1.2356.11.2.17.13.1.2',
  'lcsSetupAccounting' => '1.3.6.1.4.1.2356.11.2.18',
  'lcsSetupAccountingOperating' => '1.3.6.1.4.1.2356.11.2.18.1',
  'lcsSetupAccountingOperatingDefinition' => 'LCOS-MIB::lcsSetupAccountingOperating',
  'lcsSetupAccountingSaveToFlashrom' => '1.3.6.1.4.1.2356.11.2.18.2',
  'lcsSetupAccountingSaveToFlashromDefinition' => 'LCOS-MIB::lcsSetupAccountingSaveToFlashrom',
  'lcsSetupAccountingSortBy' => '1.3.6.1.4.1.2356.11.2.18.3',
  'lcsSetupAccountingSortByDefinition' => 'LCOS-MIB::lcsSetupAccountingSortBy',
  'lcsSetupAccountingCurrentUserTable' => '1.3.6.1.4.1.2356.11.2.18.4',
  'lcsSetupAccountingCurrentUserEntry' => '1.3.6.1.4.1.2356.11.2.18.4.1',
  'lcsSetupAccountingCurrentUserEntryUsername' => '1.3.6.1.4.1.2356.11.2.18.4.1.1',
  'lcsSetupAccountingCurrentUserEntryMacAddress' => '1.3.6.1.4.1.2356.11.2.18.4.1.2',
  'lcsSetupAccountingCurrentUserEntryPeer' => '1.3.6.1.4.1.2356.11.2.18.4.1.3',
  'lcsSetupAccountingCurrentUserEntryConnType' => '1.3.6.1.4.1.2356.11.2.18.4.1.4',
  'lcsSetupAccountingCurrentUserEntryConnTypeDefinition' => 'LCOS-MIB::lcsSetupAccountingCurrentUserEntryConnType',
  'lcsSetupAccountingCurrentUserEntryRxKbytes' => '1.3.6.1.4.1.2356.11.2.18.4.1.5',
  'lcsSetupAccountingCurrentUserEntryTxKbytes' => '1.3.6.1.4.1.2356.11.2.18.4.1.6',
  'lcsSetupAccountingCurrentUserEntryTotalTime' => '1.3.6.1.4.1.2356.11.2.18.4.1.8',
  'lcsSetupAccountingCurrentUserEntryConnections' => '1.3.6.1.4.1.2356.11.2.18.4.1.9',
  'lcsSetupAccountingAccountingListTable' => '1.3.6.1.4.1.2356.11.2.18.5',
  'lcsSetupAccountingAccountingListEntry' => '1.3.6.1.4.1.2356.11.2.18.5.1',
  'lcsSetupAccountingAccountingListEntryUsername' => '1.3.6.1.4.1.2356.11.2.18.5.1.1',
  'lcsSetupAccountingAccountingListEntryMacAddress' => '1.3.6.1.4.1.2356.11.2.18.5.1.2',
  'lcsSetupAccountingAccountingListEntryPeer' => '1.3.6.1.4.1.2356.11.2.18.5.1.3',
  'lcsSetupAccountingAccountingListEntryConnType' => '1.3.6.1.4.1.2356.11.2.18.5.1.4',
  'lcsSetupAccountingAccountingListEntryConnTypeDefinition' => 'LCOS-MIB::lcsSetupAccountingAccountingListEntryConnType',
  'lcsSetupAccountingAccountingListEntryRxKbytes' => '1.3.6.1.4.1.2356.11.2.18.5.1.5',
  'lcsSetupAccountingAccountingListEntryTxKbytes' => '1.3.6.1.4.1.2356.11.2.18.5.1.6',
  'lcsSetupAccountingAccountingListEntryTotalTime' => '1.3.6.1.4.1.2356.11.2.18.5.1.8',
  'lcsSetupAccountingAccountingListEntryConnections' => '1.3.6.1.4.1.2356.11.2.18.5.1.9',
  'lcsSetupAccountingDeleteAccountingList' => '1.3.6.1.4.1.2356.11.2.18.6',
  'lcsSetupAccountingTimeSnapshotTable' => '1.3.6.1.4.1.2356.11.2.18.8',
  'lcsSetupAccountingTimeSnapshotEntry' => '1.3.6.1.4.1.2356.11.2.18.8.1',
  'lcsSetupAccountingTimeSnapshotEntryIndex' => '1.3.6.1.4.1.2356.11.2.18.8.1.1',
  'lcsSetupAccountingTimeSnapshotEntryActive' => '1.3.6.1.4.1.2356.11.2.18.8.1.2',
  'lcsSetupAccountingTimeSnapshotEntryActiveDefinition' => 'LCOS-MIB::lcsSetupAccountingTimeSnapshotEntryActive',
  'lcsSetupAccountingTimeSnapshotEntryType' => '1.3.6.1.4.1.2356.11.2.18.8.1.3',
  'lcsSetupAccountingTimeSnapshotEntryTypeDefinition' => 'LCOS-MIB::lcsSetupAccountingTimeSnapshotEntryType',
  'lcsSetupAccountingTimeSnapshotEntryDay' => '1.3.6.1.4.1.2356.11.2.18.8.1.4',
  'lcsSetupAccountingTimeSnapshotEntryDayofweek' => '1.3.6.1.4.1.2356.11.2.18.8.1.5',
  'lcsSetupAccountingTimeSnapshotEntryDayofweekDefinition' => 'LCOS-MIB::lcsSetupAccountingTimeSnapshotEntryDayofweek',
  'lcsSetupAccountingTimeSnapshotEntryHour' => '1.3.6.1.4.1.2356.11.2.18.8.1.6',
  'lcsSetupAccountingTimeSnapshotEntryMinute' => '1.3.6.1.4.1.2356.11.2.18.8.1.7',
  'lcsSetupAccountingLastSnapshotTable' => '1.3.6.1.4.1.2356.11.2.18.9',
  'lcsSetupAccountingLastSnapshotEntry' => '1.3.6.1.4.1.2356.11.2.18.9.1',
  'lcsSetupAccountingLastSnapshotEntryUsername' => '1.3.6.1.4.1.2356.11.2.18.9.1.1',
  'lcsSetupAccountingLastSnapshotEntryMacAddress' => '1.3.6.1.4.1.2356.11.2.18.9.1.2',
  'lcsSetupAccountingLastSnapshotEntryPeer' => '1.3.6.1.4.1.2356.11.2.18.9.1.3',
  'lcsSetupAccountingLastSnapshotEntryConnType' => '1.3.6.1.4.1.2356.11.2.18.9.1.4',
  'lcsSetupAccountingLastSnapshotEntryConnTypeDefinition' => 'LCOS-MIB::lcsSetupAccountingLastSnapshotEntryConnType',
  'lcsSetupAccountingLastSnapshotEntryRxKbytes' => '1.3.6.1.4.1.2356.11.2.18.9.1.5',
  'lcsSetupAccountingLastSnapshotEntryTxKbytes' => '1.3.6.1.4.1.2356.11.2.18.9.1.6',
  'lcsSetupAccountingLastSnapshotEntryTotalTime' => '1.3.6.1.4.1.2356.11.2.18.9.1.8',
  'lcsSetupAccountingLastSnapshotEntryConnections' => '1.3.6.1.4.1.2356.11.2.18.9.1.9',
  'lcsSetupAccountingDiscriminator' => '1.3.6.1.4.1.2356.11.2.18.10',
  'lcsSetupAccountingDiscriminatorDefinition' => 'LCOS-MIB::lcsSetupAccountingDiscriminator',
  'lcsSetupVpn' => '1.3.6.1.4.1.2356.11.2.19',
  'lcsSetupVpnIsakmp' => '1.3.6.1.4.1.2356.11.2.19.3',
  'lcsSetupVpnIsakmpTimerTable' => '1.3.6.1.4.1.2356.11.2.19.3.4',
  'lcsSetupVpnIsakmpTimerEntry' => '1.3.6.1.4.1.2356.11.2.19.3.4.1',
  'lcsSetupVpnIsakmpTimerEntryRetrLim' => '1.3.6.1.4.1.2356.11.2.19.3.4.1.1',
  'lcsSetupVpnIsakmpTimerEntryRetrTim' => '1.3.6.1.4.1.2356.11.2.19.3.4.1.2',
  'lcsSetupVpnIsakmpTimerEntryRetrTimUsec' => '1.3.6.1.4.1.2356.11.2.19.3.4.1.3',
  'lcsSetupVpnIsakmpTimerEntryRetrTimMax' => '1.3.6.1.4.1.2356.11.2.19.3.4.1.4',
  'lcsSetupVpnIsakmpTimerEntryExpTim' => '1.3.6.1.4.1.2356.11.2.19.3.4.1.5',
  'lcsSetupVpnIsakmpTimerEntryIdx' => '1.3.6.1.4.1.2356.11.2.19.3.4.1.6',
  'lcsSetupVpnProposals' => '1.3.6.1.4.1.2356.11.2.19.4',
  'lcsSetupVpnProposalsIkeProposalListsTable' => '1.3.6.1.4.1.2356.11.2.19.4.9',
  'lcsSetupVpnProposalsIkeProposalListsEntry' => '1.3.6.1.4.1.2356.11.2.19.4.9.1',
  'lcsSetupVpnProposalsIkeProposalListsEntryIkeProposalLists' => '1.3.6.1.4.1.2356.11.2.19.4.9.1.1',
  'lcsSetupVpnProposalsIkeProposalListsEntryIkeProposal1' => '1.3.6.1.4.1.2356.11.2.19.4.9.1.2',
  'lcsSetupVpnProposalsIkeProposalListsEntryIkeProposal2' => '1.3.6.1.4.1.2356.11.2.19.4.9.1.3',
  'lcsSetupVpnProposalsIkeProposalListsEntryIkeProposal3' => '1.3.6.1.4.1.2356.11.2.19.4.9.1.4',
  'lcsSetupVpnProposalsIkeProposalListsEntryIkeProposal4' => '1.3.6.1.4.1.2356.11.2.19.4.9.1.5',
  'lcsSetupVpnProposalsIkeProposalListsEntryIkeProposal5' => '1.3.6.1.4.1.2356.11.2.19.4.9.1.6',
  'lcsSetupVpnProposalsIkeProposalListsEntryIkeProposal6' => '1.3.6.1.4.1.2356.11.2.19.4.9.1.7',
  'lcsSetupVpnProposalsIkeProposalListsEntryIkeProposal7' => '1.3.6.1.4.1.2356.11.2.19.4.9.1.8',
  'lcsSetupVpnProposalsIkeProposalListsEntryIkeProposal8' => '1.3.6.1.4.1.2356.11.2.19.4.9.1.9',
  'lcsSetupVpnProposalsIpsecProposalListsTable' => '1.3.6.1.4.1.2356.11.2.19.4.10',
  'lcsSetupVpnProposalsIpsecProposalListsEntry' => '1.3.6.1.4.1.2356.11.2.19.4.10.1',
  'lcsSetupVpnProposalsIpsecProposalListsEntryIpsecProposalLists' => '1.3.6.1.4.1.2356.11.2.19.4.10.1.1',
  'lcsSetupVpnProposalsIpsecProposalListsEntryIpsecProposal1' => '1.3.6.1.4.1.2356.11.2.19.4.10.1.2',
  'lcsSetupVpnProposalsIpsecProposalListsEntryIpsecProposal2' => '1.3.6.1.4.1.2356.11.2.19.4.10.1.3',
  'lcsSetupVpnProposalsIpsecProposalListsEntryIpsecProposal3' => '1.3.6.1.4.1.2356.11.2.19.4.10.1.4',
  'lcsSetupVpnProposalsIpsecProposalListsEntryIpsecProposal4' => '1.3.6.1.4.1.2356.11.2.19.4.10.1.5',
  'lcsSetupVpnProposalsIpsecProposalListsEntryIpsecProposal5' => '1.3.6.1.4.1.2356.11.2.19.4.10.1.6',
  'lcsSetupVpnProposalsIpsecProposalListsEntryIpsecProposal6' => '1.3.6.1.4.1.2356.11.2.19.4.10.1.7',
  'lcsSetupVpnProposalsIpsecProposalListsEntryIpsecProposal7' => '1.3.6.1.4.1.2356.11.2.19.4.10.1.8',
  'lcsSetupVpnProposalsIpsecProposalListsEntryIpsecProposal8' => '1.3.6.1.4.1.2356.11.2.19.4.10.1.9',
  'lcsSetupVpnProposalsIkeTable' => '1.3.6.1.4.1.2356.11.2.19.4.11',
  'lcsSetupVpnProposalsIkeEntry' => '1.3.6.1.4.1.2356.11.2.19.4.11.1',
  'lcsSetupVpnProposalsIkeEntryName' => '1.3.6.1.4.1.2356.11.2.19.4.11.1.1',
  'lcsSetupVpnProposalsIkeEntryIkeCryptAlg' => '1.3.6.1.4.1.2356.11.2.19.4.11.1.2',
  'lcsSetupVpnProposalsIkeEntryIkeCryptAlgDefinition' => 'LCOS-MIB::lcsSetupVpnProposalsIkeEntryIkeCryptAlg',
  'lcsSetupVpnProposalsIkeEntryIkeCryptKeylen' => '1.3.6.1.4.1.2356.11.2.19.4.11.1.3',
  'lcsSetupVpnProposalsIkeEntryIkeAuthAlg' => '1.3.6.1.4.1.2356.11.2.19.4.11.1.4',
  'lcsSetupVpnProposalsIkeEntryIkeAuthAlgDefinition' => 'LCOS-MIB::lcsSetupVpnProposalsIkeEntryIkeAuthAlg',
  'lcsSetupVpnProposalsIkeEntryIkeAuthMode' => '1.3.6.1.4.1.2356.11.2.19.4.11.1.5',
  'lcsSetupVpnProposalsIkeEntryIkeAuthModeDefinition' => 'LCOS-MIB::lcsSetupVpnProposalsIkeEntryIkeAuthMode',
  'lcsSetupVpnProposalsIkeEntryLifetimeSec' => '1.3.6.1.4.1.2356.11.2.19.4.11.1.6',
  'lcsSetupVpnProposalsIkeEntryLifetimeKb' => '1.3.6.1.4.1.2356.11.2.19.4.11.1.7',
  'lcsSetupVpnProposalsIpsecTable' => '1.3.6.1.4.1.2356.11.2.19.4.12',
  'lcsSetupVpnProposalsIpsecEntry' => '1.3.6.1.4.1.2356.11.2.19.4.12.1',
  'lcsSetupVpnProposalsIpsecEntryName' => '1.3.6.1.4.1.2356.11.2.19.4.12.1.1',
  'lcsSetupVpnProposalsIpsecEntryEncapsMode' => '1.3.6.1.4.1.2356.11.2.19.4.12.1.2',
  'lcsSetupVpnProposalsIpsecEntryEncapsModeDefinition' => 'LCOS-MIB::lcsSetupVpnProposalsIpsecEntryEncapsMode',
  'lcsSetupVpnProposalsIpsecEntryEspCryptAlg' => '1.3.6.1.4.1.2356.11.2.19.4.12.1.3',
  'lcsSetupVpnProposalsIpsecEntryEspCryptAlgDefinition' => 'LCOS-MIB::lcsSetupVpnProposalsIpsecEntryEspCryptAlg',
  'lcsSetupVpnProposalsIpsecEntryEspCryptKeylen' => '1.3.6.1.4.1.2356.11.2.19.4.12.1.4',
  'lcsSetupVpnProposalsIpsecEntryEspAuthAlg' => '1.3.6.1.4.1.2356.11.2.19.4.12.1.5',
  'lcsSetupVpnProposalsIpsecEntryEspAuthAlgDefinition' => 'LCOS-MIB::lcsSetupVpnProposalsIpsecEntryEspAuthAlg',
  'lcsSetupVpnProposalsIpsecEntryAhAuthAlg' => '1.3.6.1.4.1.2356.11.2.19.4.12.1.6',
  'lcsSetupVpnProposalsIpsecEntryAhAuthAlgDefinition' => 'LCOS-MIB::lcsSetupVpnProposalsIpsecEntryAhAuthAlg',
  'lcsSetupVpnProposalsIpsecEntryIpcompAlg' => '1.3.6.1.4.1.2356.11.2.19.4.12.1.7',
  'lcsSetupVpnProposalsIpsecEntryIpcompAlgDefinition' => 'LCOS-MIB::lcsSetupVpnProposalsIpsecEntryIpcompAlg',
  'lcsSetupVpnProposalsIpsecEntryLifetimeSec' => '1.3.6.1.4.1.2356.11.2.19.4.12.1.8',
  'lcsSetupVpnProposalsIpsecEntryLifetimeKb' => '1.3.6.1.4.1.2356.11.2.19.4.12.1.9',
  'lcsSetupVpnCertificatesAndKeys' => '1.3.6.1.4.1.2356.11.2.19.5',
  'lcsSetupVpnCertificatesAndKeysIkeKeysTable' => '1.3.6.1.4.1.2356.11.2.19.5.3',
  'lcsSetupVpnCertificatesAndKeysIkeKeysEntry' => '1.3.6.1.4.1.2356.11.2.19.5.3.1',
  'lcsSetupVpnCertificatesAndKeysIkeKeysEntryName' => '1.3.6.1.4.1.2356.11.2.19.5.3.1.1',
  'lcsSetupVpnCertificatesAndKeysIkeKeysEntryRemoteIdentity' => '1.3.6.1.4.1.2356.11.2.19.5.3.1.2',
  'lcsSetupVpnCertificatesAndKeysIkeKeysEntrySharedSec' => '1.3.6.1.4.1.2356.11.2.19.5.3.1.3',
  'lcsSetupVpnCertificatesAndKeysIkeKeysEntrySharedSecFile' => '1.3.6.1.4.1.2356.11.2.19.5.3.1.4',
  'lcsSetupVpnCertificatesAndKeysIkeKeysEntryRemoteIdType' => '1.3.6.1.4.1.2356.11.2.19.5.3.1.5',
  'lcsSetupVpnCertificatesAndKeysIkeKeysEntryRemoteIdTypeDefinition' => 'LCOS-MIB::lcsSetupVpnCertificatesAndKeysIkeKeysEntryRemoteIdType',
  'lcsSetupVpnCertificatesAndKeysIkeKeysEntryLocalIdType' => '1.3.6.1.4.1.2356.11.2.19.5.3.1.6',
  'lcsSetupVpnCertificatesAndKeysIkeKeysEntryLocalIdTypeDefinition' => 'LCOS-MIB::lcsSetupVpnCertificatesAndKeysIkeKeysEntryLocalIdType',
  'lcsSetupVpnCertificatesAndKeysIkeKeysEntryLocalIdentity' => '1.3.6.1.4.1.2356.11.2.19.5.3.1.7',
  'lcsSetupVpnLayerTable' => '1.3.6.1.4.1.2356.11.2.19.7',
  'lcsSetupVpnLayerEntry' => '1.3.6.1.4.1.2356.11.2.19.7.1',
  'lcsSetupVpnLayerEntryName' => '1.3.6.1.4.1.2356.11.2.19.7.1.1',
  'lcsSetupVpnLayerEntryPfsGrp' => '1.3.6.1.4.1.2356.11.2.19.7.1.3',
  'lcsSetupVpnLayerEntryIkeGrp' => '1.3.6.1.4.1.2356.11.2.19.7.1.4',
  'lcsSetupVpnLayerEntryIkePropList' => '1.3.6.1.4.1.2356.11.2.19.7.1.5',
  'lcsSetupVpnLayerEntryIpsecPropList' => '1.3.6.1.4.1.2356.11.2.19.7.1.6',
  'lcsSetupVpnLayerEntryIkeKey' => '1.3.6.1.4.1.2356.11.2.19.7.1.7',
  'lcsSetupVpnOperating' => '1.3.6.1.4.1.2356.11.2.19.8',
  'lcsSetupVpnOperatingDefinition' => 'LCOS-MIB::lcsSetupVpnOperating',
  'lcsSetupVpnVpnPeersTable' => '1.3.6.1.4.1.2356.11.2.19.9',
  'lcsSetupVpnVpnPeersEntry' => '1.3.6.1.4.1.2356.11.2.19.9.1',
  'lcsSetupVpnVpnPeersEntryPeer' => '1.3.6.1.4.1.2356.11.2.19.9.1.1',
  'lcsSetupVpnVpnPeersEntryExtranetAddress' => '1.3.6.1.4.1.2356.11.2.19.9.1.2',
  'lcsSetupVpnVpnPeersEntryLayer' => '1.3.6.1.4.1.2356.11.2.19.9.1.4',
  'lcsSetupVpnVpnPeersEntryDynamic' => '1.3.6.1.4.1.2356.11.2.19.9.1.5',
  'lcsSetupVpnVpnPeersEntryDynamicDefinition' => 'LCOS-MIB::lcsSetupVpnVpnPeersEntryDynamic',
  'lcsSetupVpnVpnPeersEntryShTime' => '1.3.6.1.4.1.2356.11.2.19.9.1.6',
  'lcsSetupVpnVpnPeersEntryIkeExchange' => '1.3.6.1.4.1.2356.11.2.19.9.1.7',
  'lcsSetupVpnVpnPeersEntryIkeExchangeDefinition' => 'LCOS-MIB::lcsSetupVpnVpnPeersEntryIkeExchange',
  'lcsSetupVpnVpnPeersEntryRemoteGw' => '1.3.6.1.4.1.2356.11.2.19.9.1.8',
  'lcsSetupVpnVpnPeersEntryRuleCreation' => '1.3.6.1.4.1.2356.11.2.19.9.1.9',
  'lcsSetupVpnVpnPeersEntryRuleCreationDefinition' => 'LCOS-MIB::lcsSetupVpnVpnPeersEntryRuleCreation',
  'lcsSetupVpnVpnPeersEntryDpdInactTimeout' => '1.3.6.1.4.1.2356.11.2.19.9.1.10',
  'lcsSetupVpnVpnPeersEntryIkeCfg' => '1.3.6.1.4.1.2356.11.2.19.9.1.11',
  'lcsSetupVpnVpnPeersEntryIkeCfgDefinition' => 'LCOS-MIB::lcsSetupVpnVpnPeersEntryIkeCfg',
  'lcsSetupVpnVpnPeersEntryXauth' => '1.3.6.1.4.1.2356.11.2.19.9.1.12',
  'lcsSetupVpnVpnPeersEntryXauthDefinition' => 'LCOS-MIB::lcsSetupVpnVpnPeersEntryXauth',
  'lcsSetupVpnVpnPeersEntrySslEncaps' => '1.3.6.1.4.1.2356.11.2.19.9.1.13',
  'lcsSetupVpnVpnPeersEntrySslEncapsDefinition' => 'LCOS-MIB::lcsSetupVpnVpnPeersEntrySslEncaps',
  'lcsSetupVpnVpnPeersEntryRtgTag' => '1.3.6.1.4.1.2356.11.2.19.9.1.15',
  'lcsSetupVpnVpnPeersEntryOcspCheck' => '1.3.6.1.4.1.2356.11.2.19.9.1.16',
  'lcsSetupVpnVpnPeersEntryOcspCheckDefinition' => 'LCOS-MIB::lcsSetupVpnVpnPeersEntryOcspCheck',
  'lcsSetupVpnAggrmodeProposalListDefault' => '1.3.6.1.4.1.2356.11.2.19.10',
  'lcsSetupVpnAggrmodeIkeGroupDefault' => '1.3.6.1.4.1.2356.11.2.19.11',
  'lcsSetupVpnAdditionalGatewaysTable' => '1.3.6.1.4.1.2356.11.2.19.12',
  'lcsSetupVpnAdditionalGatewaysEntry' => '1.3.6.1.4.1.2356.11.2.19.12.1',
  'lcsSetupVpnAdditionalGatewaysEntryPeer' => '1.3.6.1.4.1.2356.11.2.19.12.1.1',
  'lcsSetupVpnAdditionalGatewaysEntryGateway1' => '1.3.6.1.4.1.2356.11.2.19.12.1.2',
  'lcsSetupVpnAdditionalGatewaysEntryGateway2' => '1.3.6.1.4.1.2356.11.2.19.12.1.3',
  'lcsSetupVpnAdditionalGatewaysEntryGateway3' => '1.3.6.1.4.1.2356.11.2.19.12.1.4',
  'lcsSetupVpnAdditionalGatewaysEntryGateway4' => '1.3.6.1.4.1.2356.11.2.19.12.1.5',
  'lcsSetupVpnAdditionalGatewaysEntryGateway5' => '1.3.6.1.4.1.2356.11.2.19.12.1.6',
  'lcsSetupVpnAdditionalGatewaysEntryGateway6' => '1.3.6.1.4.1.2356.11.2.19.12.1.7',
  'lcsSetupVpnAdditionalGatewaysEntryGateway7' => '1.3.6.1.4.1.2356.11.2.19.12.1.8',
  'lcsSetupVpnAdditionalGatewaysEntryGateway8' => '1.3.6.1.4.1.2356.11.2.19.12.1.9',
  'lcsSetupVpnAdditionalGatewaysEntryBeginWith' => '1.3.6.1.4.1.2356.11.2.19.12.1.10',
  'lcsSetupVpnAdditionalGatewaysEntryBeginWithDefinition' => 'LCOS-MIB::lcsSetupVpnAdditionalGatewaysEntryBeginWith',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag1' => '1.3.6.1.4.1.2356.11.2.19.12.1.11',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag2' => '1.3.6.1.4.1.2356.11.2.19.12.1.12',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag3' => '1.3.6.1.4.1.2356.11.2.19.12.1.13',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag4' => '1.3.6.1.4.1.2356.11.2.19.12.1.14',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag5' => '1.3.6.1.4.1.2356.11.2.19.12.1.15',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag6' => '1.3.6.1.4.1.2356.11.2.19.12.1.16',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag7' => '1.3.6.1.4.1.2356.11.2.19.12.1.17',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag8' => '1.3.6.1.4.1.2356.11.2.19.12.1.18',
  'lcsSetupVpnAdditionalGatewaysEntryGateway9' => '1.3.6.1.4.1.2356.11.2.19.12.1.19',
  'lcsSetupVpnAdditionalGatewaysEntryGateway10' => '1.3.6.1.4.1.2356.11.2.19.12.1.20',
  'lcsSetupVpnAdditionalGatewaysEntryGateway11' => '1.3.6.1.4.1.2356.11.2.19.12.1.21',
  'lcsSetupVpnAdditionalGatewaysEntryGateway12' => '1.3.6.1.4.1.2356.11.2.19.12.1.22',
  'lcsSetupVpnAdditionalGatewaysEntryGateway13' => '1.3.6.1.4.1.2356.11.2.19.12.1.23',
  'lcsSetupVpnAdditionalGatewaysEntryGateway14' => '1.3.6.1.4.1.2356.11.2.19.12.1.24',
  'lcsSetupVpnAdditionalGatewaysEntryGateway15' => '1.3.6.1.4.1.2356.11.2.19.12.1.25',
  'lcsSetupVpnAdditionalGatewaysEntryGateway16' => '1.3.6.1.4.1.2356.11.2.19.12.1.26',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag9' => '1.3.6.1.4.1.2356.11.2.19.12.1.27',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag10' => '1.3.6.1.4.1.2356.11.2.19.12.1.28',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag11' => '1.3.6.1.4.1.2356.11.2.19.12.1.29',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag12' => '1.3.6.1.4.1.2356.11.2.19.12.1.30',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag13' => '1.3.6.1.4.1.2356.11.2.19.12.1.31',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag14' => '1.3.6.1.4.1.2356.11.2.19.12.1.32',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag15' => '1.3.6.1.4.1.2356.11.2.19.12.1.33',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag16' => '1.3.6.1.4.1.2356.11.2.19.12.1.34',
  'lcsSetupVpnAdditionalGatewaysEntryGateway17' => '1.3.6.1.4.1.2356.11.2.19.12.1.35',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag17' => '1.3.6.1.4.1.2356.11.2.19.12.1.36',
  'lcsSetupVpnAdditionalGatewaysEntryGateway18' => '1.3.6.1.4.1.2356.11.2.19.12.1.37',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag18' => '1.3.6.1.4.1.2356.11.2.19.12.1.38',
  'lcsSetupVpnAdditionalGatewaysEntryGateway19' => '1.3.6.1.4.1.2356.11.2.19.12.1.39',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag19' => '1.3.6.1.4.1.2356.11.2.19.12.1.40',
  'lcsSetupVpnAdditionalGatewaysEntryGateway20' => '1.3.6.1.4.1.2356.11.2.19.12.1.41',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag20' => '1.3.6.1.4.1.2356.11.2.19.12.1.42',
  'lcsSetupVpnAdditionalGatewaysEntryGateway21' => '1.3.6.1.4.1.2356.11.2.19.12.1.43',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag21' => '1.3.6.1.4.1.2356.11.2.19.12.1.44',
  'lcsSetupVpnAdditionalGatewaysEntryGateway22' => '1.3.6.1.4.1.2356.11.2.19.12.1.45',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag22' => '1.3.6.1.4.1.2356.11.2.19.12.1.46',
  'lcsSetupVpnAdditionalGatewaysEntryGateway23' => '1.3.6.1.4.1.2356.11.2.19.12.1.47',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag23' => '1.3.6.1.4.1.2356.11.2.19.12.1.48',
  'lcsSetupVpnAdditionalGatewaysEntryGateway24' => '1.3.6.1.4.1.2356.11.2.19.12.1.49',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag24' => '1.3.6.1.4.1.2356.11.2.19.12.1.50',
  'lcsSetupVpnAdditionalGatewaysEntryGateway25' => '1.3.6.1.4.1.2356.11.2.19.12.1.51',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag25' => '1.3.6.1.4.1.2356.11.2.19.12.1.52',
  'lcsSetupVpnAdditionalGatewaysEntryGateway26' => '1.3.6.1.4.1.2356.11.2.19.12.1.53',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag26' => '1.3.6.1.4.1.2356.11.2.19.12.1.54',
  'lcsSetupVpnAdditionalGatewaysEntryGateway27' => '1.3.6.1.4.1.2356.11.2.19.12.1.55',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag27' => '1.3.6.1.4.1.2356.11.2.19.12.1.56',
  'lcsSetupVpnAdditionalGatewaysEntryGateway28' => '1.3.6.1.4.1.2356.11.2.19.12.1.57',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag28' => '1.3.6.1.4.1.2356.11.2.19.12.1.58',
  'lcsSetupVpnAdditionalGatewaysEntryGateway29' => '1.3.6.1.4.1.2356.11.2.19.12.1.59',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag29' => '1.3.6.1.4.1.2356.11.2.19.12.1.60',
  'lcsSetupVpnAdditionalGatewaysEntryGateway30' => '1.3.6.1.4.1.2356.11.2.19.12.1.61',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag30' => '1.3.6.1.4.1.2356.11.2.19.12.1.62',
  'lcsSetupVpnAdditionalGatewaysEntryGateway31' => '1.3.6.1.4.1.2356.11.2.19.12.1.63',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag31' => '1.3.6.1.4.1.2356.11.2.19.12.1.64',
  'lcsSetupVpnAdditionalGatewaysEntryGateway32' => '1.3.6.1.4.1.2356.11.2.19.12.1.65',
  'lcsSetupVpnAdditionalGatewaysEntryRtgTag32' => '1.3.6.1.4.1.2356.11.2.19.12.1.66',
  'lcsSetupVpnMainmodeProposalListDefault' => '1.3.6.1.4.1.2356.11.2.19.13',
  'lcsSetupVpnMainmodeIkeGroupDefault' => '1.3.6.1.4.1.2356.11.2.19.14',
  'lcsSetupVpnLegacyDynVpnLcos50xSupport' => '1.3.6.1.4.1.2356.11.2.19.15',
  'lcsSetupVpnLegacyDynVpnLcos50xSupportDefinition' => 'LCOS-MIB::lcsSetupVpnLegacyDynVpnLcos50xSupport',
  'lcsSetupVpnNatTOperating' => '1.3.6.1.4.1.2356.11.2.19.16',
  'lcsSetupVpnNatTOperatingDefinition' => 'LCOS-MIB::lcsSetupVpnNatTOperating',
  'lcsSetupVpnSimpleCertRasOperating' => '1.3.6.1.4.1.2356.11.2.19.17',
  'lcsSetupVpnSimpleCertRasOperatingDefinition' => 'LCOS-MIB::lcsSetupVpnSimpleCertRasOperating',
  'lcsSetupVpnQuickmodeProposalListDefault' => '1.3.6.1.4.1.2356.11.2.19.19',
  'lcsSetupVpnQuickmodePfsGroupDefault' => '1.3.6.1.4.1.2356.11.2.19.20',
  'lcsSetupVpnQuickmodeShortholdTimeDefault' => '1.3.6.1.4.1.2356.11.2.19.21',
  'lcsSetupVpnAllowRemoteNetworkSelection' => '1.3.6.1.4.1.2356.11.2.19.22',
  'lcsSetupVpnAllowRemoteNetworkSelectionDefinition' => 'LCOS-MIB::lcsSetupVpnAllowRemoteNetworkSelection',
  'lcsSetupVpnEstablishSasCollectively' => '1.3.6.1.4.1.2356.11.2.19.23',
  'lcsSetupVpnEstablishSasCollectivelyDefinition' => 'LCOS-MIB::lcsSetupVpnEstablishSasCollectively',
  'lcsSetupVpnMaxConcurrentConnections' => '1.3.6.1.4.1.2356.11.2.19.24',
  'lcsSetupVpnFlexibleIdComparison' => '1.3.6.1.4.1.2356.11.2.19.25',
  'lcsSetupVpnFlexibleIdComparisonDefinition' => 'LCOS-MIB::lcsSetupVpnFlexibleIdComparison',
  'lcsSetupVpnNatTPortForRekeying' => '1.3.6.1.4.1.2356.11.2.19.26',
  'lcsSetupVpnNatTPortForRekeyingDefinition' => 'LCOS-MIB::lcsSetupVpnNatTPortForRekeying',
  'lcsSetupVpnSslEncapsAllowed' => '1.3.6.1.4.1.2356.11.2.19.27',
  'lcsSetupVpnSslEncapsAllowedDefinition' => 'LCOS-MIB::lcsSetupVpnSslEncapsAllowed',
  'lcsSetupVpnOcspClient' => '1.3.6.1.4.1.2356.11.2.19.64',
  'lcsSetupVpnOcspClientActive' => '1.3.6.1.4.1.2356.11.2.19.64.1',
  'lcsSetupVpnOcspClientActiveDefinition' => 'LCOS-MIB::lcsSetupVpnOcspClientActive',
  'lcsSetupLanBridge' => '1.3.6.1.4.1.2356.11.2.20',
  'lcsSetupLanBridgeProtocolVersion' => '1.3.6.1.4.1.2356.11.2.20.1',
  'lcsSetupLanBridgeProtocolVersionDefinition' => 'LCOS-MIB::lcsSetupLanBridgeProtocolVersion',
  'lcsSetupLanBridgeBridgePriority' => '1.3.6.1.4.1.2356.11.2.20.2',
  'lcsSetupLanBridgeEncapsulationTableTable' => '1.3.6.1.4.1.2356.11.2.20.4',
  'lcsSetupLanBridgeEncapsulationTableEntry' => '1.3.6.1.4.1.2356.11.2.20.4.1',
  'lcsSetupLanBridgeEncapsulationTableEntryProtocol' => '1.3.6.1.4.1.2356.11.2.20.4.1.1',
  'lcsSetupLanBridgeEncapsulationTableEntryEncapsulation' => '1.3.6.1.4.1.2356.11.2.20.4.1.2',
  'lcsSetupLanBridgeEncapsulationTableEntryEncapsulationDefinition' => 'LCOS-MIB::lcsSetupLanBridgeEncapsulationTableEntryEncapsulation',
  'lcsSetupLanBridgeMaxAge' => '1.3.6.1.4.1.2356.11.2.20.5',
  'lcsSetupLanBridgeHelloTime' => '1.3.6.1.4.1.2356.11.2.20.6',
  'lcsSetupLanBridgeForwardDelay' => '1.3.6.1.4.1.2356.11.2.20.7',
  'lcsSetupLanBridgeIsolatedMode' => '1.3.6.1.4.1.2356.11.2.20.8',
  'lcsSetupLanBridgeIsolatedModeDefinition' => 'LCOS-MIB::lcsSetupLanBridgeIsolatedMode',
  'lcsSetupLanBridgeProtocolTableTable' => '1.3.6.1.4.1.2356.11.2.20.10',
  'lcsSetupLanBridgeProtocolTableEntry' => '1.3.6.1.4.1.2356.11.2.20.10.1',
  'lcsSetupLanBridgeProtocolTableEntryName' => '1.3.6.1.4.1.2356.11.2.20.10.1.1',
  'lcsSetupLanBridgeProtocolTableEntryProtocol' => '1.3.6.1.4.1.2356.11.2.20.10.1.2',
  'lcsSetupLanBridgeProtocolTableEntrySubProtocol' => '1.3.6.1.4.1.2356.11.2.20.10.1.3',
  'lcsSetupLanBridgeProtocolTableEntryPort' => '1.3.6.1.4.1.2356.11.2.20.10.1.4',
  'lcsSetupLanBridgeProtocolTableEntryPortEnd' => '1.3.6.1.4.1.2356.11.2.20.10.1.5',
  'lcsSetupLanBridgeProtocolTableEntryIfcList' => '1.3.6.1.4.1.2356.11.2.20.10.1.6',
  'lcsSetupLanBridgeProtocolTableEntryAction' => '1.3.6.1.4.1.2356.11.2.20.10.1.7',
  'lcsSetupLanBridgeProtocolTableEntryActionDefinition' => 'LCOS-MIB::lcsSetupLanBridgeProtocolTableEntryAction',
  'lcsSetupLanBridgeProtocolTableEntryRedirectIpAddress' => '1.3.6.1.4.1.2356.11.2.20.10.1.8',
  'lcsSetupLanBridgeProtocolTableEntryDestMacAddr' => '1.3.6.1.4.1.2356.11.2.20.10.1.9',
  'lcsSetupLanBridgeProtocolTableEntryIpNetwork' => '1.3.6.1.4.1.2356.11.2.20.10.1.10',
  'lcsSetupLanBridgeProtocolTableEntryIpNetmask' => '1.3.6.1.4.1.2356.11.2.20.10.1.11',
  'lcsSetupLanBridgeProtocolTableEntryDhcpSrcMac' => '1.3.6.1.4.1.2356.11.2.20.10.1.12',
  'lcsSetupLanBridgeProtocolTableEntryDhcpSrcMacDefinition' => 'LCOS-MIB::lcsSetupLanBridgeProtocolTableEntryDhcpSrcMac',
  'lcsSetupLanBridgePortDataTable' => '1.3.6.1.4.1.2356.11.2.20.11',
  'lcsSetupLanBridgePortDataEntry' => '1.3.6.1.4.1.2356.11.2.20.11.1',
  'lcsSetupLanBridgePortDataEntryPort' => '1.3.6.1.4.1.2356.11.2.20.11.1.2',
  'lcsSetupLanBridgePortDataEntryActive' => '1.3.6.1.4.1.2356.11.2.20.11.1.3',
  'lcsSetupLanBridgePortDataEntryActiveDefinition' => 'LCOS-MIB::lcsSetupLanBridgePortDataEntryActive',
  'lcsSetupLanBridgePortDataEntryBridgeGroup' => '1.3.6.1.4.1.2356.11.2.20.11.1.5',
  'lcsSetupLanBridgePortDataEntryBridgeGroupDefinition' => 'LCOS-MIB::lcsSetupLanBridgePortDataEntryBridgeGroup',
  'lcsSetupLanBridgePortDataEntryDhcpLimit' => '1.3.6.1.4.1.2356.11.2.20.11.1.6',
  'lcsSetupLanBridgePortDataEntryPointToPointPort' => '1.3.6.1.4.1.2356.11.2.20.11.1.7',
  'lcsSetupLanBridgePortDataEntryPointToPointPortDefinition' => 'LCOS-MIB::lcsSetupLanBridgePortDataEntryPointToPointPort',
  'lcsSetupLanBridgeAgingTime' => '1.3.6.1.4.1.2356.11.2.20.12',
  'lcsSetupLanBridgePriorityMappingTable' => '1.3.6.1.4.1.2356.11.2.20.13',
  'lcsSetupLanBridgePriorityMappingEntry' => '1.3.6.1.4.1.2356.11.2.20.13.1',
  'lcsSetupLanBridgePriorityMappingEntryName' => '1.3.6.1.4.1.2356.11.2.20.13.1.1',
  'lcsSetupLanBridgePriorityMappingEntryDscpValue' => '1.3.6.1.4.1.2356.11.2.20.13.1.2',
  'lcsSetupLanBridgePriorityMappingEntryPriority' => '1.3.6.1.4.1.2356.11.2.20.13.1.3',
  'lcsSetupLanBridgePriorityMappingEntryPriorityDefinition' => 'LCOS-MIB::lcsSetupLanBridgePriorityMappingEntryPriority',
  'lcsSetupLanBridgeSpanningTree' => '1.3.6.1.4.1.2356.11.2.20.20',
  'lcsSetupLanBridgeSpanningTreeOperating' => '1.3.6.1.4.1.2356.11.2.20.20.1',
  'lcsSetupLanBridgeSpanningTreeOperatingDefinition' => 'LCOS-MIB::lcsSetupLanBridgeSpanningTreeOperating',
  'lcsSetupLanBridgeSpanningTreeBridgePriority' => '1.3.6.1.4.1.2356.11.2.20.20.2',
  'lcsSetupLanBridgeSpanningTreeMaxAge' => '1.3.6.1.4.1.2356.11.2.20.20.5',
  'lcsSetupLanBridgeSpanningTreeHelloTime' => '1.3.6.1.4.1.2356.11.2.20.20.6',
  'lcsSetupLanBridgeSpanningTreeForwardDelay' => '1.3.6.1.4.1.2356.11.2.20.20.7',
  'lcsSetupLanBridgeSpanningTreePortDataTable' => '1.3.6.1.4.1.2356.11.2.20.20.11',
  'lcsSetupLanBridgeSpanningTreePortDataEntry' => '1.3.6.1.4.1.2356.11.2.20.20.11.1',
  'lcsSetupLanBridgeSpanningTreePortDataEntryPort' => '1.3.6.1.4.1.2356.11.2.20.20.11.1.2',
  'lcsSetupLanBridgeSpanningTreePortDataEntryPriority' => '1.3.6.1.4.1.2356.11.2.20.20.11.1.4',
  'lcsSetupLanBridgeSpanningTreePortDataEntryEdgePort' => '1.3.6.1.4.1.2356.11.2.20.20.11.1.6',
  'lcsSetupLanBridgeSpanningTreePortDataEntryEdgePortDefinition' => 'LCOS-MIB::lcsSetupLanBridgeSpanningTreePortDataEntryEdgePort',
  'lcsSetupLanBridgeSpanningTreePortDataEntryPathCostOverride' => '1.3.6.1.4.1.2356.11.2.20.20.11.1.7',
  'lcsSetupLanBridgeSpanningTreeProtocolVersion' => '1.3.6.1.4.1.2356.11.2.20.20.12',
  'lcsSetupLanBridgeSpanningTreeProtocolVersionDefinition' => 'LCOS-MIB::lcsSetupLanBridgeSpanningTreeProtocolVersion',
  'lcsSetupLanBridgeSpanningTreeTransmitHoldCount' => '1.3.6.1.4.1.2356.11.2.20.20.13',
  'lcsSetupLanBridgeSpanningTreePathCostComputation' => '1.3.6.1.4.1.2356.11.2.20.20.14',
  'lcsSetupLanBridgeSpanningTreePathCostComputationDefinition' => 'LCOS-MIB::lcsSetupLanBridgeSpanningTreePathCostComputation',
  'lcsSetupLanBridgeIgmpSnooping' => '1.3.6.1.4.1.2356.11.2.20.30',
  'lcsSetupLanBridgeIgmpSnoopingOperating' => '1.3.6.1.4.1.2356.11.2.20.30.1',
  'lcsSetupLanBridgeIgmpSnoopingOperatingDefinition' => 'LCOS-MIB::lcsSetupLanBridgeIgmpSnoopingOperating',
  'lcsSetupLanBridgeIgmpSnoopingPortSettingsTable' => '1.3.6.1.4.1.2356.11.2.20.30.2',
  'lcsSetupLanBridgeIgmpSnoopingPortSettingsEntry' => '1.3.6.1.4.1.2356.11.2.20.30.2.1',
  'lcsSetupLanBridgeIgmpSnoopingPortSettingsEntryPort' => '1.3.6.1.4.1.2356.11.2.20.30.2.1.1',
  'lcsSetupLanBridgeIgmpSnoopingPortSettingsEntryRouterPort' => '1.3.6.1.4.1.2356.11.2.20.30.2.1.2',
  'lcsSetupLanBridgeIgmpSnoopingPortSettingsEntryRouterPortDefinition' => 'LCOS-MIB::lcsSetupLanBridgeIgmpSnoopingPortSettingsEntryRouterPort',
  'lcsSetupLanBridgeIgmpSnoopingUnregisteredDataPacketHandling' => '1.3.6.1.4.1.2356.11.2.20.30.3',
  'lcsSetupLanBridgeIgmpSnoopingUnregisteredDataPacketHandlingDefinition' => 'LCOS-MIB::lcsSetupLanBridgeIgmpSnoopingUnregisteredDataPacketHandling',
  'lcsSetupLanBridgeIgmpSnoopingSimulatedQueriersTable' => '1.3.6.1.4.1.2356.11.2.20.30.4',
  'lcsSetupLanBridgeIgmpSnoopingSimulatedQueriersEntry' => '1.3.6.1.4.1.2356.11.2.20.30.4.1',
  'lcsSetupLanBridgeIgmpSnoopingSimulatedQueriersEntryName' => '1.3.6.1.4.1.2356.11.2.20.30.4.1.1',
  'lcsSetupLanBridgeIgmpSnoopingSimulatedQueriersEntryOperating' => '1.3.6.1.4.1.2356.11.2.20.30.4.1.2',
  'lcsSetupLanBridgeIgmpSnoopingSimulatedQueriersEntryOperatingDefinition' => 'LCOS-MIB::lcsSetupLanBridgeIgmpSnoopingSimulatedQueriersEntryOperating',
  'lcsSetupLanBridgeIgmpSnoopingSimulatedQueriersEntryBridgeGroup' => '1.3.6.1.4.1.2356.11.2.20.30.4.1.3',
  'lcsSetupLanBridgeIgmpSnoopingSimulatedQueriersEntryBridgeGroupDefinition' => 'LCOS-MIB::lcsSetupLanBridgeIgmpSnoopingSimulatedQueriersEntryBridgeGroup',
  'lcsSetupLanBridgeIgmpSnoopingSimulatedQueriersEntryVlanId' => '1.3.6.1.4.1.2356.11.2.20.30.4.1.4',
  'lcsSetupLanBridgeIgmpSnoopingQueryInterval' => '1.3.6.1.4.1.2356.11.2.20.30.5',
  'lcsSetupLanBridgeIgmpSnoopingQueryResponseInterval' => '1.3.6.1.4.1.2356.11.2.20.30.6',
  'lcsSetupLanBridgeIgmpSnoopingRobustness' => '1.3.6.1.4.1.2356.11.2.20.30.7',
  'lcsSetupLanBridgeIgmpSnoopingStaticMembersTable' => '1.3.6.1.4.1.2356.11.2.20.30.8',
  'lcsSetupLanBridgeIgmpSnoopingStaticMembersEntry' => '1.3.6.1.4.1.2356.11.2.20.30.8.1',
  'lcsSetupLanBridgeIgmpSnoopingStaticMembersEntryAddress' => '1.3.6.1.4.1.2356.11.2.20.30.8.1.1',
  'lcsSetupLanBridgeIgmpSnoopingStaticMembersEntryStaticMembers' => '1.3.6.1.4.1.2356.11.2.20.30.8.1.2',
  'lcsSetupLanBridgeIgmpSnoopingStaticMembersEntryVlanId' => '1.3.6.1.4.1.2356.11.2.20.30.8.1.3',
  'lcsSetupLanBridgeIgmpSnoopingStaticMembersEntryAllowLearning' => '1.3.6.1.4.1.2356.11.2.20.30.8.1.4',
  'lcsSetupLanBridgeIgmpSnoopingStaticMembersEntryAllowLearningDefinition' => 'LCOS-MIB::lcsSetupLanBridgeIgmpSnoopingStaticMembersEntryAllowLearning',
  'lcsSetupLanBridgeIgmpSnoopingAdvertiseInterval' => '1.3.6.1.4.1.2356.11.2.20.30.9',
  'lcsSetupHttp' => '1.3.6.1.4.1.2356.11.2.21',
  'lcsSetupHttpDocumentRoot' => '1.3.6.1.4.1.2356.11.2.21.1',
  'lcsSetupHttpUseCss' => '1.3.6.1.4.1.2356.11.2.21.2',
  'lcsSetupHttpUseCssDefinition' => 'LCOS-MIB::lcsSetupHttpUseCss',
  'lcsSetupHttpFontFamily' => '1.3.6.1.4.1.2356.11.2.21.3',
  'lcsSetupHttpPageHeaders' => '1.3.6.1.4.1.2356.11.2.21.5',
  'lcsSetupHttpPageHeadersDefinition' => 'LCOS-MIB::lcsSetupHttpPageHeaders',
  'lcsSetupHttpErrorPageStyle' => '1.3.6.1.4.1.2356.11.2.21.6',
  'lcsSetupHttpErrorPageStyleDefinition' => 'LCOS-MIB::lcsSetupHttpErrorPageStyle',
  'lcsSetupHttpPort' => '1.3.6.1.4.1.2356.11.2.21.7',
  'lcsSetupHttpSslPort' => '1.3.6.1.4.1.2356.11.2.21.8',
  'lcsSetupHttpMaxTunnelConnections' => '1.3.6.1.4.1.2356.11.2.21.9',
  'lcsSetupHttpTunnelIdleTimeout' => '1.3.6.1.4.1.2356.11.2.21.10',
  'lcsSetupHttpSessionTimeout' => '1.3.6.1.4.1.2356.11.2.21.11',
  'lcsSetupHttpStandardDesign' => '1.3.6.1.4.1.2356.11.2.21.13',
  'lcsSetupHttpStandardDesignDefinition' => 'LCOS-MIB::lcsSetupHttpStandardDesign',
  'lcsSetupHttpShowDeviceInformationTable' => '1.3.6.1.4.1.2356.11.2.21.14',
  'lcsSetupHttpShowDeviceInformationEntry' => '1.3.6.1.4.1.2356.11.2.21.14.1',
  'lcsSetupHttpShowDeviceInformationEntryDeviceInformation' => '1.3.6.1.4.1.2356.11.2.21.14.1.1',
  'lcsSetupHttpShowDeviceInformationEntryDeviceInformationDefinition' => 'LCOS-MIB::lcsSetupHttpShowDeviceInformationEntryDeviceInformation',
  'lcsSetupHttpShowDeviceInformationEntryPosition' => '1.3.6.1.4.1.2356.11.2.21.14.1.2',
  'lcsSetupHttpHttpCompression' => '1.3.6.1.4.1.2356.11.2.21.15',
  'lcsSetupHttpHttpCompressionDefinition' => 'LCOS-MIB::lcsSetupHttpHttpCompression',
  'lcsSetupHttpKeepServerPortsOpenTable' => '1.3.6.1.4.1.2356.11.2.21.16',
  'lcsSetupHttpKeepServerPortsOpenEntry' => '1.3.6.1.4.1.2356.11.2.21.16.1',
  'lcsSetupHttpKeepServerPortsOpenEntryIfc' => '1.3.6.1.4.1.2356.11.2.21.16.1.1',
  'lcsSetupHttpKeepServerPortsOpenEntryIfcDefinition' => 'LCOS-MIB::lcsSetupHttpKeepServerPortsOpenEntryIfc',
  'lcsSetupHttpKeepServerPortsOpenEntryKeepServerPortsOpen' => '1.3.6.1.4.1.2356.11.2.21.16.1.2',
  'lcsSetupHttpKeepServerPortsOpenEntryKeepServerPortsOpenDefinition' => 'LCOS-MIB::lcsSetupHttpKeepServerPortsOpenEntryKeepServerPortsOpen',
  'lcsSetupHttpUseUserProvidedCertificate' => '1.3.6.1.4.1.2356.11.2.21.17',
  'lcsSetupHttpUseUserProvidedCertificateDefinition' => 'LCOS-MIB::lcsSetupHttpUseUserProvidedCertificate',
  'lcsSetupHttpSslVersions' => '1.3.6.1.4.1.2356.11.2.21.18',
  'lcsSetupHttpRolloutWizard' => '1.3.6.1.4.1.2356.11.2.21.20',
  'lcsSetupHttpRolloutWizardOperating' => '1.3.6.1.4.1.2356.11.2.21.20.1',
  'lcsSetupHttpRolloutWizardOperatingDefinition' => 'LCOS-MIB::lcsSetupHttpRolloutWizardOperating',
  'lcsSetupHttpRolloutWizardTitle' => '1.3.6.1.4.1.2356.11.2.21.20.2',
  'lcsSetupHttpRolloutWizardVariablesTable' => '1.3.6.1.4.1.2356.11.2.21.20.3',
  'lcsSetupHttpRolloutWizardVariablesEntry' => '1.3.6.1.4.1.2356.11.2.21.20.3.1',
  'lcsSetupHttpRolloutWizardVariablesEntryIndex' => '1.3.6.1.4.1.2356.11.2.21.20.3.1.1',
  'lcsSetupHttpRolloutWizardVariablesEntryIdent' => '1.3.6.1.4.1.2356.11.2.21.20.3.1.2',
  'lcsSetupHttpRolloutWizardVariablesEntryTitle' => '1.3.6.1.4.1.2356.11.2.21.20.3.1.3',
  'lcsSetupHttpRolloutWizardVariablesEntryType' => '1.3.6.1.4.1.2356.11.2.21.20.3.1.4',
  'lcsSetupHttpRolloutWizardVariablesEntryTypeDefinition' => 'LCOS-MIB::lcsSetupHttpRolloutWizardVariablesEntryType',
  'lcsSetupHttpRolloutWizardVariablesEntryMinValue' => '1.3.6.1.4.1.2356.11.2.21.20.3.1.5',
  'lcsSetupHttpRolloutWizardVariablesEntryMaxValue' => '1.3.6.1.4.1.2356.11.2.21.20.3.1.6',
  'lcsSetupHttpRolloutWizardVariablesEntryDefaultValue' => '1.3.6.1.4.1.2356.11.2.21.20.3.1.7',
  'lcsSetupHttpRolloutWizardActionsTable' => '1.3.6.1.4.1.2356.11.2.21.20.4',
  'lcsSetupHttpRolloutWizardActionsEntry' => '1.3.6.1.4.1.2356.11.2.21.20.4.1',
  'lcsSetupHttpRolloutWizardActionsEntryIndex' => '1.3.6.1.4.1.2356.11.2.21.20.4.1.1',
  'lcsSetupHttpRolloutWizardActionsEntryAction' => '1.3.6.1.4.1.2356.11.2.21.20.4.1.2',
  'lcsSetupHttpRolloutWizardActionsEntryDescription' => '1.3.6.1.4.1.2356.11.2.21.20.4.1.3',
  'lcsSetupHttpRolloutWizardRenumberVariables' => '1.3.6.1.4.1.2356.11.2.21.20.5',
  'lcsSetupHttpRolloutWizardRenumberActions' => '1.3.6.1.4.1.2356.11.2.21.20.6',
  'lcsSetupHttpRolloutWizardDisplayConnectionStatusFor' => '1.3.6.1.4.1.2356.11.2.21.20.7',
  'lcsSetupHttpRolloutWizardUseExtraChecks' => '1.3.6.1.4.1.2356.11.2.21.20.8',
  'lcsSetupHttpRolloutWizardUseExtraChecksDefinition' => 'LCOS-MIB::lcsSetupHttpRolloutWizardUseExtraChecks',
  'lcsSetupHttpFileServer' => '1.3.6.1.4.1.2356.11.2.21.30',
  'lcsSetupHttpFileServerPublicSubdir' => '1.3.6.1.4.1.2356.11.2.21.30.1',
  'lcsSetupHttpFileServerOperating' => '1.3.6.1.4.1.2356.11.2.21.30.2',
  'lcsSetupHttpFileServerOperatingDefinition' => 'LCOS-MIB::lcsSetupHttpFileServerOperating',
  'lcsSetupSyslog' => '1.3.6.1.4.1.2356.11.2.22',
  'lcsSetupSyslogOperating' => '1.3.6.1.4.1.2356.11.2.22.1',
  'lcsSetupSyslogOperatingDefinition' => 'LCOS-MIB::lcsSetupSyslogOperating',
  'lcsSetupSyslogServerTable' => '1.3.6.1.4.1.2356.11.2.22.2',
  'lcsSetupSyslogServerEntry' => '1.3.6.1.4.1.2356.11.2.22.2.1',
  'lcsSetupSyslogServerEntryIdx' => '1.3.6.1.4.1.2356.11.2.22.2.1.1',
  'lcsSetupSyslogServerEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.22.2.1.2',
  'lcsSetupSyslogServerEntrySource' => '1.3.6.1.4.1.2356.11.2.22.2.1.3',
  'lcsSetupSyslogServerEntryLevel' => '1.3.6.1.4.1.2356.11.2.22.2.1.4',
  'lcsSetupSyslogServerEntryLoopbackAddr' => '1.3.6.1.4.1.2356.11.2.22.2.1.6',
  'lcsSetupSyslogFacilityMapperTable' => '1.3.6.1.4.1.2356.11.2.22.3',
  'lcsSetupSyslogFacilityMapperEntry' => '1.3.6.1.4.1.2356.11.2.22.3.1',
  'lcsSetupSyslogFacilityMapperEntrySource' => '1.3.6.1.4.1.2356.11.2.22.3.1.1',
  'lcsSetupSyslogFacilityMapperEntrySourceDefinition' => 'LCOS-MIB::lcsSetupSyslogFacilityMapperEntrySource',
  'lcsSetupSyslogFacilityMapperEntryFacility' => '1.3.6.1.4.1.2356.11.2.22.3.1.2',
  'lcsSetupSyslogFacilityMapperEntryFacilityDefinition' => 'LCOS-MIB::lcsSetupSyslogFacilityMapperEntryFacility',
  'lcsSetupSyslogPort' => '1.3.6.1.4.1.2356.11.2.22.4',
  'lcsSetupSyslogMessagesTableOrder' => '1.3.6.1.4.1.2356.11.2.22.5',
  'lcsSetupSyslogMessagesTableOrderDefinition' => 'LCOS-MIB::lcsSetupSyslogMessagesTableOrder',
  'lcsSetupInterfaces' => '1.3.6.1.4.1.2356.11.2.23',
  'lcsSetupInterfacesS0Table' => '1.3.6.1.4.1.2356.11.2.23.1',
  'lcsSetupInterfacesS0Entry' => '1.3.6.1.4.1.2356.11.2.23.1.1',
  'lcsSetupInterfacesS0EntryIfc' => '1.3.6.1.4.1.2356.11.2.23.1.1.1',
  'lcsSetupInterfacesS0EntryIfcDefinition' => 'LCOS-MIB::lcsSetupInterfacesS0EntryIfc',
  'lcsSetupInterfacesS0EntryProtocol' => '1.3.6.1.4.1.2356.11.2.23.1.1.2',
  'lcsSetupInterfacesS0EntryProtocolDefinition' => 'LCOS-MIB::lcsSetupInterfacesS0EntryProtocol',
  'lcsSetupInterfacesS0EntryLlBChan' => '1.3.6.1.4.1.2356.11.2.23.1.1.7',
  'lcsSetupInterfacesS0EntryLlBChanDefinition' => 'LCOS-MIB::lcsSetupInterfacesS0EntryLlBChan',
  'lcsSetupInterfacesS0EntryDialPrefix' => '1.3.6.1.4.1.2356.11.2.23.1.1.9',
  'lcsSetupInterfacesS0EntryMaxInCalls' => '1.3.6.1.4.1.2356.11.2.23.1.1.13',
  'lcsSetupInterfacesS0EntryMaxInCallsDefinition' => 'LCOS-MIB::lcsSetupInterfacesS0EntryMaxInCalls',
  'lcsSetupInterfacesS0EntryMaxOutCalls' => '1.3.6.1.4.1.2356.11.2.23.1.1.14',
  'lcsSetupInterfacesS0EntryMaxOutCallsDefinition' => 'LCOS-MIB::lcsSetupInterfacesS0EntryMaxOutCalls',
  'lcsSetupInterfacesS0EntryTypeOfInterface' => '1.3.6.1.4.1.2356.11.2.23.1.1.15',
  'lcsSetupInterfacesDslTable' => '1.3.6.1.4.1.2356.11.2.23.4',
  'lcsSetupInterfacesDslEntry' => '1.3.6.1.4.1.2356.11.2.23.4.1',
  'lcsSetupInterfacesDslEntryIfc' => '1.3.6.1.4.1.2356.11.2.23.4.1.1',
  'lcsSetupInterfacesDslEntryIfcDefinition' => 'LCOS-MIB::lcsSetupInterfacesDslEntryIfc',
  'lcsSetupInterfacesDslEntryOperating' => '1.3.6.1.4.1.2356.11.2.23.4.1.2',
  'lcsSetupInterfacesDslEntryOperatingDefinition' => 'LCOS-MIB::lcsSetupInterfacesDslEntryOperating',
  'lcsSetupInterfacesDslEntryConnector' => '1.3.6.1.4.1.2356.11.2.23.4.1.6',
  'lcsSetupInterfacesDslEntryConnectorDefinition' => 'LCOS-MIB::lcsSetupInterfacesDslEntryConnector',
  'lcsSetupInterfacesDslEntryTypeOfInterface' => '1.3.6.1.4.1.2356.11.2.23.4.1.15',
  'lcsSetupInterfacesDslEntryUpstreamRate' => '1.3.6.1.4.1.2356.11.2.23.4.1.16',
  'lcsSetupInterfacesDslEntryExtOverhead' => '1.3.6.1.4.1.2356.11.2.23.4.1.17',
  'lcsSetupInterfacesDslEntryDownstreamRate' => '1.3.6.1.4.1.2356.11.2.23.4.1.18',
  'lcsSetupInterfacesDslEntryLanIfc' => '1.3.6.1.4.1.2356.11.2.23.4.1.23',
  'lcsSetupInterfacesDslEntryLanIfcDefinition' => 'LCOS-MIB::lcsSetupInterfacesDslEntryLanIfc',
  'lcsSetupInterfacesAdslTable' => '1.3.6.1.4.1.2356.11.2.23.6',
  'lcsSetupInterfacesAdslEntry' => '1.3.6.1.4.1.2356.11.2.23.6.1',
  'lcsSetupInterfacesAdslEntryIfc' => '1.3.6.1.4.1.2356.11.2.23.6.1.1',
  'lcsSetupInterfacesAdslEntryIfcDefinition' => 'LCOS-MIB::lcsSetupInterfacesAdslEntryIfc',
  'lcsSetupInterfacesAdslEntryProtocol' => '1.3.6.1.4.1.2356.11.2.23.6.1.2',
  'lcsSetupInterfacesAdslEntryProtocolDefinition' => 'LCOS-MIB::lcsSetupInterfacesAdslEntryProtocol',
  'lcsSetupInterfacesModemMobileTable' => '1.3.6.1.4.1.2356.11.2.23.7',
  'lcsSetupInterfacesModemMobileEntry' => '1.3.6.1.4.1.2356.11.2.23.7.1',
  'lcsSetupInterfacesModemMobileEntryIfc' => '1.3.6.1.4.1.2356.11.2.23.7.1.1',
  'lcsSetupInterfacesModemMobileEntryIfcDefinition' => 'LCOS-MIB::lcsSetupInterfacesModemMobileEntryIfc',
  'lcsSetupInterfacesModemMobileEntryOperating' => '1.3.6.1.4.1.2356.11.2.23.7.1.2',
  'lcsSetupInterfacesModemMobileEntryOperatingDefinition' => 'LCOS-MIB::lcsSetupInterfacesModemMobileEntryOperating',
  'lcsSetupInterfacesModemMobileEntryTypeOfInterface' => '1.3.6.1.4.1.2356.11.2.23.7.1.15',
  'lcsSetupInterfacesModemMobileEntryDataRate' => '1.3.6.1.4.1.2356.11.2.23.7.1.21',
  'lcsSetupInterfacesModemMobileEntryDataRateDefinition' => 'LCOS-MIB::lcsSetupInterfacesModemMobileEntryDataRate',
  'lcsSetupInterfacesModemMobileEntryProfile' => '1.3.6.1.4.1.2356.11.2.23.7.1.22',
  'lcsSetupInterfacesVdslTable' => '1.3.6.1.4.1.2356.11.2.23.8',
  'lcsSetupInterfacesVdslEntry' => '1.3.6.1.4.1.2356.11.2.23.8.1',
  'lcsSetupInterfacesVdslEntryIfc' => '1.3.6.1.4.1.2356.11.2.23.8.1.1',
  'lcsSetupInterfacesVdslEntryIfcDefinition' => 'LCOS-MIB::lcsSetupInterfacesVdslEntryIfc',
  'lcsSetupInterfacesVdslEntryProtocol' => '1.3.6.1.4.1.2356.11.2.23.8.1.2',
  'lcsSetupInterfacesVdslEntryProtocolDefinition' => 'LCOS-MIB::lcsSetupInterfacesVdslEntryProtocol',
  'lcsSetupInterfacesPermanentL1Activation' => '1.3.6.1.4.1.2356.11.2.23.18',
  'lcsSetupInterfacesPermanentL1ActivationDefinition' => 'LCOS-MIB::lcsSetupInterfacesPermanentL1Activation',
  'lcsSetupInterfacesPcmSyncSource' => '1.3.6.1.4.1.2356.11.2.23.19',
  'lcsSetupInterfacesPcmSyncSourceDefinition' => 'LCOS-MIB::lcsSetupInterfacesPcmSyncSource',
  'lcsSetupInterfacesWlan' => '1.3.6.1.4.1.2356.11.2.23.20',
  'lcsSetupInterfacesWlanNetworkTable' => '1.3.6.1.4.1.2356.11.2.23.20.1',
  'lcsSetupInterfacesWlanNetworkEntry' => '1.3.6.1.4.1.2356.11.2.23.20.1.1',
  'lcsSetupInterfacesWlanNetworkEntryIfc' => '1.3.6.1.4.1.2356.11.2.23.20.1.1.1',
  'lcsSetupInterfacesWlanNetworkEntryIfcDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanNetworkEntryIfc',
  'lcsSetupInterfacesWlanNetworkEntryNetworkName' => '1.3.6.1.4.1.2356.11.2.23.20.1.1.2',
  'lcsSetupInterfacesWlanNetworkEntryClosedNetwork' => '1.3.6.1.4.1.2356.11.2.23.20.1.1.4',
  'lcsSetupInterfacesWlanNetworkEntryClosedNetworkDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanNetworkEntryClosedNetwork',
  'lcsSetupInterfacesWlanNetworkEntryOperating' => '1.3.6.1.4.1.2356.11.2.23.20.1.1.8',
  'lcsSetupInterfacesWlanNetworkEntryOperatingDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanNetworkEntryOperating',
  'lcsSetupInterfacesWlanNetworkEntryMacFilter' => '1.3.6.1.4.1.2356.11.2.23.20.1.1.9',
  'lcsSetupInterfacesWlanNetworkEntryMacFilterDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanNetworkEntryMacFilter',
  'lcsSetupInterfacesWlanNetworkEntryMaxStations' => '1.3.6.1.4.1.2356.11.2.23.20.1.1.10',
  'lcsSetupInterfacesWlanNetworkEntryClBrgSupport' => '1.3.6.1.4.1.2356.11.2.23.20.1.1.11',
  'lcsSetupInterfacesWlanNetworkEntryClBrgSupportDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanNetworkEntryClBrgSupport',
  'lcsSetupInterfacesWlanNetworkEntryRadiusAccounting' => '1.3.6.1.4.1.2356.11.2.23.20.1.1.12',
  'lcsSetupInterfacesWlanNetworkEntryRadiusAccountingDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanNetworkEntryRadiusAccounting',
  'lcsSetupInterfacesWlanNetworkEntryInterStationTraffic' => '1.3.6.1.4.1.2356.11.2.23.20.1.1.13',
  'lcsSetupInterfacesWlanNetworkEntryInterStationTrafficDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanNetworkEntryInterStationTraffic',
  'lcsSetupInterfacesWlanNetworkEntryApsd' => '1.3.6.1.4.1.2356.11.2.23.20.1.1.14',
  'lcsSetupInterfacesWlanNetworkEntryApsdDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanNetworkEntryApsd',
  'lcsSetupInterfacesWlanNetworkEntryAironetExtensions' => '1.3.6.1.4.1.2356.11.2.23.20.1.1.15',
  'lcsSetupInterfacesWlanNetworkEntryAironetExtensionsDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanNetworkEntryAironetExtensions',
  'lcsSetupInterfacesWlanNetworkEntryMinClientStrength' => '1.3.6.1.4.1.2356.11.2.23.20.1.1.16',
  'lcsSetupInterfacesWlanTransmissionTable' => '1.3.6.1.4.1.2356.11.2.23.20.2',
  'lcsSetupInterfacesWlanTransmissionEntry' => '1.3.6.1.4.1.2356.11.2.23.20.2.1',
  'lcsSetupInterfacesWlanTransmissionEntryIfc' => '1.3.6.1.4.1.2356.11.2.23.20.2.1.1',
  'lcsSetupInterfacesWlanTransmissionEntryIfcDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanTransmissionEntryIfc',
  'lcsSetupInterfacesWlanTransmissionEntryPacketSize' => '1.3.6.1.4.1.2356.11.2.23.20.2.1.2',
  'lcsSetupInterfacesWlanTransmissionEntryMinTxRate' => '1.3.6.1.4.1.2356.11.2.23.20.2.1.3',
  'lcsSetupInterfacesWlanTransmissionEntryMinTxRateDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanTransmissionEntryMinTxRate',
  'lcsSetupInterfacesWlanTransmissionEntryBasicRate' => '1.3.6.1.4.1.2356.11.2.23.20.2.1.4',
  'lcsSetupInterfacesWlanTransmissionEntryBasicRateDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanTransmissionEntryBasicRate',
  'lcsSetupInterfacesWlanTransmissionEntryRtsThreshold' => '1.3.6.1.4.1.2356.11.2.23.20.2.1.6',
  'lcsSetupInterfacesWlanTransmissionEntry11bPreamble' => '1.3.6.1.4.1.2356.11.2.23.20.2.1.7',
  'lcsSetupInterfacesWlanTransmissionEntry11bPreambleDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanTransmissionEntry11bPreamble',
  'lcsSetupInterfacesWlanTransmissionEntryMaxTxRate' => '1.3.6.1.4.1.2356.11.2.23.20.2.1.9',
  'lcsSetupInterfacesWlanTransmissionEntryMaxTxRateDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanTransmissionEntryMaxTxRate',
  'lcsSetupInterfacesWlanTransmissionEntryMinFragLen' => '1.3.6.1.4.1.2356.11.2.23.20.2.1.10',
  'lcsSetupInterfacesWlanTransmissionEntrySoftRetries' => '1.3.6.1.4.1.2356.11.2.23.20.2.1.11',
  'lcsSetupInterfacesWlanTransmissionEntryHardRetries' => '1.3.6.1.4.1.2356.11.2.23.20.2.1.12',
  'lcsSetupInterfacesWlanTransmissionEntryShortGuardInterval' => '1.3.6.1.4.1.2356.11.2.23.20.2.1.13',
  'lcsSetupInterfacesWlanTransmissionEntryShortGuardIntervalDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanTransmissionEntryShortGuardInterval',
  'lcsSetupInterfacesWlanTransmissionEntryMaxSpatialStreams' => '1.3.6.1.4.1.2356.11.2.23.20.2.1.14',
  'lcsSetupInterfacesWlanTransmissionEntryMaxSpatialStreamsDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanTransmissionEntryMaxSpatialStreams',
  'lcsSetupInterfacesWlanTransmissionEntrySendAggregates' => '1.3.6.1.4.1.2356.11.2.23.20.2.1.15',
  'lcsSetupInterfacesWlanTransmissionEntrySendAggregatesDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanTransmissionEntrySendAggregates',
  'lcsSetupInterfacesWlanTransmissionEntryMinHtMcs' => '1.3.6.1.4.1.2356.11.2.23.20.2.1.16',
  'lcsSetupInterfacesWlanTransmissionEntryMinHtMcsDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanTransmissionEntryMinHtMcs',
  'lcsSetupInterfacesWlanTransmissionEntryMaxHtMcs' => '1.3.6.1.4.1.2356.11.2.23.20.2.1.17',
  'lcsSetupInterfacesWlanTransmissionEntryMaxHtMcsDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanTransmissionEntryMaxHtMcs',
  'lcsSetupInterfacesWlanTransmissionEntryMinSpatialStreams' => '1.3.6.1.4.1.2356.11.2.23.20.2.1.18',
  'lcsSetupInterfacesWlanTransmissionEntryMinSpatialStreamsDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanTransmissionEntryMinSpatialStreams',
  'lcsSetupInterfacesWlanTransmissionEntryEapolRate' => '1.3.6.1.4.1.2356.11.2.23.20.2.1.19',
  'lcsSetupInterfacesWlanTransmissionEntryEapolRateDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanTransmissionEntryEapolRate',
  'lcsSetupInterfacesWlanTransmissionEntryMaxAggrPacketCount' => '1.3.6.1.4.1.2356.11.2.23.20.2.1.20',
  'lcsSetupInterfacesWlanTransmissionEntryProberspRetries' => '1.3.6.1.4.1.2356.11.2.23.20.2.1.21',
  'lcsSetupInterfacesWlanTransmissionEntryReceiveAggregates' => '1.3.6.1.4.1.2356.11.2.23.20.2.1.22',
  'lcsSetupInterfacesWlanTransmissionEntryReceiveAggregatesDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanTransmissionEntryReceiveAggregates',
  'lcsSetupInterfacesWlanEncryptionTable' => '1.3.6.1.4.1.2356.11.2.23.20.3',
  'lcsSetupInterfacesWlanEncryptionEntry' => '1.3.6.1.4.1.2356.11.2.23.20.3.1',
  'lcsSetupInterfacesWlanEncryptionEntryIfc' => '1.3.6.1.4.1.2356.11.2.23.20.3.1.1',
  'lcsSetupInterfacesWlanEncryptionEntryIfcDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanEncryptionEntryIfc',
  'lcsSetupInterfacesWlanEncryptionEntryEncryption' => '1.3.6.1.4.1.2356.11.2.23.20.3.1.2',
  'lcsSetupInterfacesWlanEncryptionEntryEncryptionDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanEncryptionEntryEncryption',
  'lcsSetupInterfacesWlanEncryptionEntryDefaultKey' => '1.3.6.1.4.1.2356.11.2.23.20.3.1.3',
  'lcsSetupInterfacesWlanEncryptionEntryMethod' => '1.3.6.1.4.1.2356.11.2.23.20.3.1.4',
  'lcsSetupInterfacesWlanEncryptionEntryMethodDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanEncryptionEntryMethod',
  'lcsSetupInterfacesWlanEncryptionEntryAuthentication' => '1.3.6.1.4.1.2356.11.2.23.20.3.1.5',
  'lcsSetupInterfacesWlanEncryptionEntryAuthenticationDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanEncryptionEntryAuthentication',
  'lcsSetupInterfacesWlanEncryptionEntryKey' => '1.3.6.1.4.1.2356.11.2.23.20.3.1.6',
  'lcsSetupInterfacesWlanEncryptionEntryWpaVersion' => '1.3.6.1.4.1.2356.11.2.23.20.3.1.9',
  'lcsSetupInterfacesWlanEncryptionEntryWpaVersionDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanEncryptionEntryWpaVersion',
  'lcsSetupInterfacesWlanEncryptionEntryClientEapMethod' => '1.3.6.1.4.1.2356.11.2.23.20.3.1.10',
  'lcsSetupInterfacesWlanEncryptionEntryClientEapMethodDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanEncryptionEntryClientEapMethod',
  'lcsSetupInterfacesWlanEncryptionEntryWpaRekeyingCycle' => '1.3.6.1.4.1.2356.11.2.23.20.3.1.11',
  'lcsSetupInterfacesWlanEncryptionEntryWpa1SessionKeytypes' => '1.3.6.1.4.1.2356.11.2.23.20.3.1.12',
  'lcsSetupInterfacesWlanEncryptionEntryWpa1SessionKeytypesDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanEncryptionEntryWpa1SessionKeytypes',
  'lcsSetupInterfacesWlanEncryptionEntryWpa2SessionKeytypes' => '1.3.6.1.4.1.2356.11.2.23.20.3.1.13',
  'lcsSetupInterfacesWlanEncryptionEntryWpa2SessionKeytypesDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanEncryptionEntryWpa2SessionKeytypes',
  'lcsSetupInterfacesWlanEncryptionEntryProtMgmtFrames' => '1.3.6.1.4.1.2356.11.2.23.20.3.1.14',
  'lcsSetupInterfacesWlanEncryptionEntryProtMgmtFramesDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanEncryptionEntryProtMgmtFrames',
  'lcsSetupInterfacesWlanGroupEncryptionKeysTable' => '1.3.6.1.4.1.2356.11.2.23.20.4',
  'lcsSetupInterfacesWlanGroupEncryptionKeysEntry' => '1.3.6.1.4.1.2356.11.2.23.20.4.1',
  'lcsSetupInterfacesWlanGroupEncryptionKeysEntryIfc' => '1.3.6.1.4.1.2356.11.2.23.20.4.1.1',
  'lcsSetupInterfacesWlanGroupEncryptionKeysEntryIfcDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanGroupEncryptionKeysEntryIfc',
  'lcsSetupInterfacesWlanGroupEncryptionKeysEntryKey2' => '1.3.6.1.4.1.2356.11.2.23.20.4.1.3',
  'lcsSetupInterfacesWlanGroupEncryptionKeysEntryKey3' => '1.3.6.1.4.1.2356.11.2.23.20.4.1.4',
  'lcsSetupInterfacesWlanGroupEncryptionKeysEntryKey4' => '1.3.6.1.4.1.2356.11.2.23.20.4.1.5',
  'lcsSetupInterfacesWlanGroupEncryptionKeysEntryKeytype2' => '1.3.6.1.4.1.2356.11.2.23.20.4.1.7',
  'lcsSetupInterfacesWlanGroupEncryptionKeysEntryKeytype2Definition' => 'LCOS-MIB::lcsSetupInterfacesWlanGroupEncryptionKeysEntryKeytype2',
  'lcsSetupInterfacesWlanGroupEncryptionKeysEntryKeytype3' => '1.3.6.1.4.1.2356.11.2.23.20.4.1.8',
  'lcsSetupInterfacesWlanGroupEncryptionKeysEntryKeytype3Definition' => 'LCOS-MIB::lcsSetupInterfacesWlanGroupEncryptionKeysEntryKeytype3',
  'lcsSetupInterfacesWlanGroupEncryptionKeysEntryKeytype4' => '1.3.6.1.4.1.2356.11.2.23.20.4.1.9',
  'lcsSetupInterfacesWlanGroupEncryptionKeysEntryKeytype4Definition' => 'LCOS-MIB::lcsSetupInterfacesWlanGroupEncryptionKeysEntryKeytype4',
  'lcsSetupInterfacesWlanIntpntSetTable' => '1.3.6.1.4.1.2356.11.2.23.20.5',
  'lcsSetupInterfacesWlanIntpntSetEntry' => '1.3.6.1.4.1.2356.11.2.23.20.5.1',
  'lcsSetupInterfacesWlanIntpntSetEntryIfc' => '1.3.6.1.4.1.2356.11.2.23.20.5.1.1',
  'lcsSetupInterfacesWlanIntpntSetEntryIfcDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanIntpntSetEntryIfc',
  'lcsSetupInterfacesWlanIntpntSetEntryEnable' => '1.3.6.1.4.1.2356.11.2.23.20.5.1.2',
  'lcsSetupInterfacesWlanIntpntSetEntryEnableDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanIntpntSetEntryEnable',
  'lcsSetupInterfacesWlanIntpntSetEntryIsolatedMode' => '1.3.6.1.4.1.2356.11.2.23.20.5.1.9',
  'lcsSetupInterfacesWlanIntpntSetEntryIsolatedModeDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanIntpntSetEntryIsolatedMode',
  'lcsSetupInterfacesWlanIntpntSetEntryChanSelScheme' => '1.3.6.1.4.1.2356.11.2.23.20.5.1.10',
  'lcsSetupInterfacesWlanIntpntSetEntryChanSelSchemeDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanIntpntSetEntryChanSelScheme',
  'lcsSetupInterfacesWlanIntpntSetEntryLinkLossTimeout' => '1.3.6.1.4.1.2356.11.2.23.20.5.1.11',
  'lcsSetupInterfacesWlanIntpntSetEntryKeyHandshakeRole' => '1.3.6.1.4.1.2356.11.2.23.20.5.1.12',
  'lcsSetupInterfacesWlanIntpntSetEntryKeyHandshakeRoleDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanIntpntSetEntryKeyHandshakeRole',
  'lcsSetupInterfacesWlanIntpntSetEntryLocalName' => '1.3.6.1.4.1.2356.11.2.23.20.5.1.13',
  'lcsSetupInterfacesWlanClientModesTable' => '1.3.6.1.4.1.2356.11.2.23.20.6',
  'lcsSetupInterfacesWlanClientModesEntry' => '1.3.6.1.4.1.2356.11.2.23.20.6.1',
  'lcsSetupInterfacesWlanClientModesEntryIfc' => '1.3.6.1.4.1.2356.11.2.23.20.6.1.1',
  'lcsSetupInterfacesWlanClientModesEntryIfcDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanClientModesEntryIfc',
  'lcsSetupInterfacesWlanClientModesEntryCreateIbss' => '1.3.6.1.4.1.2356.11.2.23.20.6.1.2',
  'lcsSetupInterfacesWlanClientModesEntryCreateIbssDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanClientModesEntryCreateIbss',
  'lcsSetupInterfacesWlanClientModesEntryConnectionKeepalive' => '1.3.6.1.4.1.2356.11.2.23.20.6.1.3',
  'lcsSetupInterfacesWlanClientModesEntryConnectionKeepaliveDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanClientModesEntryConnectionKeepalive',
  'lcsSetupInterfacesWlanClientModesEntryNetworkTypes' => '1.3.6.1.4.1.2356.11.2.23.20.6.1.4',
  'lcsSetupInterfacesWlanClientModesEntryNetworkTypesDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanClientModesEntryNetworkTypes',
  'lcsSetupInterfacesWlanClientModesEntryScanBands' => '1.3.6.1.4.1.2356.11.2.23.20.6.1.5',
  'lcsSetupInterfacesWlanClientModesEntryScanBandsDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanClientModesEntryScanBands',
  'lcsSetupInterfacesWlanClientModesEntryPreferredBss' => '1.3.6.1.4.1.2356.11.2.23.20.6.1.6',
  'lcsSetupInterfacesWlanClientModesEntryAddressAdaption' => '1.3.6.1.4.1.2356.11.2.23.20.6.1.7',
  'lcsSetupInterfacesWlanClientModesEntryAddressAdaptionDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanClientModesEntryAddressAdaption',
  'lcsSetupInterfacesWlanClientModesEntryClBrgSupport' => '1.3.6.1.4.1.2356.11.2.23.20.6.1.8',
  'lcsSetupInterfacesWlanClientModesEntryClBrgSupportDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanClientModesEntryClBrgSupport',
  'lcsSetupInterfacesWlanClientModesEntryTxLimit' => '1.3.6.1.4.1.2356.11.2.23.20.6.1.9',
  'lcsSetupInterfacesWlanClientModesEntryRxLimit' => '1.3.6.1.4.1.2356.11.2.23.20.6.1.10',
  'lcsSetupInterfacesWlanClientModesEntrySelectionPreference' => '1.3.6.1.4.1.2356.11.2.23.20.6.1.12',
  'lcsSetupInterfacesWlanClientModesEntrySelectionPreferenceDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanClientModesEntrySelectionPreference',
  'lcsSetupInterfacesWlanOperationalTable' => '1.3.6.1.4.1.2356.11.2.23.20.7',
  'lcsSetupInterfacesWlanOperationalEntry' => '1.3.6.1.4.1.2356.11.2.23.20.7.1',
  'lcsSetupInterfacesWlanOperationalEntryIfc' => '1.3.6.1.4.1.2356.11.2.23.20.7.1.1',
  'lcsSetupInterfacesWlanOperationalEntryIfcDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanOperationalEntryIfc',
  'lcsSetupInterfacesWlanOperationalEntryOperating' => '1.3.6.1.4.1.2356.11.2.23.20.7.1.2',
  'lcsSetupInterfacesWlanOperationalEntryOperatingDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanOperationalEntryOperating',
  'lcsSetupInterfacesWlanOperationalEntryOperationMode' => '1.3.6.1.4.1.2356.11.2.23.20.7.1.3',
  'lcsSetupInterfacesWlanOperationalEntryOperationModeDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanOperationalEntryOperationMode',
  'lcsSetupInterfacesWlanOperationalEntryLinkLedFunction' => '1.3.6.1.4.1.2356.11.2.23.20.7.1.4',
  'lcsSetupInterfacesWlanOperationalEntryLinkLedFunctionDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanOperationalEntryLinkLedFunction',
  'lcsSetupInterfacesWlanOperationalEntryBrokenLinkDetection' => '1.3.6.1.4.1.2356.11.2.23.20.7.1.5',
  'lcsSetupInterfacesWlanOperationalEntryBrokenLinkDetectionDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanOperationalEntryBrokenLinkDetection',
  'lcsSetupInterfacesWlanRadioSettingsTable' => '1.3.6.1.4.1.2356.11.2.23.20.8',
  'lcsSetupInterfacesWlanRadioSettingsEntry' => '1.3.6.1.4.1.2356.11.2.23.20.8.1',
  'lcsSetupInterfacesWlanRadioSettingsEntryIfc' => '1.3.6.1.4.1.2356.11.2.23.20.8.1.1',
  'lcsSetupInterfacesWlanRadioSettingsEntryIfcDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanRadioSettingsEntryIfc',
  'lcsSetupInterfacesWlanRadioSettingsEntryTxPowerReduction' => '1.3.6.1.4.1.2356.11.2.23.20.8.1.2',
  'lcsSetupInterfacesWlanRadioSettingsEntry5ghzMode' => '1.3.6.1.4.1.2356.11.2.23.20.8.1.3',
  'lcsSetupInterfacesWlanRadioSettingsEntry5ghzModeDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanRadioSettingsEntry5ghzMode',
  'lcsSetupInterfacesWlanRadioSettingsEntryMaximumDistance' => '1.3.6.1.4.1.2356.11.2.23.20.8.1.4',
  'lcsSetupInterfacesWlanRadioSettingsEntryRadioBand' => '1.3.6.1.4.1.2356.11.2.23.20.8.1.6',
  'lcsSetupInterfacesWlanRadioSettingsEntryRadioBandDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanRadioSettingsEntryRadioBand',
  'lcsSetupInterfacesWlanRadioSettingsEntrySubbands' => '1.3.6.1.4.1.2356.11.2.23.20.8.1.7',
  'lcsSetupInterfacesWlanRadioSettingsEntrySubbandsDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanRadioSettingsEntrySubbands',
  'lcsSetupInterfacesWlanRadioSettingsEntryRadioChannel' => '1.3.6.1.4.1.2356.11.2.23.20.8.1.8',
  'lcsSetupInterfacesWlanRadioSettingsEntry24ghzMode' => '1.3.6.1.4.1.2356.11.2.23.20.8.1.9',
  'lcsSetupInterfacesWlanRadioSettingsEntry24ghzModeDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanRadioSettingsEntry24ghzMode',
  'lcsSetupInterfacesWlanRadioSettingsEntryApDensity' => '1.3.6.1.4.1.2356.11.2.23.20.8.1.10',
  'lcsSetupInterfacesWlanRadioSettingsEntryApDensityDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanRadioSettingsEntryApDensity',
  'lcsSetupInterfacesWlanRadioSettingsEntryAntennaGain' => '1.3.6.1.4.1.2356.11.2.23.20.8.1.12',
  'lcsSetupInterfacesWlanRadioSettingsEntryChannelList' => '1.3.6.1.4.1.2356.11.2.23.20.8.1.13',
  'lcsSetupInterfacesWlanRadioSettingsEntryBackgroundScan' => '1.3.6.1.4.1.2356.11.2.23.20.8.1.14',
  'lcsSetupInterfacesWlanRadioSettingsEntryDfsRescanHours' => '1.3.6.1.4.1.2356.11.2.23.20.8.1.15',
  'lcsSetupInterfacesWlanRadioSettingsEntryAllow40mhz' => '1.3.6.1.4.1.2356.11.2.23.20.8.1.16',
  'lcsSetupInterfacesWlanRadioSettingsEntryAllow40mhzDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanRadioSettingsEntryAllow40mhz',
  'lcsSetupInterfacesWlanRadioSettingsEntryAntennaMask' => '1.3.6.1.4.1.2356.11.2.23.20.8.1.17',
  'lcsSetupInterfacesWlanRadioSettingsEntryAntennaMaskDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanRadioSettingsEntryAntennaMask',
  'lcsSetupInterfacesWlanRadioSettingsEntryBackgroundScanUnit' => '1.3.6.1.4.1.2356.11.2.23.20.8.1.18',
  'lcsSetupInterfacesWlanRadioSettingsEntryBackgroundScanUnitDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanRadioSettingsEntryBackgroundScanUnit',
  'lcsSetupInterfacesWlanRadioSettingsEntryChannelPairing' => '1.3.6.1.4.1.2356.11.2.23.20.8.1.19',
  'lcsSetupInterfacesWlanRadioSettingsEntryChannelPairingDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanRadioSettingsEntryChannelPairing',
  'lcsSetupInterfacesWlanRadioSettingsEntryPreferredDfsScheme' => '1.3.6.1.4.1.2356.11.2.23.20.8.1.20',
  'lcsSetupInterfacesWlanRadioSettingsEntryPreferredDfsSchemeDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanRadioSettingsEntryPreferredDfsScheme',
  'lcsSetupInterfacesWlanRadioSettingsEntryCacDuration' => '1.3.6.1.4.1.2356.11.2.23.20.8.1.21',
  'lcsSetupInterfacesWlanRadioSettingsEntryForce40mhz' => '1.3.6.1.4.1.2356.11.2.23.20.8.1.22',
  'lcsSetupInterfacesWlanRadioSettingsEntryForce40mhzDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanRadioSettingsEntryForce40mhz',
  'lcsSetupInterfacesWlanPerformanceTable' => '1.3.6.1.4.1.2356.11.2.23.20.9',
  'lcsSetupInterfacesWlanPerformanceEntry' => '1.3.6.1.4.1.2356.11.2.23.20.9.1',
  'lcsSetupInterfacesWlanPerformanceEntryIfc' => '1.3.6.1.4.1.2356.11.2.23.20.9.1.1',
  'lcsSetupInterfacesWlanPerformanceEntryIfcDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanPerformanceEntryIfc',
  'lcsSetupInterfacesWlanPerformanceEntryTxBursting' => '1.3.6.1.4.1.2356.11.2.23.20.9.1.2',
  'lcsSetupInterfacesWlanPerformanceEntryQos' => '1.3.6.1.4.1.2356.11.2.23.20.9.1.5',
  'lcsSetupInterfacesWlanPerformanceEntryQosDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanPerformanceEntryQos',
  'lcsSetupInterfacesWlanBeaconingTable' => '1.3.6.1.4.1.2356.11.2.23.20.10',
  'lcsSetupInterfacesWlanBeaconingEntry' => '1.3.6.1.4.1.2356.11.2.23.20.10.1',
  'lcsSetupInterfacesWlanBeaconingEntryIfc' => '1.3.6.1.4.1.2356.11.2.23.20.10.1.1',
  'lcsSetupInterfacesWlanBeaconingEntryIfcDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanBeaconingEntryIfc',
  'lcsSetupInterfacesWlanBeaconingEntryBeaconPeriod' => '1.3.6.1.4.1.2356.11.2.23.20.10.1.2',
  'lcsSetupInterfacesWlanBeaconingEntryDtimPeriod' => '1.3.6.1.4.1.2356.11.2.23.20.10.1.3',
  'lcsSetupInterfacesWlanBeaconingEntryBeaconOrder' => '1.3.6.1.4.1.2356.11.2.23.20.10.1.4',
  'lcsSetupInterfacesWlanBeaconingEntryBeaconOrderDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanBeaconingEntryBeaconOrder',
  'lcsSetupInterfacesWlanRoamingTable' => '1.3.6.1.4.1.2356.11.2.23.20.11',
  'lcsSetupInterfacesWlanRoamingEntry' => '1.3.6.1.4.1.2356.11.2.23.20.11.1',
  'lcsSetupInterfacesWlanRoamingEntryIfc' => '1.3.6.1.4.1.2356.11.2.23.20.11.1.1',
  'lcsSetupInterfacesWlanRoamingEntryIfcDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanRoamingEntryIfc',
  'lcsSetupInterfacesWlanRoamingEntryBeaconMissThreshold' => '1.3.6.1.4.1.2356.11.2.23.20.11.1.2',
  'lcsSetupInterfacesWlanRoamingEntryRoamingThreshold' => '1.3.6.1.4.1.2356.11.2.23.20.11.1.3',
  'lcsSetupInterfacesWlanRoamingEntryNoRoamingThreshold' => '1.3.6.1.4.1.2356.11.2.23.20.11.1.4',
  'lcsSetupInterfacesWlanRoamingEntryForceRoamingThreshold' => '1.3.6.1.4.1.2356.11.2.23.20.11.1.5',
  'lcsSetupInterfacesWlanRoamingEntrySoftRoaming' => '1.3.6.1.4.1.2356.11.2.23.20.11.1.6',
  'lcsSetupInterfacesWlanRoamingEntrySoftRoamingDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanRoamingEntrySoftRoaming',
  'lcsSetupInterfacesWlanRoamingEntryConnectThreshold' => '1.3.6.1.4.1.2356.11.2.23.20.11.1.7',
  'lcsSetupInterfacesWlanRoamingEntryConnectHoldThreshold' => '1.3.6.1.4.1.2356.11.2.23.20.11.1.8',
  'lcsSetupInterfacesWlanRoamingEntryMinConnectSignalLevel' => '1.3.6.1.4.1.2356.11.2.23.20.11.1.9',
  'lcsSetupInterfacesWlanRoamingEntryMinConnectHoldSignalLevel' => '1.3.6.1.4.1.2356.11.2.23.20.11.1.10',
  'lcsSetupInterfacesWlanRoamingEntryBlockTime' => '1.3.6.1.4.1.2356.11.2.23.20.11.1.11',
  'lcsSetupInterfacesWlanIntpntPeersTable' => '1.3.6.1.4.1.2356.11.2.23.20.12',
  'lcsSetupInterfacesWlanIntpntPeersEntry' => '1.3.6.1.4.1.2356.11.2.23.20.12.1',
  'lcsSetupInterfacesWlanIntpntPeersEntryIfc' => '1.3.6.1.4.1.2356.11.2.23.20.12.1.1',
  'lcsSetupInterfacesWlanIntpntPeersEntryIfcDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanIntpntPeersEntryIfc',
  'lcsSetupInterfacesWlanIntpntPeersEntryRecognizeBy' => '1.3.6.1.4.1.2356.11.2.23.20.12.1.2',
  'lcsSetupInterfacesWlanIntpntPeersEntryRecognizeByDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanIntpntPeersEntryRecognizeBy',
  'lcsSetupInterfacesWlanIntpntPeersEntryMacAddress' => '1.3.6.1.4.1.2356.11.2.23.20.12.1.3',
  'lcsSetupInterfacesWlanIntpntPeersEntryPeerName' => '1.3.6.1.4.1.2356.11.2.23.20.12.1.4',
  'lcsSetupInterfacesWlanIntpntPeersEntryOperating' => '1.3.6.1.4.1.2356.11.2.23.20.12.1.5',
  'lcsSetupInterfacesWlanIntpntPeersEntryOperatingDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanIntpntPeersEntryOperating',
  'lcsSetupInterfacesWlanIntpntPeersEntryTxLimit' => '1.3.6.1.4.1.2356.11.2.23.20.12.1.6',
  'lcsSetupInterfacesWlanIntpntPeersEntryRxLimit' => '1.3.6.1.4.1.2356.11.2.23.20.12.1.7',
  'lcsSetupInterfacesWlanNetworkAlarmLimitsTable' => '1.3.6.1.4.1.2356.11.2.23.20.13',
  'lcsSetupInterfacesWlanNetworkAlarmLimitsEntry' => '1.3.6.1.4.1.2356.11.2.23.20.13.1',
  'lcsSetupInterfacesWlanNetworkAlarmLimitsEntryIfc' => '1.3.6.1.4.1.2356.11.2.23.20.13.1.1',
  'lcsSetupInterfacesWlanNetworkAlarmLimitsEntryIfcDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanNetworkAlarmLimitsEntryIfc',
  'lcsSetupInterfacesWlanNetworkAlarmLimitsEntryPhySignal' => '1.3.6.1.4.1.2356.11.2.23.20.13.1.2',
  'lcsSetupInterfacesWlanNetworkAlarmLimitsEntryTotalRetries' => '1.3.6.1.4.1.2356.11.2.23.20.13.1.3',
  'lcsSetupInterfacesWlanNetworkAlarmLimitsEntryTxErrors' => '1.3.6.1.4.1.2356.11.2.23.20.13.1.4',
  'lcsSetupInterfacesWlanInterpointAlarmLimitsTable' => '1.3.6.1.4.1.2356.11.2.23.20.14',
  'lcsSetupInterfacesWlanInterpointAlarmLimitsEntry' => '1.3.6.1.4.1.2356.11.2.23.20.14.1',
  'lcsSetupInterfacesWlanInterpointAlarmLimitsEntryIfc' => '1.3.6.1.4.1.2356.11.2.23.20.14.1.1',
  'lcsSetupInterfacesWlanInterpointAlarmLimitsEntryIfcDefinition' => 'LCOS-MIB::lcsSetupInterfacesWlanInterpointAlarmLimitsEntryIfc',
  'lcsSetupInterfacesWlanInterpointAlarmLimitsEntryPhySignal' => '1.3.6.1.4.1.2356.11.2.23.20.14.1.2',
  'lcsSetupInterfacesWlanInterpointAlarmLimitsEntryTotalRetries' => '1.3.6.1.4.1.2356.11.2.23.20.14.1.3',
  'lcsSetupInterfacesWlanInterpointAlarmLimitsEntryTxErrors' => '1.3.6.1.4.1.2356.11.2.23.20.14.1.4',
  'lcsSetupInterfacesLanInterfacesTable' => '1.3.6.1.4.1.2356.11.2.23.21',
  'lcsSetupInterfacesLanInterfacesEntry' => '1.3.6.1.4.1.2356.11.2.23.21.1',
  'lcsSetupInterfacesLanInterfacesEntryIfc' => '1.3.6.1.4.1.2356.11.2.23.21.1.1',
  'lcsSetupInterfacesLanInterfacesEntryIfcDefinition' => 'LCOS-MIB::lcsSetupInterfacesLanInterfacesEntryIfc',
  'lcsSetupInterfacesLanInterfacesEntryConnector' => '1.3.6.1.4.1.2356.11.2.23.21.1.2',
  'lcsSetupInterfacesLanInterfacesEntryConnectorDefinition' => 'LCOS-MIB::lcsSetupInterfacesLanInterfacesEntryConnector',
  'lcsSetupInterfacesLanInterfacesEntryMdiMode' => '1.3.6.1.4.1.2356.11.2.23.21.1.3',
  'lcsSetupInterfacesLanInterfacesEntryMdiModeDefinition' => 'LCOS-MIB::lcsSetupInterfacesLanInterfacesEntryMdiMode',
  'lcsSetupInterfacesLanInterfacesEntryClockRole' => '1.3.6.1.4.1.2356.11.2.23.21.1.5',
  'lcsSetupInterfacesLanInterfacesEntryClockRoleDefinition' => 'LCOS-MIB::lcsSetupInterfacesLanInterfacesEntryClockRole',
  'lcsSetupInterfacesLanInterfacesEntryMtu' => '1.3.6.1.4.1.2356.11.2.23.21.1.6',
  'lcsSetupInterfacesLanInterfacesEntryOperating' => '1.3.6.1.4.1.2356.11.2.23.21.1.7',
  'lcsSetupInterfacesLanInterfacesEntryOperatingDefinition' => 'LCOS-MIB::lcsSetupInterfacesLanInterfacesEntryOperating',
  'lcsSetupInterfacesLanInterfacesEntryTxLimit' => '1.3.6.1.4.1.2356.11.2.23.21.1.8',
  'lcsSetupInterfacesLanInterfacesEntryRxLimit' => '1.3.6.1.4.1.2356.11.2.23.21.1.9',
  'lcsSetupInterfacesEthernetPortsTable' => '1.3.6.1.4.1.2356.11.2.23.30',
  'lcsSetupInterfacesEthernetPortsEntry' => '1.3.6.1.4.1.2356.11.2.23.30.1',
  'lcsSetupInterfacesEthernetPortsEntryPort' => '1.3.6.1.4.1.2356.11.2.23.30.1.1',
  'lcsSetupInterfacesEthernetPortsEntryPortDefinition' => 'LCOS-MIB::lcsSetupInterfacesEthernetPortsEntryPort',
  'lcsSetupInterfacesEthernetPortsEntryConnector' => '1.3.6.1.4.1.2356.11.2.23.30.1.2',
  'lcsSetupInterfacesEthernetPortsEntryConnectorDefinition' => 'LCOS-MIB::lcsSetupInterfacesEthernetPortsEntryConnector',
  'lcsSetupInterfacesEthernetPortsEntryPrivateMode' => '1.3.6.1.4.1.2356.11.2.23.30.1.3',
  'lcsSetupInterfacesEthernetPortsEntryPrivateModeDefinition' => 'LCOS-MIB::lcsSetupInterfacesEthernetPortsEntryPrivateMode',
  'lcsSetupInterfacesEthernetPortsEntryAssignment' => '1.3.6.1.4.1.2356.11.2.23.30.1.4',
  'lcsSetupInterfacesEthernetPortsEntryAssignmentDefinition' => 'LCOS-MIB::lcsSetupInterfacesEthernetPortsEntryAssignment',
  'lcsSetupInterfacesEthernetPortsEntryMdiMode' => '1.3.6.1.4.1.2356.11.2.23.30.1.5',
  'lcsSetupInterfacesEthernetPortsEntryMdiModeDefinition' => 'LCOS-MIB::lcsSetupInterfacesEthernetPortsEntryMdiMode',
  'lcsSetupInterfacesEthernetPortsEntryClockRole' => '1.3.6.1.4.1.2356.11.2.23.30.1.6',
  'lcsSetupInterfacesEthernetPortsEntryClockRoleDefinition' => 'LCOS-MIB::lcsSetupInterfacesEthernetPortsEntryClockRole',
  'lcsSetupInterfacesEthernetPortsEntryDownshift' => '1.3.6.1.4.1.2356.11.2.23.30.1.7',
  'lcsSetupInterfacesEthernetPortsEntryDownshiftDefinition' => 'LCOS-MIB::lcsSetupInterfacesEthernetPortsEntryDownshift',
  'lcsSetupInterfacesEthernetPortsEntryPowerSaving' => '1.3.6.1.4.1.2356.11.2.23.30.1.8',
  'lcsSetupInterfacesEthernetPortsEntryPowerSavingDefinition' => 'LCOS-MIB::lcsSetupInterfacesEthernetPortsEntryPowerSaving',
  'lcsSetupInterfacesModem' => '1.3.6.1.4.1.2356.11.2.23.40',
  'lcsSetupInterfacesModemRingCount' => '1.3.6.1.4.1.2356.11.2.23.40.1',
  'lcsSetupInterfacesModemEchoOffCommand' => '1.3.6.1.4.1.2356.11.2.23.40.2',
  'lcsSetupInterfacesModemResetCommand' => '1.3.6.1.4.1.2356.11.2.23.40.3',
  'lcsSetupInterfacesModemInitCommand' => '1.3.6.1.4.1.2356.11.2.23.40.4',
  'lcsSetupInterfacesModemDialCommand' => '1.3.6.1.4.1.2356.11.2.23.40.5',
  'lcsSetupInterfacesModemRequestId' => '1.3.6.1.4.1.2356.11.2.23.40.6',
  'lcsSetupInterfacesModemAnswerCommand' => '1.3.6.1.4.1.2356.11.2.23.40.7',
  'lcsSetupInterfacesModemDisconnectCommand' => '1.3.6.1.4.1.2356.11.2.23.40.8',
  'lcsSetupInterfacesModemEscapeSequence' => '1.3.6.1.4.1.2356.11.2.23.40.9',
  'lcsSetupInterfacesModemEscapePromtDelayMs' => '1.3.6.1.4.1.2356.11.2.23.40.10',
  'lcsSetupInterfacesModemInitDial' => '1.3.6.1.4.1.2356.11.2.23.40.11',
  'lcsSetupInterfacesModemInitAnswer' => '1.3.6.1.4.1.2356.11.2.23.40.12',
  'lcsSetupInterfacesModemCycletimeAtPollS' => '1.3.6.1.4.1.2356.11.2.23.40.13',
  'lcsSetupInterfacesModemAtPollCount' => '1.3.6.1.4.1.2356.11.2.23.40.14',
  'lcsSetupInterfacesMobile' => '1.3.6.1.4.1.2356.11.2.23.41',
  'lcsSetupInterfacesMobileProfilesTable' => '1.3.6.1.4.1.2356.11.2.23.41.1',
  'lcsSetupInterfacesMobileProfilesEntry' => '1.3.6.1.4.1.2356.11.2.23.41.1.1',
  'lcsSetupInterfacesMobileProfilesEntryProfile' => '1.3.6.1.4.1.2356.11.2.23.41.1.1.1',
  'lcsSetupInterfacesMobileProfilesEntryPin' => '1.3.6.1.4.1.2356.11.2.23.41.1.1.2',
  'lcsSetupInterfacesMobileProfilesEntryApn' => '1.3.6.1.4.1.2356.11.2.23.41.1.1.3',
  'lcsSetupInterfacesMobileProfilesEntryNetwork' => '1.3.6.1.4.1.2356.11.2.23.41.1.1.4',
  'lcsSetupInterfacesMobileProfilesEntrySelect' => '1.3.6.1.4.1.2356.11.2.23.41.1.1.5',
  'lcsSetupInterfacesMobileProfilesEntrySelectDefinition' => 'LCOS-MIB::lcsSetupInterfacesMobileProfilesEntrySelect',
  'lcsSetupInterfacesMobileProfilesEntryMode' => '1.3.6.1.4.1.2356.11.2.23.41.1.1.6',
  'lcsSetupInterfacesMobileProfilesEntryModeDefinition' => 'LCOS-MIB::lcsSetupInterfacesMobileProfilesEntryMode',
  'lcsSetupInterfacesMobileProfilesEntryQosDownstreamDataRate' => '1.3.6.1.4.1.2356.11.2.23.41.1.1.7',
  'lcsSetupInterfacesMobileProfilesEntryQosUpstreamDataRate' => '1.3.6.1.4.1.2356.11.2.23.41.1.1.8',
  'lcsSetupInterfacesMobileScanNetworks' => '1.3.6.1.4.1.2356.11.2.23.41.2',
  'lcsSetupInterfacesMobileInputPuk' => '1.3.6.1.4.1.2356.11.2.23.41.3',
  'lcsSetupInterfacesMobileConnectMonitoring' => '1.3.6.1.4.1.2356.11.2.23.41.4',
  'lcsSetupInterfacesMobileConnectMonitoringDefinition' => 'LCOS-MIB::lcsSetupInterfacesMobileConnectMonitoring',
  'lcsSetupInterfacesMobileTries' => '1.3.6.1.4.1.2356.11.2.23.41.5',
  'lcsSetupInterfacesMobileHistoryIntervalSec' => '1.3.6.1.4.1.2356.11.2.23.41.6',
  'lcsSetupInterfacesMobileSyslogEnabled' => '1.3.6.1.4.1.2356.11.2.23.41.7',
  'lcsSetupInterfacesMobileSyslogEnabledDefinition' => 'LCOS-MIB::lcsSetupInterfacesMobileSyslogEnabled',
  'lcsSetupInterfacesMobileEnableHsupa' => '1.3.6.1.4.1.2356.11.2.23.41.8',
  'lcsSetupInterfacesMobileEnableHsupaDefinition' => 'LCOS-MIB::lcsSetupInterfacesMobileEnableHsupa',
  'lcsSetupInterfacesMobileSignalCheckIntervallMin' => '1.3.6.1.4.1.2356.11.2.23.41.9',
  'lcsSetupInterfacesMobileTreshold3gTo2gDb' => '1.3.6.1.4.1.2356.11.2.23.41.10',
  'lcsSetupInterfacesMobileCheckWhileConnected' => '1.3.6.1.4.1.2356.11.2.23.41.11',
  'lcsSetupInterfacesMobileCheckWhileConnectedDefinition' => 'LCOS-MIB::lcsSetupInterfacesMobileCheckWhileConnected',
  'lcsSetupPublicSpotModule' => '1.3.6.1.4.1.2356.11.2.24',
  'lcsSetupPublicSpotModuleAuthenticationMode' => '1.3.6.1.4.1.2356.11.2.24.1',
  'lcsSetupPublicSpotModuleAuthenticationModeDefinition' => 'LCOS-MIB::lcsSetupPublicSpotModuleAuthenticationMode',
  'lcsSetupPublicSpotModuleUserTableTable' => '1.3.6.1.4.1.2356.11.2.24.2',
  'lcsSetupPublicSpotModuleUserTableEntry' => '1.3.6.1.4.1.2356.11.2.24.2.1',
  'lcsSetupPublicSpotModuleUserTableEntryName' => '1.3.6.1.4.1.2356.11.2.24.2.1.1',
  'lcsSetupPublicSpotModuleUserTableEntryPassword' => '1.3.6.1.4.1.2356.11.2.24.2.1.2',
  'lcsSetupPublicSpotModuleUserTableEntryMacAddress' => '1.3.6.1.4.1.2356.11.2.24.2.1.3',
  'lcsSetupPublicSpotModuleUserTableEntryComment' => '1.3.6.1.4.1.2356.11.2.24.2.1.4',
  'lcsSetupPublicSpotModuleUserTableEntryProvider' => '1.3.6.1.4.1.2356.11.2.24.2.1.5',
  'lcsSetupPublicSpotModuleUserTableEntryExpiry' => '1.3.6.1.4.1.2356.11.2.24.2.1.6',
  'lcsSetupPublicSpotModuleProviderTableTable' => '1.3.6.1.4.1.2356.11.2.24.3',
  'lcsSetupPublicSpotModuleProviderTableEntry' => '1.3.6.1.4.1.2356.11.2.24.3.1',
  'lcsSetupPublicSpotModuleProviderTableEntryProvider' => '1.3.6.1.4.1.2356.11.2.24.3.1.1',
  'lcsSetupPublicSpotModuleProviderTableEntryAuthServerAddress' => '1.3.6.1.4.1.2356.11.2.24.3.1.2',
  'lcsSetupPublicSpotModuleProviderTableEntryAuthServerPort' => '1.3.6.1.4.1.2356.11.2.24.3.1.3',
  'lcsSetupPublicSpotModuleProviderTableEntryAuthServerSecret' => '1.3.6.1.4.1.2356.11.2.24.3.1.4',
  'lcsSetupPublicSpotModuleProviderTableEntryAccServerAddress' => '1.3.6.1.4.1.2356.11.2.24.3.1.5',
  'lcsSetupPublicSpotModuleProviderTableEntryAccServerPort' => '1.3.6.1.4.1.2356.11.2.24.3.1.6',
  'lcsSetupPublicSpotModuleProviderTableEntryAccServerSecret' => '1.3.6.1.4.1.2356.11.2.24.3.1.7',
  'lcsSetupPublicSpotModuleProviderTableEntryBackup' => '1.3.6.1.4.1.2356.11.2.24.3.1.8',
  'lcsSetupPublicSpotModuleProviderTableEntryAuthServerLoopbackAddr' => '1.3.6.1.4.1.2356.11.2.24.3.1.9',
  'lcsSetupPublicSpotModuleProviderTableEntryAccServerLoopbackAddr' => '1.3.6.1.4.1.2356.11.2.24.3.1.10',
  'lcsSetupPublicSpotModuleProviderTableEntryAuthServerProtocol' => '1.3.6.1.4.1.2356.11.2.24.3.1.11',
  'lcsSetupPublicSpotModuleProviderTableEntryAuthServerProtocolDefinition' => 'LCOS-MIB::lcsSetupPublicSpotModuleProviderTableEntryAuthServerProtocol',
  'lcsSetupPublicSpotModuleProviderTableEntryAccServerProtocol' => '1.3.6.1.4.1.2356.11.2.24.3.1.12',
  'lcsSetupPublicSpotModuleProviderTableEntryAccServerProtocolDefinition' => 'LCOS-MIB::lcsSetupPublicSpotModuleProviderTableEntryAccServerProtocol',
  'lcsSetupPublicSpotModuleTrafficLimitBytes' => '1.3.6.1.4.1.2356.11.2.24.5',
  'lcsSetupPublicSpotModuleServerSubdir' => '1.3.6.1.4.1.2356.11.2.24.6',
  'lcsSetupPublicSpotModuleAccountingCycle' => '1.3.6.1.4.1.2356.11.2.24.7',
  'lcsSetupPublicSpotModulePageTableTable' => '1.3.6.1.4.1.2356.11.2.24.8',
  'lcsSetupPublicSpotModulePageTableEntry' => '1.3.6.1.4.1.2356.11.2.24.8.1',
  'lcsSetupPublicSpotModulePageTableEntryPage' => '1.3.6.1.4.1.2356.11.2.24.8.1.1',
  'lcsSetupPublicSpotModulePageTableEntryPageDefinition' => 'LCOS-MIB::lcsSetupPublicSpotModulePageTableEntryPage',
  'lcsSetupPublicSpotModulePageTableEntryUrl' => '1.3.6.1.4.1.2356.11.2.24.8.1.2',
  'lcsSetupPublicSpotModulePageTableEntryFallback' => '1.3.6.1.4.1.2356.11.2.24.8.1.3',
  'lcsSetupPublicSpotModulePageTableEntryFallbackDefinition' => 'LCOS-MIB::lcsSetupPublicSpotModulePageTableEntryFallback',
  'lcsSetupPublicSpotModulePageTableEntryType' => '1.3.6.1.4.1.2356.11.2.24.8.1.4',
  'lcsSetupPublicSpotModulePageTableEntryTypeDefinition' => 'LCOS-MIB::lcsSetupPublicSpotModulePageTableEntryType',
  'lcsSetupPublicSpotModulePageTableEntryLoopbackAddr' => '1.3.6.1.4.1.2356.11.2.24.8.1.5',
  'lcsSetupPublicSpotModuleRoamingSecret' => '1.3.6.1.4.1.2356.11.2.24.9',
  'lcsSetupPublicSpotModuleCommunicationPort' => '1.3.6.1.4.1.2356.11.2.24.12',
  'lcsSetupPublicSpotModuleIdleTimeout' => '1.3.6.1.4.1.2356.11.2.24.14',
  'lcsSetupPublicSpotModulePortTableTable' => '1.3.6.1.4.1.2356.11.2.24.15',
  'lcsSetupPublicSpotModulePortTableEntry' => '1.3.6.1.4.1.2356.11.2.24.15.1',
  'lcsSetupPublicSpotModulePortTableEntryPort' => '1.3.6.1.4.1.2356.11.2.24.15.1.2',
  'lcsSetupPublicSpotModulePortTableEntryAuthenticationNecessary' => '1.3.6.1.4.1.2356.11.2.24.15.1.3',
  'lcsSetupPublicSpotModulePortTableEntryAuthenticationNecessaryDefinition' => 'LCOS-MIB::lcsSetupPublicSpotModulePortTableEntryAuthenticationNecessary',
  'lcsSetupPublicSpotModuleAutoCleanupUserTable' => '1.3.6.1.4.1.2356.11.2.24.16',
  'lcsSetupPublicSpotModuleAutoCleanupUserTableDefinition' => 'LCOS-MIB::lcsSetupPublicSpotModuleAutoCleanupUserTable',
  'lcsSetupPublicSpotModuleProvideServerDatabase' => '1.3.6.1.4.1.2356.11.2.24.17',
  'lcsSetupPublicSpotModuleProvideServerDatabaseDefinition' => 'LCOS-MIB::lcsSetupPublicSpotModuleProvideServerDatabase',
  'lcsSetupPublicSpotModuleDisallowMultipleLogin' => '1.3.6.1.4.1.2356.11.2.24.18',
  'lcsSetupPublicSpotModuleDisallowMultipleLoginDefinition' => 'LCOS-MIB::lcsSetupPublicSpotModuleDisallowMultipleLogin',
  'lcsSetupPublicSpotModuleAddUserWizard' => '1.3.6.1.4.1.2356.11.2.24.19',
  'lcsSetupPublicSpotModuleAddUserWizardUsernamePattern' => '1.3.6.1.4.1.2356.11.2.24.19.2',
  'lcsSetupPublicSpotModuleAddUserWizardPasswordLength' => '1.3.6.1.4.1.2356.11.2.24.19.3',
  'lcsSetupPublicSpotModuleAddUserWizardSsid' => '1.3.6.1.4.1.2356.11.2.24.19.4',
  'lcsSetupPublicSpotModuleAddUserWizardDefaultRuntimeTable' => '1.3.6.1.4.1.2356.11.2.24.19.5',
  'lcsSetupPublicSpotModuleAddUserWizardDefaultRuntimeEntry' => '1.3.6.1.4.1.2356.11.2.24.19.5.1',
  'lcsSetupPublicSpotModuleAddUserWizardDefaultRuntimeEntryRuntime' => '1.3.6.1.4.1.2356.11.2.24.19.5.1.1',
  'lcsSetupPublicSpotModuleAddUserWizardDefaultRuntimeEntryUnit' => '1.3.6.1.4.1.2356.11.2.24.19.5.1.2',
  'lcsSetupPublicSpotModuleAddUserWizardDefaultRuntimeEntryUnitDefinition' => 'LCOS-MIB::lcsSetupPublicSpotModuleAddUserWizardDefaultRuntimeEntryUnit',
  'lcsSetupPublicSpotModuleAddUserWizardCommentFieldsTable' => '1.3.6.1.4.1.2356.11.2.24.19.6',
  'lcsSetupPublicSpotModuleAddUserWizardCommentFieldsEntry' => '1.3.6.1.4.1.2356.11.2.24.19.6.1',
  'lcsSetupPublicSpotModuleAddUserWizardCommentFieldsEntryFieldName' => '1.3.6.1.4.1.2356.11.2.24.19.6.1.1',
  'lcsSetupPublicSpotModuleAddUserWizardDefaultStartingTime' => '1.3.6.1.4.1.2356.11.2.24.19.7',
  'lcsSetupPublicSpotModuleAddUserWizardDefaultStartingTimeDefinition' => 'LCOS-MIB::lcsSetupPublicSpotModuleAddUserWizardDefaultStartingTime',
  'lcsSetupPublicSpotModuleAddUserWizardPrintCommentsOnVoucher' => '1.3.6.1.4.1.2356.11.2.24.19.8',
  'lcsSetupPublicSpotModuleAddUserWizardPrintCommentsOnVoucherDefinition' => 'LCOS-MIB::lcsSetupPublicSpotModuleAddUserWizardPrintCommentsOnVoucher',
  'lcsSetupPublicSpotModuleAddUserWizardMaxVoucherValPeriod' => '1.3.6.1.4.1.2356.11.2.24.19.9',
  'lcsSetupPublicSpotModuleAddUserWizardAvailableExpiryMethods' => '1.3.6.1.4.1.2356.11.2.24.19.10',
  'lcsSetupPublicSpotModuleAddUserWizardAvailableExpiryMethodsDefinition' => 'LCOS-MIB::lcsSetupPublicSpotModuleAddUserWizardAvailableExpiryMethods',
  'lcsSetupPublicSpotModuleAddUserWizardSsidTableTable' => '1.3.6.1.4.1.2356.11.2.24.19.11',
  'lcsSetupPublicSpotModuleAddUserWizardSsidTableEntry' => '1.3.6.1.4.1.2356.11.2.24.19.11.1',
  'lcsSetupPublicSpotModuleAddUserWizardSsidTableEntryNetworkName' => '1.3.6.1.4.1.2356.11.2.24.19.11.1.1',
  'lcsSetupPublicSpotModuleAddUserWizardSsidTableEntryDefault' => '1.3.6.1.4.1.2356.11.2.24.19.11.1.2',
  'lcsSetupPublicSpotModuleAddUserWizardSsidTableEntryDefaultDefinition' => 'LCOS-MIB::lcsSetupPublicSpotModuleAddUserWizardSsidTableEntryDefault',
  'lcsSetupPublicSpotModuleVlanTableTable' => '1.3.6.1.4.1.2356.11.2.24.20',
  'lcsSetupPublicSpotModuleVlanTableEntry' => '1.3.6.1.4.1.2356.11.2.24.20.1',
  'lcsSetupPublicSpotModuleVlanTableEntryVlanId' => '1.3.6.1.4.1.2356.11.2.24.20.1.1',
  'lcsSetupPublicSpotModuleLoginPageType' => '1.3.6.1.4.1.2356.11.2.24.21',
  'lcsSetupPublicSpotModuleLoginPageTypeDefinition' => 'LCOS-MIB::lcsSetupPublicSpotModuleLoginPageType',
  'lcsSetupPublicSpotModuleDeviceHostname' => '1.3.6.1.4.1.2356.11.2.24.22',
  'lcsSetupPublicSpotModuleMacAddressTableTable' => '1.3.6.1.4.1.2356.11.2.24.23',
  'lcsSetupPublicSpotModuleMacAddressTableEntry' => '1.3.6.1.4.1.2356.11.2.24.23.1',
  'lcsSetupPublicSpotModuleMacAddressTableEntryMacAddress' => '1.3.6.1.4.1.2356.11.2.24.23.1.1',
  'lcsSetupPublicSpotModuleMacAddressTableEntryUserName' => '1.3.6.1.4.1.2356.11.2.24.23.1.2',
  'lcsSetupPublicSpotModuleMacAddressTableEntryProvider' => '1.3.6.1.4.1.2356.11.2.24.23.1.3',
  'lcsSetupPublicSpotModuleMacAddressCheckProvider' => '1.3.6.1.4.1.2356.11.2.24.24',
  'lcsSetupPublicSpotModuleMacAddressCheckCacheTime' => '1.3.6.1.4.1.2356.11.2.24.25',
  'lcsSetupPublicSpotModuleStationTableLimit' => '1.3.6.1.4.1.2356.11.2.24.26',
  'lcsSetupPublicSpotModuleFreeServer' => '1.3.6.1.4.1.2356.11.2.24.30',
  'lcsSetupPublicSpotModuleFreeNetworksTable' => '1.3.6.1.4.1.2356.11.2.24.31',
  'lcsSetupPublicSpotModuleFreeNetworksEntry' => '1.3.6.1.4.1.2356.11.2.24.31.1',
  'lcsSetupPublicSpotModuleFreeNetworksEntryHostName' => '1.3.6.1.4.1.2356.11.2.24.31.1.1',
  'lcsSetupPublicSpotModuleFreeNetworksEntryMask' => '1.3.6.1.4.1.2356.11.2.24.31.1.2',
  'lcsSetupRadius' => '1.3.6.1.4.1.2356.11.2.25',
  'lcsSetupRadiusAuthTimeout' => '1.3.6.1.4.1.2356.11.2.25.4',
  'lcsSetupRadiusAuthRetry' => '1.3.6.1.4.1.2356.11.2.25.5',
  'lcsSetupRadiusBackupQueryStrategy' => '1.3.6.1.4.1.2356.11.2.25.9',
  'lcsSetupRadiusBackupQueryStrategyDefinition' => 'LCOS-MIB::lcsSetupRadiusBackupQueryStrategy',
  'lcsSetupRadiusServer' => '1.3.6.1.4.1.2356.11.2.25.10',
  'lcsSetupRadiusServerAuthentificationPort' => '1.3.6.1.4.1.2356.11.2.25.10.1',
  'lcsSetupRadiusServerClientsTable' => '1.3.6.1.4.1.2356.11.2.25.10.2',
  'lcsSetupRadiusServerClientsEntry' => '1.3.6.1.4.1.2356.11.2.25.10.2.1',
  'lcsSetupRadiusServerClientsEntryIpNetwork' => '1.3.6.1.4.1.2356.11.2.25.10.2.1.1',
  'lcsSetupRadiusServerClientsEntrySecret' => '1.3.6.1.4.1.2356.11.2.25.10.2.1.2',
  'lcsSetupRadiusServerClientsEntryIpNetmask' => '1.3.6.1.4.1.2356.11.2.25.10.2.1.3',
  'lcsSetupRadiusServerClientsEntryProtocols' => '1.3.6.1.4.1.2356.11.2.25.10.2.1.4',
  'lcsSetupRadiusServerClientsEntryProtocolsDefinition' => 'LCOS-MIB::lcsSetupRadiusServerClientsEntryProtocols',
  'lcsSetupRadiusServerForwardServersTable' => '1.3.6.1.4.1.2356.11.2.25.10.3',
  'lcsSetupRadiusServerForwardServersEntry' => '1.3.6.1.4.1.2356.11.2.25.10.3.1',
  'lcsSetupRadiusServerForwardServersEntryRealm' => '1.3.6.1.4.1.2356.11.2.25.10.3.1.1',
  'lcsSetupRadiusServerForwardServersEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.25.10.3.1.2',
  'lcsSetupRadiusServerForwardServersEntryPort' => '1.3.6.1.4.1.2356.11.2.25.10.3.1.3',
  'lcsSetupRadiusServerForwardServersEntrySecret' => '1.3.6.1.4.1.2356.11.2.25.10.3.1.4',
  'lcsSetupRadiusServerForwardServersEntryBackup' => '1.3.6.1.4.1.2356.11.2.25.10.3.1.5',
  'lcsSetupRadiusServerForwardServersEntryLoopbackAddr' => '1.3.6.1.4.1.2356.11.2.25.10.3.1.6',
  'lcsSetupRadiusServerForwardServersEntryProtocol' => '1.3.6.1.4.1.2356.11.2.25.10.3.1.7',
  'lcsSetupRadiusServerForwardServersEntryProtocolDefinition' => 'LCOS-MIB::lcsSetupRadiusServerForwardServersEntryProtocol',
  'lcsSetupRadiusServerForwardServersEntryAccntIpAddress' => '1.3.6.1.4.1.2356.11.2.25.10.3.1.8',
  'lcsSetupRadiusServerForwardServersEntryAccntPort' => '1.3.6.1.4.1.2356.11.2.25.10.3.1.9',
  'lcsSetupRadiusServerForwardServersEntryAccntSecret' => '1.3.6.1.4.1.2356.11.2.25.10.3.1.10',
  'lcsSetupRadiusServerForwardServersEntryAccntLoopbackAddr' => '1.3.6.1.4.1.2356.11.2.25.10.3.1.11',
  'lcsSetupRadiusServerForwardServersEntryAccntProtocol' => '1.3.6.1.4.1.2356.11.2.25.10.3.1.12',
  'lcsSetupRadiusServerForwardServersEntryAccntProtocolDefinition' => 'LCOS-MIB::lcsSetupRadiusServerForwardServersEntryAccntProtocol',
  'lcsSetupRadiusServerDefaultRealm' => '1.3.6.1.4.1.2356.11.2.25.10.5',
  'lcsSetupRadiusServerEmptyRealm' => '1.3.6.1.4.1.2356.11.2.25.10.6',
  'lcsSetupRadiusServerUsersTable' => '1.3.6.1.4.1.2356.11.2.25.10.7',
  'lcsSetupRadiusServerUsersEntry' => '1.3.6.1.4.1.2356.11.2.25.10.7.1',
  'lcsSetupRadiusServerUsersEntryUserName' => '1.3.6.1.4.1.2356.11.2.25.10.7.1.1',
  'lcsSetupRadiusServerUsersEntryPassword' => '1.3.6.1.4.1.2356.11.2.25.10.7.1.2',
  'lcsSetupRadiusServerUsersEntryLimitAuthMethods' => '1.3.6.1.4.1.2356.11.2.25.10.7.1.3',
  'lcsSetupRadiusServerUsersEntryVlanId' => '1.3.6.1.4.1.2356.11.2.25.10.7.1.4',
  'lcsSetupRadiusServerUsersEntryCallingStationIdMask' => '1.3.6.1.4.1.2356.11.2.25.10.7.1.5',
  'lcsSetupRadiusServerUsersEntryCalledStationIdMask' => '1.3.6.1.4.1.2356.11.2.25.10.7.1.6',
  'lcsSetupRadiusServerUsersEntryTxLimit' => '1.3.6.1.4.1.2356.11.2.25.10.7.1.7',
  'lcsSetupRadiusServerUsersEntryRxLimit' => '1.3.6.1.4.1.2356.11.2.25.10.7.1.8',
  'lcsSetupRadiusServerUsersEntryMultipleLogin' => '1.3.6.1.4.1.2356.11.2.25.10.7.1.9',
  'lcsSetupRadiusServerUsersEntryMultipleLoginDefinition' => 'LCOS-MIB::lcsSetupRadiusServerUsersEntryMultipleLogin',
  'lcsSetupRadiusServerUsersEntryAbsExpiry' => '1.3.6.1.4.1.2356.11.2.25.10.7.1.10',
  'lcsSetupRadiusServerUsersEntryTimeBudget' => '1.3.6.1.4.1.2356.11.2.25.10.7.1.11',
  'lcsSetupRadiusServerUsersEntryVolumeBudget' => '1.3.6.1.4.1.2356.11.2.25.10.7.1.12',
  'lcsSetupRadiusServerUsersEntryExpiryType' => '1.3.6.1.4.1.2356.11.2.25.10.7.1.13',
  'lcsSetupRadiusServerUsersEntryRelExpiry' => '1.3.6.1.4.1.2356.11.2.25.10.7.1.14',
  'lcsSetupRadiusServerUsersEntryComment' => '1.3.6.1.4.1.2356.11.2.25.10.7.1.15',
  'lcsSetupRadiusServerUsersEntryServiceType' => '1.3.6.1.4.1.2356.11.2.25.10.7.1.16',
  'lcsSetupRadiusServerUsersEntryServiceTypeDefinition' => 'LCOS-MIB::lcsSetupRadiusServerUsersEntryServiceType',
  'lcsSetupRadiusServerEap' => '1.3.6.1.4.1.2356.11.2.25.10.10',
  'lcsSetupRadiusServerEapTunnelServer' => '1.3.6.1.4.1.2356.11.2.25.10.10.1',
  'lcsSetupRadiusServerEapTlsCheckUsername' => '1.3.6.1.4.1.2356.11.2.25.10.10.2',
  'lcsSetupRadiusServerEapTlsCheckUsernameDefinition' => 'LCOS-MIB::lcsSetupRadiusServerEapTlsCheckUsername',
  'lcsSetupRadiusServerEapReauthPeriod' => '1.3.6.1.4.1.2356.11.2.25.10.10.3',
  'lcsSetupRadiusServerEapRetransmitTimeout' => '1.3.6.1.4.1.2356.11.2.25.10.10.4',
  'lcsSetupRadiusServerEapTtlsDefaultTunnelMethod' => '1.3.6.1.4.1.2356.11.2.25.10.10.5',
  'lcsSetupRadiusServerEapTtlsDefaultTunnelMethodDefinition' => 'LCOS-MIB::lcsSetupRadiusServerEapTtlsDefaultTunnelMethod',
  'lcsSetupRadiusServerEapPeapDefaultTunnelMethod' => '1.3.6.1.4.1.2356.11.2.25.10.10.6',
  'lcsSetupRadiusServerEapPeapDefaultTunnelMethodDefinition' => 'LCOS-MIB::lcsSetupRadiusServerEapPeapDefaultTunnelMethod',
  'lcsSetupRadiusServerEapDefaultMethod' => '1.3.6.1.4.1.2356.11.2.25.10.10.7',
  'lcsSetupRadiusServerEapDefaultMethodDefinition' => 'LCOS-MIB::lcsSetupRadiusServerEapDefaultMethod',
  'lcsSetupRadiusServerEapDefaultMtu' => '1.3.6.1.4.1.2356.11.2.25.10.10.8',
  'lcsSetupRadiusServerEapAllowMethodsTable' => '1.3.6.1.4.1.2356.11.2.25.10.10.9',
  'lcsSetupRadiusServerEapAllowMethodsEntry' => '1.3.6.1.4.1.2356.11.2.25.10.10.9.1',
  'lcsSetupRadiusServerEapAllowMethodsEntryMethod' => '1.3.6.1.4.1.2356.11.2.25.10.10.9.1.1',
  'lcsSetupRadiusServerEapAllowMethodsEntryMethodDefinition' => 'LCOS-MIB::lcsSetupRadiusServerEapAllowMethodsEntryMethod',
  'lcsSetupRadiusServerEapAllowMethodsEntryAllow' => '1.3.6.1.4.1.2356.11.2.25.10.10.9.1.2',
  'lcsSetupRadiusServerEapAllowMethodsEntryAllowDefinition' => 'LCOS-MIB::lcsSetupRadiusServerEapAllowMethodsEntryAllow',
  'lcsSetupRadiusServerEapMschapv2BackendServer' => '1.3.6.1.4.1.2356.11.2.25.10.10.10',
  'lcsSetupRadiusServerAccountingPort' => '1.3.6.1.4.1.2356.11.2.25.10.11',
  'lcsSetupRadiusServerAccountingInterimInterval' => '1.3.6.1.4.1.2356.11.2.25.10.12',
  'lcsSetupRadiusServerRadsecPort' => '1.3.6.1.4.1.2356.11.2.25.10.13',
  'lcsSetupRadiusServerAutoCleanupUserTable' => '1.3.6.1.4.1.2356.11.2.25.10.14',
  'lcsSetupRadiusServerAutoCleanupUserTableDefinition' => 'LCOS-MIB::lcsSetupRadiusServerAutoCleanupUserTable',
  'lcsSetupRadiusServerAllowStatusRequests' => '1.3.6.1.4.1.2356.11.2.25.10.15',
  'lcsSetupRadiusServerAllowStatusRequestsDefinition' => 'LCOS-MIB::lcsSetupRadiusServerAllowStatusRequests',
  'lcsSetupNtp' => '1.3.6.1.4.1.2356.11.2.26',
  'lcsSetupNtpServerOperating' => '1.3.6.1.4.1.2356.11.2.26.2',
  'lcsSetupNtpServerOperatingDefinition' => 'LCOS-MIB::lcsSetupNtpServerOperating',
  'lcsSetupNtpBcMode' => '1.3.6.1.4.1.2356.11.2.26.3',
  'lcsSetupNtpBcModeDefinition' => 'LCOS-MIB::lcsSetupNtpBcMode',
  'lcsSetupNtpBcInterval' => '1.3.6.1.4.1.2356.11.2.26.4',
  'lcsSetupNtpRqInterval' => '1.3.6.1.4.1.2356.11.2.26.7',
  'lcsSetupNtpRqAddressTable' => '1.3.6.1.4.1.2356.11.2.26.11',
  'lcsSetupNtpRqAddressEntry' => '1.3.6.1.4.1.2356.11.2.26.11.1',
  'lcsSetupNtpRqAddressEntryRqAddress' => '1.3.6.1.4.1.2356.11.2.26.11.1.1',
  'lcsSetupNtpRqAddressEntryLoopbackAddr' => '1.3.6.1.4.1.2356.11.2.26.11.1.2',
  'lcsSetupNtpRqTries' => '1.3.6.1.4.1.2356.11.2.26.12',
  'lcsSetupMail' => '1.3.6.1.4.1.2356.11.2.27',
  'lcsSetupMailSmtpServer' => '1.3.6.1.4.1.2356.11.2.27.1',
  'lcsSetupMailSmtpPort' => '1.3.6.1.4.1.2356.11.2.27.2',
  'lcsSetupMailPop3Server' => '1.3.6.1.4.1.2356.11.2.27.3',
  'lcsSetupMailPop3Port' => '1.3.6.1.4.1.2356.11.2.27.4',
  'lcsSetupMailUserName' => '1.3.6.1.4.1.2356.11.2.27.5',
  'lcsSetupMailPassword' => '1.3.6.1.4.1.2356.11.2.27.6',
  'lcsSetupMailEMailSender' => '1.3.6.1.4.1.2356.11.2.27.7',
  'lcsSetupMailSendAgainMin' => '1.3.6.1.4.1.2356.11.2.27.8',
  'lcsSetupMailHoldTimeHrs' => '1.3.6.1.4.1.2356.11.2.27.9',
  'lcsSetupMailBuffers' => '1.3.6.1.4.1.2356.11.2.27.10',
  'lcsSetupMailLoopbackAddr' => '1.3.6.1.4.1.2356.11.2.27.11',
  'lcsSetupIeee8021x' => '1.3.6.1.4.1.2356.11.2.30',
  'lcsSetupIeee8021xRadiusServerTable' => '1.3.6.1.4.1.2356.11.2.30.3',
  'lcsSetupIeee8021xRadiusServerEntry' => '1.3.6.1.4.1.2356.11.2.30.3.1',
  'lcsSetupIeee8021xRadiusServerEntryName' => '1.3.6.1.4.1.2356.11.2.30.3.1.1',
  'lcsSetupIeee8021xRadiusServerEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.30.3.1.2',
  'lcsSetupIeee8021xRadiusServerEntryPort' => '1.3.6.1.4.1.2356.11.2.30.3.1.3',
  'lcsSetupIeee8021xRadiusServerEntrySecret' => '1.3.6.1.4.1.2356.11.2.30.3.1.4',
  'lcsSetupIeee8021xRadiusServerEntryBackup' => '1.3.6.1.4.1.2356.11.2.30.3.1.5',
  'lcsSetupIeee8021xRadiusServerEntryLoopbackAddr' => '1.3.6.1.4.1.2356.11.2.30.3.1.6',
  'lcsSetupIeee8021xRadiusServerEntryProtocol' => '1.3.6.1.4.1.2356.11.2.30.3.1.7',
  'lcsSetupIeee8021xRadiusServerEntryProtocolDefinition' => 'LCOS-MIB::lcsSetupIeee8021xRadiusServerEntryProtocol',
  'lcsSetupIeee8021xPortsTable' => '1.3.6.1.4.1.2356.11.2.30.4',
  'lcsSetupIeee8021xPortsEntry' => '1.3.6.1.4.1.2356.11.2.30.4.1',
  'lcsSetupIeee8021xPortsEntryPort' => '1.3.6.1.4.1.2356.11.2.30.4.1.2',
  'lcsSetupIeee8021xPortsEntryPortControl' => '1.3.6.1.4.1.2356.11.2.30.4.1.3',
  'lcsSetupIeee8021xPortsEntryPortControlDefinition' => 'LCOS-MIB::lcsSetupIeee8021xPortsEntryPortControl',
  'lcsSetupIeee8021xPortsEntryReAuthMax' => '1.3.6.1.4.1.2356.11.2.30.4.1.4',
  'lcsSetupIeee8021xPortsEntryMaxReq' => '1.3.6.1.4.1.2356.11.2.30.4.1.5',
  'lcsSetupIeee8021xPortsEntryTxPeriod' => '1.3.6.1.4.1.2356.11.2.30.4.1.6',
  'lcsSetupIeee8021xPortsEntrySuppTimeout' => '1.3.6.1.4.1.2356.11.2.30.4.1.7',
  'lcsSetupIeee8021xPortsEntryServerTimeout' => '1.3.6.1.4.1.2356.11.2.30.4.1.8',
  'lcsSetupIeee8021xPortsEntryQuietPeriod' => '1.3.6.1.4.1.2356.11.2.30.4.1.9',
  'lcsSetupIeee8021xPortsEntryReAuthentication' => '1.3.6.1.4.1.2356.11.2.30.4.1.10',
  'lcsSetupIeee8021xPortsEntryReAuthenticationDefinition' => 'LCOS-MIB::lcsSetupIeee8021xPortsEntryReAuthentication',
  'lcsSetupIeee8021xPortsEntryReAuthInterval' => '1.3.6.1.4.1.2356.11.2.30.4.1.11',
  'lcsSetupIeee8021xPortsEntryKeyTransmission' => '1.3.6.1.4.1.2356.11.2.30.4.1.12',
  'lcsSetupIeee8021xPortsEntryKeyTransmissionDefinition' => 'LCOS-MIB::lcsSetupIeee8021xPortsEntryKeyTransmission',
  'lcsSetupIeee8021xPortsEntryKeyTxInterval' => '1.3.6.1.4.1.2356.11.2.30.4.1.13',
  'lcsSetupPppoeServer' => '1.3.6.1.4.1.2356.11.2.31',
  'lcsSetupPppoeServerOperating' => '1.3.6.1.4.1.2356.11.2.31.1',
  'lcsSetupPppoeServerOperatingDefinition' => 'LCOS-MIB::lcsSetupPppoeServerOperating',
  'lcsSetupPppoeServerNameListTable' => '1.3.6.1.4.1.2356.11.2.31.2',
  'lcsSetupPppoeServerNameListEntry' => '1.3.6.1.4.1.2356.11.2.31.2.1',
  'lcsSetupPppoeServerNameListEntryPeer' => '1.3.6.1.4.1.2356.11.2.31.2.1.1',
  'lcsSetupPppoeServerNameListEntryShTime' => '1.3.6.1.4.1.2356.11.2.31.2.1.2',
  'lcsSetupPppoeServerNameListEntryMacAddress' => '1.3.6.1.4.1.2356.11.2.31.2.1.3',
  'lcsSetupPppoeServerService' => '1.3.6.1.4.1.2356.11.2.31.3',
  'lcsSetupPppoeServerSessionLimit' => '1.3.6.1.4.1.2356.11.2.31.4',
  'lcsSetupPppoeServerPortsTable' => '1.3.6.1.4.1.2356.11.2.31.5',
  'lcsSetupPppoeServerPortsEntry' => '1.3.6.1.4.1.2356.11.2.31.5.1',
  'lcsSetupPppoeServerPortsEntryPort' => '1.3.6.1.4.1.2356.11.2.31.5.1.2',
  'lcsSetupPppoeServerPortsEntryEnablePppoe' => '1.3.6.1.4.1.2356.11.2.31.5.1.3',
  'lcsSetupPppoeServerPortsEntryEnablePppoeDefinition' => 'LCOS-MIB::lcsSetupPppoeServerPortsEntryEnablePppoe',
  'lcsSetupVlan' => '1.3.6.1.4.1.2356.11.2.32',
  'lcsSetupVlanNetworksTable' => '1.3.6.1.4.1.2356.11.2.32.1',
  'lcsSetupVlanNetworksEntry' => '1.3.6.1.4.1.2356.11.2.32.1.1',
  'lcsSetupVlanNetworksEntryName' => '1.3.6.1.4.1.2356.11.2.32.1.1.1',
  'lcsSetupVlanNetworksEntryVlanId' => '1.3.6.1.4.1.2356.11.2.32.1.1.2',
  'lcsSetupVlanNetworksEntryPorts' => '1.3.6.1.4.1.2356.11.2.32.1.1.4',
  'lcsSetupVlanPortTableTable' => '1.3.6.1.4.1.2356.11.2.32.2',
  'lcsSetupVlanPortTableEntry' => '1.3.6.1.4.1.2356.11.2.32.2.1',
  'lcsSetupVlanPortTableEntryPort' => '1.3.6.1.4.1.2356.11.2.32.2.1.1',
  'lcsSetupVlanPortTableEntryAllowAllVlans' => '1.3.6.1.4.1.2356.11.2.32.2.1.4',
  'lcsSetupVlanPortTableEntryAllowAllVlansDefinition' => 'LCOS-MIB::lcsSetupVlanPortTableEntryAllowAllVlans',
  'lcsSetupVlanPortTableEntryPortVlanId' => '1.3.6.1.4.1.2356.11.2.32.2.1.5',
  'lcsSetupVlanPortTableEntryTaggingMode' => '1.3.6.1.4.1.2356.11.2.32.2.1.6',
  'lcsSetupVlanPortTableEntryTaggingModeDefinition' => 'LCOS-MIB::lcsSetupVlanPortTableEntryTaggingMode',
  'lcsSetupVlanOperating' => '1.3.6.1.4.1.2356.11.2.32.4',
  'lcsSetupVlanOperatingDefinition' => 'LCOS-MIB::lcsSetupVlanOperating',
  'lcsSetupVlanTagValue' => '1.3.6.1.4.1.2356.11.2.32.5',
  'lcsSetupPrinter' => '1.3.6.1.4.1.2356.11.2.34',
  'lcsSetupPrinterPrinterTable' => '1.3.6.1.4.1.2356.11.2.34.1',
  'lcsSetupPrinterPrinterEntry' => '1.3.6.1.4.1.2356.11.2.34.1.1',
  'lcsSetupPrinterPrinterEntryPrinter' => '1.3.6.1.4.1.2356.11.2.34.1.1.1',
  'lcsSetupPrinterPrinterEntryRawipPort' => '1.3.6.1.4.1.2356.11.2.34.1.1.2',
  'lcsSetupPrinterPrinterEntryLpdPort' => '1.3.6.1.4.1.2356.11.2.34.1.1.3',
  'lcsSetupPrinterPrinterEntryActiv' => '1.3.6.1.4.1.2356.11.2.34.1.1.4',
  'lcsSetupPrinterPrinterEntryActivDefinition' => 'LCOS-MIB::lcsSetupPrinterPrinterEntryActiv',
  'lcsSetupPrinterPrinterEntryBidirectional' => '1.3.6.1.4.1.2356.11.2.34.1.1.5',
  'lcsSetupPrinterPrinterEntryBidirectionalDefinition' => 'LCOS-MIB::lcsSetupPrinterPrinterEntryBidirectional',
  'lcsSetupPrinterPrinterEntryResetOnOpen' => '1.3.6.1.4.1.2356.11.2.34.1.1.6',
  'lcsSetupPrinterPrinterEntryResetOnOpenDefinition' => 'LCOS-MIB::lcsSetupPrinterPrinterEntryResetOnOpen',
  'lcsSetupPrinterAccessListTable' => '1.3.6.1.4.1.2356.11.2.34.2',
  'lcsSetupPrinterAccessListEntry' => '1.3.6.1.4.1.2356.11.2.34.2.1',
  'lcsSetupPrinterAccessListEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.34.2.1.1',
  'lcsSetupPrinterAccessListEntryIpNetmask' => '1.3.6.1.4.1.2356.11.2.34.2.1.2',
  'lcsSetupPrinterAccessListEntryRtgTag' => '1.3.6.1.4.1.2356.11.2.34.2.1.3',
  'lcsSetupEchoServer' => '1.3.6.1.4.1.2356.11.2.35',
  'lcsSetupEchoServerOperating' => '1.3.6.1.4.1.2356.11.2.35.1',
  'lcsSetupEchoServerOperatingDefinition' => 'LCOS-MIB::lcsSetupEchoServerOperating',
  'lcsSetupEchoServerAccessTableTable' => '1.3.6.1.4.1.2356.11.2.35.2',
  'lcsSetupEchoServerAccessTableEntry' => '1.3.6.1.4.1.2356.11.2.35.2.1',
  'lcsSetupEchoServerAccessTableEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.35.2.1.1',
  'lcsSetupEchoServerAccessTableEntryNetmask' => '1.3.6.1.4.1.2356.11.2.35.2.1.2',
  'lcsSetupEchoServerAccessTableEntryProtokoll' => '1.3.6.1.4.1.2356.11.2.35.2.1.3',
  'lcsSetupEchoServerAccessTableEntryProtokollDefinition' => 'LCOS-MIB::lcsSetupEchoServerAccessTableEntryProtokoll',
  'lcsSetupEchoServerAccessTableEntryActive' => '1.3.6.1.4.1.2356.11.2.35.2.1.4',
  'lcsSetupEchoServerAccessTableEntryActiveDefinition' => 'LCOS-MIB::lcsSetupEchoServerAccessTableEntryActive',
  'lcsSetupEchoServerAccessTableEntryComment' => '1.3.6.1.4.1.2356.11.2.35.2.1.5',
  'lcsSetupEchoServerTcpTimeout' => '1.3.6.1.4.1.2356.11.2.35.3',
  'lcsSetupPerfmon' => '1.3.6.1.4.1.2356.11.2.36',
  'lcsSetupPerfmonRttmonadminTable' => '1.3.6.1.4.1.2356.11.2.36.2',
  'lcsSetupPerfmonRttmonadminEntry' => '1.3.6.1.4.1.2356.11.2.36.2.1',
  'lcsSetupPerfmonRttmonadminEntryIndex' => '1.3.6.1.4.1.2356.11.2.36.2.1.1',
  'lcsSetupPerfmonRttmonadminEntryType' => '1.3.6.1.4.1.2356.11.2.36.2.1.4',
  'lcsSetupPerfmonRttmonadminEntryTypeDefinition' => 'LCOS-MIB::lcsSetupPerfmonRttmonadminEntryType',
  'lcsSetupPerfmonRttmonadminEntryFrequency' => '1.3.6.1.4.1.2356.11.2.36.2.1.6',
  'lcsSetupPerfmonRttmonadminEntryTimeout' => '1.3.6.1.4.1.2356.11.2.36.2.1.7',
  'lcsSetupPerfmonRttmonadminEntryStatus' => '1.3.6.1.4.1.2356.11.2.36.2.1.9',
  'lcsSetupPerfmonRttmonadminEntryStatusDefinition' => 'LCOS-MIB::lcsSetupPerfmonRttmonadminEntryStatus',
  'lcsSetupPerfmonRttmonechoadminTable' => '1.3.6.1.4.1.2356.11.2.36.3',
  'lcsSetupPerfmonRttmonechoadminEntry' => '1.3.6.1.4.1.2356.11.2.36.3.1',
  'lcsSetupPerfmonRttmonechoadminEntryProtocol' => '1.3.6.1.4.1.2356.11.2.36.3.1.1',
  'lcsSetupPerfmonRttmonechoadminEntryProtocolDefinition' => 'LCOS-MIB::lcsSetupPerfmonRttmonechoadminEntryProtocol',
  'lcsSetupPerfmonRttmonechoadminEntryDestinationAddress' => '1.3.6.1.4.1.2356.11.2.36.3.1.2',
  'lcsSetupPerfmonRttmonechoadminEntryPacketSize' => '1.3.6.1.4.1.2356.11.2.36.3.1.3',
  'lcsSetupPerfmonRttmonechoadminEntryDestinationPort' => '1.3.6.1.4.1.2356.11.2.36.3.1.5',
  'lcsSetupPerfmonRttmonechoadminEntryInterval' => '1.3.6.1.4.1.2356.11.2.36.3.1.17',
  'lcsSetupPerfmonRttmonechoadminEntryPacketCount' => '1.3.6.1.4.1.2356.11.2.36.3.1.18',
  'lcsSetupPerfmonRttmonechoadminEntryIndex' => '1.3.6.1.4.1.2356.11.2.36.3.1.255',
  'lcsSetupPerfmonRttmonstatisticsTable' => '1.3.6.1.4.1.2356.11.2.36.4',
  'lcsSetupPerfmonRttmonstatisticsEntry' => '1.3.6.1.4.1.2356.11.2.36.4.1',
  'lcsSetupPerfmonRttmonstatisticsEntryCompletions' => '1.3.6.1.4.1.2356.11.2.36.4.1.2',
  'lcsSetupPerfmonRttmonstatisticsEntryRttCount' => '1.3.6.1.4.1.2356.11.2.36.4.1.4',
  'lcsSetupPerfmonRttmonstatisticsEntryRttSum' => '1.3.6.1.4.1.2356.11.2.36.4.1.5',
  'lcsSetupPerfmonRttmonstatisticsEntryRttMin' => '1.3.6.1.4.1.2356.11.2.36.4.1.8',
  'lcsSetupPerfmonRttmonstatisticsEntryRttMax' => '1.3.6.1.4.1.2356.11.2.36.4.1.9',
  'lcsSetupPerfmonRttmonstatisticsEntryJitterMinPosSd' => '1.3.6.1.4.1.2356.11.2.36.4.1.10',
  'lcsSetupPerfmonRttmonstatisticsEntryJitterMaxPosSd' => '1.3.6.1.4.1.2356.11.2.36.4.1.11',
  'lcsSetupPerfmonRttmonstatisticsEntryJitterCountPosSd' => '1.3.6.1.4.1.2356.11.2.36.4.1.12',
  'lcsSetupPerfmonRttmonstatisticsEntryJitterSumPosSd' => '1.3.6.1.4.1.2356.11.2.36.4.1.13',
  'lcsSetupPerfmonRttmonstatisticsEntryJitterMinPosDs' => '1.3.6.1.4.1.2356.11.2.36.4.1.16',
  'lcsSetupPerfmonRttmonstatisticsEntryJitterMaxPosDs' => '1.3.6.1.4.1.2356.11.2.36.4.1.17',
  'lcsSetupPerfmonRttmonstatisticsEntryJitterCountPosDs' => '1.3.6.1.4.1.2356.11.2.36.4.1.18',
  'lcsSetupPerfmonRttmonstatisticsEntryJitterSumPosDs' => '1.3.6.1.4.1.2356.11.2.36.4.1.19',
  'lcsSetupPerfmonRttmonstatisticsEntryJitterMinNegSd' => '1.3.6.1.4.1.2356.11.2.36.4.1.22',
  'lcsSetupPerfmonRttmonstatisticsEntryJitterMaxNegSd' => '1.3.6.1.4.1.2356.11.2.36.4.1.23',
  'lcsSetupPerfmonRttmonstatisticsEntryJitterCountNegSd' => '1.3.6.1.4.1.2356.11.2.36.4.1.24',
  'lcsSetupPerfmonRttmonstatisticsEntryJitterSumNegSd' => '1.3.6.1.4.1.2356.11.2.36.4.1.25',
  'lcsSetupPerfmonRttmonstatisticsEntryJitterMinNegDs' => '1.3.6.1.4.1.2356.11.2.36.4.1.28',
  'lcsSetupPerfmonRttmonstatisticsEntryJitterMaxNegDs' => '1.3.6.1.4.1.2356.11.2.36.4.1.29',
  'lcsSetupPerfmonRttmonstatisticsEntryJitterCountNegDs' => '1.3.6.1.4.1.2356.11.2.36.4.1.30',
  'lcsSetupPerfmonRttmonstatisticsEntryJitterSumNegDs' => '1.3.6.1.4.1.2356.11.2.36.4.1.31',
  'lcsSetupPerfmonRttmonstatisticsEntryPacketLossSd' => '1.3.6.1.4.1.2356.11.2.36.4.1.34',
  'lcsSetupPerfmonRttmonstatisticsEntryPacketLossDs' => '1.3.6.1.4.1.2356.11.2.36.4.1.35',
  'lcsSetupPerfmonRttmonstatisticsEntryAverageJitter' => '1.3.6.1.4.1.2356.11.2.36.4.1.62',
  'lcsSetupPerfmonRttmonstatisticsEntryAverageJitterSd' => '1.3.6.1.4.1.2356.11.2.36.4.1.63',
  'lcsSetupPerfmonRttmonstatisticsEntryAverageJitterDs' => '1.3.6.1.4.1.2356.11.2.36.4.1.64',
  'lcsSetupPerfmonRttmonstatisticsEntryIndex' => '1.3.6.1.4.1.2356.11.2.36.4.1.255',
  'lcsSetupWlanMngmt' => '1.3.6.1.4.1.2356.11.2.37',
  'lcsSetupWlanMngmtApConf' => '1.3.6.1.4.1.2356.11.2.37.1',
  'lcsSetupWlanMngmtApConfNetwprofilsTable' => '1.3.6.1.4.1.2356.11.2.37.1.1',
  'lcsSetupWlanMngmtApConfNetwprofilsEntry' => '1.3.6.1.4.1.2356.11.2.37.1.1.1',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryName' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.1',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryParentName' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.2',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryLocVal' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.3',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryOperating' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.4',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryOperatingDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfNetwprofilsEntryOperating',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryVlanId' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.5',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryEncryption' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.6',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryEncryptionDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfNetwprofilsEntryEncryption',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryWpa1SessionKeytypes' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.7',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryWpa1SessionKeytypesDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfNetwprofilsEntryWpa1SessionKeytypes',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryWpaVersion' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.8',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryWpaVersionDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfNetwprofilsEntryWpaVersion',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryKey' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.9',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryRadioBand' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.10',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryRadioBandDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfNetwprofilsEntryRadioBand',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryContinuation' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.11',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryMinTxRate' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.12',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryMinTxRateDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfNetwprofilsEntryMinTxRate',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryMaxTxRate' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.13',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryMaxTxRateDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfNetwprofilsEntryMaxTxRate',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryBasicRate' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.14',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryBasicRateDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfNetwprofilsEntryBasicRate',
  'lcsSetupWlanMngmtApConfNetwprofilsEntry11bPreamble' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.15',
  'lcsSetupWlanMngmtApConfNetwprofilsEntry11bPreambleDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfNetwprofilsEntry11bPreamble',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryMacFilter' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.16',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryMacFilterDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfNetwprofilsEntryMacFilter',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryClBrgSupport' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.17',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryClBrgSupportDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfNetwprofilsEntryClBrgSupport',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryMaxStations' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.18',
  'lcsSetupWlanMngmtApConfNetwprofilsEntrySsidBroadcast' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.19',
  'lcsSetupWlanMngmtApConfNetwprofilsEntrySsidBroadcastDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfNetwprofilsEntrySsidBroadcast',
  'lcsSetupWlanMngmtApConfNetwprofilsEntrySsid' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.21',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryMinHtMcs' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.22',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryMinHtMcsDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfNetwprofilsEntryMinHtMcs',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryMaxHtMcs' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.23',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryMaxHtMcsDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfNetwprofilsEntryMaxHtMcs',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryShortGuardInterval' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.24',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryShortGuardIntervalDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfNetwprofilsEntryShortGuardInterval',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryMaxSpatialStreams' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.25',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryMaxSpatialStreamsDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfNetwprofilsEntryMaxSpatialStreams',
  'lcsSetupWlanMngmtApConfNetwprofilsEntrySendAggregates' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.26',
  'lcsSetupWlanMngmtApConfNetwprofilsEntrySendAggregatesDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfNetwprofilsEntrySendAggregates',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryWpa2SessionKeytypes' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.27',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryWpa2SessionKeytypesDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfNetwprofilsEntryWpa2SessionKeytypes',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryRadiusAccounting' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.28',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryRadiusAccountingDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfNetwprofilsEntryRadiusAccounting',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryVlanMode' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.30',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryVlanModeDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfNetwprofilsEntryVlanMode',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryConnectSsidTo' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.32',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryConnectSsidToDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfNetwprofilsEntryConnectSsidTo',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryInterStationTraffic' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.33',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryInterStationTrafficDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfNetwprofilsEntryInterStationTraffic',
  'lcsSetupWlanMngmtApConfNetwprofilsEntryVlanIdnew' => '1.3.6.1.4.1.2356.11.2.37.1.1.1.34',
  'lcsSetupWlanMngmtApConfRadioprofilsTable' => '1.3.6.1.4.1.2356.11.2.37.1.2',
  'lcsSetupWlanMngmtApConfRadioprofilsEntry' => '1.3.6.1.4.1.2356.11.2.37.1.2.1',
  'lcsSetupWlanMngmtApConfRadioprofilsEntryName' => '1.3.6.1.4.1.2356.11.2.37.1.2.1.1',
  'lcsSetupWlanMngmtApConfRadioprofilsEntryParentName' => '1.3.6.1.4.1.2356.11.2.37.1.2.1.2',
  'lcsSetupWlanMngmtApConfRadioprofilsEntryLocVal' => '1.3.6.1.4.1.2356.11.2.37.1.2.1.3',
  'lcsSetupWlanMngmtApConfRadioprofilsEntryCountry' => '1.3.6.1.4.1.2356.11.2.37.1.2.1.4',
  'lcsSetupWlanMngmtApConfRadioprofilsEntryCountryDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfRadioprofilsEntryCountry',
  'lcsSetupWlanMngmtApConfRadioprofilsEntryChannelList' => '1.3.6.1.4.1.2356.11.2.37.1.2.1.5',
  'lcsSetupWlanMngmtApConfRadioprofilsEntry24ghzMode' => '1.3.6.1.4.1.2356.11.2.37.1.2.1.6',
  'lcsSetupWlanMngmtApConfRadioprofilsEntry24ghzModeDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfRadioprofilsEntry24ghzMode',
  'lcsSetupWlanMngmtApConfRadioprofilsEntry5ghzMode' => '1.3.6.1.4.1.2356.11.2.37.1.2.1.7',
  'lcsSetupWlanMngmtApConfRadioprofilsEntry5ghzModeDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfRadioprofilsEntry5ghzMode',
  'lcsSetupWlanMngmtApConfRadioprofilsEntrySubbands' => '1.3.6.1.4.1.2356.11.2.37.1.2.1.8',
  'lcsSetupWlanMngmtApConfRadioprofilsEntrySubbandsDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfRadioprofilsEntrySubbands',
  'lcsSetupWlanMngmtApConfRadioprofilsEntryQos' => '1.3.6.1.4.1.2356.11.2.37.1.2.1.9',
  'lcsSetupWlanMngmtApConfRadioprofilsEntryQosDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfRadioprofilsEntryQos',
  'lcsSetupWlanMngmtApConfRadioprofilsEntryDtimPeriod' => '1.3.6.1.4.1.2356.11.2.37.1.2.1.10',
  'lcsSetupWlanMngmtApConfRadioprofilsEntryBackgroundScan' => '1.3.6.1.4.1.2356.11.2.37.1.2.1.11',
  'lcsSetupWlanMngmtApConfRadioprofilsEntryAntennaGain' => '1.3.6.1.4.1.2356.11.2.37.1.2.1.12',
  'lcsSetupWlanMngmtApConfRadioprofilsEntryTxPowerReduction' => '1.3.6.1.4.1.2356.11.2.37.1.2.1.13',
  'lcsSetupWlanMngmtApConfRadioprofilsEntryMgmtVLANId' => '1.3.6.1.4.1.2356.11.2.37.1.2.1.14',
  'lcsSetupWlanMngmtApConfRadioprofilsEntryIndoorOnlyOperation' => '1.3.6.1.4.1.2356.11.2.37.1.2.1.16',
  'lcsSetupWlanMngmtApConfRadioprofilsEntryIndoorOnlyOperationDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfRadioprofilsEntryIndoorOnlyOperation',
  'lcsSetupWlanMngmtApConfRadioprofilsEntryActVlanModOfMngdAps' => '1.3.6.1.4.1.2356.11.2.37.1.2.1.17',
  'lcsSetupWlanMngmtApConfRadioprofilsEntryActVlanModOfMngdApsDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfRadioprofilsEntryActVlanModOfMngdAps',
  'lcsSetupWlanMngmtApConfRadioprofilsEntryMgmtVlanMode' => '1.3.6.1.4.1.2356.11.2.37.1.2.1.18',
  'lcsSetupWlanMngmtApConfRadioprofilsEntryMgmtVlanModeDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfRadioprofilsEntryMgmtVlanMode',
  'lcsSetupWlanMngmtApConfRadioprofilsEntryMgmtVLANIdnew' => '1.3.6.1.4.1.2356.11.2.37.1.2.1.19',
  'lcsSetupWlanMngmtApConfRadioprofilsEntryReportSeenClients' => '1.3.6.1.4.1.2356.11.2.37.1.2.1.20',
  'lcsSetupWlanMngmtApConfRadioprofilsEntryReportSeenClientsDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfRadioprofilsEntryReportSeenClients',
  'lcsSetupWlanMngmtApConfCommonprofilsTable' => '1.3.6.1.4.1.2356.11.2.37.1.3',
  'lcsSetupWlanMngmtApConfCommonprofilsEntry' => '1.3.6.1.4.1.2356.11.2.37.1.3.1',
  'lcsSetupWlanMngmtApConfCommonprofilsEntryName' => '1.3.6.1.4.1.2356.11.2.37.1.3.1.1',
  'lcsSetupWlanMngmtApConfCommonprofilsEntryNetw' => '1.3.6.1.4.1.2356.11.2.37.1.3.1.2',
  'lcsSetupWlanMngmtApConfCommonprofilsEntryApParams' => '1.3.6.1.4.1.2356.11.2.37.1.3.1.3',
  'lcsSetupWlanMngmtApConfCommonprofilsEntryContr' => '1.3.6.1.4.1.2356.11.2.37.1.3.1.4',
  'lcsSetupWlanMngmtApConfApsTable' => '1.3.6.1.4.1.2356.11.2.37.1.4',
  'lcsSetupWlanMngmtApConfApsEntry' => '1.3.6.1.4.1.2356.11.2.37.1.4.1',
  'lcsSetupWlanMngmtApConfApsEntryMacAddress' => '1.3.6.1.4.1.2356.11.2.37.1.4.1.1',
  'lcsSetupWlanMngmtApConfApsEntryName' => '1.3.6.1.4.1.2356.11.2.37.1.4.1.2',
  'lcsSetupWlanMngmtApConfApsEntryLocation' => '1.3.6.1.4.1.2356.11.2.37.1.4.1.3',
  'lcsSetupWlanMngmtApConfApsEntryProfile' => '1.3.6.1.4.1.2356.11.2.37.1.4.1.4',
  'lcsSetupWlanMngmtApConfApsEntryDeviceParameters' => '1.3.6.1.4.1.2356.11.2.37.1.4.1.5',
  'lcsSetupWlanMngmtApConfApsEntryEncryption' => '1.3.6.1.4.1.2356.11.2.37.1.4.1.6',
  'lcsSetupWlanMngmtApConfApsEntryEncryptionDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfApsEntryEncryption',
  'lcsSetupWlanMngmtApConfApsEntryWlanModule1' => '1.3.6.1.4.1.2356.11.2.37.1.4.1.7',
  'lcsSetupWlanMngmtApConfApsEntryWlanModule1Definition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfApsEntryWlanModule1',
  'lcsSetupWlanMngmtApConfApsEntryWlanModule2' => '1.3.6.1.4.1.2356.11.2.37.1.4.1.8',
  'lcsSetupWlanMngmtApConfApsEntryWlanModule2Definition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfApsEntryWlanModule2',
  'lcsSetupWlanMngmtApConfApsEntryModule1ChannelList' => '1.3.6.1.4.1.2356.11.2.37.1.4.1.9',
  'lcsSetupWlanMngmtApConfApsEntryModule2ChannelList' => '1.3.6.1.4.1.2356.11.2.37.1.4.1.10',
  'lcsSetupWlanMngmtApConfApsEntryOperating' => '1.3.6.1.4.1.2356.11.2.37.1.4.1.11',
  'lcsSetupWlanMngmtApConfApsEntryOperatingDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfApsEntryOperating',
  'lcsSetupWlanMngmtApConfApsEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.37.1.4.1.12',
  'lcsSetupWlanMngmtApConfApsEntryNetmask' => '1.3.6.1.4.1.2356.11.2.37.1.4.1.13',
  'lcsSetupWlanMngmtApConfApsEntryGateway' => '1.3.6.1.4.1.2356.11.2.37.1.4.1.14',
  'lcsSetupWlanMngmtApConfApsEntryAllow40mhz' => '1.3.6.1.4.1.2356.11.2.37.1.4.1.15',
  'lcsSetupWlanMngmtApConfApsEntryAllow40mhzDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfApsEntryAllow40mhz',
  'lcsSetupWlanMngmtApConfApsEntryAntennaMask' => '1.3.6.1.4.1.2356.11.2.37.1.4.1.16',
  'lcsSetupWlanMngmtApConfApsEntryAntennaMaskDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfApsEntryAntennaMask',
  'lcsSetupWlanMngmtApConfApsEntryApIntranet' => '1.3.6.1.4.1.2356.11.2.37.1.4.1.17',
  'lcsSetupWlanMngmtApConfApsEntryManageFirmware' => '1.3.6.1.4.1.2356.11.2.37.1.4.1.18',
  'lcsSetupWlanMngmtApConfApsEntryManageFirmwareDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfApsEntryManageFirmware',
  'lcsSetupWlanMngmtApConfApsEntryMngmtFwAddInfo' => '1.3.6.1.4.1.2356.11.2.37.1.4.1.19',
  'lcsSetupWlanMngmtApConfApsEntryMngmtFwAddInfoDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfApsEntryMngmtFwAddInfo',
  'lcsSetupWlanMngmtApConfApsEntryModule1AntGain' => '1.3.6.1.4.1.2356.11.2.37.1.4.1.20',
  'lcsSetupWlanMngmtApConfApsEntryModule2AntGain' => '1.3.6.1.4.1.2356.11.2.37.1.4.1.21',
  'lcsSetupWlanMngmtApConfApsEntryModule1TxReduct' => '1.3.6.1.4.1.2356.11.2.37.1.4.1.22',
  'lcsSetupWlanMngmtApConfApsEntryModule2TxReduct' => '1.3.6.1.4.1.2356.11.2.37.1.4.1.23',
  'lcsSetupWlanMngmtApConfWlanModul1Default' => '1.3.6.1.4.1.2356.11.2.37.1.5',
  'lcsSetupWlanMngmtApConfWlanModul1DefaultDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfWlanModul1Default',
  'lcsSetupWlanMngmtApConfWlanModul2Default' => '1.3.6.1.4.1.2356.11.2.37.1.6',
  'lcsSetupWlanMngmtApConfWlanModul2DefaultDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfWlanModul2Default',
  'lcsSetupWlanMngmtApConfControlConnectionEncryptionDefault' => '1.3.6.1.4.1.2356.11.2.37.1.7',
  'lcsSetupWlanMngmtApConfControlConnectionEncryptionDefaultDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfControlConnectionEncryptionDefault',
  'lcsSetupWlanMngmtApConfCountryDefault' => '1.3.6.1.4.1.2356.11.2.37.1.8',
  'lcsSetupWlanMngmtApConfCountryDefaultDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfCountryDefault',
  'lcsSetupWlanMngmtApConfApIntranetsTable' => '1.3.6.1.4.1.2356.11.2.37.1.9',
  'lcsSetupWlanMngmtApConfApIntranetsEntry' => '1.3.6.1.4.1.2356.11.2.37.1.9.1',
  'lcsSetupWlanMngmtApConfApIntranetsEntryName' => '1.3.6.1.4.1.2356.11.2.37.1.9.1.1',
  'lcsSetupWlanMngmtApConfApIntranetsEntryParentName' => '1.3.6.1.4.1.2356.11.2.37.1.9.1.2',
  'lcsSetupWlanMngmtApConfApIntranetsEntryLocVal' => '1.3.6.1.4.1.2356.11.2.37.1.9.1.3',
  'lcsSetupWlanMngmtApConfApIntranetsEntryDomainName' => '1.3.6.1.4.1.2356.11.2.37.1.9.1.4',
  'lcsSetupWlanMngmtApConfApIntranetsEntryNetmask' => '1.3.6.1.4.1.2356.11.2.37.1.9.1.5',
  'lcsSetupWlanMngmtApConfApIntranetsEntryGateway' => '1.3.6.1.4.1.2356.11.2.37.1.9.1.6',
  'lcsSetupWlanMngmtApConfApIntranetsEntryPrimaryDnsSrv' => '1.3.6.1.4.1.2356.11.2.37.1.9.1.7',
  'lcsSetupWlanMngmtApConfApIntranetsEntrySecondaryDnsSrv' => '1.3.6.1.4.1.2356.11.2.37.1.9.1.8',
  'lcsSetupWlanMngmtApConfPredefIntranetsTable' => '1.3.6.1.4.1.2356.11.2.37.1.10',
  'lcsSetupWlanMngmtApConfPredefIntranetsEntry' => '1.3.6.1.4.1.2356.11.2.37.1.10.1',
  'lcsSetupWlanMngmtApConfPredefIntranetsEntryName' => '1.3.6.1.4.1.2356.11.2.37.1.10.1.1',
  'lcsSetupWlanMngmtApConfDscpForControlPackets' => '1.3.6.1.4.1.2356.11.2.37.1.12',
  'lcsSetupWlanMngmtApConfDscpForControlPacketsDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfDscpForControlPackets',
  'lcsSetupWlanMngmtApConfDscpForDataPackets' => '1.3.6.1.4.1.2356.11.2.37.1.13',
  'lcsSetupWlanMngmtApConfDscpForDataPacketsDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfDscpForDataPackets',
  'lcsSetupWlanMngmtApConfMulticastNetworksTable' => '1.3.6.1.4.1.2356.11.2.37.1.14',
  'lcsSetupWlanMngmtApConfMulticastNetworksEntry' => '1.3.6.1.4.1.2356.11.2.37.1.14.1',
  'lcsSetupWlanMngmtApConfMulticastNetworksEntryBridgeInterface' => '1.3.6.1.4.1.2356.11.2.37.1.14.1.1',
  'lcsSetupWlanMngmtApConfMulticastNetworksEntryBridgeInterfaceDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfMulticastNetworksEntryBridgeInterface',
  'lcsSetupWlanMngmtApConfMulticastNetworksEntryActive' => '1.3.6.1.4.1.2356.11.2.37.1.14.1.2',
  'lcsSetupWlanMngmtApConfMulticastNetworksEntryActiveDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtApConfMulticastNetworksEntryActive',
  'lcsSetupWlanMngmtApConfMulticastNetworksEntryMulticastAddress' => '1.3.6.1.4.1.2356.11.2.37.1.14.1.3',
  'lcsSetupWlanMngmtApConfMulticastNetworksEntryMulticastPort' => '1.3.6.1.4.1.2356.11.2.37.1.14.1.4',
  'lcsSetupWlanMngmtApConfMulticastNetworksEntryLoopbackAddr' => '1.3.6.1.4.1.2356.11.2.37.1.14.1.5',
  'lcsSetupWlanMngmtCapwapPort' => '1.3.6.1.4.1.2356.11.2.37.5',
  'lcsSetupWlanMngmtAutoacceptAp' => '1.3.6.1.4.1.2356.11.2.37.6',
  'lcsSetupWlanMngmtAutoacceptApDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtAutoacceptAp',
  'lcsSetupWlanMngmtAcceptAp' => '1.3.6.1.4.1.2356.11.2.37.7',
  'lcsSetupWlanMngmtProvideDefaultConfiguration' => '1.3.6.1.4.1.2356.11.2.37.8',
  'lcsSetupWlanMngmtProvideDefaultConfigurationDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtProvideDefaultConfiguration',
  'lcsSetupWlanMngmtDisconnectAp' => '1.3.6.1.4.1.2356.11.2.37.9',
  'lcsSetupWlanMngmtNotification' => '1.3.6.1.4.1.2356.11.2.37.10',
  'lcsSetupWlanMngmtNotificationEMail' => '1.3.6.1.4.1.2356.11.2.37.10.1',
  'lcsSetupWlanMngmtNotificationEMailDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtNotificationEMail',
  'lcsSetupWlanMngmtNotificationSyslog' => '1.3.6.1.4.1.2356.11.2.37.10.2',
  'lcsSetupWlanMngmtNotificationSyslogDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtNotificationSyslog',
  'lcsSetupWlanMngmtNotificationEMailReceiver' => '1.3.6.1.4.1.2356.11.2.37.10.3',
  'lcsSetupWlanMngmtNotificationAdvancedTable' => '1.3.6.1.4.1.2356.11.2.37.10.4',
  'lcsSetupWlanMngmtNotificationAdvancedEntry' => '1.3.6.1.4.1.2356.11.2.37.10.4.1',
  'lcsSetupWlanMngmtNotificationAdvancedEntryName' => '1.3.6.1.4.1.2356.11.2.37.10.4.1.1',
  'lcsSetupWlanMngmtNotificationAdvancedEntryNameDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtNotificationAdvancedEntryName',
  'lcsSetupWlanMngmtNotificationAdvancedEntryActiveRadios' => '1.3.6.1.4.1.2356.11.2.37.10.4.1.2',
  'lcsSetupWlanMngmtNotificationAdvancedEntryActiveRadiosDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtNotificationAdvancedEntryActiveRadios',
  'lcsSetupWlanMngmtNotificationAdvancedEntryMissingAp' => '1.3.6.1.4.1.2356.11.2.37.10.4.1.3',
  'lcsSetupWlanMngmtNotificationAdvancedEntryMissingApDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtNotificationAdvancedEntryMissingAp',
  'lcsSetupWlanMngmtNotificationAdvancedEntryNewAp' => '1.3.6.1.4.1.2356.11.2.37.10.4.1.4',
  'lcsSetupWlanMngmtNotificationAdvancedEntryNewApDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtNotificationAdvancedEntryNewAp',
  'lcsSetupWlanMngmtNotificationSendSnmpTrapForStationTableEvent' => '1.3.6.1.4.1.2356.11.2.37.10.5',
  'lcsSetupWlanMngmtNotificationSendSnmpTrapForStationTableEventDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtNotificationSendSnmpTrapForStationTableEvent',
  'lcsSetupWlanMngmtRadiusServerTable' => '1.3.6.1.4.1.2356.11.2.37.17',
  'lcsSetupWlanMngmtRadiusServerEntry' => '1.3.6.1.4.1.2356.11.2.37.17.1',
  'lcsSetupWlanMngmtRadiusServerEntryType' => '1.3.6.1.4.1.2356.11.2.37.17.1.1',
  'lcsSetupWlanMngmtRadiusServerEntryTypeDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtRadiusServerEntryType',
  'lcsSetupWlanMngmtRadiusServerEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.37.17.1.2',
  'lcsSetupWlanMngmtRadiusServerEntryPort' => '1.3.6.1.4.1.2356.11.2.37.17.1.3',
  'lcsSetupWlanMngmtRadiusServerEntrySecret' => '1.3.6.1.4.1.2356.11.2.37.17.1.4',
  'lcsSetupWlanMngmtStartAutomaticRadioFieldOptimization' => '1.3.6.1.4.1.2356.11.2.37.19',
  'lcsSetupWlanMngmtAccessListTable' => '1.3.6.1.4.1.2356.11.2.37.20',
  'lcsSetupWlanMngmtAccessListEntry' => '1.3.6.1.4.1.2356.11.2.37.20.1',
  'lcsSetupWlanMngmtAccessListEntryMacAddress' => '1.3.6.1.4.1.2356.11.2.37.20.1.1',
  'lcsSetupWlanMngmtAccessListEntryName' => '1.3.6.1.4.1.2356.11.2.37.20.1.2',
  'lcsSetupWlanMngmtAccessListEntryComment' => '1.3.6.1.4.1.2356.11.2.37.20.1.3',
  'lcsSetupWlanMngmtAccessListEntryWpaPassphrase' => '1.3.6.1.4.1.2356.11.2.37.20.1.4',
  'lcsSetupWlanMngmtAccessListEntryTxLimit' => '1.3.6.1.4.1.2356.11.2.37.20.1.5',
  'lcsSetupWlanMngmtAccessListEntryRxLimit' => '1.3.6.1.4.1.2356.11.2.37.20.1.6',
  'lcsSetupWlanMngmtAccessListEntryVlanId' => '1.3.6.1.4.1.2356.11.2.37.20.1.7',
  'lcsSetupWlanMngmtCentralFwMngmt' => '1.3.6.1.4.1.2356.11.2.37.27',
  'lcsSetupWlanMngmtCentralFwMngmtFirmwareRepositoryUrl' => '1.3.6.1.4.1.2356.11.2.37.27.11',
  'lcsSetupWlanMngmtCentralFwMngmtScriptRepositoryUrl' => '1.3.6.1.4.1.2356.11.2.37.27.12',
  'lcsSetupWlanMngmtCentralFwMngmtUpdFwScriptInfo' => '1.3.6.1.4.1.2356.11.2.37.27.13',
  'lcsSetupWlanMngmtCentralFwMngmtMaximumNumberOfLoadedFirmwares' => '1.3.6.1.4.1.2356.11.2.37.27.14',
  'lcsSetupWlanMngmtCentralFwMngmtFwVersMngmtTable' => '1.3.6.1.4.1.2356.11.2.37.27.15',
  'lcsSetupWlanMngmtCentralFwMngmtFwVersMngmtEntry' => '1.3.6.1.4.1.2356.11.2.37.27.15.1',
  'lcsSetupWlanMngmtCentralFwMngmtFwVersMngmtEntryDevice' => '1.3.6.1.4.1.2356.11.2.37.27.15.1.2',
  'lcsSetupWlanMngmtCentralFwMngmtFwVersMngmtEntryDeviceDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtCentralFwMngmtFwVersMngmtEntryDevice',
  'lcsSetupWlanMngmtCentralFwMngmtFwVersMngmtEntryMacAddress' => '1.3.6.1.4.1.2356.11.2.37.27.15.1.3',
  'lcsSetupWlanMngmtCentralFwMngmtFwVersMngmtEntryVersion' => '1.3.6.1.4.1.2356.11.2.37.27.15.1.4',
  'lcsSetupWlanMngmtCentralFwMngmtScriptMngmtTable' => '1.3.6.1.4.1.2356.11.2.37.27.16',
  'lcsSetupWlanMngmtCentralFwMngmtScriptMngmtEntry' => '1.3.6.1.4.1.2356.11.2.37.27.16.1',
  'lcsSetupWlanMngmtCentralFwMngmtScriptMngmtEntryProfile' => '1.3.6.1.4.1.2356.11.2.37.27.16.1.1',
  'lcsSetupWlanMngmtCentralFwMngmtScriptMngmtEntryName' => '1.3.6.1.4.1.2356.11.2.37.27.16.1.2',
  'lcsSetupWlanMngmtCentralFwMngmtRebootUpdatedAps' => '1.3.6.1.4.1.2356.11.2.37.27.18',
  'lcsSetupWlanMngmtCentralFwMngmtFwLoopbkAddr' => '1.3.6.1.4.1.2356.11.2.37.27.25',
  'lcsSetupWlanMngmtCentralFwMngmtScriptLoopbAddr' => '1.3.6.1.4.1.2356.11.2.37.27.26',
  'lcsSetupWlanMngmtSyncWtpPassword' => '1.3.6.1.4.1.2356.11.2.37.30',
  'lcsSetupWlanMngmtSyncWtpPasswordDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtSyncWtpPassword',
  'lcsSetupWlanMngmtIntervalForStatusTableCleanup' => '1.3.6.1.4.1.2356.11.2.37.31',
  'lcsSetupWlanMngmtLicenseCount' => '1.3.6.1.4.1.2356.11.2.37.32',
  'lcsSetupWlanMngmtLicenseLimit' => '1.3.6.1.4.1.2356.11.2.37.33',
  'lcsSetupWlanMngmtWlcTunnels' => '1.3.6.1.4.1.2356.11.2.37.34',
  'lcsSetupWlanMngmtWlcTunnelsWlcDataTunnelActive' => '1.3.6.1.4.1.2356.11.2.37.34.2',
  'lcsSetupWlanMngmtWlcTunnelsWlcDataTunnelActiveDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtWlcTunnelsWlcDataTunnelActive',
  'lcsSetupWlanMngmtWlcTunnelsStaticWlcListTable' => '1.3.6.1.4.1.2356.11.2.37.34.3',
  'lcsSetupWlanMngmtWlcTunnelsStaticWlcListEntry' => '1.3.6.1.4.1.2356.11.2.37.34.3.1',
  'lcsSetupWlanMngmtWlcTunnelsStaticWlcListEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.37.34.3.1.1',
  'lcsSetupWlanMngmtWlcTunnelsStaticWlcListEntryLoopbackAddr' => '1.3.6.1.4.1.2356.11.2.37.34.3.1.2',
  'lcsSetupWlanMngmtWlcTunnelsWlcDiscoveryTable' => '1.3.6.1.4.1.2356.11.2.37.34.4',
  'lcsSetupWlanMngmtWlcTunnelsWlcDiscoveryEntry' => '1.3.6.1.4.1.2356.11.2.37.34.4.1',
  'lcsSetupWlanMngmtWlcTunnelsWlcDiscoveryEntryNetwork' => '1.3.6.1.4.1.2356.11.2.37.34.4.1.1',
  'lcsSetupWlanMngmtWlcTunnelsWlcDiscoveryEntryActive' => '1.3.6.1.4.1.2356.11.2.37.34.4.1.2',
  'lcsSetupWlanMngmtWlcTunnelsWlcDiscoveryEntryActiveDefinition' => 'LCOS-MIB::lcsSetupWlanMngmtWlcTunnelsWlcDiscoveryEntryActive',
  'lcsSetupCerts' => '1.3.6.1.4.1.2356.11.2.39',
  'lcsSetupCertsScepClnt' => '1.3.6.1.4.1.2356.11.2.39.1',
  'lcsSetupCertsScepClntScepOperating' => '1.3.6.1.4.1.2356.11.2.39.1.1',
  'lcsSetupCertsScepClntScepOperatingDefinition' => 'LCOS-MIB::lcsSetupCertsScepClntScepOperating',
  'lcsSetupCertsScepClntDeviceCertificateUpdateBefore' => '1.3.6.1.4.1.2356.11.2.39.1.2',
  'lcsSetupCertsScepClntCaCertificateUpdateBefore' => '1.3.6.1.4.1.2356.11.2.39.1.3',
  'lcsSetupCertsScepClntCertsTable' => '1.3.6.1.4.1.2356.11.2.39.1.7',
  'lcsSetupCertsScepClntCertsEntry' => '1.3.6.1.4.1.2356.11.2.39.1.7.1',
  'lcsSetupCertsScepClntCertsEntryName' => '1.3.6.1.4.1.2356.11.2.39.1.7.1.1',
  'lcsSetupCertsScepClntCertsEntryCadn' => '1.3.6.1.4.1.2356.11.2.39.1.7.1.2',
  'lcsSetupCertsScepClntCertsEntrySubject' => '1.3.6.1.4.1.2356.11.2.39.1.7.1.3',
  'lcsSetupCertsScepClntCertsEntryChallengepwd' => '1.3.6.1.4.1.2356.11.2.39.1.7.1.4',
  'lcsSetupCertsScepClntCertsEntrySubjectaltname' => '1.3.6.1.4.1.2356.11.2.39.1.7.1.5',
  'lcsSetupCertsScepClntCertsEntryKeyusage' => '1.3.6.1.4.1.2356.11.2.39.1.7.1.6',
  'lcsSetupCertsScepClntCertsEntryDevCertKeyl' => '1.3.6.1.4.1.2356.11.2.39.1.7.1.7',
  'lcsSetupCertsScepClntCertsEntryApplication' => '1.3.6.1.4.1.2356.11.2.39.1.7.1.8',
  'lcsSetupCertsScepClntCertsEntryApplicationDefinition' => 'LCOS-MIB::lcsSetupCertsScepClntCertsEntryApplication',
  'lcsSetupCertsScepClntCertsEntryExtendedKeyusage' => '1.3.6.1.4.1.2356.11.2.39.1.7.1.9',
  'lcsSetupCertsScepClntReinit' => '1.3.6.1.4.1.2356.11.2.39.1.8',
  'lcsSetupCertsScepClntUpdate' => '1.3.6.1.4.1.2356.11.2.39.1.9',
  'lcsSetupCertsScepClntClearScepFilesystem' => '1.3.6.1.4.1.2356.11.2.39.1.10',
  'lcsSetupCertsScepClntRetryAfterErrorInterval' => '1.3.6.1.4.1.2356.11.2.39.1.11',
  'lcsSetupCertsScepClntCheckPendingRequestsInterval' => '1.3.6.1.4.1.2356.11.2.39.1.12',
  'lcsSetupCertsScepClntTraceLevel' => '1.3.6.1.4.1.2356.11.2.39.1.13',
  'lcsSetupCertsScepClntTraceLevelDefinition' => 'LCOS-MIB::lcsSetupCertsScepClntTraceLevel',
  'lcsSetupCertsScepClntCasTable' => '1.3.6.1.4.1.2356.11.2.39.1.14',
  'lcsSetupCertsScepClntCasEntry' => '1.3.6.1.4.1.2356.11.2.39.1.14.1',
  'lcsSetupCertsScepClntCasEntryName' => '1.3.6.1.4.1.2356.11.2.39.1.14.1.1',
  'lcsSetupCertsScepClntCasEntryUrl' => '1.3.6.1.4.1.2356.11.2.39.1.14.1.2',
  'lcsSetupCertsScepClntCasEntryDn' => '1.3.6.1.4.1.2356.11.2.39.1.14.1.3',
  'lcsSetupCertsScepClntCasEntryEncAlg' => '1.3.6.1.4.1.2356.11.2.39.1.14.1.4',
  'lcsSetupCertsScepClntCasEntryEncAlgDefinition' => 'LCOS-MIB::lcsSetupCertsScepClntCasEntryEncAlg',
  'lcsSetupCertsScepClntCasEntryIdentifier' => '1.3.6.1.4.1.2356.11.2.39.1.14.1.5',
  'lcsSetupCertsScepClntCasEntryCaSignatureAlgorithm' => '1.3.6.1.4.1.2356.11.2.39.1.14.1.6',
  'lcsSetupCertsScepClntCasEntryCaSignatureAlgorithmDefinition' => 'LCOS-MIB::lcsSetupCertsScepClntCasEntryCaSignatureAlgorithm',
  'lcsSetupCertsScepClntCasEntryRaAutoapprove' => '1.3.6.1.4.1.2356.11.2.39.1.14.1.7',
  'lcsSetupCertsScepClntCasEntryRaAutoapproveDefinition' => 'LCOS-MIB::lcsSetupCertsScepClntCasEntryRaAutoapprove',
  'lcsSetupCertsScepClntCasEntryCaFingerprintAlgorithm' => '1.3.6.1.4.1.2356.11.2.39.1.14.1.8',
  'lcsSetupCertsScepClntCasEntryCaFingerprintAlgorithmDefinition' => 'LCOS-MIB::lcsSetupCertsScepClntCasEntryCaFingerprintAlgorithm',
  'lcsSetupCertsScepClntCasEntryCaFingerprint' => '1.3.6.1.4.1.2356.11.2.39.1.14.1.9',
  'lcsSetupCertsScepClntCasEntryLoopbackAddr' => '1.3.6.1.4.1.2356.11.2.39.1.14.1.11',
  'lcsSetupCertsScepCa' => '1.3.6.1.4.1.2356.11.2.39.2',
  'lcsSetupCertsScepCaOperating' => '1.3.6.1.4.1.2356.11.2.39.2.1',
  'lcsSetupCertsScepCaOperatingDefinition' => 'LCOS-MIB::lcsSetupCertsScepCaOperating',
  'lcsSetupCertsScepCaCaCerts' => '1.3.6.1.4.1.2356.11.2.39.2.2',
  'lcsSetupCertsScepCaCaCertsCaDistingName' => '1.3.6.1.4.1.2356.11.2.39.2.2.1',
  'lcsSetupCertsScepCaCaCertsAlternativeName' => '1.3.6.1.4.1.2356.11.2.39.2.2.3',
  'lcsSetupCertsScepCaCaCertsRsaKeyLength' => '1.3.6.1.4.1.2356.11.2.39.2.2.4',
  'lcsSetupCertsScepCaCaCertsRsaKeyLengthDefinition' => 'LCOS-MIB::lcsSetupCertsScepCaCaCertsRsaKeyLength',
  'lcsSetupCertsScepCaCaCertsValidityPeriod' => '1.3.6.1.4.1.2356.11.2.39.2.2.5',
  'lcsSetupCertsScepCaCaCertsUpdateCaCertificatesBeforeExpiration' => '1.3.6.1.4.1.2356.11.2.39.2.2.6',
  'lcsSetupCertsScepCaCaCertsRaDistinguishedName' => '1.3.6.1.4.1.2356.11.2.39.2.2.8',
  'lcsSetupCertsScepCaCaCertsCreateNewCaCertificates' => '1.3.6.1.4.1.2356.11.2.39.2.2.9',
  'lcsSetupCertsScepCaCaCertsCreatePkcs12BackupFiles' => '1.3.6.1.4.1.2356.11.2.39.2.2.10',
  'lcsSetupCertsScepCaCaCertsRestoreCertificatesFromBackup' => '1.3.6.1.4.1.2356.11.2.39.2.2.11',
  'lcsSetupCertsScepCaEncryptionAlgorithm' => '1.3.6.1.4.1.2356.11.2.39.2.3',
  'lcsSetupCertsScepCaEncryptionAlgorithmDefinition' => 'LCOS-MIB::lcsSetupCertsScepCaEncryptionAlgorithm',
  'lcsSetupCertsScepCaRaAutoapprove' => '1.3.6.1.4.1.2356.11.2.39.2.4',
  'lcsSetupCertsScepCaRaAutoapproveDefinition' => 'LCOS-MIB::lcsSetupCertsScepCaRaAutoapprove',
  'lcsSetupCertsScepCaClientCerts' => '1.3.6.1.4.1.2356.11.2.39.2.5',
  'lcsSetupCertsScepCaClientCertsValidityPeriod' => '1.3.6.1.4.1.2356.11.2.39.2.5.1',
  'lcsSetupCertsScepCaClientCertsChallPasswdsTable' => '1.3.6.1.4.1.2356.11.2.39.2.5.3',
  'lcsSetupCertsScepCaClientCertsChallPasswdsEntry' => '1.3.6.1.4.1.2356.11.2.39.2.5.3.1',
  'lcsSetupCertsScepCaClientCertsChallPasswdsEntryIndex' => '1.3.6.1.4.1.2356.11.2.39.2.5.3.1.1',
  'lcsSetupCertsScepCaClientCertsChallPasswdsEntrySubjDistngName' => '1.3.6.1.4.1.2356.11.2.39.2.5.3.1.2',
  'lcsSetupCertsScepCaClientCertsChallPasswdsEntryMacAddress' => '1.3.6.1.4.1.2356.11.2.39.2.5.3.1.3',
  'lcsSetupCertsScepCaClientCertsChallPasswdsEntryChallenge' => '1.3.6.1.4.1.2356.11.2.39.2.5.3.1.4',
  'lcsSetupCertsScepCaClientCertsChallPasswdsEntryValidity' => '1.3.6.1.4.1.2356.11.2.39.2.5.3.1.5',
  'lcsSetupCertsScepCaClientCertsChallPasswdsEntryValidityDefinition' => 'LCOS-MIB::lcsSetupCertsScepCaClientCertsChallPasswdsEntryValidity',
  'lcsSetupCertsScepCaClientCertsGeneralChallengePassword' => '1.3.6.1.4.1.2356.11.2.39.2.5.4',
  'lcsSetupCertsScepCaSignatureAlgorithm' => '1.3.6.1.4.1.2356.11.2.39.2.6',
  'lcsSetupCertsScepCaSignatureAlgorithmDefinition' => 'LCOS-MIB::lcsSetupCertsScepCaSignatureAlgorithm',
  'lcsSetupCertsScepCaFingerprintAlgorithm' => '1.3.6.1.4.1.2356.11.2.39.2.7',
  'lcsSetupCertsScepCaFingerprintAlgorithmDefinition' => 'LCOS-MIB::lcsSetupCertsScepCaFingerprintAlgorithm',
  'lcsSetupCertsScepCaCertRevLists' => '1.3.6.1.4.1.2356.11.2.39.2.8',
  'lcsSetupCertsScepCaCertRevListsCrlUpdateInterval' => '1.3.6.1.4.1.2356.11.2.39.2.8.1',
  'lcsSetupCertsScepCaCertRevListsCrlDistributionPointHostname' => '1.3.6.1.4.1.2356.11.2.39.2.8.2',
  'lcsSetupCertsScepCaCertRevListsCreateNewCrl' => '1.3.6.1.4.1.2356.11.2.39.2.8.3',
  'lcsSetupCertsScepCaReinitialize' => '1.3.6.1.4.1.2356.11.2.39.2.9',
  'lcsSetupCertsScepCaLogging' => '1.3.6.1.4.1.2356.11.2.39.2.10',
  'lcsSetupCertsScepCaLoggingEMail' => '1.3.6.1.4.1.2356.11.2.39.2.10.1',
  'lcsSetupCertsScepCaLoggingEMailDefinition' => 'LCOS-MIB::lcsSetupCertsScepCaLoggingEMail',
  'lcsSetupCertsScepCaLoggingSyslog' => '1.3.6.1.4.1.2356.11.2.39.2.10.2',
  'lcsSetupCertsScepCaLoggingSyslogDefinition' => 'LCOS-MIB::lcsSetupCertsScepCaLoggingSyslog',
  'lcsSetupCertsScepCaLoggingEMailReceiver' => '1.3.6.1.4.1.2356.11.2.39.2.10.3',
  'lcsSetupCertsScepCaLoggingSendBackupReminder' => '1.3.6.1.4.1.2356.11.2.39.2.10.4',
  'lcsSetupCertsScepCaLoggingSendBackupReminderDefinition' => 'LCOS-MIB::lcsSetupCertsScepCaLoggingSendBackupReminder',
  'lcsSetupCertsCrls' => '1.3.6.1.4.1.2356.11.2.39.3',
  'lcsSetupCertsCrlsCrlOperating' => '1.3.6.1.4.1.2356.11.2.39.3.1',
  'lcsSetupCertsCrlsCrlOperatingDefinition' => 'LCOS-MIB::lcsSetupCertsCrlsCrlOperating',
  'lcsSetupCertsCrlsUpdateBefore' => '1.3.6.1.4.1.2356.11.2.39.3.4',
  'lcsSetupCertsCrlsPrefetchPeriod' => '1.3.6.1.4.1.2356.11.2.39.3.5',
  'lcsSetupCertsCrlsValidityExceedance' => '1.3.6.1.4.1.2356.11.2.39.3.6',
  'lcsSetupCertsCrlsRefreshCrlNow' => '1.3.6.1.4.1.2356.11.2.39.3.7',
  'lcsSetupCertsCrlsAlternativeUrlTableTable' => '1.3.6.1.4.1.2356.11.2.39.3.8',
  'lcsSetupCertsCrlsAlternativeUrlTableEntry' => '1.3.6.1.4.1.2356.11.2.39.3.8.1',
  'lcsSetupCertsCrlsAlternativeUrlTableEntryAlternativeUrl' => '1.3.6.1.4.1.2356.11.2.39.3.8.1.1',
  'lcsSetupCertsCrlsLoopbackAddress' => '1.3.6.1.4.1.2356.11.2.39.3.9',
  'lcsSetupCertsOcspClient' => '1.3.6.1.4.1.2356.11.2.39.6',
  'lcsSetupCertsOcspClientCaProfileTableTable' => '1.3.6.1.4.1.2356.11.2.39.6.1',
  'lcsSetupCertsOcspClientCaProfileTableEntry' => '1.3.6.1.4.1.2356.11.2.39.6.1.1',
  'lcsSetupCertsOcspClientCaProfileTableEntryProfileName' => '1.3.6.1.4.1.2356.11.2.39.6.1.1.1',
  'lcsSetupCertsOcspClientCaProfileTableEntryCaDistinguishedName' => '1.3.6.1.4.1.2356.11.2.39.6.1.1.2',
  'lcsSetupCertsOcspClientCaProfileTableEntryPreferAia' => '1.3.6.1.4.1.2356.11.2.39.6.1.1.3',
  'lcsSetupCertsOcspClientCaProfileTableEntryPreferAiaDefinition' => 'LCOS-MIB::lcsSetupCertsOcspClientCaProfileTableEntryPreferAia',
  'lcsSetupCertsOcspClientCaProfileTableEntryResponderProfileName' => '1.3.6.1.4.1.2356.11.2.39.6.1.1.4',
  'lcsSetupCertsOcspClientCaProfileTableEntrySourceInterface' => '1.3.6.1.4.1.2356.11.2.39.6.1.1.5',
  'lcsSetupCertsOcspClientCaProfileTableEntryCertEvaluationMode' => '1.3.6.1.4.1.2356.11.2.39.6.1.1.6',
  'lcsSetupCertsOcspClientCaProfileTableEntryCertEvaluationModeDefinition' => 'LCOS-MIB::lcsSetupCertsOcspClientCaProfileTableEntryCertEvaluationMode',
  'lcsSetupCertsOcspClientCaProfileTableEntrySyslogEvents' => '1.3.6.1.4.1.2356.11.2.39.6.1.1.7',
  'lcsSetupCertsOcspClientCaProfileTableEntrySyslogEventsDefinition' => 'LCOS-MIB::lcsSetupCertsOcspClientCaProfileTableEntrySyslogEvents',
  'lcsSetupCertsOcspClientResponderProfileTableTable' => '1.3.6.1.4.1.2356.11.2.39.6.2',
  'lcsSetupCertsOcspClientResponderProfileTableEntry' => '1.3.6.1.4.1.2356.11.2.39.6.2.1',
  'lcsSetupCertsOcspClientResponderProfileTableEntryProfileName' => '1.3.6.1.4.1.2356.11.2.39.6.2.1.1',
  'lcsSetupCertsOcspClientResponderProfileTableEntryUrl' => '1.3.6.1.4.1.2356.11.2.39.6.2.1.2',
  'lcsSetupGps' => '1.3.6.1.4.1.2356.11.2.40',
  'lcsSetupGpsOperating' => '1.3.6.1.4.1.2356.11.2.40.1',
  'lcsSetupGpsOperatingDefinition' => 'LCOS-MIB::lcsSetupGpsOperating',
  'lcsSetupUtm' => '1.3.6.1.4.1.2356.11.2.41',
  'lcsSetupUtmCf' => '1.3.6.1.4.1.2356.11.2.41.2',
  'lcsSetupUtmCfOperating' => '1.3.6.1.4.1.2356.11.2.41.2.1',
  'lcsSetupUtmCfOperatingDefinition' => 'LCOS-MIB::lcsSetupUtmCfOperating',
  'lcsSetupUtmCfGlobalSettings' => '1.3.6.1.4.1.2356.11.2.41.2.2',
  'lcsSetupUtmCfGlobalSettingsAdminEmail' => '1.3.6.1.4.1.2356.11.2.41.2.2.1',
  'lcsSetupUtmCfGlobalSettingsActionOnError' => '1.3.6.1.4.1.2356.11.2.41.2.2.5',
  'lcsSetupUtmCfGlobalSettingsActionOnErrorDefinition' => 'LCOS-MIB::lcsSetupUtmCfGlobalSettingsActionOnError',
  'lcsSetupUtmCfGlobalSettingsActionOnLicenseExceedance' => '1.3.6.1.4.1.2356.11.2.41.2.2.6',
  'lcsSetupUtmCfGlobalSettingsActionOnLicenseExceedanceDefinition' => 'LCOS-MIB::lcsSetupUtmCfGlobalSettingsActionOnLicenseExceedance',
  'lcsSetupUtmCfGlobalSettingsActionOnLicenseExpiration' => '1.3.6.1.4.1.2356.11.2.41.2.2.7',
  'lcsSetupUtmCfGlobalSettingsActionOnLicenseExpirationDefinition' => 'LCOS-MIB::lcsSetupUtmCfGlobalSettingsActionOnLicenseExpiration',
  'lcsSetupUtmCfGlobalSettingsNotificationTable' => '1.3.6.1.4.1.2356.11.2.41.2.2.9',
  'lcsSetupUtmCfGlobalSettingsNotificationEntry' => '1.3.6.1.4.1.2356.11.2.41.2.2.9.1',
  'lcsSetupUtmCfGlobalSettingsNotificationEntryCause' => '1.3.6.1.4.1.2356.11.2.41.2.2.9.1.1',
  'lcsSetupUtmCfGlobalSettingsNotificationEntryCauseDefinition' => 'LCOS-MIB::lcsSetupUtmCfGlobalSettingsNotificationEntryCause',
  'lcsSetupUtmCfGlobalSettingsNotificationEntryEMail' => '1.3.6.1.4.1.2356.11.2.41.2.2.9.1.2',
  'lcsSetupUtmCfGlobalSettingsNotificationEntryEMailDefinition' => 'LCOS-MIB::lcsSetupUtmCfGlobalSettingsNotificationEntryEMail',
  'lcsSetupUtmCfGlobalSettingsNotificationEntrySnmp' => '1.3.6.1.4.1.2356.11.2.41.2.2.9.1.3',
  'lcsSetupUtmCfGlobalSettingsNotificationEntrySnmpDefinition' => 'LCOS-MIB::lcsSetupUtmCfGlobalSettingsNotificationEntrySnmp',
  'lcsSetupUtmCfGlobalSettingsNotificationEntrySyslog' => '1.3.6.1.4.1.2356.11.2.41.2.2.9.1.4',
  'lcsSetupUtmCfGlobalSettingsNotificationEntrySyslogDefinition' => 'LCOS-MIB::lcsSetupUtmCfGlobalSettingsNotificationEntrySyslog',
  'lcsSetupUtmCfGlobalSettingsBlockTextTable' => '1.3.6.1.4.1.2356.11.2.41.2.2.10',
  'lcsSetupUtmCfGlobalSettingsBlockTextEntry' => '1.3.6.1.4.1.2356.11.2.41.2.2.10.1',
  'lcsSetupUtmCfGlobalSettingsBlockTextEntryLanguage' => '1.3.6.1.4.1.2356.11.2.41.2.2.10.1.1',
  'lcsSetupUtmCfGlobalSettingsBlockTextEntryText' => '1.3.6.1.4.1.2356.11.2.41.2.2.10.1.2',
  'lcsSetupUtmCfGlobalSettingsUrlToShowOnBlocking' => '1.3.6.1.4.1.2356.11.2.41.2.2.11',
  'lcsSetupUtmCfGlobalSettingsLoopbackToUseOnBlocking' => '1.3.6.1.4.1.2356.11.2.41.2.2.12',
  'lcsSetupUtmCfGlobalSettingsOverrideActive' => '1.3.6.1.4.1.2356.11.2.41.2.2.13',
  'lcsSetupUtmCfGlobalSettingsOverrideActiveDefinition' => 'LCOS-MIB::lcsSetupUtmCfGlobalSettingsOverrideActive',
  'lcsSetupUtmCfGlobalSettingsOverrideDuration' => '1.3.6.1.4.1.2356.11.2.41.2.2.14',
  'lcsSetupUtmCfGlobalSettingsOverrideType' => '1.3.6.1.4.1.2356.11.2.41.2.2.15',
  'lcsSetupUtmCfGlobalSettingsOverrideTypeDefinition' => 'LCOS-MIB::lcsSetupUtmCfGlobalSettingsOverrideType',
  'lcsSetupUtmCfGlobalSettingsSaveToFlashrom' => '1.3.6.1.4.1.2356.11.2.41.2.2.17',
  'lcsSetupUtmCfGlobalSettingsSaveToFlashromDefinition' => 'LCOS-MIB::lcsSetupUtmCfGlobalSettingsSaveToFlashrom',
  'lcsSetupUtmCfGlobalSettingsErrorTextTable' => '1.3.6.1.4.1.2356.11.2.41.2.2.19',
  'lcsSetupUtmCfGlobalSettingsErrorTextEntry' => '1.3.6.1.4.1.2356.11.2.41.2.2.19.1',
  'lcsSetupUtmCfGlobalSettingsErrorTextEntryLanguage' => '1.3.6.1.4.1.2356.11.2.41.2.2.19.1.1',
  'lcsSetupUtmCfGlobalSettingsErrorTextEntryText' => '1.3.6.1.4.1.2356.11.2.41.2.2.19.1.2',
  'lcsSetupUtmCfGlobalSettingsOverrideTextTable' => '1.3.6.1.4.1.2356.11.2.41.2.2.20',
  'lcsSetupUtmCfGlobalSettingsOverrideTextEntry' => '1.3.6.1.4.1.2356.11.2.41.2.2.20.1',
  'lcsSetupUtmCfGlobalSettingsOverrideTextEntryLanguage' => '1.3.6.1.4.1.2356.11.2.41.2.2.20.1.1',
  'lcsSetupUtmCfGlobalSettingsOverrideTextEntryText' => '1.3.6.1.4.1.2356.11.2.41.2.2.20.1.2',
  'lcsSetupUtmCfGlobalSettingsUrlToShowOnOverride' => '1.3.6.1.4.1.2356.11.2.41.2.2.21',
  'lcsSetupUtmCfGlobalSettingsLoopbackToUseOnOverride' => '1.3.6.1.4.1.2356.11.2.41.2.2.22',
  'lcsSetupUtmCfGlobalSettingsSnapshot' => '1.3.6.1.4.1.2356.11.2.41.2.2.23',
  'lcsSetupUtmCfGlobalSettingsSnapshotActive' => '1.3.6.1.4.1.2356.11.2.41.2.2.23.1',
  'lcsSetupUtmCfGlobalSettingsSnapshotActiveDefinition' => 'LCOS-MIB::lcsSetupUtmCfGlobalSettingsSnapshotActive',
  'lcsSetupUtmCfGlobalSettingsSnapshotType' => '1.3.6.1.4.1.2356.11.2.41.2.2.23.2',
  'lcsSetupUtmCfGlobalSettingsSnapshotTypeDefinition' => 'LCOS-MIB::lcsSetupUtmCfGlobalSettingsSnapshotType',
  'lcsSetupUtmCfGlobalSettingsSnapshotTime' => '1.3.6.1.4.1.2356.11.2.41.2.2.23.3',
  'lcsSetupUtmCfGlobalSettingsSnapshotDay' => '1.3.6.1.4.1.2356.11.2.41.2.2.23.4',
  'lcsSetupUtmCfGlobalSettingsSnapshotWeekday' => '1.3.6.1.4.1.2356.11.2.41.2.2.23.5',
  'lcsSetupUtmCfGlobalSettingsSnapshotWeekdayDefinition' => 'LCOS-MIB::lcsSetupUtmCfGlobalSettingsSnapshotWeekday',
  'lcsSetupUtmCfGlobalSettingsProxyConnectionsLimit' => '1.3.6.1.4.1.2356.11.2.41.2.2.24',
  'lcsSetupUtmCfGlobalSettingsProcessingTimeoutInMs' => '1.3.6.1.4.1.2356.11.2.41.2.2.25',
  'lcsSetupUtmCfGlobalSettingsUrlToShowOnError' => '1.3.6.1.4.1.2356.11.2.41.2.2.26',
  'lcsSetupUtmCfGlobalSettingsLoopbackToUseOnError' => '1.3.6.1.4.1.2356.11.2.41.2.2.27',
  'lcsSetupUtmCfGlobalSettingsLoopbackToRatingServer' => '1.3.6.1.4.1.2356.11.2.41.2.2.28',
  'lcsSetupUtmCfProf' => '1.3.6.1.4.1.2356.11.2.41.2.3',
  'lcsSetupUtmCfProfProfTable' => '1.3.6.1.4.1.2356.11.2.41.2.3.1',
  'lcsSetupUtmCfProfProfEntry' => '1.3.6.1.4.1.2356.11.2.41.2.3.1.1',
  'lcsSetupUtmCfProfProfEntryName' => '1.3.6.1.4.1.2356.11.2.41.2.3.1.1.1',
  'lcsSetupUtmCfProfProfEntryTimeframe' => '1.3.6.1.4.1.2356.11.2.41.2.3.1.1.2',
  'lcsSetupUtmCfProfProfEntryWhitelist' => '1.3.6.1.4.1.2356.11.2.41.2.3.1.1.3',
  'lcsSetupUtmCfProfProfEntryBlacklist' => '1.3.6.1.4.1.2356.11.2.41.2.3.1.1.4',
  'lcsSetupUtmCfProfProfEntryCatProf' => '1.3.6.1.4.1.2356.11.2.41.2.3.1.1.5',
  'lcsSetupUtmCfProfWhitelistsTable' => '1.3.6.1.4.1.2356.11.2.41.2.3.2',
  'lcsSetupUtmCfProfWhitelistsEntry' => '1.3.6.1.4.1.2356.11.2.41.2.3.2.1',
  'lcsSetupUtmCfProfWhitelistsEntryName' => '1.3.6.1.4.1.2356.11.2.41.2.3.2.1.1',
  'lcsSetupUtmCfProfWhitelistsEntryWhitelist' => '1.3.6.1.4.1.2356.11.2.41.2.3.2.1.2',
  'lcsSetupUtmCfProfBlacklistsTable' => '1.3.6.1.4.1.2356.11.2.41.2.3.3',
  'lcsSetupUtmCfProfBlacklistsEntry' => '1.3.6.1.4.1.2356.11.2.41.2.3.3.1',
  'lcsSetupUtmCfProfBlacklistsEntryName' => '1.3.6.1.4.1.2356.11.2.41.2.3.3.1.1',
  'lcsSetupUtmCfProfBlacklistsEntryBlacklist' => '1.3.6.1.4.1.2356.11.2.41.2.3.3.1.2',
  'lcsSetupUtmCfProfCatProfTable' => '1.3.6.1.4.1.2356.11.2.41.2.3.4',
  'lcsSetupUtmCfProfCatProfEntry' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1',
  'lcsSetupUtmCfProfCatProfEntryName' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.1',
  'lcsSetupUtmCfProfCatProfEntryUnknown' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.100',
  'lcsSetupUtmCfProfCatProfEntryUnknownDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryUnknown',
  'lcsSetupUtmCfProfCatProfEntryPornographyEroticSex' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.101',
  'lcsSetupUtmCfProfCatProfEntryPornographyEroticSexDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryPornographyEroticSex',
  'lcsSetupUtmCfProfCatProfEntrySwimwearLingerie' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.103',
  'lcsSetupUtmCfProfCatProfEntrySwimwearLingerieDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntrySwimwearLingerie',
  'lcsSetupUtmCfProfCatProfEntryShopping' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.104',
  'lcsSetupUtmCfProfCatProfEntryShoppingDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryShopping',
  'lcsSetupUtmCfProfCatProfEntryAuctionsClassifiedAds' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.105',
  'lcsSetupUtmCfProfCatProfEntryAuctionsClassifiedAdsDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryAuctionsClassifiedAds',
  'lcsSetupUtmCfProfCatProfEntryGovNonProv' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.106',
  'lcsSetupUtmCfProfCatProfEntryGovNonProvDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryGovNonProv',
  'lcsSetupUtmCfProfCatProfEntryCitiesRegionsCountries' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.108',
  'lcsSetupUtmCfProfCatProfEntryCitiesRegionsCountriesDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryCitiesRegionsCountries',
  'lcsSetupUtmCfProfCatProfEntryEducation' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.109',
  'lcsSetupUtmCfProfCatProfEntryEducationDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryEducation',
  'lcsSetupUtmCfProfCatProfEntryPoliticalParties' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.110',
  'lcsSetupUtmCfProfCatProfEntryPoliticalPartiesDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryPoliticalParties',
  'lcsSetupUtmCfProfCatProfEntryReligionSpirituality' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.111',
  'lcsSetupUtmCfProfCatProfEntryReligionSpiritualityDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryReligionSpirituality',
  'lcsSetupUtmCfProfCatProfEntryIllegalActivities' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.113',
  'lcsSetupUtmCfProfCatProfEntryIllegalActivitiesDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryIllegalActivities',
  'lcsSetupUtmCfProfCatProfEntryComputerCrimeWarezHacking' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.114',
  'lcsSetupUtmCfProfCatProfEntryComputerCrimeWarezHackingDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryComputerCrimeWarezHacking',
  'lcsSetupUtmCfProfCatProfEntryPolHateDiscr' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.115',
  'lcsSetupUtmCfProfCatProfEntryPolHateDiscrDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryPolHateDiscr',
  'lcsSetupUtmCfProfCatProfEntryViolenceExtreme' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.117',
  'lcsSetupUtmCfProfCatProfEntryViolenceExtremeDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryViolenceExtreme',
  'lcsSetupUtmCfProfCatProfEntryGamblingLottery' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.118',
  'lcsSetupUtmCfProfCatProfEntryGamblingLotteryDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryGamblingLottery',
  'lcsSetupUtmCfProfCatProfEntryComputerGames' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.119',
  'lcsSetupUtmCfProfCatProfEntryComputerGamesDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryComputerGames',
  'lcsSetupUtmCfProfCatProfEntryToys' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.120',
  'lcsSetupUtmCfProfCatProfEntryToysDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryToys',
  'lcsSetupUtmCfProfCatProfEntryCinTvSocial' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.121',
  'lcsSetupUtmCfProfCatProfEntryCinTvSocialDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryCinTvSocial',
  'lcsSetupUtmCfProfCatProfEntryRecrFacThemPark' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.122',
  'lcsSetupUtmCfProfCatProfEntryRecrFacThemParkDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryRecrFacThemPark',
  'lcsSetupUtmCfProfCatProfEntryArtsMuseumsTheaters' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.123',
  'lcsSetupUtmCfProfCatProfEntryArtsMuseumsTheatersDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryArtsMuseumsTheaters',
  'lcsSetupUtmCfProfCatProfEntryMusicRadioBroadcast' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.124',
  'lcsSetupUtmCfProfCatProfEntryMusicRadioBroadcastDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryMusicRadioBroadcast',
  'lcsSetupUtmCfProfCatProfEntryLiteratureBooks' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.125',
  'lcsSetupUtmCfProfCatProfEntryLiteratureBooksDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryLiteratureBooks',
  'lcsSetupUtmCfProfCatProfEntryHumorCartoons' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.126',
  'lcsSetupUtmCfProfCatProfEntryHumorCartoonsDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryHumorCartoons',
  'lcsSetupUtmCfProfCatProfEntryNewsMagazines' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.127',
  'lcsSetupUtmCfProfCatProfEntryNewsMagazinesDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryNewsMagazines',
  'lcsSetupUtmCfProfCatProfEntryWebmailUnifiedMessaging' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.128',
  'lcsSetupUtmCfProfCatProfEntryWebmailUnifiedMessagingDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryWebmailUnifiedMessaging',
  'lcsSetupUtmCfProfCatProfEntryChat' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.129',
  'lcsSetupUtmCfProfCatProfEntryChatDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryChat',
  'lcsSetupUtmCfProfCatProfEntryBlogsBulletinBoards' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.130',
  'lcsSetupUtmCfProfCatProfEntryBlogsBulletinBoardsDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryBlogsBulletinBoards',
  'lcsSetupUtmCfProfCatProfEntryMobileTelephony' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.131',
  'lcsSetupUtmCfProfCatProfEntryMobileTelephonyDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryMobileTelephony',
  'lcsSetupUtmCfProfCatProfEntryDigitalPostcards' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.132',
  'lcsSetupUtmCfProfCatProfEntryDigitalPostcardsDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryDigitalPostcards',
  'lcsSetupUtmCfProfCatProfEntrySearchWebPortal' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.133',
  'lcsSetupUtmCfProfCatProfEntrySearchWebPortalDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntrySearchWebPortal',
  'lcsSetupUtmCfProfCatProfEntrySoftwareHardware' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.134',
  'lcsSetupUtmCfProfCatProfEntrySoftwareHardwareDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntrySoftwareHardware',
  'lcsSetupUtmCfProfCatProfEntryCommunicationServices' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.135',
  'lcsSetupUtmCfProfCatProfEntryCommunicationServicesDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryCommunicationServices',
  'lcsSetupUtmCfProfCatProfEntryItSecurityItInformation' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.136',
  'lcsSetupUtmCfProfCatProfEntryItSecurityItInformationDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryItSecurityItInformation',
  'lcsSetupUtmCfProfCatProfEntryWebSiteTranslation' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.137',
  'lcsSetupUtmCfProfCatProfEntryWebSiteTranslationDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryWebSiteTranslation',
  'lcsSetupUtmCfProfCatProfEntryAnonymousProxies' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.138',
  'lcsSetupUtmCfProfCatProfEntryAnonymousProxiesDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryAnonymousProxies',
  'lcsSetupUtmCfProfCatProfEntryIllegalDrugs' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.139',
  'lcsSetupUtmCfProfCatProfEntryIllegalDrugsDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryIllegalDrugs',
  'lcsSetupUtmCfProfCatProfEntryAlcoholTobacco' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.140',
  'lcsSetupUtmCfProfCatProfEntryAlcoholTobaccoDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryAlcoholTobacco',
  'lcsSetupUtmCfProfCatProfEntryDatingNetworks' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.143',
  'lcsSetupUtmCfProfCatProfEntryDatingNetworksDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryDatingNetworks',
  'lcsSetupUtmCfProfCatProfEntryRestEnter' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.144',
  'lcsSetupUtmCfProfCatProfEntryRestEnterDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryRestEnter',
  'lcsSetupUtmCfProfCatProfEntryTravel' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.145',
  'lcsSetupUtmCfProfCatProfEntryTravelDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryTravel',
  'lcsSetupUtmCfProfCatProfEntryFashionCosmeticsJewelry' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.146',
  'lcsSetupUtmCfProfCatProfEntryFashionCosmeticsJewelryDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryFashionCosmeticsJewelry',
  'lcsSetupUtmCfProfCatProfEntrySports' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.147',
  'lcsSetupUtmCfProfCatProfEntrySportsDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntrySports',
  'lcsSetupUtmCfProfCatProfEntryArchConstFurn' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.148',
  'lcsSetupUtmCfProfCatProfEntryArchConstFurnDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryArchConstFurn',
  'lcsSetupUtmCfProfCatProfEntryEnvironmentClimatePets' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.149',
  'lcsSetupUtmCfProfCatProfEntryEnvironmentClimatePetsDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryEnvironmentClimatePets',
  'lcsSetupUtmCfProfCatProfEntryPersonalWebSites' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.150',
  'lcsSetupUtmCfProfCatProfEntryPersonalWebSitesDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryPersonalWebSites',
  'lcsSetupUtmCfProfCatProfEntryJobSearch' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.151',
  'lcsSetupUtmCfProfCatProfEntryJobSearchDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryJobSearch',
  'lcsSetupUtmCfProfCatProfEntryFinanceInvestment' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.152',
  'lcsSetupUtmCfProfCatProfEntryFinanceInvestmentDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryFinanceInvestment',
  'lcsSetupUtmCfProfCatProfEntryBanking' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.154',
  'lcsSetupUtmCfProfCatProfEntryBankingDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryBanking',
  'lcsSetupUtmCfProfCatProfEntryVehicles' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.155',
  'lcsSetupUtmCfProfCatProfEntryVehiclesDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryVehicles',
  'lcsSetupUtmCfProfCatProfEntryWeaponsMilitary' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.156',
  'lcsSetupUtmCfProfCatProfEntryWeaponsMilitaryDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryWeaponsMilitary',
  'lcsSetupUtmCfProfCatProfEntryMedicineHealthSelfHelp' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.157',
  'lcsSetupUtmCfProfCatProfEntryMedicineHealthSelfHelpDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryMedicineHealthSelfHelp',
  'lcsSetupUtmCfProfCatProfEntryAbortion' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.158',
  'lcsSetupUtmCfProfCatProfEntryAbortionDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryAbortion',
  'lcsSetupUtmCfProfCatProfEntrySpamUrls' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.160',
  'lcsSetupUtmCfProfCatProfEntrySpamUrlsDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntrySpamUrls',
  'lcsSetupUtmCfProfCatProfEntryMalware' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.161',
  'lcsSetupUtmCfProfCatProfEntryMalwareDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryMalware',
  'lcsSetupUtmCfProfCatProfEntryPhishingUrls' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.162',
  'lcsSetupUtmCfProfCatProfEntryPhishingUrlsDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryPhishingUrls',
  'lcsSetupUtmCfProfCatProfEntryInstantMessaging' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.163',
  'lcsSetupUtmCfProfCatProfEntryInstantMessagingDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryInstantMessaging',
  'lcsSetupUtmCfProfCatProfEntryGeneralBusiness' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.167',
  'lcsSetupUtmCfProfCatProfEntryGeneralBusinessDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryGeneralBusiness',
  'lcsSetupUtmCfProfCatProfEntryBannerAdvertisements' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.174',
  'lcsSetupUtmCfProfCatProfEntryBannerAdvertisementsDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryBannerAdvertisements',
  'lcsSetupUtmCfProfCatProfEntryWebStorage' => '1.3.6.1.4.1.2356.11.2.41.2.3.4.1.180',
  'lcsSetupUtmCfProfCatProfEntryWebStorageDefinition' => 'LCOS-MIB::lcsSetupUtmCfProfCatProfEntryWebStorage',
  'lcsSetupComPorts' => '1.3.6.1.4.1.2356.11.2.52',
  'lcsSetupComPortsDevTable' => '1.3.6.1.4.1.2356.11.2.52.1',
  'lcsSetupComPortsDevEntry' => '1.3.6.1.4.1.2356.11.2.52.1.1',
  'lcsSetupComPortsDevEntryDeviceType' => '1.3.6.1.4.1.2356.11.2.52.1.1.1',
  'lcsSetupComPortsDevEntryDeviceTypeDefinition' => 'LCOS-MIB::lcsSetupComPortsDevEntryDeviceType',
  'lcsSetupComPortsDevEntryServ' => '1.3.6.1.4.1.2356.11.2.52.1.1.4',
  'lcsSetupComPortsDevEntryServDefinition' => 'LCOS-MIB::lcsSetupComPortsDevEntryServ',
  'lcsSetupComPortsCOMPortServ' => '1.3.6.1.4.1.2356.11.2.52.2',
  'lcsSetupComPortsCOMPortServOperTable' => '1.3.6.1.4.1.2356.11.2.52.2.1',
  'lcsSetupComPortsCOMPortServOperEntry' => '1.3.6.1.4.1.2356.11.2.52.2.1.1',
  'lcsSetupComPortsCOMPortServOperEntryDeviceType' => '1.3.6.1.4.1.2356.11.2.52.2.1.1.1',
  'lcsSetupComPortsCOMPortServOperEntryDeviceTypeDefinition' => 'LCOS-MIB::lcsSetupComPortsCOMPortServOperEntryDeviceType',
  'lcsSetupComPortsCOMPortServOperEntryPortNumber' => '1.3.6.1.4.1.2356.11.2.52.2.1.1.2',
  'lcsSetupComPortsCOMPortServOperEntryOperating' => '1.3.6.1.4.1.2356.11.2.52.2.1.1.4',
  'lcsSetupComPortsCOMPortServOperEntryOperatingDefinition' => 'LCOS-MIB::lcsSetupComPortsCOMPortServOperEntryOperating',
  'lcsSetupComPortsCOMPortServCOMPortSetTable' => '1.3.6.1.4.1.2356.11.2.52.2.2',
  'lcsSetupComPortsCOMPortServCOMPortSetEntry' => '1.3.6.1.4.1.2356.11.2.52.2.2.1',
  'lcsSetupComPortsCOMPortServCOMPortSetEntryDeviceType' => '1.3.6.1.4.1.2356.11.2.52.2.2.1.1',
  'lcsSetupComPortsCOMPortServCOMPortSetEntryDeviceTypeDefinition' => 'LCOS-MIB::lcsSetupComPortsCOMPortServCOMPortSetEntryDeviceType',
  'lcsSetupComPortsCOMPortServCOMPortSetEntryPortNumber' => '1.3.6.1.4.1.2356.11.2.52.2.2.1.2',
  'lcsSetupComPortsCOMPortServCOMPortSetEntryBitRate' => '1.3.6.1.4.1.2356.11.2.52.2.2.1.4',
  'lcsSetupComPortsCOMPortServCOMPortSetEntryBitRateDefinition' => 'LCOS-MIB::lcsSetupComPortsCOMPortServCOMPortSetEntryBitRate',
  'lcsSetupComPortsCOMPortServCOMPortSetEntryDataBits' => '1.3.6.1.4.1.2356.11.2.52.2.2.1.5',
  'lcsSetupComPortsCOMPortServCOMPortSetEntryDataBitsDefinition' => 'LCOS-MIB::lcsSetupComPortsCOMPortServCOMPortSetEntryDataBits',
  'lcsSetupComPortsCOMPortServCOMPortSetEntryParity' => '1.3.6.1.4.1.2356.11.2.52.2.2.1.6',
  'lcsSetupComPortsCOMPortServCOMPortSetEntryParityDefinition' => 'LCOS-MIB::lcsSetupComPortsCOMPortServCOMPortSetEntryParity',
  'lcsSetupComPortsCOMPortServCOMPortSetEntryStopBits' => '1.3.6.1.4.1.2356.11.2.52.2.2.1.7',
  'lcsSetupComPortsCOMPortServCOMPortSetEntryStopBitsDefinition' => 'LCOS-MIB::lcsSetupComPortsCOMPortServCOMPortSetEntryStopBits',
  'lcsSetupComPortsCOMPortServCOMPortSetEntryHandshake' => '1.3.6.1.4.1.2356.11.2.52.2.2.1.8',
  'lcsSetupComPortsCOMPortServCOMPortSetEntryHandshakeDefinition' => 'LCOS-MIB::lcsSetupComPortsCOMPortServCOMPortSetEntryHandshake',
  'lcsSetupComPortsCOMPortServCOMPortSetEntryReadyCondition' => '1.3.6.1.4.1.2356.11.2.52.2.2.1.9',
  'lcsSetupComPortsCOMPortServCOMPortSetEntryReadyConditionDefinition' => 'LCOS-MIB::lcsSetupComPortsCOMPortServCOMPortSetEntryReadyCondition',
  'lcsSetupComPortsCOMPortServCOMPortSetEntryReadyDataTimeout' => '1.3.6.1.4.1.2356.11.2.52.2.2.1.10',
  'lcsSetupComPortsCOMPortServNetwSetTable' => '1.3.6.1.4.1.2356.11.2.52.2.3',
  'lcsSetupComPortsCOMPortServNetwSetEntry' => '1.3.6.1.4.1.2356.11.2.52.2.3.1',
  'lcsSetupComPortsCOMPortServNetwSetEntryDeviceType' => '1.3.6.1.4.1.2356.11.2.52.2.3.1.1',
  'lcsSetupComPortsCOMPortServNetwSetEntryDeviceTypeDefinition' => 'LCOS-MIB::lcsSetupComPortsCOMPortServNetwSetEntryDeviceType',
  'lcsSetupComPortsCOMPortServNetwSetEntryPortNumber' => '1.3.6.1.4.1.2356.11.2.52.2.3.1.2',
  'lcsSetupComPortsCOMPortServNetwSetEntryTcpMode' => '1.3.6.1.4.1.2356.11.2.52.2.3.1.4',
  'lcsSetupComPortsCOMPortServNetwSetEntryTcpModeDefinition' => 'LCOS-MIB::lcsSetupComPortsCOMPortServNetwSetEntryTcpMode',
  'lcsSetupComPortsCOMPortServNetwSetEntryListenPort' => '1.3.6.1.4.1.2356.11.2.52.2.3.1.5',
  'lcsSetupComPortsCOMPortServNetwSetEntryConnectHostname' => '1.3.6.1.4.1.2356.11.2.52.2.3.1.6',
  'lcsSetupComPortsCOMPortServNetwSetEntryConnectPort' => '1.3.6.1.4.1.2356.11.2.52.2.3.1.7',
  'lcsSetupComPortsCOMPortServNetwSetEntryLoopbackAddr' => '1.3.6.1.4.1.2356.11.2.52.2.3.1.8',
  'lcsSetupComPortsCOMPortServNetwSetEntryRfc2217Extensions' => '1.3.6.1.4.1.2356.11.2.52.2.3.1.9',
  'lcsSetupComPortsCOMPortServNetwSetEntryRfc2217ExtensionsDefinition' => 'LCOS-MIB::lcsSetupComPortsCOMPortServNetwSetEntryRfc2217Extensions',
  'lcsSetupComPortsCOMPortServNetwSetEntryNewlineConversion' => '1.3.6.1.4.1.2356.11.2.52.2.3.1.10',
  'lcsSetupComPortsCOMPortServNetwSetEntryNewlineConversionDefinition' => 'LCOS-MIB::lcsSetupComPortsCOMPortServNetwSetEntryNewlineConversion',
  'lcsSetupComPortsCOMPortServNetwSetEntryAssumeBinaryMode' => '1.3.6.1.4.1.2356.11.2.52.2.3.1.11',
  'lcsSetupComPortsCOMPortServNetwSetEntryAssumeBinaryModeDefinition' => 'LCOS-MIB::lcsSetupComPortsCOMPortServNetwSetEntryAssumeBinaryMode',
  'lcsSetupComPortsCOMPortServNetwSetEntryTcpRetransmitTimeout' => '1.3.6.1.4.1.2356.11.2.52.2.3.1.12',
  'lcsSetupComPortsCOMPortServNetwSetEntryTcpRetryCount' => '1.3.6.1.4.1.2356.11.2.52.2.3.1.13',
  'lcsSetupComPortsCOMPortServNetwSetEntryTcpKeepalive' => '1.3.6.1.4.1.2356.11.2.52.2.3.1.14',
  'lcsSetupComPortsCOMPortServNetwSetEntryTcpKeepaliveDefinition' => 'LCOS-MIB::lcsSetupComPortsCOMPortServNetwSetEntryTcpKeepalive',
  'lcsSetupComPortsCOMPortServNetwSetEntryTcpKeepaliveInterval' => '1.3.6.1.4.1.2356.11.2.52.2.3.1.15',
  'lcsSetupComPortsCOMPortServNetwSetEntryBinaryMode' => '1.3.6.1.4.1.2356.11.2.52.2.3.1.16',
  'lcsSetupComPortsCOMPortServNetwSetEntryBinaryModeDefinition' => 'LCOS-MIB::lcsSetupComPortsCOMPortServNetwSetEntryBinaryMode',
  'lcsSetupComPortsWan' => '1.3.6.1.4.1.2356.11.2.52.3',
  'lcsSetupComPortsWanDevTable' => '1.3.6.1.4.1.2356.11.2.52.3.1',
  'lcsSetupComPortsWanDevEntry' => '1.3.6.1.4.1.2356.11.2.52.3.1.1',
  'lcsSetupComPortsWanDevEntryDeviceType' => '1.3.6.1.4.1.2356.11.2.52.3.1.1.1',
  'lcsSetupComPortsWanDevEntryDeviceTypeDefinition' => 'LCOS-MIB::lcsSetupComPortsWanDevEntryDeviceType',
  'lcsSetupComPortsWanDevEntryOperating' => '1.3.6.1.4.1.2356.11.2.52.3.1.1.3',
  'lcsSetupComPortsWanDevEntryOperatingDefinition' => 'LCOS-MIB::lcsSetupComPortsWanDevEntryOperating',
  'lcsSetupTemperatureMonitor' => '1.3.6.1.4.1.2356.11.2.53',
  'lcsSetupTemperatureMonitorUpperLimitDegrees' => '1.3.6.1.4.1.2356.11.2.53.1',
  'lcsSetupTemperatureMonitorLowerLimitDegrees' => '1.3.6.1.4.1.2356.11.2.53.2',
  'lcsSetupTacacsPlus' => '1.3.6.1.4.1.2356.11.2.54',
  'lcsSetupTacacsPlusAuthentication' => '1.3.6.1.4.1.2356.11.2.54.1',
  'lcsSetupTacacsPlusAuthenticationDefinition' => 'LCOS-MIB::lcsSetupTacacsPlusAuthentication',
  'lcsSetupTacacsPlusAuthorisation' => '1.3.6.1.4.1.2356.11.2.54.2',
  'lcsSetupTacacsPlusAuthorisationDefinition' => 'LCOS-MIB::lcsSetupTacacsPlusAuthorisation',
  'lcsSetupTacacsPlusAccounting' => '1.3.6.1.4.1.2356.11.2.54.3',
  'lcsSetupTacacsPlusAccountingDefinition' => 'LCOS-MIB::lcsSetupTacacsPlusAccounting',
  'lcsSetupTacacsPlusSharedSecret' => '1.3.6.1.4.1.2356.11.2.54.6',
  'lcsSetupTacacsPlusEncryption' => '1.3.6.1.4.1.2356.11.2.54.7',
  'lcsSetupTacacsPlusEncryptionDefinition' => 'LCOS-MIB::lcsSetupTacacsPlusEncryption',
  'lcsSetupTacacsPlusServerTable' => '1.3.6.1.4.1.2356.11.2.54.9',
  'lcsSetupTacacsPlusServerEntry' => '1.3.6.1.4.1.2356.11.2.54.9.1',
  'lcsSetupTacacsPlusServerEntryServerAddress' => '1.3.6.1.4.1.2356.11.2.54.9.1.1',
  'lcsSetupTacacsPlusServerEntryLoopbackAddress' => '1.3.6.1.4.1.2356.11.2.54.9.1.2',
  'lcsSetupTacacsPlusServerEntryCompatibilityMode' => '1.3.6.1.4.1.2356.11.2.54.9.1.3',
  'lcsSetupTacacsPlusServerEntryCompatibilityModeDefinition' => 'LCOS-MIB::lcsSetupTacacsPlusServerEntryCompatibilityMode',
  'lcsSetupTacacsPlusFallbackToLocalUsers' => '1.3.6.1.4.1.2356.11.2.54.10',
  'lcsSetupTacacsPlusFallbackToLocalUsersDefinition' => 'LCOS-MIB::lcsSetupTacacsPlusFallbackToLocalUsers',
  'lcsSetupTacacsPlusSnmpGetRequestsAuthorisation' => '1.3.6.1.4.1.2356.11.2.54.11',
  'lcsSetupTacacsPlusSnmpGetRequestsAuthorisationDefinition' => 'LCOS-MIB::lcsSetupTacacsPlusSnmpGetRequestsAuthorisation',
  'lcsSetupTacacsPlusSnmpGetRequestsAccounting' => '1.3.6.1.4.1.2356.11.2.54.12',
  'lcsSetupTacacsPlusSnmpGetRequestsAccountingDefinition' => 'LCOS-MIB::lcsSetupTacacsPlusSnmpGetRequestsAccounting',
  'lcsSetupTacacsPlusBypassTacacsForCronScriptsActionTable' => '1.3.6.1.4.1.2356.11.2.54.13',
  'lcsSetupTacacsPlusBypassTacacsForCronScriptsActionTableDefinition' => 'LCOS-MIB::lcsSetupTacacsPlusBypassTacacsForCronScriptsActionTable',
  'lcsSetupTacacsPlusIncludeValueIntoAuthorisationRequest' => '1.3.6.1.4.1.2356.11.2.54.14',
  'lcsSetupTacacsPlusIncludeValueIntoAuthorisationRequestDefinition' => 'LCOS-MIB::lcsSetupTacacsPlusIncludeValueIntoAuthorisationRequest',
  'lcsSetupUsb' => '1.3.6.1.4.1.2356.11.2.56',
  'lcsSetupUsbFirmwareAndLoader' => '1.3.6.1.4.1.2356.11.2.56.1',
  'lcsSetupUsbFirmwareAndLoaderDefinition' => 'LCOS-MIB::lcsSetupUsbFirmwareAndLoader',
  'lcsSetupUsbConfigAndScript' => '1.3.6.1.4.1.2356.11.2.56.2',
  'lcsSetupUsbConfigAndScriptDefinition' => 'LCOS-MIB::lcsSetupUsbConfigAndScript',
  'lcsSetupWtpMngmt' => '1.3.6.1.4.1.2356.11.2.59',
  'lcsSetupWtpMngmtStaticWlcConfTable' => '1.3.6.1.4.1.2356.11.2.59.1',
  'lcsSetupWtpMngmtStaticWlcConfEntry' => '1.3.6.1.4.1.2356.11.2.59.1.1',
  'lcsSetupWtpMngmtStaticWlcConfEntryIpAddress' => '1.3.6.1.4.1.2356.11.2.59.1.1.1',
  'lcsSetupWtpMngmtStaticWlcConfEntryPort' => '1.3.6.1.4.1.2356.11.2.59.1.1.2',
  'lcsSetupWtpMngmtStaticWlcConfEntryLoopbackAddr' => '1.3.6.1.4.1.2356.11.2.59.1.1.3',
  'lcsSetupWtpMngmtLogEntries' => '1.3.6.1.4.1.2356.11.2.59.120',
  'lcsSetupAutold' => '1.3.6.1.4.1.2356.11.2.60',
  'lcsSetupAutoldNetwork' => '1.3.6.1.4.1.2356.11.2.60.1',
  'lcsSetupAutoldNetworkFirmware' => '1.3.6.1.4.1.2356.11.2.60.1.1',
  'lcsSetupAutoldNetworkFirmwareCondition' => '1.3.6.1.4.1.2356.11.2.60.1.1.1',
  'lcsSetupAutoldNetworkFirmwareConditionDefinition' => 'LCOS-MIB::lcsSetupAutoldNetworkFirmwareCondition',
  'lcsSetupAutoldNetworkFirmwareUrl' => '1.3.6.1.4.1.2356.11.2.60.1.1.2',
  'lcsSetupAutoldNetworkFirmwareMinimumVersion' => '1.3.6.1.4.1.2356.11.2.60.1.1.3',
  'lcsSetupAutoldNetworkConfig' => '1.3.6.1.4.1.2356.11.2.60.1.2',
  'lcsSetupAutoldNetworkConfigCondition' => '1.3.6.1.4.1.2356.11.2.60.1.2.1',
  'lcsSetupAutoldNetworkConfigConditionDefinition' => 'LCOS-MIB::lcsSetupAutoldNetworkConfigCondition',
  'lcsSetupAutoldNetworkConfigUrl' => '1.3.6.1.4.1.2356.11.2.60.1.2.2',
  'lcsSetupAutoldNetworkScript' => '1.3.6.1.4.1.2356.11.2.60.1.3',
  'lcsSetupAutoldNetworkScriptCondition' => '1.3.6.1.4.1.2356.11.2.60.1.3.1',
  'lcsSetupAutoldNetworkScriptConditionDefinition' => 'LCOS-MIB::lcsSetupAutoldNetworkScriptCondition',
  'lcsSetupAutoldNetworkScriptUrl' => '1.3.6.1.4.1.2356.11.2.60.1.3.2',
  'lcsSetupAutoldNetworkTftpClient' => '1.3.6.1.4.1.2356.11.2.60.1.4',
  'lcsSetupAutoldNetworkTftpClientBytesPerHashmark' => '1.3.6.1.4.1.2356.11.2.60.1.4.1',
  'lcsSetupAutoldLicense' => '1.3.6.1.4.1.2356.11.2.60.3',
  'lcsSetupAutoldLicenseUrl' => '1.3.6.1.4.1.2356.11.2.60.3.1',
  'lcsSetupAutoldLicenseLoopbackAddress' => '1.3.6.1.4.1.2356.11.2.60.3.2',
  'lcsSetupAutoldLicenseCompany' => '1.3.6.1.4.1.2356.11.2.60.3.10',
  'lcsSetupAutoldLicenseLastName' => '1.3.6.1.4.1.2356.11.2.60.3.11',
  'lcsSetupAutoldLicenseFirstName' => '1.3.6.1.4.1.2356.11.2.60.3.12',
  'lcsSetupAutoldLicenseStreetAndNumber' => '1.3.6.1.4.1.2356.11.2.60.3.13',
  'lcsSetupAutoldLicensePostCode' => '1.3.6.1.4.1.2356.11.2.60.3.14',
  'lcsSetupAutoldLicenseCity' => '1.3.6.1.4.1.2356.11.2.60.3.15',
  'lcsSetupAutoldLicenseCountry' => '1.3.6.1.4.1.2356.11.2.60.3.16',
  'lcsSetupAutoldLicenseEmailAddress' => '1.3.6.1.4.1.2356.11.2.60.3.17',
  'lcsSetupAutoldUsb' => '1.3.6.1.4.1.2356.11.2.60.56',
  'lcsSetupAutoldUsbFirmwareAndLoader' => '1.3.6.1.4.1.2356.11.2.60.56.1',
  'lcsSetupAutoldUsbFirmwareAndLoaderDefinition' => 'LCOS-MIB::lcsSetupAutoldUsbFirmwareAndLoader',
  'lcsSetupAutoldUsbConfigAndScript' => '1.3.6.1.4.1.2356.11.2.60.56.2',
  'lcsSetupAutoldUsbConfigAndScriptDefinition' => 'LCOS-MIB::lcsSetupAutoldUsbConfigAndScript',
  'lcsSetupPacketCapture' => '1.3.6.1.4.1.2356.11.2.63',
  'lcsSetupPacketCaptureLcoscapOperating' => '1.3.6.1.4.1.2356.11.2.63.1',
  'lcsSetupPacketCaptureLcoscapOperatingDefinition' => 'LCOS-MIB::lcsSetupPacketCaptureLcoscapOperating',
  'lcsSetupPacketCaptureLcoscapPort' => '1.3.6.1.4.1.2356.11.2.63.2',
  'lcsFirmware' => '1.3.6.1.4.1.2356.11.3',
  'lcsFirmwareVersionTableTable' => '1.3.6.1.4.1.2356.11.3.1',
  'lcsFirmwareVersionTableEntry' => '1.3.6.1.4.1.2356.11.3.1.1',
  'lcsFirmwareVersionTableEntryIfc' => '1.3.6.1.4.1.2356.11.3.1.1.1',
  'lcsFirmwareVersionTableEntryIfcDefinition' => 'LCOS-MIB::lcsFirmwareVersionTableEntryIfc',
  'lcsFirmwareVersionTableEntryModule' => '1.3.6.1.4.1.2356.11.3.1.1.2',
  'lcsFirmwareVersionTableEntryVersion' => '1.3.6.1.4.1.2356.11.3.1.1.3',
  'lcsFirmwareVersionTableEntrySerialNumber' => '1.3.6.1.4.1.2356.11.3.1.1.4',
  'lcsFirmwareTableFirmsafeTable' => '1.3.6.1.4.1.2356.11.3.2',
  'lcsFirmwareTableFirmsafeEntry' => '1.3.6.1.4.1.2356.11.3.2.1',
  'lcsFirmwareTableFirmsafeEntryPosition' => '1.3.6.1.4.1.2356.11.3.2.1.1',
  'lcsFirmwareTableFirmsafeEntryStatus' => '1.3.6.1.4.1.2356.11.3.2.1.2',
  'lcsFirmwareTableFirmsafeEntryStatusDefinition' => 'LCOS-MIB::lcsFirmwareTableFirmsafeEntryStatus',
  'lcsFirmwareTableFirmsafeEntryVersion' => '1.3.6.1.4.1.2356.11.3.2.1.3',
  'lcsFirmwareTableFirmsafeEntryDate' => '1.3.6.1.4.1.2356.11.3.2.1.4',
  'lcsFirmwareTableFirmsafeEntrySize' => '1.3.6.1.4.1.2356.11.3.2.1.5',
  'lcsFirmwareTableFirmsafeEntryIndex' => '1.3.6.1.4.1.2356.11.3.2.1.6',
  'lcsFirmwareModeFirmsafe' => '1.3.6.1.4.1.2356.11.3.3',
  'lcsFirmwareModeFirmsafeDefinition' => 'LCOS-MIB::lcsFirmwareModeFirmsafe',
  'lcsFirmwareTimeoutFirmsafe' => '1.3.6.1.4.1.2356.11.3.4',
  'lcsFirmwareFeatureWord' => '1.3.6.1.4.1.2356.11.3.7',
  'lcsOther' => '1.3.6.1.4.1.2356.11.4',
  'lcsOtherManualDialing' => '1.3.6.1.4.1.2356.11.4.1',
  'lcsOtherManualDialingConnect' => '1.3.6.1.4.1.2356.11.4.1.1',
  'lcsOtherManualDialingDisconnect' => '1.3.6.1.4.1.2356.11.4.1.2',
  'lcsOtherBootSystem' => '1.3.6.1.4.1.2356.11.4.2',
  'lcsOtherColdBoot' => '1.3.6.1.4.1.2356.11.4.5',
  'lcsProducts' => '1.3.6.1.4.1.2356.11.8',
  'lcsProductsL320agnWireless' => '1.3.6.1.4.1.2356.11.8.101',
  'lcsProductsL321agnWireless' => '1.3.6.1.4.1.2356.11.8.102',
  'lcsProductsL322agnDualWireless' => '1.3.6.1.4.1.2356.11.8.103',
  'lcsProductsIAP321agnWireless' => '1.3.6.1.4.1.2356.11.8.201',
  'lcsProductsIAP322agnDualWireless' => '1.3.6.1.4.1.2356.11.8.202',
  'lcsProductsIAP3G' => '1.3.6.1.4.1.2356.11.8.203',
  'lcsProductsIAP3213G' => '1.3.6.1.4.1.2356.11.8.204',
  'lcsProductsOAP321agnWireless' => '1.3.6.1.4.1.2356.11.8.301',
  'lcsProductsOAP322agnDualWireless' => '1.3.6.1.4.1.2356.11.8.302',
  'lcsProductsOAP3213G' => '1.3.6.1.4.1.2356.11.8.303',
  'lcsProductsOAP3G' => '1.3.6.1.4.1.2356.11.8.304',
  'lcsProductsOAP382' => '1.3.6.1.4.1.2356.11.8.306',
  'lcsProductsLC1681E' => '1.3.6.1.4.1.2356.11.8.501',
  'lcsProductsLC1681A' => '1.3.6.1.4.1.2356.11.8.502',
  'lcsProductsLC1681V' => '1.3.6.1.4.1.2356.11.8.503',
  'lcsProductsLC1681V-3G' => '1.3.6.1.4.1.2356.11.8.504',
  'lcsProductsLC1681-4G' => '1.3.6.1.4.1.2356.11.8.505',
  'lcsProductsLC1631E' => '1.3.6.1.4.1.2356.11.8.506',
  'lcsProductsLC831A' => '1.3.6.1.4.1.2356.11.8.507',
  'lcsProductsBusinessLANR800A' => '1.3.6.1.4.1.2356.11.8.508',
  'lcsProductsLC1780EW3G' => '1.3.6.1.4.1.2356.11.8.601',
  'lcsProductsLC1781A' => '1.3.6.1.4.1.2356.11.8.602',
  'lcsProductsLC1781A-3G' => '1.3.6.1.4.1.2356.11.8.603',
  'lcsProductsLC1781EF' => '1.3.6.1.4.1.2356.11.8.604',
  'lcsProductsLC1781EW' => '1.3.6.1.4.1.2356.11.8.606',
  'lcsProductsLC1781AW' => '1.3.6.1.4.1.2356.11.8.607',
  'lcsProductsLC1781-4G' => '1.3.6.1.4.1.2356.11.8.608',
  'lcsProductsWLC4006' => '1.3.6.1.4.1.2356.11.8.4001',
  'lcsProductsWLC4025' => '1.3.6.1.4.1.2356.11.8.4002',
  'lcsProductsWLC4025plus' => '1.3.6.1.4.1.2356.11.8.4003',
  'lcsProductsWLC4100' => '1.3.6.1.4.1.2356.11.8.4004',
  'lcsProductsLC7100VPN' => '1.3.6.1.4.1.2356.11.8.7001',
  'lcsProductsLC9100VPN' => '1.3.6.1.4.1.2356.11.8.9001',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'LCOS-MIB'} = {
  lcsSetupNetbiosNetworksEntryOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupUtmCfProfCatProfEntryCinTvSocial => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsStatusWanThroughputEntryIfc => {
    '257' => 'eCh01',
    '258' => 'eCh02',
    '513' => 'eModem',
    '2049' => 'eDslCh1',
    '2050' => 'eDslCh2',
    '2051' => 'eDslCh3',
    '2052' => 'eDslCh4',
    '2053' => 'eDslCh5',
    '2054' => 'eDslCh6',
    '2055' => 'eDslCh7',
    '2056' => 'eDslCh8',
    '8193' => 'eAdsl1',
    '8194' => 'eAdsl2',
    '8195' => 'eAdsl3',
    '8196' => 'eAdsl4',
    '8197' => 'eAdsl5',
    '8198' => 'eAdsl6',
    '8199' => 'eAdsl7',
    '8200' => 'eAdsl8',
    '16385' => 'eVdsl1',
    '16386' => 'eVdsl2',
    '16387' => 'eVdsl3',
    '16388' => 'eVdsl4',
    '16389' => 'eVdsl5',
    '16390' => 'eVdsl6',
    '16391' => 'eVdsl7',
    '16392' => 'eVdsl8',
  },
  lcsSetupRadiusServerForwardServersEntryProtocol => {
    '0' => 'eRadius',
    '1' => 'eRadsec',
  },
  lcsStatusPppRxOptionsIpcpEntryIfc => {
    '257' => 'eCh01',
    '258' => 'eCh02',
    '513' => 'eModem',
    '2049' => 'eDslCh1',
    '2050' => 'eDslCh2',
    '2051' => 'eDslCh3',
    '2052' => 'eDslCh4',
    '2053' => 'eDslCh5',
    '2054' => 'eDslCh6',
    '2055' => 'eDslCh7',
    '2056' => 'eDslCh8',
    '8193' => 'eAdsl1',
    '8194' => 'eAdsl2',
    '8195' => 'eAdsl3',
    '8196' => 'eAdsl4',
    '8197' => 'eAdsl5',
    '8198' => 'eAdsl6',
    '8199' => 'eAdsl7',
    '8200' => 'eAdsl8',
    '16385' => 'eVdsl1',
    '16386' => 'eVdsl2',
    '16387' => 'eVdsl3',
    '16388' => 'eVdsl4',
    '16389' => 'eVdsl5',
    '16390' => 'eVdsl6',
    '16391' => 'eVdsl7',
    '16392' => 'eVdsl8',
  },
  lcsSetupWlanMngmtApConfMulticastNetworksEntryActive => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWlanSuperviseStations => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusChannelEntryChan => {
    '1' => 'eAdslErr',
    '2' => 'eAdsl1',
    '3' => 'eAdsl2',
    '4' => 'eAdsl3',
    '5' => 'eAdsl4',
    '6' => 'eAdsl5',
    '7' => 'eAdsl6',
    '8' => 'eAdsl7',
    '9' => 'eAdsl8',
    '257' => 'eDslErr',
    '258' => 'eDslCh1',
    '259' => 'eDslCh2',
    '260' => 'eDslCh3',
    '261' => 'eDslCh4',
    '262' => 'eDslCh5',
    '263' => 'eDslCh6',
    '264' => 'eDslCh7',
    '265' => 'eDslCh8',
    '513' => 'eS01Err',
    '514' => 'eS01B1',
    '515' => 'eS01B2',
    '1281' => 'eExtErr',
    '1282' => 'eExt',
    '2049' => 'eVdslErr',
    '2050' => 'eVdslCh1',
    '2051' => 'eVdslCh2',
    '2052' => 'eVdslCh3',
    '2053' => 'eVdslCh4',
    '2054' => 'eVdslCh5',
    '2055' => 'eVdslCh6',
    '2056' => 'eVdslCh7',
    '2057' => 'eVdslCh8',
  },
  lcsSetupIpRouterOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupIpRouterRoutingMethodRoutingMethod => {
    '0' => 'eNormal',
    '1' => 'eTypeOfService',
    '2' => 'eDiffserv',
  },
  lcsSetupUtmCfProfCatProfEntryAuctionsClassifiedAds => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsStatusWlanStationTableEntryTxRate => {
    '0' => 'eUnknown',
    '1' => 'e1M',
    '2' => 'e2M',
    '3' => 'e5M',
    '4' => 'e5M5',
    '5' => 'e8M',
    '6' => 'e11M',
    '8' => 'e6M',
    '9' => 'e9M',
    '10' => 'e12M',
    '11' => 'e18M',
    '12' => 'e24M',
    '13' => 'e36M',
    '14' => 'e48M',
    '15' => 'e54M',
    '28' => 'eHT1S6M5',
    '29' => 'eHT1S13M',
    '30' => 'eHT1S19M5',
    '31' => 'eHT1S26M',
    '32' => 'eHT1S39M',
    '33' => 'eHT1S52M',
    '34' => 'eHT1S58M5',
    '35' => 'eHT1S65M',
    '36' => 'eHT2S13M',
    '37' => 'eHT2S26M',
    '38' => 'eHT2S39M',
    '39' => 'eHT2S52M',
    '40' => 'eHT2S78M',
    '41' => 'eHT2S104M',
    '42' => 'eHT2S117M',
    '43' => 'eHT2S130M',
    '44' => 'eHT3S19M5',
    '45' => 'eHT3S39M',
    '46' => 'eHT3S58M5',
    '47' => 'eHT3S78M',
    '48' => 'eHT3S117M',
    '49' => 'eHT3S156M',
    '50' => 'eHT3S175M5',
    '51' => 'eHT3S195M',
  },
  lcsStatusIpRouterRipLanSitesEntryPoisonedReverse => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanClientConnectionRejectsEntryEvent => {
    '1' => 'eDeauthenticate',
    '2' => 'eDisassociate',
    '3' => 'eAuthenticateReject',
    '4' => 'eAssociateReject',
  },
  lcsStatusCertsScepCaCaStatusCaStatus => {
    '0' => 'eDisabled',
    '1' => 'eActive',
    '2' => 'eInitializing',
    '3' => 'eInitializationError',
  },
  lcsStatusHardwareInfoAdvErrorReportingLogEntrySeverity => {
    '0' => 'eCorrectable',
    '1' => 'eUncorrectableNonFatal',
    '2' => 'eUncorrectableFatal',
  },
  lcsSetupUtmCfProfCatProfEntryMalware => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupWanDslBroadbandPeersEntryMacType => {
    '0' => 'eLocal',
    '1' => 'eGlobal',
    '2' => 'eUserDef',
  },
  lcsSetupConfigSshAuthenticationMethodsEntryIfc => {
    '1' => 'eLan',
    '2' => 'eWan',
    '3' => 'eWlan',
  },
  lcsSetupWlanMngmtAutoacceptAp => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupNetbiosOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupInterfacesWlanClientModesEntryClBrgSupport => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusIpRouterRipWanSitesEntryRipType => {
    '0' => 'eOff',
    '1' => 'eRip1',
    '2' => 'eR1Comp',
    '3' => 'eRip2',
  },
  lcsSetupWlanRadiusAccessCheckPasswordSource => {
    '0' => 'eSecret',
    '1' => 'eMacAddress',
  },
  lcsStatusWlanScanResultsEntry40mhzMode => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanInterpointsAccesspointListEntryLinkActive => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupIpRouterRipLanSitesEntryPropagate => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupIpRouterRipLanSitesEntryRipAccept => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupTacacsPlusAuthorisation => {
    '0' => 'eDeactivated',
    '1' => 'eActivated',
  },
  lcsSetupGpsOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupLanIeee8021xSupplicantIfcSetupEntryMethod => {
    '0' => 'eNone',
    '1024' => 'eMd5',
    '3328' => 'eTls',
    '5380' => 'eTtlsMd5',
    '5383' => 'eTtlsPap',
    '5384' => 'eTtlsChap',
    '5402' => 'eTtlsMschapv2',
    '5567' => 'eTtlsMschap',
    '6406' => 'ePeapGtc',
    '6426' => 'ePeapMschapv2',
  },
  lcsStatusWlanScanResultsEntryEncryption => {
    '0' => 'eNone',
    '1' => 'eWep',
    '2' => 'eTkip',
    '3' => 'eAes',
    '4' => 'eAesPlusTkip',
  },
  lcsSetupInterfacesWlanGroupEncryptionKeysEntryKeytype2 => {
    '5' => 'eWep40Bits',
    '13' => 'eWep104Bits',
    '16' => 'eWep128Bits',
  },
  lcsSetupPublicSpotModuleAddUserWizardAvailableExpiryMethods => {
    '0' => 'eAllMethods',
    '1' => 'eCurrentTimeMethod',
    '2' => 'eLoginTimeMethod',
  },
  lcsStatusWlanNetworksEntryApsd => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanStationTableEntryNetwork => {
    '0' => 'e1',
    '1' => 'e2',
    '2' => 'e3',
    '3' => 'e4',
    '4' => 'e5',
    '5' => 'e6',
    '6' => 'e7',
    '7' => 'e8',
    '8' => 'e9',
    '9' => 'e10',
    '10' => 'e11',
    '11' => 'e12',
    '12' => 'e13',
    '13' => 'e14',
    '14' => 'e15',
    '15' => 'e16',
  },
  lcsSetupInterfacesWlanTransmissionEntry11bPreamble => {
    '0' => 'eAuto',
    '1' => 'eLong',
  },
  lcsStatusComPortsComPortServerComPortStatusEntryParity => {
    '1' => 'eNone',
    '2' => 'eOdd',
    '3' => 'eEven',
  },
  lcsStatusWlanMngmtApConfRadioprofilsEntryActVlanModOfMngdAps => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupPublicSpotModuleProvideServerDatabase => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanWlanParameterEntryMinimumRate => {
    '0' => 'eUnknown',
    '1' => 'e1M',
    '2' => 'e2M',
    '3' => 'e5M',
    '4' => 'e5M5',
    '5' => 'e8M',
    '6' => 'e11M',
    '12' => 'e6M',
    '13' => 'e9M',
    '14' => 'e12M',
    '15' => 'e18M',
    '16' => 'e24M',
    '17' => 'e36M',
    '18' => 'e48M',
    '19' => 'e54M',
    '20' => 'eT12M',
    '21' => 'eT18M',
    '22' => 'eT24M',
    '23' => 'eT36M',
    '24' => 'eT48M',
    '25' => 'eT72M',
    '26' => 'eT96M',
    '27' => 'eT108M',
    '28' => 'eHT1S6M5',
    '29' => 'eHT1S13M',
    '30' => 'eHT1S19M5',
    '31' => 'eHT1S26M',
    '32' => 'eHT1S39M',
    '33' => 'eHT1S52M',
    '34' => 'eHT1S58M5',
    '35' => 'eHT1S65M',
    '36' => 'eHT2S13M',
    '37' => 'eHT2S26M',
    '38' => 'eHT2S39M',
    '39' => 'eHT2S52M',
    '40' => 'eHT2S78M',
    '41' => 'eHT2S104M',
    '42' => 'eHT2S117M',
    '43' => 'eHT2S130M',
    '44' => 'eHT3S19M5',
    '45' => 'eHT3S39M',
    '46' => 'eHT3S58M5',
    '47' => 'eHT3S78M',
    '48' => 'eHT3S117M',
    '49' => 'eHT3S156M',
    '50' => 'eHT3S175M5',
    '51' => 'eHT3S195M',
    '60' => 'eHTDUP6M',
  },
  lcsSetupLcrTimeListEntryFallback => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupInterfacesWlanClientModesEntryIfc => {
    '1' => 'eWlan1',
    '2' => 'eWlan2',
  },
  lcsStatusWlanMngmtApConfNetwprofilsEntrySsidBroadcast => {
    '0' => 'eYes',
    '1' => 'eNo',
  },
  lcsStatusWlanMngmtApConnectionsEntryState => {
    '0' => 'eUnknown',
    '5' => 'eIdle',
    '10' => 'eDiscovery',
    '15' => 'eDtlsSetup',
    '20' => 'eJoin',
    '25' => 'eConfigure',
    '30' => 'eImageData',
    '35' => 'eReset',
    '40' => 'eDtlsTeardown',
    '45' => 'eSulking',
    '100' => 'eRun',
  },
  lcsSetupWlanMngmtApConfWlanModul1Default => {
    '1' => 'e24ghz',
    '2' => 'e5ghz',
    '3' => 'eOff',
  },
  lcsSetupVpnVpnPeersEntryRuleCreation => {
    '0' => 'eAuto',
    '1' => 'eManually',
    '2' => 'eOff',
  },
  lcsStatusWlanChannelScanResultsEntryNonHtBss => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanMngmtApStatusActiveRadiosEntryInternal => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupIpRouterRipLanSitesEntryPoisonedReverse => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupInterfacesS0EntryProtocol => {
    '0' => 'eNo',
    '1' => 'eDss1',
    '2' => 'e1tr6',
    '4' => 'eP2pDss1',
    '16' => 'eGrp0',
    '255' => 'eAuto',
    '16384' => 'eNtP2pDss1',
    '32768' => 'eNtDss1',
    '65536' => 'eRevNtP2pDss1',
    '131072' => 'eRevNtDss1',
  },
  lcsSetupUtmCfProfCatProfEntryBlogsBulletinBoards => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsStatusIpRouterRipDynWanSitesEntryRfc2091 => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusChargingTableBudgetEntryIfc => {
    '1' => 'eRouterSerial',
    '2' => 'eLancapi',
    '3' => 'eAb1',
    '4' => 'eAb2',
    '5' => 'eAb3',
    '6' => 'eAb4',
    '255' => 'eTimeModul',
  },
  lcsStatusWlanMngmtCentralFwMngmtFetchJobStatus => {
    '0' => 'eIdle',
    '1' => 'eBadUrl',
    '2' => 'eHttpTimeOut',
    '3' => 'eNoMemory',
    '4' => 'eValidUrlFound',
    '5' => 'eHttpError',
    '6' => 'eDownloadIsRunning',
    '7' => 'eFetchJobIsBusy',
    '8' => 'eReceivedFileTooBig',
    '9' => 'eBroken',
    '10' => 'eInvalidFilesize',
    '11' => 'eConnError',
    '12' => 'eTooSlow',
    '13' => 'eReadFailed',
    '14' => 'eConnectionError',
    '15' => 'eDnsError',
    '16' => 'eProtocolError',
  },
  lcsStatusWlanClientIfcsEntryExtChannel => {
    '0' => 'eNone',
    '1' => 'eAbove',
    '3' => 'eBelow',
  },
  lcsSetupInterfacesMobileConnectMonitoring => {
    '0' => 'eNone',
    '1' => 'ePpp',
    '3' => 'ePppIp',
  },
  lcsSetupIpRouterIpRoutingTableEntryActive => {
    '0' => 'eYes',
    '1' => 'eNo',
    '2' => 'eSemi',
  },
  lcsSetupVpnProposalsIkeEntryIkeAuthAlg => {
    '1' => 'eMd5',
    '2' => 'eSha1',
  },
  lcsSetupInterfacesEthernetPortsEntryMdiMode => {
    '0' => 'eAuto',
    '1' => 'eMdi',
    '2' => 'eMdix',
  },
  lcsSetupWlanAccessMode => {
    '0' => 'eNegative',
    '1' => 'ePositive',
  },
  lcsStatusWlanWlanParameterEntrySupports40mhz => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusAdslModemModemState => {
    '0' => 'eNoCommunicationsPort',
    '1' => 'eError',
    '2' => 'eFileSystem',
    '3' => 'eBootHeader',
    '4' => 'eUploadingBootstrap',
    '5' => 'eUploadingMemoryTest',
    '6' => 'eMemoryTest',
    '7' => 'eOptions',
    '8' => 'eUploadingUBoot',
    '9' => 'eQuickMemoryTest',
    '10' => 'eUploadingKernel',
    '11' => 'eUploadingRamdisk',
    '12' => 'eUploadingFirmware',
    '13' => 'eWaitForHeartbeat',
    '14' => 'eRunning',
  },
  lcsSetupIpRouterFirewallFilterListEntryLinked => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWanRadiusProtocol => {
    '0' => 'eRadius',
    '1' => 'eRadsec',
  },
  lcsStatusWlanMngmtApConfNetwprofilsEntryMaxTxRate => {
    '0' => 'eAuto',
    '1' => 'e1M',
    '2' => 'e2M',
    '3' => 'e5M5',
    '4' => 'e11M',
    '5' => 'e6M',
    '6' => 'e9M',
    '7' => 'e12M',
    '8' => 'e18M',
    '9' => 'e24M',
    '10' => 'e36M',
    '11' => 'e48M',
    '12' => 'e54M',
    '13' => 'eT72M',
    '14' => 'eT96M',
    '15' => 'eT108M',
  },
  lcsSetupTcpIpArpTableEntryConnect => {
    '256' => 'eLan1',
    '257' => 'eLan2',
    '258' => 'eLan3',
    '259' => 'eLan4',
    '260' => 'eLan5',
    '512' => 'eWlan1',
    '513' => 'eWlan2',
    '768' => 'eP2p11',
    '769' => 'eP2p12',
    '770' => 'eP2p13',
    '771' => 'eP2p14',
    '772' => 'eP2p15',
    '773' => 'eP2p16',
    '774' => 'eP2p21',
    '775' => 'eP2p22',
    '776' => 'eP2p23',
    '777' => 'eP2p24',
    '778' => 'eP2p25',
    '779' => 'eP2p26',
    '799' => 'eP2p17',
    '800' => 'eP2p18',
    '801' => 'eP2p19',
    '802' => 'eP2p110',
    '803' => 'eP2p111',
    '804' => 'eP2p112',
    '805' => 'eP2p113',
    '806' => 'eP2p114',
    '807' => 'eP2p115',
    '808' => 'eP2p116',
    '831' => 'eP2p27',
    '832' => 'eP2p28',
    '833' => 'eP2p29',
    '834' => 'eP2p210',
    '835' => 'eP2p211',
    '836' => 'eP2p212',
    '837' => 'eP2p213',
    '838' => 'eP2p214',
    '839' => 'eP2p215',
    '840' => 'eP2p216',
    '1024' => 'eWlan12',
    '1025' => 'eWlan13',
    '1026' => 'eWlan14',
    '1027' => 'eWlan15',
    '1028' => 'eWlan16',
    '1029' => 'eWlan17',
    '1030' => 'eWlan18',
    '1031' => 'eWlan22',
    '1032' => 'eWlan23',
    '1033' => 'eWlan24',
    '1034' => 'eWlan25',
    '1035' => 'eWlan26',
    '1036' => 'eWlan27',
    '1037' => 'eWlan28',
    '1792' => 'eWlcTunnel1',
    '1793' => 'eWlcTunnel2',
    '1794' => 'eWlcTunnel3',
    '1795' => 'eWlcTunnel4',
    '1796' => 'eWlcTunnel5',
    '1797' => 'eWlcTunnel6',
    '1798' => 'eWlcTunnel7',
    '1799' => 'eWlcTunnel8',
    '1800' => 'eWlcTunnel9',
    '1801' => 'eWlcTunnel10',
    '1802' => 'eWlcTunnel11',
    '1803' => 'eWlcTunnel12',
    '1804' => 'eWlcTunnel13',
    '1805' => 'eWlcTunnel14',
    '1806' => 'eWlcTunnel15',
    '1807' => 'eWlcTunnel16',
    '1808' => 'eWlcTunnel17',
    '1809' => 'eWlcTunnel18',
    '1810' => 'eWlcTunnel19',
    '1811' => 'eWlcTunnel20',
    '1812' => 'eWlcTunnel21',
    '1813' => 'eWlcTunnel22',
    '1814' => 'eWlcTunnel23',
    '1815' => 'eWlcTunnel24',
    '1816' => 'eWlcTunnel25',
    '1817' => 'eWlcTunnel26',
    '1818' => 'eWlcTunnel27',
    '1819' => 'eWlcTunnel28',
    '1820' => 'eWlcTunnel29',
    '1821' => 'eWlcTunnel30',
    '1822' => 'eWlcTunnel31',
    '1823' => 'eWlcTunnel32',
    '32768' => 'eWan',
  },
  lcsSetupWlanNoiseOffsetsEntryBand => {
    '1' => 'e24ghz',
    '2' => 'e5ghz',
  },
  lcsStatusWlanMngmtCentralFwMngmtAvailFwEntryFileType => {
    '0' => 'eUnknown',
    '1' => 'eFirmware',
    '2' => 'eLoader',
    '3' => 'eOemFile',
    '4' => 'eConverter',
    '5' => 'eMiniFirmware',
  },
  lcsStatusAdslModemDefaultLineType => {
    '2' => 'eOverPots',
    '3' => 'eOverIsdn',
  },
  lcsSetupInterfacesDslEntryLanIfc => {
    '256' => 'eLan1',
    '257' => 'eLan2',
    '258' => 'eLan3',
    '259' => 'eLan4',
    '512' => 'eWlan1',
    '513' => 'eWlan2',
    '768' => 'eP2p11',
    '769' => 'eP2p12',
    '770' => 'eP2p13',
    '771' => 'eP2p14',
    '772' => 'eP2p15',
    '773' => 'eP2p16',
    '774' => 'eP2p21',
    '775' => 'eP2p22',
    '776' => 'eP2p23',
    '777' => 'eP2p24',
    '778' => 'eP2p25',
    '779' => 'eP2p26',
    '799' => 'eP2p17',
    '800' => 'eP2p18',
    '801' => 'eP2p19',
    '802' => 'eP2p110',
    '803' => 'eP2p111',
    '804' => 'eP2p112',
    '805' => 'eP2p113',
    '806' => 'eP2p114',
    '807' => 'eP2p115',
    '808' => 'eP2p116',
    '831' => 'eP2p27',
    '832' => 'eP2p28',
    '833' => 'eP2p29',
    '834' => 'eP2p210',
    '835' => 'eP2p211',
    '836' => 'eP2p212',
    '837' => 'eP2p213',
    '838' => 'eP2p214',
    '839' => 'eP2p215',
    '840' => 'eP2p216',
    '1024' => 'eWlan12',
    '1025' => 'eWlan13',
    '1026' => 'eWlan14',
    '1027' => 'eWlan15',
    '1028' => 'eWlan16',
    '1029' => 'eWlan17',
    '1030' => 'eWlan18',
    '1031' => 'eWlan22',
    '1032' => 'eWlan23',
    '1033' => 'eWlan24',
    '1034' => 'eWlan25',
    '1035' => 'eWlan26',
    '1036' => 'eWlan27',
    '1037' => 'eWlan28',
    '1536' => 'eBrg1',
    '1537' => 'eBrg2',
    '1538' => 'eBrg3',
    '1539' => 'eBrg4',
    '1540' => 'eBrg5',
    '1541' => 'eBrg6',
    '1542' => 'eBrg7',
    '1543' => 'eBrg8',
    '1792' => 'eWlcTunnel1',
    '1793' => 'eWlcTunnel2',
    '1794' => 'eWlcTunnel3',
    '1795' => 'eWlcTunnel4',
    '1796' => 'eWlcTunnel5',
    '1797' => 'eWlcTunnel6',
    '1798' => 'eWlcTunnel7',
    '1799' => 'eWlcTunnel8',
    '1800' => 'eWlcTunnel9',
    '1801' => 'eWlcTunnel10',
    '1802' => 'eWlcTunnel11',
    '1803' => 'eWlcTunnel12',
    '1804' => 'eWlcTunnel13',
    '1805' => 'eWlcTunnel14',
    '1806' => 'eWlcTunnel15',
    '1807' => 'eWlcTunnel16',
    '1808' => 'eWlcTunnel17',
    '1809' => 'eWlcTunnel18',
    '1810' => 'eWlcTunnel19',
    '1811' => 'eWlcTunnel20',
    '1812' => 'eWlcTunnel21',
    '1813' => 'eWlcTunnel22',
    '1814' => 'eWlcTunnel23',
    '1815' => 'eWlcTunnel24',
    '1816' => 'eWlcTunnel25',
    '1817' => 'eWlcTunnel26',
    '1818' => 'eWlcTunnel27',
    '1819' => 'eWlcTunnel28',
    '1820' => 'eWlcTunnel29',
    '1821' => 'eWlcTunnel30',
    '1822' => 'eWlcTunnel31',
    '1823' => 'eWlcTunnel32',
    '65535' => 'eAny',
  },
  lcsSetupCertsScepCaLoggingEMail => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanVlanGroupkeyMappingEntryNetwork => {
    '1' => 'eWlan1',
    '2' => 'eWlan2',
    '16' => 'eWlan12',
    '17' => 'eWlan13',
    '18' => 'eWlan14',
    '19' => 'eWlan15',
    '20' => 'eWlan16',
    '21' => 'eWlan17',
    '22' => 'eWlan18',
    '32' => 'eWlan22',
    '33' => 'eWlan23',
    '34' => 'eWlan24',
    '35' => 'eWlan25',
    '36' => 'eWlan26',
    '37' => 'eWlan27',
    '38' => 'eWlan28',
  },
  lcsStatusIpRouterRipLanSitesEntryPropagate => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWanRadiusPppOperation => {
    '0' => 'eNo',
    '1' => 'eYes',
    '2' => 'eExclusive',
  },
  lcsStatusLanIeee8021xSupplicantIfcStateEntryMethod => {
    '0' => 'eNone',
    '1024' => 'eMd5',
    '3328' => 'eTls',
    '5380' => 'eTtlsMd5',
    '5383' => 'eTtlsPap',
    '5384' => 'eTtlsChap',
    '5402' => 'eTtlsMschapv2',
    '5567' => 'eTtlsMschap',
    '6406' => 'ePeapGtc',
    '6426' => 'ePeapMschapv2',
  },
  lcsSetupIpRouterVrrpInternalServices => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusIpRouterRipDynLanSitesEntryPoisonedReverse => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupPublicSpotModuleAutoCleanupUserTable => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanInterpointsAccesspointListEntryKeyHandshakeRole => {
    '0' => 'eNone',
    '1' => 'eSupplicant',
    '2' => 'eAuthenticator',
  },
  lcsStatusWlanCompetingNetworksEntry40mhzCoexistence => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupInterfacesWlanTransmissionEntryMinHtMcs => {
    '0' => 'eAuto',
    '1' => 'eMcs08',
    '2' => 'eMcs19',
    '3' => 'eMcs210',
    '4' => 'eMcs311',
    '5' => 'eMcs412',
    '6' => 'eMcs513',
    '7' => 'eMcs614',
    '8' => 'eMcs715',
  },
  lcsStatusIpRouterRipDynLanSitesEntryRipSend => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupTacacsPlusBypassTacacsForCronScriptsActionTable => {
    '0' => 'eDeactivated',
    '1' => 'eActivated',
  },
  lcsStatusWlanClientIfcsEntryWpaVersion => {
    '0' => 'eNone',
    '1' => 'eWpa1',
    '2' => 'eWpa2',
  },
  lcsStatusVdslModemModemState => {
    '0' => 'eNoCommunicationsPort',
    '1' => 'eError',
    '2' => 'eFileSystem',
    '3' => 'eBootHeader',
    '4' => 'eUploadingBootstrap',
    '5' => 'eUploadingMemoryTest',
    '6' => 'eMemoryTest',
    '7' => 'eOptions',
    '8' => 'eUploadingUBoot',
    '9' => 'eQuickMemoryTest',
    '10' => 'eUploadingKernel',
    '11' => 'eUploadingRamdisk',
    '12' => 'eUploadingFirmware',
    '13' => 'eWaitForHeartbeat',
    '14' => 'eRunning',
  },
  lcsSetupLanBridgeProtocolVersion => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWlanMngmtApConfNetwprofilsEntryShortGuardInterval => {
    '0' => 'eAuto',
    '1' => 'eNo',
  },
  lcsStatusComPortsComPortServerNetworkStatusEntryConnectionStatus => {
    '0' => 'eIdle',
    '1' => 'eListening',
    '2' => 'eConnecting',
    '3' => 'eConnected',
    '4' => 'eNotListening',
    '5' => 'eConErrBackoff',
  },
  lcsStatusWlanRadiosEntryDfsScheme => {
    '0' => 'eNone',
    '1' => 'eEn301893V12',
    '2' => 'eEn301893V13',
    '4' => 'eEn302502',
    '8' => 'eFcc',
    '16' => 'eJapan',
    '32' => 'eEn301893V15',
  },
  lcsStatusTcpIpDhcpDhcpTableEntryEthernetPort => {
    '0' => 'eUnknown',
    '1' => 'eUplink',
    '2' => 'eEth1',
    '3' => 'eEth2',
    '4' => 'eEth3',
    '5' => 'eEth4',
    '16' => 'eWan',
  },
  lcsSetupUtmCfProfCatProfEntryBanking => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupUtmCfProfCatProfEntryMusicRadioBroadcast => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupWlanMngmtApConfNetwprofilsEntryMaxSpatialStreams => {
    '0' => 'eAuto',
    '1' => 'eOne',
    '2' => 'eTwo',
  },
  lcsSetupDhcpPortsEntryEnableDhcp => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanQosParametersEntryAccessCategory => {
    '0' => 'eBestEffort',
    '1' => 'eBackground',
    '2' => 'eVideo',
    '3' => 'eVoice',
  },
  lcsSetupSyslogMessagesTableOrder => {
    '0' => 'eOldestOnTop',
    '1' => 'eNewestOnTop',
  },
  lcsStatusLanBridgeIgmpSnoopingSimulatedQueriersEntryBridgeGroup => {
    '0' => 'eBrg1',
    '1' => 'eBrg2',
    '2' => 'eBrg3',
    '3' => 'eBrg4',
    '4' => 'eBrg5',
    '5' => 'eBrg6',
    '6' => 'eBrg7',
    '7' => 'eBrg8',
    '255' => 'eNone',
  },
  lcsStatusWlanRadiosEntryRadioMode => {
    '0' => 'e11bgMixed',
    '1' => 'e11gOnly',
    '2' => 'e11bOnly',
    '3' => 'e2mMixed',
    '4' => 'eTurboG',
    '5' => 'e11bgnMixed',
    '6' => 'e2m11bgnMixed',
    '7' => 'e11gnMixed',
    '8' => 'eGreenfieldGn',
    '256' => 'e11a',
    '257' => 'eTurboA',
    '259' => 'e11anMixed',
    '260' => 'eGreenfieldAn',
    '261' => 'eHalf11a',
    '262' => 'eQuarter11a',
    '65535' => 'eNone',
  },
  lcsStatusEthernetPortsCableTestResultsEntryMdi1Status => {
    '0' => 'eUnknown',
    '1' => 'eOk',
    '2' => 'eOpen',
    '3' => 'eShort',
    '4' => 'eImpedanceFault',
    '5' => 'eFail',
    '6' => 'eBusy',
  },
  lcsSetupCertsScepClntCertsEntryApplication => {
    '-1' => 'eUnconfigured',
    '0' => 'eVpn1',
    '1' => 'eWlanController',
    '3' => 'eEapTls',
    '5' => 'eVpn2',
    '6' => 'eVpn3',
    '7' => 'eVpn4',
    '8' => 'eVpn5',
    '9' => 'eVpn6',
    '10' => 'eVpn7',
    '11' => 'eVpn8',
    '12' => 'eVpn9',
    '13' => 'eDefault',
  },
  lcsSetupWlanMngmtApConfNetwprofilsEntryMacFilter => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanScanResultsEntry40mhzCoexistence => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanChannelScanResultsEntryScanned => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusTcpIpDhcpDhcpTableEntryLanIfc => {
    '256' => 'eLan1',
    '257' => 'eLan2',
    '258' => 'eLan3',
    '259' => 'eLan4',
    '260' => 'eLan5',
    '512' => 'eWlan1',
    '513' => 'eWlan2',
    '768' => 'eP2p11',
    '769' => 'eP2p12',
    '770' => 'eP2p13',
    '771' => 'eP2p14',
    '772' => 'eP2p15',
    '773' => 'eP2p16',
    '774' => 'eP2p21',
    '775' => 'eP2p22',
    '776' => 'eP2p23',
    '777' => 'eP2p24',
    '778' => 'eP2p25',
    '779' => 'eP2p26',
    '799' => 'eP2p17',
    '800' => 'eP2p18',
    '801' => 'eP2p19',
    '802' => 'eP2p110',
    '803' => 'eP2p111',
    '804' => 'eP2p112',
    '805' => 'eP2p113',
    '806' => 'eP2p114',
    '807' => 'eP2p115',
    '808' => 'eP2p116',
    '831' => 'eP2p27',
    '832' => 'eP2p28',
    '833' => 'eP2p29',
    '834' => 'eP2p210',
    '835' => 'eP2p211',
    '836' => 'eP2p212',
    '837' => 'eP2p213',
    '838' => 'eP2p214',
    '839' => 'eP2p215',
    '840' => 'eP2p216',
    '1024' => 'eWlan12',
    '1025' => 'eWlan13',
    '1026' => 'eWlan14',
    '1027' => 'eWlan15',
    '1028' => 'eWlan16',
    '1029' => 'eWlan17',
    '1030' => 'eWlan18',
    '1031' => 'eWlan22',
    '1032' => 'eWlan23',
    '1033' => 'eWlan24',
    '1034' => 'eWlan25',
    '1035' => 'eWlan26',
    '1036' => 'eWlan27',
    '1037' => 'eWlan28',
    '1536' => 'eBrg1',
    '1537' => 'eBrg2',
    '1538' => 'eBrg3',
    '1539' => 'eBrg4',
    '1540' => 'eBrg5',
    '1541' => 'eBrg6',
    '1542' => 'eBrg7',
    '1543' => 'eBrg8',
    '1792' => 'eWlcTunnel1',
    '1793' => 'eWlcTunnel2',
    '1794' => 'eWlcTunnel3',
    '1795' => 'eWlcTunnel4',
    '1796' => 'eWlcTunnel5',
    '1797' => 'eWlcTunnel6',
    '1798' => 'eWlcTunnel7',
    '1799' => 'eWlcTunnel8',
    '1800' => 'eWlcTunnel9',
    '1801' => 'eWlcTunnel10',
    '1802' => 'eWlcTunnel11',
    '1803' => 'eWlcTunnel12',
    '1804' => 'eWlcTunnel13',
    '1805' => 'eWlcTunnel14',
    '1806' => 'eWlcTunnel15',
    '1807' => 'eWlcTunnel16',
    '1808' => 'eWlcTunnel17',
    '1809' => 'eWlcTunnel18',
    '1810' => 'eWlcTunnel19',
    '1811' => 'eWlcTunnel20',
    '1812' => 'eWlcTunnel21',
    '1813' => 'eWlcTunnel22',
    '1814' => 'eWlcTunnel23',
    '1815' => 'eWlcTunnel24',
    '1816' => 'eWlcTunnel25',
    '1817' => 'eWlcTunnel26',
    '1818' => 'eWlcTunnel27',
    '1819' => 'eWlcTunnel28',
    '1820' => 'eWlcTunnel29',
    '1821' => 'eWlcTunnel30',
    '1822' => 'eWlcTunnel31',
    '1823' => 'eWlcTunnel32',
    '65535' => 'eAny',
  },
  lcsStatusWlanMngmtWlcTunnelsWlcDiscoveryEntryActive => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupPublicSpotModulePageTableEntryType => {
    '0' => 'eTemplate',
    '1' => 'eRedirect',
  },
  lcsSetupTcpIpNetworkListEntryType => {
    '0' => 'eDisabled',
    '1' => 'eIntranet',
    '2' => 'eDmz',
  },
  lcsSetupIpRouterFirewallApplicationsIrcCheckHostIp => {
    '0' => 'eOff',
    '1' => 'eAllways',
    '2' => 'eWan',
    '3' => 'eDefaultRoute',
  },
  lcsSetupWlanMngmtApConfNetwprofilsEntryWpaVersion => {
    '0' => 'eWpa12',
    '1' => 'eWpa1',
    '2' => 'eWpa2',
  },
  lcsSetupWanPptpPeersEntryEncryption => {
    '0' => 'eOff',
    '64' => 'e128Bits',
    '192' => 'e56Bits',
    '224' => 'e40Bits',
  },
  lcsStatusModemMobileHistoryEntryRegistration => {
    '0' => 'eNoNetwork',
    '1' => 'eHomeNetwork',
    '2' => 'eSearching',
    '3' => 'eDenied',
    '4' => 'eUnknown',
    '5' => 'eRoaming',
  },
  lcsSetupUsbConfigAndScript => {
    '1' => 'eInactive',
    '2' => 'eIfUnconfigured',
    '3' => 'eActive',
  },
  lcsStatusWlanInterpointsAccesspointListEntryKeyType => {
    '0' => 'eNone',
    '1' => 'eUnknown',
    '5' => 'eWep40Bits',
    '13' => 'eWep104Bits',
    '16' => 'eWep128Bits',
    '64' => 'eTkip',
    '65' => 'eAesOcb',
    '66' => 'eAesCcm',
  },
  lcsSetupUtmCfProfCatProfEntryUnknown => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsStatusVdslAdvancedVdslProfile => {
    '0' => 'eUnknown',
    '1' => 'e8a',
    '2' => 'e8b',
    '3' => 'e8c',
    '4' => 'e8d',
    '5' => 'e12a',
    '6' => 'e12b',
    '7' => 'e17a',
    '8' => 'e30a',
    '9' => 'e17b',
  },
  lcsSetupInterfacesWlanRoamingEntryIfc => {
    '1' => 'eWlan1',
    '2' => 'eWlan2',
  },
  lcsSetupIeee8021xPortsEntryPortControl => {
    '0' => 'eForceUnauth',
    '1' => 'eForceAuth',
    '2' => 'eAuto',
  },
  lcsSetupInterfacesWlanRadioSettingsEntryAntennaMask => {
    '0' => 'eAuto',
    '1' => 'eAntenna1',
    '3' => 'eAntenna1Plus2',
    '5' => 'eAntenna1Plus3',
    '7' => 'eAntenna1Plus2Plus3',
  },
  lcsSetupWlanMngmtApConfNetwprofilsEntryOperating => {
    '0' => 'eYes',
    '1' => 'eNo',
  },
  lcsStatusLanBridgeSpanningTreeRstpPortTableEntryProtocolVersion => {
    '0' => 'eClassic',
    '1' => 'eRapid',
  },
  lcsStatusIpRouterRipDynLanSitesEntryPort => {
    '256' => 'eLan1',
    '257' => 'eLan2',
    '258' => 'eLan3',
    '259' => 'eLan4',
    '260' => 'eLan5',
    '512' => 'eWlan1',
    '513' => 'eWlan2',
    '768' => 'eP2p11',
    '769' => 'eP2p12',
    '770' => 'eP2p13',
    '771' => 'eP2p14',
    '772' => 'eP2p15',
    '773' => 'eP2p16',
    '774' => 'eP2p21',
    '775' => 'eP2p22',
    '776' => 'eP2p23',
    '777' => 'eP2p24',
    '778' => 'eP2p25',
    '779' => 'eP2p26',
    '799' => 'eP2p17',
    '800' => 'eP2p18',
    '801' => 'eP2p19',
    '802' => 'eP2p110',
    '803' => 'eP2p111',
    '804' => 'eP2p112',
    '805' => 'eP2p113',
    '806' => 'eP2p114',
    '807' => 'eP2p115',
    '808' => 'eP2p116',
    '831' => 'eP2p27',
    '832' => 'eP2p28',
    '833' => 'eP2p29',
    '834' => 'eP2p210',
    '835' => 'eP2p211',
    '836' => 'eP2p212',
    '837' => 'eP2p213',
    '838' => 'eP2p214',
    '839' => 'eP2p215',
    '840' => 'eP2p216',
    '1024' => 'eWlan12',
    '1025' => 'eWlan13',
    '1026' => 'eWlan14',
    '1027' => 'eWlan15',
    '1028' => 'eWlan16',
    '1029' => 'eWlan17',
    '1030' => 'eWlan18',
    '1031' => 'eWlan22',
    '1032' => 'eWlan23',
    '1033' => 'eWlan24',
    '1034' => 'eWlan25',
    '1035' => 'eWlan26',
    '1036' => 'eWlan27',
    '1037' => 'eWlan28',
    '1536' => 'eBrg1',
    '1537' => 'eBrg2',
    '1538' => 'eBrg3',
    '1539' => 'eBrg4',
    '1540' => 'eBrg5',
    '1541' => 'eBrg6',
    '1542' => 'eBrg7',
    '1543' => 'eBrg8',
    '1792' => 'eWlcTunnel1',
    '1793' => 'eWlcTunnel2',
    '1794' => 'eWlcTunnel3',
    '1795' => 'eWlcTunnel4',
    '1796' => 'eWlcTunnel5',
    '1797' => 'eWlcTunnel6',
    '1798' => 'eWlcTunnel7',
    '1799' => 'eWlcTunnel8',
    '1800' => 'eWlcTunnel9',
    '1801' => 'eWlcTunnel10',
    '1802' => 'eWlcTunnel11',
    '1803' => 'eWlcTunnel12',
    '1804' => 'eWlcTunnel13',
    '1805' => 'eWlcTunnel14',
    '1806' => 'eWlcTunnel15',
    '1807' => 'eWlcTunnel16',
    '1808' => 'eWlcTunnel17',
    '1809' => 'eWlcTunnel18',
    '1810' => 'eWlcTunnel19',
    '1811' => 'eWlcTunnel20',
    '1812' => 'eWlcTunnel21',
    '1813' => 'eWlcTunnel22',
    '1814' => 'eWlcTunnel23',
    '1815' => 'eWlcTunnel24',
    '1816' => 'eWlcTunnel25',
    '1817' => 'eWlcTunnel26',
    '1818' => 'eWlcTunnel27',
    '1819' => 'eWlcTunnel28',
    '1820' => 'eWlcTunnel29',
    '1821' => 'eWlcTunnel30',
    '1822' => 'eWlcTunnel31',
    '1823' => 'eWlcTunnel32',
    '65535' => 'eAny',
  },
  lcsSetupUtmCfGlobalSettingsActionOnError => {
    '0' => 'eBlock',
    '1' => 'ePass',
  },
  lcsStatusIpRouterRipWanSitesEntryRipAccept => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanStationTableEntryLastError => {
    '0' => 'eNone',
    '1' => 'eAuthSuccess',
    '2' => 'eDeauth',
    '3' => 'eAssocSuccess',
    '4' => 'eReassocSuccess',
    '5' => 'eDisassoc',
    '6' => 'eRadiusSuccess',
    '7' => 'eAuthReject',
    '8' => 'eAssocReject',
    '9' => 'eKeyhandshakeSuccess',
    '10' => 'eKeyhandshakeTimeout',
    '11' => 'eKeyhandshakeFailure',
    '12' => 'eRadiusReject',
    '13' => 'eSupervision',
    '14' => 'e8021xSuccess',
    '15' => 'e8021xFailure',
    '16' => 'eIdleTimeout',
    '17' => 'eAdminDeassoc',
    '18' => 'eRoamed',
  },
  lcsStatusIpRouterRipLanSitesEntryPort => {
    '256' => 'eLan1',
    '257' => 'eLan2',
    '258' => 'eLan3',
    '259' => 'eLan4',
    '260' => 'eLan5',
    '512' => 'eWlan1',
    '513' => 'eWlan2',
    '768' => 'eP2p11',
    '769' => 'eP2p12',
    '770' => 'eP2p13',
    '771' => 'eP2p14',
    '772' => 'eP2p15',
    '773' => 'eP2p16',
    '774' => 'eP2p21',
    '775' => 'eP2p22',
    '776' => 'eP2p23',
    '777' => 'eP2p24',
    '778' => 'eP2p25',
    '779' => 'eP2p26',
    '799' => 'eP2p17',
    '800' => 'eP2p18',
    '801' => 'eP2p19',
    '802' => 'eP2p110',
    '803' => 'eP2p111',
    '804' => 'eP2p112',
    '805' => 'eP2p113',
    '806' => 'eP2p114',
    '807' => 'eP2p115',
    '808' => 'eP2p116',
    '831' => 'eP2p27',
    '832' => 'eP2p28',
    '833' => 'eP2p29',
    '834' => 'eP2p210',
    '835' => 'eP2p211',
    '836' => 'eP2p212',
    '837' => 'eP2p213',
    '838' => 'eP2p214',
    '839' => 'eP2p215',
    '840' => 'eP2p216',
    '1024' => 'eWlan12',
    '1025' => 'eWlan13',
    '1026' => 'eWlan14',
    '1027' => 'eWlan15',
    '1028' => 'eWlan16',
    '1029' => 'eWlan17',
    '1030' => 'eWlan18',
    '1031' => 'eWlan22',
    '1032' => 'eWlan23',
    '1033' => 'eWlan24',
    '1034' => 'eWlan25',
    '1035' => 'eWlan26',
    '1036' => 'eWlan27',
    '1037' => 'eWlan28',
    '1536' => 'eBrg1',
    '1537' => 'eBrg2',
    '1538' => 'eBrg3',
    '1539' => 'eBrg4',
    '1540' => 'eBrg5',
    '1541' => 'eBrg6',
    '1542' => 'eBrg7',
    '1543' => 'eBrg8',
    '1792' => 'eWlcTunnel1',
    '1793' => 'eWlcTunnel2',
    '1794' => 'eWlcTunnel3',
    '1795' => 'eWlcTunnel4',
    '1796' => 'eWlcTunnel5',
    '1797' => 'eWlcTunnel6',
    '1798' => 'eWlcTunnel7',
    '1799' => 'eWlcTunnel8',
    '1800' => 'eWlcTunnel9',
    '1801' => 'eWlcTunnel10',
    '1802' => 'eWlcTunnel11',
    '1803' => 'eWlcTunnel12',
    '1804' => 'eWlcTunnel13',
    '1805' => 'eWlcTunnel14',
    '1806' => 'eWlcTunnel15',
    '1807' => 'eWlcTunnel16',
    '1808' => 'eWlcTunnel17',
    '1809' => 'eWlcTunnel18',
    '1810' => 'eWlcTunnel19',
    '1811' => 'eWlcTunnel20',
    '1812' => 'eWlcTunnel21',
    '1813' => 'eWlcTunnel22',
    '1814' => 'eWlcTunnel23',
    '1815' => 'eWlcTunnel24',
    '1816' => 'eWlcTunnel25',
    '1817' => 'eWlcTunnel26',
    '1818' => 'eWlcTunnel27',
    '1819' => 'eWlcTunnel28',
    '1820' => 'eWlcTunnel29',
    '1821' => 'eWlcTunnel30',
    '1822' => 'eWlcTunnel31',
    '1823' => 'eWlcTunnel32',
    '65535' => 'eAny',
  },
  lcsStatusModemMobileState => {
    '0' => 'eDeactivated',
    '1' => 'eDeviceDetection',
    '2' => 'eReset',
    '3' => 'eInitializing',
    '4' => 'eModemId',
    '5' => 'eReady',
    '6' => 'eConnecting',
    '7' => 'ePassConnecting',
    '8' => 'eDataMode',
    '9' => 'eNetworkScan',
    '10' => 'eSetPin',
    '11' => 'ePinInvalid',
    '12' => 'eUnexpectedResponse',
    '13' => 'ePukRequired',
    '14' => 'eNetwork',
    '15' => 'eWaitForDevice',
  },
  lcsSetupUtmCfProfCatProfEntryTravel => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupIpRouter1NNatFragments => {
    '0' => 'eFilter',
    '1' => 'eRoute',
    '2' => 'eReassemble',
  },
  lcsStatusIpRouterEstablishTableEntryProt => {
    '1' => 'eIcmp',
    '2' => 'eIgmp',
    '3' => 'eGgt',
    '4' => 'eIpip',
    '6' => 'eTcp',
    '8' => 'eEgp',
    '17' => 'eUdp',
    '47' => 'eGre',
    '50' => 'eEsp',
    '51' => 'eAh',
    '62' => 'eCftp',
    '108' => 'eIpcomp',
    '112' => 'eVrrp',
    '119' => 'eSrp',
  },
  lcsSetupUtmCfGlobalSettingsOverrideActive => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanMngmtApConfApsEntryMngmtFwAddInfo => {
    '1' => 'eDisabledDueToErrorDuringUpdate',
    '2' => 'eDisabledByManualUpload',
  },
  lcsStatusWtpMngmtNetwprofilsEntryOperating => {
    '0' => 'eYes',
    '1' => 'eNo',
  },
  lcsSetupConfigAntiTheftProtectionGetGpsPosition => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusLanCableTestResultsEntryMdi3Status => {
    '0' => 'eUnknown',
    '1' => 'eOk',
    '2' => 'eOpen',
    '3' => 'eShort',
    '4' => 'eImpedanceFault',
    '5' => 'eFail',
    '6' => 'eBusy',
  },
  lcsSetupWlanMngmtApConfNetwprofilsEntryMinTxRate => {
    '0' => 'eAuto',
    '1' => 'e1M',
    '2' => 'e2M',
    '3' => 'e5M5',
    '4' => 'e11M',
    '5' => 'e6M',
    '6' => 'e9M',
    '7' => 'e12M',
    '8' => 'e18M',
    '9' => 'e24M',
    '10' => 'e36M',
    '11' => 'e48M',
    '12' => 'e54M',
    '13' => 'eT72M',
    '14' => 'eT96M',
    '15' => 'eT108M',
  },
  lcsStatusWlanScanResultsEntryQos => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWlanUseFullChannelset => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWtpMngmtNetwprofilsEntryShortGuardInterval => {
    '0' => 'eAuto',
    '1' => 'eNo',
  },
  lcsSetupLanBridgeIgmpSnoopingPortSettingsEntryRouterPort => {
    '0' => 'eNo',
    '1' => 'eAuto',
    '2' => 'eYes',
  },
  lcsSetupWlanMngmtApConfDscpForControlPackets => {
    '0' => 'eBestEffort',
    '40' => 'eAssuredForwarding11',
    '48' => 'eAssuredForwarding12',
    '56' => 'eAssuredForwarding13',
    '72' => 'eAssuredForwarding21',
    '80' => 'eAssuredForwarding22',
    '88' => 'eAssuredForwarding23',
    '104' => 'eAssuredForwarding31',
    '112' => 'eAssuredForwarding32',
    '120' => 'eAssuredForwarding33',
    '136' => 'eAssuredForwarding41',
    '144' => 'eAssuredForwarding42',
    '152' => 'eAssuredForwarding43',
    '184' => 'eExpeditedForwarding',
  },
  lcsSetupAccountingTimeSnapshotEntryActive => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupInterfacesWlanBeaconingEntryIfc => {
    '1' => 'eWlan1',
    '2' => 'eWlan2',
  },
  lcsSetupHttpFileServerOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupInterfacesWlanEncryptionEntryProtMgmtFrames => {
    '0' => 'eNo',
    '1' => 'eOptional',
    '2' => 'eYes',
  },
  lcsStatusConfigAntiTheftProtectionPositionValid => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanScanResultsEntryExtChannel => {
    '0' => 'eNone',
    '1' => 'eAbove',
    '3' => 'eBelow',
  },
  lcsStatusWlanInterpointsAccesspointListEntryShortPreamble => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupIpRouterRipLanSitesEntryRipSend => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWtpMngmtNetwprofilsEntryMaxTxRate => {
    '0' => 'eAuto',
    '1' => 'e1M',
    '2' => 'e2M',
    '3' => 'e5M5',
    '4' => 'e11M',
    '5' => 'e6M',
    '6' => 'e9M',
    '7' => 'e12M',
    '8' => 'e18M',
    '9' => 'e24M',
    '10' => 'e36M',
    '11' => 'e48M',
    '12' => 'e54M',
    '13' => 'eT72M',
    '14' => 'eT96M',
    '15' => 'eT108M',
  },
  lcsStatusWlanMngmtApConfRadioprofilsEntryMgmtVlanMode => {
    '0' => 'eUntagged',
    '1' => 'eTagged',
  },
  lcsSetupHttpRolloutWizardVariablesEntryType => {
    '0' => 'eLabel',
    '1' => 'eInteger',
    '2' => 'eString',
    '3' => 'ePassword',
    '4' => 'eCheckmark',
  },
  lcsStatusLanInterfacesEntryFlowControl => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanLogTableEntryInterface => {
    '1' => 'eWlan1',
    '2' => 'eWlan2',
    '16' => 'eWlan12',
    '17' => 'eWlan13',
    '18' => 'eWlan14',
    '19' => 'eWlan15',
    '20' => 'eWlan16',
    '21' => 'eWlan17',
    '22' => 'eWlan18',
    '32' => 'eWlan22',
    '33' => 'eWlan23',
    '34' => 'eWlan24',
    '35' => 'eWlan25',
    '36' => 'eWlan26',
    '37' => 'eWlan27',
    '38' => 'eWlan28',
  },
  lcsSetupWlanMngmtApConfRadioprofilsEntryCountry => {
    '0' => 'eDefault',
    '8' => 'eAlbania',
    '32' => 'eArgentina',
    '36' => 'eAustralia',
    '40' => 'eAustria',
    '48' => 'eBahrain',
    '50' => 'eBangladesh',
    '56' => 'eBelgium',
    '70' => 'eBosniaHerzegovina',
    '76' => 'eBrazil',
    '96' => 'eBruneiDarussalam',
    '100' => 'eBulgaria',
    '112' => 'eBelarus',
    '124' => 'eCanada',
    '152' => 'eChile',
    '156' => 'eChina',
    '158' => 'eTaiwan',
    '170' => 'eColombia',
    '188' => 'eCostaRica',
    '191' => 'eCroatia',
    '196' => 'eCyprus',
    '203' => 'eCzech',
    '208' => 'eDenmark',
    '218' => 'eEcuador',
    '233' => 'eEstonia',
    '246' => 'eFinland',
    '250' => 'eFrance',
    '276' => 'eGermany',
    '288' => 'eGhana',
    '300' => 'eGreece',
    '320' => 'eGuatemala',
    '340' => 'eHonduras',
    '344' => 'eHongKong',
    '348' => 'eHungary',
    '352' => 'eIceland',
    '356' => 'eIndia',
    '360' => 'eIndonesia',
    '372' => 'eIreland',
    '376' => 'eIsrael',
    '380' => 'eItaly',
    '392' => 'eJapan',
    '400' => 'eJordan',
    '410' => 'eSouthKorea',
    '414' => 'eKuwait',
    '422' => 'eLebanon',
    '428' => 'eLatvia',
    '438' => 'eLiechtenstein',
    '440' => 'eLithuania',
    '442' => 'eLuxembourg',
    '446' => 'eMacau',
    '458' => 'eMalaysia',
    '470' => 'eMalta',
    '484' => 'eMexico',
    '498' => 'eMoldavia',
    '504' => 'eMorocco',
    '512' => 'eOman',
    '528' => 'eNetherlands',
    '554' => 'eNewZealand',
    '558' => 'eNicaragua',
    '578' => 'eNorway',
    '586' => 'ePakistan',
    '591' => 'ePanama',
    '600' => 'eParaguay',
    '604' => 'ePeru',
    '608' => 'ePhilippines',
    '616' => 'ePoland',
    '620' => 'ePortugal',
    '630' => 'ePuertoRico',
    '634' => 'eQatar',
    '642' => 'eRomania',
    '643' => 'eRussia',
    '682' => 'eSaudiArabia',
    '702' => 'eSingapore',
    '703' => 'eSlovak',
    '705' => 'eSlovenia',
    '710' => 'eSouthAfrica',
    '724' => 'eSpain',
    '752' => 'eSweden',
    '756' => 'eSwitzerland',
    '764' => 'eThailand',
    '784' => 'eUnitedArabEmirates',
    '788' => 'eTunisia',
    '792' => 'eTurkey',
    '800' => 'eUganda',
    '804' => 'eUkraine',
    '807' => 'eMacedonia',
    '818' => 'eEgypt',
    '826' => 'eUnitedKingdom',
    '834' => 'eTanzania',
    '840' => 'eUnitedStatesFcc',
    '858' => 'eUruguay',
    '862' => 'eVenezuela',
    '999' => 'eEgalistan',
  },
  lcsSetupIpRouterFirewallOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusInfoConnectionEntryMode => {
    '0' => 'eUnknown',
    '4' => 'eActive',
    '5' => 'ePassive',
    '9' => 'eCallback',
  },
  lcsSetupCertsScepClntCasEntryCaFingerprintAlgorithm => {
    '0' => 'eOff',
    '1' => 'eSha1',
    '2' => 'eMd5',
  },
  lcsStatusWlanVlanGroupkeyMappingEntrySource => {
    '1' => 'eManual',
    '2' => 'eAutomatic',
  },
  lcsSetupWlanOmitGlobalCryptoSequenceCheck => {
    '0' => 'eAuto',
    '1' => 'eNo',
    '2' => 'eYes',
  },
  lcsSetupLcrLancapiUsage => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupConfigAdminsEntryActive => {
    '0' => 'eYes',
    '1' => 'eNo',
  },
  lcsSetupWlanMngmtApConfApsEntryAllow40mhz => {
    '0' => 'eAuto',
    '1' => 'eNo',
  },
  lcsStatusWtpMngmtRadioModeEntryRadioChannel => {
    '0' => 'eAuto',
  },
  lcsStatusWtpMngmtNetwprofilsEntryWpa2SessionKeytypes => {
    '0' => 'eTkipAes',
    '1' => 'eAes',
    '2' => 'eTkip',
  },
  lcsSetupLanBridgePortDataEntryActive => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWlanMngmtApConfDscpForDataPackets => {
    '0' => 'eBestEffort',
    '40' => 'eAssuredForwarding11',
    '48' => 'eAssuredForwarding12',
    '56' => 'eAssuredForwarding13',
    '72' => 'eAssuredForwarding21',
    '80' => 'eAssuredForwarding22',
    '88' => 'eAssuredForwarding23',
    '104' => 'eAssuredForwarding31',
    '112' => 'eAssuredForwarding32',
    '120' => 'eAssuredForwarding33',
    '136' => 'eAssuredForwarding41',
    '144' => 'eAssuredForwarding42',
    '152' => 'eAssuredForwarding43',
    '184' => 'eExpeditedForwarding',
  },
  lcsSetupWanPptpSourceCheck => {
    '0' => 'eAddress',
    '1' => 'eTagPlusAddress',
  },
  lcsSetupWlanMngmtApConfRadioprofilsEntryMgmtVlanMode => {
    '0' => 'eUntagged',
    '1' => 'eTagged',
  },
  lcsStatusWlanMngmtApConfNetwprofilsEntryInterStationTraffic => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanMngmtApConfNetwprofilsEntryRadiusAccounting => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupAccountingCurrentUserEntryConnType => {
    '0' => 'eUnknown',
    '1' => 'eDialUp',
    '2' => 'eLeasedLine',
    '4' => 'eDslLine',
    '7' => 'eVpnConn',
    '8' => 'ePptpConn',
  },
  lcsSetupIpRouterRoutingMethodRouteInternalServices => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupComPortsCOMPortServNetwSetEntryTcpMode => {
    '0' => 'eServer',
    '1' => 'eClient',
  },
  lcsSetupVpnOcspClientActive => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupUtmCfProfCatProfEntryDatingNetworks => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupPppoeServerPortsEntryEnablePppoe => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupNetbiosPeersEntryType => {
    '0' => 'eRouter',
    '1' => 'eWorkstation',
  },
  lcsSetupLanBridgePortDataEntryBridgeGroup => {
    '0' => 'eBrg1',
    '1' => 'eBrg2',
    '2' => 'eBrg3',
    '3' => 'eBrg4',
    '4' => 'eBrg5',
    '5' => 'eBrg6',
    '6' => 'eBrg7',
    '7' => 'eBrg8',
    '255' => 'eNone',
  },
  lcsSetupInterfacesWlanEncryptionEntryWpaVersion => {
    '2' => 'eWpa1',
    '4' => 'eWpa2',
    '6' => 'eWpa12',
  },
  lcsStatusWlanWlanParameterEntrySupportsShortSlotTime => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWtpMngmtNetwprofilsEntryInterStationTraffic => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupInterfacesLanInterfacesEntryMdiMode => {
    '0' => 'eAuto',
    '1' => 'eMdi',
    '2' => 'eMdix',
  },
  lcsSetupNtpBcMode => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupRadiusServerEapTlsCheckUsername => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusPppPppPhasesEntryCcp => {
    '1' => 'eInitial',
    '2' => 'eStartng',
    '3' => 'eClosed',
    '4' => 'eStopped',
    '5' => 'eClosing',
    '6' => 'eStoppng',
    '7' => 'eReqsent',
    '8' => 'eAckrcvd',
    '9' => 'eAcksent',
    '10' => 'eOpened',
  },
  lcsSetupPerfmonRttmonadminEntryType => {
    '9' => 'eJitter',
  },
  lcsStatusComPortsDevEntryState => {
    '0' => 'eUnknown',
    '1' => 'eInitialize',
    '2' => 'eWaitForFirmware',
    '3' => 'eReady',
    '4' => 'eInUse',
    '5' => 'eExclusive',
    '6' => 'eInitialize2',
    '7' => 'eResetting',
  },
  lcsSetupUtmCfProfCatProfEntryWeaponsMilitary => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupWlanMngmtApConfRadioprofilsEntryQos => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanScanResultsEntryNonerpPresent => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanMngmtNetCountEntryBridgeInterface => {
    '0' => 'eLan',
    '1' => 'eWlcTunnel1',
    '2' => 'eWlcTunnel2',
    '3' => 'eWlcTunnel3',
    '4' => 'eWlcTunnel4',
    '5' => 'eWlcTunnel5',
    '6' => 'eWlcTunnel6',
    '7' => 'eWlcTunnel7',
    '8' => 'eWlcTunnel8',
    '9' => 'eWlcTunnel9',
    '10' => 'eWlcTunnel10',
    '11' => 'eWlcTunnel11',
    '12' => 'eWlcTunnel12',
    '13' => 'eWlcTunnel13',
    '14' => 'eWlcTunnel14',
    '15' => 'eWlcTunnel15',
    '16' => 'eWlcTunnel16',
    '17' => 'eWlcTunnel17',
    '18' => 'eWlcTunnel18',
    '19' => 'eWlcTunnel19',
    '20' => 'eWlcTunnel20',
    '21' => 'eWlcTunnel21',
    '22' => 'eWlcTunnel22',
    '23' => 'eWlcTunnel23',
    '24' => 'eWlcTunnel24',
    '25' => 'eWlcTunnel25',
    '26' => 'eWlcTunnel26',
    '27' => 'eWlcTunnel27',
    '28' => 'eWlcTunnel28',
    '29' => 'eWlcTunnel29',
    '30' => 'eWlcTunnel30',
    '31' => 'eWlcTunnel31',
    '32' => 'eWlcTunnel32',
  },
  lcsSetupInterfacesWlanOperationalEntryOperating => {
    '0' => 'eYes',
    '1' => 'eNo',
  },
  lcsStatusIpRouterVrrpVirtualRouterEntryState => {
    '0' => 'eInit',
    '1' => 'eListen',
    '2' => 'eStandby',
    '3' => 'eMaster',
    '4' => 'eDown',
    '5' => 'eReconnect',
  },
  lcsStatusWlanNetworksEntryRadioMode => {
    '0' => 'e11bgMixed',
    '1' => 'e11gOnly',
    '2' => 'e11bOnly',
    '3' => 'e2mMixed',
    '4' => 'eTurboG',
    '5' => 'e11bgnMixed',
    '6' => 'e2m11bgnMixed',
    '7' => 'e11gnMixed',
    '8' => 'eGreenfieldGn',
    '256' => 'e11a',
    '257' => 'eTurboA',
    '259' => 'e11anMixed',
    '260' => 'eGreenfieldAn',
    '261' => 'eHalf11a',
    '262' => 'eQuarter11a',
    '65535' => 'eNone',
  },
  lcsSetupUtmCfProfCatProfEntryItSecurityItInformation => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsStatusGpsPositionValid => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupChargesTimeTableEntryIfc => {
    '1' => 'eRouterDslBroadband',
    '2' => 'eRouterSerial',
    '3' => 'eLancapi',
    '4' => 'eAb1',
    '5' => 'eAb2',
    '6' => 'eAb3',
    '7' => 'eAb4',
    '255' => 'eTimeModul',
  },
  lcsSetupAccountingTimeSnapshotEntryDayofweek => {
    '0' => 'eUnknown',
    '1' => 'eSunday',
    '2' => 'eMonday',
    '3' => 'eTuesday',
    '4' => 'eWednesday',
    '5' => 'eThursday',
    '6' => 'eFriday',
    '7' => 'eSaturday',
  },
  lcsSetupWlanMngmtApConfNetwprofilsEntryMaxTxRate => {
    '0' => 'eAuto',
    '1' => 'e1M',
    '2' => 'e2M',
    '3' => 'e5M5',
    '4' => 'e11M',
    '5' => 'e6M',
    '6' => 'e9M',
    '7' => 'e12M',
    '8' => 'e18M',
    '9' => 'e24M',
    '10' => 'e36M',
    '11' => 'e48M',
    '12' => 'e54M',
    '13' => 'eT72M',
    '14' => 'eT96M',
    '15' => 'eT108M',
  },
  lcsStatusWtpMngmtNetwprofilsEntryMaxSpatialStreams => {
    '0' => 'eAuto',
    '1' => 'eOne',
    '2' => 'eTwo',
  },
  lcsStatusGpsOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWlanMngmtApConfNetwprofilsEntryInterStationTraffic => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanScanResultsEntryInterface => {
    '0' => 'eWlan1',
    '1' => 'eWlan2',
    '2' => 'eWlan3',
    '3' => 'eWlan4',
  },
  lcsSetupVpnNatTPortForRekeying => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanChannelScanResultsEntryDfsScheme => {
    '0' => 'eNone',
    '1' => 'eEn301893V12',
    '2' => 'eEn301893V13',
    '4' => 'eEn302502',
    '8' => 'eFcc',
    '16' => 'eJapan',
    '32' => 'eEn301893V15',
  },
  lcsStatusWlanMngmtApConfNetwprofilsEntryMinHtMcs => {
    '0' => 'eAuto',
    '1' => 'eMcs08',
    '2' => 'eMcs19',
    '3' => 'eMcs210',
    '4' => 'eMcs311',
    '5' => 'eMcs412',
    '6' => 'eMcs513',
    '7' => 'eMcs614',
    '8' => 'eMcs715',
  },
  lcsStatusHardwareInfoAdvErrorReportingLogEntryLayer => {
    '0' => 'eUnknown',
    '1' => 'ePhysical',
    '2' => 'eDataLink',
    '3' => 'eTransaction',
  },
  lcsStatusWlanInterpointsAccesspointListEntryWpaVersion => {
    '0' => 'eNone',
    '1' => 'eWpa1',
    '2' => 'eWpa2',
  },
  lcsSetupCertsOcspClientCaProfileTableEntryPreferAia => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWtpMngmtRadioprofilsEntryQos => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWlanMngmtApConfApsEntryWlanModule2 => {
    '0' => 'eDefault',
    '1' => 'e24ghz',
    '2' => 'e5ghz',
    '3' => 'eOff',
  },
  lcsStatusWlanWlanParameterEntryExcEirp => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupConfigLedTest => {
    '0' => 'eOff',
    '1' => 'eRed',
    '2' => 'eGreen',
    '3' => 'eOrange',
    '255' => 'eNoTest',
  },
  lcsStatusWtpMngmtRadioModeEntryRadioMode => {
    '0' => 'eDefault',
    '1' => 'e24ghz',
    '2' => 'e5ghz',
    '3' => 'eOff',
  },
  lcsSetupPacketCaptureLcoscapOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupPublicSpotModuleAddUserWizardSsidTableEntryDefault => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupCertsScepCaLoggingSendBackupReminder => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupComPortsWanDevEntryDeviceType => {
    '2' => 'eOutbandModem',
    '11' => 'eSierraMinicard8780',
    '12' => 'eSierraMinicard8781',
    '17' => 'eOptionIcon',
    '19' => 'eOptionMinicard0201',
    '21' => 'eHuaweiE612E630E1750',
    '23' => 'e4gSystemsUxs1',
    '26' => 'eNovatelMerlinMc950d',
    '30' => 'eSierraAircard875u',
    '31' => 'eHuaweiE172E220E870',
    '33' => 'eBelkinF5u103',
    '34' => 'eProlific2303',
    '35' => 'eFtdi8u232am',
    '38' => 'eSierraMinicard8790',
    '39' => 'eSierraCompass885',
    '46' => 'eSierraAircard501',
    '49' => 'eHuaweiK4505',
    '51' => 'eHuaweiK3765',
    '53' => 'eSierraDirectIp',
    '54' => 'eHuaweiE182',
    '55' => 'eSierraMinicard8705',
    '56' => 'eSierraMinicard8801',
    '57' => 'eHuaweiE1750',
    '59' => 'eNokiaCs19',
    '60' => 'eHuaweiE398',
    '61' => 'eHuaweiE1550',
    '62' => 'eSierraMinicard7710',
  },
  lcsStatusIsdnLineS0EntryOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupConfigSshAuthenticationMethodsEntryMethods => {
    '1' => 'ePublicKey',
    '2' => 'ePassword',
    '3' => 'ePasswordPlusPublicKey',
    '4' => 'eKeyboardInteractive',
    '5' => 'eKeyboardInteractivePlusPublicKey',
    '6' => 'ePasswordPlusKeyboardInteractive',
    '255' => 'eAll',
  },
  lcsStatusVpnConnectionsEntryClientSn => {
    '-1' => 'eNotAvailable',
    '0' => 'eDemoVersion',
  },
  lcsSetupRadiusServerForwardServersEntryAccntProtocol => {
    '0' => 'eRadius',
    '1' => 'eRadsec',
  },
  lcsSetupUtmCfProfCatProfEntryWebmailUnifiedMessaging => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupUtmCfProfCatProfEntryChat => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupWanLayerEntryL2Opt => {
    '0' => 'eCompr',
    '1' => 'eBundle',
    '2' => 'eBndPlusCmpr',
    '255' => 'eNone',
  },
  lcsSetupInterfacesWlanPerformanceEntryQos => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWtpMngmtRadioModeEntryAllow40mhz => {
    '0' => 'eAuto',
    '1' => 'eNo',
  },
  lcsStatusIsdnSignalingLayer2LapdEntryTei => {
    '128' => 'eNone',
  },
  lcsStatusWtpMngmtRadioprofilsEntryIndoorOnlyOperation => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupInterfacesWlanClientModesEntryCreateIbss => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupTimeDstClockChangesEntryEvent => {
    '1' => 'eStart',
    '2' => 'eEnd',
  },
  lcsSetupNetbiosUpdate => {
    '0' => 'ePback',
    '1' => 'eTrig',
    '2' => 'eTime',
  },
  lcsSetupWlanMngmtApConfNetwprofilsEntrySendAggregates => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupVpnSimpleCertRasOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupUtmCfProfCatProfEntryEnvironmentClimatePets => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupUtmCfProfCatProfEntryComputerCrimeWarezHacking => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsStatusVlanOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupIpRouter1NNatIdSpoofing => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusModemMobileMode => {
    '0' => 'eUnknown',
    '1' => 'eUmts',
    '2' => 'eGprs',
    '3' => 'eGsm',
    '4' => 'eEdge',
    '5' => 'eHsdpa',
    '6' => 'eHsupa',
    '7' => 'eHspaPlus',
    '8' => 'eLte',
    '9' => 'eHspa',
  },
  lcsStatusPppTxOptionsLcpEntryAcfc => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusEthernetPortsPortsEntryClockRole => {
    '0' => 'eNone',
    '1' => 'eMaster',
    '2' => 'eSlave',
    '3' => 'eFault',
  },
  lcsSetupUtmCfGlobalSettingsSaveToFlashrom => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanMngmtApConnectionsEntryEncrypted => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupIpRouterFirewallApplicationsFtpActiveFtpBlock => {
    '0' => 'eOff',
    '1' => 'eAllways',
    '2' => 'eWan',
    '3' => 'eDefaultRoute',
  },
  lcsStatusLayerConnectionEntryLay1 => {
    '0' => 'eHdlc64k',
    '1' => 'eHdlc56k',
    '2' => 'eAdsl',
    '3' => 'eV1109k6',
    '4' => 'eEth',
    '5' => 'eModem',
    '6' => 'eSerial',
    '9' => 'eVdsl',
    '67' => 'eV11019k2',
    '131' => 'eV11038k4',
  },
  lcsStatusWlanMngmtApConnectionsEntryDscpForControlPackets => {
    '0' => 'eBestEffort',
    '40' => 'eAssuredForwarding11',
    '48' => 'eAssuredForwarding12',
    '56' => 'eAssuredForwarding13',
    '72' => 'eAssuredForwarding21',
    '80' => 'eAssuredForwarding22',
    '88' => 'eAssuredForwarding23',
    '104' => 'eAssuredForwarding31',
    '112' => 'eAssuredForwarding32',
    '120' => 'eAssuredForwarding33',
    '136' => 'eAssuredForwarding41',
    '144' => 'eAssuredForwarding42',
    '152' => 'eAssuredForwarding43',
    '184' => 'eExpeditedForwarding',
  },
  lcsStatusIpRouterRipFilterEntryType => {
    '0' => 'eUnknown',
    '1' => 'ePositive',
    '2' => 'eNegative',
  },
  lcsSetupWlanMngmtApConfNetwprofilsEntryMaxHtMcs => {
    '0' => 'eAuto',
    '1' => 'eMcs08',
    '2' => 'eMcs19',
    '3' => 'eMcs210',
    '4' => 'eMcs311',
    '5' => 'eMcs412',
    '6' => 'eMcs513',
    '7' => 'eMcs614',
    '8' => 'eMcs715',
  },
  lcsSetupUtmCfProfCatProfEntryFashionCosmeticsJewelry => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupInterfacesWlanTransmissionEntryMaxTxRate => {
    '0' => 'eAuto',
    '1' => 'e1M',
    '2' => 'e2M',
    '4' => 'e5M5',
    '6' => 'e11M',
    '8' => 'e6M',
    '9' => 'e9M',
    '10' => 'e12M',
    '11' => 'e18M',
    '12' => 'e24M',
    '13' => 'e36M',
    '14' => 'e48M',
    '15' => 'e54M',
  },
  lcsSetupInterfacesWlanEncryptionEntryEncryption => {
    '0' => 'eNo',
    '2' => 'eYes',
  },
  lcsSetupAccountingSaveToFlashrom => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupVpnProposalsIpsecEntryEspAuthAlg => {
    '0' => 'eNone',
    '1' => 'eHmacMd5',
    '2' => 'eHmacSha1',
  },
  lcsStatusCertsDeviceCertificatesEntryAvailable => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanWlanParameterEntryMaximumRate => {
    '0' => 'eUnknown',
    '1' => 'e1M',
    '2' => 'e2M',
    '3' => 'e5M',
    '4' => 'e5M5',
    '5' => 'e8M',
    '6' => 'e11M',
    '12' => 'e6M',
    '13' => 'e9M',
    '14' => 'e12M',
    '15' => 'e18M',
    '16' => 'e24M',
    '17' => 'e36M',
    '18' => 'e48M',
    '19' => 'e54M',
    '20' => 'eT12M',
    '21' => 'eT18M',
    '22' => 'eT24M',
    '23' => 'eT36M',
    '24' => 'eT48M',
    '25' => 'eT72M',
    '26' => 'eT96M',
    '27' => 'eT108M',
    '28' => 'eHT1S6M5',
    '29' => 'eHT1S13M',
    '30' => 'eHT1S19M5',
    '31' => 'eHT1S26M',
    '32' => 'eHT1S39M',
    '33' => 'eHT1S52M',
    '34' => 'eHT1S58M5',
    '35' => 'eHT1S65M',
    '36' => 'eHT2S13M',
    '37' => 'eHT2S26M',
    '38' => 'eHT2S39M',
    '39' => 'eHT2S52M',
    '40' => 'eHT2S78M',
    '41' => 'eHT2S104M',
    '42' => 'eHT2S117M',
    '43' => 'eHT2S130M',
    '44' => 'eHT3S19M5',
    '45' => 'eHT3S39M',
    '46' => 'eHT3S58M5',
    '47' => 'eHT3S78M',
    '48' => 'eHT3S117M',
    '49' => 'eHT3S156M',
    '50' => 'eHT3S175M5',
    '51' => 'eHT3S195M',
    '60' => 'eHTDUP6M',
  },
  lcsSetupIpRouterRipAllRoutesEntryPort => {
    '256' => 'eLan1',
    '257' => 'eLan2',
    '258' => 'eLan3',
    '259' => 'eLan4',
    '260' => 'eLan5',
    '512' => 'eWlan1',
    '513' => 'eWlan2',
    '768' => 'eP2p11',
    '769' => 'eP2p12',
    '770' => 'eP2p13',
    '771' => 'eP2p14',
    '772' => 'eP2p15',
    '773' => 'eP2p16',
    '774' => 'eP2p21',
    '775' => 'eP2p22',
    '776' => 'eP2p23',
    '777' => 'eP2p24',
    '778' => 'eP2p25',
    '779' => 'eP2p26',
    '799' => 'eP2p17',
    '800' => 'eP2p18',
    '801' => 'eP2p19',
    '802' => 'eP2p110',
    '803' => 'eP2p111',
    '804' => 'eP2p112',
    '805' => 'eP2p113',
    '806' => 'eP2p114',
    '807' => 'eP2p115',
    '808' => 'eP2p116',
    '831' => 'eP2p27',
    '832' => 'eP2p28',
    '833' => 'eP2p29',
    '834' => 'eP2p210',
    '835' => 'eP2p211',
    '836' => 'eP2p212',
    '837' => 'eP2p213',
    '838' => 'eP2p214',
    '839' => 'eP2p215',
    '840' => 'eP2p216',
    '1024' => 'eWlan12',
    '1025' => 'eWlan13',
    '1026' => 'eWlan14',
    '1027' => 'eWlan15',
    '1028' => 'eWlan16',
    '1029' => 'eWlan17',
    '1030' => 'eWlan18',
    '1031' => 'eWlan22',
    '1032' => 'eWlan23',
    '1033' => 'eWlan24',
    '1034' => 'eWlan25',
    '1035' => 'eWlan26',
    '1036' => 'eWlan27',
    '1037' => 'eWlan28',
    '1536' => 'eBrg1',
    '1537' => 'eBrg2',
    '1538' => 'eBrg3',
    '1539' => 'eBrg4',
    '1540' => 'eBrg5',
    '1541' => 'eBrg6',
    '1542' => 'eBrg7',
    '1543' => 'eBrg8',
    '1792' => 'eWlcTunnel1',
    '1793' => 'eWlcTunnel2',
    '1794' => 'eWlcTunnel3',
    '1795' => 'eWlcTunnel4',
    '1796' => 'eWlcTunnel5',
    '1797' => 'eWlcTunnel6',
    '1798' => 'eWlcTunnel7',
    '1799' => 'eWlcTunnel8',
    '1800' => 'eWlcTunnel9',
    '1801' => 'eWlcTunnel10',
    '1802' => 'eWlcTunnel11',
    '1803' => 'eWlcTunnel12',
    '1804' => 'eWlcTunnel13',
    '1805' => 'eWlcTunnel14',
    '1806' => 'eWlcTunnel15',
    '1807' => 'eWlcTunnel16',
    '1808' => 'eWlcTunnel17',
    '1809' => 'eWlcTunnel18',
    '1810' => 'eWlcTunnel19',
    '1811' => 'eWlcTunnel20',
    '1812' => 'eWlcTunnel21',
    '1813' => 'eWlcTunnel22',
    '1814' => 'eWlcTunnel23',
    '1815' => 'eWlcTunnel24',
    '1816' => 'eWlcTunnel25',
    '1817' => 'eWlcTunnel26',
    '1818' => 'eWlcTunnel27',
    '1819' => 'eWlcTunnel28',
    '1820' => 'eWlcTunnel29',
    '1821' => 'eWlcTunnel30',
    '1822' => 'eWlcTunnel31',
    '1823' => 'eWlcTunnel32',
    '65535' => 'eAny',
  },
  lcsSetupUtmCfGlobalSettingsNotificationEntrySnmp => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanMngmtApStatusActiveRadiosEntryValid => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupHttpErrorPageStyle => {
    '0' => 'eStandard',
    '1' => 'eNifty',
  },
  lcsStatusWtpMngmtRadioModeEntryOperating => {
    '0' => 'eYes',
    '1' => 'eNo',
  },
  lcsSetupUtmCfProfCatProfEntryArchConstFurn => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsStatusVdslConnectionHistoryEntryVdslProfile => {
    '0' => 'eUnknown',
    '1' => 'e8a',
    '2' => 'e8b',
    '3' => 'e8c',
    '4' => 'e8d',
    '5' => 'e12a',
    '6' => 'e12b',
    '7' => 'e17a',
    '8' => 'e30a',
    '9' => 'e17b',
  },
  lcsStatusWlanCompetingNetworksEntryOperationMode => {
    '0' => 'eNone',
    '1' => 'eAdhoc',
    '2' => 'eInfrastructure',
  },
  lcsStatusWtpMngmtNetwprofilsEntryBasicRate => {
    '0' => 'e2M',
    '1' => 'e1M',
    '3' => 'e5M5',
    '4' => 'e11M',
    '5' => 'e6M',
    '6' => 'e9M',
    '7' => 'e12M',
    '8' => 'e18M',
    '9' => 'e24M',
    '10' => 'e36M',
    '11' => 'e48M',
    '12' => 'e54M',
    '13' => 'eT72M',
    '14' => 'eT96M',
    '15' => 'eT108M',
  },
  lcsStatusIpRouterActIpRoutingTabEntryType => {
    '0' => 'eUnknown',
    '1' => 'eStatic',
    '2' => 'eRip',
    '3' => 'eVpn',
    '4' => 'eCapwap',
    '5' => 'eRas',
    '6' => 'eIntranet',
    '7' => 'eDmz',
    '8' => 'eDisabled',
  },
  lcsStatusIpRouterVrrpEventLogEntryEvent => {
    '1' => 'eInvalidTtl',
    '2' => 'eInvalidVersion',
    '3' => 'eBadNumberOfVirtualAddresses',
    '4' => 'eBadAuthenticationType',
    '5' => 'eBadAdvertisementInterval',
    '6' => 'eInvalidVrid',
    '7' => 'eInvalidRouterAddress',
    '8' => 'eInvalidPriority',
    '9' => 'eVirtualRouterStopped',
    '10' => 'eVirtualRouterStarted',
    '11' => 'eLinkUp',
    '12' => 'eLinkDown',
    '13' => 'eNewMaster',
    '14' => 'eBackupStarted',
    '15' => 'eBackupEnded',
  },
  lcsSetupUtmCfProfCatProfEntrySpamUrls => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupWanAdditionalPptpGatewaysEntryBeginWith => {
    '0' => 'eLastUsed',
    '1' => 'eFirst',
    '2' => 'eRandom',
  },
  lcsSetupVpnSslEncapsAllowed => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusPppPppPhasesEntryPhaseTo => {
    '1' => 'eDead',
    '2' => 'eEstablish',
    '3' => 'eTerminate',
    '4' => 'eAuthenticate',
    '5' => 'eCallback',
    '6' => 'eNetwork',
  },
  lcsSetupCertsScepClntCasEntryEncAlg => {
    '0' => 'eDes',
    '1' => 'e3des',
    '2' => 'eBlowfish',
    '3' => 'eAes128',
  },
  lcsStatusWlanMngmtWlcTunnelsWlcConnectionsEntryValid => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanCompetingNetworksEntryShortSlotTime => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWlanMngmtApConfRadioprofilsEntryReportSeenClients => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupInterfacesPermanentL1Activation => {
    '0' => 'eDisabled',
    '1' => 'eSyncSourceOnly',
    '2' => 'eAllTeInterfaces',
  },
  lcsStatusIpRouterRipLanSitesEntryRipType => {
    '0' => 'eOff',
    '1' => 'eRip1',
    '2' => 'eR1Comp',
    '3' => 'eRip2',
  },
  lcsStatusWlanMngmtApConfNetwprofilsEntryVlanMode => {
    '0' => 'eUntagged',
    '1' => 'eTagged',
  },
  lcsSetupTimeFetchMethod => {
    '0' => 'eNone',
    '1' => 'eIsdn',
    '2' => 'eNtp',
  },
  lcsStatusCertsScepCaCaStatusError => {
    '0' => 'eNoError',
    '1' => 'eNoValidCadn',
    '2' => 'eNoValidRadn',
    '3' => 'eNoValidKeyUsageForCaCertificate',
    '4' => 'eNoValidKeyUsageForRaCertificate',
    '6' => 'eNoUtcAvailable',
    '7' => 'eConfiguredKeyLengthDoesNotMatchSavedKeys',
    '8' => 'eNoGeneralChallengePasswordSet',
    '9' => 'eValidityPeriodForCaRaIsZero',
    '10' => 'eValidityPeriodForClientsIsZero',
    '11' => 'eCouldNotCreateNewCaRaCertificates',
    '12' => 'eCaRaCertificatesAreNotValid',
    '13' => 'eSavedKeysDoNotMatchCertificates',
    '14' => 'eRaCertKeyUsageMismatch',
    '15' => 'eCaCertKeyUsageMismatch',
    '16' => 'eCaCertDigestMismatch',
    '17' => 'eRaCertDigestMismatch',
    '18' => 'eCadnDoesNotMatchCertificate',
    '19' => 'eRadnDoesNotMatchCertificate',
    '20' => 'eNoMemoryAvailable',
    '21' => 'eRandomPoolNotSeeded',
    '23' => 'eMaximalSizeOfCertificateListReached',
  },
  lcsStatusWlanChannelScanResultsEntry40mIntolerantBssReported => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWlanMngmtNotificationAdvancedEntryName => {
    '1' => 'eEMail',
    '2' => 'eSyslog',
  },
  lcsStatusWlanNetworksEntryOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupIpRouterRoutingMethodL2L3Tagging => {
    '0' => 'eNo',
    '1' => 'eYes',
    '2' => 'eAuto',
  },
  lcsSetupVpnProposalsIkeEntryIkeAuthMode => {
    '1' => 'ePresharedKey',
    '3' => 'eRsaSignature',
  },
  lcsStatusIeee8021xStationTableEntryPortStatus => {
    '0' => 'eUnauthorized',
    '1' => 'eAuthorized',
  },
  lcsSetupLcrRouterUsage => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanMngmtApConfNetwprofilsEntryWpa2SessionKeytypes => {
    '0' => 'eTkipAes',
    '1' => 'eAes',
    '2' => 'eTkip',
  },
  lcsSetupInterfacesWlanTransmissionEntrySendAggregates => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWlanMngmtApConfMulticastNetworksEntryBridgeInterface => {
    '0' => 'eLan',
    '1' => 'eWlcTunnel1',
    '2' => 'eWlcTunnel2',
    '3' => 'eWlcTunnel3',
    '4' => 'eWlcTunnel4',
    '5' => 'eWlcTunnel5',
    '6' => 'eWlcTunnel6',
    '7' => 'eWlcTunnel7',
    '8' => 'eWlcTunnel8',
    '9' => 'eWlcTunnel9',
    '10' => 'eWlcTunnel10',
    '11' => 'eWlcTunnel11',
    '12' => 'eWlcTunnel12',
    '13' => 'eWlcTunnel13',
    '14' => 'eWlcTunnel14',
    '15' => 'eWlcTunnel15',
    '16' => 'eWlcTunnel16',
    '17' => 'eWlcTunnel17',
    '18' => 'eWlcTunnel18',
    '19' => 'eWlcTunnel19',
    '20' => 'eWlcTunnel20',
    '21' => 'eWlcTunnel21',
    '22' => 'eWlcTunnel22',
    '23' => 'eWlcTunnel23',
    '24' => 'eWlcTunnel24',
    '25' => 'eWlcTunnel25',
    '26' => 'eWlcTunnel26',
    '27' => 'eWlcTunnel27',
    '28' => 'eWlcTunnel28',
    '29' => 'eWlcTunnel29',
    '30' => 'eWlcTunnel30',
    '31' => 'eWlcTunnel31',
    '32' => 'eWlcTunnel32',
  },
  lcsSetupIpRouterFirewallRulesEntryVpnRule => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupUtmCfGlobalSettingsNotificationEntryEMail => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanMngmtNetworksEntryValid => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusConfigAntiTheftProtectionCallAccepted => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanClientIfcsEntryAlarmState => {
    '0' => 'eNo',
    '1' => 'ePhySignal',
    '2' => 'eTotalRetries',
    '4' => 'eTxErrors',
  },
  lcsSetupWlanMngmtApConfWlanModul2Default => {
    '1' => 'e24ghz',
    '2' => 'e5ghz',
    '3' => 'eOff',
  },
  lcsSetupInterfacesDslEntryConnector => {
    '0' => 'eAuto',
    '1' => 'eExclusive',
  },
  lcsStatusWlanStationTableEntrySmPwrsave => {
    '0' => 'eInactive',
    '1' => 'eStatic',
    '2' => 'eDynamic',
  },
  lcsSetupUtmCfProfCatProfEntryComputerGames => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsStatusConfigAntiTheftProtectionMethod => {
    '0' => 'eBasicCall',
    '1' => 'eFacility',
    '2' => 'eGps',
  },
  lcsSetupWlanRadiusAccountingClientBrgHandling => {
    '0' => 'eAllTraffic',
    '1' => 'eBridgeTrafficOnly',
    '2' => 'eClientTrafficOnly',
    '3' => 'eSeparateAccounting',
  },
  lcsSetupUtmCfProfCatProfEntryViolenceExtreme => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupTimeDaylightSavingTime => {
    '0' => 'eNo',
    '1' => 'eYes',
    '2' => 'eEuropeEu',
    '3' => 'eRussia',
    '4' => 'eUsa',
    '255' => 'eUserDefined',
  },
  lcsSetupUtmCfGlobalSettingsSnapshotActive => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupInterfacesLanInterfacesEntryClockRole => {
    '0' => 'eSlavePreferred',
    '1' => 'eMaster',
    '2' => 'eSlave',
    '4' => 'eMasterPreferred',
  },
  lcsStatusLayerConnectionEntryEncaps => {
    '0' => 'eEther',
    '1' => 'eLlcMux',
    '3' => 'eLlcEth',
    '4' => 'eVcMux',
    '255' => 'eTrans',
  },
  lcsStatusDslolDslolIpConfiguration => {
    '0' => 'eInvalid',
    '1' => 'eValid',
  },
  lcsSetupWlanMngmtCentralFwMngmtFwVersMngmtEntryDevice => {
    '1' => 'eAllDevices',
    '2' => 'eLancom1821WirelessAdslAnnA',
    '3' => 'eLancom1821WirelessAdslAnnB',
    '5' => 'eLANCOM1821plusWirelessADSLAnnA',
    '6' => 'eLANCOM1821plusWirelessADSLAnnB',
    '10' => 'eLancom1823VoipAnnexA',
    '11' => 'eLancom1823VoipAnnexB',
    '12' => 'eLancomIap54Wireless',
    '13' => 'eLancomL54agWireless',
    '14' => 'eLancom3850Umts',
    '15' => 'eLancom3550Wireless',
    '16' => 'eLancomOap54Wireless',
    '19' => 'eLancomXap402',
    '20' => 'eLancomL54DualWireless',
    '21' => 'eLancom1811WirelessDsl',
    '22' => 'eLancomL310agnWireless',
    '23' => 'eLancomL54gWireless',
    '24' => 'eLancomXap402Fcc',
    '25' => 'eLancomL305agnWireless',
    '26' => 'eLancom3050Wireless',
    '27' => 'eLancomOap310agnWireless',
    '28' => 'eLancomOap541Wireless',
    '29' => 'eLancom1811nWireless',
    '30' => 'eLancomL315agnDualWireless',
    '31' => 'eBAT54Rail',
    '32' => 'eBAT54RailPlus',
    '33' => 'eBAT300Rail',
    '34' => 'eBAT300F',
    '35' => 'eBAT300FX2',
    '36' => 'eBAT54F',
    '37' => 'eBAT54FPlus',
    '38' => 'eBAT54FX2',
    '39' => 'eBAT54FX2Plus',
    '40' => 'eBAT54FSinglePlus',
    '41' => 'eBAT54FX2SinglePlus',
    '42' => 'eLancomL320agnWireless',
    '43' => 'eLancomL321agnWireless',
    '44' => 'eLancomL322agnDualWireless',
    '45' => 'eBAT54RailSinglePlus',
    '46' => 'eLancomOap321',
    '47' => 'eLancomIap321',
    '48' => 'eLancom1780ew3g',
    '49' => 'eLancomIap3213g',
    '50' => 'eLancomOap3213g',
    '51' => 'eBatR',
    '52' => 'eBatF',
  },
  lcsStatusWtpMngmtNetwprofilsEntryEncryption => {
    '0' => 'e80211iWpaPsk',
    '1' => 'e80211iWpa8021x',
    '2' => 'eWep104Bits',
    '3' => 'eWep40Bits',
    '4' => 'eWep104Bits8021x',
    '5' => 'eWep40Bits8021x',
    '6' => 'eNone',
  },
  lcsStatusCallInformationEntryCapab => {
    '0' => 'eHdlc64k',
    '1' => 'eHdlc56k',
    '3' => 'eV1109k6',
    '5' => 'eModem',
    '13' => 'eA31khz',
    '14' => 'eSpeech',
    '15' => 'eFaxG23',
    '67' => 'eV11019k2',
    '131' => 'eV11038k4',
    '255' => 'eUnknown',
  },
  lcsStatusComPortsComPortServerComPortStatusEntryBitRate => {
    '110' => 'e110',
    '300' => 'e300',
    '600' => 'e600',
    '1200' => 'e1200',
    '2400' => 'e2400',
    '4800' => 'e4800',
    '9600' => 'e9600',
    '19200' => 'e19200',
    '38400' => 'e38400',
    '57600' => 'e57600',
    '115200' => 'e115200',
    '125000' => 'e125000',
    '230400' => 'e230400',
  },
  lcsStatusIpRouterRipLanSitesEntryRipAccept => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanChannelScanResultsEntryDfsState => {
    '0' => 'eClear',
    '1' => 'eBlocked',
    '2' => 'eUnknown',
  },
  lcsStatusTimeSource => {
    '0' => 'eNo',
    '1' => 'eManual',
    '2' => 'eIsdn',
    '3' => 'eLan',
    '4' => 'eRam',
    '8' => 'eLanconfig',
    '9' => 'eNtp',
    '10' => 'eCapwap',
    '11' => 'eRtc',
  },
  lcsSetupHttpUseUserProvidedCertificate => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupVlanPortTableEntryAllowAllVlans => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupPrinterPrinterEntryActiv => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupConfigLl2mOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWtpMngmtNetwprofilsEntry11bPreamble => {
    '0' => 'eAuto',
    '1' => 'eLong',
  },
  lcsStatusWlanMngmtApStatusActiveRadiosEntryRadioFldOpt => {
    '0' => 'eInactive',
    '1' => 'eWaiting',
    '2' => 'eScanning',
  },
  lcsSetupHttpRolloutWizardOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWtpMngmtRadioModeEntryAntennaMask => {
    '0' => 'eAuto',
    '1' => 'eAntenna1',
    '3' => 'eAntenna1Plus2',
    '5' => 'eAntenna1Plus3',
    '7' => 'eAntenna1Plus2Plus3',
  },
  lcsStatusVdslAtmMuxmode => {
    '0' => 'eVcMux',
    '1' => 'eLlcMux',
  },
  lcsSetupConfigAccessTableEntrySsh => {
    '0' => 'eNo',
    '1' => 'eYes',
    '4' => 'eRead',
    '16' => 'eVpn',
  },
  lcsStatusIpRouterRipWanSitesEntryMasquerade => {
    '0' => 'eAuto',
    '1' => 'eOn',
    '2' => 'eIntranet',
  },
  lcsStatusLanBridgeConnectionTableEntryInterface => {
    '256' => 'eLan1',
    '257' => 'eLan2',
    '258' => 'eLan3',
    '259' => 'eLan4',
    '512' => 'eWlan1',
    '513' => 'eWlan2',
    '768' => 'eP2p11',
    '769' => 'eP2p12',
    '770' => 'eP2p13',
    '771' => 'eP2p14',
    '772' => 'eP2p15',
    '773' => 'eP2p16',
    '774' => 'eP2p21',
    '775' => 'eP2p22',
    '776' => 'eP2p23',
    '777' => 'eP2p24',
    '778' => 'eP2p25',
    '779' => 'eP2p26',
    '799' => 'eP2p17',
    '800' => 'eP2p18',
    '801' => 'eP2p19',
    '802' => 'eP2p110',
    '803' => 'eP2p111',
    '804' => 'eP2p112',
    '805' => 'eP2p113',
    '806' => 'eP2p114',
    '807' => 'eP2p115',
    '808' => 'eP2p116',
    '831' => 'eP2p27',
    '832' => 'eP2p28',
    '833' => 'eP2p29',
    '834' => 'eP2p210',
    '835' => 'eP2p211',
    '836' => 'eP2p212',
    '837' => 'eP2p213',
    '838' => 'eP2p214',
    '839' => 'eP2p215',
    '840' => 'eP2p216',
    '1024' => 'eWlan12',
    '1025' => 'eWlan13',
    '1026' => 'eWlan14',
    '1027' => 'eWlan15',
    '1028' => 'eWlan16',
    '1029' => 'eWlan17',
    '1030' => 'eWlan18',
    '1031' => 'eWlan22',
    '1032' => 'eWlan23',
    '1033' => 'eWlan24',
    '1034' => 'eWlan25',
    '1035' => 'eWlan26',
    '1036' => 'eWlan27',
    '1037' => 'eWlan28',
    '1536' => 'eBrg1',
    '1537' => 'eBrg2',
    '1538' => 'eBrg3',
    '1539' => 'eBrg4',
    '1540' => 'eBrg5',
    '1541' => 'eBrg6',
    '1542' => 'eBrg7',
    '1543' => 'eBrg8',
    '1792' => 'eWlcTunnel1',
    '1793' => 'eWlcTunnel2',
    '1794' => 'eWlcTunnel3',
    '1795' => 'eWlcTunnel4',
    '1796' => 'eWlcTunnel5',
    '1797' => 'eWlcTunnel6',
    '1798' => 'eWlcTunnel7',
    '1799' => 'eWlcTunnel8',
    '1800' => 'eWlcTunnel9',
    '1801' => 'eWlcTunnel10',
    '1802' => 'eWlcTunnel11',
    '1803' => 'eWlcTunnel12',
    '1804' => 'eWlcTunnel13',
    '1805' => 'eWlcTunnel14',
    '1806' => 'eWlcTunnel15',
    '1807' => 'eWlcTunnel16',
    '1808' => 'eWlcTunnel17',
    '1809' => 'eWlcTunnel18',
    '1810' => 'eWlcTunnel19',
    '1811' => 'eWlcTunnel20',
    '1812' => 'eWlcTunnel21',
    '1813' => 'eWlcTunnel22',
    '1814' => 'eWlcTunnel23',
    '1815' => 'eWlcTunnel24',
    '1816' => 'eWlcTunnel25',
    '1817' => 'eWlcTunnel26',
    '1818' => 'eWlcTunnel27',
    '1819' => 'eWlcTunnel28',
    '1820' => 'eWlcTunnel29',
    '1821' => 'eWlcTunnel30',
    '1822' => 'eWlcTunnel31',
    '1823' => 'eWlcTunnel32',
    '65535' => 'eAny',
  },
  lcsSetupUtmCfGlobalSettingsActionOnLicenseExceedance => {
    '0' => 'eBlock',
    '1' => 'ePass',
  },
  lcsSetupInterfacesWlanRadioSettingsEntryBackgroundScanUnit => {
    '0' => 'eSeconds',
    '1' => 'eMilliseconds',
    '2' => 'eMicroseconds',
    '3' => 'eMinutes',
    '4' => 'eHours',
    '5' => 'eDays',
    '6' => 'eWeeks',
    '7' => 'eFortnights',
  },
  lcsStatusWlanWlanParameterEntrySupportsShortPreamble => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanWlanParameterEntry108mbpsMode => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupAutoldNetworkFirmwareCondition => {
    '0' => 'eUnconditionally',
    '1' => 'eIfDifferent',
    '2' => 'eIfNewer',
  },
  lcsSetupWlanMngmtApConfNetwprofilsEntryWpa2SessionKeytypes => {
    '0' => 'eTkipAes',
    '1' => 'eAes',
    '2' => 'eTkip',
  },
  lcsStatusIpRouterRipBestRoutesEntryPort => {
    '256' => 'eLan1',
    '257' => 'eLan2',
    '258' => 'eLan3',
    '259' => 'eLan4',
    '260' => 'eLan5',
    '512' => 'eWlan1',
    '513' => 'eWlan2',
    '768' => 'eP2p11',
    '769' => 'eP2p12',
    '770' => 'eP2p13',
    '771' => 'eP2p14',
    '772' => 'eP2p15',
    '773' => 'eP2p16',
    '774' => 'eP2p21',
    '775' => 'eP2p22',
    '776' => 'eP2p23',
    '777' => 'eP2p24',
    '778' => 'eP2p25',
    '779' => 'eP2p26',
    '799' => 'eP2p17',
    '800' => 'eP2p18',
    '801' => 'eP2p19',
    '802' => 'eP2p110',
    '803' => 'eP2p111',
    '804' => 'eP2p112',
    '805' => 'eP2p113',
    '806' => 'eP2p114',
    '807' => 'eP2p115',
    '808' => 'eP2p116',
    '831' => 'eP2p27',
    '832' => 'eP2p28',
    '833' => 'eP2p29',
    '834' => 'eP2p210',
    '835' => 'eP2p211',
    '836' => 'eP2p212',
    '837' => 'eP2p213',
    '838' => 'eP2p214',
    '839' => 'eP2p215',
    '840' => 'eP2p216',
    '1024' => 'eWlan12',
    '1025' => 'eWlan13',
    '1026' => 'eWlan14',
    '1027' => 'eWlan15',
    '1028' => 'eWlan16',
    '1029' => 'eWlan17',
    '1030' => 'eWlan18',
    '1031' => 'eWlan22',
    '1032' => 'eWlan23',
    '1033' => 'eWlan24',
    '1034' => 'eWlan25',
    '1035' => 'eWlan26',
    '1036' => 'eWlan27',
    '1037' => 'eWlan28',
    '1536' => 'eBrg1',
    '1537' => 'eBrg2',
    '1538' => 'eBrg3',
    '1539' => 'eBrg4',
    '1540' => 'eBrg5',
    '1541' => 'eBrg6',
    '1542' => 'eBrg7',
    '1543' => 'eBrg8',
    '1792' => 'eWlcTunnel1',
    '1793' => 'eWlcTunnel2',
    '1794' => 'eWlcTunnel3',
    '1795' => 'eWlcTunnel4',
    '1796' => 'eWlcTunnel5',
    '1797' => 'eWlcTunnel6',
    '1798' => 'eWlcTunnel7',
    '1799' => 'eWlcTunnel8',
    '1800' => 'eWlcTunnel9',
    '1801' => 'eWlcTunnel10',
    '1802' => 'eWlcTunnel11',
    '1803' => 'eWlcTunnel12',
    '1804' => 'eWlcTunnel13',
    '1805' => 'eWlcTunnel14',
    '1806' => 'eWlcTunnel15',
    '1807' => 'eWlcTunnel16',
    '1808' => 'eWlcTunnel17',
    '1809' => 'eWlcTunnel18',
    '1810' => 'eWlcTunnel19',
    '1811' => 'eWlcTunnel20',
    '1812' => 'eWlcTunnel21',
    '1813' => 'eWlcTunnel22',
    '1814' => 'eWlcTunnel23',
    '1815' => 'eWlcTunnel24',
    '1816' => 'eWlcTunnel25',
    '1817' => 'eWlcTunnel26',
    '1818' => 'eWlcTunnel27',
    '1819' => 'eWlcTunnel28',
    '1820' => 'eWlcTunnel29',
    '1821' => 'eWlcTunnel30',
    '1822' => 'eWlcTunnel31',
    '1823' => 'eWlcTunnel32',
    '65535' => 'eAny',
  },
  lcsSetupWlanMngmtWlcTunnelsWlcDataTunnelActive => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusChannelEntryConnector => {
    '0' => 'eUnk',
    '1' => 'eAct',
    '2' => 'ePas',
    '3' => 'ePerm',
  },
  lcsStatusWtpMngmtNetwprofilsEntrySendAggregates => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanWlanParameterEntryTkipSupport => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanWlanParameterEntryRegulatoryDomain => {
    '0' => 'eUndefined',
    '16' => 'eFcc',
    '32' => 'eCanada',
    '48' => 'eEuEtsi',
    '49' => 'eSpain',
    '50' => 'eFrance',
    '64' => 'eMkkJapan',
    '65' => 'eMkk2Japan',
    '80' => 'eIsrael',
    '96' => 'eWorld',
  },
  lcsSetupCertsScepCaSignatureAlgorithm => {
    '0' => 'eMd5',
    '1' => 'eSha1',
  },
  lcsSetupWanRadiusClipOperation => {
    '0' => 'eNo',
    '1' => 'eYes',
    '2' => 'eExclusive',
  },
  lcsStatusWlanCompetingNetworksEntryExtChannel => {
    '0' => 'eNone',
    '1' => 'eAbove',
    '3' => 'eBelow',
  },
  lcsStatusTcpIpArpTableArpEntryConnect => {
    '256' => 'eLan1',
    '257' => 'eLan2',
    '258' => 'eLan3',
    '259' => 'eLan4',
    '260' => 'eLan5',
    '512' => 'eWlan1',
    '513' => 'eWlan2',
    '768' => 'eP2p11',
    '769' => 'eP2p12',
    '770' => 'eP2p13',
    '771' => 'eP2p14',
    '772' => 'eP2p15',
    '773' => 'eP2p16',
    '774' => 'eP2p21',
    '775' => 'eP2p22',
    '776' => 'eP2p23',
    '777' => 'eP2p24',
    '778' => 'eP2p25',
    '779' => 'eP2p26',
    '799' => 'eP2p17',
    '800' => 'eP2p18',
    '801' => 'eP2p19',
    '802' => 'eP2p110',
    '803' => 'eP2p111',
    '804' => 'eP2p112',
    '805' => 'eP2p113',
    '806' => 'eP2p114',
    '807' => 'eP2p115',
    '808' => 'eP2p116',
    '831' => 'eP2p27',
    '832' => 'eP2p28',
    '833' => 'eP2p29',
    '834' => 'eP2p210',
    '835' => 'eP2p211',
    '836' => 'eP2p212',
    '837' => 'eP2p213',
    '838' => 'eP2p214',
    '839' => 'eP2p215',
    '840' => 'eP2p216',
    '1024' => 'eWlan12',
    '1025' => 'eWlan13',
    '1026' => 'eWlan14',
    '1027' => 'eWlan15',
    '1028' => 'eWlan16',
    '1029' => 'eWlan17',
    '1030' => 'eWlan18',
    '1031' => 'eWlan22',
    '1032' => 'eWlan23',
    '1033' => 'eWlan24',
    '1034' => 'eWlan25',
    '1035' => 'eWlan26',
    '1036' => 'eWlan27',
    '1037' => 'eWlan28',
    '1792' => 'eWlcTunnel1',
    '1793' => 'eWlcTunnel2',
    '1794' => 'eWlcTunnel3',
    '1795' => 'eWlcTunnel4',
    '1796' => 'eWlcTunnel5',
    '1797' => 'eWlcTunnel6',
    '1798' => 'eWlcTunnel7',
    '1799' => 'eWlcTunnel8',
    '1800' => 'eWlcTunnel9',
    '1801' => 'eWlcTunnel10',
    '1802' => 'eWlcTunnel11',
    '1803' => 'eWlcTunnel12',
    '1804' => 'eWlcTunnel13',
    '1805' => 'eWlcTunnel14',
    '1806' => 'eWlcTunnel15',
    '1807' => 'eWlcTunnel16',
    '1808' => 'eWlcTunnel17',
    '1809' => 'eWlcTunnel18',
    '1810' => 'eWlcTunnel19',
    '1811' => 'eWlcTunnel20',
    '1812' => 'eWlcTunnel21',
    '1813' => 'eWlcTunnel22',
    '1814' => 'eWlcTunnel23',
    '1815' => 'eWlcTunnel24',
    '1816' => 'eWlcTunnel25',
    '1817' => 'eWlcTunnel26',
    '1818' => 'eWlcTunnel27',
    '1819' => 'eWlcTunnel28',
    '1820' => 'eWlcTunnel29',
    '1821' => 'eWlcTunnel30',
    '1822' => 'eWlcTunnel31',
    '1823' => 'eWlcTunnel32',
    '32768' => 'eWan',
  },
  lcsSetupDhcpDhcpTableEntryEthernetPort => {
    '0' => 'eUnknown',
    '1' => 'eUplink',
    '2' => 'eEth1',
    '3' => 'eEth2',
    '4' => 'eEth3',
    '5' => 'eEth4',
    '16' => 'eWan',
  },
  lcsSetupInterfacesWlanIntpntSetEntryIfc => {
    '1' => 'eWlan1',
    '2' => 'eWlan2',
  },
  lcsStatusIpRouterRipDynWanSitesEntryRipAccept => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusConfigFeaturesEntryFeature => {
    '1' => 'eIpx',
    '2' => 'eLanBridge',
    '3' => 'eLancapi',
    '4' => 'eLeasedLine',
    '5' => 'eSwitchedLine',
    '6' => 'eDslInterface',
    '7' => 'eFax',
    '8' => 'eModem',
    '9' => 'eVpn5',
    '10' => 'eVpn25',
    '11' => 'eVpn25Old',
    '12' => 'eProductionOk',
    '13' => 'eVpn100',
    '14' => 'eWlc4025100',
    '15' => 'eWlanPointToPoint',
    '16' => 'ePublicSpot',
    '17' => 'eVpn200',
    '18' => 'eVpn500',
    '19' => 'eVpn1000',
    '20' => 'eHermes1Wpa',
    '21' => 'eVpn3',
    '22' => 'eUmts',
    '23' => 'eDynamicVpn',
    '24' => 'eWlan5ghz',
    '25' => 'eWlanNoEncryption',
    '26' => 'eVoipAdvanced32',
    '27' => 'eVoipBasic',
    '28' => 'eWlanFccRestrictions',
    '29' => 'eWlc402550',
    '30' => 'eWlc400612',
    '31' => 'eVoipAdvanced8',
    '36' => 'eContentfilterAdditive',
    '37' => 'eWlcPublicSpot',
    '38' => 'eWlanMonitorMode',
    '39' => 'eWlanNo5ghz',
    '40' => 'eWlcApUpgrade',
    '41' => 'eWlanDfs3',
    '42' => 'eInProduction',
    '43' => 'eNetioServer',
    '44' => 'eLanWlanBridge',
    '45' => 'eEthernetIp',
    '46' => 'eProfinet',
    '47' => 'eWlanFilteredAveraging',
    '48' => 'eVpn50',
  },
  lcsSetupUtmCfProfCatProfEntryPornographyEroticSex => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsStatusModemMobilePort => {
    '0' => 'eNone',
    '1' => 'eOutband',
    '2' => 'eUsb',
  },
  lcsStatusHardwareInfoPciDeviceListEntryClass => {
    '131072' => 'eEthernet',
    '131328' => 'eTokenRing',
    '163840' => 'eNetwork',
    '262400' => 'eAudio',
    '393472' => 'eIsaBridge',
    '394240' => 'ePciBridge',
    '394241' => 'ePciBridgeSubtractive',
    '395008' => 'eCardbusBridge',
    '458754' => 'eUart16550',
    '458758' => 'eUart16950',
    '491520' => 'eCommunication',
    '729088' => 'ePowerpc',
    '786448' => 'eOhci1394',
    '787200' => 'eUsbUhci',
    '787216' => 'eUsbOhci',
    '787232' => 'eUsbEhci',
  },
  lcsSetupInterfacesWlanGroupEncryptionKeysEntryKeytype3 => {
    '5' => 'eWep40Bits',
    '13' => 'eWep104Bits',
    '16' => 'eWep128Bits',
  },
  lcsSetupIpRouterRoutingMethodL3L2Tagging => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusTcpIpDhcpNetworkListEntryCluster => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanCompetingNetworksEntryPcfFunctionality => {
    '0' => 'eNone',
    '1' => 'eDelivery',
    '2' => 'eDeliveryPlusPolling',
  },
  lcsStatusLanBridgeIgmpSnoopingSimulatedQueriersEntryStatus => {
    '0' => 'eInitial',
    '1' => 'eQuerier',
    '2' => 'eNonQuerier',
  },
  lcsSetupWlanMngmtApConfNetwprofilsEntryClBrgSupport => {
    '0' => 'eNo',
    '1' => 'eYes',
    '2' => 'eExclusive',
  },
  lcsStatusLanInterfacesEntryMdiMode => {
    '0' => 'eUnknown',
    '1' => 'eMdi',
    '2' => 'eMdix',
    '3' => 'eNotApplicable',
  },
  lcsStatusComPortsComPortServerComPortStatusEntryInterfaceStatus => {
    '0' => 'eNotPresent',
    '1' => 'eNotReady',
    '2' => 'eReady',
  },
  lcsStatusHardwareInfoAdvErrorReportingLogEntryMultiple => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupTcpIpArpTableEntryEthernetPort => {
    '0' => 'eUnknown',
    '1' => 'eUplink',
    '2' => 'eEth1',
    '3' => 'eEth2',
    '4' => 'eEth3',
    '5' => 'eEth4',
    '16' => 'eWan',
  },
  lcsSetupComPortsCOMPortServOperEntryDeviceType => {
    '1' => 'eOutband',
    '33' => 'eBelkinF5u103',
    '34' => 'eProlific2303',
    '35' => 'eFtdi8u232am',
    '36' => 'eGpsNmea',
    '45' => 'eQualcomDm',
  },
  lcsStatusVdslConnectionHistoryEntryStandard => {
    '0' => 'eOff',
    '2' => 'eT1dot413',
    '3' => 'eGdotLite',
    '4' => 'eGdotDMT',
    '21' => 'eAdsl2',
    '22' => 'eAdsl2plus',
    '31' => 'eAdsl2AnnexM',
    '32' => 'eAdsl2plusAnnexM',
    '33' => 'eAdsl2AnnexI',
    '34' => 'eAdsl2plusAnnexI',
    '35' => 'eAdsl2AnnexJ',
    '36' => 'eAdsl2plusAnnexJ',
    '37' => 'eAdsl2AnnexL',
    '40' => 'eVdsl2',
    '54' => 'eAdsl2Lite',
    '255' => 'eUnknown',
  },
  lcsStatusWlanWlanParameterEntrySupportedBands => {
    '0' => 'eUnknown',
    '1' => 'e24ghz',
    '2' => 'e5ghz',
    '3' => 'e24ghz5ghz',
  },
  lcsStatusLanBridgeSpanningTreeRstpPortTableEntryEdgePort => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanCompetingNetworksEntryQos => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupDnsDhcpUsage => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWlanMngmtApConfApsEntryOperating => {
    '0' => 'eYes',
    '1' => 'eNo',
  },
  lcsSetupUtmCfProfCatProfEntryInstantMessaging => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsStatusGpsFixType => {
    '0' => 'eNone',
    '2' => 'e2d',
    '3' => 'e3d',
  },
  lcsStatusIsdnSignalingManagementDInfoEntryTei => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupRadiusServerEapTtlsDefaultTunnelMethod => {
    '0' => 'eNone',
    '4' => 'eMd5',
    '6' => 'eGtc',
    '26' => 'eMschapv2',
  },
  lcsSetupInterfacesWlanNetworkEntryRadiusAccounting => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanChannelScanResultsEntry40mIntolerantBss => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWlanMngmtApConfNetwprofilsEntryRadioBand => {
    '0' => 'e24ghz5ghz',
    '1' => 'e24ghz',
    '2' => 'e5ghz',
  },
  lcsStatusLanCableTestResultsEntryIfc => {
    '1' => 'eLan1',
    '2' => 'eLan2',
  },
  lcsSetupVpnProposalsIpsecEntryAhAuthAlg => {
    '0' => 'eNone',
    '1' => 'eHmacMd5',
    '2' => 'eHmacSha1',
  },
  lcsStatusComPortsComPortServerComPortStatusEntryDataBits => {
    '7' => 'e7',
    '8' => 'e8',
  },
  lcsStatusEthernetPortsCableTestResultsEntryMdi3Status => {
    '0' => 'eUnknown',
    '1' => 'eOk',
    '2' => 'eOpen',
    '3' => 'eShort',
    '4' => 'eImpedanceFault',
    '5' => 'eFail',
    '6' => 'eBusy',
  },
  lcsStatusWlanInterpointsKeyListEntryKeyType => {
    '0' => 'eNone',
    '1' => 'eUnknown',
    '5' => 'eWep40Bits',
    '13' => 'eWep104Bits',
    '16' => 'eWep128Bits',
    '64' => 'eTkip',
    '65' => 'eAesOcb',
    '66' => 'eAesCcm',
  },
  lcsSetupHttpShowDeviceInformationEntryDeviceInformation => {
    '1' => 'eCpu',
    '2' => 'eMemory',
    '3' => 'eWlan',
    '4' => 'eP2pConnections',
    '5' => 'eEthernetPorts',
    '6' => 'eTroughputEthernet',
    '7' => 'eUmtsModemInterface',
    '8' => 'eRouter',
    '9' => 'eFirewall',
    '10' => 'eDhcp',
    '11' => 'eDns',
    '12' => 'eVpn',
    '13' => 'eAdsl',
    '14' => 'eIsdn',
    '15' => 'eDSLDSLoL',
    '16' => 'eScepCa',
    '17' => 'eWlanController',
    '18' => 'eTime',
    '19' => 'eIpAddresses',
    '20' => 'eOperatingTime',
    '21' => 'eVdsl',
    '22' => 'eConnections',
  },
  lcsSetupComPortsCOMPortServCOMPortSetEntryParity => {
    '1' => 'eNone',
    '2' => 'eOdd',
    '3' => 'eEven',
  },
  lcsStatusEthernetPortsPortsEntryFlowControl => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusIsdnSignalingManagementDInfoEntryS0Activation => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusInfoConnectionEntryIfc => {
    '257' => 'eCh01',
    '258' => 'eCh02',
    '513' => 'eModem',
    '2049' => 'eDslCh1',
    '2050' => 'eDslCh2',
    '2051' => 'eDslCh3',
    '2052' => 'eDslCh4',
    '2053' => 'eDslCh5',
    '2054' => 'eDslCh6',
    '2055' => 'eDslCh7',
    '2056' => 'eDslCh8',
    '8193' => 'eAdsl1',
    '8194' => 'eAdsl2',
    '8195' => 'eAdsl3',
    '8196' => 'eAdsl4',
    '8197' => 'eAdsl5',
    '8198' => 'eAdsl6',
    '8199' => 'eAdsl7',
    '8200' => 'eAdsl8',
    '16385' => 'eVdsl1',
    '16386' => 'eVdsl2',
    '16387' => 'eVdsl3',
    '16388' => 'eVdsl4',
    '16389' => 'eVdsl5',
    '16390' => 'eVdsl6',
    '16391' => 'eVdsl7',
    '16392' => 'eVdsl8',
  },
  lcsStatusWlanIfcsEntryOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanCompetingNetworksEntryEncryption => {
    '0' => 'eNone',
    '1' => 'eWep',
    '2' => 'eTkip',
    '3' => 'eAes',
    '4' => 'eAesPlusTkip',
  },
  lcsSetupIpRouterFirewallAuthPort => {
    '0' => 'eClosed',
    '1' => 'eStealth',
  },
  lcsStatusUtmCfOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupInterfacesWlanOperationalEntryLinkLedFunction => {
    '0' => 'eNormal',
    '1' => 'eClientModeStrength',
    '8' => 'eP2p1Strength',
    '9' => 'eP2p2Strength',
    '10' => 'eP2p3Strength',
    '11' => 'eP2p4Strength',
    '12' => 'eP2p5Strength',
    '13' => 'eP2p6Strength',
    '14' => 'eP2p7Strength',
    '15' => 'eP2p8Strength',
    '16' => 'eP2p9Strength',
    '17' => 'eP2p10Strength',
    '18' => 'eP2p11Strength',
    '19' => 'eP2p12Strength',
    '20' => 'eP2p13Strength',
    '21' => 'eP2p14Strength',
    '22' => 'eP2p15Strength',
    '23' => 'eP2p16Strength',
  },
  lcsSetupUtmCfProfCatProfEntryRestEnter => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupTimeDstClockChangesEntryMonth => {
    '1' => 'eJanuary',
    '2' => 'eFebruary',
    '3' => 'eMarch',
    '4' => 'eApril',
    '5' => 'eMay',
    '6' => 'eJune',
    '7' => 'eJuly',
    '8' => 'eAugust',
    '9' => 'eSeptember',
    '10' => 'eOctober',
    '11' => 'eNovember',
    '12' => 'eDecember',
  },
  lcsSetupInterfacesAdslEntryIfc => {
    '257' => 'eS01',
    '513' => 'eModem',
    '2049' => 'eDsl1',
    '2050' => 'eDsl2',
    '2051' => 'eDsl3',
    '2052' => 'eDsl4',
    '8193' => 'eAdsl',
  },
  lcsSetupUtmCfProfCatProfEntryIllegalDrugs => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsStatusWlanStationTableEntryShortGuardInterval => {
    '0' => 'eNo',
    '1' => 'e20mhz',
    '2' => 'e40mhz',
    '3' => 'e2040mhz',
  },
  lcsStatusWlanStationTableEntry40mhzMode => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusIpRouterRipDynWanSitesEntryRipType => {
    '0' => 'eOff',
    '1' => 'eRip1',
    '2' => 'eR1Comp',
    '3' => 'eRip2',
  },
  lcsSetupInterfacesS0EntryLlBChan => {
    '0' => 'eNone',
    '1' => 'eB1',
    '2' => 'eB2',
  },
  lcsSetupPublicSpotModuleAddUserWizardPrintCommentsOnVoucher => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupDhcpNetworkListEntryCache => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusIpRouterRipDynLanSitesEntryRipType => {
    '0' => 'eOff',
    '1' => 'eRip1',
    '2' => 'eR1Comp',
    '3' => 'eRip2',
  },
  lcsSetupChargesTableBudgetEntryIfc => {
    '1' => 'eRouterSerial',
    '2' => 'eLancapi',
    '3' => 'eAb1',
    '4' => 'eAb2',
    '5' => 'eAb3',
    '6' => 'eAb4',
    '255' => 'eTimeModul',
  },
  lcsStatusWlanScanResultsEntryOperationMode => {
    '0' => 'eNone',
    '1' => 'eAdhoc',
    '2' => 'eInfrastructure',
  },
  lcsSetupIeee8021xPortsEntryReAuthentication => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupVpnProposalsIpsecEntryEncapsMode => {
    '1' => 'eTunnel',
    '2' => 'eTransport',
    '65001' => 'eMixedLcos4',
  },
  lcsSetupWlanMngmtApConfNetwprofilsEntrySsidBroadcast => {
    '0' => 'eYes',
    '1' => 'eNo',
  },
  lcsStatusModemMobileNetworkListEntryState => {
    '1' => 'eUnknown',
    '2' => 'eAvailable',
    '3' => 'eCurrent',
    '4' => 'eForbidden',
  },
  lcsSetupLanBridgeIgmpSnoopingSimulatedQueriersEntryOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusVdslModemMemoryTest => {
    '0' => 'eNotTested',
    '1' => 'eTimeout',
    '2' => 'eFailed',
    '3' => 'eOk',
  },
  lcsStatusLanInterfacesEntryAutoNegotiation => {
    '0' => 'ePending',
    '1' => 'eCompleted',
    '2' => 'eDisabled',
    '3' => 'eNotAvailable',
  },
  lcsSetupLanBridgeIgmpSnoopingStaticMembersEntryAllowLearning => {
    '0' => 'eYes',
    '1' => 'eNo',
  },
  lcsSetupVpnVpnPeersEntryOcspCheck => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupLanIeee8021xSupplicantIfcSetupEntryIfc => {
    '1' => 'eLan1',
    '2' => 'eLan2',
    '3' => 'eLan3',
    '4' => 'eLan4',
  },
  lcsSetupPublicSpotModuleLoginPageType => {
    '0' => 'eHttps',
    '1' => 'eHttp',
  },
  lcsSetupIpRouterRipWanSitesEntryMasquerade => {
    '0' => 'eAuto',
    '1' => 'eOn',
    '2' => 'eIntranet',
  },
  lcsSetupInterfacesLanInterfacesEntryOperating => {
    '0' => 'eYes',
    '1' => 'eNo',
  },
  lcsStatusWlanClientIfcsEntry40mhzCoexistence => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupPublicSpotModulePageTableEntryPage => {
    '1' => 'eWelcome',
    '2' => 'eLogin',
    '3' => 'eError',
    '4' => 'eStart',
    '5' => 'eStatus',
    '6' => 'eLogoff',
    '7' => 'eHelp',
    '8' => 'eNoProxy',
    '9' => 'eVoucher',
  },
  lcsSetupHttpPageHeaders => {
    '0' => 'eImages',
    '1' => 'eTexts',
  },
  lcsSetupWlanMngmtApConfControlConnectionEncryptionDefault => {
    '1' => 'eDtls',
    '2' => 'eNo',
  },
  lcsStatusConfigEventLogEntryAccess => {
    '0' => 'eOutband',
    '1' => 'eTelnet',
    '2' => 'eTftp',
    '3' => 'eHttp',
    '4' => 'eSnmp',
    '5' => 'eHttps',
    '6' => 'eTelnetSsl',
    '7' => 'eSsh',
    '8' => 'eLl2m',
    '254' => 'ePpp',
    '255' => 'eUnknown',
  },
  lcsStatusConfigFeaturesEntryState => {
    '0' => 'eLocked',
    '1' => 'eActive',
    '2' => 'eHidden',
    '3' => 'eExpired',
  },
  lcsSetupUtmCfProfCatProfEntrySoftwareHardware => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupInterfacesWlanInterpointAlarmLimitsEntryIfc => {
    '1' => 'eP2p11',
    '2' => 'eP2p12',
    '3' => 'eP2p13',
    '4' => 'eP2p14',
    '5' => 'eP2p15',
    '6' => 'eP2p16',
    '7' => 'eP2p21',
    '8' => 'eP2p22',
    '9' => 'eP2p23',
    '10' => 'eP2p24',
    '11' => 'eP2p25',
    '12' => 'eP2p26',
    '32' => 'eP2p17',
    '33' => 'eP2p18',
    '34' => 'eP2p19',
    '35' => 'eP2p110',
    '36' => 'eP2p111',
    '37' => 'eP2p112',
    '38' => 'eP2p113',
    '39' => 'eP2p114',
    '40' => 'eP2p115',
    '41' => 'eP2p116',
    '64' => 'eP2p27',
    '65' => 'eP2p28',
    '66' => 'eP2p29',
    '67' => 'eP2p210',
    '68' => 'eP2p211',
    '69' => 'eP2p212',
    '70' => 'eP2p213',
    '71' => 'eP2p214',
    '72' => 'eP2p215',
    '73' => 'eP2p216',
  },
  lcsSetupIpRouter1NNatTable1NNatEntryProtocol => {
    '1' => 'eIcmp',
    '6' => 'eTcp',
    '17' => 'eUdp',
  },
  lcsStatusWtpMngmtRadioprofilsEntryCountry => {
    '0' => 'eDefault',
    '8' => 'eAlbania',
    '32' => 'eArgentina',
    '36' => 'eAustralia',
    '40' => 'eAustria',
    '48' => 'eBahrain',
    '50' => 'eBangladesh',
    '56' => 'eBelgium',
    '70' => 'eBosniaHerzegovina',
    '76' => 'eBrazil',
    '96' => 'eBruneiDarussalam',
    '100' => 'eBulgaria',
    '112' => 'eBelarus',
    '124' => 'eCanada',
    '152' => 'eChile',
    '156' => 'eChina',
    '158' => 'eTaiwan',
    '170' => 'eColombia',
    '188' => 'eCostaRica',
    '191' => 'eCroatia',
    '196' => 'eCyprus',
    '203' => 'eCzech',
    '208' => 'eDenmark',
    '218' => 'eEcuador',
    '233' => 'eEstonia',
    '246' => 'eFinland',
    '250' => 'eFrance',
    '276' => 'eGermany',
    '288' => 'eGhana',
    '300' => 'eGreece',
    '320' => 'eGuatemala',
    '340' => 'eHonduras',
    '344' => 'eHongKong',
    '348' => 'eHungary',
    '352' => 'eIceland',
    '356' => 'eIndia',
    '360' => 'eIndonesia',
    '372' => 'eIreland',
    '376' => 'eIsrael',
    '380' => 'eItaly',
    '392' => 'eJapan',
    '400' => 'eJordan',
    '410' => 'eSouthKorea',
    '414' => 'eKuwait',
    '422' => 'eLebanon',
    '428' => 'eLatvia',
    '438' => 'eLiechtenstein',
    '440' => 'eLithuania',
    '442' => 'eLuxembourg',
    '446' => 'eMacau',
    '458' => 'eMalaysia',
    '470' => 'eMalta',
    '484' => 'eMexico',
    '498' => 'eMoldavia',
    '504' => 'eMorocco',
    '512' => 'eOman',
    '528' => 'eNetherlands',
    '554' => 'eNewZealand',
    '558' => 'eNicaragua',
    '578' => 'eNorway',
    '586' => 'ePakistan',
    '591' => 'ePanama',
    '600' => 'eParaguay',
    '604' => 'ePeru',
    '608' => 'ePhilippines',
    '616' => 'ePoland',
    '620' => 'ePortugal',
    '630' => 'ePuertoRico',
    '634' => 'eQatar',
    '642' => 'eRomania',
    '643' => 'eRussia',
    '682' => 'eSaudiArabia',
    '702' => 'eSingapore',
    '703' => 'eSlovak',
    '705' => 'eSlovenia',
    '710' => 'eSouthAfrica',
    '724' => 'eSpain',
    '752' => 'eSweden',
    '756' => 'eSwitzerland',
    '764' => 'eThailand',
    '784' => 'eUnitedArabEmirates',
    '788' => 'eTunisia',
    '792' => 'eTurkey',
    '800' => 'eUganda',
    '804' => 'eUkraine',
    '807' => 'eMacedonia',
    '818' => 'eEgypt',
    '826' => 'eUnitedKingdom',
    '834' => 'eTanzania',
    '840' => 'eUnitedStatesFcc',
    '858' => 'eUruguay',
    '862' => 'eVenezuela',
    '999' => 'eEgalistan',
  },
  lcsSetupWlanMngmtApConfNetwprofilsEntryConnectSsidTo => {
    '0' => 'eLan',
    '1' => 'eWlcTunnel1',
    '2' => 'eWlcTunnel2',
    '3' => 'eWlcTunnel3',
    '4' => 'eWlcTunnel4',
    '5' => 'eWlcTunnel5',
    '6' => 'eWlcTunnel6',
    '7' => 'eWlcTunnel7',
    '8' => 'eWlcTunnel8',
    '9' => 'eWlcTunnel9',
    '10' => 'eWlcTunnel10',
    '11' => 'eWlcTunnel11',
    '12' => 'eWlcTunnel12',
    '13' => 'eWlcTunnel13',
    '14' => 'eWlcTunnel14',
    '15' => 'eWlcTunnel15',
    '16' => 'eWlcTunnel16',
    '17' => 'eWlcTunnel17',
    '18' => 'eWlcTunnel18',
    '19' => 'eWlcTunnel19',
    '20' => 'eWlcTunnel20',
    '21' => 'eWlcTunnel21',
    '22' => 'eWlcTunnel22',
    '23' => 'eWlcTunnel23',
    '24' => 'eWlcTunnel24',
    '25' => 'eWlcTunnel25',
    '26' => 'eWlcTunnel26',
    '27' => 'eWlcTunnel27',
    '28' => 'eWlcTunnel28',
    '29' => 'eWlcTunnel29',
    '30' => 'eWlcTunnel30',
    '31' => 'eWlcTunnel31',
    '32' => 'eWlcTunnel32',
  },
  lcsSetupConfigAccessTableEntrySnmp => {
    '0' => 'eNo',
    '1' => 'eYes',
    '4' => 'eRead',
    '16' => 'eVpn',
  },
  lcsSetupTacacsPlusIncludeValueIntoAuthorisationRequest => {
    '0' => 'eDeactivated',
    '1' => 'eActivated',
  },
  lcsSetupUtmCfProfCatProfEntryPolHateDiscr => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsStatusWlanInterpointsAccesspointListEntryTxRate => {
    '0' => 'eUnknown',
    '1' => 'e1M',
    '2' => 'e2M',
    '3' => 'e5M',
    '4' => 'e5M5',
    '5' => 'e8M',
    '6' => 'e11M',
    '8' => 'e6M',
    '9' => 'e9M',
    '10' => 'e12M',
    '11' => 'e18M',
    '12' => 'e24M',
    '13' => 'e36M',
    '14' => 'e48M',
    '15' => 'e54M',
    '28' => 'eHT1S6M5',
    '29' => 'eHT1S13M',
    '30' => 'eHT1S19M5',
    '31' => 'eHT1S26M',
    '32' => 'eHT1S39M',
    '33' => 'eHT1S52M',
    '34' => 'eHT1S58M5',
    '35' => 'eHT1S65M',
    '36' => 'eHT2S13M',
    '37' => 'eHT2S26M',
    '38' => 'eHT2S39M',
    '39' => 'eHT2S52M',
    '40' => 'eHT2S78M',
    '41' => 'eHT2S104M',
    '42' => 'eHT2S117M',
    '43' => 'eHT2S130M',
    '44' => 'eHT3S19M5',
    '45' => 'eHT3S39M',
    '46' => 'eHT3S58M5',
    '47' => 'eHT3S78M',
    '48' => 'eHT3S117M',
    '49' => 'eHT3S156M',
    '50' => 'eHT3S175M5',
    '51' => 'eHT3S195M',
  },
  lcsSetupTimeDstClockChangesEntryTimeType => {
    '0' => 'eLst',
    '1' => 'eUtc',
  },
  lcsSetupLanBridgeProtocolTableEntryDhcpSrcMac => {
    '0' => 'eIrrelevant',
    '1' => 'eNo',
    '2' => 'eYes',
  },
  lcsSetupConfigAntiTheftProtectionEnabled => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusLanBridgeSpanningTreeRstpPortTableEntryRole => {
    '0' => 'eRoot',
    '1' => 'eDesignated',
    '2' => 'eAlternate',
    '3' => 'eBackup',
    '4' => 'eDisabled',
  },
  lcsSetupInterfacesWlanTransmissionEntryIfc => {
    '1' => 'eWlan1',
    '2' => 'eWlan2',
    '16' => 'eWlan12',
    '17' => 'eWlan13',
    '18' => 'eWlan14',
    '19' => 'eWlan15',
    '20' => 'eWlan16',
    '21' => 'eWlan17',
    '22' => 'eWlan18',
    '32' => 'eWlan22',
    '33' => 'eWlan23',
    '34' => 'eWlan24',
    '35' => 'eWlan25',
    '36' => 'eWlan26',
    '37' => 'eWlan27',
    '38' => 'eWlan28',
  },
  lcsSetupPublicSpotModulePortTableEntryAuthenticationNecessary => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanMngmtStationTableEntryValid => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupInterfacesWlanIntpntPeersEntryRecognizeBy => {
    '0' => 'eMacAddress',
    '1' => 'eName',
  },
  lcsStatusRemoteConnectionsEntryIfc => {
    '257' => 'eCh01',
    '258' => 'eCh02',
    '513' => 'eModem',
    '2049' => 'eDslCh1',
    '2050' => 'eDslCh2',
    '2051' => 'eDslCh3',
    '2052' => 'eDslCh4',
    '2053' => 'eDslCh5',
    '2054' => 'eDslCh6',
    '2055' => 'eDslCh7',
    '2056' => 'eDslCh8',
    '8193' => 'eAdsl1',
    '8194' => 'eAdsl2',
    '8195' => 'eAdsl3',
    '8196' => 'eAdsl4',
    '8197' => 'eAdsl5',
    '8198' => 'eAdsl6',
    '8199' => 'eAdsl7',
    '8200' => 'eAdsl8',
    '16385' => 'eVdsl1',
    '16386' => 'eVdsl2',
    '16387' => 'eVdsl3',
    '16388' => 'eVdsl4',
    '16389' => 'eVdsl5',
    '16390' => 'eVdsl6',
    '16391' => 'eVdsl7',
    '16392' => 'eVdsl8',
  },
  lcsStatusHardwareInfoPciDeviceListEntryType => {
    '0' => 'ePci',
    '1' => 'ePcie',
  },
  lcsStatusEthernetPortsPortsEntryAutoNegotiation => {
    '0' => 'ePending',
    '1' => 'eCompleted',
    '2' => 'eDisabled',
    '3' => 'eNotAvailable',
  },
  lcsStatusWlanMngmtApConfRadioprofilsEntryReportSeenClients => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupInterfacesEthernetPortsEntryPort => {
    '0' => 'eUnknown',
    '1' => 'eUplink',
    '2' => 'eEth1',
    '3' => 'eEth2',
    '4' => 'eEth3',
    '5' => 'eEth4',
    '16' => 'eWan',
  },
  lcsStatusEthernetPortsCableTestResultsEntryTxStatus => {
    '0' => 'eUnknown',
    '1' => 'eOk',
    '2' => 'eOpen',
    '3' => 'eShort',
    '4' => 'eImpedanceFault',
    '5' => 'eFail',
    '6' => 'eBusy',
  },
  lcsSetupConfigAssertAction => {
    '0' => 'eLogOnly',
    '1' => 'eReboot',
  },
  lcsSetupVpnEstablishSasCollectively => {
    '0' => 'eNo',
    '1' => 'eYes',
    '2' => 'eOnlyWithKeepalive',
  },
  lcsStatusWlanMngmtApConfNetwprofilsEntry11bPreamble => {
    '0' => 'eAuto',
    '1' => 'eLong',
  },
  lcsSetupDnsResolveDomain => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWlanMngmtSyncWtpPassword => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupInterfacesDslEntryIfc => {
    '257' => 'eS01',
    '513' => 'eModem',
    '2049' => 'eDsl1',
    '2050' => 'eDsl2',
    '2051' => 'eDsl3',
    '2052' => 'eDsl4',
    '8193' => 'eAdsl',
    '16385' => 'eVdsl',
  },
  lcsSetupUtmCfProfCatProfEntryWebSiteTranslation => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsStatusEthernetPortsPortsEntryPrivateMode => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupVpnLegacyDynVpnLcos50xSupport => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusAdslAdvancedStandard => {
    '0' => 'eOff',
    '2' => 'eT1dot413',
    '3' => 'eGdotLite',
    '4' => 'eGdotDMT',
    '21' => 'eAdsl2',
    '22' => 'eAdsl2plus',
    '31' => 'eAdsl2AnnexM',
    '32' => 'eAdsl2plusAnnexM',
    '33' => 'eAdsl2AnnexI',
    '34' => 'eAdsl2plusAnnexI',
    '35' => 'eAdsl2AnnexJ',
    '36' => 'eAdsl2plusAnnexJ',
    '37' => 'eAdsl2AnnexL',
    '40' => 'eVdsl2',
    '255' => 'eUnknown',
  },
  lcsStatusTimeDstClockChangesEntryTimeType => {
    '0' => 'eLst',
    '1' => 'eUtc',
  },
  lcsStatusIpRouterProtocolTableEntryProt => {
    '1' => 'eIcmp',
    '2' => 'eIgmp',
    '3' => 'eGgt',
    '4' => 'eIpip',
    '6' => 'eTcp',
    '8' => 'eEgp',
    '17' => 'eUdp',
    '47' => 'eGre',
    '50' => 'eEsp',
    '51' => 'eAh',
    '62' => 'eCftp',
    '108' => 'eIpcomp',
    '112' => 'eVrrp',
    '119' => 'eSrp',
  },
  lcsStatusWlanMngmtApStatusNewApEntryValid => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusLayerConnectionEntryLay2 => {
    '0' => 'eX75lapb',
    '1' => 'eTrans',
    '5' => 'ePppoe',
    '6' => 'eSscop',
  },
  lcsSetupUtmCfProfCatProfEntryBannerAdvertisements => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupInterfacesWlanTransmissionEntryMinTxRate => {
    '0' => 'eAuto',
    '1' => 'e1M',
    '2' => 'e2M',
    '4' => 'e5M5',
    '6' => 'e11M',
    '8' => 'e6M',
    '9' => 'e9M',
    '10' => 'e12M',
    '11' => 'e18M',
    '12' => 'e24M',
    '13' => 'e36M',
    '14' => 'e48M',
    '15' => 'e54M',
  },
  lcsSetupInterfacesWlanNetworkEntryMacFilter => {
    '0' => 'eYes',
    '1' => 'eNo',
    '2' => 'eLocalOnly',
    '3' => 'eRadiusOnly',
  },
  lcsStatusWlanCompetingNetworksEntryRate => {
    '0' => 'eUnknown',
    '1' => 'e1M',
    '2' => 'e2M',
    '3' => 'e5M',
    '4' => 'e5M5',
    '5' => 'e8M',
    '6' => 'e11M',
    '12' => 'e6M',
    '13' => 'e9M',
    '14' => 'e12M',
    '15' => 'e18M',
    '16' => 'e24M',
    '17' => 'e36M',
    '18' => 'e48M',
    '19' => 'e54M',
    '20' => 'eT12M',
    '21' => 'eT18M',
    '22' => 'eT24M',
    '23' => 'eT36M',
    '24' => 'eT48M',
    '25' => 'eT72M',
    '26' => 'eT96M',
    '27' => 'eT108M',
    '28' => 'eHT1S6M5',
    '29' => 'eHT1S13M',
    '30' => 'eHT1S19M5',
    '31' => 'eHT1S26M',
    '32' => 'eHT1S39M',
    '33' => 'eHT1S52M',
    '34' => 'eHT1S58M5',
    '35' => 'eHT1S65M',
    '36' => 'eHT2S13M',
    '37' => 'eHT2S26M',
    '38' => 'eHT2S39M',
    '39' => 'eHT2S52M',
    '40' => 'eHT2S78M',
    '41' => 'eHT2S104M',
    '42' => 'eHT2S117M',
    '43' => 'eHT2S130M',
    '44' => 'eHT3S19M5',
    '45' => 'eHT3S39M',
    '46' => 'eHT3S58M5',
    '47' => 'eHT3S78M',
    '48' => 'eHT3S117M',
    '49' => 'eHT3S156M',
    '50' => 'eHT3S175M5',
    '51' => 'eHT3S195M',
    '60' => 'eHTDUP6M',
  },
  lcsSetupWlanMngmtApConfApsEntryEncryption => {
    '0' => 'eDefault',
    '1' => 'eDtls',
    '2' => 'eNo',
  },
  lcsStatusTcpIpDhcpNetworkListEntryLanIfc => {
    '256' => 'eLan1',
    '257' => 'eLan2',
    '258' => 'eLan3',
    '259' => 'eLan4',
    '260' => 'eLan5',
    '512' => 'eWlan1',
    '513' => 'eWlan2',
    '768' => 'eP2p11',
    '769' => 'eP2p12',
    '770' => 'eP2p13',
    '771' => 'eP2p14',
    '772' => 'eP2p15',
    '773' => 'eP2p16',
    '774' => 'eP2p21',
    '775' => 'eP2p22',
    '776' => 'eP2p23',
    '777' => 'eP2p24',
    '778' => 'eP2p25',
    '779' => 'eP2p26',
    '799' => 'eP2p17',
    '800' => 'eP2p18',
    '801' => 'eP2p19',
    '802' => 'eP2p110',
    '803' => 'eP2p111',
    '804' => 'eP2p112',
    '805' => 'eP2p113',
    '806' => 'eP2p114',
    '807' => 'eP2p115',
    '808' => 'eP2p116',
    '831' => 'eP2p27',
    '832' => 'eP2p28',
    '833' => 'eP2p29',
    '834' => 'eP2p210',
    '835' => 'eP2p211',
    '836' => 'eP2p212',
    '837' => 'eP2p213',
    '838' => 'eP2p214',
    '839' => 'eP2p215',
    '840' => 'eP2p216',
    '1024' => 'eWlan12',
    '1025' => 'eWlan13',
    '1026' => 'eWlan14',
    '1027' => 'eWlan15',
    '1028' => 'eWlan16',
    '1029' => 'eWlan17',
    '1030' => 'eWlan18',
    '1031' => 'eWlan22',
    '1032' => 'eWlan23',
    '1033' => 'eWlan24',
    '1034' => 'eWlan25',
    '1035' => 'eWlan26',
    '1036' => 'eWlan27',
    '1037' => 'eWlan28',
    '1536' => 'eBrg1',
    '1537' => 'eBrg2',
    '1538' => 'eBrg3',
    '1539' => 'eBrg4',
    '1540' => 'eBrg5',
    '1541' => 'eBrg6',
    '1542' => 'eBrg7',
    '1543' => 'eBrg8',
    '1792' => 'eWlcTunnel1',
    '1793' => 'eWlcTunnel2',
    '1794' => 'eWlcTunnel3',
    '1795' => 'eWlcTunnel4',
    '1796' => 'eWlcTunnel5',
    '1797' => 'eWlcTunnel6',
    '1798' => 'eWlcTunnel7',
    '1799' => 'eWlcTunnel8',
    '1800' => 'eWlcTunnel9',
    '1801' => 'eWlcTunnel10',
    '1802' => 'eWlcTunnel11',
    '1803' => 'eWlcTunnel12',
    '1804' => 'eWlcTunnel13',
    '1805' => 'eWlcTunnel14',
    '1806' => 'eWlcTunnel15',
    '1807' => 'eWlcTunnel16',
    '1808' => 'eWlcTunnel17',
    '1809' => 'eWlcTunnel18',
    '1810' => 'eWlcTunnel19',
    '1811' => 'eWlcTunnel20',
    '1812' => 'eWlcTunnel21',
    '1813' => 'eWlcTunnel22',
    '1814' => 'eWlcTunnel23',
    '1815' => 'eWlcTunnel24',
    '1816' => 'eWlcTunnel25',
    '1817' => 'eWlcTunnel26',
    '1818' => 'eWlcTunnel27',
    '1819' => 'eWlcTunnel28',
    '1820' => 'eWlcTunnel29',
    '1821' => 'eWlcTunnel30',
    '1822' => 'eWlcTunnel31',
    '1823' => 'eWlcTunnel32',
    '65535' => 'eAny',
  },
  lcsStatusTcpIpArpTableArpEntryEthernetPort => {
    '0' => 'eUnknown',
    '1' => 'eUplink',
    '2' => 'eEth1',
    '3' => 'eEth2',
    '4' => 'eEth3',
    '5' => 'eEth4',
    '16' => 'eWan',
  },
  lcsSetupSnmpPasswordRequiredForSnmpReadAccess => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanNetworksEntryAlarmState => {
    '0' => 'eNo',
    '1' => 'ePhySignal',
    '2' => 'eTotalRetries',
    '4' => 'eTxErrors',
  },
  lcsStatusWlanPairwiseKeysEntryKeyType => {
    '0' => 'eNone',
    '1' => 'eUnknown',
    '5' => 'eWep40Bits',
    '13' => 'eWep104Bits',
    '16' => 'eWep128Bits',
    '64' => 'eTkip',
    '65' => 'eAesOcb',
    '66' => 'eAesCcm',
  },
  lcsSetupIpRouterFirewallDenySessionRecover => {
    '0' => 'eOff',
    '1' => 'eAllways',
    '2' => 'eWan',
    '3' => 'eDefaultRoute',
  },
  lcsSetupUtmCfProfCatProfEntrySearchWebPortal => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupWanLayerEntryLay2 => {
    '0' => 'eX75lapb',
    '1' => 'eTrans',
    '5' => 'ePppoe',
  },
  lcsSetupInterfacesWlanRadioSettingsEntry5ghzMode => {
    '0' => 'eNormal',
    '3' => 'e11anMixed',
    '4' => 'eGreenfield',
  },
  lcsSetupWlanRadiusAccessCheckProtocol => {
    '0' => 'eRadius',
    '1' => 'eRadsec',
  },
  lcsSetupUtmCfGlobalSettingsOverrideType => {
    '0' => 'eCategory',
    '1' => 'eDomain',
    '2' => 'eCategoryAndDomain',
  },
  lcsSetupCertsScepClntCasEntryRaAutoapprove => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusTimeTimezone => {
    '0' => 'e0',
    '1' => 'eplus1',
    '2' => 'eplus2',
    '3' => 'eplus3',
    '4' => 'eplus4',
    '5' => 'eplus5',
    '6' => 'eplus6',
    '7' => 'eplus7',
    '8' => 'eplus8',
    '9' => 'eplus9',
    '10' => 'eplus10',
    '11' => 'eplus11',
    '12' => 'eplus12',
    '13' => 'eplus13',
    '14' => 'eplus14',
    '244' => 'eminus12',
    '245' => 'eminus11',
    '246' => 'eminus10',
    '247' => 'eminus9',
    '248' => 'eminus8',
    '249' => 'eminus7',
    '250' => 'eminus6',
    '251' => 'eminus5',
    '252' => 'eminus4',
    '253' => 'eminus3',
    '254' => 'eminus2',
    '255' => 'eminus1',
  },
  lcsStatusWlanCompetingNetworksEntryNonerpPresent => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusIsdnSignalingManagementDInfoEntryProtocol => {
    '0' => 'eNo',
    '1' => 'eDss1',
    '2' => 'e1tr6',
    '4' => 'eP2pDss1',
    '255' => 'eAuto',
    '16384' => 'eNtP2pDss1',
    '32768' => 'eNtDss1',
    '65536' => 'eRevNtP2pDss1',
    '131072' => 'eRevNtDss1',
  },
  lcsStatusAdslConnectionHistoryEntryStandard => {
    '0' => 'eOff',
    '2' => 'eT1dot413',
    '3' => 'eGdotLite',
    '4' => 'eGdotDMT',
    '21' => 'eAdsl2',
    '22' => 'eAdsl2plus',
    '31' => 'eAdsl2AnnexM',
    '32' => 'eAdsl2plusAnnexM',
    '33' => 'eAdsl2AnnexI',
    '34' => 'eAdsl2plusAnnexI',
    '35' => 'eAdsl2AnnexJ',
    '36' => 'eAdsl2plusAnnexJ',
    '37' => 'eAdsl2AnnexL',
    '40' => 'eVdsl2',
    '255' => 'eUnknown',
  },
  lcsSetupDnsNetbiosUsage => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupVpnOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
    '3' => 'eExclusive',
  },
  lcsSetupSyslogFacilityMapperEntryFacility => {
    '0' => 'eKern',
    '1' => 'eUser',
    '2' => 'eMail',
    '3' => 'eDaemon',
    '4' => 'eAuth',
    '5' => 'eSyslog',
    '6' => 'eLpr',
    '7' => 'eNews',
    '8' => 'eUucp',
    '9' => 'eCron',
    '10' => 'eAuthpriv',
    '16' => 'eLocal0',
    '17' => 'eLocal1',
    '18' => 'eLocal2',
    '19' => 'eLocal3',
    '20' => 'eLocal4',
    '21' => 'eLocal5',
    '22' => 'eLocal6',
    '23' => 'eLocal7',
  },
  lcsSetupWlanRadiusAccessCheckBackupProtocol => {
    '0' => 'eRadius',
    '1' => 'eRadsec',
  },
  lcsSetupUtmCfGlobalSettingsSnapshotWeekday => {
    '0' => 'eSunday',
    '1' => 'eMonday',
    '2' => 'eTuesday',
    '3' => 'eWednesday',
    '4' => 'eThursday',
    '5' => 'eFriday',
    '6' => 'eSaturday',
  },
  lcsSetupWlanMngmtApConfNetwprofilsEntryRadiusAccounting => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusIpRouterFilterListEntryLinked => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusCertsScepCaCaStatusFingerprintAlgorithm => {
    '0' => 'eMd5',
    '1' => 'eSha1',
  },
  lcsSetupComPortsCOMPortServNetwSetEntryDeviceType => {
    '1' => 'eOutband',
    '33' => 'eBelkinF5u103',
    '34' => 'eProlific2303',
    '35' => 'eFtdi8u232am',
    '36' => 'eGpsNmea',
    '45' => 'eQualcomDm',
  },
  lcsSetupIpRouterRipBestRoutesEntryPort => {
    '256' => 'eLan1',
    '257' => 'eLan2',
    '258' => 'eLan3',
    '259' => 'eLan4',
    '260' => 'eLan5',
    '512' => 'eWlan1',
    '513' => 'eWlan2',
    '768' => 'eP2p11',
    '769' => 'eP2p12',
    '770' => 'eP2p13',
    '771' => 'eP2p14',
    '772' => 'eP2p15',
    '773' => 'eP2p16',
    '774' => 'eP2p21',
    '775' => 'eP2p22',
    '776' => 'eP2p23',
    '777' => 'eP2p24',
    '778' => 'eP2p25',
    '779' => 'eP2p26',
    '799' => 'eP2p17',
    '800' => 'eP2p18',
    '801' => 'eP2p19',
    '802' => 'eP2p110',
    '803' => 'eP2p111',
    '804' => 'eP2p112',
    '805' => 'eP2p113',
    '806' => 'eP2p114',
    '807' => 'eP2p115',
    '808' => 'eP2p116',
    '831' => 'eP2p27',
    '832' => 'eP2p28',
    '833' => 'eP2p29',
    '834' => 'eP2p210',
    '835' => 'eP2p211',
    '836' => 'eP2p212',
    '837' => 'eP2p213',
    '838' => 'eP2p214',
    '839' => 'eP2p215',
    '840' => 'eP2p216',
    '1024' => 'eWlan12',
    '1025' => 'eWlan13',
    '1026' => 'eWlan14',
    '1027' => 'eWlan15',
    '1028' => 'eWlan16',
    '1029' => 'eWlan17',
    '1030' => 'eWlan18',
    '1031' => 'eWlan22',
    '1032' => 'eWlan23',
    '1033' => 'eWlan24',
    '1034' => 'eWlan25',
    '1035' => 'eWlan26',
    '1036' => 'eWlan27',
    '1037' => 'eWlan28',
    '1536' => 'eBrg1',
    '1537' => 'eBrg2',
    '1538' => 'eBrg3',
    '1539' => 'eBrg4',
    '1540' => 'eBrg5',
    '1541' => 'eBrg6',
    '1542' => 'eBrg7',
    '1543' => 'eBrg8',
    '1792' => 'eWlcTunnel1',
    '1793' => 'eWlcTunnel2',
    '1794' => 'eWlcTunnel3',
    '1795' => 'eWlcTunnel4',
    '1796' => 'eWlcTunnel5',
    '1797' => 'eWlcTunnel6',
    '1798' => 'eWlcTunnel7',
    '1799' => 'eWlcTunnel8',
    '1800' => 'eWlcTunnel9',
    '1801' => 'eWlcTunnel10',
    '1802' => 'eWlcTunnel11',
    '1803' => 'eWlcTunnel12',
    '1804' => 'eWlcTunnel13',
    '1805' => 'eWlcTunnel14',
    '1806' => 'eWlcTunnel15',
    '1807' => 'eWlcTunnel16',
    '1808' => 'eWlcTunnel17',
    '1809' => 'eWlcTunnel18',
    '1810' => 'eWlcTunnel19',
    '1811' => 'eWlcTunnel20',
    '1812' => 'eWlcTunnel21',
    '1813' => 'eWlcTunnel22',
    '1814' => 'eWlcTunnel23',
    '1815' => 'eWlcTunnel24',
    '1816' => 'eWlcTunnel25',
    '1817' => 'eWlcTunnel26',
    '1818' => 'eWlcTunnel27',
    '1819' => 'eWlcTunnel28',
    '1820' => 'eWlcTunnel29',
    '1821' => 'eWlcTunnel30',
    '1822' => 'eWlcTunnel31',
    '1823' => 'eWlcTunnel32',
    '65535' => 'eAny',
  },
  lcsSetupInterfacesS0EntryIfc => {
    '257' => 'eS01',
    '513' => 'eModem',
    '2049' => 'eDsl1',
    '2050' => 'eDsl2',
    '2051' => 'eDsl3',
    '2052' => 'eDsl4',
    '8193' => 'eAdsl',
    '16385' => 'eVdsl',
  },
  lcsSetupWanRoundrobinEntryHead => {
    '0' => 'eLast',
    '1' => 'eFirst',
  },
  lcsStatusVdslModemDefaultAtmMuxmode => {
    '0' => 'eVcMux',
    '1' => 'eLlcMux',
  },
  lcsStatusIsdnSignalingManagementDInfoEntryLayer2 => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupIpRouter1NNatServiceTableEntryProtocol => {
    '0' => 'eTcpPlusUdp',
    '1' => 'eTcp',
    '2' => 'eUdp',
  },
  lcsStatusCallInformationEntryIfc => {
    '257' => 'eS01',
    '513' => 'eModem',
    '2049' => 'eDsl1',
    '2050' => 'eDsl2',
    '2051' => 'eDsl3',
    '2052' => 'eDsl4',
    '8193' => 'eAdsl',
    '16385' => 'eVdsl',
  },
  lcsSetupInterfacesModemMobileEntryOperating => {
    '0' => 'eNo',
    '1' => 'eModem',
    '2' => 'eUmtsGprs',
  },
  lcsSetupConfigAccessTableEntryHttps => {
    '0' => 'eNo',
    '1' => 'eYes',
    '4' => 'eRead',
    '16' => 'eVpn',
  },
  lcsStatusWlanMngmtApConfNetwprofilsEntryEncryption => {
    '0' => 'e80211iWpaPsk',
    '1' => 'e80211iWpa8021x',
    '2' => 'eWep104Bits',
    '3' => 'eWep40Bits',
    '4' => 'eWep104Bits8021x',
    '5' => 'eWep40Bits8021x',
    '6' => 'eNone',
  },
  lcsStatusEthernetPortsCableTestResultsEntryMdi2Status => {
    '0' => 'eUnknown',
    '1' => 'eOk',
    '2' => 'eOpen',
    '3' => 'eShort',
    '4' => 'eImpedanceFault',
    '5' => 'eFail',
    '6' => 'eBusy',
  },
  lcsSetupComPortsCOMPortServCOMPortSetEntryReadyCondition => {
    '0' => 'eDtr',
    '1' => 'eData',
  },
  lcsStatusPppPppPhasesEntryBacp => {
    '1' => 'eInitial',
    '2' => 'eStartng',
    '3' => 'eClosed',
    '4' => 'eStopped',
    '5' => 'eClosing',
    '6' => 'eStoppng',
    '7' => 'eReqsent',
    '8' => 'eAckrcvd',
    '9' => 'eAcksent',
    '10' => 'eOpened',
  },
  lcsStatusWlanInterpointsAccesspointListEntryIndex => {
    '1' => 'eP2p11',
    '2' => 'eP2p12',
    '3' => 'eP2p13',
    '4' => 'eP2p14',
    '5' => 'eP2p15',
    '6' => 'eP2p16',
    '7' => 'eP2p21',
    '8' => 'eP2p22',
    '9' => 'eP2p23',
    '10' => 'eP2p24',
    '11' => 'eP2p25',
    '12' => 'eP2p26',
    '32' => 'eP2p17',
    '33' => 'eP2p18',
    '34' => 'eP2p19',
    '35' => 'eP2p110',
    '36' => 'eP2p111',
    '37' => 'eP2p112',
    '38' => 'eP2p113',
    '39' => 'eP2p114',
    '40' => 'eP2p115',
    '41' => 'eP2p116',
    '64' => 'eP2p27',
    '65' => 'eP2p28',
    '66' => 'eP2p29',
    '67' => 'eP2p210',
    '68' => 'eP2p211',
    '69' => 'eP2p212',
    '70' => 'eP2p213',
    '71' => 'eP2p214',
    '72' => 'eP2p215',
    '73' => 'eP2p216',
  },
  lcsSetupDhcpNetworkListEntryAdaption => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupVlanOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusIpRouterRipWildcardSitesEntryRipSend => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupLanBridgeSpanningTreePortDataEntryEdgePort => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusIpRouterRipWildcardSitesEntryPoisonedReverse => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupHttpStandardDesign => {
    '0' => 'eNormalDesign',
    '1' => 'eDesignForSmallResolutions',
    '2' => 'eDesignWithHighContrast',
  },
  lcsSetupTcpIpOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupCertsOcspClientCaProfileTableEntrySyslogEvents => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupInterfacesEthernetPortsEntryClockRole => {
    '0' => 'eSlavePreferred',
    '1' => 'eMaster',
    '2' => 'eSlave',
    '4' => 'eMasterPreferred',
  },
  lcsSetupAutoldUsbFirmwareAndLoader => {
    '1' => 'eInactive',
    '2' => 'eIfUnconfigured',
    '3' => 'eActive',
  },
  lcsStatusWlanMngmtApConfNetwProfErrorsEntryError => {
    '0' => 'eNone',
    '1' => 'eInheritanceError',
    '2' => 'eNoProfile',
    '3' => 'eProfileNotFound',
    '4' => 'eNoMemoory',
    '5' => 'eSsidMissing',
    '6' => 'eNetworkNotFound',
    '7' => 'eApParametersNotFound',
    '8' => 'eApIntranetNotFound',
  },
  lcsStatusWlanMngmtApConfNetwprofilsEntryMacFilter => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWlanRadiusAccountingBackupProtocol => {
    '0' => 'eRadius',
    '1' => 'eRadsec',
  },
  lcsSetupInterfacesWlanEncryptionEntryIfc => {
    '1' => 'eWlan1',
    '2' => 'eWlan2',
    '16' => 'eWlan12',
    '17' => 'eWlan13',
    '18' => 'eWlan14',
    '19' => 'eWlan15',
    '20' => 'eWlan16',
    '21' => 'eWlan17',
    '22' => 'eWlan18',
    '32' => 'eWlan22',
    '33' => 'eWlan23',
    '34' => 'eWlan24',
    '35' => 'eWlan25',
    '36' => 'eWlan26',
    '37' => 'eWlan27',
    '38' => 'eWlan28',
  },
  lcsStatusWtpMngmtNetwprofilsEntryMaxHtMcs => {
    '0' => 'eAuto',
    '1' => 'eMcs08',
    '2' => 'eMcs19',
    '3' => 'eMcs210',
    '4' => 'eMcs311',
    '5' => 'eMcs412',
    '6' => 'eMcs513',
    '7' => 'eMcs614',
    '8' => 'eMcs715',
  },
  lcsSetupInterfacesWlanEncryptionEntryWpa2SessionKeytypes => {
    '1' => 'eTkip',
    '2' => 'eAes',
    '3' => 'eTkipAes',
  },
  lcsStatusEthernetPortsPortsEntryDownshift => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWanRouterInterfaceEntryAcceptCalls => {
    '0' => 'eAll',
    '128' => 'eNone',
  },
  lcsSetupInterfacesWlanOperationalEntryBrokenLinkDetection => {
    '0' => 'eNo',
    '1' => 'eLan1',
    '2' => 'eLan2',
    '3' => 'eLan3',
    '4' => 'eLan4',
  },
  lcsStatusWlanCompetingNetworksEntryCompression => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWtpMngmtNetwprofilsEntryRadioBand => {
    '0' => 'e24ghz5ghz',
    '1' => 'e24ghz',
    '2' => 'e5ghz',
  },
  lcsSetupIpRouterFirewallApplicationsIrcIrcBlock => {
    '0' => 'eOff',
    '1' => 'eAllways',
    '2' => 'eWan',
    '3' => 'eDefaultRoute',
  },
  lcsStatusWlanMngmtScanResultsEntryEncryption => {
    '0' => 'e80211iWpaPsk',
    '1' => 'e80211iWpa8021x',
    '2' => 'eWep104Bits',
    '3' => 'eWep40Bits',
    '4' => 'eWep104Bits8021x',
    '5' => 'eWep40Bits8021x',
    '6' => 'eNone',
  },
  lcsSetupInterfacesS0EntryMaxOutCalls => {
    '0' => 'eTwo',
    '1' => 'eOne',
    '2' => 'eZero',
  },
  lcsSetupWanRouterInterfaceEntryClip => {
    '0' => 'eYes',
    '1' => 'eNo',
  },
  lcsSetupIpRouterFirewallPingBlock => {
    '0' => 'eOff',
    '1' => 'eAllways',
    '2' => 'eWan',
    '3' => 'eDefaultRoute',
  },
  lcsSetupLanBridgePriorityMappingEntryPriority => {
    '0' => 'eBestEffort',
    '1' => 'eBackground',
    '2' => 'eTwo',
    '3' => 'eExcellentEffort',
    '4' => 'eControlledLatency',
    '5' => 'eVideo',
    '6' => 'eVoice',
    '7' => 'eNetworkControl',
  },
  lcsStatusWlanRadiosEntryBackgroundScanUnit => {
    '0' => 'eSeconds',
    '1' => 'eMilliseconds',
    '2' => 'eMicroseconds',
    '3' => 'eMinutes',
    '4' => 'eHours',
    '5' => 'eDays',
    '6' => 'eWeeks',
    '7' => 'eFortnights',
  },
  lcsSetupPublicSpotModulePageTableEntryFallback => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupRadiusServerClientsEntryProtocols => {
    '0' => 'eRadius',
    '1' => 'eRadsec',
    '255' => 'eAll',
  },
  lcsStatusWlanStationTableEntryMacCheck => {
    '0' => 'eNone',
    '1' => 'eLocal',
    '2' => 'eRadius',
  },
  lcsStatusWlanClientIfcsEntryQos => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWlanCountry => {
    '0' => 'eUnknown',
    '8' => 'eAlbania',
    '32' => 'eArgentina',
    '36' => 'eAustralia',
    '40' => 'eAustria',
    '48' => 'eBahrain',
    '50' => 'eBangladesh',
    '56' => 'eBelgium',
    '70' => 'eBosniaHerzegovina',
    '76' => 'eBrazil',
    '96' => 'eBruneiDarussalam',
    '100' => 'eBulgaria',
    '112' => 'eBelarus',
    '124' => 'eCanada',
    '152' => 'eChile',
    '156' => 'eChina',
    '158' => 'eTaiwan',
    '170' => 'eColombia',
    '188' => 'eCostaRica',
    '191' => 'eCroatia',
    '196' => 'eCyprus',
    '203' => 'eCzech',
    '208' => 'eDenmark',
    '218' => 'eEcuador',
    '233' => 'eEstonia',
    '246' => 'eFinland',
    '250' => 'eFrance',
    '276' => 'eGermany',
    '288' => 'eGhana',
    '300' => 'eGreece',
    '320' => 'eGuatemala',
    '340' => 'eHonduras',
    '344' => 'eHongKong',
    '348' => 'eHungary',
    '352' => 'eIceland',
    '356' => 'eIndia',
    '360' => 'eIndonesia',
    '372' => 'eIreland',
    '376' => 'eIsrael',
    '380' => 'eItaly',
    '392' => 'eJapan',
    '400' => 'eJordan',
    '410' => 'eSouthKorea',
    '414' => 'eKuwait',
    '422' => 'eLebanon',
    '428' => 'eLatvia',
    '438' => 'eLiechtenstein',
    '440' => 'eLithuania',
    '442' => 'eLuxembourg',
    '446' => 'eMacau',
    '458' => 'eMalaysia',
    '470' => 'eMalta',
    '484' => 'eMexico',
    '498' => 'eMoldavia',
    '504' => 'eMorocco',
    '512' => 'eOman',
    '528' => 'eNetherlands',
    '554' => 'eNewZealand',
    '558' => 'eNicaragua',
    '578' => 'eNorway',
    '586' => 'ePakistan',
    '591' => 'ePanama',
    '600' => 'eParaguay',
    '604' => 'ePeru',
    '608' => 'ePhilippines',
    '616' => 'ePoland',
    '620' => 'ePortugal',
    '630' => 'ePuertoRico',
    '634' => 'eQatar',
    '642' => 'eRomania',
    '643' => 'eRussia',
    '682' => 'eSaudiArabia',
    '702' => 'eSingapore',
    '703' => 'eSlovak',
    '705' => 'eSlovenia',
    '710' => 'eSouthAfrica',
    '724' => 'eSpain',
    '752' => 'eSweden',
    '756' => 'eSwitzerland',
    '764' => 'eThailand',
    '784' => 'eUnitedArabEmirates',
    '788' => 'eTunisia',
    '792' => 'eTurkey',
    '800' => 'eUganda',
    '804' => 'eUkraine',
    '807' => 'eMacedonia',
    '818' => 'eEgypt',
    '826' => 'eUnitedKingdom',
    '834' => 'eTanzania',
    '840' => 'eUnitedStatesFcc',
    '858' => 'eUruguay',
    '862' => 'eVenezuela',
    '998' => 'eEurope',
    '999' => 'eEgalistan',
  },
  lcsStatusAccountingAccountingListEntryConnType => {
    '0' => 'eUnknown',
    '1' => 'eDialUp',
    '2' => 'eLeasedLine',
    '4' => 'eDslLine',
    '7' => 'eVpnConn',
    '8' => 'ePptpConn',
  },
  lcsSetupInterfacesModemMobileEntryDataRate => {
    '19200' => 'e19200',
    '38400' => 'e38400',
    '57600' => 'e57600',
    '115200' => 'e115200',
  },
  lcsStatusPppRxOptionsLcpEntryAuthentRequest => {
    '0' => 'eNone',
    '4' => 'ePap',
    '8' => 'eChap',
    '16' => 'eMsChap',
    '32' => 'eMsChapv2',
  },
  lcsStatusLanBridgeSpanningTreeOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanMngmtNetworksEntryInterface => {
    '0' => 'eWlan1',
    '1' => 'eWlan2',
    '2' => 'eWlan3',
    '3' => 'eWlan4',
  },
  lcsStatusWlanCompetingNetworksEntryShortPreamble => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusComPortsComPortServerComPortStatusEntryDeviceType => {
    '1' => 'eOutband',
    '33' => 'eBelkinF5u103',
    '34' => 'eProlific2303',
    '35' => 'eFtdi8u232am',
    '36' => 'eGpsNmea',
    '45' => 'eQualcomDm',
  },
  lcsSetupInterfacesWlanRadioSettingsEntrySubbands => {
    '1' => 'eBand1',
    '2' => 'eBand2',
    '3' => 'eBand1Plus2',
    '4' => 'eBand3',
    '5' => 'eBand1Plus3',
    '6' => 'eBand2Plus3',
    '7' => 'eBand1Plus2Plus3',
  },
  lcsStatusWlanMngmtApConfApsEntryOperating => {
    '0' => 'eYes',
    '1' => 'eNo',
  },
  lcsSetupWlanVlanGroupkeyMappingEntryNetwork => {
    '1' => 'eWlan1',
    '2' => 'eWlan2',
    '16' => 'eWlan12',
    '17' => 'eWlan13',
    '18' => 'eWlan14',
    '19' => 'eWlan15',
    '20' => 'eWlan16',
    '21' => 'eWlan17',
    '22' => 'eWlan18',
    '32' => 'eWlan22',
    '33' => 'eWlan23',
    '34' => 'eWlan24',
    '35' => 'eWlan25',
    '36' => 'eWlan26',
    '37' => 'eWlan27',
    '38' => 'eWlan28',
  },
  lcsSetupInterfacesWlanTransmissionEntryMaxHtMcs => {
    '0' => 'eAuto',
    '1' => 'eMcs08',
    '2' => 'eMcs19',
    '3' => 'eMcs210',
    '4' => 'eMcs311',
    '5' => 'eMcs412',
    '6' => 'eMcs513',
    '7' => 'eMcs614',
    '8' => 'eMcs715',
  },
  lcsSetupLanBridgeSpanningTreeOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusConfigAntiTheftProtectionLastError => {
    '1' => 'eUnallocatedNumber',
    '3' => 'eNoRouteToDestination',
    '16' => 'eNormalCallClearing',
    '17' => 'eUserBusy',
    '18' => 'eNoUserResponding',
    '19' => 'eUserAlertingNoAnswer',
    '21' => 'eCallRejected',
    '22' => 'eNumberChanged',
    '26' => 'eNonSelectedUserClearing',
    '27' => 'eDestinationOutOfOrder',
    '31' => 'eNormalUnspecified',
    '34' => 'eNoChannelAvailable',
    '41' => 'eTempFailure',
    '42' => 'eSwitchingEquipmentCongestion',
    '50' => 'eFacilityNotSubscribed',
    '63' => 'eFacilityNotAvailable',
    '81' => 'eInvalidCallReferenceNumber',
    '88' => 'eIncompatibleDestination',
  },
  lcsSetupHttpUseCss => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupInterfacesMobileCheckWhileConnected => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupInterfacesEthernetPortsEntryPowerSaving => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupDhcpNetworkListEntryCluster => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusPptpConnectionsEntryMode => {
    '0' => 'ePassive',
    '128' => 'eActive',
  },
  lcsSetupIpRouterRipWanSitesEntryRipAccept => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupIpRouterProxyArp => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusModemMobileSupplyVoltageStatus => {
    '0' => 'eUnknown',
    '1' => 'eNormal',
    '2' => 'eLow',
    '3' => 'eHigh',
    '5' => 'eLowCritical',
    '6' => 'eHighCritical',
  },
  lcsStatusAdslLineState => {
    '0' => 'eUnknown',
    '1' => 'eDown',
    '2' => 'eIdle',
    '3' => 'eHandshake',
    '4' => 'eTraining',
    '5' => 'eShowtime',
  },
  lcsSetupVpnProposalsIpsecEntryIpcompAlg => {
    '0' => 'eNone',
    '2' => 'eDeflate',
    '3' => 'eLzs',
  },
  lcsSetupInterfacesWlanClientModesEntryScanBands => {
    '1' => 'e24ghz',
    '2' => 'e5ghz',
    '3' => 'e24ghz5ghz',
  },
  lcsSetupIpRouterFirewallStealthMode => {
    '0' => 'eOff',
    '1' => 'eAllways',
    '2' => 'eWan',
    '3' => 'eDefaultRoute',
  },
  lcsStatusWlanMngmtApConfNetwprofilsEntryWpaVersion => {
    '0' => 'eWpa12',
    '1' => 'eWpa1',
    '2' => 'eWpa2',
  },
  lcsStatusWlanInterpointsAccesspointListEntry40mhzMode => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupVpnVpnPeersEntryIkeCfg => {
    '0' => 'eOff',
    '1' => 'eClient',
    '2' => 'eServer',
  },
  lcsStatusIpRouterRipWanSitesEntryPoisonedReverse => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanScanResultsEntryShortGuardInterval => {
    '0' => 'eNo',
    '1' => 'e20mhz',
    '2' => 'e40mhz',
    '3' => 'e2040mhz',
  },
  lcsStatusIpRouterVrrpInternalServices => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupInterfacesWlanOperationalEntryOperationMode => {
    '0' => 'eStation',
    '1' => 'eAccessPoint',
    '4' => 'eManagedAp',
  },
  lcsStatusAccountingCurrentUserEntryConnType => {
    '0' => 'eUnknown',
    '1' => 'eDialUp',
    '2' => 'eLeasedLine',
    '4' => 'eDslLine',
    '7' => 'eVpnConn',
    '8' => 'ePptpConn',
  },
  lcsStatusWlanMngmtApConfNetwprofilsEntryMaxHtMcs => {
    '0' => 'eAuto',
    '1' => 'eMcs08',
    '2' => 'eMcs19',
    '3' => 'eMcs210',
    '4' => 'eMcs311',
    '5' => 'eMcs412',
    '6' => 'eMcs513',
    '7' => 'eMcs614',
    '8' => 'eMcs715',
  },
  lcsStatusVpnConnectionsEntryNatDetection => {
    '0' => 'eNoNat',
    '1' => 'eNatLocal',
    '2' => 'eNatRemote',
    '3' => 'eNatBoth',
  },
  lcsSetupRadiusBackupQueryStrategy => {
    '0' => 'eBlock',
    '1' => 'eCyclic',
  },
  lcsStatusWlanMngmtApConfNetwprofilsEntryConnectSsidTo => {
    '0' => 'eLan',
    '1' => 'eWlcTunnel1',
    '2' => 'eWlcTunnel2',
    '3' => 'eWlcTunnel3',
    '4' => 'eWlcTunnel4',
    '5' => 'eWlcTunnel5',
    '6' => 'eWlcTunnel6',
    '7' => 'eWlcTunnel7',
    '8' => 'eWlcTunnel8',
    '9' => 'eWlcTunnel9',
    '10' => 'eWlcTunnel10',
    '11' => 'eWlcTunnel11',
    '12' => 'eWlcTunnel12',
    '13' => 'eWlcTunnel13',
    '14' => 'eWlcTunnel14',
    '15' => 'eWlcTunnel15',
    '16' => 'eWlcTunnel16',
    '17' => 'eWlcTunnel17',
    '18' => 'eWlcTunnel18',
    '19' => 'eWlcTunnel19',
    '20' => 'eWlcTunnel20',
    '21' => 'eWlcTunnel21',
    '22' => 'eWlcTunnel22',
    '23' => 'eWlcTunnel23',
    '24' => 'eWlcTunnel24',
    '25' => 'eWlcTunnel25',
    '26' => 'eWlcTunnel26',
    '27' => 'eWlcTunnel27',
    '28' => 'eWlcTunnel28',
    '29' => 'eWlcTunnel29',
    '30' => 'eWlcTunnel30',
    '31' => 'eWlcTunnel31',
    '32' => 'eWlcTunnel32',
  },
  lcsSetupInterfacesLanInterfacesEntryConnector => {
    '0' => 'eAuto',
    '1' => 'e10bT',
    '2' => 'eFd10bTx',
    '3' => 'e100bTx',
    '4' => 'eFd100bTx',
    '5' => 'eAuto10',
    '6' => 'eFd1000bTx',
    '7' => 'eAuto100',
    '255' => 'ePowerDown',
  },
  lcsStatusWlanMngmtApConfApsEntryAntennaMask => {
    '0' => 'eAuto',
    '1' => 'eAntenna1',
    '3' => 'eAntenna1Plus2',
    '5' => 'eAntenna1Plus3',
    '7' => 'eAntenna1Plus2Plus3',
  },
  lcsStatusIsdnSignalingManagementDInfoEntryChannel => {
    '257' => 'eS01',
    '513' => 'eModem',
    '2049' => 'eDsl1',
    '2050' => 'eDsl2',
    '2051' => 'eDsl3',
    '2052' => 'eDsl4',
    '8193' => 'eAdsl',
    '16385' => 'eVdsl',
  },
  lcsSetupVpnNatTOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupDhcpAdditionalOptionsEntryOptionType => {
    '0' => 'eString',
    '1' => 'eInteger32',
    '2' => 'eIpAddress',
    '3' => 'eInteger16',
    '4' => 'eInteger8',
  },
  lcsSetupDhcpDhcpTableEntryLanIfc => {
    '256' => 'eLan1',
    '257' => 'eLan2',
    '258' => 'eLan3',
    '259' => 'eLan4',
    '260' => 'eLan5',
    '512' => 'eWlan1',
    '513' => 'eWlan2',
    '768' => 'eP2p11',
    '769' => 'eP2p12',
    '770' => 'eP2p13',
    '771' => 'eP2p14',
    '772' => 'eP2p15',
    '773' => 'eP2p16',
    '774' => 'eP2p21',
    '775' => 'eP2p22',
    '776' => 'eP2p23',
    '777' => 'eP2p24',
    '778' => 'eP2p25',
    '779' => 'eP2p26',
    '799' => 'eP2p17',
    '800' => 'eP2p18',
    '801' => 'eP2p19',
    '802' => 'eP2p110',
    '803' => 'eP2p111',
    '804' => 'eP2p112',
    '805' => 'eP2p113',
    '806' => 'eP2p114',
    '807' => 'eP2p115',
    '808' => 'eP2p116',
    '831' => 'eP2p27',
    '832' => 'eP2p28',
    '833' => 'eP2p29',
    '834' => 'eP2p210',
    '835' => 'eP2p211',
    '836' => 'eP2p212',
    '837' => 'eP2p213',
    '838' => 'eP2p214',
    '839' => 'eP2p215',
    '840' => 'eP2p216',
    '1024' => 'eWlan12',
    '1025' => 'eWlan13',
    '1026' => 'eWlan14',
    '1027' => 'eWlan15',
    '1028' => 'eWlan16',
    '1029' => 'eWlan17',
    '1030' => 'eWlan18',
    '1031' => 'eWlan22',
    '1032' => 'eWlan23',
    '1033' => 'eWlan24',
    '1034' => 'eWlan25',
    '1035' => 'eWlan26',
    '1036' => 'eWlan27',
    '1037' => 'eWlan28',
    '1536' => 'eBrg1',
    '1537' => 'eBrg2',
    '1538' => 'eBrg3',
    '1539' => 'eBrg4',
    '1540' => 'eBrg5',
    '1541' => 'eBrg6',
    '1542' => 'eBrg7',
    '1543' => 'eBrg8',
    '1792' => 'eWlcTunnel1',
    '1793' => 'eWlcTunnel2',
    '1794' => 'eWlcTunnel3',
    '1795' => 'eWlcTunnel4',
    '1796' => 'eWlcTunnel5',
    '1797' => 'eWlcTunnel6',
    '1798' => 'eWlcTunnel7',
    '1799' => 'eWlcTunnel8',
    '1800' => 'eWlcTunnel9',
    '1801' => 'eWlcTunnel10',
    '1802' => 'eWlcTunnel11',
    '1803' => 'eWlcTunnel12',
    '1804' => 'eWlcTunnel13',
    '1805' => 'eWlcTunnel14',
    '1806' => 'eWlcTunnel15',
    '1807' => 'eWlcTunnel16',
    '1808' => 'eWlcTunnel17',
    '1809' => 'eWlcTunnel18',
    '1810' => 'eWlcTunnel19',
    '1811' => 'eWlcTunnel20',
    '1812' => 'eWlcTunnel21',
    '1813' => 'eWlcTunnel22',
    '1814' => 'eWlcTunnel23',
    '1815' => 'eWlcTunnel24',
    '1816' => 'eWlcTunnel25',
    '1817' => 'eWlcTunnel26',
    '1818' => 'eWlcTunnel27',
    '1819' => 'eWlcTunnel28',
    '1820' => 'eWlcTunnel29',
    '1821' => 'eWlcTunnel30',
    '1822' => 'eWlcTunnel31',
    '1823' => 'eWlcTunnel32',
    '65535' => 'eAny',
  },
  lcsSetupUtmCfProfCatProfEntryArtsMuseumsTheaters => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsStatusWlanMngmtApConfNetwprofilsEntrySendAggregates => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusEthernetPortsPortsEntryConnector => {
    '0' => 'eNone',
    '1' => 'e10bT',
    '2' => 'eFd10bTx',
    '3' => 'e100bTx',
    '4' => 'eFd100bTx',
    '6' => 'eFd1000bTx',
    '33' => 'e10b2',
    '34' => 'e10b5',
    '70' => 'eFd1000bF',
    '255' => 'ePowerDown',
  },
  lcsSetupSnmpIpTrapsEntryVersion => {
    '0' => 'eSnmpv2',
    '1' => 'eSnmpv1',
  },
  lcsStatusChannelEntryApp => {
    '0' => 'eNone',
    '1' => 'eRouter',
    '2' => 'eCapi',
    '3' => 'eAB',
    '255' => 'eTimeModule',
  },
  lcsStatusWlanInterpointsAccesspointListEntryKeyingState => {
    '0' => 'eIdle',
    '1' => 'ePending',
    '2' => 'eDone',
  },
  lcsStatusHardwareInfoSecurityEngine => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupIpRouterUsageDefaultTimetable => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusVdslAdvancedStandard => {
    '0' => 'eOff',
    '2' => 'eT1dot413',
    '3' => 'eGdotLite',
    '4' => 'eGdotDMT',
    '21' => 'eAdsl2',
    '22' => 'eAdsl2plus',
    '31' => 'eAdsl2AnnexM',
    '32' => 'eAdsl2plusAnnexM',
    '33' => 'eAdsl2AnnexI',
    '34' => 'eAdsl2plusAnnexI',
    '35' => 'eAdsl2AnnexJ',
    '36' => 'eAdsl2plusAnnexJ',
    '37' => 'eAdsl2AnnexL',
    '40' => 'eVdsl2',
    '54' => 'eAdsl2Lite',
    '255' => 'eUnknown',
  },
  lcsStatusLanBridgeSpanningTreeProtocolVersion => {
    '0' => 'eClassic',
    '1' => 'eRapid',
  },
  lcsSetupWanLayerEntryEncaps => {
    '0' => 'eEther',
    '1' => 'eLlcMux',
    '3' => 'eLlcEth',
    '4' => 'eVcMux',
    '255' => 'eTrans',
  },
  lcsStatusLanBridgeSpanningTreePortTableEntryState => {
    '0' => 'eDisabled',
    '1' => 'eListening',
    '2' => 'eLearning',
    '3' => 'eForwarding',
    '4' => 'eBlocking',
  },
  lcsSetupUtmCfProfCatProfEntryRecrFacThemPark => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupIpRouterSendIcmpRedirect => {
    '0' => 'eYes',
    '1' => 'eNo',
  },
  lcsStatusUtmCfLogEntryCause => {
    '1' => 'eSpamMail',
    '2' => 'ePhishingMail',
    '3' => 'eUpdate',
    '4' => 'eInfected',
    '5' => 'eBlockedUrl',
    '6' => 'eError',
    '7' => 'eLicenseExpired',
    '8' => 'eLicenseExceeded',
    '9' => 'eOverride',
    '10' => 'eProxyLimit',
  },
  lcsStatusLanBridgeSpanningTreePathCostComputation => {
    '0' => 'eClassic',
    '1' => 'eRapid',
  },
  lcsStatusAdslModemHybrid => {
    '0' => 'eBJ',
    '2' => 'eB',
    '3' => 'eA',
    '256' => 'eUnknown',
  },
  lcsStatusWlanMngmtStationTableEntryWpaVersion => {
    '0' => 'eNone',
    '1' => 'eWpa1',
    '2' => 'eWpa2',
  },
  lcsStatusTemperatureMonitorExtremesEntryType => {
    '1' => 'eMinimum1',
    '2' => 'eMaximum1',
    '257' => 'eMinimum2',
    '258' => 'eMaximum2',
    '513' => 'eMinimum3',
    '514' => 'eMaximum3',
    '769' => 'eMinimum4',
    '770' => 'eMaximum4',
    '1025' => 'eMinimum5',
    '1026' => 'eMaximum5',
    '1281' => 'eMinimum6',
    '1282' => 'eMaximum6',
    '1537' => 'eMinimum7',
    '1538' => 'eMaximum7',
    '1793' => 'eMinimum8',
    '1794' => 'eMaximum8',
  },
  lcsStatusWlanCompetingNetworksEntryShortGuardInterval => {
    '0' => 'eNo',
    '1' => 'e20mhz',
    '2' => 'e40mhz',
    '3' => 'e2040mhz',
  },
  lcsStatusPppRxOptionsLcpEntryPfc => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanScanResultsEntryCompression => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWtpMngmtNetwprofilsEntryWpa1SessionKeytypes => {
    '0' => 'eTkipAes',
    '1' => 'eAes',
    '2' => 'eTkip',
  },
  lcsStatusWlanMngmtApConfNetwprofilsEntryWpa1SessionKeytypes => {
    '0' => 'eTkipAes',
    '1' => 'eAes',
    '2' => 'eTkip',
  },
  lcsSetupCertsOcspClientCaProfileTableEntryCertEvaluationMode => {
    '0' => 'eStrict',
    '1' => 'eLoose',
  },
  lcsStatusWlanWlanParameterEntryTemperatureRange => {
    '0' => 'eUnknown',
    '1' => 'eCommercial0Plus40DegreeC',
    '2' => 'eIndustrial30Plus70DegreeC',
  },
  lcsStatusWlanStationTableEntryLastEvent => {
    '0' => 'eNone',
    '1' => 'eAuthSuccess',
    '2' => 'eDeauth',
    '3' => 'eAssocSuccess',
    '4' => 'eReassocSuccess',
    '5' => 'eDisassoc',
    '6' => 'eRadiusSuccess',
    '7' => 'eAuthReject',
    '8' => 'eAssocReject',
    '9' => 'eKeyhandshakeSuccess',
    '10' => 'eKeyhandshakeTimeout',
    '11' => 'eKeyhandshakeFailure',
    '12' => 'eRadiusReject',
    '13' => 'eSupervision',
    '14' => 'e8021xSuccess',
    '15' => 'e8021xFailure',
    '16' => 'eIdleTimeout',
    '17' => 'eAdminDeassoc',
    '18' => 'eRoamed',
  },
  lcsStatusWtpMngmtApConnectionsEntryDscpForDataPackets => {
    '0' => 'eBestEffort',
    '40' => 'eAssuredForwarding11',
    '48' => 'eAssuredForwarding12',
    '56' => 'eAssuredForwarding13',
    '72' => 'eAssuredForwarding21',
    '80' => 'eAssuredForwarding22',
    '88' => 'eAssuredForwarding23',
    '104' => 'eAssuredForwarding31',
    '112' => 'eAssuredForwarding32',
    '120' => 'eAssuredForwarding33',
    '136' => 'eAssuredForwarding41',
    '144' => 'eAssuredForwarding42',
    '152' => 'eAssuredForwarding43',
    '184' => 'eExpeditedForwarding',
  },
  lcsSetupWlanInterSsidTraffic => {
    '0' => 'eLocallyOff',
    '1' => 'eYes',
    '2' => 'eGloballyOff',
  },
  lcsSetupVpnCertificatesAndKeysIkeKeysEntryLocalIdType => {
    '0' => 'eNoIdentity',
    '1' => 'eIpAddress',
    '2' => 'eDomainName',
    '3' => 'eEmailAddress',
    '9' => 'eDistinguishedName',
    '11' => 'eKeyId',
  },
  lcsStatusWlanWlanParameterEntryPhyType => {
    '0' => 'eProprietary',
    '1' => 'eFhss',
    '2' => 'eDsss',
    '3' => 'eInfrared',
    '4' => 'eOfdm',
    '5' => 'eHrDsss',
    '6' => 'eErp',
    '7' => 'eHt',
    '254' => 'ePbcc',
  },
  lcsSetupInterfacesVdslEntryIfc => {
    '257' => 'eS01',
    '513' => 'eModem',
    '2049' => 'eDsl1',
    '2050' => 'eDsl2',
    '2051' => 'eDsl3',
    '2052' => 'eDsl4',
    '16385' => 'eVdsl',
  },
  lcsStatusLanInterfacesEntryLinkActive => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupCertsScepCaRaAutoapprove => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupInterfacesWlanNetworkEntryClBrgSupport => {
    '0' => 'eNo',
    '1' => 'eYes',
    '2' => 'eExclusive',
  },
  lcsSetupWlanMngmtApConfRadioprofilsEntryActVlanModOfMngdAps => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupInterfacesMobileSyslogEnabled => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusPublicSpotRadiusMacCheckCacheEntryState => {
    '1' => 'ePending',
    '2' => 'eReject',
    '3' => 'eAccept',
  },
  lcsStatusWlanStationTableEntryState => {
    '0' => 'eNone',
    '1' => 'eAdhoc',
    '2' => 'eAuthenticated',
    '3' => 'eConnected',
    '4' => 'eMacCheck',
    '8' => 'eKeyHandshake',
    '9' => 'eAssociated',
    '10' => 'e1xNegotiation',
  },
  lcsStatusWlanMngmtCentralFwMngmtAvailFwEntryLoaded => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanMngmtApConfRadioprofilsEntry24ghzMode => {
    '0' => 'e11bgMixed',
    '1' => 'e11gOnly',
    '2' => 'e11bOnly',
    '3' => 'e108mbps',
    '4' => 'e11bgnMixed',
    '5' => 'e11gnMixed',
    '6' => 'eGreenfield',
  },
  lcsStatusComPortsDevEntryBus => {
    '1' => 'eOutband',
    '2' => 'eCardbus',
    '3' => 'eUsb',
    '4' => 'eVirtual',
  },
  lcsStatusEthernetPortsPortsEntryPowerSaving => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWtpMngmtApConnectionsEntryState => {
    '0' => 'eUnknown',
    '5' => 'eIdle',
    '10' => 'eDiscovery',
    '15' => 'eDtlsSetup',
    '20' => 'eJoin',
    '25' => 'eConfigure',
    '30' => 'eImageData',
    '35' => 'eReset',
    '40' => 'eDtlsTeardown',
    '45' => 'eSulking',
    '100' => 'eRun',
  },
  lcsSetupComPortsCOMPortServNetwSetEntryAssumeBinaryMode => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusVdslModemHybrid => {
    '0' => 'eBJ',
    '2' => 'eB',
    '3' => 'eA',
    '256' => 'eUnknown',
  },
  lcsStatusComPortsComPortServerNetworkStatusEntryDeviceType => {
    '1' => 'eOutband',
    '33' => 'eBelkinF5u103',
    '34' => 'eProlific2303',
    '35' => 'eFtdi8u232am',
    '36' => 'eGpsNmea',
    '45' => 'eQualcomDm',
  },
  lcsStatusWlanMngmtApStatusNextdoorApEntryValid => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupLanBridgeIgmpSnoopingOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanMngmtApConfNetwprofilsEntryMinTxRate => {
    '0' => 'eAuto',
    '1' => 'e1M',
    '2' => 'e2M',
    '3' => 'e5M5',
    '4' => 'e11M',
    '5' => 'e6M',
    '6' => 'e9M',
    '7' => 'e12M',
    '8' => 'e18M',
    '9' => 'e24M',
    '10' => 'e36M',
    '11' => 'e48M',
    '12' => 'e54M',
    '13' => 'eT72M',
    '14' => 'eT96M',
    '15' => 'eT108M',
  },
  lcsSetupRadiusServerAutoCleanupUserTable => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusEthernetPortsCableTestResultsEntryIfc => {
    '0' => 'eUnknown',
    '1' => 'eUplink',
    '2' => 'eEth1',
    '3' => 'eEth2',
    '4' => 'eEth3',
    '5' => 'eEth4',
    '16' => 'eWan',
  },
  lcsSetupWlanMngmtApConfApsEntryManageFirmware => {
    '0' => 'eYes',
    '1' => 'eNo',
  },
  lcsSetupWlanRadiusAccessCheckProvideServerDatabase => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWtpMngmtApBridgeInterfacesEntryBridgeInterface => {
    '0' => 'eLan',
    '1' => 'eWlcTunnel1',
    '2' => 'eWlcTunnel2',
    '3' => 'eWlcTunnel3',
    '4' => 'eWlcTunnel4',
    '5' => 'eWlcTunnel5',
    '6' => 'eWlcTunnel6',
    '7' => 'eWlcTunnel7',
    '8' => 'eWlcTunnel8',
    '9' => 'eWlcTunnel9',
    '10' => 'eWlcTunnel10',
    '11' => 'eWlcTunnel11',
    '12' => 'eWlcTunnel12',
    '13' => 'eWlcTunnel13',
    '14' => 'eWlcTunnel14',
    '15' => 'eWlcTunnel15',
    '16' => 'eWlcTunnel16',
    '17' => 'eWlcTunnel17',
    '18' => 'eWlcTunnel18',
    '19' => 'eWlcTunnel19',
    '20' => 'eWlcTunnel20',
    '21' => 'eWlcTunnel21',
    '22' => 'eWlcTunnel22',
    '23' => 'eWlcTunnel23',
    '24' => 'eWlcTunnel24',
    '25' => 'eWlcTunnel25',
    '26' => 'eWlcTunnel26',
    '27' => 'eWlcTunnel27',
    '28' => 'eWlcTunnel28',
    '29' => 'eWlcTunnel29',
    '30' => 'eWlcTunnel30',
    '31' => 'eWlcTunnel31',
    '32' => 'eWlcTunnel32',
  },
  lcsStatusIpRouterRipWildcardSitesEntryMasquerade => {
    '0' => 'eAuto',
    '1' => 'eOn',
    '2' => 'eIntranet',
  },
  lcsSetupTcpIpAliveTestBootType => {
    '0' => 'eWarmBoot',
    '1' => 'eColdBoot',
  },
  lcsStatusWtpMngmtNetwprofilsEntryMacFilter => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupTacacsPlusEncryption => {
    '0' => 'eDeactivated',
    '1' => 'eActivated',
  },
  lcsStatusWlanRadiosEntryRadioBand => {
    '0' => 'eUnknown',
    '1' => 'e24ghz',
    '2' => 'e5ghz',
    '3' => 'e24ghz5ghz',
  },
  lcsSetupConfigAdminGender => {
    '0' => 'eUnknown',
    '1' => 'eMale',
    '2' => 'eFemale',
    '3' => 'eGeek',
  },
  lcsStatusWlanMngmtScanResultsEntryRadioBand => {
    '0' => 'e24ghz5ghz',
    '1' => 'e24ghz',
    '2' => 'e5ghz',
  },
  lcsStatusWlanMngmtApConfNetwprofilsEntryMaxSpatialStreams => {
    '0' => 'eAuto',
    '1' => 'eOne',
    '2' => 'eTwo',
  },
  lcsStatusWtpMngmtNetwprofilsEntryMinTxRate => {
    '0' => 'eAuto',
    '1' => 'e1M',
    '2' => 'e2M',
    '3' => 'e5M5',
    '4' => 'e11M',
    '5' => 'e6M',
    '6' => 'e9M',
    '7' => 'e12M',
    '8' => 'e18M',
    '9' => 'e24M',
    '10' => 'e36M',
    '11' => 'e48M',
    '12' => 'e54M',
    '13' => 'eT72M',
    '14' => 'eT96M',
    '15' => 'eT108M',
  },
  lcsSetupVpnVpnPeersEntryXauth => {
    '0' => 'eOff',
    '1' => 'eClient',
    '2' => 'eServer',
  },
  lcsStatusWlanRadiosEntryExcEirp => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusModemMobileMobileCountryCode => {
    '0' => 'eUnknown',
    '262' => 'eDe',
  },
  lcsSetupInterfacesWlanNetworkAlarmLimitsEntryIfc => {
    '1' => 'eWlan1',
    '2' => 'eWlan2',
    '16' => 'eWlan12',
    '17' => 'eWlan13',
    '18' => 'eWlan14',
    '19' => 'eWlan15',
    '20' => 'eWlan16',
    '21' => 'eWlan17',
    '22' => 'eWlan18',
    '32' => 'eWlan22',
    '33' => 'eWlan23',
    '34' => 'eWlan24',
    '35' => 'eWlan25',
    '36' => 'eWlan26',
    '37' => 'eWlan27',
    '38' => 'eWlan28',
  },
  lcsSetupPppoeServerOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupVpnVpnPeersEntrySslEncaps => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanMngmtApConfRadioprofilsEntryCountry => {
    '0' => 'eDefault',
    '8' => 'eAlbania',
    '32' => 'eArgentina',
    '36' => 'eAustralia',
    '40' => 'eAustria',
    '48' => 'eBahrain',
    '50' => 'eBangladesh',
    '56' => 'eBelgium',
    '70' => 'eBosniaHerzegovina',
    '76' => 'eBrazil',
    '96' => 'eBruneiDarussalam',
    '100' => 'eBulgaria',
    '112' => 'eBelarus',
    '124' => 'eCanada',
    '152' => 'eChile',
    '156' => 'eChina',
    '158' => 'eTaiwan',
    '170' => 'eColombia',
    '188' => 'eCostaRica',
    '191' => 'eCroatia',
    '196' => 'eCyprus',
    '203' => 'eCzech',
    '208' => 'eDenmark',
    '218' => 'eEcuador',
    '233' => 'eEstonia',
    '246' => 'eFinland',
    '250' => 'eFrance',
    '276' => 'eGermany',
    '288' => 'eGhana',
    '300' => 'eGreece',
    '320' => 'eGuatemala',
    '340' => 'eHonduras',
    '344' => 'eHongKong',
    '348' => 'eHungary',
    '352' => 'eIceland',
    '356' => 'eIndia',
    '360' => 'eIndonesia',
    '372' => 'eIreland',
    '376' => 'eIsrael',
    '380' => 'eItaly',
    '392' => 'eJapan',
    '400' => 'eJordan',
    '410' => 'eSouthKorea',
    '414' => 'eKuwait',
    '422' => 'eLebanon',
    '428' => 'eLatvia',
    '438' => 'eLiechtenstein',
    '440' => 'eLithuania',
    '442' => 'eLuxembourg',
    '446' => 'eMacau',
    '458' => 'eMalaysia',
    '470' => 'eMalta',
    '484' => 'eMexico',
    '498' => 'eMoldavia',
    '504' => 'eMorocco',
    '512' => 'eOman',
    '528' => 'eNetherlands',
    '554' => 'eNewZealand',
    '558' => 'eNicaragua',
    '578' => 'eNorway',
    '586' => 'ePakistan',
    '591' => 'ePanama',
    '600' => 'eParaguay',
    '604' => 'ePeru',
    '608' => 'ePhilippines',
    '616' => 'ePoland',
    '620' => 'ePortugal',
    '630' => 'ePuertoRico',
    '634' => 'eQatar',
    '642' => 'eRomania',
    '643' => 'eRussia',
    '682' => 'eSaudiArabia',
    '702' => 'eSingapore',
    '703' => 'eSlovak',
    '705' => 'eSlovenia',
    '710' => 'eSouthAfrica',
    '724' => 'eSpain',
    '752' => 'eSweden',
    '756' => 'eSwitzerland',
    '764' => 'eThailand',
    '784' => 'eUnitedArabEmirates',
    '788' => 'eTunisia',
    '792' => 'eTurkey',
    '800' => 'eUganda',
    '804' => 'eUkraine',
    '807' => 'eMacedonia',
    '818' => 'eEgypt',
    '826' => 'eUnitedKingdom',
    '834' => 'eTanzania',
    '840' => 'eUnitedStatesFcc',
    '858' => 'eUruguay',
    '862' => 'eVenezuela',
    '999' => 'eEgalistan',
  },
  lcsFirmwareVersionTableEntryIfc => {
    '1' => 'eIfc',
  },
  lcsStatusIpRouterQosEntryIfc => {
    '257' => 'eCh01',
    '258' => 'eCh02',
    '513' => 'eModem',
    '2049' => 'eDslCh1',
    '2050' => 'eDslCh2',
    '2051' => 'eDslCh3',
    '2052' => 'eDslCh4',
    '2053' => 'eDslCh5',
    '2054' => 'eDslCh6',
    '2055' => 'eDslCh7',
    '2056' => 'eDslCh8',
    '8193' => 'eAdsl1',
    '8194' => 'eAdsl2',
    '8195' => 'eAdsl3',
    '8196' => 'eAdsl4',
    '8197' => 'eAdsl5',
    '8198' => 'eAdsl6',
    '8199' => 'eAdsl7',
    '8200' => 'eAdsl8',
    '16385' => 'eVdsl1',
    '16386' => 'eVdsl2',
    '16387' => 'eVdsl3',
    '16388' => 'eVdsl4',
    '16389' => 'eVdsl5',
    '16390' => 'eVdsl6',
    '16391' => 'eVdsl7',
    '16392' => 'eVdsl8',
  },
  lcsSetupInterfacesWlanIntpntSetEntryKeyHandshakeRole => {
    '0' => 'eDefault',
    '3' => 'eAuto',
  },
  lcsStatusWlanMngmtScanResultsEntryInterface => {
    '0' => 'eWlan1',
    '1' => 'eWlan2',
    '2' => 'eWlan3',
    '3' => 'eWlan4',
  },
  lcsStatusAdslAdvancedLineState => {
    '0' => 'eUnknown',
    '1' => 'eDown',
    '2' => 'eIdle',
    '3' => 'eHandshake',
    '4' => 'eTraining',
    '5' => 'eShowtime',
  },
  lcsStatusVpnIkeEntryIkeAuthMode => {
    '0' => 'eNo',
    '1' => 'ePreShared',
    '2' => 'eDss',
    '3' => 'eRsaSig',
    '4' => 'eRsaEnc',
    '5' => 'eRsaEncRev',
    '6' => 'eElGamalEnc',
    '7' => 'eElGamalEncRev',
    '8' => 'eEcdsaSig',
    '65001' => 'ePreSharedInitXauth',
    '65002' => 'ePreSharedRespXauth',
    '65003' => 'eDssInitXauth',
    '65004' => 'eDssRespXauth',
    '65005' => 'eRsaInitXauth',
    '65006' => 'eRsaRespXauth',
  },
  lcsSetupInterfacesWlanEncryptionEntryWpa1SessionKeytypes => {
    '1' => 'eTkip',
    '2' => 'eAes',
    '3' => 'eTkipAes',
  },
  lcsSetupWlanMngmtNotificationAdvancedEntryNewAp => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupUtmCfProfCatProfEntryPoliticalParties => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupInterfacesWlanTransmissionEntryShortGuardInterval => {
    '0' => 'eAuto',
    '1' => 'eNo',
  },
  lcsSetupUtmCfGlobalSettingsNotificationEntrySyslog => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanMngmtApConfNetwprofilsEntryOperating => {
    '0' => 'eYes',
    '1' => 'eNo',
  },
  lcsStatusWlanMngmtApConfApIntranetErrorsEntryError => {
    '0' => 'eNone',
    '1' => 'eInheritanceError',
    '2' => 'eNoProfile',
    '3' => 'eProfileNotFound',
    '4' => 'eNoMemoory',
    '5' => 'eSsidMissing',
    '6' => 'eNetworkNotFound',
    '7' => 'eApParametersNotFound',
    '8' => 'eApIntranetNotFound',
  },
  lcsStatusUtmCfLastSnapshotEntryCat => {
    '1' => 'ePornographyEroticSex',
    '3' => 'eSwimwearLingerie',
    '4' => 'eShopping',
    '5' => 'eAuctionsClassifiedAds',
    '6' => 'eGovNonProv',
    '8' => 'eCitiesRegionsCountries',
    '9' => 'eEducation',
    '10' => 'ePoliticalParties',
    '11' => 'eReligionSpirituality',
    '13' => 'eIllegalActivities',
    '14' => 'eComputerCrimeWarezHacking',
    '15' => 'ePolHateDiscr',
    '17' => 'eViolenceExtreme',
    '18' => 'eGamblingLottery',
    '19' => 'eComputerGames',
    '20' => 'eToys',
    '21' => 'eCinTvSocial',
    '22' => 'eRecrFacThemPark',
    '23' => 'eArtsMuseumsTheaters',
    '24' => 'eMusicRadioBroadcast',
    '25' => 'eLiteratureBooks',
    '26' => 'eHumorCartoons',
    '27' => 'eNewsMagazines',
    '28' => 'eWebmailUnifiedMessaging',
    '29' => 'eChat',
    '30' => 'eBlogsBulletinBoards',
    '31' => 'eMobileTelephony',
    '32' => 'eDigitalPostcards',
    '33' => 'eSearchWebPortal',
    '34' => 'eSoftwareHardware',
    '35' => 'eCommunicationServices',
    '36' => 'eItSecurityItInformation',
    '37' => 'eWebSiteTranslation',
    '38' => 'eAnonymousProxies',
    '39' => 'eIllegalDrugs',
    '40' => 'eAlcoholTobacco',
    '43' => 'eDatingNetworks',
    '44' => 'eRestEnter',
    '45' => 'eTravel',
    '46' => 'eFashionCosmeticsJewelry',
    '47' => 'eSports',
    '48' => 'eArchConstFurn',
    '49' => 'eEnvironmentClimatePets',
    '50' => 'ePersonalWebSites',
    '51' => 'eJobSearch',
    '52' => 'eFinanceInvestment',
    '54' => 'eBanking',
    '55' => 'eVehicles',
    '56' => 'eWeaponsMilitary',
    '57' => 'eMedicineHealthSelfHelp',
    '58' => 'eAbortion',
    '60' => 'eSpamUrls',
    '61' => 'eMalware',
    '62' => 'ePhishingUrls',
    '63' => 'eInstantMessaging',
    '67' => 'eGeneralBusiness',
    '74' => 'eBannerAdvertisements',
    '80' => 'eWebStorage',
  },
  lcsSetupInterfacesWlanRadioSettingsEntryApDensity => {
    '0' => 'eOff',
    '1' => 'eLow',
    '2' => 'eMedium',
    '3' => 'eHigh',
    '4' => 'eMinicell',
    '5' => 'eMicrocell',
  },
  lcsSetupInterfacesEthernetPortsEntryPrivateMode => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusLanBridgeIgmpSnoopingOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWtpMngmtApConnectionsEntryResult => {
    '0' => 'eSuccess',
    '1' => 'eFailure',
    '2' => 'eSuccessNat',
    '3' => 'eJoinFailUnspecified',
    '4' => 'eJoinFailResourceDepletion',
    '5' => 'eJoinFailUnknwnSrc',
    '6' => 'eJoinFailIncorrectData',
    '7' => 'eJoinFailSessionIdInUse',
    '8' => 'eJoinFailWtpNotSupported',
    '9' => 'eJoinFailBindingNotSupp',
    '10' => 'eResetFailUnableToReset',
    '11' => 'eResetFailFirmwWriteErr',
    '12' => 'eConfigurationErrorServProvAnyhow',
    '13' => 'eConfigurationErrorServNotProv',
    '14' => 'eImageDataErrorChecksum',
    '15' => 'eImageDataErrorLength',
    '16' => 'eImageDataErrorOther',
    '17' => 'eImageDataErrorAlrPresent',
    '18' => 'eMessageUnexpectedInvalid',
    '19' => 'eMessageUnexpectedUnrecognized',
    '20' => 'eFailMissingMandMsgElem',
    '21' => 'eFailUnrecognizedMsgElem',
    '300' => 'eUnsupportedLoaderVersion',
    '301' => 'eUnsupportedFirmwareVersion',
    '303' => 'eJoinFailAlreadyConnected',
  },
  lcsStatusTcpIpNetworkListEntrySrcCheck => {
    '0' => 'eLoose',
    '1' => 'eStrict',
  },
  lcsStatusIpRouterLoadBalancerOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusLanCableTestResultsEntryMdi0Status => {
    '0' => 'eUnknown',
    '1' => 'eOk',
    '2' => 'eOpen',
    '3' => 'eShort',
    '4' => 'eImpedanceFault',
    '5' => 'eFail',
    '6' => 'eBusy',
  },
  lcsSetupUtmCfProfCatProfEntryAbortion => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupTcpIpNetworkListEntryInterface => {
    '256' => 'eLan1',
    '257' => 'eLan2',
    '258' => 'eLan3',
    '259' => 'eLan4',
    '260' => 'eLan5',
    '512' => 'eWlan1',
    '513' => 'eWlan2',
    '768' => 'eP2p11',
    '769' => 'eP2p12',
    '770' => 'eP2p13',
    '771' => 'eP2p14',
    '772' => 'eP2p15',
    '773' => 'eP2p16',
    '774' => 'eP2p21',
    '775' => 'eP2p22',
    '776' => 'eP2p23',
    '777' => 'eP2p24',
    '778' => 'eP2p25',
    '779' => 'eP2p26',
    '799' => 'eP2p17',
    '800' => 'eP2p18',
    '801' => 'eP2p19',
    '802' => 'eP2p110',
    '803' => 'eP2p111',
    '804' => 'eP2p112',
    '805' => 'eP2p113',
    '806' => 'eP2p114',
    '807' => 'eP2p115',
    '808' => 'eP2p116',
    '831' => 'eP2p27',
    '832' => 'eP2p28',
    '833' => 'eP2p29',
    '834' => 'eP2p210',
    '835' => 'eP2p211',
    '836' => 'eP2p212',
    '837' => 'eP2p213',
    '838' => 'eP2p214',
    '839' => 'eP2p215',
    '840' => 'eP2p216',
    '1024' => 'eWlan12',
    '1025' => 'eWlan13',
    '1026' => 'eWlan14',
    '1027' => 'eWlan15',
    '1028' => 'eWlan16',
    '1029' => 'eWlan17',
    '1030' => 'eWlan18',
    '1031' => 'eWlan22',
    '1032' => 'eWlan23',
    '1033' => 'eWlan24',
    '1034' => 'eWlan25',
    '1035' => 'eWlan26',
    '1036' => 'eWlan27',
    '1037' => 'eWlan28',
    '1536' => 'eBrg1',
    '1537' => 'eBrg2',
    '1538' => 'eBrg3',
    '1539' => 'eBrg4',
    '1540' => 'eBrg5',
    '1541' => 'eBrg6',
    '1542' => 'eBrg7',
    '1543' => 'eBrg8',
    '1792' => 'eWlcTunnel1',
    '1793' => 'eWlcTunnel2',
    '1794' => 'eWlcTunnel3',
    '1795' => 'eWlcTunnel4',
    '1796' => 'eWlcTunnel5',
    '1797' => 'eWlcTunnel6',
    '1798' => 'eWlcTunnel7',
    '1799' => 'eWlcTunnel8',
    '1800' => 'eWlcTunnel9',
    '1801' => 'eWlcTunnel10',
    '1802' => 'eWlcTunnel11',
    '1803' => 'eWlcTunnel12',
    '1804' => 'eWlcTunnel13',
    '1805' => 'eWlcTunnel14',
    '1806' => 'eWlcTunnel15',
    '1807' => 'eWlcTunnel16',
    '1808' => 'eWlcTunnel17',
    '1809' => 'eWlcTunnel18',
    '1810' => 'eWlcTunnel19',
    '1811' => 'eWlcTunnel20',
    '1812' => 'eWlcTunnel21',
    '1813' => 'eWlcTunnel22',
    '1814' => 'eWlcTunnel23',
    '1815' => 'eWlcTunnel24',
    '1816' => 'eWlcTunnel25',
    '1817' => 'eWlcTunnel26',
    '1818' => 'eWlcTunnel27',
    '1819' => 'eWlcTunnel28',
    '1820' => 'eWlcTunnel29',
    '1821' => 'eWlcTunnel30',
    '1822' => 'eWlcTunnel31',
    '1823' => 'eWlcTunnel32',
    '65535' => 'eAny',
  },
  lcsStatusIpRouterRipWildcardSitesEntryRipAccept => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupConfigUpdateClientOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsFirmwareModeFirmsafe => {
    '0' => 'eImmediate',
    '1' => 'eLogin',
    '2' => 'eManual',
  },
  lcsSetupHttpRolloutWizardUseExtraChecks => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWtpMngmtRadioprofilsEntryReportSeenClients => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanCompetingNetworksEntryInterface => {
    '0' => 'eWlan1',
    '1' => 'eWlan2',
    '2' => 'eWlan3',
    '3' => 'eWlan4',
  },
  lcsSetupConfigAccessTableEntryIfc => {
    '1' => 'eLan',
    '2' => 'eWan',
    '3' => 'eWlan',
  },
  lcsSetupConfigAccessTableEntryTelnet => {
    '0' => 'eNo',
    '1' => 'eYes',
    '4' => 'eRead',
    '16' => 'eVpn',
  },
  lcsStatusWlanScanResultsEntryRate => {
    '0' => 'eUnknown',
    '1' => 'e1M',
    '2' => 'e2M',
    '3' => 'e5M',
    '4' => 'e5M5',
    '5' => 'e8M',
    '6' => 'e11M',
    '12' => 'e6M',
    '13' => 'e9M',
    '14' => 'e12M',
    '15' => 'e18M',
    '16' => 'e24M',
    '17' => 'e36M',
    '18' => 'e48M',
    '19' => 'e54M',
    '20' => 'eT12M',
    '21' => 'eT18M',
    '22' => 'eT24M',
    '23' => 'eT36M',
    '24' => 'eT48M',
    '25' => 'eT72M',
    '26' => 'eT96M',
    '27' => 'eT108M',
    '28' => 'eHT1S6M5',
    '29' => 'eHT1S13M',
    '30' => 'eHT1S19M5',
    '31' => 'eHT1S26M',
    '32' => 'eHT1S39M',
    '33' => 'eHT1S52M',
    '34' => 'eHT1S58M5',
    '35' => 'eHT1S65M',
    '36' => 'eHT2S13M',
    '37' => 'eHT2S26M',
    '38' => 'eHT2S39M',
    '39' => 'eHT2S52M',
    '40' => 'eHT2S78M',
    '41' => 'eHT2S104M',
    '42' => 'eHT2S117M',
    '43' => 'eHT2S130M',
    '44' => 'eHT3S19M5',
    '45' => 'eHT3S39M',
    '46' => 'eHT3S58M5',
    '47' => 'eHT3S78M',
    '48' => 'eHT3S117M',
    '49' => 'eHT3S156M',
    '50' => 'eHT3S175M5',
    '51' => 'eHT3S195M',
    '60' => 'eHTDUP6M',
  },
  lcsStatusLanInterfacesEntryClockRole => {
    '0' => 'eNone',
    '1' => 'eMaster',
    '2' => 'eSlave',
    '3' => 'eFault',
  },
  lcsStatusWtpMngmtApConnectionsEntryPriority => {
    '0' => 'eUnspec',
    '1' => 'ePrimary',
    '2' => 'eSecondary',
  },
  lcsStatusWlanMngmtApConfNetwprofilsEntryRadioBand => {
    '0' => 'e24ghz5ghz',
    '1' => 'e24ghz',
    '2' => 'e5ghz',
  },
  lcsSetupTcpIpNetworkListEntrySrcCheck => {
    '0' => 'eLoose',
    '1' => 'eStrict',
  },
  lcsSetupInterfacesMobileProfilesEntrySelect => {
    '0' => 'eAuto',
    '1' => 'eManual',
  },
  lcsSetupLanBridgeIgmpSnoopingUnregisteredDataPacketHandling => {
    '0' => 'eRouterPortsOnly',
    '1' => 'eFlood',
    '2' => 'eDiscard',
  },
  lcsStatusTcpIpNetbiosNetworksEntryInterface => {
    '256' => 'eLan1',
    '257' => 'eLan2',
    '258' => 'eLan3',
    '259' => 'eLan4',
    '260' => 'eLan5',
    '512' => 'eWlan1',
    '513' => 'eWlan2',
    '768' => 'eP2p11',
    '769' => 'eP2p12',
    '770' => 'eP2p13',
    '771' => 'eP2p14',
    '772' => 'eP2p15',
    '773' => 'eP2p16',
    '774' => 'eP2p21',
    '775' => 'eP2p22',
    '776' => 'eP2p23',
    '777' => 'eP2p24',
    '778' => 'eP2p25',
    '779' => 'eP2p26',
    '799' => 'eP2p17',
    '800' => 'eP2p18',
    '801' => 'eP2p19',
    '802' => 'eP2p110',
    '803' => 'eP2p111',
    '804' => 'eP2p112',
    '805' => 'eP2p113',
    '806' => 'eP2p114',
    '807' => 'eP2p115',
    '808' => 'eP2p116',
    '831' => 'eP2p27',
    '832' => 'eP2p28',
    '833' => 'eP2p29',
    '834' => 'eP2p210',
    '835' => 'eP2p211',
    '836' => 'eP2p212',
    '837' => 'eP2p213',
    '838' => 'eP2p214',
    '839' => 'eP2p215',
    '840' => 'eP2p216',
    '1024' => 'eWlan12',
    '1025' => 'eWlan13',
    '1026' => 'eWlan14',
    '1027' => 'eWlan15',
    '1028' => 'eWlan16',
    '1029' => 'eWlan17',
    '1030' => 'eWlan18',
    '1031' => 'eWlan22',
    '1032' => 'eWlan23',
    '1033' => 'eWlan24',
    '1034' => 'eWlan25',
    '1035' => 'eWlan26',
    '1036' => 'eWlan27',
    '1037' => 'eWlan28',
    '1536' => 'eBrg1',
    '1537' => 'eBrg2',
    '1538' => 'eBrg3',
    '1539' => 'eBrg4',
    '1540' => 'eBrg5',
    '1541' => 'eBrg6',
    '1542' => 'eBrg7',
    '1543' => 'eBrg8',
    '1792' => 'eWlcTunnel1',
    '1793' => 'eWlcTunnel2',
    '1794' => 'eWlcTunnel3',
    '1795' => 'eWlcTunnel4',
    '1796' => 'eWlcTunnel5',
    '1797' => 'eWlcTunnel6',
    '1798' => 'eWlcTunnel7',
    '1799' => 'eWlcTunnel8',
    '1800' => 'eWlcTunnel9',
    '1801' => 'eWlcTunnel10',
    '1802' => 'eWlcTunnel11',
    '1803' => 'eWlcTunnel12',
    '1804' => 'eWlcTunnel13',
    '1805' => 'eWlcTunnel14',
    '1806' => 'eWlcTunnel15',
    '1807' => 'eWlcTunnel16',
    '1808' => 'eWlcTunnel17',
    '1809' => 'eWlcTunnel18',
    '1810' => 'eWlcTunnel19',
    '1811' => 'eWlcTunnel20',
    '1812' => 'eWlcTunnel21',
    '1813' => 'eWlcTunnel22',
    '1814' => 'eWlcTunnel23',
    '1815' => 'eWlcTunnel24',
    '1816' => 'eWlcTunnel25',
    '1817' => 'eWlcTunnel26',
    '1818' => 'eWlcTunnel27',
    '1819' => 'eWlcTunnel28',
    '1820' => 'eWlcTunnel29',
    '1821' => 'eWlcTunnel30',
    '1822' => 'eWlcTunnel31',
    '1823' => 'eWlcTunnel32',
    '65535' => 'eAny',
  },
  lcsStatusAdslConnectionHistoryEntryReason => {
    '1' => 'eModemReboot',
    '2' => 'eRetrain',
    '4' => 'eLineError',
    '5' => 'eProtocol',
    '13' => 'eVcParameters',
  },
  lcsStatusWlanScanResultsEntry108mbpsMode => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWtpMngmtNetwprofilsEntryConnectSsidTo => {
    '0' => 'eLan',
    '1' => 'eWlcTunnel1',
    '2' => 'eWlcTunnel2',
    '3' => 'eWlcTunnel3',
    '4' => 'eWlcTunnel4',
    '5' => 'eWlcTunnel5',
    '6' => 'eWlcTunnel6',
    '7' => 'eWlcTunnel7',
    '8' => 'eWlcTunnel8',
    '9' => 'eWlcTunnel9',
    '10' => 'eWlcTunnel10',
    '11' => 'eWlcTunnel11',
    '12' => 'eWlcTunnel12',
    '13' => 'eWlcTunnel13',
    '14' => 'eWlcTunnel14',
    '15' => 'eWlcTunnel15',
    '16' => 'eWlcTunnel16',
    '17' => 'eWlcTunnel17',
    '18' => 'eWlcTunnel18',
    '19' => 'eWlcTunnel19',
    '20' => 'eWlcTunnel20',
    '21' => 'eWlcTunnel21',
    '22' => 'eWlcTunnel22',
    '23' => 'eWlcTunnel23',
    '24' => 'eWlcTunnel24',
    '25' => 'eWlcTunnel25',
    '26' => 'eWlcTunnel26',
    '27' => 'eWlcTunnel27',
    '28' => 'eWlcTunnel28',
    '29' => 'eWlcTunnel29',
    '30' => 'eWlcTunnel30',
    '31' => 'eWlcTunnel31',
    '32' => 'eWlcTunnel32',
  },
  lcsSetupInterfacesVdslEntryProtocol => {
    '0' => 'eOff',
    '8' => 'eAuto',
    '20' => 'eAdsl1',
    '21' => 'eAdsl2',
    '22' => 'eAdsl2plus',
    '40' => 'eVdsl',
    '41' => 'eAdsl',
  },
  lcsSetupWlanRadarPatternThresholdsEntryPatternPps => {
    '200' => 'eEn30189313200pps',
    '300' => 'eEn30189313300pps',
    '330' => 'eEn30189312330pps',
    '500' => 'eEn30189313500pps',
    '700' => 'eEn30189312700pps',
    '750' => 'eEn30189313750pps',
    '800' => 'eEn30189313800pps',
    '1000' => 'eEn301893131000pps',
    '1200' => 'eEn301893131200pps',
    '1500' => 'eEn301893131500pps',
    '1600' => 'eEn301893131600pps',
    '1800' => 'eEn301893121800pps',
    '2000' => 'eEn301893132000pps',
    '2300' => 'eEn301893132300pps',
    '3000' => 'eEn301893133000pps',
    '3500' => 'eEn301893133500pps',
    '4000' => 'eEn301893134000pps',
    '265144' => 'eEn3025023000pps',
    '266644' => 'eEn3025024500pps',
  },
  lcsStatusPublicSpotStationTableEntryState => {
    '0' => 'eUnauthenticated',
    '1' => 'eAuthenticated',
    '2' => 'eDeceased',
  },
  lcsStatusPppTxOptionsLcpEntryAuthentRequest => {
    '0' => 'eNone',
    '4' => 'ePap',
    '8' => 'eChap',
    '16' => 'eMsChap',
    '32' => 'eMsChapv2',
  },
  lcsStatusWlanInterpointsAccesspointListEntryQos => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupPublicSpotModuleDisallowMultipleLogin => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusPppTxOptionsLcpEntryCallBack => {
    '0' => 'eLcpCbAdm',
    '1' => 'eLcpCbUsr',
    '2' => 'eLcpCbNameAuth',
    '3' => 'eLcpCbE164',
    '4' => 'eLcpCbHost',
    '5' => 'eLcpCb',
    '6' => 'eLcpMsCBCP',
    '255' => 'eNone',
  },
  lcsSetupIpRouterFirewallRulesEntryStateful => {
    '0' => 'eYes',
    '1' => 'eNo',
  },
  lcsStatusVdslConnectionHistoryEntryReason => {
    '1' => 'eModemReboot',
    '2' => 'eRetrain',
    '4' => 'eLineError',
    '5' => 'eProtocol',
    '13' => 'eVcParameters',
  },
  lcsSetupComPortsCOMPortServNetwSetEntryTcpKeepalive => {
    '0' => 'eInactive',
    '1' => 'eActive',
    '2' => 'eProactive',
  },
  lcsSetupVpnCertificatesAndKeysIkeKeysEntryRemoteIdType => {
    '0' => 'eNoIdentity',
    '1' => 'eIpAddress',
    '2' => 'eDomainName',
    '3' => 'eEmailAddress',
    '9' => 'eDistinguishedName',
    '11' => 'eKeyId',
  },
  lcsStatusWlanStationTableEntryWpaVersion => {
    '0' => 'eNone',
    '1' => 'eWpa1',
    '2' => 'eWpa2',
  },
  lcsSetupUtmCfProfCatProfEntryAnonymousProxies => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsStatusEthernetPortsCableTestResultsEntryMdi0Status => {
    '0' => 'eUnknown',
    '1' => 'eOk',
    '2' => 'eOpen',
    '3' => 'eShort',
    '4' => 'eImpedanceFault',
    '5' => 'eFail',
    '6' => 'eBusy',
  },
  lcsStatusPppTxOptionsLcpEntryPfc => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWlanMngmtNotificationSendSnmpTrapForStationTableEvent => {
    '0' => 'eAddRemoveEntry',
    '1' => 'eAllEvents',
  },
  lcsStatusDslInterfacesEntryLinkActive => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusTcpIpDhcpNetworkListEntryCache => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanCompetingNetworksEntryRadioBand => {
    '0' => 'eUnknown',
    '1' => 'e24ghz',
    '2' => 'e5ghz',
    '3' => 'e24ghz5ghz',
  },
  lcsSetupLanBridgeEncapsulationTableEntryEncapsulation => {
    '0' => 'eEthIi',
    '1' => 'eSnap',
  },
  lcsSetupConfigPasswordRequiredForSnmpReadAccess => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusLanInterfacesEntryDownshift => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupAccountingTimeSnapshotEntryType => {
    '0' => 'eMonthly',
    '1' => 'eWeekly',
    '2' => 'eDaily',
  },
  lcsStatusAdslModemMemoryTest => {
    '0' => 'eNotTested',
    '1' => 'eTimeout',
    '2' => 'eFailed',
    '3' => 'eOk',
  },
  lcsStatusWanByteTransportEntryIfc => {
    '257' => 'eCh01',
    '258' => 'eCh02',
    '513' => 'eModem',
    '2049' => 'eDslCh1',
    '2050' => 'eDslCh2',
    '2051' => 'eDslCh3',
    '2052' => 'eDslCh4',
    '2053' => 'eDslCh5',
    '2054' => 'eDslCh6',
    '2055' => 'eDslCh7',
    '2056' => 'eDslCh8',
    '8193' => 'eAdsl1',
    '8194' => 'eAdsl2',
    '8195' => 'eAdsl3',
    '8196' => 'eAdsl4',
    '8197' => 'eAdsl5',
    '8198' => 'eAdsl6',
    '8199' => 'eAdsl7',
    '8200' => 'eAdsl8',
    '16385' => 'eVdsl1',
    '16386' => 'eVdsl2',
    '16387' => 'eVdsl3',
    '16388' => 'eVdsl4',
    '16389' => 'eVdsl5',
    '16390' => 'eVdsl6',
    '16391' => 'eVdsl7',
    '16392' => 'eVdsl8',
  },
  lcsSetupLanBridgeSpanningTreePathCostComputation => {
    '0' => 'eClassic',
    '1' => 'eRapid',
  },
  lcsStatusIpRouterRipWanSitesEntryRipSend => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupAccountingDiscriminator => {
    '0' => 'eMacAddress',
    '1' => 'eIpAddress',
  },
  lcsSetupWlanMngmtNotificationSyslog => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupUtmCfProfCatProfEntryIllegalActivities => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsStatusComPortsComPortServerComPortStatusEntryStopBits => {
    '1' => 'e1',
    '2' => 'e2',
  },
  lcsSetupCertsScepCaFingerprintAlgorithm => {
    '0' => 'eMd5',
    '1' => 'eSha1',
  },
  lcsSetupInterfacesWlanEncryptionEntryClientEapMethod => {
    '3328' => 'eTls',
    '5380' => 'eTtlsMd5',
    '5383' => 'eTtlsPap',
    '5384' => 'eTtlsChap',
    '5402' => 'eTtlsMschapv2',
    '5567' => 'eTtlsMschap',
    '6406' => 'ePeapGtc',
    '6426' => 'ePeapMschapv2',
  },
  lcsStatusLayerConnectionEntryIfc => {
    '257' => 'eCh01',
    '258' => 'eCh02',
    '513' => 'eModem',
    '2049' => 'eDslCh1',
    '2050' => 'eDslCh2',
    '2051' => 'eDslCh3',
    '2052' => 'eDslCh4',
    '2053' => 'eDslCh5',
    '2054' => 'eDslCh6',
    '2055' => 'eDslCh7',
    '2056' => 'eDslCh8',
    '8193' => 'eAdsl1',
    '8194' => 'eAdsl2',
    '8195' => 'eAdsl3',
    '8196' => 'eAdsl4',
    '8197' => 'eAdsl5',
    '8198' => 'eAdsl6',
    '8199' => 'eAdsl7',
    '8200' => 'eAdsl8',
    '16385' => 'eVdsl1',
    '16386' => 'eVdsl2',
    '16387' => 'eVdsl3',
    '16388' => 'eVdsl4',
    '16389' => 'eVdsl5',
    '16390' => 'eVdsl6',
    '16391' => 'eVdsl7',
    '16392' => 'eVdsl8',
  },
  lcsSetupInterfacesWlanIntpntSetEntryEnable => {
    '0' => 'eNo',
    '1' => 'eYes',
    '2' => 'eExclusive',
  },
  lcsStatusEthernetPortsPortsEntryMdiMode => {
    '0' => 'eUnknown',
    '1' => 'eMdi',
    '2' => 'eMdix',
    '3' => 'eNotApplicable',
  },
  lcsSetupPrinterPrinterEntryResetOnOpen => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupInterfacesWlanIntpntSetEntryIsolatedMode => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusTcpIpRadiussAccntActAccntSessEntryNasPortType => {
    '-1' => 'eUnknown',
    '0' => 'eAsync',
    '1' => 'eSync',
    '2' => 'eIsdnSync',
    '3' => 'eV120',
    '4' => 'eV110',
    '5' => 'eVirtual',
    '6' => 'ePiafs',
    '7' => 'eHdlcClearChannel',
    '8' => 'eX25',
    '9' => 'eX75',
    '10' => 'eG3Fax',
    '11' => 'eSdsl',
    '12' => 'eAdslCap',
    '13' => 'eAdslDmt',
    '14' => 'eIdsl',
    '15' => 'eEthernet',
    '16' => 'eXdsl',
    '17' => 'eCable',
    '18' => 'eWirelessOther',
    '19' => 'eWireless80211',
    '20' => 'eTokenRing',
    '21' => 'eFddi',
    '22' => 'eWirelessCdma2000',
    '23' => 'eWirelessUmts',
    '24' => 'eWireless1xEv',
    '25' => 'eIapp',
    '26' => 'eFttp',
    '27' => 'eWireless80216',
    '28' => 'eWireless80220',
    '29' => 'eWireless80222',
    '30' => 'ePppoa',
    '31' => 'ePppoeoa',
    '32' => 'ePppoeoe',
    '33' => 'ePppoeovlan',
    '34' => 'ePppoeoqinq',
    '35' => 'eXpon',
  },
  lcsSetupVpnVpnPeersEntryIkeExchange => {
    '0' => 'eMainMode',
    '1' => 'eAggressiveMode',
  },
  lcsSetupIpRouterFirewallApplicationsFtpFtpBlock => {
    '0' => 'eOff',
    '1' => 'eAllways',
    '2' => 'eWan',
    '3' => 'eDefaultRoute',
  },
  lcsStatusWlanChannelScanResultsEntryRadarDetected => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupInterfacesWlanNetworkEntryApsd => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusIpRouterVrrpVirtualRouterEntryBackup => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupAutoldNetworkScriptCondition => {
    '0' => 'eUnconditionally',
    '1' => 'eIfDifferent',
  },
  lcsStatusLayerConnectionEntryLay3 => {
    '0' => 'eNONE',
    '4' => 'ePpp',
    '5' => 'eAppp',
    '6' => 'eScppp',
    '7' => 'eScappp',
    '8' => 'eSctrans',
    '9' => 'eDhcp',
    '255' => 'eTRANS',
  },
  lcsStatusWlanMngmtApStatusActiveRadiosEntryOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanMngmtWlcTunnelsWlcConnectionsEntryState => {
    '0' => 'eUnknown',
    '5' => 'eIdle',
    '10' => 'eDiscovery',
    '15' => 'eDtlsSetup',
    '20' => 'eJoin',
    '25' => 'eConfigure',
    '30' => 'eImageData',
    '35' => 'eReset',
    '40' => 'eDtlsTeardown',
    '45' => 'eSulking',
    '100' => 'eRun',
  },
  lcsSetupWanPollingTableEntryType => {
    '0' => 'eForced',
    '1' => 'eAuto',
  },
  lcsSetupCertsScepClntCasEntryCaSignatureAlgorithm => {
    '0' => 'eMd5',
    '1' => 'eSha1',
  },
  lcsSetupInterfacesEthernetPortsEntryAssignment => {
    '0' => 'eLan1',
    '1' => 'eLan2',
    '2' => 'eLan3',
    '3' => 'eLan4',
    '4' => 'eLan5',
    '512' => 'eDsl1',
    '513' => 'eDsl2',
    '514' => 'eDsl3',
    '515' => 'eDsl4',
    '65533' => 'eIdle',
    '65534' => 'eMonitor',
    '65535' => 'ePowerDown',
  },
  lcsStatusTcpIpRadiussAccntComplAccntSessEntryTerminateCause => {
    '1' => 'eUserRequest',
    '2' => 'eLostCarrier',
    '3' => 'eLostService',
    '4' => 'eIdleTimeout',
    '5' => 'eSessionTimeout',
    '6' => 'eAdminReset',
    '7' => 'eAdminReboot',
    '8' => 'ePortError',
    '9' => 'eNasError',
    '10' => 'eNasRequest',
    '11' => 'eNasReboot',
    '12' => 'ePortUnneeded',
    '13' => 'ePortPreempted',
    '14' => 'ePortSuspended',
    '15' => 'eServiceUnavailable',
    '16' => 'eCallback',
    '17' => 'eUserError',
    '18' => 'eHostRequest',
    '19' => 'eSupplicantRestart',
    '20' => 'eReauthenticationFailure',
    '21' => 'ePortReinit',
    '22' => 'ePortAdminDisabled',
  },
  lcsSetupIpRouterFirewallRulesEntryLinked => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupDhcpNetworkListEntryBroadcastBit => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusVdslVdslProfile => {
    '0' => 'eUnknown',
    '1' => 'e8a',
    '2' => 'e8b',
    '3' => 'e8c',
    '4' => 'e8d',
    '5' => 'e12a',
    '6' => 'e12b',
    '7' => 'e17a',
    '8' => 'e30a',
    '9' => 'e17b',
  },
  lcsStatusEthernetPortsPortsEntryPort => {
    '0' => 'eUnknown',
    '1' => 'eUplink',
    '2' => 'eEth1',
    '3' => 'eEth2',
    '4' => 'eEth3',
    '5' => 'eEth4',
    '16' => 'eWan',
  },
  lcsStatusWlanMngmtStationTableEntryTxRate => {
    '0' => 'eUnknown',
    '1' => 'e1M',
    '2' => 'e2M',
    '3' => 'e5M',
    '4' => 'e5M5',
    '5' => 'e8M',
    '6' => 'e11M',
    '8' => 'e6M',
    '9' => 'e9M',
    '10' => 'e12M',
    '11' => 'e18M',
    '12' => 'e24M',
    '13' => 'e36M',
    '14' => 'e48M',
    '15' => 'e54M',
    '16' => 'eXR0M5',
    '17' => 'eXR1M',
    '18' => 'eXR2M',
    '19' => 'eXR3M',
    '20' => 'eT12M',
    '21' => 'eT18M',
    '22' => 'eT24M',
    '23' => 'eT36M',
    '24' => 'eT48M',
    '25' => 'eT72M',
    '26' => 'eT96M',
    '27' => 'eT108M',
    '28' => 'eHT1S6M5',
    '29' => 'eHT1S13M',
    '30' => 'eHT1S19M5',
    '31' => 'eHT1S26M',
    '32' => 'eHT1S39M',
    '33' => 'eHT1S52M',
    '34' => 'eHT1S58M5',
    '35' => 'eHT1S65M',
    '36' => 'eHT2S13M',
    '37' => 'eHT2S26M',
    '38' => 'eHT2S39M',
    '39' => 'eHT2S52M',
    '40' => 'eHT2S78M',
    '41' => 'eHT2S104M',
    '42' => 'eHT2S117M',
    '43' => 'eHT2S130M',
    '44' => 'eHT3S19M5',
    '45' => 'eHT3S39M',
    '46' => 'eHT3S58M5',
    '47' => 'eHT3S78M',
    '48' => 'eHT3S117M',
    '49' => 'eHT3S156M',
    '50' => 'eHT3S175M5',
    '51' => 'eHT3S195M',
  },
  lcsStatusWtpMngmtRadioprofilsEntrySubbands => {
    '0' => 'eBand1Plus2Plus3',
    '1' => 'eBand1',
    '2' => 'eBand2',
    '3' => 'eBand3',
    '4' => 'eBand1Plus2',
    '5' => 'eBand1Plus3',
    '6' => 'eBand2Plus3',
  },
  lcsSetupInterfacesWlanClientModesEntrySelectionPreference => {
    '0' => 'eSignalStrength',
    '1' => 'eProfile',
  },
  lcsSetupWlanMngmtNotificationAdvancedEntryMissingAp => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupIpRouterRoutingMethodIcmpRoutingMethod => {
    '0' => 'eNormal',
    '1' => 'eReliable',
  },
  lcsStatusLanBridgeIgmpSnoopingPortStatusEntryRouterPort => {
    '0' => 'eNo',
    '1' => 'eAuto',
    '2' => 'eYes',
  },
  lcsStatusWlanClientIfcsEntryAllow40mhz => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusTcpIpSyslogLastMessagesEntryLevel => {
    '0' => 'eEmergency',
    '1' => 'eAlarm',
    '2' => 'eCritical',
    '3' => 'eError',
    '4' => 'eWarning',
    '5' => 'eNotice',
    '6' => 'eInfo',
    '7' => 'eDebug',
  },
  lcsSetupWlanMngmtApConfCountryDefault => {
    '8' => 'eAlbania',
    '32' => 'eArgentina',
    '36' => 'eAustralia',
    '40' => 'eAustria',
    '48' => 'eBahrain',
    '50' => 'eBangladesh',
    '56' => 'eBelgium',
    '70' => 'eBosniaHerzegovina',
    '76' => 'eBrazil',
    '96' => 'eBruneiDarussalam',
    '100' => 'eBulgaria',
    '112' => 'eBelarus',
    '124' => 'eCanada',
    '152' => 'eChile',
    '156' => 'eChina',
    '158' => 'eTaiwan',
    '170' => 'eColombia',
    '188' => 'eCostaRica',
    '191' => 'eCroatia',
    '196' => 'eCyprus',
    '203' => 'eCzech',
    '208' => 'eDenmark',
    '218' => 'eEcuador',
    '233' => 'eEstonia',
    '246' => 'eFinland',
    '250' => 'eFrance',
    '276' => 'eGermany',
    '288' => 'eGhana',
    '300' => 'eGreece',
    '320' => 'eGuatemala',
    '340' => 'eHonduras',
    '344' => 'eHongKong',
    '348' => 'eHungary',
    '352' => 'eIceland',
    '356' => 'eIndia',
    '360' => 'eIndonesia',
    '372' => 'eIreland',
    '376' => 'eIsrael',
    '380' => 'eItaly',
    '392' => 'eJapan',
    '400' => 'eJordan',
    '410' => 'eSouthKorea',
    '414' => 'eKuwait',
    '422' => 'eLebanon',
    '428' => 'eLatvia',
    '438' => 'eLiechtenstein',
    '440' => 'eLithuania',
    '442' => 'eLuxembourg',
    '446' => 'eMacau',
    '458' => 'eMalaysia',
    '470' => 'eMalta',
    '484' => 'eMexico',
    '498' => 'eMoldavia',
    '504' => 'eMorocco',
    '512' => 'eOman',
    '528' => 'eNetherlands',
    '554' => 'eNewZealand',
    '558' => 'eNicaragua',
    '578' => 'eNorway',
    '586' => 'ePakistan',
    '591' => 'ePanama',
    '600' => 'eParaguay',
    '604' => 'ePeru',
    '608' => 'ePhilippines',
    '616' => 'ePoland',
    '620' => 'ePortugal',
    '630' => 'ePuertoRico',
    '634' => 'eQatar',
    '642' => 'eRomania',
    '643' => 'eRussia',
    '682' => 'eSaudiArabia',
    '702' => 'eSingapore',
    '703' => 'eSlovak',
    '705' => 'eSlovenia',
    '710' => 'eSouthAfrica',
    '724' => 'eSpain',
    '752' => 'eSweden',
    '756' => 'eSwitzerland',
    '764' => 'eThailand',
    '784' => 'eUnitedArabEmirates',
    '788' => 'eTunisia',
    '792' => 'eTurkey',
    '800' => 'eUganda',
    '804' => 'eUkraine',
    '807' => 'eMacedonia',
    '818' => 'eEgypt',
    '826' => 'eUnitedKingdom',
    '834' => 'eTanzania',
    '840' => 'eUnitedStatesFcc',
    '858' => 'eUruguay',
    '862' => 'eVenezuela',
    '999' => 'eEgalistan',
  },
  lcsStatusUtmCfCategoryStatisticsEntryCat => {
    '1' => 'ePornographyEroticSex',
    '3' => 'eSwimwearLingerie',
    '4' => 'eShopping',
    '5' => 'eAuctionsClassifiedAds',
    '6' => 'eGovNonProv',
    '8' => 'eCitiesRegionsCountries',
    '9' => 'eEducation',
    '10' => 'ePoliticalParties',
    '11' => 'eReligionSpirituality',
    '13' => 'eIllegalActivities',
    '14' => 'eComputerCrimeWarezHacking',
    '15' => 'ePolHateDiscr',
    '17' => 'eViolenceExtreme',
    '18' => 'eGamblingLottery',
    '19' => 'eComputerGames',
    '20' => 'eToys',
    '21' => 'eCinTvSocial',
    '22' => 'eRecrFacThemPark',
    '23' => 'eArtsMuseumsTheaters',
    '24' => 'eMusicRadioBroadcast',
    '25' => 'eLiteratureBooks',
    '26' => 'eHumorCartoons',
    '27' => 'eNewsMagazines',
    '28' => 'eWebmailUnifiedMessaging',
    '29' => 'eChat',
    '30' => 'eBlogsBulletinBoards',
    '31' => 'eMobileTelephony',
    '32' => 'eDigitalPostcards',
    '33' => 'eSearchWebPortal',
    '34' => 'eSoftwareHardware',
    '35' => 'eCommunicationServices',
    '36' => 'eItSecurityItInformation',
    '37' => 'eWebSiteTranslation',
    '38' => 'eAnonymousProxies',
    '39' => 'eIllegalDrugs',
    '40' => 'eAlcoholTobacco',
    '43' => 'eDatingNetworks',
    '44' => 'eRestEnter',
    '45' => 'eTravel',
    '46' => 'eFashionCosmeticsJewelry',
    '47' => 'eSports',
    '48' => 'eArchConstFurn',
    '49' => 'eEnvironmentClimatePets',
    '50' => 'ePersonalWebSites',
    '51' => 'eJobSearch',
    '52' => 'eFinanceInvestment',
    '54' => 'eBanking',
    '55' => 'eVehicles',
    '56' => 'eWeaponsMilitary',
    '57' => 'eMedicineHealthSelfHelp',
    '58' => 'eAbortion',
    '60' => 'eSpamUrls',
    '61' => 'eMalware',
    '62' => 'ePhishingUrls',
    '63' => 'eInstantMessaging',
    '67' => 'eGeneralBusiness',
    '74' => 'eBannerAdvertisements',
    '80' => 'eWebStorage',
  },
  lcsSetupInterfacesEthernetPortsEntryConnector => {
    '0' => 'eAuto',
    '1' => 'e10bT',
    '2' => 'eFd10bTx',
    '3' => 'e100bTx',
    '4' => 'eFd100bTx',
    '6' => 'eFd1000bTx',
    '7' => 'eAuto100',
  },
  lcsSetupInterfacesWlanBeaconingEntryBeaconOrder => {
    '0' => 'eCyclic',
    '1' => 'eStaggered',
    '2' => 'eSimpleBurst',
  },
  lcsStatusDslolLinkActive => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupRadiusServerEapPeapDefaultTunnelMethod => {
    '0' => 'eNone',
    '4' => 'eMd5',
    '6' => 'eGtc',
    '26' => 'eMschapv2',
  },
  lcsStatusLanBridgeIsolatedMode => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanClientIfcsEntryClBrgSupport => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanStationTableEntryKeyType => {
    '0' => 'eNone',
    '1' => 'eUnknown',
    '5' => 'eWep40Bits',
    '13' => 'eWep104Bits',
    '16' => 'eWep128Bits',
    '64' => 'eTkip',
    '65' => 'eAesOcb',
    '66' => 'eAesCcm',
  },
  lcsSetupInterfacesWlanNetworkEntryInterStationTraffic => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupIpRouterFirewallApplicationsIrcDdcBlock => {
    '0' => 'eOff',
    '1' => 'eAllways',
    '2' => 'eWan',
    '3' => 'eDefaultRoute',
  },
  lcsSetupVpnAllowRemoteNetworkSelection => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupRadiusServerEapAllowMethodsEntryAllow => {
    '0' => 'eOff',
    '1' => 'eOn',
    '2' => 'eInternalOnly',
  },
  lcsStatusWlanMngmtApConfRadioProfErrorsEntryError => {
    '0' => 'eNone',
    '1' => 'eInheritanceError',
    '2' => 'eNoProfile',
    '3' => 'eProfileNotFound',
    '4' => 'eNoMemoory',
    '5' => 'eSsidMissing',
    '6' => 'eNetworkNotFound',
    '7' => 'eApParametersNotFound',
    '8' => 'eApIntranetNotFound',
  },
  lcsStatusPppTxOptionsLcpEntryIfc => {
    '257' => 'eCh01',
    '258' => 'eCh02',
    '513' => 'eModem',
    '2049' => 'eDslCh1',
    '2050' => 'eDslCh2',
    '2051' => 'eDslCh3',
    '2052' => 'eDslCh4',
    '2053' => 'eDslCh5',
    '2054' => 'eDslCh6',
    '2055' => 'eDslCh7',
    '2056' => 'eDslCh8',
    '8193' => 'eAdsl1',
    '8194' => 'eAdsl2',
    '8195' => 'eAdsl3',
    '8196' => 'eAdsl4',
    '8197' => 'eAdsl5',
    '8198' => 'eAdsl6',
    '8199' => 'eAdsl7',
    '8200' => 'eAdsl8',
    '16385' => 'eVdsl1',
    '16386' => 'eVdsl2',
    '16387' => 'eVdsl3',
    '16388' => 'eVdsl4',
    '16389' => 'eVdsl5',
    '16390' => 'eVdsl6',
    '16391' => 'eVdsl7',
    '16392' => 'eVdsl8',
  },
  lcsStatusWlanInterpointsAccesspointListEntryShortGuardInterval => {
    '0' => 'eNo',
    '1' => 'e20mhz',
    '2' => 'e40mhz',
    '3' => 'e2040mhz',
  },
  lcsSetupLanBridgeProtocolTableEntryAction => {
    '0' => 'eDrop',
    '1' => 'ePass',
    '2' => 'eRedirect',
  },
  lcsSetupLancapiPriorityListEntryPrioOut => {
    '0' => 'eP1',
    '1' => 'eP2',
    '2' => 'eP3',
  },
  lcsStatusWlanScanResultsEntryRadioBand => {
    '0' => 'eUnknown',
    '1' => 'e24ghz',
    '2' => 'e5ghz',
    '3' => 'e24ghz5ghz',
  },
  lcsStatusIpRouterRipWildcardSitesEntryRipType => {
    '0' => 'eOff',
    '1' => 'eRip1',
    '2' => 'eR1Comp',
    '3' => 'eRip2',
  },
  lcsStatusTimeDstClockChangesEntryEvent => {
    '1' => 'eStart',
    '2' => 'eEnd',
  },
  lcsSetupConfigAccessTableEntryTftp => {
    '0' => 'eNo',
    '1' => 'eYes',
    '4' => 'eRead',
    '16' => 'eVpn',
  },
  lcsStatusWlanRadiosEntry40mhzPermitted => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupLanBridgeIgmpSnoopingSimulatedQueriersEntryBridgeGroup => {
    '0' => 'eBrg1',
    '1' => 'eBrg2',
    '2' => 'eBrg3',
    '3' => 'eBrg4',
    '4' => 'eBrg5',
    '5' => 'eBrg6',
    '6' => 'eBrg7',
    '7' => 'eBrg8',
    '255' => 'eNone',
  },
  lcsStatusTimeDstClockChangesEntryIndex => {
    '1' => 'eFirst',
    '2' => 'eSecond',
    '3' => 'eThird',
    '4' => 'eFourth',
    '252' => 'e4Last',
    '253' => 'e3Last',
    '254' => 'e2Last',
    '255' => 'eLast',
  },
  lcsStatusIpRouterRipWildcardSitesEntryRfc2091 => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupRadiusServerEapDefaultMethod => {
    '4' => 'eMd5',
    '6' => 'eGtc',
    '13' => 'eTls',
    '21' => 'eTtls',
    '25' => 'ePeap',
    '26' => 'eMschapv2',
  },
  lcsStatusWlanScanResultsEntryPcfFunctionality => {
    '0' => 'eNone',
    '1' => 'eDelivery',
    '2' => 'eDeliveryPlusPolling',
  },
  lcsStatusLanBridgeIgmpSnoopingGroupsEntryAllowLearning => {
    '0' => 'eYes',
    '1' => 'eNo',
  },
  lcsStatusComPortsComPortServerComPortErrorsEntryDeviceType => {
    '1' => 'eOutband',
    '33' => 'eBelkinF5u103',
    '34' => 'eProlific2303',
    '35' => 'eFtdi8u232am',
    '36' => 'eGpsNmea',
    '45' => 'eQualcomDm',
  },
  lcsSetupTcpIpIcmpOnArpTimeout => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWlanIndoorOnlyOperation => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupInterfacesDslEntryOperating => {
    '0' => 'eNo',
    '16' => 'eYes',
  },
  lcsStatusAdslStandard => {
    '0' => 'eOff',
    '2' => 'eT1dot413',
    '3' => 'eGdotLite',
    '4' => 'eGdotDMT',
    '21' => 'eAdsl2',
    '22' => 'eAdsl2plus',
    '31' => 'eAdsl2AnnexM',
    '32' => 'eAdsl2plusAnnexM',
    '33' => 'eAdsl2AnnexI',
    '34' => 'eAdsl2plusAnnexI',
    '35' => 'eAdsl2AnnexJ',
    '36' => 'eAdsl2plusAnnexJ',
    '37' => 'eAdsl2AnnexL',
    '40' => 'eVdsl2',
    '255' => 'eUnknown',
  },
  lcsStatusIpRouterRipDynWanSitesEntryRipSend => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanStationTableEntryClBrgSupport => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupIeee8021xRadiusServerEntryProtocol => {
    '0' => 'eRadius',
    '1' => 'eRadsec',
  },
  lcsSetupConfigCronTableEntryActive => {
    '0' => 'eYes',
    '1' => 'eNo',
  },
  lcsSetupConfigCpuLoadInterval => {
    '1' => 'eT1s',
    '5' => 'eT5s',
    '60' => 'eT60s',
    '300' => 'eT300s',
  },
  lcsSetupWlanArpHandling => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanMngmtApConnectionsEntryDscpForDataPackets => {
    '0' => 'eBestEffort',
    '40' => 'eAssuredForwarding11',
    '48' => 'eAssuredForwarding12',
    '56' => 'eAssuredForwarding13',
    '72' => 'eAssuredForwarding21',
    '80' => 'eAssuredForwarding22',
    '88' => 'eAssuredForwarding23',
    '104' => 'eAssuredForwarding31',
    '112' => 'eAssuredForwarding32',
    '120' => 'eAssuredForwarding33',
    '136' => 'eAssuredForwarding41',
    '144' => 'eAssuredForwarding42',
    '152' => 'eAssuredForwarding43',
    '184' => 'eExpeditedForwarding',
  },
  lcsFirmwareTableFirmsafeEntryStatus => {
    '0' => 'eInactive',
    '1' => 'eActive',
    '2' => 'eLoader',
    '4' => 'eMinimalPlusInactive',
    '5' => 'eMinimalPlusActive',
  },
  lcsSetupUtmCfProfCatProfEntryFinanceInvestment => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupUtmCfProfCatProfEntryShopping => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupInterfacesWlanIntpntPeersEntryIfc => {
    '1' => 'eP2p11',
    '2' => 'eP2p12',
    '3' => 'eP2p13',
    '4' => 'eP2p14',
    '5' => 'eP2p15',
    '6' => 'eP2p16',
    '7' => 'eP2p21',
    '8' => 'eP2p22',
    '9' => 'eP2p23',
    '10' => 'eP2p24',
    '11' => 'eP2p25',
    '12' => 'eP2p26',
    '32' => 'eP2p17',
    '33' => 'eP2p18',
    '34' => 'eP2p19',
    '35' => 'eP2p110',
    '36' => 'eP2p111',
    '37' => 'eP2p112',
    '38' => 'eP2p113',
    '39' => 'eP2p114',
    '40' => 'eP2p115',
    '41' => 'eP2p116',
    '64' => 'eP2p27',
    '65' => 'eP2p28',
    '66' => 'eP2p29',
    '67' => 'eP2p210',
    '68' => 'eP2p211',
    '69' => 'eP2p212',
    '70' => 'eP2p213',
    '71' => 'eP2p214',
    '72' => 'eP2p215',
    '73' => 'eP2p216',
  },
  lcsSetupComPortsCOMPortServCOMPortSetEntryDataBits => {
    '7' => 'e7',
    '8' => 'e8',
  },
  lcsSetupConfigCronTableEntryBase => {
    '0' => 'eRealTime',
    '1' => 'eOperationTime',
  },
  lcsSetupConfigAntiTheftProtectionMethod => {
    '0' => 'eBasicCall',
    '1' => 'eFacility',
    '2' => 'eGps',
  },
  lcsStatusWlanMngmtApConfRadioprofilsEntrySubbands => {
    '0' => 'eBand1Plus2Plus3',
    '1' => 'eBand1',
    '2' => 'eBand2',
    '3' => 'eBand3',
    '4' => 'eBand1Plus2',
    '5' => 'eBand1Plus3',
    '6' => 'eBand2Plus3',
  },
  lcsStatusIsdnSignalingManagementErrorStatisticEntryIfc => {
    '257' => 'eS01',
    '513' => 'eModem',
    '2049' => 'eDsl1',
    '2050' => 'eDsl2',
    '2051' => 'eDsl3',
    '2052' => 'eDsl4',
    '8193' => 'eAdsl',
    '16385' => 'eVdsl',
  },
  lcsStatusLanBridgePortDataEntryOperatingState => {
    '1' => 'eUp',
    '2' => 'eDown',
    '3' => 'eTesting',
    '4' => 'eUnknown',
    '5' => 'eDormant',
    '6' => 'eNotPresent',
    '7' => 'eLowerLayerDown',
  },
  lcsStatusIpRouterServiceTableEntryService => {
    '1' => 'eIcmp',
    '2' => 'eFtp',
    '3' => 'eHttp',
    '4' => 'eSmtp',
    '5' => 'eDns',
    '6' => 'eTelnet',
    '7' => 'eTftp',
    '8' => 'eDhcp',
    '9' => 'ePop3',
    '10' => 'eNetbios',
    '11' => 'eImap2',
    '12' => 'eNews',
    '13' => 'eIrc',
    '14' => 'eSnmp',
    '15' => 'eOther',
    '16' => 'eTotal',
  },
  lcsStatusWlanMngmtApConfApConfErrorsEntryError => {
    '0' => 'eNone',
    '1' => 'eInheritanceError',
    '2' => 'eNoProfile',
    '3' => 'eProfileNotFound',
    '4' => 'eNoMemoory',
    '5' => 'eSsidMissing',
    '6' => 'eNetworkNotFound',
    '7' => 'eApParametersNotFound',
    '8' => 'eApIntranetNotFound',
  },
  lcsStatusPppoeServerConnectionsEntryLastError => {
    '0' => 'eNone',
    '267' => 'eRemoteDoubled',
    '275' => 'eIcmpConnError',
    '277' => 'eDhcpTimeout',
    '278' => 'ePptpNoResponse',
    '279' => 'eVpnNoResponse',
    '280' => 'eArpNoResponse',
    '513' => 'ePptpNoChannel',
    '514' => 'ePptpBadFormat',
    '515' => 'ePptpBadValue',
    '516' => 'ePptpNoRessource',
    '517' => 'ePptpBadCallId',
    '518' => 'ePptpGenError',
    '17153' => 'eRemoteDisconnected',
    '17154' => 'eManualDisconnect',
    '17155' => 'eShortholdExpired',
    '17156' => 'ePhysicalDisconnected',
    '17157' => 'eInvalidPhysicalChannel',
    '17158' => 'eDynamicVpnReconnect',
    '17159' => 'eConfigurationChanged',
    '17160' => 'eRemovedFromConfig',
    '32768' => 'eLcpRejected',
    '32769' => 'eAuthError',
    '32770' => 'eAuthRejected',
    '32771' => 'eLcpConnError',
    '32784' => 'ePapRejected',
    '32785' => 'ePapRxTimeout',
    '32786' => 'ePapTxTimeout',
    '32787' => 'eWrongPapReq',
    '32788' => 'ePapNakReceived',
    '32789' => 'eUnknPapPeer',
    '32800' => 'eChapRejected',
    '32801' => 'eChapRxTimeout',
    '32802' => 'eChapTxTimeout',
    '32803' => 'eWrongChapResp',
    '32804' => 'eChapFailRecvd',
    '32805' => 'eUnknChapPeer',
    '32816' => 'eIpxcpRejected',
    '32817' => 'eWrongIpxcpNet',
    '32818' => 'eIpxcpNetReject',
    '32819' => 'eIpxcpRouteUnkn',
    '32832' => 'eIpcpRejected',
    '32848' => 'eCcpRejected',
    '33008' => 'eNoNcpAvailable',
  },
  lcsStatusCertsScepCaRequestsPendReqEntryReason => {
    '0' => 'eUnknownReason',
    '1' => 'eManuallyDeclined',
    '2' => 'eManuallyGranted',
    '3' => 'eAutoapproveNotAllowed',
    '4' => 'eClientCertificateIsNotValid',
    '5' => 'eClientCertificateIsNotOldEnoughForRenewal',
    '6' => 'eClientRequestContainsNoChallengePassword',
    '7' => 'eNoGeneralChallengePasswordAvailableForClients',
    '8' => 'eRequestContainsBrokenChallengePasswordAttribute',
    '9' => 'eChallengePasswordDoesNotMatch',
    '10' => 'eInternalProcessingError',
    '11' => 'eRequestSignatureVerificationFailed',
    '12' => 'eNoCertificateRequestAvailable',
    '13' => 'eRequestSubjectNameDoesNotMatchCertificateSubjectName',
    '14' => 'eMaximalSizeOfCertificateListReached',
  },
  lcsSetupInterfacesWlanTransmissionEntryReceiveAggregates => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupRadiusServerAllowStatusRequests => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanMngmtApStatusMissingApEntryValid => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanWlanParameterEntryRadioBand => {
    '0' => 'eUnknown',
    '1' => 'e24ghz',
    '2' => 'e5ghz',
    '3' => 'e24ghz5ghz',
  },
  lcsStatusLanIeee8021xSupplicantIfcStateEntryState => {
    '0' => 'eIdle',
    '1' => 'eUnauthorized',
    '2' => 'eAuthorized',
  },
  lcsSetupPublicSpotModuleProviderTableEntryAccServerProtocol => {
    '0' => 'eRadius',
    '1' => 'eRadsec',
  },
  lcsStatusWlanWlanParameterEntrySupportedAntennas => {
    '0' => 'eNA',
    '1' => 'eAntenna1',
    '3' => 'eAntenna1Plus2',
    '5' => 'eAntenna1Plus3',
    '7' => 'eAntenna1Plus2Plus3',
  },
  lcsSetupInterfacesWlanEncryptionEntryAuthentication => {
    '0' => 'eOpenSystem',
    '1' => 'eSharedKey',
  },
  lcsSetupUtmCfProfCatProfEntryToys => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupInterfacesWlanRadioSettingsEntryAllow40mhz => {
    '0' => 'eAuto',
    '1' => 'eNo',
  },
  lcsStatusEthernetPortsErrorsEntryIfc => {
    '2' => 'eEth1',
    '3' => 'eEth2',
    '4' => 'eEth3',
    '5' => 'eEth4',
  },
  lcsSetupWlanMngmtApConfRadioprofilsEntry24ghzMode => {
    '0' => 'e11bgMixed',
    '1' => 'e11gOnly',
    '2' => 'e11bOnly',
    '3' => 'e108mbps',
    '4' => 'e11bgnMixed',
    '5' => 'e11gnMixed',
    '6' => 'eGreenfield',
  },
  lcsStatusWlanWlanParameterEntrySupportsCompression => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupConfigLanguage => {
    '1' => 'eEnglish',
    '2' => 'eDeutsch',
  },
  lcsStatusWanPacketTransportEntryIfc => {
    '257' => 'eCh01',
    '258' => 'eCh02',
    '513' => 'eModem',
    '2049' => 'eDslCh1',
    '2050' => 'eDslCh2',
    '2051' => 'eDslCh3',
    '2052' => 'eDslCh4',
    '2053' => 'eDslCh5',
    '2054' => 'eDslCh6',
    '2055' => 'eDslCh7',
    '2056' => 'eDslCh8',
    '8193' => 'eAdsl1',
    '8194' => 'eAdsl2',
    '8195' => 'eAdsl3',
    '8196' => 'eAdsl4',
    '8197' => 'eAdsl5',
    '8198' => 'eAdsl6',
    '8199' => 'eAdsl7',
    '8200' => 'eAdsl8',
    '16385' => 'eVdsl1',
    '16386' => 'eVdsl2',
    '16387' => 'eVdsl3',
    '16388' => 'eVdsl4',
    '16389' => 'eVdsl5',
    '16390' => 'eVdsl6',
    '16391' => 'eVdsl7',
    '16392' => 'eVdsl8',
  },
  lcsStatusPppPppPhasesEntryLcp => {
    '1' => 'eInitial',
    '2' => 'eStartng',
    '3' => 'eClosed',
    '4' => 'eStopped',
    '5' => 'eClosing',
    '6' => 'eStoppng',
    '7' => 'eReqsent',
    '8' => 'eAckrcvd',
    '9' => 'eAcksent',
    '10' => 'eOpened',
  },
  lcsSetupWlanMngmtProvideDefaultConfiguration => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanMngmtStationTableEntryRxRate => {
    '0' => 'eUnknown',
    '1' => 'e1M',
    '2' => 'e2M',
    '3' => 'e5M',
    '4' => 'e5M5',
    '5' => 'e8M',
    '6' => 'e11M',
    '8' => 'e6M',
    '9' => 'e9M',
    '10' => 'e12M',
    '11' => 'e18M',
    '12' => 'e24M',
    '13' => 'e36M',
    '14' => 'e48M',
    '15' => 'e54M',
    '16' => 'eXR0M5',
    '17' => 'eXR1M',
    '18' => 'eXR2M',
    '19' => 'eXR3M',
    '20' => 'eT12M',
    '21' => 'eT18M',
    '22' => 'eT24M',
    '23' => 'eT36M',
    '24' => 'eT48M',
    '25' => 'eT72M',
    '26' => 'eT96M',
    '27' => 'eT108M',
    '28' => 'eHT1S6M5',
    '29' => 'eHT1S13M',
    '30' => 'eHT1S19M5',
    '31' => 'eHT1S26M',
    '32' => 'eHT1S39M',
    '33' => 'eHT1S52M',
    '34' => 'eHT1S58M5',
    '35' => 'eHT1S65M',
    '36' => 'eHT2S13M',
    '37' => 'eHT2S26M',
    '38' => 'eHT2S39M',
    '39' => 'eHT2S52M',
    '40' => 'eHT2S78M',
    '41' => 'eHT2S104M',
    '42' => 'eHT2S117M',
    '43' => 'eHT2S130M',
    '44' => 'eHT3S19M5',
    '45' => 'eHT3S39M',
    '46' => 'eHT3S58M5',
    '47' => 'eHT3S78M',
    '48' => 'eHT3S117M',
    '49' => 'eHT3S156M',
    '50' => 'eHT3S175M5',
    '51' => 'eHT3S195M',
  },
  lcsStatusWlanStationTableEntryPowerSaving => {
    '0' => 'eUnknown',
    '1' => 'eInactive',
    '2' => 'eActive',
  },
  lcsSetupUtmCfProfCatProfEntryEducation => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsStatusWlanMngmtWlcTunnelsWlcConnectionsEntryResult => {
    '0' => 'eSuccess',
    '1' => 'eFailure',
    '2' => 'eSuccessNat',
    '3' => 'eJoinFailUnspecified',
    '4' => 'eJoinFailResourceDepletion',
    '5' => 'eJoinFailUnknwnSrc',
    '6' => 'eJoinFailIncorrectData',
    '7' => 'eJoinFailSessionIdInUse',
    '8' => 'eJoinFailWtpNotSupported',
    '9' => 'eJoinFailBindingNotSupp',
    '10' => 'eResetFailUnableToReset',
    '11' => 'eResetFailFirmwWriteErr',
    '12' => 'eConfigurationErrorServProvAnyhow',
    '13' => 'eConfigurationErrorServNotProv',
    '14' => 'eImageDataErrorChecksum',
    '15' => 'eImageDataErrorLength',
    '16' => 'eImageDataErrorOther',
    '17' => 'eImageDataErrorAlrPresent',
    '18' => 'eMessageUnexpectedInvalid',
    '19' => 'eMessageUnexpectedUnrecognized',
    '20' => 'eFailMissingMandMsgElem',
    '21' => 'eFailUnrecognizedMsgElem',
    '300' => 'eUnsupportedLoaderVersion',
    '301' => 'eUnsupportedFirmwareVersion',
    '303' => 'eJoinFailAlreadyConnected',
  },
  lcsSetupTcpIpNonLocArpReplies => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusVpnConnectionsEntryState => {
    '0' => 'eInit',
    '1' => 'eSetupWan',
    '2' => 'eReady',
    '3' => 'eWaitForCb',
    '4' => 'eDial',
    '5' => 'eIncomingCall',
    '6' => 'eProtocol',
    '7' => 'eConnection',
    '8' => 'eDisconnecting',
    '9' => 'eCallBack',
    '10' => 'eBundleConnect',
    '11' => 'eProtocol2',
    '12' => 'eReserved',
    '13' => 'eBundle',
  },
  lcsStatusWlanMngmtApConfNetwprofilsEntryShortGuardInterval => {
    '0' => 'eAuto',
    '1' => 'eNo',
  },
  lcsSetupWanProtect => {
    '0' => 'eNone',
    '2' => 'eNumber',
    '4' => 'eScreened',
  },
  lcsSetupUtmCfProfCatProfEntrySports => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupUtmCfProfCatProfEntryReligionSpirituality => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupEchoServerOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupEchoServerAccessTableEntryActive => {
    '0' => 'eYes',
    '1' => 'eNo',
  },
  lcsSetupWanLayerEntryLay3 => {
    '4' => 'ePpp',
    '5' => 'eAppp',
    '6' => 'eScppp',
    '7' => 'eScappp',
    '8' => 'eSctrans',
    '9' => 'eDhcp',
    '255' => 'eTRANS',
  },
  lcsStatusWlanStationTableEntry20mhzRequested => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusIsdnSignalingLayer2LapdEntryL2Activation => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanStationTableEntryShortPreamble => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusVlanPortTableEntryTaggingMode => {
    '0' => 'eIngressMixed',
    '1' => 'eNever',
    '2' => 'eMixed',
    '3' => 'eAlways',
  },
  lcsSetupWlanMngmtRadiusServerEntryType => {
    '1' => 'eAccount',
    '2' => 'eAccess',
    '3' => 'eBackupAccount',
    '4' => 'eBackupAccess',
  },
  lcsStatusWlanScanResultsEntryShortSlotTime => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanMngmtApConfRadioprofilsEntryQos => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanWlanParameterEntryAesSupport => {
    '0' => 'eNo',
    '1' => 'eOcb',
    '2' => 'eCcm',
    '3' => 'eOcbPlusCcm',
  },
  lcsSetupAccountingAccountingListEntryConnType => {
    '0' => 'eUnknown',
    '1' => 'eDialUp',
    '2' => 'eLeasedLine',
    '4' => 'eDslLine',
    '7' => 'eVpnConn',
    '8' => 'ePptpConn',
  },
  lcsSetupComPortsCOMPortServCOMPortSetEntryHandshake => {
    '0' => 'eNone',
    '1' => 'eRtsCts',
  },
  lcsSetupInterfacesWlanNetworkEntryIfc => {
    '1' => 'eWlan1',
    '2' => 'eWlan2',
    '16' => 'eWlan12',
    '17' => 'eWlan13',
    '18' => 'eWlan14',
    '19' => 'eWlan15',
    '20' => 'eWlan16',
    '21' => 'eWlan17',
    '22' => 'eWlan18',
    '32' => 'eWlan22',
    '33' => 'eWlan23',
    '34' => 'eWlan24',
    '35' => 'eWlan25',
    '36' => 'eWlan26',
    '37' => 'eWlan27',
    '38' => 'eWlan28',
  },
  lcsStatusIsdnSignalingLayer2LapdEntryChannel => {
    '1' => 'e11',
    '2' => 'e12',
  },
  lcsSetupLancapiPriorityListEntryIfc => {
    '1' => 'eS01',
  },
  lcsStatusVdslStandard => {
    '0' => 'eOff',
    '2' => 'eT1dot413',
    '3' => 'eGdotLite',
    '4' => 'eGdotDMT',
    '21' => 'eAdsl2',
    '22' => 'eAdsl2plus',
    '31' => 'eAdsl2AnnexM',
    '32' => 'eAdsl2plusAnnexM',
    '33' => 'eAdsl2AnnexI',
    '34' => 'eAdsl2plusAnnexI',
    '35' => 'eAdsl2AnnexJ',
    '36' => 'eAdsl2plusAnnexJ',
    '37' => 'eAdsl2AnnexL',
    '40' => 'eVdsl2',
    '54' => 'eAdsl2Lite',
    '255' => 'eUnknown',
  },
  lcsSetupAccountingSortBy => {
    '0' => 'eTime',
    '1' => 'eData',
  },
  lcsSetupVlanPortTableEntryTaggingMode => {
    '0' => 'eIngressMixed',
    '1' => 'eNever',
    '2' => 'eMixed',
    '3' => 'eAlways',
  },
  lcsSetupAutoldNetworkConfigCondition => {
    '0' => 'eUnconditionally',
    '1' => 'eIfDifferent',
  },
  lcsSetupTimeTimezone => {
    '0' => 'e0',
    '1' => 'eplus1',
    '2' => 'eplus2',
    '3' => 'eplus3',
    '4' => 'eplus4',
    '5' => 'eplus5',
    '6' => 'eplus6',
    '7' => 'eplus7',
    '8' => 'eplus8',
    '9' => 'eplus9',
    '10' => 'eplus10',
    '11' => 'eplus11',
    '12' => 'eplus12',
    '13' => 'eplus13',
    '14' => 'eplus14',
    '244' => 'eminus12',
    '245' => 'eminus11',
    '246' => 'eminus10',
    '247' => 'eminus9',
    '248' => 'eminus8',
    '249' => 'eminus7',
    '250' => 'eminus6',
    '251' => 'eminus5',
    '252' => 'eminus4',
    '253' => 'eminus3',
    '254' => 'eminus2',
    '255' => 'eminus1',
  },
  lcsSetupInterfacesWlanRadioSettingsEntryIfc => {
    '1' => 'eWlan1',
    '2' => 'eWlan2',
  },
  lcsStatusVdslLineState => {
    '0' => 'eUnknown',
    '1' => 'eDown',
    '2' => 'eIdle',
    '3' => 'eHandshake',
    '4' => 'eTraining',
    '5' => 'eShowtime',
  },
  lcsSetupConfigResetButton => {
    '0' => 'eIgnore',
    '1' => 'eBootOnly',
    '2' => 'eResetOrBoot',
  },
  lcsSetupComPortsCOMPortServCOMPortSetEntryBitRate => {
    '110' => 'e110',
    '300' => 'e300',
    '600' => 'e600',
    '1200' => 'e1200',
    '2400' => 'e2400',
    '4800' => 'e4800',
    '9600' => 'e9600',
    '19200' => 'e19200',
    '38400' => 'e38400',
    '57600' => 'e57600',
    '115200' => 'e115200',
    '125000' => 'e125000',
    '230400' => 'e230400',
  },
  lcsSetupComPortsCOMPortServOperEntryOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanMngmtApConfNetwprofilsEntryBasicRate => {
    '0' => 'e2M',
    '1' => 'e1M',
    '3' => 'e5M5',
    '4' => 'e11M',
    '5' => 'e6M',
    '6' => 'e9M',
    '7' => 'e12M',
    '8' => 'e18M',
    '9' => 'e24M',
    '10' => 'e36M',
    '11' => 'e48M',
    '12' => 'e54M',
    '13' => 'eT72M',
    '14' => 'eT96M',
    '15' => 'eT108M',
  },
  lcsStatusWlanMngmtStationTableEntryInterface => {
    '0' => 'eWlan1',
    '1' => 'eWlan2',
    '2' => 'eWlan3',
    '3' => 'eWlan4',
  },
  lcsSetupEchoServerAccessTableEntryProtokoll => {
    '0' => 'eNone',
    '1' => 'eTcp',
    '2' => 'eUdp',
    '3' => 'eTcpPlusUdp',
  },
  lcsSetupIpRouterFirewallRulesEntryFirewallRule => {
    '0' => 'eYes',
    '1' => 'eNo',
  },
  lcsSetupTacacsPlusAuthentication => {
    '0' => 'eDeactivated',
    '1' => 'eActivated',
  },
  lcsStatusComPortsComPortServerConnEntryDeviceType => {
    '1' => 'eOutband',
    '33' => 'eBelkinF5u103',
    '34' => 'eProlific2303',
    '35' => 'eFtdi8u232am',
    '36' => 'eGpsNmea',
    '45' => 'eQualcomDm',
  },
  lcsStatusWlanStationTableEntry40mhzIntolerant => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusPptpConnectionsEntryLastError => {
    '0' => 'eNone',
    '267' => 'eRemoteDoubled',
    '275' => 'eIcmpConnError',
    '277' => 'eDhcpTimeout',
    '278' => 'ePptpNoResponse',
    '279' => 'eVpnNoResponse',
    '280' => 'eArpNoResponse',
    '513' => 'ePptpNoChannel',
    '514' => 'ePptpBadFormat',
    '515' => 'ePptpBadValue',
    '516' => 'ePptpNoRessource',
    '517' => 'ePptpBadCallId',
    '518' => 'ePptpGenError',
    '519' => 'ePptpNoAddress',
    '520' => 'ePptpDnsResolvError',
    '521' => 'ePptpTcpConnError',
    '17153' => 'eRemoteDisconnected',
    '17154' => 'eManualDisconnect',
    '17155' => 'eShortholdExpired',
    '17156' => 'ePhysicalDisconnected',
    '17157' => 'eInvalidPhysicalChannel',
    '17158' => 'eDynamicVpnReconnect',
    '17159' => 'eConfigurationChanged',
    '17160' => 'eRemovedFromConfig',
    '32768' => 'eLcpRejected',
    '32769' => 'eAuthError',
    '32770' => 'eAuthRejected',
    '32771' => 'eLcpConnError',
    '32784' => 'ePapRejected',
    '32785' => 'ePapRxTimeout',
    '32786' => 'ePapTxTimeout',
    '32787' => 'eWrongPapReq',
    '32788' => 'ePapNakReceived',
    '32789' => 'eUnknPapPeer',
    '32800' => 'eChapRejected',
    '32801' => 'eChapRxTimeout',
    '32802' => 'eChapTxTimeout',
    '32803' => 'eWrongChapResp',
    '32804' => 'eChapFailRecvd',
    '32805' => 'eUnknChapPeer',
    '32816' => 'eIpxcpRejected',
    '32817' => 'eWrongIpxcpNet',
    '32818' => 'eIpxcpNetReject',
    '32819' => 'eIpxcpRouteUnkn',
    '32832' => 'eIpcpRejected',
    '32848' => 'eCcpRejected',
    '33008' => 'eNoNcpAvailable',
  },
  lcsSetupUtmCfProfCatProfEntryCommunicationServices => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupCertsScepCaOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupIpRouterRipWanSitesEntryRipType => {
    '0' => 'eOff',
    '1' => 'eRip1',
    '2' => 'eR1Comp',
    '3' => 'eRip2',
  },
  lcsSetupWlanMngmtApConfNetwprofilsEntryMinHtMcs => {
    '0' => 'eAuto',
    '1' => 'eMcs08',
    '2' => 'eMcs19',
    '3' => 'eMcs210',
    '4' => 'eMcs311',
    '5' => 'eMcs412',
    '6' => 'eMcs513',
    '7' => 'eMcs614',
    '8' => 'eMcs715',
  },
  lcsStatusTcpIpNetworkListEntryType => {
    '0' => 'eDisabled',
    '1' => 'eIntranet',
    '2' => 'eDmz',
  },
  lcsSetupWanActionTableEntryActive => {
    '0' => 'eYes',
    '1' => 'eNo',
  },
  lcsSetupWlanSigAvrgMeth => {
    '0' => 'eStd',
    '1' => 'eFilt',
  },
  lcsSetupLancapiInterfaceListEntryIfc => {
    '1' => 'eS01',
  },
  lcsSetupUtmCfProfCatProfEntryNewsMagazines => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupNtpServerOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanClientConnectionRejectsEntryInterface => {
    '1' => 'eWlan1',
    '2' => 'eWlan2',
  },
  lcsStatusAccountingLastSnapshotEntryConnType => {
    '0' => 'eUnknown',
    '1' => 'eDialUp',
    '2' => 'eLeasedLine',
    '4' => 'eDslLine',
    '7' => 'eVpnConn',
    '8' => 'ePptpConn',
  },
  lcsStatusLanInterfacesEntryRemoteFault => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupTacacsPlusSnmpGetRequestsAccounting => {
    '0' => 'eOnlyForSetupTree',
    '1' => 'eAll',
    '2' => 'eNone',
  },
  lcsSetupWlanRateAdaptionInitialRate => {
    '0' => 'eMinimum',
    '1' => 'eRssiDerived',
  },
  lcsSetupWlanNoiseOffsetsEntryInterface => {
    '1' => 'eWlan1',
    '2' => 'eWlan2',
  },
  lcsSetupInterfacesS0EntryMaxInCalls => {
    '0' => 'eTwo',
    '1' => 'eOne',
    '2' => 'eZero',
  },
  lcsSetupUtmCfProfCatProfEntryGeneralBusiness => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsStatusWlanMngmtApConfApsEntryAllow40mhz => {
    '0' => 'eAuto',
    '1' => 'eNo',
  },
  lcsSetupInterfacesWlanRoamingEntrySoftRoaming => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWlanMngmtApConfApsEntryAntennaMask => {
    '0' => 'eAuto',
    '1' => 'eAntenna1',
    '3' => 'eAntenna1Plus2',
    '5' => 'eAntenna1Plus3',
    '7' => 'eAntenna1Plus2Plus3',
  },
  lcsSetupIpRouterWanTagCreation => {
    '0' => 'eManual',
    '1' => 'eAuto',
  },
  lcsStatusDslolDslolCatchDhcp => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusEthernetPortsPortsEntryRemoteFault => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusVpnConnectionsEntryMode => {
    '0' => 'ePassive',
    '128' => 'eActive',
  },
  lcsSetupNetbiosSupportBrowsing => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWanErrorsEntryIfc => {
    '257' => 'eCh01',
    '258' => 'eCh02',
    '513' => 'eModem',
    '2049' => 'eDslCh1',
    '2050' => 'eDslCh2',
    '2051' => 'eDslCh3',
    '2052' => 'eDslCh4',
    '2053' => 'eDslCh5',
    '2054' => 'eDslCh6',
    '2055' => 'eDslCh7',
    '2056' => 'eDslCh8',
    '8193' => 'eAdsl1',
    '8194' => 'eAdsl2',
    '8195' => 'eAdsl3',
    '8196' => 'eAdsl4',
    '8197' => 'eAdsl5',
    '8198' => 'eAdsl6',
    '8199' => 'eAdsl7',
    '8200' => 'eAdsl8',
    '16385' => 'eVdsl1',
    '16386' => 'eVdsl2',
    '16387' => 'eVdsl3',
    '16388' => 'eVdsl4',
    '16389' => 'eVdsl5',
    '16390' => 'eVdsl6',
    '16391' => 'eVdsl7',
    '16392' => 'eVdsl8',
  },
  lcsStatusIpRouterRipWanSitesEntryRfc2091 => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusIpRouterRipDynWanSitesEntryPoisonedReverse => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusConfigDownloadStatusLastOperationsEntryStatus => {
    '0' => 'eIdle',
    '1' => 'ePending',
    '2' => 'eSuccess',
    '3' => 'eFailure',
    '4' => 'eUnknown',
  },
  lcsStatusWtpMngmtNetwprofilsEntryMinHtMcs => {
    '0' => 'eAuto',
    '1' => 'eMcs08',
    '2' => 'eMcs19',
    '3' => 'eMcs210',
    '4' => 'eMcs311',
    '5' => 'eMcs412',
    '6' => 'eMcs513',
    '7' => 'eMcs614',
    '8' => 'eMcs715',
  },
  lcsSetupIpRouterRipLanSitesEntryRipType => {
    '0' => 'eOff',
    '1' => 'eRip1',
    '2' => 'eR1Comp',
    '3' => 'eRip2',
  },
  lcsStatusWtpMngmtNetwprofilsEntryRadiusAccounting => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusIpRouterLoadBalancerConnectionsEntryState => {
    '2' => 'eReady',
    '7' => 'eConnection',
    '8' => 'eDisconnecting',
  },
  lcsSetupWanLayerEntryLay1 => {
    '0' => 'eHdlc64k',
    '1' => 'eHdlc56k',
    '2' => 'eAdsl',
    '3' => 'eV1109k6',
    '4' => 'eEth',
    '6' => 'eSerial',
    '9' => 'eVdsl',
    '67' => 'eV11019k2',
    '131' => 'eV11038k4',
  },
  lcsStatusWlanMngmtControllerState => {
    '0' => 'eUnknown',
    '1' => 'eInitScepClient',
    '2' => 'eCertReqSent',
    '3' => 'eReady',
    '4' => 'eTimeNotSet',
    '5' => 'eNoRandom',
  },
  lcsSetupWlanRadiusAccountingProtocol => {
    '0' => 'eRadius',
    '1' => 'eRadsec',
  },
  lcsSetupTimeDstClockChangesEntryIndex => {
    '1' => 'eFirst',
    '2' => 'eSecond',
    '3' => 'eThird',
    '4' => 'eFourth',
    '252' => 'e4Last',
    '253' => 'e3Last',
    '254' => 'e2Last',
    '255' => 'eLast',
  },
  lcsSetupInterfacesWlanPerformanceEntryIfc => {
    '1' => 'eWlan1',
    '2' => 'eWlan2',
  },
  lcsStatusComPortsComPortServerByteCountersEntryDeviceType => {
    '1' => 'eOutband',
    '33' => 'eBelkinF5u103',
    '34' => 'eProlific2303',
    '35' => 'eFtdi8u232am',
    '36' => 'eGpsNmea',
    '45' => 'eQualcomDm',
  },
  lcsStatusWlanChannelScanResultsEntry108mbpsMode => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusPptpConnectionsEntryEncryption => {
    '0' => 'eOff',
    '64' => 'e128Bits',
    '192' => 'e56Bits',
    '224' => 'e40Bits',
  },
  lcsSetupTacacsPlusSnmpGetRequestsAuthorisation => {
    '0' => 'eOnlyForSetupTree',
    '1' => 'eAll',
    '2' => 'eNone',
  },
  lcsStatusLanCableTestResultsEntryMdi1Status => {
    '0' => 'eUnknown',
    '1' => 'eOk',
    '2' => 'eOpen',
    '3' => 'eShort',
    '4' => 'eImpedanceFault',
    '5' => 'eFail',
    '6' => 'eBusy',
  },
  lcsStatusWlanStationTableEntryQos => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWlanMngmtApConfNetwprofilsEntryVlanMode => {
    '0' => 'eUntagged',
    '1' => 'eTagged',
  },
  lcsStatusTimeDstClockChangesEntryDay => {
    '0' => 'eSunday',
    '1' => 'eMonday',
    '2' => 'eTuesday',
    '3' => 'eWednesday',
    '4' => 'eThursday',
    '5' => 'eFriday',
    '6' => 'eSaturday',
  },
  lcsStatusWlanInterpointsKeyListEntrySource => {
    '0' => 'eNone',
    '1' => 'eStatic',
    '2' => 'eDynamic',
  },
  lcsSetupUtmCfGlobalSettingsNotificationEntryCause => {
    '1' => 'eSpamMail',
    '2' => 'ePhishingMail',
    '3' => 'eUpdate',
    '4' => 'eInfected',
    '5' => 'eBlockedUrl',
    '6' => 'eError',
    '7' => 'eLicenseExpired',
    '8' => 'eLicenseExceeded',
    '9' => 'eOverride',
    '10' => 'eProxyLimit',
  },
  lcsStatusWlanSeenClientsEntryInterface => {
    '0' => 'eWlan1',
    '1' => 'eWlan2',
    '2' => 'eWlan3',
    '3' => 'eWlan4',
  },
  lcsSetupUtmCfProfCatProfEntryMobileTelephony => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupUtmCfProfCatProfEntryVehicles => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupIpRouterRoutingMethodSynAckSpeedup => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWtpMngmtApConnectionsEntryDscpForControlPackets => {
    '0' => 'eBestEffort',
    '40' => 'eAssuredForwarding11',
    '48' => 'eAssuredForwarding12',
    '56' => 'eAssuredForwarding13',
    '72' => 'eAssuredForwarding21',
    '80' => 'eAssuredForwarding22',
    '88' => 'eAssuredForwarding23',
    '104' => 'eAssuredForwarding31',
    '112' => 'eAssuredForwarding32',
    '120' => 'eAssuredForwarding33',
    '136' => 'eAssuredForwarding41',
    '144' => 'eAssuredForwarding42',
    '152' => 'eAssuredForwarding43',
    '184' => 'eExpeditedForwarding',
  },
  lcsStatusConnectionEntryIfc => {
    '257' => 'eCh01',
    '258' => 'eCh02',
    '513' => 'eModem',
    '2049' => 'eDslCh1',
    '2050' => 'eDslCh2',
    '2051' => 'eDslCh3',
    '2052' => 'eDslCh4',
    '2053' => 'eDslCh5',
    '2054' => 'eDslCh6',
    '2055' => 'eDslCh7',
    '2056' => 'eDslCh8',
    '8193' => 'eAdsl1',
    '8194' => 'eAdsl2',
    '8195' => 'eAdsl3',
    '8196' => 'eAdsl4',
    '8197' => 'eAdsl5',
    '8198' => 'eAdsl6',
    '8199' => 'eAdsl7',
    '8200' => 'eAdsl8',
    '16385' => 'eVdsl1',
    '16386' => 'eVdsl2',
    '16387' => 'eVdsl3',
    '16388' => 'eVdsl4',
    '16389' => 'eVdsl5',
    '16390' => 'eVdsl6',
    '16391' => 'eVdsl7',
    '16392' => 'eVdsl8',
  },
  lcsSetupWlanMngmtApConfNetwprofilsEntryWpa1SessionKeytypes => {
    '0' => 'eTkipAes',
    '1' => 'eAes',
    '2' => 'eTkip',
  },
  lcsStatusIsdnPcmSwitchPcmConnectionEntryType => {
    '0' => 'eFifo',
    '1' => 'ePcmTs',
  },
  lcsStatusWlanClientIfcsEntryTxRate => {
    '0' => 'eUnknown',
    '1' => 'e1M',
    '2' => 'e2M',
    '3' => 'e5M',
    '4' => 'e5M5',
    '5' => 'e8M',
    '6' => 'e11M',
    '8' => 'e6M',
    '9' => 'e9M',
    '10' => 'e12M',
    '11' => 'e18M',
    '12' => 'e24M',
    '13' => 'e36M',
    '14' => 'e48M',
    '15' => 'e54M',
    '28' => 'eHT1S6M5',
    '29' => 'eHT1S13M',
    '30' => 'eHT1S19M5',
    '31' => 'eHT1S26M',
    '32' => 'eHT1S39M',
    '33' => 'eHT1S52M',
    '34' => 'eHT1S58M5',
    '35' => 'eHT1S65M',
    '36' => 'eHT2S13M',
    '37' => 'eHT2S26M',
    '38' => 'eHT2S39M',
    '39' => 'eHT2S52M',
    '40' => 'eHT2S78M',
    '41' => 'eHT2S104M',
    '42' => 'eHT2S117M',
    '43' => 'eHT2S130M',
    '44' => 'eHT3S19M5',
    '45' => 'eHT3S39M',
    '46' => 'eHT3S58M5',
    '47' => 'eHT3S78M',
    '48' => 'eHT3S117M',
    '49' => 'eHT3S156M',
    '50' => 'eHT3S175M5',
    '51' => 'eHT3S195M',
  },
  lcsStatusTcpIpNetworkListEntryInterface => {
    '256' => 'eLan1',
    '257' => 'eLan2',
    '258' => 'eLan3',
    '259' => 'eLan4',
    '260' => 'eLan5',
    '512' => 'eWlan1',
    '513' => 'eWlan2',
    '768' => 'eP2p11',
    '769' => 'eP2p12',
    '770' => 'eP2p13',
    '771' => 'eP2p14',
    '772' => 'eP2p15',
    '773' => 'eP2p16',
    '774' => 'eP2p21',
    '775' => 'eP2p22',
    '776' => 'eP2p23',
    '777' => 'eP2p24',
    '778' => 'eP2p25',
    '779' => 'eP2p26',
    '799' => 'eP2p17',
    '800' => 'eP2p18',
    '801' => 'eP2p19',
    '802' => 'eP2p110',
    '803' => 'eP2p111',
    '804' => 'eP2p112',
    '805' => 'eP2p113',
    '806' => 'eP2p114',
    '807' => 'eP2p115',
    '808' => 'eP2p116',
    '831' => 'eP2p27',
    '832' => 'eP2p28',
    '833' => 'eP2p29',
    '834' => 'eP2p210',
    '835' => 'eP2p211',
    '836' => 'eP2p212',
    '837' => 'eP2p213',
    '838' => 'eP2p214',
    '839' => 'eP2p215',
    '840' => 'eP2p216',
    '1024' => 'eWlan12',
    '1025' => 'eWlan13',
    '1026' => 'eWlan14',
    '1027' => 'eWlan15',
    '1028' => 'eWlan16',
    '1029' => 'eWlan17',
    '1030' => 'eWlan18',
    '1031' => 'eWlan22',
    '1032' => 'eWlan23',
    '1033' => 'eWlan24',
    '1034' => 'eWlan25',
    '1035' => 'eWlan26',
    '1036' => 'eWlan27',
    '1037' => 'eWlan28',
    '1536' => 'eBrg1',
    '1537' => 'eBrg2',
    '1538' => 'eBrg3',
    '1539' => 'eBrg4',
    '1540' => 'eBrg5',
    '1541' => 'eBrg6',
    '1542' => 'eBrg7',
    '1543' => 'eBrg8',
    '1792' => 'eWlcTunnel1',
    '1793' => 'eWlcTunnel2',
    '1794' => 'eWlcTunnel3',
    '1795' => 'eWlcTunnel4',
    '1796' => 'eWlcTunnel5',
    '1797' => 'eWlcTunnel6',
    '1798' => 'eWlcTunnel7',
    '1799' => 'eWlcTunnel8',
    '1800' => 'eWlcTunnel9',
    '1801' => 'eWlcTunnel10',
    '1802' => 'eWlcTunnel11',
    '1803' => 'eWlcTunnel12',
    '1804' => 'eWlcTunnel13',
    '1805' => 'eWlcTunnel14',
    '1806' => 'eWlcTunnel15',
    '1807' => 'eWlcTunnel16',
    '1808' => 'eWlcTunnel17',
    '1809' => 'eWlcTunnel18',
    '1810' => 'eWlcTunnel19',
    '1811' => 'eWlcTunnel20',
    '1812' => 'eWlcTunnel21',
    '1813' => 'eWlcTunnel22',
    '1814' => 'eWlcTunnel23',
    '1815' => 'eWlcTunnel24',
    '1816' => 'eWlcTunnel25',
    '1817' => 'eWlcTunnel26',
    '1818' => 'eWlcTunnel27',
    '1819' => 'eWlcTunnel28',
    '1820' => 'eWlcTunnel29',
    '1821' => 'eWlcTunnel30',
    '1822' => 'eWlcTunnel31',
    '1823' => 'eWlcTunnel32',
    '65535' => 'eAny',
  },
  lcsSetupVpnProposalsIkeEntryIkeCryptAlg => {
    '1' => 'eDesCbc',
    '3' => 'eBlowfishCbc',
    '5' => 'e3desCbc',
    '6' => 'eCast128Cbc',
    '7' => 'eAesCbc',
    '42' => 'eNull',
  },
  lcsSetupComPortsCOMPortServNetwSetEntryBinaryMode => {
    '0' => 'eAuto',
    '1' => 'eYes',
    '2' => 'eNo',
  },
  lcsStatusComPortsDevEntryDeviceType => {
    '1' => 'eOutband',
    '2' => 'eOutbandModem',
    '11' => 'eSierraMinicard8780',
    '12' => 'eSierraMinicard8781',
    '17' => 'eOptionIcon',
    '19' => 'eOptionMinicard0201',
    '21' => 'eHuaweiE612E630E1750',
    '23' => 'e4gSystemsUxs1',
    '26' => 'eNovatelMerlinMc950d',
    '30' => 'eSierraAircard875u',
    '31' => 'eHuaweiE172E220E870',
    '33' => 'eBelkinF5u103',
    '34' => 'eProlific2303',
    '35' => 'eFtdi8u232am',
    '36' => 'eGpsNmea',
    '38' => 'eSierraMinicard8790',
    '39' => 'eSierraCompass885',
    '45' => 'eQualcomDm',
    '46' => 'eSierraAircard501',
    '49' => 'eHuaweiK4505',
    '51' => 'eHuaweiK3765',
    '53' => 'eSierraDirectIp',
    '54' => 'eHuaweiE182',
    '55' => 'eSierraMinicard8705',
    '56' => 'eSierraMinicard8801',
    '57' => 'eHuaweiE1750',
    '59' => 'eNokiaCs19',
    '60' => 'eHuaweiE398',
    '61' => 'eHuaweiE1550',
    '62' => 'eSierraMinicard7710',
  },
  lcsStatusWlanCompetingNetworksEntry40mhzIntolerant => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupCertsCrlsCrlOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanMngmtStationTableEntryKeyType => {
    '0' => 'eNone',
    '1' => 'eUnknown',
    '5' => 'eWep40Bits',
    '13' => 'eWep104Bits',
    '16' => 'eWep128Bits',
    '64' => 'eTkip',
    '65' => 'eAesOcb',
    '66' => 'eAesCcm',
  },
  lcsSetupWlanMngmtWlcTunnelsWlcDiscoveryEntryActive => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusTcpIpNetbiosPeersEntryType => {
    '0' => 'eRouter',
    '1' => 'eWorkstation',
  },
  lcsStatusWlanMngmtApStatusNewApEntryConfiguration => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupLanBridgeSpanningTreeProtocolVersion => {
    '0' => 'eClassic',
    '1' => 'eRapid',
  },
  lcsStatusModemMobileTemperatureStatus => {
    '0' => 'eUnknown',
    '1' => 'eNormal',
    '2' => 'eLow',
    '3' => 'eHigh',
    '5' => 'eLowCritical',
    '6' => 'eHighCritical',
  },
  lcsStatusConfigAntiTheftProtectionIncomingCall => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupVpnProposalsIpsecEntryEspCryptAlg => {
    '0' => 'eNone',
    '2' => 'eDesCbc',
    '3' => 'e3desCbc',
    '6' => 'eCast128Cbc',
    '7' => 'eBlowfishCbc',
    '11' => 'eNull',
    '12' => 'eAesCbc',
  },
  lcsSetupConfigAccessTableEntryHttp => {
    '0' => 'eNo',
    '1' => 'eYes',
    '4' => 'eRead',
    '16' => 'eVpn',
  },
  lcsSetupUtmCfProfCatProfEntryCitiesRegionsCountries => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsStatusIeee8021xStationTableEntryPortMode => {
    '0' => 'eForceUnauth',
    '1' => 'eForceAuth',
    '2' => 'eAuto',
  },
  lcsStatusWlanScanResultsEntry40mhzIntolerant => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupUsbFirmwareAndLoader => {
    '1' => 'eInactive',
    '2' => 'eIfUnconfigured',
    '3' => 'eActive',
  },
  lcsStatusWlanGroupEncryptionKeysEntrySource => {
    '0' => 'eNone',
    '1' => 'eStatic',
    '2' => 'eDynamic',
  },
  lcsSetupInterfacesWlanRadioSettingsEntryForce40mhz => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWlanAllowIllegalAssociationWithoutAuthentication => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupPublicSpotModuleAddUserWizardDefaultRuntimeEntryUnit => {
    '0' => 'eHourS',
    '1' => 'eDayS',
    '2' => 'eMinuteS',
  },
  lcsStatusWtpMngmtNetwprofilsEntrySsidBroadcast => {
    '0' => 'eYes',
    '1' => 'eNo',
  },
  lcsSetupIpRouterLoadBalancerOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusModemMobileRegistration => {
    '0' => 'eNoNetwork',
    '1' => 'eHomeNetwork',
    '2' => 'eSearching',
    '3' => 'eDenied',
    '4' => 'eUnknown',
    '5' => 'eRoaming',
  },
  lcsSetupComPortsWanDevEntryOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusVdslAdvancedLineState => {
    '0' => 'eUnknown',
    '1' => 'eDown',
    '2' => 'eIdle',
    '3' => 'eHandshake',
    '4' => 'eTraining',
    '5' => 'eShowtime',
  },
  lcsSetupIpRouterVrrpOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusVlanPortTableEntryAllowAllVlans => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWtpMngmtNetwprofilsEntryClBrgSupport => {
    '0' => 'eNo',
    '1' => 'eYes',
    '2' => 'eExclusive',
  },
  lcsStatusWlanStationTableEntry40mhzCoexistence => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWanRadiusOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
    '2' => 'eExclusive',
  },
  lcsSetupVpnAdditionalGatewaysEntryBeginWith => {
    '0' => 'eLastUsed',
    '1' => 'eFirst',
    '2' => 'eRandom',
  },
  lcsSetupPrinterPrinterEntryBidirectional => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusTimeDaylightSavingTime => {
    '0' => 'eNo',
    '1' => 'eYes',
    '2' => 'eEuropeEu',
    '3' => 'eRussia',
    '4' => 'eUsa',
    '255' => 'eUserDefined',
  },
  lcsStatusIpRouterVrrpVirtualRouterEntryPort => {
    '256' => 'eLan1',
    '257' => 'eLan2',
    '258' => 'eLan3',
    '259' => 'eLan4',
    '260' => 'eLan5',
    '512' => 'eWlan1',
    '513' => 'eWlan2',
    '768' => 'eP2p11',
    '769' => 'eP2p12',
    '770' => 'eP2p13',
    '771' => 'eP2p14',
    '772' => 'eP2p15',
    '773' => 'eP2p16',
    '774' => 'eP2p21',
    '775' => 'eP2p22',
    '776' => 'eP2p23',
    '777' => 'eP2p24',
    '778' => 'eP2p25',
    '779' => 'eP2p26',
    '799' => 'eP2p17',
    '800' => 'eP2p18',
    '801' => 'eP2p19',
    '802' => 'eP2p110',
    '803' => 'eP2p111',
    '804' => 'eP2p112',
    '805' => 'eP2p113',
    '806' => 'eP2p114',
    '807' => 'eP2p115',
    '808' => 'eP2p116',
    '831' => 'eP2p27',
    '832' => 'eP2p28',
    '833' => 'eP2p29',
    '834' => 'eP2p210',
    '835' => 'eP2p211',
    '836' => 'eP2p212',
    '837' => 'eP2p213',
    '838' => 'eP2p214',
    '839' => 'eP2p215',
    '840' => 'eP2p216',
    '1024' => 'eWlan12',
    '1025' => 'eWlan13',
    '1026' => 'eWlan14',
    '1027' => 'eWlan15',
    '1028' => 'eWlan16',
    '1029' => 'eWlan17',
    '1030' => 'eWlan18',
    '1031' => 'eWlan22',
    '1032' => 'eWlan23',
    '1033' => 'eWlan24',
    '1034' => 'eWlan25',
    '1035' => 'eWlan26',
    '1036' => 'eWlan27',
    '1037' => 'eWlan28',
    '1536' => 'eBrg1',
    '1537' => 'eBrg2',
    '1538' => 'eBrg3',
    '1539' => 'eBrg4',
    '1540' => 'eBrg5',
    '1541' => 'eBrg6',
    '1542' => 'eBrg7',
    '1543' => 'eBrg8',
    '1792' => 'eWlcTunnel1',
    '1793' => 'eWlcTunnel2',
    '1794' => 'eWlcTunnel3',
    '1795' => 'eWlcTunnel4',
    '1796' => 'eWlcTunnel5',
    '1797' => 'eWlcTunnel6',
    '1798' => 'eWlcTunnel7',
    '1799' => 'eWlcTunnel8',
    '1800' => 'eWlcTunnel9',
    '1801' => 'eWlcTunnel10',
    '1802' => 'eWlcTunnel11',
    '1803' => 'eWlcTunnel12',
    '1804' => 'eWlcTunnel13',
    '1805' => 'eWlcTunnel14',
    '1806' => 'eWlcTunnel15',
    '1807' => 'eWlcTunnel16',
    '1808' => 'eWlcTunnel17',
    '1809' => 'eWlcTunnel18',
    '1810' => 'eWlcTunnel19',
    '1811' => 'eWlcTunnel20',
    '1812' => 'eWlcTunnel21',
    '1813' => 'eWlcTunnel22',
    '1814' => 'eWlcTunnel23',
    '1815' => 'eWlcTunnel24',
    '1816' => 'eWlcTunnel25',
    '1817' => 'eWlcTunnel26',
    '1818' => 'eWlcTunnel27',
    '1819' => 'eWlcTunnel28',
    '1820' => 'eWlcTunnel29',
    '1821' => 'eWlcTunnel30',
    '1822' => 'eWlcTunnel31',
    '1823' => 'eWlcTunnel32',
    '65535' => 'eAny',
  },
  lcsStatusWlanCompetingNetworksEntry40mhzMode => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusConfigAntiTheftProtectionState => {
    '0' => 'eDisabled',
    '1' => 'eActive',
    '2' => 'eSuccessfull',
    '3' => 'eLocked',
  },
  lcsSetupComPortsDevEntryDeviceType => {
    '1' => 'eOutband',
    '11' => 'eSierraMinicard8780',
    '12' => 'eSierraMinicard8781',
    '17' => 'eOptionIcon',
    '19' => 'eOptionMinicard0201',
    '21' => 'eHuaweiE612E630E1750',
    '23' => 'e4gSystemsUxs1',
    '26' => 'eNovatelMerlinMc950d',
    '30' => 'eSierraAircard875u',
    '31' => 'eHuaweiE172E220E870',
    '33' => 'eBelkinF5u103',
    '34' => 'eProlific2303',
    '35' => 'eFtdi8u232am',
    '36' => 'eGpsNmea',
    '38' => 'eSierraMinicard8790',
    '39' => 'eSierraCompass885',
    '45' => 'eQualcomDm',
    '46' => 'eSierraAircard501',
    '49' => 'eHuaweiK4505',
    '51' => 'eHuaweiK3765',
    '53' => 'eSierraDirectIp',
    '54' => 'eHuaweiE182',
    '55' => 'eSierraMinicard8705',
    '56' => 'eSierraMinicard8801',
    '57' => 'eHuaweiE1750',
    '59' => 'eNokiaCs19',
    '60' => 'eHuaweiE398',
    '61' => 'eHuaweiE1550',
    '62' => 'eSierraMinicard7710',
  },
  lcsSetupInterfacesWlanTransmissionEntryEapolRate => {
    '0' => 'eLikeData',
    '1' => 'e1M',
    '2' => 'e2M',
    '4' => 'e5M5',
    '6' => 'e11M',
    '8' => 'e6M',
    '9' => 'e9M',
    '10' => 'e12M',
    '11' => 'e18M',
    '12' => 'e24M',
    '13' => 'e36M',
    '14' => 'e48M',
    '15' => 'e54M',
    '28' => 'eHT1S6M5',
    '29' => 'eHT1S13M',
    '30' => 'eHT1S19M5',
    '31' => 'eHT1S26M',
    '32' => 'eHT1S39M',
    '33' => 'eHT1S52M',
    '34' => 'eHT1S58M5',
    '35' => 'eHT1S65M',
    '36' => 'eHT2S13M',
    '37' => 'eHT2S26M',
    '38' => 'eHT2S39M',
    '39' => 'eHT2S52M',
    '40' => 'eHT2S78M',
    '41' => 'eHT2S104M',
    '42' => 'eHT2S117M',
    '43' => 'eHT2S130M',
  },
  lcsSetupInterfacesWlanOperationalEntryIfc => {
    '1' => 'eWlan1',
    '2' => 'eWlan2',
  },
  lcsStatusPppTxOptionsIpcpEntryIfc => {
    '257' => 'eCh01',
    '258' => 'eCh02',
    '513' => 'eModem',
    '2049' => 'eDslCh1',
    '2050' => 'eDslCh2',
    '2051' => 'eDslCh3',
    '2052' => 'eDslCh4',
    '2053' => 'eDslCh5',
    '2054' => 'eDslCh6',
    '2055' => 'eDslCh7',
    '2056' => 'eDslCh8',
    '8193' => 'eAdsl1',
    '8194' => 'eAdsl2',
    '8195' => 'eAdsl3',
    '8196' => 'eAdsl4',
    '8197' => 'eAdsl5',
    '8198' => 'eAdsl6',
    '8199' => 'eAdsl7',
    '8200' => 'eAdsl8',
    '16385' => 'eVdsl1',
    '16386' => 'eVdsl2',
    '16387' => 'eVdsl3',
    '16388' => 'eVdsl4',
    '16389' => 'eVdsl5',
    '16390' => 'eVdsl6',
    '16391' => 'eVdsl7',
    '16392' => 'eVdsl8',
  },
  lcsStatusTcpIpDhcpNetworkListEntryAdaption => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupUtmCfProfCatProfEntryAlcoholTobacco => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsStatusIpRouterActIpRoutingTabEntryMasquerade => {
    '0' => 'eNo',
    '1' => 'eOn',
    '2' => 'eIntranet',
    '255' => 'eUnknown',
  },
  lcsStatusWlanMngmtApConfApsEntryManageFirmware => {
    '0' => 'eYes',
    '1' => 'eNo',
  },
  lcsSetupIpRouter1NNatServiceTableEntryActive => {
    '0' => 'eYes',
    '1' => 'eNo',
  },
  lcsStatusComPortsDevEntryUsbDriver => {
    '1' => 'eUbsa',
    '2' => 'eUchcom',
    '3' => 'eUftdi',
    '4' => 'eUgensa',
    '5' => 'eUhmodem',
    '6' => 'eUkyopon',
    '7' => 'eUplcom',
    '8' => 'eUslsa',
  },
  lcsSetupAccountingOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanMngmtApConfApsEntryEncryption => {
    '0' => 'eDefault',
    '1' => 'eDtls',
    '2' => 'eNo',
  },
  lcsSetupPublicSpotModuleProviderTableEntryAuthServerProtocol => {
    '0' => 'eRadius',
    '1' => 'eRadsec',
  },
  lcsStatusChargingTimeTableEntryIfc => {
    '1' => 'eRouterDslBroadband',
    '2' => 'eRouterSerial',
    '3' => 'eLancapi',
    '4' => 'eAb1',
    '5' => 'eAb2',
    '6' => 'eAb3',
    '7' => 'eAb4',
    '255' => 'eTimeModul',
  },
  lcsSetupInterfacesWlanRadioSettingsEntry24ghzMode => {
    '0' => 'e11bgMixed',
    '1' => 'e11gOnly',
    '2' => 'e11bOnly',
    '3' => 'e2mMixed',
    '5' => 'e11bgnMixed',
    '6' => 'e2m11bgnMixed',
    '7' => 'e11gnMixed',
    '8' => 'eGreenfield',
  },
  lcsSetupCertsScepCaEncryptionAlgorithm => {
    '0' => 'eDes',
    '1' => 'e3des',
    '2' => 'eBlowfish',
    '3' => 'eAes128',
  },
  lcsSetupConfigDisplayContrast => {
    '0' => 'eC8',
    '1' => 'eC7',
    '2' => 'eC6',
    '3' => 'eC5',
    '4' => 'eC4',
    '5' => 'eC3',
    '6' => 'eC2',
    '7' => 'eC1',
  },
  lcsStatusDhcpClientWanIpListEntryIfc => {
    '257' => 'eCh01',
    '258' => 'eCh02',
    '513' => 'eModem',
    '2049' => 'eDslCh1',
    '2050' => 'eDslCh2',
    '2051' => 'eDslCh3',
    '2052' => 'eDslCh4',
    '2053' => 'eDslCh5',
    '2054' => 'eDslCh6',
    '2055' => 'eDslCh7',
    '2056' => 'eDslCh8',
    '8193' => 'eAdsl1',
    '8194' => 'eAdsl2',
    '8195' => 'eAdsl3',
    '8196' => 'eAdsl4',
    '8197' => 'eAdsl5',
    '8198' => 'eAdsl6',
    '8199' => 'eAdsl7',
    '8200' => 'eAdsl8',
    '16385' => 'eVdsl1',
    '16386' => 'eVdsl2',
    '16387' => 'eVdsl3',
    '16388' => 'eVdsl4',
    '16389' => 'eVdsl5',
    '16390' => 'eVdsl6',
    '16391' => 'eVdsl7',
    '16392' => 'eVdsl8',
  },
  lcsStatusPppPppPhasesEntryIpcp => {
    '1' => 'eInitial',
    '2' => 'eStartng',
    '3' => 'eClosed',
    '4' => 'eStopped',
    '5' => 'eClosing',
    '6' => 'eStoppng',
    '7' => 'eReqsent',
    '8' => 'eAckrcvd',
    '9' => 'eAcksent',
    '10' => 'eOpened',
  },
  lcsStatusRemoteConnectionsEntryMode => {
    '0' => 'eUnknown',
    '4' => 'eActive',
    '5' => 'ePassive',
    '9' => 'eCallback',
  },
  lcsSetupUtmCfProfCatProfEntryJobSearch => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsStatusWlanClientIfcsEntryRxRate => {
    '0' => 'eUnknown',
    '1' => 'e1M',
    '2' => 'e2M',
    '3' => 'e5M',
    '4' => 'e5M5',
    '5' => 'e8M',
    '6' => 'e11M',
    '8' => 'e6M',
    '9' => 'e9M',
    '10' => 'e12M',
    '11' => 'e18M',
    '12' => 'e24M',
    '13' => 'e36M',
    '14' => 'e48M',
    '15' => 'e54M',
    '28' => 'eHT1S6M5',
    '29' => 'eHT1S13M',
    '30' => 'eHT1S19M5',
    '31' => 'eHT1S26M',
    '32' => 'eHT1S39M',
    '33' => 'eHT1S52M',
    '34' => 'eHT1S58M5',
    '35' => 'eHT1S65M',
    '36' => 'eHT2S13M',
    '37' => 'eHT2S26M',
    '38' => 'eHT2S39M',
    '39' => 'eHT2S52M',
    '40' => 'eHT2S78M',
    '41' => 'eHT2S104M',
    '42' => 'eHT2S117M',
    '43' => 'eHT2S130M',
    '44' => 'eHT3S19M5',
    '45' => 'eHT3S39M',
    '46' => 'eHT3S58M5',
    '47' => 'eHT3S78M',
    '48' => 'eHT3S117M',
    '49' => 'eHT3S156M',
    '50' => 'eHT3S175M5',
    '51' => 'eHT3S195M',
  },
  lcsSetupRadiusServerUsersEntryMultipleLogin => {
    '0' => 'eYes',
    '1' => 'eNo',
  },
  lcsSetupUtmCfProfCatProfEntryLiteratureBooks => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupWlanRateAdaptionMethod => {
    '0' => 'eStandard',
    '1' => 'eMinstrel',
  },
  lcsSetupInterfacesWlanTransmissionEntryMinSpatialStreams => {
    '0' => 'eAuto',
    '1' => 'eOne',
    '2' => 'eTwo',
  },
  lcsSetupInterfacesWlanGroupEncryptionKeysEntryKeytype4 => {
    '5' => 'eWep40Bits',
    '13' => 'eWep104Bits',
    '16' => 'eWep128Bits',
  },
  lcsSetupConfigWlanAuthenticationPagesOnly => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanInterpointsAccesspointListEntryRxRate => {
    '0' => 'eUnknown',
    '1' => 'e1M',
    '2' => 'e2M',
    '3' => 'e5M',
    '4' => 'e5M5',
    '5' => 'e8M',
    '6' => 'e11M',
    '8' => 'e6M',
    '9' => 'e9M',
    '10' => 'e12M',
    '11' => 'e18M',
    '12' => 'e24M',
    '13' => 'e36M',
    '14' => 'e48M',
    '15' => 'e54M',
    '28' => 'eHT1S6M5',
    '29' => 'eHT1S13M',
    '30' => 'eHT1S19M5',
    '31' => 'eHT1S26M',
    '32' => 'eHT1S39M',
    '33' => 'eHT1S52M',
    '34' => 'eHT1S58M5',
    '35' => 'eHT1S65M',
    '36' => 'eHT2S13M',
    '37' => 'eHT2S26M',
    '38' => 'eHT2S39M',
    '39' => 'eHT2S52M',
    '40' => 'eHT2S78M',
    '41' => 'eHT2S104M',
    '42' => 'eHT2S117M',
    '43' => 'eHT2S130M',
    '44' => 'eHT3S19M5',
    '45' => 'eHT3S39M',
    '46' => 'eHT3S58M5',
    '47' => 'eHT3S78M',
    '48' => 'eHT3S117M',
    '49' => 'eHT3S156M',
    '50' => 'eHT3S175M5',
    '51' => 'eHT3S195M',
  },
  lcsSetupInterfacesWlanClientModesEntryAddressAdaption => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWlanMngmtNotificationEMail => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusTcpIpSyslogLastMessagesEntrySource => {
    '0' => 'eKern',
    '1' => 'eUser',
    '2' => 'eMail',
    '3' => 'eDaemon',
    '4' => 'eAuth',
    '5' => 'eSyslog',
    '6' => 'eLpr',
    '7' => 'eNews',
    '8' => 'eUucp',
    '9' => 'eCron',
    '10' => 'eAuthpriv',
    '16' => 'eLocal0',
    '17' => 'eLocal1',
    '18' => 'eLocal2',
    '19' => 'eLocal3',
    '20' => 'eLocal4',
    '21' => 'eLocal5',
    '22' => 'eLocal6',
    '23' => 'eLocal7',
  },
  lcsSetupIpRouterIpRoutingTableEntryMasquerade => {
    '0' => 'eNo',
    '1' => 'eOn',
    '2' => 'eIntranet',
  },
  lcsStatusIpRouterRipLanSitesEntryRipSend => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupPerfmonRttmonechoadminEntryProtocol => {
    '3' => 'eEcho',
  },
  lcsStatusWtpMngmtRadioprofilsEntry5ghzMode => {
    '0' => 'eNormal',
    '4' => 'e11anMixed',
    '5' => 'eGreenfield',
  },
  lcsStatusWlanChannelScanResultsEntryInterface => {
    '0' => 'eWlan1',
    '1' => 'eWlan2',
    '2' => 'eWlan3',
    '3' => 'eWlan4',
  },
  lcsStatusComPortsComPortServerComPortStatusEntryHandshake => {
    '0' => 'eNone',
    '1' => 'eRtsCts',
  },
  lcsSetupTimeDstClockChangesEntryDay => {
    '0' => 'eSunday',
    '1' => 'eMonday',
    '2' => 'eTuesday',
    '3' => 'eWednesday',
    '4' => 'eThursday',
    '5' => 'eFriday',
    '6' => 'eSaturday',
  },
  lcsStatusIsdnFramingS0EntryIfc => {
    '257' => 'eS01',
    '513' => 'eModem',
    '2049' => 'eDsl1',
    '2050' => 'eDsl2',
    '2051' => 'eDsl3',
    '2052' => 'eDsl4',
    '8193' => 'eAdsl',
    '16385' => 'eVdsl',
  },
  lcsStatusWlanQosPacketStatisticsEntryAccessCategory => {
    '0' => 'eBestEffort',
    '1' => 'eBackground',
    '2' => 'eVideo',
    '3' => 'eVoice',
  },
  lcsSetupUtmCfGlobalSettingsSnapshotType => {
    '0' => 'eMonthly',
    '1' => 'eWeekly',
    '2' => 'eDaily',
  },
  lcsSetupIpRouterFirewallApplicationsFtpCheckHostIp => {
    '0' => 'eOff',
    '1' => 'eAllways',
    '2' => 'eWan',
    '3' => 'eDefaultRoute',
  },
  lcsSetupConfigAdminsEntryAccessRights => {
    '-1' => 'eSupervisor',
    '0' => 'eNone',
    '8388608' => 'eAdminRoLimit',
    '8388864' => 'eAdminRwLimit',
    '16777216' => 'eAdminRo',
    '16777472' => 'eAdminRw',
  },
  lcsStatusWlanMngmtWlcBridgeInterfacesEntryBridgeInterface => {
    '0' => 'eLan',
    '1' => 'eWlcTunnel1',
    '2' => 'eWlcTunnel2',
    '3' => 'eWlcTunnel3',
    '4' => 'eWlcTunnel4',
    '5' => 'eWlcTunnel5',
    '6' => 'eWlcTunnel6',
    '7' => 'eWlcTunnel7',
    '8' => 'eWlcTunnel8',
    '9' => 'eWlcTunnel9',
    '10' => 'eWlcTunnel10',
    '11' => 'eWlcTunnel11',
    '12' => 'eWlcTunnel12',
    '13' => 'eWlcTunnel13',
    '14' => 'eWlcTunnel14',
    '15' => 'eWlcTunnel15',
    '16' => 'eWlcTunnel16',
    '17' => 'eWlcTunnel17',
    '18' => 'eWlcTunnel18',
    '19' => 'eWlcTunnel19',
    '20' => 'eWlcTunnel20',
    '21' => 'eWlcTunnel21',
    '22' => 'eWlcTunnel22',
    '23' => 'eWlcTunnel23',
    '24' => 'eWlcTunnel24',
    '25' => 'eWlcTunnel25',
    '26' => 'eWlcTunnel26',
    '27' => 'eWlcTunnel27',
    '28' => 'eWlcTunnel28',
    '29' => 'eWlcTunnel29',
    '30' => 'eWlcTunnel30',
    '31' => 'eWlcTunnel31',
    '32' => 'eWlcTunnel32',
  },
  lcsSetupHttpHttpCompression => {
    '0' => 'eActivated',
    '1' => 'eOnlyForWan',
    '2' => 'eDeactivated',
  },
  lcsSetupUtmCfProfCatProfEntryPersonalWebSites => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupInterfacesMobileEnableHsupa => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupLanBridgePortDataEntryPointToPointPort => {
    '0' => 'eAuto',
    '1' => 'eForceTrue',
    '2' => 'eForceFalse',
  },
  lcsStatusWlanMngmtWlcTunnelsWlcDataTunnelActive => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupInterfacesWlanEncryptionEntryMethod => {
    '5' => 'eWep40Bits',
    '13' => 'eWep104Bits',
    '16' => 'eWep128Bits',
    '32' => 'e80211iWpaPsk',
    '33' => 'e80211iWpa8021x',
    '34' => 'eWep40Bits8021x',
    '35' => 'eWep104Bits8021x',
    '36' => 'eWep128Bits8021x',
  },
  lcsSetupHttpKeepServerPortsOpenEntryKeepServerPortsOpen => {
    '0' => 'eAutomatic',
    '1' => 'eEnabled',
    '2' => 'eDisabled',
  },
  lcsSetupInterfacesWlanRadioSettingsEntryRadioBand => {
    '1' => 'e24ghz',
    '2' => 'e5ghz',
  },
  lcsStatusLayerConnectionEntryL1Parameter => {
    '0' => 'eNone',
    '1' => 'eV21300',
    '2' => 'eV23600',
    '3' => 'eV231200',
    '4' => 'eV221200',
    '5' => 'eV22bis2400',
    '6' => 'eV32qam4800',
    '7' => 'eV32qam9600',
    '8' => 'eV32bis7200',
    '9' => 'eV32tcm9600',
    '10' => 'eV32bis12000',
    '11' => 'eV32bis14400',
    '12' => 'eV342400',
    '13' => 'eV344800',
    '14' => 'eV347200',
    '15' => 'eV349600',
    '16' => 'eV3412000',
    '17' => 'eV3414400',
    '18' => 'eV3416800',
    '19' => 'eV3419200',
    '20' => 'eV3421600',
    '21' => 'eV3424000',
    '22' => 'eV3426400',
    '23' => 'eV3428800',
    '24' => 'eV3431200',
    '25' => 'eV3433600',
    '26' => 'eV9028000',
    '27' => 'eV9029333',
    '28' => 'eV9030667',
    '29' => 'eV9032000',
    '30' => 'eV9033333',
    '31' => 'eV9034667',
    '32' => 'eV9036000',
    '33' => 'eV9037333',
    '34' => 'eV9038667',
    '35' => 'eV9040000',
    '36' => 'eV9041333',
    '37' => 'eV9042667',
    '38' => 'eV9044000',
    '39' => 'eV9045333',
    '40' => 'eV9046667',
    '41' => 'eV9048000',
    '42' => 'eV9049333',
    '43' => 'eV9050667',
    '44' => 'eV9052000',
    '45' => 'eV9053333',
    '46' => 'eV9054667',
    '47' => 'eV9056000',
  },
  lcsStatusWlanInterpointsKeyListEntryIndex => {
    '1' => 'eP2p11',
    '2' => 'eP2p12',
    '3' => 'eP2p13',
    '4' => 'eP2p14',
    '5' => 'eP2p15',
    '6' => 'eP2p16',
    '7' => 'eP2p21',
    '8' => 'eP2p22',
    '9' => 'eP2p23',
    '10' => 'eP2p24',
    '11' => 'eP2p25',
    '12' => 'eP2p26',
    '32' => 'eP2p17',
    '33' => 'eP2p18',
    '34' => 'eP2p19',
    '35' => 'eP2p110',
    '36' => 'eP2p111',
    '37' => 'eP2p112',
    '38' => 'eP2p113',
    '39' => 'eP2p114',
    '40' => 'eP2p115',
    '41' => 'eP2p116',
    '64' => 'eP2p27',
    '65' => 'eP2p28',
    '66' => 'eP2p29',
    '67' => 'eP2p210',
    '68' => 'eP2p211',
    '69' => 'eP2p212',
    '70' => 'eP2p213',
    '71' => 'eP2p214',
    '72' => 'eP2p215',
    '73' => 'eP2p216',
  },
  lcsSetupRadiusServerEapAllowMethodsEntryMethod => {
    '4' => 'eMd5',
    '6' => 'eGtc',
    '13' => 'eTls',
    '21' => 'eTtls',
    '25' => 'ePeap',
    '26' => 'eMschapv2',
  },
  lcsSetupUtmCfGlobalSettingsActionOnLicenseExpiration => {
    '0' => 'eBlock',
    '1' => 'ePass',
  },
  lcsStatusHardwareInfoOnboardUsbHub => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusPptpConnectionsEntryState => {
    '0' => 'eInit',
    '1' => 'eSetupWan',
    '2' => 'eReady',
    '3' => 'eWaitForCb',
    '4' => 'eDial',
    '5' => 'eIncomingCall',
    '6' => 'eProtocol',
    '7' => 'eConnection',
    '8' => 'eDisconnecting',
    '9' => 'eCallBack',
    '10' => 'eBundleConnect',
    '11' => 'eProtocol2',
    '12' => 'eReserved',
    '13' => 'eBundle',
  },
  lcsSetupSyslogOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupUtmCfProfCatProfEntryHumorCartoons => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupComPortsCOMPortServNetwSetEntryRfc2217Extensions => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupNetbiosWatchdogs => {
    '0' => 'eRoute',
    '1' => 'eSpoof',
  },
  lcsSetupWlanMngmtApConfApsEntryWlanModule1 => {
    '0' => 'eDefault',
    '1' => 'e24ghz',
    '2' => 'e5ghz',
    '3' => 'eOff',
  },
  lcsSetupHttpKeepServerPortsOpenEntryIfc => {
    '1' => 'eLan',
    '2' => 'eWan',
    '4' => 'eWlan',
  },
  lcsSetupInterfacesAdslEntryProtocol => {
    '0' => 'eOff',
    '8' => 'eAuto',
    '20' => 'eAdsl1',
    '21' => 'eAdsl2',
    '22' => 'eAdsl2plus',
    '520' => 'eAutoPOTS',
    '532' => 'eAdsl1A',
    '533' => 'eAdsl2A',
    '534' => 'eAdsl2plusA',
    '543' => 'eAdsl2M',
    '544' => 'eAdsl2plusM',
    '545' => 'eAdsl2I',
    '546' => 'eAdsl2plusI',
    '549' => 'eAdsl2L',
    '776' => 'eAutoISDN',
    '788' => 'eAdsl1B',
    '789' => 'eAdsl2B',
    '790' => 'eAdsl2plusB',
    '803' => 'eAdsl2J',
    '804' => 'eAdsl2plusJ',
  },
  lcsStatusVpnConnectionsEntrySslEncaps => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupLancapiInterfaceListEntryOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
    '2' => 'eDialOnly',
    '3' => 'eDialInOnly',
  },
  lcsStatusTcpIpRadiussAccntComplAccntSessEntryNasPortType => {
    '-1' => 'eUnknown',
    '0' => 'eAsync',
    '1' => 'eSync',
    '2' => 'eIsdnSync',
    '3' => 'eV120',
    '4' => 'eV110',
    '5' => 'eVirtual',
    '6' => 'ePiafs',
    '7' => 'eHdlcClearChannel',
    '8' => 'eX25',
    '9' => 'eX75',
    '10' => 'eG3Fax',
    '11' => 'eSdsl',
    '12' => 'eAdslCap',
    '13' => 'eAdslDmt',
    '14' => 'eIdsl',
    '15' => 'eEthernet',
    '16' => 'eXdsl',
    '17' => 'eCable',
    '18' => 'eWirelessOther',
    '19' => 'eWireless80211',
    '20' => 'eTokenRing',
    '21' => 'eFddi',
    '22' => 'eWirelessCdma2000',
    '23' => 'eWirelessUmts',
    '24' => 'eWireless1xEv',
    '25' => 'eIapp',
    '26' => 'eFttp',
    '27' => 'eWireless80216',
    '28' => 'eWireless80220',
    '29' => 'eWireless80222',
    '30' => 'ePppoa',
    '31' => 'ePppoeoa',
    '32' => 'ePppoeoe',
    '33' => 'ePppoeovlan',
    '34' => 'ePppoeoqinq',
    '35' => 'eXpon',
  },
  lcsSetupWanDialupPeersEntryCallback => {
    '0' => 'eNo',
    '1' => 'eAuto',
    '2' => 'eLooser',
    '5' => 'eName',
    '9' => 'eFast',
  },
  lcsStatusWlanWlanParameterEntryWepSupport => {
    '0' => 'eNo',
    '1' => 'eYes40Bits',
    '2' => 'eYes104Bits',
    '3' => 'eYes128Bits',
  },
  lcsStatusWlanCompetingNetworksEntry108mbpsMode => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWlanIappProtocol => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanStationTableEntryInterface => {
    '0' => 'eWlan1',
    '1' => 'eWlan2',
    '2' => 'eWlan3',
    '3' => 'eWlan4',
  },
  lcsSetupAccountingLastSnapshotEntryConnType => {
    '0' => 'eUnknown',
    '1' => 'eDialUp',
    '2' => 'eLeasedLine',
    '4' => 'eDslLine',
    '7' => 'eVpnConn',
    '8' => 'ePptpConn',
  },
  lcsStatusWlanMngmtApConfApsEntryWlanModule1 => {
    '0' => 'eDefault',
    '1' => 'e24ghz',
    '2' => 'e5ghz',
    '3' => 'eOff',
  },
  lcsStatusWlanStationTableEntryShortSlotTime => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusPppPppPhasesEntryIfc => {
    '257' => 'eCh01',
    '258' => 'eCh02',
    '513' => 'eModem',
    '2049' => 'eDslCh1',
    '2050' => 'eDslCh2',
    '2051' => 'eDslCh3',
    '2052' => 'eDslCh4',
    '2053' => 'eDslCh5',
    '2054' => 'eDslCh6',
    '2055' => 'eDslCh7',
    '2056' => 'eDslCh8',
    '8193' => 'eAdsl1',
    '8194' => 'eAdsl2',
    '8195' => 'eAdsl3',
    '8196' => 'eAdsl4',
    '8197' => 'eAdsl5',
    '8198' => 'eAdsl6',
    '8199' => 'eAdsl7',
    '8200' => 'eAdsl8',
    '16385' => 'eVdsl1',
    '16386' => 'eVdsl2',
    '16387' => 'eVdsl3',
    '16388' => 'eVdsl4',
    '16389' => 'eVdsl5',
    '16390' => 'eVdsl6',
    '16391' => 'eVdsl7',
    '16392' => 'eVdsl8',
  },
  lcsSetupConfigAccessTableEntryTelnetSsl => {
    '0' => 'eNo',
    '1' => 'eYes',
    '4' => 'eRead',
    '16' => 'eVpn',
  },
  lcsSetupIpRouterRipR1Mask => {
    '0' => 'eClass',
    '1' => 'eAddress',
    '2' => 'eClPlusAddr',
  },
  lcsSetupWlanMngmtApConfApsEntryMngmtFwAddInfo => {
    '1' => 'eDisabledDueToErrorDuringUpdate',
    '2' => 'eDisabledByManualUpload',
  },
  lcsSetupWlanMngmtApConfNetwprofilsEntry11bPreamble => {
    '0' => 'eAuto',
    '1' => 'eLong',
  },
  lcsStatusWlanMngmtApConfRadioprofilsEntryIndoorOnlyOperation => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusIpRouterRipVrrpSitesEntryRipType => {
    '0' => 'eOff',
    '1' => 'eRip1',
    '2' => 'eR1Comp',
    '3' => 'eRip2',
  },
  lcsStatusWlanIfcsEntryOperationMode => {
    '0' => 'eStation',
    '1' => 'eAccessPoint',
    '4' => 'eManagedAp',
  },
  lcsStatusWlanWlanParameterEntrySupportsShortGuardInterval => {
    '0' => 'eNo',
    '1' => 'e20mhz',
    '2' => 'e40mhz',
    '3' => 'e2040mhz',
  },
  lcsSetupComPortsCOMPortServNetwSetEntryNewlineConversion => {
    '0' => 'eCrlf',
    '1' => 'eCr',
    '2' => 'eLf',
  },
  lcsSetupInterfacesWlanTransmissionEntryMaxSpatialStreams => {
    '0' => 'eAuto',
    '1' => 'eOne',
    '2' => 'eTwo',
  },
  lcsSetupSyslogFacilityMapperEntrySource => {
    '1' => 'eSystem',
    '2' => 'eLogin',
    '4' => 'eSystemtime',
    '8' => 'eConsoleLogin',
    '16' => 'eConnections',
    '32' => 'eAccounting',
    '64' => 'eAdministration',
    '128' => 'eRouter',
  },
  lcsStatusWlanMngmtApConnectionsEntryConfiguration => {
    '0' => 'eNo',
    '1' => 'eYes',
    '2' => 'eDefault',
  },
  lcsSetupPublicSpotModuleAuthenticationMode => {
    '0' => 'eNone',
    '1' => 'eUserPlusPassword',
    '2' => 'eMacPlusUserPlusPassword',
  },
  lcsSetupInterfacesWlanNetworkEntryAironetExtensions => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWlanMngmtApConfRadioprofilsEntryIndoorOnlyOperation => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWanBackupPeersEntryHead => {
    '0' => 'eLast',
    '1' => 'eFirst',
  },
  lcsSetupWlanMngmtApConfNetwprofilsEntryBasicRate => {
    '0' => 'e2M',
    '1' => 'e1M',
    '3' => 'e5M5',
    '4' => 'e11M',
    '5' => 'e6M',
    '6' => 'e9M',
    '7' => 'e12M',
    '8' => 'e18M',
    '9' => 'e24M',
    '10' => 'e36M',
    '11' => 'e48M',
    '12' => 'e54M',
    '13' => 'eT72M',
    '14' => 'eT96M',
    '15' => 'eT108M',
  },
  lcsSetupWlanMngmtApConfRadioprofilsEntrySubbands => {
    '0' => 'eBand1Plus2Plus3',
    '1' => 'eBand1',
    '2' => 'eBand2',
    '3' => 'eBand3',
    '4' => 'eBand1Plus2',
    '5' => 'eBand1Plus3',
    '6' => 'eBand2Plus3',
  },
  lcsSetupWlanMngmtApConfNetwprofilsEntryEncryption => {
    '0' => 'e80211iWpaPsk',
    '1' => 'e80211iWpa8021x',
    '2' => 'eWep104Bits',
    '3' => 'eWep40Bits',
    '4' => 'eWep104Bits8021x',
    '5' => 'eWep40Bits8021x',
    '6' => 'eNone',
  },
  lcsStatusWlanScanResultsEntryShortPreamble => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanRadiusCacheEntryAllowed => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusPppRxOptionsLcpEntryIfc => {
    '257' => 'eCh01',
    '258' => 'eCh02',
    '513' => 'eModem',
    '2049' => 'eDslCh1',
    '2050' => 'eDslCh2',
    '2051' => 'eDslCh3',
    '2052' => 'eDslCh4',
    '2053' => 'eDslCh5',
    '2054' => 'eDslCh6',
    '2055' => 'eDslCh7',
    '2056' => 'eDslCh8',
    '8193' => 'eAdsl1',
    '8194' => 'eAdsl2',
    '8195' => 'eAdsl3',
    '8196' => 'eAdsl4',
    '8197' => 'eAdsl5',
    '8198' => 'eAdsl6',
    '8199' => 'eAdsl7',
    '8200' => 'eAdsl8',
    '16385' => 'eVdsl1',
    '16386' => 'eVdsl2',
    '16387' => 'eVdsl3',
    '16388' => 'eVdsl4',
    '16389' => 'eVdsl5',
    '16390' => 'eVdsl6',
    '16391' => 'eVdsl7',
    '16392' => 'eVdsl8',
  },
  lcsSetupAutoldUsbConfigAndScript => {
    '1' => 'eInactive',
    '2' => 'eIfUnconfigured',
    '3' => 'eActive',
  },
  lcsStatusWlanClientIfcsEntryKeyType => {
    '0' => 'eNone',
    '1' => 'eUnknown',
    '5' => 'eWep40Bits',
    '13' => 'eWep104Bits',
    '16' => 'eWep128Bits',
    '64' => 'eTkip',
    '65' => 'eAesOcb',
    '66' => 'eAesCcm',
  },
  lcsStatusLanBridgeSpanningTreeRstpPortTableEntryForwarding => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWtpMngmtRadioprofilsEntry24ghzMode => {
    '0' => 'e11bgMixed',
    '1' => 'e11gOnly',
    '2' => 'e11bOnly',
    '4' => 'e11bgnMixed',
    '5' => 'e11gnMixed',
    '6' => 'eGreenfield',
  },
  lcsStatusEthernetPortsCableTestResultsEntryRxStatus => {
    '0' => 'eUnknown',
    '1' => 'eOk',
    '2' => 'eOpen',
    '3' => 'eShort',
    '4' => 'eImpedanceFault',
    '5' => 'eFail',
    '6' => 'eBusy',
  },
  lcsStatusWlanMngmtApConfRadioprofilsEntry5ghzMode => {
    '0' => 'eNormal',
    '3' => 'e108mbps',
    '4' => 'e11anMixed',
    '5' => 'eGreenfield',
  },
  lcsSetupUtmCfProfCatProfEntryPhishingUrls => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupInterfacesWlanIntpntSetEntryChanSelScheme => {
    '0' => 'eMaster',
    '1' => 'eSlave',
  },
  lcsSetupSnmpSendTraps => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupUtmCfProfCatProfEntrySwimwearLingerie => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsStatusWlanMngmtApStatusActiveRadiosEntryCardState => {
    '0' => 'eNormal',
    '1' => 'eFailure',
    '2' => 'eInitalizing',
    '4' => 'eNoCard',
  },
  lcsSetupVpnFlexibleIdComparison => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusLayerConnectionEntryL2Opt => {
    '0' => 'eCompr',
    '1' => 'eBundle',
    '2' => 'eBndPlusCmpr',
    '255' => 'eNone',
  },
  lcsStatusLanBridgeAddressTableEntryEthernetPort => {
    '0' => 'eUnknown',
    '1' => 'eUplink',
    '2' => 'eEth1',
    '3' => 'eEth2',
    '4' => 'eEth3',
    '5' => 'eEth4',
    '16' => 'eWan',
  },
  lcsSetupInterfacesPcmSyncSource => {
    '0' => 'eAuto',
    '1' => 'eS01',
  },
  lcsSetupComPortsDevEntryServ => {
    '1' => 'eWan',
    '2' => 'eCOMPortServ',
  },
  lcsSetupInterfacesMobileProfilesEntryMode => {
    '0' => 'eAuto',
    '1' => 'eUmts',
    '2' => 'eGprs',
    '8' => 'eLte',
  },
  lcsStatusEthernetPortsPortsEntryLinkActive => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupPublicSpotModuleAddUserWizardDefaultStartingTime => {
    '1' => 'eImmediately',
    '3' => 'eFirstLogin',
  },
  lcsStatusModemMobileOperating => {
    '0' => 'eNo',
    '1' => 'eModem',
    '2' => 'eUmtsGprs',
  },
  lcsStatusLanIeee8021xSupplicantIfcStateEntryIfc => {
    '1' => 'eLan1',
    '2' => 'eLan2',
    '3' => 'eLan3',
    '4' => 'eLan4',
  },
  lcsStatusLanBridgeAddressTableEntryBridgeGroup => {
    '0' => 'eBrg1',
    '1' => 'eBrg2',
    '2' => 'eBrg3',
    '3' => 'eBrg4',
    '4' => 'eBrg5',
    '5' => 'eBrg6',
    '6' => 'eBrg7',
    '7' => 'eBrg8',
    '255' => 'eNone',
  },
  lcsSetupCertsScepCaClientCertsChallPasswdsEntryValidity => {
    '0' => 'ePermanently',
    '1' => 'eOneTime',
  },
  lcsStatusWlanStationTableEntryRxRate => {
    '0' => 'eUnknown',
    '1' => 'e1M',
    '2' => 'e2M',
    '3' => 'e5M',
    '4' => 'e5M5',
    '5' => 'e8M',
    '6' => 'e11M',
    '8' => 'e6M',
    '9' => 'e9M',
    '10' => 'e12M',
    '11' => 'e18M',
    '12' => 'e24M',
    '13' => 'e36M',
    '14' => 'e48M',
    '15' => 'e54M',
    '28' => 'eHT1S6M5',
    '29' => 'eHT1S13M',
    '30' => 'eHT1S19M5',
    '31' => 'eHT1S26M',
    '32' => 'eHT1S39M',
    '33' => 'eHT1S52M',
    '34' => 'eHT1S58M5',
    '35' => 'eHT1S65M',
    '36' => 'eHT2S13M',
    '37' => 'eHT2S26M',
    '38' => 'eHT2S39M',
    '39' => 'eHT2S52M',
    '40' => 'eHT2S78M',
    '41' => 'eHT2S104M',
    '42' => 'eHT2S117M',
    '43' => 'eHT2S130M',
    '44' => 'eHT3S19M5',
    '45' => 'eHT3S39M',
    '46' => 'eHT3S58M5',
    '47' => 'eHT3S78M',
    '48' => 'eHT3S117M',
    '49' => 'eHT3S156M',
    '50' => 'eHT3S175M5',
    '51' => 'eHT3S195M',
  },
  lcsSetupCertsScepCaLoggingSyslog => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanMngmtStationTableEntryState => {
    '0' => 'eNone',
    '1' => 'eAdhoc',
    '2' => 'eAuthenticated',
    '3' => 'eConnected',
    '4' => 'eMacCheck',
    '8' => 'eKeyHandshake',
    '9' => 'eAssociated',
    '10' => 'e1xNegotiation',
    '11' => 'eWpsNegotiation',
  },
  lcsStatusWlanMngmtApConfApsEntryWlanModule2 => {
    '0' => 'eDefault',
    '1' => 'e24ghz',
    '2' => 'e5ghz',
    '3' => 'eOff',
  },
  lcsSetupInterfacesWlanTransmissionEntryBasicRate => {
    '1' => 'e1M',
    '2' => 'e2M',
    '4' => 'e5M5',
    '6' => 'e11M',
    '8' => 'e6M',
    '9' => 'e9M',
    '10' => 'e12M',
    '11' => 'e18M',
    '12' => 'e24M',
    '13' => 'e36M',
    '14' => 'e48M',
    '15' => 'e54M',
  },
  lcsSetupVpnVpnPeersEntryDynamic => {
    '0' => 'eNo',
    '1' => 'eBChannel',
    '2' => 'eDChannel',
    '4' => 'eIcmp',
    '8' => 'eUdp',
  },
  lcsStatusWlanMngmtApConnectionsEntryAuthorized => {
    '0' => 'eUnknown',
    '1' => 'eYes',
    '2' => 'eNo',
  },
  lcsSetupInterfacesWlanNetworkEntryOperating => {
    '0' => 'eYes',
    '1' => 'eNo',
  },
  lcsSetupInterfacesWlanIntpntPeersEntryOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupIpRouterRipWanSitesEntryPoisonedReverse => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusTimeDstClockChangesEntryMonth => {
    '1' => 'eJanuary',
    '2' => 'eFebruary',
    '3' => 'eMarch',
    '4' => 'eApril',
    '5' => 'eMay',
    '6' => 'eJune',
    '7' => 'eJuly',
    '8' => 'eAugust',
    '9' => 'eSeptember',
    '10' => 'eOctober',
    '11' => 'eNovember',
    '12' => 'eDecember',
  },
  lcsStatusIsdnLineS0EntryIfc => {
    '257' => 'eS01',
    '513' => 'eModem',
    '2049' => 'eDsl1',
    '2050' => 'eDsl2',
    '2051' => 'eDsl3',
    '2052' => 'eDsl4',
    '8193' => 'eAdsl',
    '16385' => 'eVdsl',
  },
  lcsSetupIpRouterRipWanSitesEntryRipSend => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusLanBridgePortDataEntryPointToPointPort => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupComPortsCOMPortServCOMPortSetEntryStopBits => {
    '1' => 'e1',
    '2' => 'e2',
  },
  lcsSetupPerfmonRttmonadminEntryStatus => {
    '1' => 'eActive',
    '2' => 'eNotInService',
    '3' => 'eNotReady',
    '5' => 'eCreate',
    '6' => 'eDestroy',
  },
  lcsSetupCertsScepClntScepOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupInterfacesWlanRadioSettingsEntryChannelPairing => {
    '0' => 'e11nCompliant',
    '1' => 'eLegacyTurboFriendly',
  },
  lcsStatusWlanMngmtApConfNetwprofilsEntryClBrgSupport => {
    '0' => 'eNo',
    '1' => 'eYes',
    '2' => 'eExclusive',
  },
  lcsSetupCertsScepCaCaCertsRsaKeyLength => {
    '1024' => 'e1024',
    '2048' => 'e2048',
    '3072' => 'e3072',
    '4096' => 'e4096',
    '8192' => 'e8192',
  },
  lcsStatusConfigEventLogEntryEvent => {
    '4' => 'eFwUplStart',
    '5' => 'eUplsucc',
    '6' => 'eUplfailto',
    '7' => 'eUplfailincl',
    '8' => 'eUplfailbaddev',
    '9' => 'eLogin',
    '10' => 'eLogout',
    '11' => 'eCnfuplstart',
    '12' => 'eCnfdnlstart',
    '13' => 'eCnfdnlsucc',
    '29' => 'eErrlogin',
    '79' => 'eScrptuplstart',
    '80' => 'eScrptdnlstart',
    '7000' => 'eUplinvversion',
    '7001' => 'eUplfileexists',
  },
  lcsStatusPppoeServerConnectionsEntryState => {
    '0' => 'eInit',
    '1' => 'eSetupWan',
    '2' => 'eReady',
    '3' => 'eWaitForCb',
    '4' => 'eDial',
    '5' => 'eIncomingCall',
    '6' => 'eProtocol',
    '7' => 'eConnection',
    '8' => 'eDisconnecting',
    '9' => 'eCallBack',
    '10' => 'eBundleConnect',
    '11' => 'eProtocol2',
    '12' => 'eReserved',
    '13' => 'eBundle',
  },
  lcsSetupLancapiInterfaceListEntryForceOutMsn => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusIpRouterRipDynWanSitesEntryMasquerade => {
    '0' => 'eAuto',
    '1' => 'eOn',
    '2' => 'eIntranet',
  },
  lcsSetupUtmCfOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupUtmCfProfCatProfEntryWebStorage => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsStatusIpRouterRipAllRoutesEntryPort => {
    '256' => 'eLan1',
    '257' => 'eLan2',
    '258' => 'eLan3',
    '259' => 'eLan4',
    '260' => 'eLan5',
    '512' => 'eWlan1',
    '513' => 'eWlan2',
    '768' => 'eP2p11',
    '769' => 'eP2p12',
    '770' => 'eP2p13',
    '771' => 'eP2p14',
    '772' => 'eP2p15',
    '773' => 'eP2p16',
    '774' => 'eP2p21',
    '775' => 'eP2p22',
    '776' => 'eP2p23',
    '777' => 'eP2p24',
    '778' => 'eP2p25',
    '779' => 'eP2p26',
    '799' => 'eP2p17',
    '800' => 'eP2p18',
    '801' => 'eP2p19',
    '802' => 'eP2p110',
    '803' => 'eP2p111',
    '804' => 'eP2p112',
    '805' => 'eP2p113',
    '806' => 'eP2p114',
    '807' => 'eP2p115',
    '808' => 'eP2p116',
    '831' => 'eP2p27',
    '832' => 'eP2p28',
    '833' => 'eP2p29',
    '834' => 'eP2p210',
    '835' => 'eP2p211',
    '836' => 'eP2p212',
    '837' => 'eP2p213',
    '838' => 'eP2p214',
    '839' => 'eP2p215',
    '840' => 'eP2p216',
    '1024' => 'eWlan12',
    '1025' => 'eWlan13',
    '1026' => 'eWlan14',
    '1027' => 'eWlan15',
    '1028' => 'eWlan16',
    '1029' => 'eWlan17',
    '1030' => 'eWlan18',
    '1031' => 'eWlan22',
    '1032' => 'eWlan23',
    '1033' => 'eWlan24',
    '1034' => 'eWlan25',
    '1035' => 'eWlan26',
    '1036' => 'eWlan27',
    '1037' => 'eWlan28',
    '1536' => 'eBrg1',
    '1537' => 'eBrg2',
    '1538' => 'eBrg3',
    '1539' => 'eBrg4',
    '1540' => 'eBrg5',
    '1541' => 'eBrg6',
    '1542' => 'eBrg7',
    '1543' => 'eBrg8',
    '1792' => 'eWlcTunnel1',
    '1793' => 'eWlcTunnel2',
    '1794' => 'eWlcTunnel3',
    '1795' => 'eWlcTunnel4',
    '1796' => 'eWlcTunnel5',
    '1797' => 'eWlcTunnel6',
    '1798' => 'eWlcTunnel7',
    '1799' => 'eWlcTunnel8',
    '1800' => 'eWlcTunnel9',
    '1801' => 'eWlcTunnel10',
    '1802' => 'eWlcTunnel11',
    '1803' => 'eWlcTunnel12',
    '1804' => 'eWlcTunnel13',
    '1805' => 'eWlcTunnel14',
    '1806' => 'eWlcTunnel15',
    '1807' => 'eWlcTunnel16',
    '1808' => 'eWlcTunnel17',
    '1809' => 'eWlcTunnel18',
    '1810' => 'eWlcTunnel19',
    '1811' => 'eWlcTunnel20',
    '1812' => 'eWlcTunnel21',
    '1813' => 'eWlcTunnel22',
    '1814' => 'eWlcTunnel23',
    '1815' => 'eWlcTunnel24',
    '1816' => 'eWlcTunnel25',
    '1817' => 'eWlcTunnel26',
    '1818' => 'eWlcTunnel27',
    '1819' => 'eWlcTunnel28',
    '1820' => 'eWlcTunnel29',
    '1821' => 'eWlcTunnel30',
    '1822' => 'eWlcTunnel31',
    '1823' => 'eWlcTunnel32',
    '65535' => 'eAny',
  },
  lcsStatusWlanMngmtApConfCommProfErrorsEntryError => {
    '0' => 'eNone',
    '1' => 'eInheritanceError',
    '2' => 'eNoProfile',
    '3' => 'eProfileNotFound',
    '4' => 'eNoMemoory',
    '5' => 'eSsidMissing',
    '6' => 'eNetworkNotFound',
    '7' => 'eApParametersNotFound',
    '8' => 'eApIntranetNotFound',
  },
  lcsSetupInterfacesWlanGroupEncryptionKeysEntryIfc => {
    '1' => 'eWlan1',
    '2' => 'eWlan2',
  },
  lcsSetupIeee8021xPortsEntryKeyTransmission => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupDhcpNetworkListEntryOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
    '2' => 'eAuto',
    '4' => 'eClient',
    '16' => 'eRelay',
  },
  lcsStatusVpnConnectionsEntryLastError => {
    '0' => 'eNone',
    '275' => 'eIcmpConnError',
    '4353' => 'eIfcILicenseExceeded',
    '4354' => 'eIfcINoChannelAvailable',
    '4355' => 'eIfcINoRouteToRemoteGateway',
    '4356' => 'eIfcINoPppTableEntryMatched',
    '4357' => 'eIfcIConnectionTimeoutDynamic',
    '4358' => 'eIfcIConnectionTimeoutIkeIpsec',
    '4360' => 'eIfcINoPollTableEntryMatched',
    '4361' => 'eIfcINameResolutionFailed',
    '4369' => 'eIfcINegotiatorChargeLocked',
    '4370' => 'eIfcINegotiatorTimeLocked',
    '4371' => 'eIfcINegotiatorNoDialNumber',
    '4372' => 'eIfcINegotiatorNoRemote',
    '4373' => 'eIfcINegotiatorRemoteBlocked',
    '4374' => 'eIfcINegotiatorNoMulticonnect',
    '4375' => 'eIfcINegotiatorLineError',
    '4385' => 'eIfcIPhysicalChargeLocked',
    '4386' => 'eIfcIPhysicalTimeLocked',
    '4387' => 'eIfcIPhysicalNoDialNumber',
    '4388' => 'eIfcIPhysicalNoRemote',
    '4389' => 'eIfcIPhysicalNoServerAddress',
    '4390' => 'eIfcIPhysicalRemoteLocked',
    '4391' => 'eIfcIPhysicalNoMulticonnect',
    '4393' => 'eIfcIConnectionLimitReached',
    '4609' => 'eIfcRLicenseExceeded',
    '4610' => 'eIfcRNoChannelAvailable',
    '4611' => 'eIfcRNoRouteToRemoteGateway',
    '4612' => 'eIfcRNoPppTableEntryMatched',
    '4613' => 'eIfcRConnectionTimeoutDynamic',
    '4614' => 'eIfcRConnectionTimeoutIkeIpsec',
    '4649' => 'eIfcRConnectionLimitReached',
    '4871' => 'eIfcXLinePollingFailed',
    '4904' => 'eIfcXPhysicalLineError',
    '8451' => 'eIkeINoProposalMatched',
    '8458' => 'eIkeIIkeKeyMismatch',
    '8461' => 'eIkeIDpdTimeout',
    '8462' => 'eIkeIUnableToGetIssuerCert',
    '8463' => 'eIkeIUnableToGetCrl',
    '8464' => 'eIkeIUnableToDecryptCertSignature',
    '8465' => 'eIkeIUnableToDecryptCrlSignature',
    '8466' => 'eIkeIUnableToDecodeIssuerPublicKey',
    '8467' => 'eIkeICertSignatureFailure',
    '8468' => 'eIkeICrlSignatureFailure',
    '8469' => 'eIkeICertNotYetValid',
    '8470' => 'eIkeICertHasExpired',
    '8471' => 'eIkeICrlNotYetValid',
    '8472' => 'eIkeICrlHasExpired',
    '8473' => 'eIkeIErrorInCertNotBeforeField',
    '8474' => 'eIkeIErrorInCertNotAfterField',
    '8475' => 'eIkeIErrorInCrlLastUpdateField',
    '8476' => 'eIkeIErrorInCrlNextUpdateField',
    '8477' => 'eIkeIOutOfMem',
    '8478' => 'eIkeIDepthZeroSelfSignedCert',
    '8479' => 'eIkeISelfSignedCertInChain',
    '8480' => 'eIkeIUnableToGetIssuerCertLocally',
    '8481' => 'eIkeIUnableToVerifyLeafSignature',
    '8482' => 'eIkeICertChainTooLong',
    '8483' => 'eIkeICertRevoked',
    '8484' => 'eIkeIInvalidCa',
    '8485' => 'eIkeIPathLengthExceeded',
    '8486' => 'eIkeIInvalidPurpose',
    '8487' => 'eIkeICertUntrusted',
    '8488' => 'eIkeICertRejected',
    '8489' => 'eIkeISubjectIssuerMismatch',
    '8490' => 'eIkeIAkidSkidMismatch',
    '8491' => 'eIkeIAkidIssuerSerialMismatch',
    '8492' => 'eIkeIKeyusageNoCertsign',
    '8493' => 'eIkeIUnableToGetCrlIssuer',
    '8494' => 'eIkeIUnhandledCriticalExtension',
    '8495' => 'eIkeIKeyusageNoCrlSign',
    '8496' => 'eIkeIUnhandledCriticalCrlExtension',
    '8497' => 'eIkeICrlHasExceededExceedance',
    '8498' => 'eIkeIApplicationVerification',
    '8499' => 'eIkeICertRevokedUnspecified',
    '8500' => 'eIkeICertRevokedKeyCompromise',
    '8501' => 'eIkeICertRevokedCaCompromise',
    '8502' => 'eIkeICertRevokedAffiliationChanged',
    '8503' => 'eIkeICertRevokedSuperseded',
    '8504' => 'eIkeICertRevokedCessationOfOperation',
    '8505' => 'eIkeICertRevokedCertificateHold',
    '8506' => 'eIkeICertRevokedRemoveFromCrl',
    '8507' => 'eIkeICertRevokedPrivilegeWithdrawn',
    '8508' => 'eIkeICertRevokedAACompromise',
    '8509' => 'eIkeICertRevokedUnknownReason',
    '8702' => 'eIkeIOutOfMemory',
    '8703' => 'eIkeIGeneralFailure',
    '8705' => 'eIkeRLicenseExceeded',
    '8706' => 'eIkeRExchangeTypeMismatch',
    '8707' => 'eIkeRNoProposalMatched',
    '8708' => 'eIkeRIkeGroupMismatch',
    '8709' => 'eIkeRLifeTypeUnsupported',
    '8710' => 'eIkeRLifeDurationMismatch',
    '8711' => 'eIkeRIdTypeUnsupported',
    '8712' => 'eIkeRIdTypeMismatch',
    '8713' => 'eIkeRNoRuleMatchedId',
    '8714' => 'eIkeRIkeKeyMismatch',
    '8715' => 'eIkeRLicenseDemosnExceeded',
    '8716' => 'eIkeRLicenseSnExceeded',
    '8717' => 'eIkeRDpdTimeout',
    '8718' => 'eIkeRUnableToGetIssuerCert',
    '8719' => 'eIkeRUnableToGetCrl',
    '8720' => 'eIkeRUnableToDecryptCertSignature',
    '8721' => 'eIkeRUnableToDecryptCrlSignature',
    '8722' => 'eIkeRUnableToDecodeIssuerPublicKey',
    '8723' => 'eIkeRCertSignatureFailure',
    '8724' => 'eIkeRCrlSignatureFailure',
    '8725' => 'eIkeRCertNotYetValid',
    '8726' => 'eIkeRCertHasExpired',
    '8727' => 'eIkeRCrlNotYetValid',
    '8728' => 'eIkeRCrlHasExpired',
    '8729' => 'eIkeRErrorInCertNotBeforeField',
    '8730' => 'eIkeRErrorInCertNotAfterField',
    '8731' => 'eIkeRErrorInCrlLastUpdateField',
    '8732' => 'eIkeRErrorInCrlNextUpdateField',
    '8733' => 'eIkeROutOfMem',
    '8734' => 'eIkeRDepthZeroSelfSignedCert',
    '8735' => 'eIkeRSelfSignedCertInChain',
    '8736' => 'eIkeRUnableToGetIssuerCertLocally',
    '8737' => 'eIkeRUnableToVerifyLeafSignature',
    '8738' => 'eIkeRCertChainTooLong',
    '8739' => 'eIkeRCertRevoked',
    '8740' => 'eIkeRInvalidCa',
    '8741' => 'eIkeRPathLengthExceeded',
    '8742' => 'eIkeRInvalidPurpose',
    '8743' => 'eIkeRCertUntrusted',
    '8744' => 'eIkeRCertRejected',
    '8745' => 'eIkeRSubjectIssuerMismatch',
    '8746' => 'eIkeRAkidSkidMismatch',
    '8747' => 'eIkeRAkidIssuerSerialMismatch',
    '8748' => 'eIkeRKeyusageNoCertsign',
    '8749' => 'eIkeRUnableToGetCrlIssuer',
    '8750' => 'eIkeRUnhandledCriticalExtension',
    '8751' => 'eIkeRKeyusageNoCrlSign',
    '8752' => 'eIkeRUnhandledCriticalCrlExtension',
    '8753' => 'eIkeRCrlHasExceededExceedance',
    '8754' => 'eIkeRApplicationVerification',
    '8755' => 'eIkeRCertRevokedUnspecified',
    '8756' => 'eIkeRCertRevokedKeyCompromise',
    '8757' => 'eIkeRCertRevokedCaCompromise',
    '8758' => 'eIkeRCertRevokedAffiliationChanged',
    '8759' => 'eIkeRCertRevokedSuperseded',
    '8760' => 'eIkeRCertRevokedCessationOfOperation',
    '8761' => 'eIkeRCertRevokedCertificateHold',
    '8762' => 'eIkeRCertRevokedRemoveFromCrl',
    '8763' => 'eIkeRCertRevokedPrivilegeWithdrawn',
    '8764' => 'eIkeRCertRevokedAACompromise',
    '8765' => 'eIkeRCertRevokedUnknownReason',
    '8784' => 'eIkeRConnLimitReached',
    '8958' => 'eIkeROutOfMemory',
    '8959' => 'eIkeRGeneralFailure',
    '12546' => 'eIpsecINoProposalMatched',
    '12801' => 'eIpsecRNoRuleMatchedIds',
    '12802' => 'eIpsecRNoProposalMatched',
    '12803' => 'eIpsecRPfsGroupMismatch',
    '17153' => 'eRemoteDisconnected',
    '17154' => 'eManualDisconnect',
    '17155' => 'eShortholdExpired',
    '17156' => 'ePhysicalDisconnected',
    '17157' => 'eInvalidPhysicalChannel',
    '17158' => 'eDynamicVpnReconnect',
    '17159' => 'eConfigurationChanged',
    '17160' => 'eRemovedFromConfig',
  },
  lcsSetupInterfacesWlanClientModesEntryNetworkTypes => {
    '2' => 'eAdhoc',
    '4' => 'eInfrastructure',
    '6' => 'eBoth',
  },
  lcsStatusDslolDslolExclusiveMode => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupTacacsPlusServerEntryCompatibilityMode => {
    '0' => 'eDeactivated',
    '1' => 'eActivated',
  },
  lcsSetupLanBridgeIsolatedMode => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanClientIfcsEntryStationMode => {
    '0' => 'eNone',
    '1' => 'eAdhoc',
    '2' => 'eInfrastructure',
  },
  lcsStatusTcpIpHttpActiveTunnelsEntryState => {
    '0' => 'eActive',
    '1' => 'eClosing',
  },
  lcsSetupConfigAntiTheftProtectionIsdnIfc => {
    '1' => 'eS01',
  },
  lcsSetupWlanMngmtApConfRadioprofilsEntry5ghzMode => {
    '0' => 'eNormal',
    '3' => 'e108mbps',
    '4' => 'e11anMixed',
    '5' => 'eGreenfield',
  },
  lcsSetupComPortsCOMPortServCOMPortSetEntryDeviceType => {
    '1' => 'eOutband',
    '33' => 'eBelkinF5u103',
    '34' => 'eProlific2303',
    '35' => 'eFtdi8u232am',
    '36' => 'eGpsNmea',
    '45' => 'eQualcomDm',
  },
  lcsSetupInterfacesWlanRadioSettingsEntryPreferredDfsScheme => {
    '2' => 'eEn301893V13',
    '32' => 'eEn301893V15',
  },
  lcsSetupInterfacesWlanClientModesEntryConnectionKeepalive => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusMcpMcpUmtsState => {
    '0' => 'eUnknown',
    '1' => 'eWaitForUsbDevice',
    '2' => 'eRemoveUsbDevice',
    '3' => 'eWaitForComPortDevice',
    '4' => 'eRemoveComPortDevice',
    '5' => 'eNormalOperation',
    '6' => 'eRestart',
  },
  lcsStatusWlanMngmtStationTableEntryLastError => {
    '0' => 'eNone',
    '1' => 'eAuthSuccess',
    '2' => 'eDeauth',
    '3' => 'eAssocSuccess',
    '4' => 'eReassocSuccess',
    '5' => 'eDisassoc',
    '6' => 'eRadiusSuccess',
    '7' => 'eAuthReject',
    '8' => 'eAssocReject',
    '9' => 'eKeyhandshakeSuccess',
    '10' => 'eKeyhandshakeTimeout',
    '11' => 'eKeyhandshakeFailure',
    '12' => 'eRadiusReject',
    '13' => 'eSupervision',
    '14' => 'e8021xSuccess',
    '15' => 'e8021xFailure',
    '16' => 'eIdleTimeout',
    '17' => 'eAdminDeassoc',
    '18' => 'eRoamed',
  },
  lcsSetupWanRouterInterfaceEntryIfc => {
    '257' => 'eS01',
    '513' => 'eModem',
    '2049' => 'eDsl1',
    '2050' => 'eDsl2',
    '2051' => 'eDsl3',
    '2052' => 'eDsl4',
    '8193' => 'eAdsl',
    '16385' => 'eVdsl',
  },
  lcsSetupInterfacesModemMobileEntryIfc => {
    '257' => 'eS01',
    '513' => 'eModem',
    '2049' => 'eDsl1',
    '2050' => 'eDsl2',
    '2051' => 'eDsl3',
    '2052' => 'eDsl4',
    '8193' => 'eAdsl',
    '16385' => 'eVdsl',
  },
  lcsStatusPppRxOptionsLcpEntryAcfc => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupInterfacesLanInterfacesEntryIfc => {
    '1' => 'eLan1',
    '2' => 'eLan2',
    '3' => 'eLan3',
    '4' => 'eLan4',
    '5' => 'eLan5',
  },
  lcsStatusLanCableTestResultsEntryMdi2Status => {
    '0' => 'eUnknown',
    '1' => 'eOk',
    '2' => 'eOpen',
    '3' => 'eShort',
    '4' => 'eImpedanceFault',
    '5' => 'eFail',
    '6' => 'eBusy',
  },
  lcsStatusIpRouterVrrpOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupSnmpFullHostMib => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusLanBridgePortDataEntryBridgeGroup => {
    '0' => 'eBrg1',
    '1' => 'eBrg2',
    '2' => 'eBrg3',
    '3' => 'eBrg4',
    '4' => 'eBrg5',
    '5' => 'eBrg6',
    '6' => 'eBrg7',
    '7' => 'eBrg8',
    '255' => 'eNone',
  },
  lcsStatusComPortsComPortServerNetworkStatusEntryLastError => {
    '0' => 'eNone',
    '1' => 'eDnsError',
    '2' => 'eTCPConnErr',
    '3' => 'eRemDisc',
  },
  lcsStatusSnmpEventEntryTrapName => {
    '1' => 'eWarmstart',
    '2' => 'eLinkdown',
    '3' => 'eLinkup',
    '4' => 'eAuthfail',
    '5' => 'eEpgnloss',
    '6' => 'eEnterprise',
    '255' => 'eColdstart',
  },
  lcsStatusWlanChannelScanResultsEntryRadioBand => {
    '0' => 'eUnknown',
    '1' => 'e24ghz',
    '2' => 'e5ghz',
    '3' => 'e24ghz5ghz',
  },
  lcsSetupIpRouterFirewallApplicationsFtpFxpBlock => {
    '0' => 'eOff',
    '1' => 'eAllways',
    '2' => 'eWan',
    '3' => 'eDefaultRoute',
  },
  lcsSetupRadiusServerUsersEntryServiceType => {
    '0' => 'eAny',
    '1' => 'eLogin',
    '2' => 'eFramed',
    '8' => 'eAuthOnly',
  },
  lcsSetupUtmCfProfCatProfEntryDigitalPostcards => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupUtmCfProfCatProfEntryGovNonProv => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsStatusEthernetPortsPortsEntryAssignment => {
    '0' => 'eLan1',
    '1' => 'eLan2',
    '2' => 'eLan3',
    '3' => 'eLan4',
    '4' => 'eLan5',
    '512' => 'eDsl1',
    '513' => 'eDsl2',
    '514' => 'eDsl3',
    '515' => 'eDsl4',
    '65533' => 'eIdle',
    '65534' => 'eMonitor',
    '65535' => 'ePowerDown',
  },
  lcsStatusLanInterfacesEntryConnector => {
    '0' => 'eNone',
    '1' => 'e10bT',
    '2' => 'eFd10bTx',
    '3' => 'e100bTx',
    '4' => 'eFd100bTx',
    '6' => 'eFd1000bTx',
    '33' => 'e10b2',
    '34' => 'e10b5',
    '70' => 'eFd1000bF',
    '255' => 'ePowerDown',
  },
  lcsStatusWlanNetworksEntryMcastPwrSave => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupWlanMngmtNotificationAdvancedEntryActiveRadios => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusPppRxOptionsLcpEntryCallBack => {
    '0' => 'eLcpCbAdm',
    '1' => 'eLcpCbUsr',
    '2' => 'eLcpCbNameAuth',
    '3' => 'eLcpCbE164',
    '4' => 'eLcpCbHost',
    '5' => 'eLcpCb',
    '6' => 'eLcpMsCBCP',
    '255' => 'eNone',
  },
  lcsStatusWtpMngmtNetwprofilsEntryWpaVersion => {
    '0' => 'eWpa12',
    '1' => 'eWpa1',
    '2' => 'eWpa2',
  },
  lcsSetupIpRouterRipWanSitesEntryRfc2091 => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusComPortsDevEntryServ => {
    '1' => 'eWan',
    '2' => 'eCOMPortServ',
  },
  lcsStatusConfigDownloadStatusLastOperationsEntryType => {
    '0' => 'eConfiguration',
    '1' => 'eFirmware',
    '2' => 'eScript',
    '3' => 'eFile',
  },
  lcsStatusWlanMngmtSeenClientsEntryInterface => {
    '0' => 'eWlan1',
    '1' => 'eWlan2',
    '2' => 'eWlan3',
    '3' => 'eWlan4',
  },
  lcsStatusModemMobileFallbackTo2g => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusModemMobileHistoryEntryMode => {
    '0' => 'eUnknown',
    '1' => 'eUmts',
    '2' => 'eGprs',
    '3' => 'eGsm',
    '4' => 'eEdge',
    '5' => 'eHsdpa',
    '6' => 'eHsupa',
    '7' => 'eHspaPlus',
    '8' => 'eLte',
    '9' => 'eHspa',
  },
  lcsStatusLanBridgeSpanningTreeRstpPortTableEntryLearning => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanGroupEncryptionKeysEntryKeyType => {
    '0' => 'eNone',
    '1' => 'eUnknown',
    '5' => 'eWep40Bits',
    '13' => 'eWep104Bits',
    '16' => 'eWep128Bits',
    '64' => 'eTkip',
    '65' => 'eAesOcb',
    '66' => 'eAesCcm',
  },
  lcsSetupConfigFunctionKeysEntryKey => {
    '1' => 'eF1',
    '2' => 'eF2',
    '3' => 'eF3',
    '4' => 'eF4',
    '5' => 'eF5',
    '6' => 'eF6',
    '7' => 'eF7',
    '8' => 'eF8',
    '9' => 'eF9',
    '10' => 'eF10',
    '11' => 'eF11',
    '12' => 'eF12',
  },
  lcsStatusWlanClientIfcsEntryState => {
    '0' => 'eNone',
    '2' => 'eAuthenticated',
    '3' => 'eConnected',
    '5' => 'eJoined',
    '6' => 'eScanning',
    '7' => 'eChallenge',
    '8' => 'eKeyHandshake',
    '9' => 'eAssociated',
    '10' => 'e1xNegotiation',
    '11' => 'eWaitPmkCache',
  },
  lcsSetupCertsScepClntTraceLevel => {
    '3' => 'eOnlyErrors',
    '6' => 'eReduced',
    '7' => 'eAll',
  },
  lcsSetupWanRouterInterfaceEntryYc => {
    '0' => 'eYes',
    '1' => 'eNo',
  },
  lcsStatusSnmpEventEntryVendorName => {
    '0' => 'eNone',
    '1' => 'eStatChan',
    '4' => 'eFwUplStart',
    '5' => 'eUplsucc',
    '6' => 'eUplfailto',
    '7' => 'eUplfailincl',
    '8' => 'eUplfailbaddev',
    '9' => 'eLogin',
    '10' => 'eLogout',
    '11' => 'eCnfuplstart',
    '12' => 'eCnfdnlstart',
    '13' => 'eCnfdnlsucc',
    '14' => 'eBssscan',
    '15' => 'eBssstart',
    '16' => 'eBssjoin',
    '17' => 'eAuthstation',
    '18' => 'eDeauthstation',
    '19' => 'eAssstation',
    '20' => 'eReassstation',
    '21' => 'eDisassstation',
    '22' => 'eAssrej',
    '25' => 'eCardhung',
    '26' => 'eIpfwflt',
    '27' => 'eVpnconn',
    '28' => 'ePptpconn',
    '29' => 'eErrlogin',
    '33' => 'eKeyhandshakeTimeout',
    '35' => 'eSupervision',
    '38' => 'eLdblconn',
    '39' => 'ePppoesconn',
    '41' => 'eVrrp',
    '42' => 'eExceirp',
    '46' => 'eIdleTimeout',
    '47' => 'eAdminDeassoc',
    '48' => 'eWlanovertemp',
    '49' => 'eWlanovertempend',
    '50' => 'eWlanundertemp',
    '51' => 'eWlanundertempend',
    '52' => 'eMacchkfail',
    '53' => 'eRoamed',
    '54' => 'eConnected',
    '55' => 'eClLostconn',
    '56' => 'eClAuthfail',
    '57' => 'eClAssocfail',
    '58' => 'eClConnected',
    '59' => 'eCl8021xFail',
    '61' => 'eCastatchg',
    '62' => 'eNewpendreq',
    '63' => 'eMissingAp',
    '64' => 'eActiveAp',
    '65' => 'eNewAp',
    '66' => 'eStations',
    '67' => 'eNetworks',
    '68' => 'eNetworkcounts',
    '69' => 'eApCounter',
    '72' => 'eUtmcontentfilter',
    '73' => 'eCerttabmod',
    '74' => 'ePendlistmod',
    '75' => 'eNextdoorAp',
    '76' => 'eWlcTunnels',
    '77' => 'eLicensemgtexpire',
    '78' => 'eVdslstate',
    '79' => 'eScrptuplstart',
    '80' => 'eScrptdnlstart',
    '1000' => 'eSpgtreePortstatchg',
    '1001' => 'eSpgtreeRstpstatchg',
    '1002' => 'eSpgtreeRootportchg',
    '2000' => 'eHttpTunnelOpen',
    '2001' => 'eHttpTunnelClose',
    '3000' => 'eLanauthuseradd',
    '3001' => 'eLanauthuserdel',
    '3002' => 'eLanauthsessionstart',
    '3003' => 'eLanauthsessionend',
    '4000' => 'eTempmonovertemp',
    '4001' => 'eTempmonnoovertemp',
    '4002' => 'eTempmonundertemp',
    '4003' => 'eTempmonnoundertemp',
    '4500' => 'eVoltmonovervolt',
    '4501' => 'eVoltmonnoovervolt',
    '4502' => 'eVoltmonundervolt',
    '4503' => 'eVoltmonnoundervolt',
    '5001' => 'eLanDownshift',
    '5002' => 'eLanOvertempThrottle',
    '5003' => 'eLanOvertempThrottleEnd',
    '5004' => 'eLanOvertempThrottleRecommend',
    '5101' => 'eEthPortDownshift',
    '6100' => 'eWlanConfadaptRadiochannel',
    '6101' => 'eWlanConfadaptRadiomode',
    '6102' => 'eWlanConfadaptBasicRate',
    '6103' => 'eWlanConfadaptEapolRate',
    '6200' => 'eWlanAlarmP2pSignal',
    '6201' => 'eWlanAlarmP2pTxtotretries',
    '6202' => 'eWlanAlarmP2pTxerrors',
    '6203' => 'eWlanAlarmNetwSignal',
    '6204' => 'eWlanAlarmNetwTxtotretries',
    '6205' => 'eWlanAlarmNetwTxerrors',
    '6206' => 'eWlanAlarmClientSignal',
    '6207' => 'eWlanAlarmClientTxtotretries',
    '6208' => 'eWlanAlarmClientTxerrors',
    '7000' => 'eUplinvversion',
    '7001' => 'eUplfileexists',
  },
  lcsSetupDnsOperating => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsSetupUtmCfProfCatProfEntryGamblingLottery => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsStatusConfigScanResultsEntryState => {
    '0' => 'eScanning',
    '1' => 'eReady',
    '2' => 'eError',
  },
  lcsSetupInterfacesWlanNetworkEntryClosedNetwork => {
    '0' => 'eNo',
    '1' => 'eYes',
    '2' => 'eTightened',
  },
  lcsSetupWanActionTableEntryCondition => {
    '0' => 'eEstablish',
    '1' => 'eDisconnect',
    '2' => 'eEnd',
    '3' => 'eFailure',
    '4' => 'eEstablishFailure',
  },
  lcsStatusWtpMngmtNetwprofilsEntryVlanMode => {
    '0' => 'eUntagged',
    '1' => 'eTagged',
  },
  lcsSetupTacacsPlusFallbackToLocalUsers => {
    '0' => 'eAllowed',
    '1' => 'eProhibited',
  },
  lcsStatusIpRouterRipDynLanSitesEntryRipAccept => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanRadiosEntryExtChannel => {
    '0' => 'eNone',
    '1' => 'eAbove',
    '3' => 'eBelow',
  },
  lcsStatusTcpIpDhcpNetworkListEntryBroadcastBit => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
  lcsStatusWlanStationTableEntryAlarmState => {
    '0' => 'eNo',
    '1' => 'ePhySignal',
    '2' => 'eTotalRetries',
    '4' => 'eTxErrors',
  },
  lcsSetupUtmCfProfCatProfEntryMedicineHealthSelfHelp => {
    '0' => 'eAllowed',
    '1' => 'eForbidden',
    '2' => 'eOverride',
  },
  lcsSetupTacacsPlusAccounting => {
    '0' => 'eDeactivated',
    '1' => 'eActivated',
  },
  lcsSetupInterfacesEthernetPortsEntryDownshift => {
    '0' => 'eNo',
    '1' => 'eYes',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::LMSENSORSMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'LM-SENSORS-MIB'} = {
  url => '',
  name => 'LM-SENSORS-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'LM-SENSORS-MIB'} = {
  'lmSensors' => '1.3.6.1.4.1.2021.13.16',
  'lmSensorsMIB' => '1.3.6.1.4.1.2021.13.16.1',
  'lmTempSensorsTable' => '1.3.6.1.4.1.2021.13.16.2',
  'lmTempSensorsEntry' => '1.3.6.1.4.1.2021.13.16.2.1',
  'lmTempSensorsIndex' => '1.3.6.1.4.1.2021.13.16.2.1.1',
  'lmTempSensorsDevice' => '1.3.6.1.4.1.2021.13.16.2.1.2',
  'lmTempSensorsValue' => '1.3.6.1.4.1.2021.13.16.2.1.3',
  'lmFanSensorsTable' => '1.3.6.1.4.1.2021.13.16.3',
  'lmFanSensorsEntry' => '1.3.6.1.4.1.2021.13.16.3.1',
  'lmFanSensorsIndex' => '1.3.6.1.4.1.2021.13.16.3.1.1',
  'lmFanSensorsDevice' => '1.3.6.1.4.1.2021.13.16.3.1.2',
  'lmFanSensorsValue' => '1.3.6.1.4.1.2021.13.16.3.1.3',
  'lmVoltSensorsTable' => '1.3.6.1.4.1.2021.13.16.4',
  'lmVoltSensorsEntry' => '1.3.6.1.4.1.2021.13.16.4.1',
  'lmVoltSensorsIndex' => '1.3.6.1.4.1.2021.13.16.4.1.1',
  'lmVoltSensorsDevice' => '1.3.6.1.4.1.2021.13.16.4.1.2',
  'lmVoltSensorsValue' => '1.3.6.1.4.1.2021.13.16.4.1.3',
  'lmMiscSensorsTable' => '1.3.6.1.4.1.2021.13.16.5',
  'lmMiscSensorsEntry' => '1.3.6.1.4.1.2021.13.16.5.1',
  'lmMiscSensorsIndex' => '1.3.6.1.4.1.2021.13.16.5.1.1',
  'lmMiscSensorsDevice' => '1.3.6.1.4.1.2021.13.16.5.1.2',
  'lmMiscSensorsValue' => '1.3.6.1.4.1.2021.13.16.5.1.3',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::LOADBALSYSTEMMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'LOAD-BAL-SYSTEM-MIB'} = {
  url => '',
  name => 'LOAD-BAL-SYSTEM-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'LOAD-BAL-SYSTEM-MIB'} = {
  'poolTable' => '1.3.6.1.4.1.3375.1.1.7.2',
  'poolEntry' => '1.3.6.1.4.1.3375.1.1.7.2.1',
  'poolName' => '1.3.6.1.4.1.3375.1.1.7.2.1.1',
  'poolLBMode' => '1.3.6.1.4.1.3375.1.1.7.2.1.2',
  'poolDependent' => '1.3.6.1.4.1.3375.1.1.7.2.1.3',
  'poolMemberQty' => '1.3.6.1.4.1.3375.1.1.7.2.1.4',
  'poolBitsin' => '1.3.6.1.4.1.3375.1.1.7.2.1.5',
  'poolBitsout' => '1.3.6.1.4.1.3375.1.1.7.2.1.6',
  'poolBitsinHi32' => '1.3.6.1.4.1.3375.1.1.7.2.1.7',
  'poolBitsoutHi32' => '1.3.6.1.4.1.3375.1.1.7.2.1.8',
  'poolPktsin' => '1.3.6.1.4.1.3375.1.1.7.2.1.9',
  'poolPktsout' => '1.3.6.1.4.1.3375.1.1.7.2.1.10',
  'poolPktsinHi32' => '1.3.6.1.4.1.3375.1.1.7.2.1.11',
  'poolPktsoutHi32' => '1.3.6.1.4.1.3375.1.1.7.2.1.12',
  'poolMaxConn' => '1.3.6.1.4.1.3375.1.1.7.2.1.13',
  'poolCurrentConn' => '1.3.6.1.4.1.3375.1.1.7.2.1.14',
  'poolTotalConn' => '1.3.6.1.4.1.3375.1.1.7.2.1.15',
  'poolPersistMode' => '1.3.6.1.4.1.3375.1.1.7.2.1.16',
  'poolSSLTimeout' => '1.3.6.1.4.1.3375.1.1.7.2.1.17',
  'poolSimpleTimeout' => '1.3.6.1.4.1.3375.1.1.7.2.1.18',
  'poolSimpleMask' => '1.3.6.1.4.1.3375.1.1.7.2.1.19',
  'poolStickyMask' => '1.3.6.1.4.1.3375.1.1.7.2.1.20',
  'poolCookieMode' => '1.3.6.1.4.1.3375.1.1.7.2.1.21',
  'poolCookieExpiration' => '1.3.6.1.4.1.3375.1.1.7.2.1.22',
  'poolCookieHashName' => '1.3.6.1.4.1.3375.1.1.7.2.1.23',
  'poolCookieHashOffset' => '1.3.6.1.4.1.3375.1.1.7.2.1.24',
  'poolCookieHashLength' => '1.3.6.1.4.1.3375.1.1.7.2.1.25',
  'poolMinActiveMembers' => '1.3.6.1.4.1.3375.1.1.7.2.1.26',
  'poolActiveMemberCount' => '1.3.6.1.4.1.3375.1.1.7.2.1.27',
  'poolPersistMirror' => '1.3.6.1.4.1.3375.1.1.7.2.1.28',
  'poolFallbackHost' => '1.3.6.1.4.1.3375.1.1.7.2.1.29',
  'poolMemberTable' => '1.3.6.1.4.1.3375.1.1.8.2',
  'poolMemberEntry' => '1.3.6.1.4.1.3375.1.1.8.2.1',
  'poolMemberPoolName' => '1.3.6.1.4.1.3375.1.1.8.2.1.1',
  'poolMemberIpAddress' => '1.3.6.1.4.1.3375.1.1.8.2.1.2',
  'poolMemberPort' => '1.3.6.1.4.1.3375.1.1.8.2.1.3',
  'poolMemberMaintenance' => '1.3.6.1.4.1.3375.1.1.8.2.1.4',
  'poolMemberRatio' => '1.3.6.1.4.1.3375.1.1.8.2.1.5',
  'poolMemberPriority' => '1.3.6.1.4.1.3375.1.1.8.2.1.6',
  'poolMemberWeight' => '1.3.6.1.4.1.3375.1.1.8.2.1.7',
  'poolMemberRipeness' => '1.3.6.1.4.1.3375.1.1.8.2.1.8',
  'poolMemberBitsin' => '1.3.6.1.4.1.3375.1.1.8.2.1.9',
  'poolMemberBitsout' => '1.3.6.1.4.1.3375.1.1.8.2.1.10',
  'poolMemberBitsinHi32' => '1.3.6.1.4.1.3375.1.1.8.2.1.11',
  'poolMemberBitsoutHi32' => '1.3.6.1.4.1.3375.1.1.8.2.1.12',
  'poolMemberPktsin' => '1.3.6.1.4.1.3375.1.1.8.2.1.13',
  'poolMemberPktsout' => '1.3.6.1.4.1.3375.1.1.8.2.1.14',
  'poolMemberPktsinHi32' => '1.3.6.1.4.1.3375.1.1.8.2.1.15',
  'poolMemberPktsoutHi32' => '1.3.6.1.4.1.3375.1.1.8.2.1.16',
  'poolMemberConnLimit' => '1.3.6.1.4.1.3375.1.1.8.2.1.17',
  'poolMemberMaxConn' => '1.3.6.1.4.1.3375.1.1.8.2.1.18',
  'poolMemberCurrentConn' => '1.3.6.1.4.1.3375.1.1.8.2.1.19',
  'poolMemberTotalConn' => '1.3.6.1.4.1.3375.1.1.8.2.1.20',
  'poolMemberStatus' => '1.3.6.1.4.1.3375.1.1.8.2.1.21',
  'poolMemberIpStatus' => '1.3.6.1.4.1.3375.1.1.8.2.1.22',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::MINIIFMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'MINI-IFMIB'} = {
  url => '',
  name => 'MINI-IFMIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'MINI-IFMIB'} = {
  'ifNumber' => '1.3.6.1.2.1.2.1',
  'ifTable' => '1.3.6.1.2.1.2.2',
  'ifEntry' => '1.3.6.1.2.1.2.2.1',
  'ifIndex' => '1.3.6.1.2.1.2.2.1.1',
  'ifDescr' => '1.3.6.1.2.1.2.2.1.2',
  'ifXTable' => '1.3.6.1.2.1.31.1.1',
  'ifXEntry' => '1.3.6.1.2.1.31.1.1.1',
  'ifName' => '1.3.6.1.2.1.31.1.1.1.1',
  'ifAlias' => '1.3.6.1.2.1.31.1.1.1.18',
  'ifTableLastChange' => '1.3.6.1.2.1.31.1.5',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::NETGEARMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'NETGEAR-MIB'} = {
  url => '',
  name => 'NETGEAR-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'NETGEAR-MIB'} = 
  '1.3.6.1.4.1.4526';



package Monitoring::GLPlugin::SNMP::MibsAndOids::NETSCREENCHASSISMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'NETSCREEN-CHASSIS-MIB'} = {
  url => '',
  name => 'NETSCREEN-CHASSIS-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'NETSCREEN-CHASSIS-MIB'} = {
  'nsPowerTable' => '1.3.6.1.4.1.3224.21.1',
  'nsPowerEntry' => '1.3.6.1.4.1.3224.21.1.1',
  'nsPowerId' => '1.3.6.1.4.1.3224.21.1.1.1',
  'nsPowerStatus' => '1.3.6.1.4.1.3224.21.1.1.2',
  'nsPowerStatusDefinition' => {
    '0' => 'fail',
    '1' => 'good',
  },
  'nsPowerDesc' => '1.3.6.1.4.1.3224.21.1.1.3',
  'nsFanTable' => '1.3.6.1.4.1.3224.21.2',
  'nsFanEntry' => '1.3.6.1.4.1.3224.21.2.1',
  'nsFanId' => '1.3.6.1.4.1.3224.21.2.1.1',
  'nsFanStatus' => '1.3.6.1.4.1.3224.21.2.1.2',
  'nsFanStatusDefinition' => {
    '0' => 'fail',
    '1' => 'good',
    '2' => 'notInstalled',
  },
  'nsFanDesc' => '1.3.6.1.4.1.3224.21.2.1.3',
  'sysBatteryStatus' => '1.3.6.1.4.1.3224.21.3.0',
  'sysBatteryStatusDefinition' => {
    '1' => 'good',
    '2' => 'error',
  },
  'nsTemperatureTable' => '1.3.6.1.4.1.3224.21.4',
  'nsTemperatureEntry' => '1.3.6.1.4.1.3224.21.4.1',
  'nsTemperatureId' => '1.3.6.1.4.1.3224.21.4.1.1',
  'nsTemperatureSlotId' => '1.3.6.1.4.1.3224.21.4.1.2',
  'nsTemperatureCur' => '1.3.6.1.4.1.3224.21.4.1.3',
  'nsTemperatureDesc' => '1.3.6.1.4.1.3224.21.4.1.4',
  'nsSlotTable' => '1.3.6.1.4.1.3224.21.5',
  'nsSlotEntry' => '1.3.6.1.4.1.3224.21.5.1',
  'nsSlotId' => '1.3.6.1.4.1.3224.21.5.1.1',
  'nsSlotType' => '1.3.6.1.4.1.3224.21.5.1.2',
  'nsSlotStatus' => '1.3.6.1.4.1.3224.21.5.1.3',
  'nsSlotStatusDefinition' => {
    '0' => 'fail',
    '1' => 'good',
    '2' => 'notInstalled',
  },
  'nsSlotSN' => '1.3.6.1.4.1.3224.21.5.1.4',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::NETSCREENNSRPMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'NETSCREEN-NSRP-MIB'} = {
  url => '',
  name => 'NETSCREEN-NSRP-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'NETSCREEN-NSRP-MIB'} =
    '1.3.6.1.4.1.3224.6.0';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'NETSCREEN-NSRP-MIB'} = {
  netscreenNsrpMibModule => '1.3.6.1.4.1.3224.6.0',
  netscreenNsrpGeneral => '1.3.6.1.4.1.3224.6.1',
  nsrpGeneralClusterId => '1.3.6.1.4.1.3224.6.1.1',
  nsrpGeneralLocalUnitId => '1.3.6.1.4.1.3224.6.1.2',
  nsrpGeneralEncrypEnable => '1.3.6.1.4.1.3224.6.1.3',
  nsrpGeneralEncrypEnableDefinition => 'NETSCREEN-NSRP-MIB::nsrpGeneralEncrypEnable',
  nsrpGeneralAuthEnable => '1.3.6.1.4.1.3224.6.1.4',
  nsrpGeneralAuthEnableDefinition => 'NETSCREEN-NSRP-MIB::nsrpGeneralAuthEnable',
  nsrpGeneralIfMonitor => '1.3.6.1.4.1.3224.6.1.5',
  nsrpGeneralGratArps => '1.3.6.1.4.1.3224.6.1.6',
  netscreenNsrpVSD => '1.3.6.1.4.1.3224.6.2',
  nsrpVsdGroupTable => '1.3.6.1.4.1.3224.6.2.1',
  nsrpVsdGroupEntry => '1.3.6.1.4.1.3224.6.2.1.1',
  nsrpVsdGroupID => '1.3.6.1.4.1.3224.6.2.1.1.1',
  nsrpVsdGroupPriority => '1.3.6.1.4.1.3224.6.2.1.1.2',
  nsrpVsdGroupPreempt => '1.3.6.1.4.1.3224.6.2.1.1.3',
  nsrpVsdGroupHoldDownTime => '1.3.6.1.4.1.3224.6.2.1.1.4',
  nsrpVsdGroupNumberOfUnit => '1.3.6.1.4.1.3224.6.2.1.1.5',
  nsrpVsdGroupCntStateChange => '1.3.6.1.4.1.3224.6.2.1.1.6',
  nsrpVsdGroupCntToInit => '1.3.6.1.4.1.3224.6.2.1.1.7',
  nsrpVsdGroupCntToMaster => '1.3.6.1.4.1.3224.6.2.1.1.8',
  nsrpVsdGroupCntToPBackup => '1.3.6.1.4.1.3224.6.2.1.1.9',
  nsrpVsdGroupCntToBackup => '1.3.6.1.4.1.3224.6.2.1.1.10',
  nsrpVsdGroupCntToIneligible => '1.3.6.1.4.1.3224.6.2.1.1.11',
  nsrpVsdGroupCntToInoperable => '1.3.6.1.4.1.3224.6.2.1.1.12',
  nsrpVsdGroupCntMasterConflict => '1.3.6.1.4.1.3224.6.2.1.1.13',
  nsrpVsdGroupCntPbConfilict => '1.3.6.1.4.1.3224.6.2.1.1.14',
  nsrpVsdGroupCntHeartbeatTx => '1.3.6.1.4.1.3224.6.2.1.1.15',
  nsrpVsdGroupCntHeartbeatRx => '1.3.6.1.4.1.3224.6.2.1.1.16',
  nsrpVsdMemberTable => '1.3.6.1.4.1.3224.6.2.2',
  nsrpVsdMemberEntry => '1.3.6.1.4.1.3224.6.2.2.1',
  nsrpVsdMemberGroupId => '1.3.6.1.4.1.3224.6.2.2.1.1',
  nsrpVsdMemberUnitId => '1.3.6.1.4.1.3224.6.2.2.1.2',
  nsrpVsdMemberStatus => '1.3.6.1.4.1.3224.6.2.2.1.3',
  nsrpVsdMemberStatusDefinition => 'NETSCREEN-NSRP-MIB::nsrpVsdMemberStatus',
  nsrpVsdMemberPriority => '1.3.6.1.4.1.3224.6.2.2.1.4',
  nsrpVsdMemberPreempt => '1.3.6.1.4.1.3224.6.2.2.1.5',
  nsrpVsdInterfaceTable => '1.3.6.1.4.1.3224.6.2.3',
  nsrpVsdInterfaceEntry => '1.3.6.1.4.1.3224.6.2.3.1',
  nsrpVsdIfIndex => '1.3.6.1.4.1.3224.6.2.3.1.1',
  nsrpVsdIfStatus => '1.3.6.1.4.1.3224.6.2.3.1.2',
  nsrpVsdIfStatusDefinition => 'NETSCREEN-NSRP-MIB::nsrpVsdIfStatus',
  nsrpVsdIfGroupId => '1.3.6.1.4.1.3224.6.2.3.1.3',
  nsrpVsdIfIp => '1.3.6.1.4.1.3224.6.2.3.1.4',
  nsrpVsdIfNetmask => '1.3.6.1.4.1.3224.6.2.3.1.5',
  nsrpVsdIfGateway => '1.3.6.1.4.1.3224.6.2.3.1.6',
  nsrpVsdIfName => '1.3.6.1.4.1.3224.6.2.3.1.7',
  nsrpVsdIfVLAN => '1.3.6.1.4.1.3224.6.2.3.1.8',
  nsrpVsdIfMAC => '1.3.6.1.4.1.3224.6.2.3.1.9',
  nsrpVsdIfVSys => '1.3.6.1.4.1.3224.6.2.3.1.10',
  nsrpVsdIfMngTelnet => '1.3.6.1.4.1.3224.6.2.3.1.11',
  nsrpVsdIfMngTelnetDefinition => 'NETSCREEN-NSRP-MIB::nsrpVsdIfMngTelnet',
  nsrpVsdIfMngSCS => '1.3.6.1.4.1.3224.6.2.3.1.12',
  nsrpVsdIfMngSCSDefinition => 'NETSCREEN-NSRP-MIB::nsrpVsdIfMngSCS',
  nsrpVsdIfMngWEB => '1.3.6.1.4.1.3224.6.2.3.1.13',
  nsrpVsdIfMngWEBDefinition => 'NETSCREEN-NSRP-MIB::nsrpVsdIfMngWEB',
  nsrpVsdIfMngSSL => '1.3.6.1.4.1.3224.6.2.3.1.14',
  nsrpVsdIfMngSSLDefinition => 'NETSCREEN-NSRP-MIB::nsrpVsdIfMngSSL',
  nsrpVsdIfMngSNMP => '1.3.6.1.4.1.3224.6.2.3.1.15',
  nsrpVsdIfMngSNMPDefinition => 'NETSCREEN-NSRP-MIB::nsrpVsdIfMngSNMP',
  nsrpVsdIfMngGlobal => '1.3.6.1.4.1.3224.6.2.3.1.16',
  nsrpVsdIfMngGlobalDefinition => 'NETSCREEN-NSRP-MIB::nsrpVsdIfMngGlobal',
  nsrpVsdIfMngGlobalPro => '1.3.6.1.4.1.3224.6.2.3.1.17',
  nsrpVsdIfMngGlobalProDefinition => 'NETSCREEN-NSRP-MIB::nsrpVsdIfMngGlobalPro',
  nsrpVsdIfMngPing => '1.3.6.1.4.1.3224.6.2.3.1.18',
  nsrpVsdIfMngPingDefinition => 'NETSCREEN-NSRP-MIB::nsrpVsdIfMngPing',
  nsrpVsdIfMngIdentReset => '1.3.6.1.4.1.3224.6.2.3.1.19',
  nsrpVsdIfMngIdentResetDefinition => 'NETSCREEN-NSRP-MIB::nsrpVsdIfMngIdentReset',
  nsrpVsdGeneral => '1.3.6.1.4.1.3224.6.2.4',
  nsrpVsdGeneralInitHoldTime => '1.3.6.1.4.1.3224.6.2.4.1',
  nsrpVsdGeneralHbInterval => '1.3.6.1.4.1.3224.6.2.4.2',
  nsrpVsdGeneralHbLostThres => '1.3.6.1.4.1.3224.6.2.4.3',
  netscreenNsrpRTO => '1.3.6.1.4.1.3224.6.3',
  nsrpRtoGroupTable => '1.3.6.1.4.1.3224.6.3.1',
  nsrpRtoGroupEntry => '1.3.6.1.4.1.3224.6.3.1.1',
  nsrpRtoGroupId => '1.3.6.1.4.1.3224.6.3.1.1.1',
  nsrpRtoNumOfUnit => '1.3.6.1.4.1.3224.6.3.1.1.2',
  nsrpRtoUnitTable => '1.3.6.1.4.1.3224.6.3.2',
  nsrpRtoUnitEntry => '1.3.6.1.4.1.3224.6.3.2.1',
  nsrpRtoUnitGroupId => '1.3.6.1.4.1.3224.6.3.2.1.1',
  nsrpRtoUnitId => '1.3.6.1.4.1.3224.6.3.2.1.2',
  nsrpRtoUnitStatus => '1.3.6.1.4.1.3224.6.3.2.1.3',
  nsrpRtoUnitStatusDefinition => 'NETSCREEN-NSRP-MIB::nsrpRtoUnitStatus',
  nsrpRtoUnitDirection => '1.3.6.1.4.1.3224.6.3.2.1.4',
  nsrpRtoUnitDirectionDefinition => 'NETSCREEN-NSRP-MIB::nsrpRtoUnitDirection',
  nsrpRtoUnitLostHeartbeat => '1.3.6.1.4.1.3224.6.3.2.1.5',
  nsrpRtoUnitToActive => '1.3.6.1.4.1.3224.6.3.2.1.6',
  nsrpRtoUnitToSet => '1.3.6.1.4.1.3224.6.3.2.1.7',
  nsrpRtoUnitLostPeer => '1.3.6.1.4.1.3224.6.3.2.1.8',
  nsrpRtoUnitGroupDetach => '1.3.6.1.4.1.3224.6.3.2.1.9',
  nsrpRtoCounter => '1.3.6.1.4.1.3224.6.3.3',
  nsrpRtoCounterPakForwarded => '1.3.6.1.4.1.3224.6.3.3.1',
  nsrpRtoCounterPakReceived => '1.3.6.1.4.1.3224.6.3.3.2',
  nsrpRtoCounterTable => '1.3.6.1.4.1.3224.6.3.3.3',
  nsrpRtoCounterEntry => '1.3.6.1.4.1.3224.6.3.3.3.1',
  nsrpRtoCounterIdx => '1.3.6.1.4.1.3224.6.3.3.3.1.1',
  nsrpRtoCounterName => '1.3.6.1.4.1.3224.6.3.3.3.1.2',
  nsrpRtoCounterSend => '1.3.6.1.4.1.3224.6.3.3.3.1.3',
  nsrpRtoCounterReceive => '1.3.6.1.4.1.3224.6.3.3.3.1.4',
  nsrpRtoCounterDrop => '1.3.6.1.4.1.3224.6.3.3.3.1.5',
  nsrpRtoGeneral => '1.3.6.1.4.1.3224.6.3.4',
  nsrpRtoGeneralHbInterval => '1.3.6.1.4.1.3224.6.3.4.1',
  nsrpRtoGeneralHbLostThres => '1.3.6.1.4.1.3224.6.3.4.2',
  nsrpRtoGeneralSessSyncEnable => '1.3.6.1.4.1.3224.6.3.4.3',
  nsrpRtoGeneralSessSyncEnableDefinition => 'NETSCREEN-NSRP-MIB::nsrpRtoGeneralSessSyncEnable',
  netscreenNsrpTrack => '1.3.6.1.4.1.3224.6.4',
  nsrpTrackEnable => '1.3.6.1.4.1.3224.6.4.1',
  nsrpTrackThreshold => '1.3.6.1.4.1.3224.6.4.2',
  nsrpTrackFailoverEnalble => '1.3.6.1.4.1.3224.6.4.3',
  nsrpTrackTable => '1.3.6.1.4.1.3224.6.4.4',
  nsrpTrackEntry => '1.3.6.1.4.1.3224.6.4.4.1',
  nsrpTrackIpIndex => '1.3.6.1.4.1.3224.6.4.4.1.1',
  nsrpTrackIpAddr => '1.3.6.1.4.1.3224.6.4.4.1.2',
  nsrpTrackIpStatus => '1.3.6.1.4.1.3224.6.4.4.1.3',
  nsrpTrackIpStatusDefinition => 'NETSCREEN-NSRP-MIB::nsrpTrackIpStatus',
  nsrpTrackIpTimestamp => '1.3.6.1.4.1.3224.6.4.4.1.4',
  nsrpTrackIpInterval => '1.3.6.1.4.1.3224.6.4.4.1.5',
  nsrpTrackIpThreshhold => '1.3.6.1.4.1.3224.6.4.4.1.6',
  nsrpTrackIpMethod => '1.3.6.1.4.1.3224.6.4.4.1.7',
  nsrpTrackIpMethodDefinition => 'NETSCREEN-NSRP-MIB::nsrpTrackIpMethod',
  nsrpTrackIpWeight => '1.3.6.1.4.1.3224.6.4.4.1.8',
  nsrpTrackIpIfName => '1.3.6.1.4.1.3224.6.4.4.1.9',
  nsrpTrackIpTotalCheck => '1.3.6.1.4.1.3224.6.4.4.1.10',
  nsrpTrackIpTotalFailedCheck => '1.3.6.1.4.1.3224.6.4.4.1.11',
  netscreenNsrpCluster => '1.3.6.1.4.1.3224.6.5',
  nsrpClusterTable => '1.3.6.1.4.1.3224.6.5.1',
  nsrpClusterEntry => '1.3.6.1.4.1.3224.6.5.1.1',
  nsrpClusterTblIndex => '1.3.6.1.4.1.3224.6.5.1.1.1',
  nsrpClusterUnitId => '1.3.6.1.4.1.3224.6.5.1.1.2',
  nsrpClusterUnitCtrlMac => '1.3.6.1.4.1.3224.6.5.1.1.3',
  nsrpClusterUnitDataMac => '1.3.6.1.4.1.3224.6.5.1.1.4',
  netscreenNsrpLinkInfo => '1.3.6.1.4.1.3224.6.6',
  nsrpLinkInfoTable => '1.3.6.1.4.1.3224.6.6.1',
  nsrpLinkInfoEntry => '1.3.6.1.4.1.3224.6.6.1.1',
  nsrpLinkInfoIndex => '1.3.6.1.4.1.3224.6.6.1.1.1',
  nsrpLinkInfoLinkType => '1.3.6.1.4.1.3224.6.6.1.1.2',
  nsrpLinkInfoLinkTypeDefinition => 'NETSCREEN-NSRP-MIB::nsrpLinkInfoLinkType',
  nsrpLinkInfoChannel => '1.3.6.1.4.1.3224.6.6.1.1.3',
  nsrpLinkInfoMac => '1.3.6.1.4.1.3224.6.6.1.1.4',
  nsrpLinkInfoState => '1.3.6.1.4.1.3224.6.6.1.1.5',
  nsrpLinkInfoStateDefinition => 'NETSCREEN-NSRP-MIB::nsrpLinkInfoState',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'NETSCREEN-NSRP-MIB'} = {
  nsrpTrackIpMethod => {
    '0' => 'ping',
    '1' => 'arp',
  },
  nsrpRtoUnitDirection => {
    '1' => 'out',
    '2' => 'in',
  },
  nsrpVsdIfMngWEB => {
    '0' => 'disable',
    '1' => 'enable',
  },
  nsrpVsdIfMngSCS => {
    '0' => 'disable',
    '1' => 'enable',
  },
  nsrpVsdIfMngIdentReset => {
    '0' => 'disable',
    '1' => 'enable',
  },
  nsrpVsdIfMngSNMP => {
    '0' => 'disable',
    '1' => 'enable',
  },
  nsrpVsdMemberStatus => {
    '0' => 'undefined',
    '1' => 'init',
    '2' => 'master',
    '3' => 'primary-backup',
    '4' => 'backup',
    '5' => 'ineligible',
    '6' => 'inoperable',
  },
  nsrpGeneralAuthEnable => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  nsrpTrackIpStatus => {
    '0' => 'success',
    '1' => 'fail',
  },
  nsrpLinkInfoState => {
    '0' => 'down',
    '1' => 'up',
  },
  nsrpRtoUnitStatus => {
    '0' => 'undefined',
    '1' => 'set',
    '2' => 'active',
  },
  nsrpVsdIfMngGlobal => {
    '0' => 'disable',
    '1' => 'enable',
  },
  nsrpVsdIfMngGlobalPro => {
    '0' => 'disable',
    '1' => 'enable',
  },
  nsrpVsdIfMngTelnet => {
    '0' => 'disable',
    '1' => 'enable',
  },
  nsrpRtoGeneralSessSyncEnable => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  nsrpLinkInfoLinkType => {
    '0' => 'control',
    '1' => 'data',
    '2' => 'unused',
    '3' => 'hapath2',
  },
  nsrpGeneralEncrypEnable => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  nsrpVsdIfMngSSL => {
    '0' => 'disable',
    '1' => 'enable',
  },
  nsrpVsdIfMngPing => {
    '0' => 'disable',
    '1' => 'enable',
  },
  nsrpVsdIfStatus => {
    '0' => 'down',
    '1' => 'inactive',
    '2' => 'active',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::NETSCREENPRODUCTSMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'NETSCREEN-PRODUCTS-MIB'} = {
  url => '',
  name => 'NETSCREEN-PRODUCTS-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'NETSCREEN-PRODUCTS-MIB'} = 
  '1.3.6.1.4.1.3224.1';



package Monitoring::GLPlugin::SNMP::MibsAndOids::NETSCREENRESOURCEMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'NETSCREEN-RESOURCE-MIB'} = {
  url => '',
  name => 'NETSCREEN-RESOURCE-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'NETSCREEN-RESOURCE-MIB'} = {
  'nsResCpuAvg' => '1.3.6.1.4.1.3224.16.1.1.0',
  'nsResCpuLast1Min' => '1.3.6.1.4.1.3224.16.1.2.0',
  'nsResCpuLast5Min' => '1.3.6.1.4.1.3224.16.1.3.0',
  'nsResCpuLast15Min' => '1.3.6.1.4.1.3224.16.1.4.0',
  'nsResMemAllocate' => '1.3.6.1.4.1.3224.16.2.1.0',
  'nsResMemLeft' => '1.3.6.1.4.1.3224.16.2.2.0',
  'nsResMemFrag' => '1.3.6.1.4.1.3224.16.2.3.0',
  'nsResSessAllocate' => '1.3.6.1.4.1.3224.16.3.2.0',
  'nsResSessMaxium' => '1.3.6.1.4.1.3224.16.3.3.0',
  'nsResSessFailed' => '1.3.6.1.4.1.3224.16.3.4.0',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::NETSWITCHMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'NETSWITCH-MIB'} = {
  url => '',
  name => 'NETSWITCH-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'NETSWITCH-MIB'} =
    '1.3.6.1.4.1.11.2.14.11.5.1.1';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'NETSWITCH-MIB'} = {
  hpOpSystem => '1.3.6.1.4.1.11.2.14.11.5.1.1',
  hpBuf => '1.3.6.1.4.1.11.2.14.11.5.1.1.1',
  hpMsgBuf => '1.3.6.1.4.1.11.2.14.11.5.1.1.1.1',
  hpMsgBufTable => '1.3.6.1.4.1.11.2.14.11.5.1.1.1.1.1',
  hpMsgBufEntry => '1.3.6.1.4.1.11.2.14.11.5.1.1.1.1.1.1',
  hpMsgBufSlotIndex => '1.3.6.1.4.1.11.2.14.11.5.1.1.1.1.1.1.1',
  hpMsgBufCorrupted => '1.3.6.1.4.1.11.2.14.11.5.1.1.1.1.1.1.2',
  hpMsgBufFree => '1.3.6.1.4.1.11.2.14.11.5.1.1.1.1.1.1.3',
  hpMsgBufInit => '1.3.6.1.4.1.11.2.14.11.5.1.1.1.1.1.1.4',
  hpMsgBufMin => '1.3.6.1.4.1.11.2.14.11.5.1.1.1.1.1.1.5',
  hpMsgBufMiss => '1.3.6.1.4.1.11.2.14.11.5.1.1.1.1.1.1.6',
  hpMsgBufSize => '1.3.6.1.4.1.11.2.14.11.5.1.1.1.1.1.1.7',
  hpPktBuf => '1.3.6.1.4.1.11.2.14.11.5.1.1.1.2',
  hpPktBufTable => '1.3.6.1.4.1.11.2.14.11.5.1.1.1.2.1',
  hpPktBufEntry => '1.3.6.1.4.1.11.2.14.11.5.1.1.1.2.1.1',
  hpPktBufSlotIndex => '1.3.6.1.4.1.11.2.14.11.5.1.1.1.2.1.1.1',
  hpPktBufCorrupted => '1.3.6.1.4.1.11.2.14.11.5.1.1.1.2.1.1.2',
  hpPktBufFree => '1.3.6.1.4.1.11.2.14.11.5.1.1.1.2.1.1.3',
  hpPktBufInit => '1.3.6.1.4.1.11.2.14.11.5.1.1.1.2.1.1.4',
  hpPktBufMin => '1.3.6.1.4.1.11.2.14.11.5.1.1.1.2.1.1.5',
  hpPktBufMiss => '1.3.6.1.4.1.11.2.14.11.5.1.1.1.2.1.1.6',
  hpPktBufSize => '1.3.6.1.4.1.11.2.14.11.5.1.1.1.2.1.1.7',
  hpMem => '1.3.6.1.4.1.11.2.14.11.5.1.1.2',
  hpLocalMem => '1.3.6.1.4.1.11.2.14.11.5.1.1.2.1',
  hpLocalMemTable => '1.3.6.1.4.1.11.2.14.11.5.1.1.2.1.1',
  hpLocalMemEntry => '1.3.6.1.4.1.11.2.14.11.5.1.1.2.1.1.1',
  hpLocalMemSlotIndex => '1.3.6.1.4.1.11.2.14.11.5.1.1.2.1.1.1.1',
  hpLocalMemSlabCnt => '1.3.6.1.4.1.11.2.14.11.5.1.1.2.1.1.1.2',
  hpLocalMemFreeSegCnt => '1.3.6.1.4.1.11.2.14.11.5.1.1.2.1.1.1.3',
  hpLocalMemAllocSegCnt => '1.3.6.1.4.1.11.2.14.11.5.1.1.2.1.1.1.4',
  hpLocalMemTotalBytes => '1.3.6.1.4.1.11.2.14.11.5.1.1.2.1.1.1.5',
  hpLocalMemFreeBytes => '1.3.6.1.4.1.11.2.14.11.5.1.1.2.1.1.1.6',
  hpLocalMemAllocBytes => '1.3.6.1.4.1.11.2.14.11.5.1.1.2.1.1.1.7',
  hpGlobalMem => '1.3.6.1.4.1.11.2.14.11.5.1.1.2.2',
  hpGlobalMemTable => '1.3.6.1.4.1.11.2.14.11.5.1.1.2.2.1',
  hpGlobalMemEntry => '1.3.6.1.4.1.11.2.14.11.5.1.1.2.2.1.1',
  hpGlobalMemSlotIndex => '1.3.6.1.4.1.11.2.14.11.5.1.1.2.2.1.1.1',
  hpGlobalMemSlabCnt => '1.3.6.1.4.1.11.2.14.11.5.1.1.2.2.1.1.2',
  hpGlobalMemFreeSegCnt => '1.3.6.1.4.1.11.2.14.11.5.1.1.2.2.1.1.3',
  hpGlobalMemAllocSegCnt => '1.3.6.1.4.1.11.2.14.11.5.1.1.2.2.1.1.4',
  hpGlobalMemTotalBytes => '1.3.6.1.4.1.11.2.14.11.5.1.1.2.2.1.1.5',
  hpGlobalMemFreeBytes => '1.3.6.1.4.1.11.2.14.11.5.1.1.2.2.1.1.6',
  hpGlobalMemAllocBytes => '1.3.6.1.4.1.11.2.14.11.5.1.1.2.2.1.1.7',
  hpSwitchOsVersion => '1.3.6.1.4.1.11.2.14.11.5.1.1.3',
  hpSwitchRomVersion => '1.3.6.1.4.1.11.2.14.11.5.1.1.4',
  hpSwitchSmartCardType => '1.3.6.1.4.1.11.2.14.11.5.1.1.5',
  hpSwitchSmartCardTypeDefinition => 'NETSWITCH-MIB::hpSwitchSmartCardType',
  hpSwitchBaseMACAddress => '1.3.6.1.4.1.11.2.14.11.5.1.1.6',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'NETSWITCH-MIB'} = {
  hpSwitchSmartCardType => {
    '1' => 'none',
    '2' => 'fddi',
    '3' => 'atm',
    '4' => 'fddiAndATM',
    '5' => 'other',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::OLDCISCOCPUMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'OLD-CISCO-CPU-MIB'} = {
  url => '',
  name => 'OLD-CISCO-CPU-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'OLD-CISCO-CPU-MIB'} = {
  'busyPer' => '1.3.6.1.4.1.9.2.1.56.0',
  'avgBusy1' => '1.3.6.1.4.1.9.2.1.57.0',
  'avgBusy5' => '1.3.6.1.4.1.9.2.1.58.0',
  'idleCount' => '1.3.6.1.4.1.9.2.1.59.0',
  'idleWired' => '1.3.6.1.4.1.9.2.1.60.0',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::OLDCISCOINTERFACESMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'OLD-CISCO-INTERFACES-MIB'} = {
  url => '',
  name => 'OLD-CISCO-INTERFACES-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'OLD-CISCO-INTERFACES-MIB'} =
    '1.3.6.1.4.1.9.2.2';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'OLD-CISCO-INTERFACES-MIB'} = {
  linterfaces => '1.3.6.1.4.1.9.2.2',
  lifTable => '1.3.6.1.4.1.9.2.2.1',
  lifEntry => '1.3.6.1.4.1.9.2.2.1.1',
  locIfHardType => '1.3.6.1.4.1.9.2.2.1.1.1',
  locIfLineProt => '1.3.6.1.4.1.9.2.2.1.1.2',
  locIfLastIn => '1.3.6.1.4.1.9.2.2.1.1.3',
  locIfLastOut => '1.3.6.1.4.1.9.2.2.1.1.4',
  locIfLastOutHang => '1.3.6.1.4.1.9.2.2.1.1.5',
  locIfInBitsSec => '1.3.6.1.4.1.9.2.2.1.1.6',
  locIfInPktsSec => '1.3.6.1.4.1.9.2.2.1.1.7',
  locIfOutBitsSec => '1.3.6.1.4.1.9.2.2.1.1.8',
  locIfOutPktsSec => '1.3.6.1.4.1.9.2.2.1.1.9',
  locIfInRunts => '1.3.6.1.4.1.9.2.2.1.1.10',
  locIfInGiants => '1.3.6.1.4.1.9.2.2.1.1.11',
  locIfInCRC => '1.3.6.1.4.1.9.2.2.1.1.12',
  locIfInFrame => '1.3.6.1.4.1.9.2.2.1.1.13',
  locIfInOverrun => '1.3.6.1.4.1.9.2.2.1.1.14',
  locIfInIgnored => '1.3.6.1.4.1.9.2.2.1.1.15',
  locIfInAbort => '1.3.6.1.4.1.9.2.2.1.1.16',
  locIfResets => '1.3.6.1.4.1.9.2.2.1.1.17',
  locIfRestarts => '1.3.6.1.4.1.9.2.2.1.1.18',
  locIfKeep => '1.3.6.1.4.1.9.2.2.1.1.19',
  locIfReason => '1.3.6.1.4.1.9.2.2.1.1.20',
  locIfCarTrans => '1.3.6.1.4.1.9.2.2.1.1.21',
  locIfReliab => '1.3.6.1.4.1.9.2.2.1.1.22',
  locIfDelay => '1.3.6.1.4.1.9.2.2.1.1.23',
  locIfLoad => '1.3.6.1.4.1.9.2.2.1.1.24',
  locIfCollisions => '1.3.6.1.4.1.9.2.2.1.1.25',
  locIfInputQueueDrops => '1.3.6.1.4.1.9.2.2.1.1.26',
  locIfOutputQueueDrops => '1.3.6.1.4.1.9.2.2.1.1.27',
  locIfDescr => '1.3.6.1.4.1.9.2.2.1.1.28',
  locIfSlowInPkts => '1.3.6.1.4.1.9.2.2.1.1.30',
  locIfSlowOutPkts => '1.3.6.1.4.1.9.2.2.1.1.31',
  locIfSlowInOctets => '1.3.6.1.4.1.9.2.2.1.1.32',
  locIfSlowOutOctets => '1.3.6.1.4.1.9.2.2.1.1.33',
  locIfFastInPkts => '1.3.6.1.4.1.9.2.2.1.1.34',
  locIfFastOutPkts => '1.3.6.1.4.1.9.2.2.1.1.35',
  locIfFastInOctets => '1.3.6.1.4.1.9.2.2.1.1.36',
  locIfFastOutOctets => '1.3.6.1.4.1.9.2.2.1.1.37',
  locIfotherInPkts => '1.3.6.1.4.1.9.2.2.1.1.38',
  locIfotherOutPkts => '1.3.6.1.4.1.9.2.2.1.1.39',
  locIfotherInOctets => '1.3.6.1.4.1.9.2.2.1.1.40',
  locIfotherOutOctets => '1.3.6.1.4.1.9.2.2.1.1.41',
  locIfipInPkts => '1.3.6.1.4.1.9.2.2.1.1.42',
  locIfipOutPkts => '1.3.6.1.4.1.9.2.2.1.1.43',
  locIfipInOctets => '1.3.6.1.4.1.9.2.2.1.1.44',
  locIfipOutOctets => '1.3.6.1.4.1.9.2.2.1.1.45',
  locIfdecnetInPkts => '1.3.6.1.4.1.9.2.2.1.1.46',
  locIfdecnetOutPkts => '1.3.6.1.4.1.9.2.2.1.1.47',
  locIfdecnetInOctets => '1.3.6.1.4.1.9.2.2.1.1.48',
  locIfdecnetOutOctets => '1.3.6.1.4.1.9.2.2.1.1.49',
  locIfxnsInPkts => '1.3.6.1.4.1.9.2.2.1.1.50',
  locIfxnsOutPkts => '1.3.6.1.4.1.9.2.2.1.1.51',
  locIfxnsInOctets => '1.3.6.1.4.1.9.2.2.1.1.52',
  locIfxnsOutOctets => '1.3.6.1.4.1.9.2.2.1.1.53',
  locIfclnsInPkts => '1.3.6.1.4.1.9.2.2.1.1.54',
  locIfclnsOutPkts => '1.3.6.1.4.1.9.2.2.1.1.55',
  locIfclnsInOctets => '1.3.6.1.4.1.9.2.2.1.1.56',
  locIfclnsOutOctets => '1.3.6.1.4.1.9.2.2.1.1.57',
  locIfappletalkInPkts => '1.3.6.1.4.1.9.2.2.1.1.58',
  locIfappletalkOutPkts => '1.3.6.1.4.1.9.2.2.1.1.59',
  locIfappletalkInOctets => '1.3.6.1.4.1.9.2.2.1.1.60',
  locIfappletalkOutOctets => '1.3.6.1.4.1.9.2.2.1.1.61',
  locIfnovellInPkts => '1.3.6.1.4.1.9.2.2.1.1.62',
  locIfnovellOutPkts => '1.3.6.1.4.1.9.2.2.1.1.63',
  locIfnovellInOctets => '1.3.6.1.4.1.9.2.2.1.1.64',
  locIfnovellOutOctets => '1.3.6.1.4.1.9.2.2.1.1.65',
  locIfapolloInPkts => '1.3.6.1.4.1.9.2.2.1.1.66',
  locIfapolloOutPkts => '1.3.6.1.4.1.9.2.2.1.1.67',
  locIfapolloInOctets => '1.3.6.1.4.1.9.2.2.1.1.68',
  locIfapolloOutOctets => '1.3.6.1.4.1.9.2.2.1.1.69',
  locIfvinesInPkts => '1.3.6.1.4.1.9.2.2.1.1.70',
  locIfvinesOutPkts => '1.3.6.1.4.1.9.2.2.1.1.71',
  locIfvinesInOctets => '1.3.6.1.4.1.9.2.2.1.1.72',
  locIfvinesOutOctets => '1.3.6.1.4.1.9.2.2.1.1.73',
  locIfbridgedInPkts => '1.3.6.1.4.1.9.2.2.1.1.74',
  locIfbridgedOutPkts => '1.3.6.1.4.1.9.2.2.1.1.75',
  locIfbridgedInOctets => '1.3.6.1.4.1.9.2.2.1.1.76',
  locIfbridgedOutOctets => '1.3.6.1.4.1.9.2.2.1.1.77',
  locIfsrbInPkts => '1.3.6.1.4.1.9.2.2.1.1.78',
  locIfsrbOutPkts => '1.3.6.1.4.1.9.2.2.1.1.79',
  locIfsrbInOctets => '1.3.6.1.4.1.9.2.2.1.1.80',
  locIfsrbOutOctets => '1.3.6.1.4.1.9.2.2.1.1.81',
  locIfchaosInPkts => '1.3.6.1.4.1.9.2.2.1.1.82',
  locIfchaosOutPkts => '1.3.6.1.4.1.9.2.2.1.1.83',
  locIfchaosInOctets => '1.3.6.1.4.1.9.2.2.1.1.84',
  locIfchaosOutOctets => '1.3.6.1.4.1.9.2.2.1.1.85',
  locIfpupInPkts => '1.3.6.1.4.1.9.2.2.1.1.86',
  locIfpupOutPkts => '1.3.6.1.4.1.9.2.2.1.1.87',
  locIfpupInOctets => '1.3.6.1.4.1.9.2.2.1.1.88',
  locIfpupOutOctets => '1.3.6.1.4.1.9.2.2.1.1.89',
  locIfmopInPkts => '1.3.6.1.4.1.9.2.2.1.1.90',
  locIfmopOutPkts => '1.3.6.1.4.1.9.2.2.1.1.91',
  locIfmopInOctets => '1.3.6.1.4.1.9.2.2.1.1.92',
  locIfmopOutOctets => '1.3.6.1.4.1.9.2.2.1.1.93',
  locIflanmanInPkts => '1.3.6.1.4.1.9.2.2.1.1.94',
  locIflanmanOutPkts => '1.3.6.1.4.1.9.2.2.1.1.95',
  locIflanmanInOctets => '1.3.6.1.4.1.9.2.2.1.1.96',
  locIflanmanOutOctets => '1.3.6.1.4.1.9.2.2.1.1.97',
  locIfstunInPkts => '1.3.6.1.4.1.9.2.2.1.1.98',
  locIfstunOutPkts => '1.3.6.1.4.1.9.2.2.1.1.99',
  locIfstunInOctets => '1.3.6.1.4.1.9.2.2.1.1.100',
  locIfstunOutOctets => '1.3.6.1.4.1.9.2.2.1.1.101',
  locIfspanInPkts => '1.3.6.1.4.1.9.2.2.1.1.102',
  locIfspanOutPkts => '1.3.6.1.4.1.9.2.2.1.1.103',
  locIfspanInOctets => '1.3.6.1.4.1.9.2.2.1.1.104',
  locIfspanOutOctets => '1.3.6.1.4.1.9.2.2.1.1.105',
  locIfarpInPkts => '1.3.6.1.4.1.9.2.2.1.1.106',
  locIfarpOutPkts => '1.3.6.1.4.1.9.2.2.1.1.107',
  locIfarpInOctets => '1.3.6.1.4.1.9.2.2.1.1.108',
  locIfarpOutOctets => '1.3.6.1.4.1.9.2.2.1.1.109',
  locIfprobeInPkts => '1.3.6.1.4.1.9.2.2.1.1.110',
  locIfprobeOutPkts => '1.3.6.1.4.1.9.2.2.1.1.111',
  locIfprobeInOctets => '1.3.6.1.4.1.9.2.2.1.1.112',
  locIfprobeOutOctets => '1.3.6.1.4.1.9.2.2.1.1.113',
  locIfDribbleInputs => '1.3.6.1.4.1.9.2.2.1.1.114',
  lFSIPTable => '1.3.6.1.4.1.9.2.2.2',
  lFSIPEntry => '1.3.6.1.4.1.9.2.2.2.1',
  locIfFSIPIndex => '1.3.6.1.4.1.9.2.2.2.1.1',
  locIfFSIPtype => '1.3.6.1.4.1.9.2.2.2.1.2',
  locIfFSIPtypeDefinition => 'OLD-CISCO-INTERFACES-MIB::locIfFSIPtype',
  locIfFSIPrts => '1.3.6.1.4.1.9.2.2.2.1.3',
  locIfFSIPrtsDefinition => 'OLD-CISCO-INTERFACES-MIB::locIfFSIPrts',
  locIfFSIPcts => '1.3.6.1.4.1.9.2.2.2.1.4',
  locIfFSIPctsDefinition => 'OLD-CISCO-INTERFACES-MIB::locIfFSIPcts',
  locIfFSIPdtr => '1.3.6.1.4.1.9.2.2.2.1.5',
  locIfFSIPdtrDefinition => 'OLD-CISCO-INTERFACES-MIB::locIfFSIPdtr',
  locIfFSIPdcd => '1.3.6.1.4.1.9.2.2.2.1.6',
  locIfFSIPdcdDefinition => 'OLD-CISCO-INTERFACES-MIB::locIfFSIPdcd',
  locIfFSIPdsr => '1.3.6.1.4.1.9.2.2.2.1.7',
  locIfFSIPdsrDefinition => 'OLD-CISCO-INTERFACES-MIB::locIfFSIPdsr',
  locIfFSIPrxClockrate => '1.3.6.1.4.1.9.2.2.2.1.8',
  locIfFSIPrxClockrateHi => '1.3.6.1.4.1.9.2.2.2.1.9',
  locIfFSIPportType => '1.3.6.1.4.1.9.2.2.2.1.10',
  locIfFSIPportTypeDefinition => 'OLD-CISCO-INTERFACES-MIB::locIfFSIPportType',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'OLD-CISCO-INTERFACES-MIB'} = {
  locIfFSIPcts => {
    '1' => 'notAvailable',
    '2' => 'up',
    '3' => 'down',
  },
  locIfFSIPdsr => {
    '1' => 'notAvailable',
    '2' => 'up',
    '3' => 'down',
  },
  locIfFSIPrts => {
    '1' => 'notAvailable',
    '2' => 'up',
    '3' => 'down',
  },
  locIfFSIPportType => {
    '1' => 'noCable',
    '2' => 'rs232',
    '3' => 'rs422',
    '4' => 'rs423',
    '5' => 'v35',
    '6' => 'x21',
    '7' => 'rs449',
    '8' => 'rs530',
    '9' => 'hssi',
  },
  locIfFSIPdtr => {
    '1' => 'notAvailable',
    '2' => 'up',
    '3' => 'down',
  },
  locIfFSIPtype => {
    '1' => 'notAvailable',
    '2' => 'dte',
    '3' => 'dce',
  },
  locIfFSIPdcd => {
    '1' => 'notAvailable',
    '2' => 'up',
    '3' => 'down',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::OLDNETSWITCHMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'OLD-NETSWITCH-MIB'} = {
  url => '',
  name => 'OLD-NETSWITCH-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'OLD-NETSWITCH-MIB'} = {
  'hpLocalMemTable' => '1.3.6.1.2.1.1.7.11.12.1.2.1.1',
  'hpLocalMemEntry' => '1.3.6.1.2.1.1.7.11.12.1.2.1.1.1',
  'hpLocalMemSlotIndex' => '1.3.6.1.2.1.1.7.11.12.1.2.1.1.1.1',
  'hpLocalMemSlabCnt' => '1.3.6.1.2.1.1.7.11.12.1.2.1.1.1.2',
  'hpLocalMemFreeSegCnt' => '1.3.6.1.2.1.1.7.11.12.1.2.1.1.1.3',
  'hpLocalMemAllocSegCnt' => '1.3.6.1.2.1.1.7.11.12.1.2.1.1.1.4',
  'hpLocalMemTotalBytes' => '1.3.6.1.2.1.1.7.11.12.1.2.1.1.1.5',
  'hpLocalMemFreeBytes' => '1.3.6.1.2.1.1.7.11.12.1.2.1.1.1.6',
  'hpLocalMemAllocBytes' => '1.3.6.1.2.1.1.7.11.12.1.2.1.1.1.7',
  'hpGlobalMemTable' => '1.3.6.1.2.1.1.7.11.12.1.2.2.1',
  'hpGlobalMemEntry' => '1.3.6.1.2.1.1.7.11.12.1.2.2.1.1',
  'hpGlobalMemSlotIndex' => '1.3.6.1.2.1.1.7.11.12.1.2.2.1.1.1',
  'hpGlobalMemSlabCnt' => '1.3.6.1.2.1.1.7.11.12.1.2.2.1.1.2',
  'hpGlobalMemFreeSegCnt' => '1.3.6.1.2.1.1.7.11.12.1.2.2.1.1.3',
  'hpGlobalMemAllocSegCnt' => '1.3.6.1.2.1.1.7.11.12.1.2.2.1.1.4',
  'hpGlobalMemTotalBytes' => '1.3.6.1.2.1.1.7.11.12.1.2.2.1.1.5',
  'hpGlobalMemFreeBytes' => '1.3.6.1.2.1.1.7.11.12.1.2.2.1.1.6',
  'hpGlobalMemAllocBytes' => '1.3.6.1.2.1.1.7.11.12.1.2.2.1.1.7',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::OLDSTATISTICSMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'OLD-STATISTICS-MIB'} = {
  url => '',
  name => 'OLD-STATISTICS-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'OLD-STATISTICS-MIB'} = {
  'hpSwitchCpuStat' => '1.3.6.1.2.1.1.7.11.12.9.6.1.0',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::ONEACCESSSYSMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'ONEACCESS-SYS-MIB'} = {
  url => '',
  name => 'ONEACCESS-SYS-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'ONEACCESS-SYS-MIB'} = 
  '1.3.6.1.4.1.13191.1.100.671';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'ONEACCESS-SYS-MIB'} = {
  'oacExpIMSysHwcClassDefinitions' => 'HASH(0x6005a74e0)',
  'oacSysMIBModule' => '1.3.6.1.4.1.13191.1.100.671',
  'oacExpIMSysStatistics' => '1.3.6.1.4.1.13191.10.3.3.1',
  'oacSysMemStatistics' => '1.3.6.1.4.1.13191.10.3.3.1.1',
  'oacSysMemoryFree' => '1.3.6.1.4.1.13191.10.3.3.1.1.1',
  'oacSysMemoryAllocated' => '1.3.6.1.4.1.13191.10.3.3.1.1.2',
  'oacSysMemoryTotal' => '1.3.6.1.4.1.13191.10.3.3.1.1.3',
  'oacSysMemoryUsed' => '1.3.6.1.4.1.13191.10.3.3.1.1.4',
  'oacSysCpuStatistics' => '1.3.6.1.4.1.13191.10.3.3.1.2',
  'oacSysCpuUsed' => '1.3.6.1.4.1.13191.10.3.3.1.2.1',
  'oacSysSecureCrashlogCount' => '1.3.6.1.4.1.13191.10.3.3.1.100',
  'oacExpIMSysHardwareDescription' => '1.3.6.1.4.1.13191.10.3.3.2',
  'oacSysIMSysMainBoard' => '1.3.6.1.4.1.13191.10.3.3.2.1',
  'oacSysIMSysMainIdentifier' => '1.3.6.1.4.1.13191.10.3.3.2.1.1',
  'oacSysIMSysMainManufacturedIdentity' => '1.3.6.1.4.1.13191.10.3.3.2.1.2',
  'oacSysIMSysMainManufacturedDate' => '1.3.6.1.4.1.13191.10.3.3.2.1.3',
  'oacSysIMSysMainCPU' => '1.3.6.1.4.1.13191.10.3.3.2.1.4',
  'oacSysIMSysMainBSPVersion' => '1.3.6.1.4.1.13191.10.3.3.2.1.5',
  'oacSysIMSysMainBootVersion' => '1.3.6.1.4.1.13191.10.3.3.2.1.6',
  'oacSysIMSysMainBootDateCreation' => '1.3.6.1.4.1.13191.10.3.3.2.1.7',
  'oacExpIMSysHwComponents' => '1.3.6.1.4.1.13191.10.3.3.2.2',
  'oacExpIMSysHwComponentsCount' => '1.3.6.1.4.1.13191.10.3.3.2.2.1',
  'oacExpIMSysHwComponentsTable' => '1.3.6.1.4.1.13191.10.3.3.2.2.2',
  'oacExpIMSysHwComponentsEntry' => '1.3.6.1.4.1.13191.10.3.3.2.2.2.1',
  'oacExpIMSysHwcIndex' => '1.3.6.1.4.1.13191.10.3.3.2.2.2.1.1',
  'oacExpIMSysHwcClass' => '1.3.6.1.4.1.13191.10.3.3.2.2.2.1.2',
  'oacExpIMSysHwcType' => '1.3.6.1.4.1.13191.10.3.3.2.2.2.1.3',
  'oacExpIMSysHwcTypeDefinition' => {
    '0' => 'mainboard',
    '1' => 'microprocessor',
    '2' => 'ram',
    '3' => 'flash',
    '4' => 'dsp',
    '5' => 'uplink',
    '6' => 'module',
  },
  'oacExpIMSysHwcDescription' => '1.3.6.1.4.1.13191.10.3.3.2.2.2.1.4',
  'oacExpIMSysHwcSerialNumber' => '1.3.6.1.4.1.13191.10.3.3.2.2.2.1.5',
  'oacExpIMSysHwcManufacturer' => '1.3.6.1.4.1.13191.10.3.3.2.2.2.1.6',
  'oacExpIMSysHwcManufacturedDate' => '1.3.6.1.4.1.13191.10.3.3.2.2.2.1.7',
};




$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'OPENBSD-CARP-MIB'} = {
  url => '',
  name => 'OPENBSD-CARP-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'OPENBSD-CARP-MIB'} =
  '1.3.6.1.4.1.30155.6';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'OPENBSD-CARP-MIB'} = {
  # openBSD.carpMIBObjects.carpSysctl
  carpAllow => '1.3.6.1.4.1.30155.6.1.1',
  carpPreempt => '1.3.6.1.4.1.30155.6.1.2',
  carpLog => '1.3.6.1.4.1.30155.6.1.3',
  # openBSD.carpMIBObjects.carpSysctl
  carpIfNumber => '1.3.6.1.4.1.30155.6.2.1',
  carpIfTable => '1.3.6.1.4.1.30155.6.2.2',
  carpIfEntry => '1.3.6.1.4.1.30155.6.2.2.1',
  carpIfIndex => '1.3.6.1.4.1.30155.6.2.2.1.1',
  carpIfDescr => '1.3.6.1.4.1.30155.6.2.2.1.2',
  carpIfVhid => '1.3.6.1.4.1.30155.6.2.2.1.3',
  carpIfDev => '1.3.6.1.4.1.30155.6.2.2.1.4',
  carpIfAdvbase => '1.3.6.1.4.1.30155.6.2.2.1.5',
  carpIfAdvskew => '1.3.6.1.4.1.30155.6.2.2.1.6',
  carpIfState => '1.3.6.1.4.1.30155.6.2.2.1.7',
  carpIfStateDefinition => 'OPENBSD-CARP-MIB::carpIfState',
  # openBSD.carpMIBObjects.carpSysctl
  carpIpPktsRecv => '1.3.6.1.4.1.30155.6.3.1',
  carpIp6PktsRecv => '1.3.6.1.4.1.30155.6.3.2',
  carpPktDiscardsForBadInterface => '1.3.6.1.4.1.30155.6.3.3',
  carpPktDiscardsForWrongTtl => '1.3.6.1.4.1.30155.6.3.4',
  carpPktShorterThanHeader => '1.3.6.1.4.1.30155.6.3.5',
  carpPktDiscardsForBadChecksum => '1.3.6.1.4.1.30155.6.3.6',
  carpPktDiscardsForBadVersion => '1.3.6.1.4.1.30155.6.3.7',
  carpPktDiscardsForTooShort => '1.3.6.1.4.1.30155.6.3.8',
  carpPktDiscardsForBadAuth => '1.3.6.1.4.1.30155.6.3.9',
  carpPktDiscardsForBadVhid => '1.3.6.1.4.1.30155.6.3.10',
  carpPktDiscardsForBadAddressList => '1.3.6.1.4.1.30155.6.3.11',
  carpIpPktsSent => '1.3.6.1.4.1.30155.6.3.12',
  carpIp6PktsSent => '1.3.6.1.4.1.30155.6.3.13',
  carpNoMemory => '1.3.6.1.4.1.30155.6.3.14',
  carpTransitionsToMaster => '1.3.6.1.4.1.30155.6.3.15',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'OPENBSD-CARP-MIB'} = {
  carpIfState => {
    '0' => 'init',
    '1' => 'backup',
    '2' => 'master',
  },
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'OPENBSD-MEM-MIB'} = {
  url => '',
  name => 'OPENBSD-MEM-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'OPENBSD-MEM-MIB'} =
  '1.3.6.1.4.1.30155.5';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'OPENBSD-MEM-MIB'} = {
  # openBSD.memMIBObjects
  memMIBVersion => '1.3.6.1.4.1.30155.5.1',
  memIfTable => '1.3.6.1.4.1.30155.5.2',
  memIfEntry => '1.3.6.1.4.1.30155.5.2.1',
  memIfIndex => '1.3.6.1.2.1.2.2.1.1',
  memIfName => '1.3.6.1.4.1.30155.5.2.1.1',
  memIfLiveLocks => '1.3.6.1.4.1.30155.5.2.1.2',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'OPENBSD-PF-MIB'} = {
  url => '',
  name => 'OPENBSD-PF-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'OPENBSD-PF-MIB'} =
  '1.3.6.1.4.1.30155.1';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'OPENBSD-PF-MIB'} = {
  # openBSD.pfMIBObjects.pfInfo
  pfRunning => '1.3.6.1.4.1.30155.1.1.1',
  pfRuntime => '1.3.6.1.4.1.30155.1.1.2',
  pfDebug => '1.3.6.1.4.1.30155.1.1.3',
  pfDebugDefinition => 'OPENBSD-PF-MIB::pfDebug',
  pfHostid => '1.3.6.1.4.1.30155.1.1.4',
  # openBSD.pfMIBObjects.pfCounters
  pfCntMatch => '1.3.6.1.4.1.30155.1.2.1',
  pfCntBadOffset => '1.3.6.1.4.1.30155.1.2.2',
  pfCntFragment => '1.3.6.1.4.1.30155.1.2.3',
  pfCntShort => '1.3.6.1.4.1.30155.1.2.4',
  pfCntNormalize => '1.3.6.1.4.1.30155.1.2.5',
  pfCntMemory => '1.3.6.1.4.1.30155.1.2.6',
  pfCntTimestamp => '1.3.6.1.4.1.30155.1.2.7',
  pfCntCongestion => '1.3.6.1.4.1.30155.1.2.8',
  pfCntIpOption => '1.3.6.1.4.1.30155.1.2.9',
  pfCntProtoCksum => '1.3.6.1.4.1.30155.1.2.10',
  pfCntStateMismatch => '1.3.6.1.4.1.30155.1.2.11',
  pfCntStateInsert => '1.3.6.1.4.1.30155.1.2.12',
  pfCntStateLimit => '1.3.6.1.4.1.30155.1.2.13',
  pfCntSrcLimit => '1.3.6.1.4.1.30155.1.2.14',
  pfCntSynproxy => '1.3.6.1.4.1.30155.1.2.15',
  pfCntTranslate => '1.3.6.1.4.1.30155.1.2.16',
  pfCntNoRoute => '1.3.6.1.4.1.30155.1.2.17',
  # openBSD.pfMIBObjects.pfStateTable
  pfStateCount => '1.3.6.1.4.1.30155.1.3.1',
  pfStateSearches => '1.3.6.1.4.1.30155.1.3.2',
  pfStateInserts => '1.3.6.1.4.1.30155.1.3.3',
  pfStateRemovals => '1.3.6.1.4.1.30155.1.3.4',
  # openBSD.pfMIBObjects.pfLogInterface
  pfLogIfName => '1.3.6.1.4.1.30155.1.4.1',
  pfLogIfBytesIn => '1.3.6.1.4.1.30155.1.4.2',
  pfLogIfBytesout => '1.3.6.1.4.1.30155.1.4.3',
  pfLogIfPktsInPass => '1.3.6.1.4.1.30155.1.4.4',
  pfLogIfPktsInDrop => '1.3.6.1.4.1.30155.1.4.5',
  pfLogIfPktsOutPass => '1.3.6.1.4.1.30155.1.4.6',
  pfLogIfPktsOutDrop => '1.3.6.1.4.1.30155.1.4.7',
  pfLogIf6BytesIn => '1.3.6.1.4.1.30155.1.4.8',
  pfLogIf6BytesOut => '1.3.6.1.4.1.30155.1.4.9',
  pfLogIf6PktsInPass => '1.3.6.1.4.1.30155.1.4.10',
  pfLogIf6PktsInDrop => '1.3.6.1.4.1.30155.1.4.11',
  pfLogIf6PktsOutPass => '1.3.6.1.4.1.30155.1.4.12',
  pfLogIf6PktsOutDrop => '1.3.6.1.4.1.30155.1.4.13',
  # openBSD.pfMIBObjects.pfSrcTracking
  pfSrcTrackCount => '1.3.6.1.4.1.30155.1.5.1',
  pfSrcTrackSearches => '1.3.6.1.4.1.30155.1.5.2',
  pfSrcTrackInserts => '1.3.6.1.4.1.30155.1.5.3',
  pfSrcTrackRemovals => '1.3.6.1.4.1.30155.1.5.4',
  # openBSD.pfMIBObjects.pfLimits
  pfLimitStates => '1.3.6.1.4.1.30155.1.6.1',
  pfLimitSourceNodes => '1.3.6.1.4.1.30155.1.6.2',
  pfLimitFragments => '1.3.6.1.4.1.30155.1.6.3',
  pfLimitMaxTables => '1.3.6.1.4.1.30155.1.6.4',
  pfLimitMaxTablesEntries => '1.3.6.1.4.1.30155.1.6.5',
  # openBSD.pfMIBObjects.pfTimeouts
  pfTimeoutTcpFirst => '1.3.6.1.4.1.30155.1.7.1',
  pfTimeoutTcpOpening => '1.3.6.1.4.1.30155.1.7.2',
  pfTimeoutTcpEstablished => '1.3.6.1.4.1.30155.1.7.3',
  pfTimeoutTcpClosing => '1.3.6.1.4.1.30155.1.7.4',
  pfTimeoutFinWait => '1.3.6.1.4.1.30155.1.7.5',
  pfTimeoutClosed => '1.3.6.1.4.1.30155.1.7.6',
  pfTimeoutUdpFirst => '1.3.6.1.4.1.30155.1.7.7',
  pfTimeoutUdpSingle => '1.3.6.1.4.1.30155.1.7.8',
  pfTimeoutUdpMultiple => '1.3.6.1.4.1.30155.1.7.9',
  pfTimeoutIcmpFirst => '1.3.6.1.4.1.30155.1.7.10',
  pfTimeoutIcmpError => '1.3.6.1.4.1.30155.1.7.11',
  pfTimeoutOtherFirst => '1.3.6.1.4.1.30155.1.7.12',
  pfTimeoutOtherSingle => '1.3.6.1.4.1.30155.1.7.13',
  pfTimeoutOtherMultiple => '1.3.6.1.4.1.30155.1.7.14',
  pfTimeoutFragment => '1.3.6.1.4.1.30155.1.7.15',
  pfTimeoutInterval => '1.3.6.1.4.1.30155.1.7.16',
  pfTimeoutAdaptiveStart => '1.3.6.1.4.1.30155.1.7.17',
  pfTimeoutAdaptiveEnd => '1.3.6.1.4.1.30155.1.7.18',
  pfTimeoutSrcTrack => '1.3.6.1.4.1.30155.1.7.19',
  # openBSD.pfMIBObjects.pfInterfaces
  pfIfNumber => '1.3.6.1.4.1.30155.1.8.1',
  pfIfTable => '1.3.6.1.4.1.30155.1.8.128',
  pfIfEntry => '1.3.6.1.4.1.30155.1.8.128.1',
  pfIfIndex => '1.3.6.1.4.1.30155.1.8.128.1.1',
  pfIfDescr => '1.3.6.1.4.1.30155.1.8.128.1.2',
  pfIfType => '1.3.6.1.4.1.30155.1.8.128.1.3',
  pfIfRefs => '1.3.6.1.4.1.30155.1.8.128.1.4',
  pfIfRules => '1.3.6.1.4.1.30155.1.8.128.1.5',
  pfIfIn4PassPkts => '1.3.6.1.4.1.30155.1.8.128.1.6',
  pfIfIn4PassBytes => '1.3.6.1.4.1.30155.1.8.128.1.7',
  pfIfIn4BlockPkts => '1.3.6.1.4.1.30155.1.38.128.1.8',
  pfIfIn4BlockBytes => '1.3.6.1.4.1.30155.1.8.128.1.9',
  pfIfOut4PassPkts => '1.3.6.1.4.1.30155.1.8.128.1.10',
  pfIfOut4PassBytes => '1.3.6.1.4.1.30155.1.8.128.1.11',
  pfIfOut4BlockPkts => '1.3.6.1.4.1.30155.1.8.128.1.12',
  pfIfOut4BlockBytes => '1.3.6.1.4.1.30155.1.8.128.1.13',
  pfIfIn6PassPkts => '1.3.6.1.4.1.30155.1.8.128.1.14',
  pfIfIn6PassBytes => '1.3.6.1.4.1.30155.1.8.128.1.15',
  pfIfIn6BlockPkts => '1.3.6.1.4.1.30155.1.8.128.1.16',
  pfIfIn6BlockBytes => '1.3.6.1.4.1.30155.1.8.128.1.17',
  pfIfOut6PassPkts => '1.3.6.1.4.1.30155.1.8.128.1.18',
  pfIfOut6PassBytes => '1.3.6.1.4.1.30155.1.8.128.1.19',
  pfIfOut6BlockPkts => '1.3.6.1.4.1.30155.1.8.128.1.20',
  pfIfOut6BlockBytes => '1.3.6.1.4.1.30155.1.8.128.1.21',
  # openBSD.pfMIBObjects.pfTables
  pfTblNumber => '1.3.6.1.4.1.30155.1.9.1',
  pfTblTable => '1.3.6.1.4.1.30155.1.9.128',
  pfTblEntry => '1.3.6.1.4.1.30155.1.9.128.1',
  pfTblIndex => '1.3.6.1.4.1.30155.1.9.128.1.1',
  pfTblName => '1.3.6.1.4.1.30155.1.9.128.1.2',
  pfTblAddresses => '1.3.6.1.4.1.30155.1.9.128.1.3',
  pfTblAnchors => '1.3.6.1.4.1.30155.1.9.128.1.4',
  pfTblRulesRefs => '1.3.6.1.4.1.30155.1.9.128.1.5',
  pfTblEvalsMatch => '1.3.6.1.4.1.30155.1.9.128.1.6',
  pfTblEvalsNoMatch => '1.3.6.1.4.1.30155.1.9.128.1.7',
  pfTblInPassPkts => '1.3.6.1.4.1.30155.1.9.128.1.8',
  pfTblInPassBytes => '1.3.6.1.4.1.30155.1.9.128.1.9',
  pfTblInBlockPkts => '1.3.6.1.4.1.30155.1.9.128.1.10',
  pfTblInBlockBytes => '1.3.6.1.4.1.30155.1.9.128.1.11',
  pfTblInXPassPkts => '1.3.6.1.4.1.30155.1.9.128.1.12',
  pfTblInXPassBytes => '1.3.6.1.4.1.30155.1.9.128.1.13',
  pfTblOutPassPkts => '1.3.6.1.4.1.30155.1.9.128.1.14',
  pfTblOutPassBytes => '1.3.6.1.4.1.30155.1.9.128.1.15',
  pfTblOutBlockPkts => '1.3.6.1.4.1.30155.1.9.128.1.16',
  pfTblOutBlockBytes => '1.3.6.1.4.1.30155.1.9.128.1.17',
  pfTblOutXPassPkts => '1.3.6.1.4.1.30155.1.9.128.1.18',
  pfTblOutXPassBytes => '1.3.6.1.4.1.30155.1.9.128.1.19',
  pfTblStatsCleared => '1.3.6.1.4.1.30155.1.9.128.1.20',
  pfTblInMatchPkts => '1.3.6.1.4.1.30155.1.9.128.1.21',
  pfTblInMatchBytes => '1.3.6.1.4.1.30155.1.9.128.1.22',
  pfTblOutMatchPkts => '1.3.6.1.4.1.30155.1.9.128.1.23',
  pfTblOutMatchBytes => '1.3.6.1.4.1.30155.1.9.128.1.24',
  pfTblAddrTable => '1.3.6.1.4.1.30155.1.9.129',
  pfTblAddrEntry => '1.3.6.1.4.1.30155.1.9.129.1',
  pfTblAddrTblIndex => '1.3.6.1.4.1.30155.1.9.129.1.1',
  pfTblAddrNet => '1.3.6.1.4.1.30155.1.9.129.1.2',
  pfTblAddrMask => '1.3.6.1.4.1.30155.1.9.129.1.3',
  pfTblAddrCleared => '1.3.6.1.4.1.30155.1.9.129.1.4',
  pfTblAddrBlockPkts => '1.3.6.1.4.1.30155.1.9.129.1.5',
  pfTblAddrBlockBytes => '1.3.6.1.4.1.30155.1.9.129.1.6',
  pfTblAddrPassPkts => '1.3.6.1.4.1.30155.1.9.129.1.7',
  pfTblAddrPassBytes => '1.3.6.1.4.1.30155.1.9.129.1.8',
  pfTblAddrOutBlockPkts => '1.3.6.1.4.1.30155.1.9.129.1.9',
  pfTblAddrOutBlockBytes => '1.3.6.1.4.1.30155.1.9.129.1.10',
  pfTblAddrOutPassPkts => '1.3.6.1.4.1.30155.1.9.129.1.11',
  pfTblAddrOutPassBytes => '1.3.6.1.4.1.30155.1.9.129.1.12',
  pfTblAddrInMatchPkts => '1.3.6.1.4.1.30155.1.9.129.1.13',
  pfTblAddrInMatchBytes => '1.3.6.1.4.1.30155.1.9.129.1.14',
  pfTblAddrOutMatchPkts => '1.3.6.1.4.1.30155.1.9.129.1.15',
  pfTblAddrOutMatchBytes => '1.3.6.1.4.1.30155.1.9.129.1.16',
  # openBSD.pfMIBObjects.pfLabels
  pfLabelNumber => '.1.3.6.1.4.1.30155.1.10.1',
  pfLabelTable => '.1.3.6.1.4.1.30155.1.10.128',
  pfLabelEntry => '.1.3.6.1.4.1.30155.1.10.128.1',
  pfLabelIndex => '.1.3.6.1.4.1.30155.1.10.128.1.1',
  pfLabelName => '.1.3.6.1.4.1.30155.1.10.128.1.2',
  pfLabelEvals => '.1.3.6.1.4.1.30155.1.10.128.1.3',
  pfLabelPkts => '.1.3.6.1.4.1.30155.1.10.128.1.4',
  pfLabelBytes => '.1.3.6.1.4.1.30155.1.10.128.1.5',
  pfLabelInPkts => '.1.3.6.1.4.1.30155.1.10.128.1.6',
  pfLabelInBytes => '.1.3.6.1.4.1.30155.1.10.128.1.7',
  pfLabelOutPkts => '.1.3.6.1.4.1.30155.1.10.128.1.8',
  pfLabelOutBytes => '.1.3.6.1.4.1.30155.1.10.128.1.9',
  pfLabelTotalStates => '.1.3.6.1.4.1.30155.1.10.128.1.10',
  # openBSD.pfMIBObjects.pfsyncStats
  pfsyncIpPktsRecv => '1.3.6.1.4.1.30155.1.11.1',
  pfsyncIp6PktsRecv => '1.3.6.1.4.1.30155.1.11.2',
  pfsyncPktDiscardsForBadInterface => '1.3.6.1.4.1.30155.1.11.3',
  pfsyncPktDiscardsForBadTtl => '1.3.6.1.4.1.30155.1.11.4',
  pfsyncPktShorterThanHeader => '1.3.6.1.4.1.30155.1.11.5',
  pfsyncPktDiscardsForBadVersion => '1.3.6.1.4.1.30155.1.11.6',
  pfsyncPktDiscardsForBadAction => '1.3.6.1.4.1.30155.1.11.7',
  pfsyncPktDiscardsForBadBadAuth => '1.3.6.1.4.1.30155.1.11.8',
  pfsyncPktDiscardsForBadValues => '1.3.6.1.4.1.30155.1.11.9',
  pfsyncPktDiscardsForStaleState => '1.3.6.1.4.1.30155.1.11.10',
  pfsyncPktDiscardsForBadValues => '1.3.6.1.4.1.30155.1.11.11',
  pfsyncPktDiscardsForBadState => '1.3.6.1.4.1.30155.1.11.12',
  pfsyncIpPktsSent => '1.3.6.1.4.1.30155.1.11.13',
  pfsyncIp6PktsSent => '1.3.6.1.4.1.30155.1.11.14',
  pfsyncNoMemory => '1.3.6.1.4.1.30155.1.11.15',
  pfsyncOutputErrors => '1.3.6.1.4.1.30155.1.11.16',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'OPENBSD-PF-MIB'} = {
  pfDebug => {
    '0' => 'emerg',
    '1' => 'alert',
    '2' => 'crit',
    '3' => 'err',
    '4' => 'warning',
    '5' => 'notice',
    '6' => 'info',
    '7' => 'debug',
  },
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'OPENBSD-SENSORS-MIB'} = {
  url => '',
  name => 'OPENBSD-SENSORS-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'OPENBSD-SENSORS-MIB'} =
  '1.3.6.1.4.1.30155.2';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'OPENBSD-SENSORS-MIB'} = {
  # openBSD.sensorMIBObjects
  sensorNumber => '1.3.6.1.4.1.30155.2.1.1',
  sensorTable => '1.3.6.1.4.1.30155.2.1.2',
  sensorEntry => '1.3.6.1.4.1.30155.2.1.2.1',
  sensorIndex => '1.3.6.1.4.1.30155.2.1.2.1.1',
  sensorDescr => '1.3.6.1.4.1.30155.2.1.2.1.2',
  sensorType => '1.3.6.1.4.1.30155.2.1.2.1.3',
  sensorDevice => '1.3.6.1.4.1.30155.2.1.2.1.4',
  sensorValue => '1.3.6.1.4.1.30155.2.1.2.1.5',
  sensorUnits => '1.3.6.1.4.1.30155.2.1.2.1.6',
  sensorStatus => '1.3.6.1.4.1.30155.2.1.2.1.7',
  sensorStatusDefinition => 'OPENBSD-SENSORS-MIB::sensorStatus',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'OPENBSD-SENSORS-MIB'} = {
  sensorStatus => {
    '0' => 'unspecified',
    '1' => 'ok',
    '2' => 'warn',
    '3' => 'critical',
    '4' => 'unknown',
  },
};

package Monitoring::GLPlugin::SNMP::MibsAndOids::OSPFMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'OSPF-MIB'} = {
  url => '',
  name => 'OSPF-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::requirements->{'OSPF-MIB'} = [
  'SNMPv2-TC-v1-MIB',
];

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'OSPF-MIB'} = {
  'ospf' => '1.3.6.1.2.1.14',
  'ospfGeneralGroup' => '1.3.6.1.2.1.14.1',
  'ospfRouterId' => '1.3.6.1.2.1.14.1.1',
  'ospfAdminStat' => '1.3.6.1.2.1.14.1.2',
  'ospfVersionNumber' => '1.3.6.1.2.1.14.1.3',
  'ospfVersionNumberDefinition' => 'OSPF-MIB::ospfVersionNumber',
  'ospfAreaBdrRtrStatus' => '1.3.6.1.2.1.14.1.4',
  'ospfASBdrRtrStatus' => '1.3.6.1.2.1.14.1.5',
  'ospfExternLsaCount' => '1.3.6.1.2.1.14.1.6',
  'ospfExternLsaCksumSum' => '1.3.6.1.2.1.14.1.7',
  'ospfTOSSupport' => '1.3.6.1.2.1.14.1.8',
  'ospfOriginateNewLsas' => '1.3.6.1.2.1.14.1.9',
  'ospfRxNewLsas' => '1.3.6.1.2.1.14.1.10',
  'ospfExtLsdbLimit' => '1.3.6.1.2.1.14.1.11',
  'ospfMulticastExtensions' => '1.3.6.1.2.1.14.1.12',
  'ospfExitOverflowInterval' => '1.3.6.1.2.1.14.1.13',
  'ospfDemandExtensions' => '1.3.6.1.2.1.14.1.14',
  'ospfRFC1583Compatibility' => '1.3.6.1.2.1.14.1.15',
  'ospfOpaqueLsaSupport' => '1.3.6.1.2.1.14.1.16',
  'ospfReferenceBandwidth' => '1.3.6.1.2.1.14.1.17',
  'ospfRestartSupport' => '1.3.6.1.2.1.14.1.18',
  'ospfRestartSupportDefinition' => 'OSPF-MIB::ospfRestartSupport',
  'ospfRestartInterval' => '1.3.6.1.2.1.14.1.19',
  'ospfRestartStrictLsaChecking' => '1.3.6.1.2.1.14.1.20',
  'ospfRestartStatus' => '1.3.6.1.2.1.14.1.21',
  'ospfRestartStatusDefinition' => 'OSPF-MIB::ospfRestartStatus',
  'ospfRestartAge' => '1.3.6.1.2.1.14.1.22',
  'ospfRestartExitReason' => '1.3.6.1.2.1.14.1.23',
  'ospfRestartExitReasonDefinition' => 'OSPF-MIB::ospfRestartExitReason',
  'ospfAsLsaCount' => '1.3.6.1.2.1.14.1.24',
  'ospfAsLsaCksumSum' => '1.3.6.1.2.1.14.1.25',
  'ospfStubRouterSupport' => '1.3.6.1.2.1.14.1.26',
  'ospfStubRouterAdvertisement' => '1.3.6.1.2.1.14.1.27',
  'ospfStubRouterAdvertisementDefinition' => 'OSPF-MIB::ospfStubRouterAdvertisement',
  'ospfDiscontinuityTime' => '1.3.6.1.2.1.14.1.28',
  'ospfAreaTable' => '1.3.6.1.2.1.14.2',
  'ospfAreaEntry' => '1.3.6.1.2.1.14.2.1',
  'ospfAreaId' => '1.3.6.1.2.1.14.2.1.1',
  'ospfAuthType' => '1.3.6.1.2.1.14.2.1.2',
  'ospfAuthTypeDefinition' => {
    '0' => 'none',
    '1' => 'simplePassword',
    '2' => 'md5',
  },
  'ospfImportAsExtern' => '1.3.6.1.2.1.14.2.1.3',
  'ospfImportAsExternDefinition' => 'OSPF-MIB::ospfImportAsExtern',
  'ospfSpfRuns' => '1.3.6.1.2.1.14.2.1.4',
  'ospfAreaBdrRtrCount' => '1.3.6.1.2.1.14.2.1.5',
  'ospfAsBdrRtrCount' => '1.3.6.1.2.1.14.2.1.6',
  'ospfAreaLsaCount' => '1.3.6.1.2.1.14.2.1.7',
  'ospfAreaLsaCksumSum' => '1.3.6.1.2.1.14.2.1.8',
  'ospfAreaSummary' => '1.3.6.1.2.1.14.2.1.9',
  'ospfAreaSummaryDefinition' => 'OSPF-MIB::ospfAreaSummary',
  'ospfAreaStatus' => '1.3.6.1.2.1.14.2.1.10',
  'ospfAreaStatusDefinition' => 'SNMPv2-TC-v1-MIB::RowStatus',
  'ospfAreaNssaTranslatorRole' => '1.3.6.1.2.1.14.2.1.11',
  'ospfAreaNssaTranslatorRoleDefinition' => 'OSPF-MIB::ospfAreaNssaTranslatorRole',
  'ospfAreaNssaTranslatorState' => '1.3.6.1.2.1.14.2.1.12',
  'ospfAreaNssaTranslatorStateDefinition' => 'OSPF-MIB::ospfAreaNssaTranslatorState',
  'ospfAreaNssaTranslatorStabilityInterval' => '1.3.6.1.2.1.14.2.1.13',
  'ospfAreaNssaTranslatorEvents' => '1.3.6.1.2.1.14.2.1.14',
  'ospfStubAreaTable' => '1.3.6.1.2.1.14.3',
  'ospfStubAreaEntry' => '1.3.6.1.2.1.14.3.1',
  'ospfStubAreaId' => '1.3.6.1.2.1.14.3.1.1',
  'ospfStubTOS' => '1.3.6.1.2.1.14.3.1.2',
  'ospfStubMetric' => '1.3.6.1.2.1.14.3.1.3',
  'ospfStubStatus' => '1.3.6.1.2.1.14.3.1.4',
  'ospfStubMetricType' => '1.3.6.1.2.1.14.3.1.5',
  'ospfStubMetricTypeDefinition' => 'OSPF-MIB::ospfStubMetricType',
  'ospfLsdbTable' => '1.3.6.1.2.1.14.4',
  'ospfLsdbEntry' => '1.3.6.1.2.1.14.4.1',
  'ospfLsdbAreaId' => '1.3.6.1.2.1.14.4.1.1',
  'ospfLsdbType' => '1.3.6.1.2.1.14.4.1.2',
  'ospfLsdbTypeDefinition' => 'OSPF-MIB::ospfLsdbType',
  'ospfLsdbLsid' => '1.3.6.1.2.1.14.4.1.3',
  'ospfLsdbRouterId' => '1.3.6.1.2.1.14.4.1.4',
  'ospfLsdbSequence' => '1.3.6.1.2.1.14.4.1.5',
  'ospfLsdbAge' => '1.3.6.1.2.1.14.4.1.6',
  'ospfLsdbChecksum' => '1.3.6.1.2.1.14.4.1.7',
  'ospfLsdbAdvertisement' => '1.3.6.1.2.1.14.4.1.8',
  'ospfAreaRangeTable' => '1.3.6.1.2.1.14.5',
  'ospfAreaRangeEntry' => '1.3.6.1.2.1.14.5.1',
  'ospfAreaRangeAreaId' => '1.3.6.1.2.1.14.5.1.1',
  'ospfAreaRangeNet' => '1.3.6.1.2.1.14.5.1.2',
  'ospfAreaRangeMask' => '1.3.6.1.2.1.14.5.1.3',
  'ospfAreaRangeStatus' => '1.3.6.1.2.1.14.5.1.4',
  'ospfAreaRangeEffect' => '1.3.6.1.2.1.14.5.1.5',
  'ospfAreaRangeEffectDefinition' => 'OSPF-MIB::ospfAreaRangeEffect',
  'ospfHostTable' => '1.3.6.1.2.1.14.6',
  'ospfHostEntry' => '1.3.6.1.2.1.14.6.1',
  'ospfHostIpAddress' => '1.3.6.1.2.1.14.6.1.1',
  'ospfHostTOS' => '1.3.6.1.2.1.14.6.1.2',
  'ospfHostMetric' => '1.3.6.1.2.1.14.6.1.3',
  'ospfHostStatus' => '1.3.6.1.2.1.14.6.1.4',
  'ospfHostStatusDefinition' => 'SNMPv2-TC-v1-MIB::RowStatus',
  'ospfHostAreaID' => '1.3.6.1.2.1.14.6.1.5',
  'ospfHostCfgAreaID' => '1.3.6.1.2.1.14.6.1.6',
  'ospfIfTable' => '1.3.6.1.2.1.14.7',
  'ospfIfEntry' => '1.3.6.1.2.1.14.7.1',
  'ospfIfIpAddress' => '1.3.6.1.2.1.14.7.1.1',
  'ospfAddressLessIf' => '1.3.6.1.2.1.14.7.1.2',
  'ospfIfAreaId' => '1.3.6.1.2.1.14.7.1.3',
  'ospfIfType' => '1.3.6.1.2.1.14.7.1.4',
  'ospfIfTypeDefinition' => 'OSPF-MIB::ospfIfType',
  'ospfIfAdminStat' => '1.3.6.1.2.1.14.7.1.5',
  'ospfIfAdminStatDefinition' => 'OSPF-MIB::Status',
  'ospfIfRtrPriority' => '1.3.6.1.2.1.14.7.1.6',
  'ospfIfTransitDelay' => '1.3.6.1.2.1.14.7.1.7',
  'ospfIfRetransInterval' => '1.3.6.1.2.1.14.7.1.8',
  'ospfIfHelloInterval' => '1.3.6.1.2.1.14.7.1.9',
  'ospfIfRtrDeadInterval' => '1.3.6.1.2.1.14.7.1.10',
  'ospfIfPollInterval' => '1.3.6.1.2.1.14.7.1.11',
  'ospfIfState' => '1.3.6.1.2.1.14.7.1.12',
  'ospfIfStateDefinition' => 'OSPF-MIB::ospfIfState',
  'ospfIfDesignatedRouter' => '1.3.6.1.2.1.14.7.1.13',
  'ospfIfBackupDesignatedRouter' => '1.3.6.1.2.1.14.7.1.14',
  'ospfIfEvents' => '1.3.6.1.2.1.14.7.1.15',
  'ospfIfAuthKey' => '1.3.6.1.2.1.14.7.1.16',
  'ospfIfStatus' => '1.3.6.1.2.1.14.7.1.17',
  'ospfIfStatusDefinition' => 'SNMPv2-TC-v1-MIB::RowStatus',
  'ospfIfMulticastForwarding' => '1.3.6.1.2.1.14.7.1.18',
  'ospfIfMulticastForwardingDefinition' => 'OSPF-MIB::ospfIfMulticastForwarding',
  'ospfIfDemand' => '1.3.6.1.2.1.14.7.1.19',
  'ospfIfDemandDefinition' => 'SNMPv2-TC-v1-MIB::TruthValue',
  'ospfIfAuthType' => '1.3.6.1.2.1.14.7.1.20',
  'ospfIfAuthTypeDefinition' => 'OSPF-MIB::AuType',
  'ospfIfLsaCount' => '1.3.6.1.2.1.14.7.1.21',
  'ospfIfLsaCksumSum' => '1.3.6.1.2.1.14.7.1.22',
  'ospfIfDesignatedRouterId' => '1.3.6.1.2.1.14.7.1.23',
  'ospfIfBackupDesignatedRouterId' => '1.3.6.1.2.1.14.7.1.24',
  'ospfIfMetricTable' => '1.3.6.1.2.1.14.8',
  'ospfIfMetricEntry' => '1.3.6.1.2.1.14.8.1',
  'ospfIfMetricIpAddress' => '1.3.6.1.2.1.14.8.1.1',
  'ospfIfMetricAddressLessIf' => '1.3.6.1.2.1.14.8.1.2',
  'ospfIfMetricTOS' => '1.3.6.1.2.1.14.8.1.3',
  'ospfIfMetricValue' => '1.3.6.1.2.1.14.8.1.4',
  'ospfIfMetricStatus' => '1.3.6.1.2.1.14.8.1.5',
  'ospfIfMetricStatusDefinition' => 'SNMPv2-TC-v1-MIB::RowStatus',
  'ospfVirtIfTable' => '1.3.6.1.2.1.14.9',
  'ospfVirtIfEntry' => '1.3.6.1.2.1.14.9.1',
  'ospfVirtIfAreaId' => '1.3.6.1.2.1.14.9.1.1',
  'ospfVirtIfNeighbor' => '1.3.6.1.2.1.14.9.1.2',
  'ospfVirtIfTransitDelay' => '1.3.6.1.2.1.14.9.1.3',
  'ospfVirtIfRetransInterval' => '1.3.6.1.2.1.14.9.1.4',
  'ospfVirtIfHelloInterval' => '1.3.6.1.2.1.14.9.1.5',
  'ospfVirtIfRtrDeadInterval' => '1.3.6.1.2.1.14.9.1.6',
  'ospfVirtIfState' => '1.3.6.1.2.1.14.9.1.7',
  'ospfVirtIfStateDefinition' => 'OSPF-MIB::ospfVirtIfState',
  'ospfVirtIfEvents' => '1.3.6.1.2.1.14.9.1.8',
  'ospfVirtIfAuthKey' => '1.3.6.1.2.1.14.9.1.9',
  'ospfVirtIfStatus' => '1.3.6.1.2.1.14.9.1.10',
  'ospfVirtIfAuthType' => '1.3.6.1.2.1.14.9.1.11',
  'ospfVirtIfLsaCount' => '1.3.6.1.2.1.14.9.1.12',
  'ospfVirtIfLsaCksumSum' => '1.3.6.1.2.1.14.9.1.13',
  'ospfNbrTable' => '1.3.6.1.2.1.14.10',
  'ospfNbrEntry' => '1.3.6.1.2.1.14.10.1',
  'ospfNbrIpAddr' => '1.3.6.1.2.1.14.10.1.1',
  'ospfNbrAddressLessIndex' => '1.3.6.1.2.1.14.10.1.2',
  'ospfNbrRtrId' => '1.3.6.1.2.1.14.10.1.3',
  'ospfNbrOptions' => '1.3.6.1.2.1.14.10.1.4',
  'ospfNbrPriority' => '1.3.6.1.2.1.14.10.1.5',
  'ospfNbrState' => '1.3.6.1.2.1.14.10.1.6',
  'ospfNbrStateDefinition' => 'OSPF-MIB::ospfNbrState',
  'ospfNbrEvents' => '1.3.6.1.2.1.14.10.1.7',
  'ospfNbrLsRetransQLen' => '1.3.6.1.2.1.14.10.1.8',
  'ospfNbmaNbrStatus' => '1.3.6.1.2.1.14.10.1.9',
  'ospfNbmaNbrStatusDefinition' => 'SNMPv2-TC-v1-MIB::RowStatus',
  'ospfNbmaNbrPermanence' => '1.3.6.1.2.1.14.10.1.10',
  'ospfNbmaNbrPermanenceDefinition' => 'OSPF-MIB::ospfNbmaNbrPermanence',
  'ospfNbrHelloSuppressed' => '1.3.6.1.2.1.14.10.1.11',
  'ospfNbrHelloSuppressedDefinition' => 'SNMPv2-TC-v1-MIB::TruthValue',
  'ospfNbrRestartHelperStatus' => '1.3.6.1.2.1.14.10.1.12',
  'ospfNbrRestartHelperStatusDefinition' => 'OSPF-MIB::ospfNbrRestartHelperStatus',
  'ospfNbrRestartHelperAge' => '1.3.6.1.2.1.14.10.1.13',
  'ospfNbrRestartHelperExitReason' => '1.3.6.1.2.1.14.10.1.14',
  'ospfNbrRestartHelperExitReasonDefinition' => 'OSPF-MIB::ospfNbrRestartHelperExitReason',
  'ospfVirtNbrTable' => '1.3.6.1.2.1.14.11',
  'ospfVirtNbrEntry' => '1.3.6.1.2.1.14.11.1',
  'ospfVirtNbrArea' => '1.3.6.1.2.1.14.11.1.1',
  'ospfVirtNbrRtrId' => '1.3.6.1.2.1.14.11.1.2',
  'ospfVirtNbrIpAddr' => '1.3.6.1.2.1.14.11.1.3',
  'ospfVirtNbrOptions' => '1.3.6.1.2.1.14.11.1.4',
  'ospfVirtNbrOptionsDefinition' => 'OSPF-MIB::ospfVirtNbrOptions',
  'ospfVirtNbrState' => '1.3.6.1.2.1.14.11.1.5',
  'ospfVirtNbrStateDefinition' => 'OSPF-MIB::ospfVirtNbrState',
  'ospfVirtNbrEvents' => '1.3.6.1.2.1.14.11.1.6',
  'ospfVirtNbrLsRetransQLen' => '1.3.6.1.2.1.14.11.1.7',
  'ospfVirtNbrHelloSuppressed' => '1.3.6.1.2.1.14.11.1.8',
  'ospfVirtNbrRestartHelperStatus' => '1.3.6.1.2.1.14.11.1.9',
  'ospfVirtNbrRestartHelperStatusDefinition' => 'OSPF-MIB::ospfVirtNbrRestartHelperStatus',
  'ospfVirtNbrRestartHelperAge' => '1.3.6.1.2.1.14.11.1.10',
  'ospfVirtNbrRestartHelperExitReason' => '1.3.6.1.2.1.14.11.1.11',
  'ospfVirtNbrRestartHelperExitReasonDefinition' => 'OSPF-MIB::ospfVirtNbrRestartHelperExitReason',
  'ospfExtLsdbTable' => '1.3.6.1.2.1.14.12',
  'ospfExtLsdbEntry' => '1.3.6.1.2.1.14.12.1',
  'ospfExtLsdbType' => '1.3.6.1.2.1.14.12.1.1',
  'ospfExtLsdbTypeDefinition' => 'OSPF-MIB::ospfExtLsdbType',
  'ospfExtLsdbLsid' => '1.3.6.1.2.1.14.12.1.2',
  'ospfExtLsdbRouterId' => '1.3.6.1.2.1.14.12.1.3',
  'ospfExtLsdbSequence' => '1.3.6.1.2.1.14.12.1.4',
  'ospfExtLsdbAge' => '1.3.6.1.2.1.14.12.1.5',
  'ospfExtLsdbChecksum' => '1.3.6.1.2.1.14.12.1.6',
  'ospfExtLsdbAdvertisement' => '1.3.6.1.2.1.14.12.1.7',
  'ospfRouteGroup' => '1.3.6.1.2.1.14.13',
  'ospfIntraArea' => '1.3.6.1.2.1.14.13.1',
  'ospfInterArea' => '1.3.6.1.2.1.14.13.2',
  'ospfExternalType1' => '1.3.6.1.2.1.14.13.3',
  'ospfExternalType2' => '1.3.6.1.2.1.14.13.4',
  'ospfAreaAggregateTable' => '1.3.6.1.2.1.14.14',
  'ospfAreaAggregateEntry' => '1.3.6.1.2.1.14.14.1',
  'ospfAreaAggregateAreaID' => '1.3.6.1.2.1.14.14.1.1',
  'ospfAreaAggregateLsdbType' => '1.3.6.1.2.1.14.14.1.2',
  'ospfAreaAggregateLsdbTypeDefinition' => 'OSPF-MIB::ospfAreaAggregateLsdbType',
  'ospfAreaAggregateNet' => '1.3.6.1.2.1.14.14.1.3',
  'ospfAreaAggregateMask' => '1.3.6.1.2.1.14.14.1.4',
  'ospfAreaAggregateStatus' => '1.3.6.1.2.1.14.14.1.5',
  'ospfAreaAggregateEffect' => '1.3.6.1.2.1.14.14.1.6',
  'ospfAreaAggregateEffectDefinition' => 'OSPF-MIB::ospfAreaAggregateEffect',
  'ospfAreaAggregateExtRouteTag' => '1.3.6.1.2.1.14.14.1.7',
  'ospfConformance' => '1.3.6.1.2.1.14.15',
  'ospfGroups' => '1.3.6.1.2.1.14.15.1',
  'ospfCompliances' => '1.3.6.1.2.1.14.15.2',
  'ospfLocalLsdbTable' => '1.3.6.1.2.1.14.17',
  'ospfLocalLsdbEntry' => '1.3.6.1.2.1.14.17.1',
  'ospfLocalLsdbIpAddress' => '1.3.6.1.2.1.14.17.1.1',
  'ospfLocalLsdbAddressLessIf' => '1.3.6.1.2.1.14.17.1.2',
  'ospfLocalLsdbType' => '1.3.6.1.2.1.14.17.1.3',
  'ospfLocalLsdbTypeDefinition' => 'OSPF-MIB::ospfLocalLsdbType',
  'ospfLocalLsdbLsid' => '1.3.6.1.2.1.14.17.1.4',
  'ospfLocalLsdbRouterId' => '1.3.6.1.2.1.14.17.1.5',
  'ospfLocalLsdbSequence' => '1.3.6.1.2.1.14.17.1.6',
  'ospfLocalLsdbAge' => '1.3.6.1.2.1.14.17.1.7',
  'ospfLocalLsdbChecksum' => '1.3.6.1.2.1.14.17.1.8',
  'ospfLocalLsdbAdvertisement' => '1.3.6.1.2.1.14.17.1.9',
  'ospfVirtLocalLsdbTable' => '1.3.6.1.2.1.14.18',
  'ospfVirtLocalLsdbEntry' => '1.3.6.1.2.1.14.18.1',
  'ospfVirtLocalLsdbTransitArea' => '1.3.6.1.2.1.14.18.1.1',
  'ospfVirtLocalLsdbNeighbor' => '1.3.6.1.2.1.14.18.1.2',
  'ospfVirtLocalLsdbType' => '1.3.6.1.2.1.14.18.1.3',
  'ospfVirtLocalLsdbTypeDefinition' => 'OSPF-MIB::ospfVirtLocalLsdbType',
  'ospfVirtLocalLsdbLsid' => '1.3.6.1.2.1.14.18.1.4',
  'ospfVirtLocalLsdbRouterId' => '1.3.6.1.2.1.14.18.1.5',
  'ospfVirtLocalLsdbSequence' => '1.3.6.1.2.1.14.18.1.6',
  'ospfVirtLocalLsdbAge' => '1.3.6.1.2.1.14.18.1.7',
  'ospfVirtLocalLsdbChecksum' => '1.3.6.1.2.1.14.18.1.8',
  'ospfVirtLocalLsdbAdvertisement' => '1.3.6.1.2.1.14.18.1.9',
  'ospfAsLsdbTable' => '1.3.6.1.2.1.14.19',
  'ospfAsLsdbEntry' => '1.3.6.1.2.1.14.19.1',
  'ospfAsLsdbType' => '1.3.6.1.2.1.14.19.1.1',
  'ospfAsLsdbTypeDefinition' => 'OSPF-MIB::ospfAsLsdbType',
  'ospfAsLsdbLsid' => '1.3.6.1.2.1.14.19.1.2',
  'ospfAsLsdbRouterId' => '1.3.6.1.2.1.14.19.1.3',
  'ospfAsLsdbSequence' => '1.3.6.1.2.1.14.19.1.4',
  'ospfAsLsdbAge' => '1.3.6.1.2.1.14.19.1.5',
  'ospfAsLsdbChecksum' => '1.3.6.1.2.1.14.19.1.6',
  'ospfAsLsdbAdvertisement' => '1.3.6.1.2.1.14.19.1.7',
  'ospfAreaLsaCountTable' => '1.3.6.1.2.1.14.20',
  'ospfAreaLsaCountEntry' => '1.3.6.1.2.1.14.20.1',
  'ospfAreaLsaCountAreaId' => '1.3.6.1.2.1.14.20.1.1',
  'ospfAreaLsaCountLsaType' => '1.3.6.1.2.1.14.20.1.2',
  'ospfAreaLsaCountLsaTypeDefinition' => 'OSPF-MIB::ospfAreaLsaCountLsaType',
  'ospfAreaLsaCountNumber' => '1.3.6.1.2.1.14.20.1.3',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'OSPF-MIB'} = {
  'ospfAreaAggregateEffect' => {
    '1' => 'advertiseMatching',
    '2' => 'doNotAdvertiseMatching',
  },
  'ospfLocalLsdbType' => {
    '9' => 'localOpaqueLink',
  },
  'ospfVirtNbrRestartHelperStatus' => {
    '1' => 'notHelping',
    '2' => 'helping',
  },
  'ospfImportAsExtern' => {
    '1' => 'importExternal',
    '2' => 'importNoExternal',
    '3' => 'importNssa',
  },
  'ospfStubMetricType' => {
    '1' => 'ospfMetric',
    '2' => 'comparableCost',
    '3' => 'nonComparable',
  },
  'ospfAreaNssaTranslatorRole' => {
    '1' => 'always',
    '2' => 'candidate',
  },
  'ospfNbrRestartHelperStatus' => {
    '1' => 'notHelping',
    '2' => 'helping',
  },
  'AuType' => {
    '0' => 'Null authentication',
    '1' => 'Simple password',
  },
  'ospfVersionNumber' => {
    '2' => 'version2',
  },
  'ospfAreaAggregateLsdbType' => {
    '3' => 'summaryLink',
    '7' => 'nssaExternalLink',
  },
  'ospfExtLsdbType' => {
    '5' => 'asExternalLink',
  },
  'ospfStubRouterAdvertisement' => {
    '1' => 'doNotAdvertise',
    '2' => 'advertise',
  },
  'ospfAreaNssaTranslatorState' => {
    '1' => 'enabled',
    '2' => 'elected',
    '3' => 'disabled',
  },
  'ospfNbrRestartHelperExitReason' => {
    '1' => 'none',
    '2' => 'inProgress',
    '3' => 'completed',
    '4' => 'timedOut',
    '5' => 'topologyChanged',
  },
  'ospfAreaLsaCountLsaType' => {
    '1' => 'routerLink',
    '2' => 'networkLink',
    '3' => 'summaryLink',
    '4' => 'asSummaryLink',
    '6' => 'multicastLink',
    '7' => 'nssaExternalLink',
    '10' => 'areaOpaqueLink',
  },
  'ospfIfState' => {
    '1' => 'down',
    '2' => 'loopback',
    '3' => 'waiting',
    '4' => 'pointToPoint',
    '5' => 'designatedRouter',
    '6' => 'backupDesignatedRouter',
    '7' => 'otherDesignatedRouter',
  },
  'ospfNbmaNbrPermanence' => {
    '1' => 'dynamic',
    '2' => 'permanent',
  },
  'ospfLsdbType' => {
    '1' => 'routerLink',
    '2' => 'networkLink',
    '3' => 'summaryLink',
    '4' => 'asSummaryLink',
    '5' => 'asExternalLink',
    '6' => 'multicastLink',
    '7' => 'nssaExternalLink',
    '10' => 'areaOpaqueLink',
  },
  'ospfVirtIfState' => {
    '1' => 'down',
    '4' => 'pointToPoint',
  },
  'ospfRestartStatus' => {
    '1' => 'notRestarting',
    '2' => 'plannedRestart',
    '3' => 'unplannedRestart',
  },
  'ospfAreaSummary' => {
    '1' => 'noAreaSummary',
    '2' => 'sendAreaSummary',
  },
  'ospfNbrState' => {
    '1' => 'down',
    '2' => 'attempt',
    '3' => 'init',
    '4' => 'twoWay',
    '5' => 'exchangeStart',
    '6' => 'exchange',
    '7' => 'loading',
    '8' => 'full',
  },
  'ospfVirtNbrRestartHelperExitReason' => {
    '1' => 'none',
    '2' => 'inProgress',
    '3' => 'completed',
    '4' => 'timedOut',
    '5' => 'topologyChanged',
  },
  'ospfRestartExitReason' => {
    '1' => 'none',
    '2' => 'inProgress',
    '3' => 'completed',
    '4' => 'timedOut',
    '5' => 'topologyChanged',
  },
  'ospfIfType' => {
    '1' => 'broadcast',
    '2' => 'nbma',
    '3' => 'pointToPoint',
    '5' => 'pointToMultipoint',
  },
  'Status' => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  'ospfVirtNbrState' => {
    '1' => 'down',
    '2' => 'attempt',
    '3' => 'init',
    '4' => 'twoWay',
    '5' => 'exchangeStart',
    '6' => 'exchange',
    '7' => 'loading',
    '8' => 'full',
  },
  'ospfAsLsdbType' => {
    '5' => 'asExternalLink',
    '11' => 'asOpaqueLink',
  },
  'ospfAreaRangeEffect' => {
    '1' => 'advertiseMatching',
    '2' => 'doNotAdvertiseMatching',
  },
  'ospfIfMulticastForwarding' => {
    '1' => 'blocked',
    '2' => 'multicast',
    '3' => 'unicast',
  },
  'ospfVirtNbrOptions' => 'REPAIRME',
  'ospfRestartSupport' => {
    '1' => 'none',
    '2' => 'plannedOnly',
    '3' => 'plannedAndUnplanned',
  },
  'ospfVirtLocalLsdbType' => {
    '9' => 'localOpaqueLink',
  },
};



package Monitoring::GLPlugin::SNMP::MibsAndOids::OSPFV3MIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'OSPFV3-MIB'} = {
  url => 'https://tools.ietf.org/html/rfc5643',
  name => 'OSPFV3-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'OSPFV3-MIB'} =
    '1.3.6.1.2.1.191';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'OSPFV3-MIB'} = {
  ospfv3MIB => '1.3.6.1.2.1.191',
  ospfv3Notifications => '1.3.6.1.2.1.191.0',
  ospfv3Objects => '1.3.6.1.2.1.191.1',
  ospfv3GeneralGroup => '1.3.6.1.2.1.191.1.1',
  ospfv3RouterId => '1.3.6.1.2.1.191.1.1.1',
  ospfv3AdminStatus => '1.3.6.1.2.1.191.1.1.2',
  ospfv3VersionNumber => '1.3.6.1.2.1.191.1.1.3',
  ospfv3VersionNumberDefinition => 'OSPFV3-MIB::ospfv3VersionNumber',
  ospfv3AreaBdrRtrStatus => '1.3.6.1.2.1.191.1.1.4',
  ospfv3ASBdrRtrStatus => '1.3.6.1.2.1.191.1.1.5',
  ospfv3AsScopeLsaCount => '1.3.6.1.2.1.191.1.1.6',
  ospfv3AsScopeLsaCksumSum => '1.3.6.1.2.1.191.1.1.7',
  ospfv3OriginateNewLsas => '1.3.6.1.2.1.191.1.1.8',
  ospfv3RxNewLsas => '1.3.6.1.2.1.191.1.1.9',
  ospfv3ExtLsaCount => '1.3.6.1.2.1.191.1.1.10',
  ospfv3ExtAreaLsdbLimit => '1.3.6.1.2.1.191.1.1.11',
  ospfv3ExitOverflowInterval => '1.3.6.1.2.1.191.1.1.12',
  ospfv3DemandExtensions => '1.3.6.1.2.1.191.1.1.13',
  ospfv3ReferenceBandwidth => '1.3.6.1.2.1.191.1.1.14',
  ospfv3RestartSupport => '1.3.6.1.2.1.191.1.1.15',
  ospfv3RestartSupportDefinition => 'OSPFV3-MIB::ospfv3RestartSupport',
  ospfv3RestartInterval => '1.3.6.1.2.1.191.1.1.16',
  ospfv3RestartStrictLsaChecking => '1.3.6.1.2.1.191.1.1.17',
  ospfv3RestartStatus => '1.3.6.1.2.1.191.1.1.18',
  ospfv3RestartStatusDefinition => 'OSPFV3-MIB::ospfv3RestartStatus',
  ospfv3RestartAge => '1.3.6.1.2.1.191.1.1.19',
  ospfv3RestartExitReason => '1.3.6.1.2.1.191.1.1.20',
  ospfv3RestartExitReasonDefinition => 'OSPFV3-MIB::ospfv3RestartExitReason',
  ospfv3NotificationEnable => '1.3.6.1.2.1.191.1.1.21',
  ospfv3StubRouterSupport => '1.3.6.1.2.1.191.1.1.22',
  ospfv3StubRouterAdvertisement => '1.3.6.1.2.1.191.1.1.23',
  ospfv3StubRouterAdvertisementDefinition => 'OSPFV3-MIB::ospfv3StubRouterAdvertisement',
  ospfv3DiscontinuityTime => '1.3.6.1.2.1.191.1.1.24',
  ospfv3RestartTime => '1.3.6.1.2.1.191.1.1.25',
  ospfv3AreaTable => '1.3.6.1.2.1.191.1.2',
  ospfv3AreaEntry => '1.3.6.1.2.1.191.1.2.1',
  ospfv3AreaId => '1.3.6.1.2.1.191.1.2.1.1',
  ospfv3AreaImportAsExtern => '1.3.6.1.2.1.191.1.2.1.2',
  ospfv3AreaImportAsExternDefinition => 'OSPFV3-MIB::ospfv3AreaImportAsExtern',
  ospfv3AreaSpfRuns => '1.3.6.1.2.1.191.1.2.1.3',
  ospfv3AreaBdrRtrCount => '1.3.6.1.2.1.191.1.2.1.4',
  ospfv3AreaAsBdrRtrCount => '1.3.6.1.2.1.191.1.2.1.5',
  ospfv3AreaScopeLsaCount => '1.3.6.1.2.1.191.1.2.1.6',
  ospfv3AreaScopeLsaCksumSum => '1.3.6.1.2.1.191.1.2.1.7',
  ospfv3AreaSummary => '1.3.6.1.2.1.191.1.2.1.8',
  ospfv3AreaSummaryDefinition => 'OSPFV3-MIB::ospfv3AreaSummary',
  ospfv3AreaRowStatus => '1.3.6.1.2.1.191.1.2.1.9',
  ospfv3AreaStubMetric => '1.3.6.1.2.1.191.1.2.1.10',
  ospfv3AreaNssaTranslatorRole => '1.3.6.1.2.1.191.1.2.1.11',
  ospfv3AreaNssaTranslatorRoleDefinition => 'OSPFV3-MIB::ospfv3AreaNssaTranslatorRole',
  ospfv3AreaNssaTranslatorState => '1.3.6.1.2.1.191.1.2.1.12',
  ospfv3AreaNssaTranslatorStateDefinition => 'OSPFV3-MIB::ospfv3AreaNssaTranslatorState',
  ospfv3AreaNssaTranslatorStabInterval => '1.3.6.1.2.1.191.1.2.1.13',
  ospfv3AreaNssaTranslatorEvents => '1.3.6.1.2.1.191.1.2.1.14',
  ospfv3AreaStubMetricType => '1.3.6.1.2.1.191.1.2.1.15',
  ospfv3AreaStubMetricTypeDefinition => 'OSPFV3-MIB::ospfv3AreaStubMetricType',
  ospfv3AreaTEEnabled => '1.3.6.1.2.1.191.1.2.1.16',
  ospfv3AsLsdbTable => '1.3.6.1.2.1.191.1.3',
  ospfv3AsLsdbEntry => '1.3.6.1.2.1.191.1.3.1',
  ospfv3AsLsdbType => '1.3.6.1.2.1.191.1.3.1.1',
  ospfv3AsLsdbRouterId => '1.3.6.1.2.1.191.1.3.1.2',
  ospfv3AsLsdbLsid => '1.3.6.1.2.1.191.1.3.1.3',
  ospfv3AsLsdbSequence => '1.3.6.1.2.1.191.1.3.1.4',
  ospfv3AsLsdbAge => '1.3.6.1.2.1.191.1.3.1.5',
  ospfv3AsLsdbChecksum => '1.3.6.1.2.1.191.1.3.1.6',
  ospfv3AsLsdbAdvertisement => '1.3.6.1.2.1.191.1.3.1.7',
  ospfv3AsLsdbTypeKnown => '1.3.6.1.2.1.191.1.3.1.8',
  ospfv3AreaLsdbTable => '1.3.6.1.2.1.191.1.4',
  ospfv3AreaLsdbEntry => '1.3.6.1.2.1.191.1.4.1',
  ospfv3AreaLsdbAreaId => '1.3.6.1.2.1.191.1.4.1.1',
  ospfv3AreaLsdbType => '1.3.6.1.2.1.191.1.4.1.2',
  ospfv3AreaLsdbRouterId => '1.3.6.1.2.1.191.1.4.1.3',
  ospfv3AreaLsdbLsid => '1.3.6.1.2.1.191.1.4.1.4',
  ospfv3AreaLsdbSequence => '1.3.6.1.2.1.191.1.4.1.5',
  ospfv3AreaLsdbAge => '1.3.6.1.2.1.191.1.4.1.6',
  ospfv3AreaLsdbChecksum => '1.3.6.1.2.1.191.1.4.1.7',
  ospfv3AreaLsdbAdvertisement => '1.3.6.1.2.1.191.1.4.1.8',
  ospfv3AreaLsdbTypeKnown => '1.3.6.1.2.1.191.1.4.1.9',
  ospfv3LinkLsdbTable => '1.3.6.1.2.1.191.1.5',
  ospfv3LinkLsdbEntry => '1.3.6.1.2.1.191.1.5.1',
  ospfv3LinkLsdbIfIndex => '1.3.6.1.2.1.191.1.5.1.1',
  ospfv3LinkLsdbIfInstId => '1.3.6.1.2.1.191.1.5.1.2',
  ospfv3LinkLsdbType => '1.3.6.1.2.1.191.1.5.1.3',
  ospfv3LinkLsdbRouterId => '1.3.6.1.2.1.191.1.5.1.4',
  ospfv3LinkLsdbLsid => '1.3.6.1.2.1.191.1.5.1.5',
  ospfv3LinkLsdbSequence => '1.3.6.1.2.1.191.1.5.1.6',
  ospfv3LinkLsdbAge => '1.3.6.1.2.1.191.1.5.1.7',
  ospfv3LinkLsdbChecksum => '1.3.6.1.2.1.191.1.5.1.8',
  ospfv3LinkLsdbAdvertisement => '1.3.6.1.2.1.191.1.5.1.9',
  ospfv3LinkLsdbTypeKnown => '1.3.6.1.2.1.191.1.5.1.10',
  ospfv3HostTable => '1.3.6.1.2.1.191.1.6',
  ospfv3HostEntry => '1.3.6.1.2.1.191.1.6.1',
  ospfv3HostAddressType => '1.3.6.1.2.1.191.1.6.1.1',
  ospfv3HostAddress => '1.3.6.1.2.1.191.1.6.1.2',
  ospfv3HostMetric => '1.3.6.1.2.1.191.1.6.1.3',
  ospfv3HostRowStatus => '1.3.6.1.2.1.191.1.6.1.4',
  ospfv3HostAreaID => '1.3.6.1.2.1.191.1.6.1.5',
  ospfv3IfTable => '1.3.6.1.2.1.191.1.7',
  ospfv3IfEntry => '1.3.6.1.2.1.191.1.7.1',
  ospfv3IfIndex => '1.3.6.1.2.1.191.1.7.1.1',
  ospfv3IfInstId => '1.3.6.1.2.1.191.1.7.1.2',
  ospfv3IfAreaId => '1.3.6.1.2.1.191.1.7.1.3',
  ospfv3IfType => '1.3.6.1.2.1.191.1.7.1.4',
  ospfv3IfTypeDefinition => 'OSPFV3-MIB::ospfv3IfType',
  ospfv3IfAdminStatus => '1.3.6.1.2.1.191.1.7.1.5',
  ospfv3IfRtrPriority => '1.3.6.1.2.1.191.1.7.1.6',
  ospfv3IfTransitDelay => '1.3.6.1.2.1.191.1.7.1.7',
  ospfv3IfRetransInterval => '1.3.6.1.2.1.191.1.7.1.8',
  ospfv3IfHelloInterval => '1.3.6.1.2.1.191.1.7.1.9',
  ospfv3IfRtrDeadInterval => '1.3.6.1.2.1.191.1.7.1.10',
  ospfv3IfPollInterval => '1.3.6.1.2.1.191.1.7.1.11',
  ospfv3IfState => '1.3.6.1.2.1.191.1.7.1.12',
  ospfv3IfStateDefinition => 'OSPFV3-MIB::ospfv3IfState',
  ospfv3IfDesignatedRouter => '1.3.6.1.2.1.191.1.7.1.13',
  ospfv3IfBackupDesignatedRouter => '1.3.6.1.2.1.191.1.7.1.14',
  ospfv3IfEvents => '1.3.6.1.2.1.191.1.7.1.15',
  ospfv3IfRowStatus => '1.3.6.1.2.1.191.1.7.1.16',
  ospfv3IfDemand => '1.3.6.1.2.1.191.1.7.1.17',
  ospfv3IfMetricValue => '1.3.6.1.2.1.191.1.7.1.18',
  ospfv3IfLinkScopeLsaCount => '1.3.6.1.2.1.191.1.7.1.19',
  ospfv3IfLinkLsaCksumSum => '1.3.6.1.2.1.191.1.7.1.20',
  ospfv3IfDemandNbrProbe => '1.3.6.1.2.1.191.1.7.1.21',
  ospfv3IfDemandNbrProbeRetransLimit => '1.3.6.1.2.1.191.1.7.1.22',
  ospfv3IfDemandNbrProbeInterval => '1.3.6.1.2.1.191.1.7.1.23',
  ospfv3IfTEDisabled => '1.3.6.1.2.1.191.1.7.1.24',
  ospfv3IfLinkLSASuppression => '1.3.6.1.2.1.191.1.7.1.25',
  ospfv3VirtIfTable => '1.3.6.1.2.1.191.1.8',
  ospfv3VirtIfEntry => '1.3.6.1.2.1.191.1.8.1',
  ospfv3VirtIfAreaId => '1.3.6.1.2.1.191.1.8.1.1',
  ospfv3VirtIfNeighbor => '1.3.6.1.2.1.191.1.8.1.2',
  ospfv3VirtIfIndex => '1.3.6.1.2.1.191.1.8.1.3',
  ospfv3VirtIfInstId => '1.3.6.1.2.1.191.1.8.1.4',
  ospfv3VirtIfTransitDelay => '1.3.6.1.2.1.191.1.8.1.5',
  ospfv3VirtIfRetransInterval => '1.3.6.1.2.1.191.1.8.1.6',
  ospfv3VirtIfHelloInterval => '1.3.6.1.2.1.191.1.8.1.7',
  ospfv3VirtIfRtrDeadInterval => '1.3.6.1.2.1.191.1.8.1.8',
  ospfv3VirtIfState => '1.3.6.1.2.1.191.1.8.1.9',
  ospfv3VirtIfStateDefinition => 'OSPFV3-MIB::ospfv3VirtIfState',
  ospfv3VirtIfEvents => '1.3.6.1.2.1.191.1.8.1.10',
  ospfv3VirtIfRowStatus => '1.3.6.1.2.1.191.1.8.1.11',
  ospfv3VirtIfLinkScopeLsaCount => '1.3.6.1.2.1.191.1.8.1.12',
  ospfv3VirtIfLinkLsaCksumSum => '1.3.6.1.2.1.191.1.8.1.13',
  ospfv3NbrTable => '1.3.6.1.2.1.191.1.9',
  ospfv3NbrEntry => '1.3.6.1.2.1.191.1.9.1',
  ospfv3NbrIfIndex => '1.3.6.1.2.1.191.1.9.1.1',
  ospfv3NbrIfInstId => '1.3.6.1.2.1.191.1.9.1.2',
  ospfv3NbrRtrId => '1.3.6.1.2.1.191.1.9.1.3',
  ospfv3NbrAddressType => '1.3.6.1.2.1.191.1.9.1.4',
  ospfv3NbrAddressTypeDefinition => 'INET-ADDRESS-MIB::InetAddressType',
  ospfv3NbrAddress => '1.3.6.1.2.1.191.1.9.1.5',
  ospfv3NbrAddressDefinition => 'INET-ADDRESS-MIB::InetAddress(ospfv3NbrAddressType)',
  ospfv3NbrOptions => '1.3.6.1.2.1.191.1.9.1.6',
  ospfv3NbrPriority => '1.3.6.1.2.1.191.1.9.1.7',
  ospfv3NbrState => '1.3.6.1.2.1.191.1.9.1.8',
  ospfv3NbrStateDefinition => 'OSPFV3-MIB::ospfv3NbrState',
  ospfv3NbrEvents => '1.3.6.1.2.1.191.1.9.1.9',
  ospfv3NbrLsRetransQLen => '1.3.6.1.2.1.191.1.9.1.10',
  ospfv3NbrHelloSuppressed => '1.3.6.1.2.1.191.1.9.1.11',
  ospfv3NbrIfId => '1.3.6.1.2.1.191.1.9.1.12',
  ospfv3NbrRestartHelperStatus => '1.3.6.1.2.1.191.1.9.1.13',
  ospfv3NbrRestartHelperStatusDefinition => 'OSPFV3-MIB::ospfv3NbrRestartHelperStatus',
  ospfv3NbrRestartHelperAge => '1.3.6.1.2.1.191.1.9.1.14',
  ospfv3NbrRestartHelperExitReason => '1.3.6.1.2.1.191.1.9.1.15',
  ospfv3NbrRestartHelperExitReasonDefinition => 'OSPFV3-MIB::ospfv3NbrRestartHelperExitReason',
  ospfv3CfgNbrTable => '1.3.6.1.2.1.191.1.10',
  ospfv3CfgNbrEntry => '1.3.6.1.2.1.191.1.10.1',
  ospfv3CfgNbrIfIndex => '1.3.6.1.2.1.191.1.10.1.1',
  ospfv3CfgNbrIfInstId => '1.3.6.1.2.1.191.1.10.1.2',
  ospfv3CfgNbrAddressType => '1.3.6.1.2.1.191.1.10.1.3',
  ospfv3CfgNbrAddress => '1.3.6.1.2.1.191.1.10.1.4',
  ospfv3CfgNbrPriority => '1.3.6.1.2.1.191.1.10.1.5',
  ospfv3CfgNbrRowStatus => '1.3.6.1.2.1.191.1.10.1.6',
  ospfv3VirtNbrTable => '1.3.6.1.2.1.191.1.11',
  ospfv3VirtNbrEntry => '1.3.6.1.2.1.191.1.11.1',
  ospfv3VirtNbrArea => '1.3.6.1.2.1.191.1.11.1.1',
  ospfv3VirtNbrRtrId => '1.3.6.1.2.1.191.1.11.1.2',
  ospfv3VirtNbrIfIndex => '1.3.6.1.2.1.191.1.11.1.3',
  ospfv3VirtNbrIfInstId => '1.3.6.1.2.1.191.1.11.1.4',
  ospfv3VirtNbrAddressType => '1.3.6.1.2.1.191.1.11.1.5',
  ospfv3VirtNbrAddress => '1.3.6.1.2.1.191.1.11.1.6',
  ospfv3VirtNbrOptions => '1.3.6.1.2.1.191.1.11.1.7',
  ospfv3VirtNbrState => '1.3.6.1.2.1.191.1.11.1.8',
  ospfv3VirtNbrStateDefinition => 'OSPFV3-MIB::ospfv3VirtNbrState',
  ospfv3VirtNbrEvents => '1.3.6.1.2.1.191.1.11.1.9',
  ospfv3VirtNbrLsRetransQLen => '1.3.6.1.2.1.191.1.11.1.10',
  ospfv3VirtNbrHelloSuppressed => '1.3.6.1.2.1.191.1.11.1.11',
  ospfv3VirtNbrIfId => '1.3.6.1.2.1.191.1.11.1.12',
  ospfv3VirtNbrRestartHelperStatus => '1.3.6.1.2.1.191.1.11.1.13',
  ospfv3VirtNbrRestartHelperStatusDefinition => 'OSPFV3-MIB::ospfv3VirtNbrRestartHelperStatus',
  ospfv3VirtNbrRestartHelperAge => '1.3.6.1.2.1.191.1.11.1.14',
  ospfv3VirtNbrRestartHelperExitReason => '1.3.6.1.2.1.191.1.11.1.15',
  ospfv3VirtNbrRestartHelperExitReasonDefinition => 'OSPFV3-MIB::ospfv3VirtNbrRestartHelperExitReason',
  ospfv3AreaAggregateTable => '1.3.6.1.2.1.191.1.12',
  ospfv3AreaAggregateEntry => '1.3.6.1.2.1.191.1.12.1',
  ospfv3AreaAggregateAreaID => '1.3.6.1.2.1.191.1.12.1.1',
  ospfv3AreaAggregateAreaLsdbType => '1.3.6.1.2.1.191.1.12.1.2',
  ospfv3AreaAggregateAreaLsdbTypeDefinition => 'OSPFV3-MIB::ospfv3AreaAggregateAreaLsdbType',
  ospfv3AreaAggregatePrefixType => '1.3.6.1.2.1.191.1.12.1.3',
  ospfv3AreaAggregatePrefix => '1.3.6.1.2.1.191.1.12.1.4',
  ospfv3AreaAggregatePrefixLength => '1.3.6.1.2.1.191.1.12.1.5',
  ospfv3AreaAggregateRowStatus => '1.3.6.1.2.1.191.1.12.1.6',
  ospfv3AreaAggregateEffect => '1.3.6.1.2.1.191.1.12.1.7',
  ospfv3AreaAggregateEffectDefinition => 'OSPFV3-MIB::ospfv3AreaAggregateEffect',
  ospfv3AreaAggregateRouteTag => '1.3.6.1.2.1.191.1.12.1.8',
  ospfv3VirtLinkLsdbTable => '1.3.6.1.2.1.191.1.13',
  ospfv3VirtLinkLsdbEntry => '1.3.6.1.2.1.191.1.13.1',
  ospfv3VirtLinkLsdbIfAreaId => '1.3.6.1.2.1.191.1.13.1.1',
  ospfv3VirtLinkLsdbIfNeighbor => '1.3.6.1.2.1.191.1.13.1.2',
  ospfv3VirtLinkLsdbType => '1.3.6.1.2.1.191.1.13.1.3',
  ospfv3VirtLinkLsdbRouterId => '1.3.6.1.2.1.191.1.13.1.4',
  ospfv3VirtLinkLsdbLsid => '1.3.6.1.2.1.191.1.13.1.5',
  ospfv3VirtLinkLsdbSequence => '1.3.6.1.2.1.191.1.13.1.6',
  ospfv3VirtLinkLsdbAge => '1.3.6.1.2.1.191.1.13.1.7',
  ospfv3VirtLinkLsdbChecksum => '1.3.6.1.2.1.191.1.13.1.8',
  ospfv3VirtLinkLsdbAdvertisement => '1.3.6.1.2.1.191.1.13.1.9',
  ospfv3VirtLinkLsdbTypeKnown => '1.3.6.1.2.1.191.1.13.1.10',
  ospfv3NotificationEntry => '1.3.6.1.2.1.191.1.14',
  ospfv3ConfigErrorType => '1.3.6.1.2.1.191.1.14.1',
  ospfv3ConfigErrorTypeDefinition => 'OSPFV3-MIB::ospfv3ConfigErrorType',
  ospfv3PacketType => '1.3.6.1.2.1.191.1.14.2',
  ospfv3PacketTypeDefinition => 'OSPFV3-MIB::ospfv3PacketType',
  ospfv3PacketSrc => '1.3.6.1.2.1.191.1.14.3',
  ospfv3Conformance => '1.3.6.1.2.1.191.2',
  ospfv3Groups => '1.3.6.1.2.1.191.2.1',
  ospfv3Compliances => '1.3.6.1.2.1.191.2.2',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'OSPFV3-MIB'} = {
  ospfv3AreaStubMetricType => {
    '1' => 'ospfv3Metric',
    '2' => 'comparableCost',
    '3' => 'nonComparable',
  },
  ospfv3RestartSupport => {
    '1' => 'none',
    '2' => 'plannedOnly',
    '3' => 'plannedAndUnplanned',
  },
  ospfv3VirtNbrState => {
    '1' => 'down',
    '2' => 'attempt',
    '3' => 'init',
    '4' => 'twoWay',
    '5' => 'exchangeStart',
    '6' => 'exchange',
    '7' => 'loading',
    '8' => 'full',
  },
  ospfv3IfType => {
    '1' => 'broadcast',
    '2' => 'nbma',
    '3' => 'pointToPoint',
    '5' => 'pointToMultipoint',
  },
  ospfv3RestartExitReason => {
    '1' => 'none',
    '2' => 'inProgress',
    '3' => 'completed',
    '4' => 'timedOut',
    '5' => 'topologyChanged',
  },
  ospfv3AreaSummary => {
    '1' => 'noAreaSummary',
    '2' => 'sendAreaSummary',
  },
  ospfv3ConfigErrorType => {
    '1' => 'badVersion',
    '2' => 'areaMismatch',
    '3' => 'unknownNbmaNbr',
    '4' => 'unknownVirtualNbr',
    '5' => 'helloIntervalMismatch',
    '6' => 'deadIntervalMismatch',
    '7' => 'optionMismatch',
    '8' => 'mtuMismatch',
    '9' => 'duplicateRouterId',
    '10' => 'noError',
  },
  ospfv3VirtNbrRestartHelperExitReason => {
    '1' => 'none',
    '2' => 'inProgress',
    '3' => 'completed',
    '4' => 'timedOut',
    '5' => 'topologyChanged',
  },
  ospfv3AreaImportAsExtern => {
    '1' => 'importExternal',
    '2' => 'importNoExternal',
    '3' => 'importNssa',
  },
  ospfv3VirtIfState => {
    '1' => 'down',
    '4' => 'pointToPoint',
  },
  ospfv3VirtNbrRestartHelperStatus => {
    '1' => 'notHelping',
    '2' => 'helping',
  },
  ospfv3IfState => {
    '1' => 'down',
    '2' => 'loopback',
    '3' => 'waiting',
    '4' => 'pointToPoint',
    '5' => 'designatedRouter',
    '6' => 'backupDesignatedRouter',
    '7' => 'otherDesignatedRouter',
    '8' => 'standby',
  },
  ospfv3NbrRestartHelperStatus => {
    '1' => 'notHelping',
    '2' => 'helping',
  },
  ospfv3NbrState => {
    '1' => 'down',
    '2' => 'attempt',
    '3' => 'init',
    '4' => 'twoWay',
    '5' => 'exchangeStart',
    '6' => 'exchange',
    '7' => 'loading',
    '8' => 'full',
  },
  ospfv3RestartStatus => {
    '1' => 'notRestarting',
    '2' => 'plannedRestart',
    '3' => 'unplannedRestart',
  },
  ospfv3AreaAggregateEffect => {
    '1' => 'advertiseMatching',
    '2' => 'doNotAdvertiseMatching',
  },
  ospfv3PacketType => {
    '1' => 'hello',
    '2' => 'dbDescript',
    '3' => 'lsReq',
    '4' => 'lsUpdate',
    '5' => 'lsAck',
    '6' => 'nullPacket',
  },
  ospfv3StubRouterAdvertisement => {
    '1' => 'doNotAdvertise',
    '2' => 'advertise',
  },
  ospfv3AreaNssaTranslatorState => {
    '1' => 'enabled',
    '2' => 'elected',
    '3' => 'disabled',
  },
  ospfv3NbrRestartHelperExitReason => {
    '1' => 'none',
    '2' => 'inProgress',
    '3' => 'completed',
    '4' => 'timedOut',
    '5' => 'topologyChanged',
  },
  ospfv3VersionNumber => {
    '3' => 'version3',
  },
  ospfv3AreaAggregateAreaLsdbType => {
    '8195' => 'interAreaPrefixLsa',
    '8199' => 'nssaExternalLsa',
  },
  ospfv3AreaNssaTranslatorRole => {
    '1' => 'always',
    '2' => 'candidate',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::PANCOMMONMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'PAN-COMMON-MIB'} = {
  url => '',
  name => 'PAN-COMMON-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'PAN-COMMON-MIB'} = {
  'panCommonConfMib' => '1.3.6.1.4.1.25461.2.1.1',
  'panCommonObjs' => '1.3.6.1.4.1.25461.2.1.2',
  'panSys' => '1.3.6.1.4.1.25461.2.1.2.1',
  'panSysSwVersion' => '1.3.6.1.4.1.25461.2.1.2.1.1.0',
  'panSysHwVersion' => '1.3.6.1.4.1.25461.2.1.2.1.2.0',
  'panSysSerialNumber' => '1.3.6.1.4.1.25461.2.1.2.1.3.0',
  'panSysTimeZoneOffset' => '1.3.6.1.4.1.25461.2.1.2.1.4.0',
  'panSysDaylightSaving' => '1.3.6.1.4.1.25461.2.1.2.1.5.0',
  'panSysVpnClientVersion' => '1.3.6.1.4.1.25461.2.1.2.1.6.0',
  'panSysAppVersion' => '1.3.6.1.4.1.25461.2.1.2.1.7.0',
  'panSysAvVersion' => '1.3.6.1.4.1.25461.2.1.2.1.8.0',
  'panSysThreatVersion' => '1.3.6.1.4.1.25461.2.1.2.1.9.0',
  'panSysUrlFilteringVersion' => '1.3.6.1.4.1.25461.2.1.2.1.10.0',
  'panSysHAState' => '1.3.6.1.4.1.25461.2.1.2.1.11.0',
  'panSysHAPeerState' => '1.3.6.1.4.1.25461.2.1.2.1.12.0',
  'panSysHAMode' => '1.3.6.1.4.1.25461.2.1.2.1.13.0',
  'panSysUrlFilteringDatabase' => '1.3.6.1.4.1.25461.2.1.2.1.14.0',
  'panSysGlobalProtectClientVersion' => '1.3.6.1.4.1.25461.2.1.2.1.15.0',
  'panSysOpswatDatafileVersion' => '1.3.6.1.4.1.25461.2.1.2.1.16.0',
  'panChassis' => '1.3.6.1.4.1.25461.2.1.2.2',
  'panChassisType' => '1.3.6.1.4.1.25461.2.1.2.2.1.0',
  'panMSeriesMode' => '1.3.6.1.4.1.25461.2.1.2.2.2.0',
  'panSession' => '1.3.6.1.4.1.25461.2.1.2.3',
  'panSessionUtilization' => '1.3.6.1.4.1.25461.2.1.2.3.1.0',
  'panSessionMax' => '1.3.6.1.4.1.25461.2.1.2.3.2.0',
  'panSessionActive' => '1.3.6.1.4.1.25461.2.1.2.3.3.0',
  'panSessionActiveTcp' => '1.3.6.1.4.1.25461.2.1.2.3.4.0',
  'panSessionActiveUdp' => '1.3.6.1.4.1.25461.2.1.2.3.5.0',
  'panSessionActiveICMP' => '1.3.6.1.4.1.25461.2.1.2.3.6.0',
  'panSessionActiveSslProxy' => '1.3.6.1.4.1.25461.2.1.2.3.7.0',
  'panSessionSslProxyUtilization' => '1.3.6.1.4.1.25461.2.1.2.3.8.0',
  'panVsysTable' => '1.3.6.1.4.1.25461.2.1.2.3.9',
  'panVsysEntry' => '1.3.6.1.4.1.25461.2.1.2.3.9.1',
  'panVsysId' => '1.3.6.1.4.1.25461.2.1.2.3.9.1.1',
  'panVsysName' => '1.3.6.1.4.1.25461.2.1.2.3.9.1.2',
  'panVsysSessionUtilizationPct' => '1.3.6.1.4.1.25461.2.1.2.3.9.1.3',
  'panVsysActiveSessions' => '1.3.6.1.4.1.25461.2.1.2.3.9.1.4',
  'panVsysMaxSessions' => '1.3.6.1.4.1.25461.2.1.2.3.9.1.5',
  'panMgmt' => '1.3.6.1.4.1.25461.2.1.2.4',
  'panMgmtPanoramaConnected' => '1.3.6.1.4.1.25461.2.1.2.4.1.0',
  'panMgmtPanorama2Connected' => '1.3.6.1.4.1.25461.2.1.2.4.2.0',
  'panGlobalProtect' => '1.3.6.1.4.1.25461.2.1.2.5',
  'panGPGatewayUtilization' => '1.3.6.1.4.1.25461.2.1.2.5.1',
  'panGPGWUtilizationPct' => '1.3.6.1.4.1.25461.2.1.2.5.1.1.0',
  'panGPGWUtilizationMaxTunnels' => '1.3.6.1.4.1.25461.2.1.2.5.1.2.0',
  'panGPGWUtilizationActiveTunnels' => '1.3.6.1.4.1.25461.2.1.2.5.1.3.0',
  'panCommonEvents' => '1.3.6.1.4.1.25461.2.1.3',
  'panCommonEventObjs' => '1.3.6.1.4.1.25461.2.1.3.1',
  'panCommonEventDescr' => '1.3.6.1.4.1.25461.2.1.3.1.1.0',
  'panCommonEventEvents' => '1.3.6.1.4.1.25461.2.1.3.2',
  'panCommonEventEventsV2' => '1.3.6.1.4.1.25461.2.1.3.2.0',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::PANPRODUCTSMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'PAN-PRODUCTS-MIB'} = {
  url => '',
  name => 'PAN-PRODUCTS-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'PAN-PRODUCTS-MIB'} = 
  '1.3.6.1.4.1.25461.2.3';



package Monitoring::GLPlugin::SNMP::MibsAndOids::PHIONMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'PHION-MIB'} = {
  url => '',
  name => 'PHION-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'PHION-MIB'} =
    '1.3.6.1.4.1.10704';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'PHION-MIB'} = {
  phion => '1.3.6.1.4.1.10704',
  firewall => '1.3.6.1.4.1.10704.1',
  boxServices => '1.3.6.1.4.1.10704.1.0',
  boxServicesTable => '1.3.6.1.4.1.10704.1.0.1',
  boxServicesEntry => '1.3.6.1.4.1.10704.1.0.1',
  boxServiceName => '1.3.6.1.4.1.10704.1.0.1.1',
  boxServiceState => '1.3.6.1.4.1.10704.1.0.1.2',
  boxServiceStateDefinition => 'PHION-MIB::ServiceState',
  serverServices => '1.3.6.1.4.1.10704.1.1',
  serverServicesTable => '1.3.6.1.4.1.10704.1.1.1',
  serverServicesEntry => '1.3.6.1.4.1.10704.1.1.1',
  serverServiceName => '1.3.6.1.4.1.10704.1.1.1.1',
  serverServiceState => '1.3.6.1.4.1.10704.1.1.1.2',
  serverServiceStateDefinition => 'PHION-MIB::ServiceState',
  phionRelease => '1.3.6.1.4.1.10704.1.2',
  phionHotfixes => '1.3.6.1.4.1.10704.1.3',
  phionHotfixesTable => '1.3.6.1.4.1.10704.1.3.1',
  phionHotfixesEntry => '1.3.6.1.4.1.10704.1.3.1',
  hotfixName => '1.3.6.1.4.1.10704.1.3.1.1',
  hotfixInstallTime => '1.3.6.1.4.1.10704.1.3.1.2',
  hwSensors => '1.3.6.1.4.1.10704.1.4',
  hwSensorsTable => '1.3.6.1.4.1.10704.1.4.1',
  hwSensorsEntry => '1.3.6.1.4.1.10704.1.4.1',
  hwSensorName => '1.3.6.1.4.1.10704.1.4.1.1',
  hwSensorType => '1.3.6.1.4.1.10704.1.4.1.2',
  hwSensorTypeDefinition => 'PHION-MIB::SensorType',
  hwSensorValue => '1.3.6.1.4.1.10704.1.4.1.3',
  raidEvents => '1.3.6.1.4.1.10704.1.5',
  raidEventsTable => '1.3.6.1.4.1.10704.1.5.1',
  raidEventsEntry => '1.3.6.1.4.1.10704.1.5.1',
  raidEventIndex => '1.3.6.1.4.1.10704.1.5.1.1',
  raidEventSev => '1.3.6.1.4.1.10704.1.5.1.2',
  raidEventSevDefinition => 'PHION-MIB::RaidEventSeverity',
  raidEventTime => '1.3.6.1.4.1.10704.1.5.1.3',
  raidEventText => '1.3.6.1.4.1.10704.1.5.1.4',
  vpnTunnels => '1.3.6.1.4.1.10704.1.6',
  vpnTunnelsTable => '1.3.6.1.4.1.10704.1.6.1',
  vpnTunnelsEntry => '1.3.6.1.4.1.10704.1.6.1',
  vpnName => '1.3.6.1.4.1.10704.1.6.1.1',
  vpnState => '1.3.6.1.4.1.10704.1.6.1.2',
  vpnStateDefinition => 'PHION-MIB::VpnStates',
  bgpNeighbors => '1.3.6.1.4.1.10704.1.7',
  bgpNeighborsTable => '1.3.6.1.4.1.10704.1.7.1',
  bgpNeighborsEntry => '1.3.6.1.4.1.10704.1.7.1',
  bgpNeighborAddress => '1.3.6.1.4.1.10704.1.7.1.1',
  bgpNeighborState => '1.3.6.1.4.1.10704.1.7.1.2',
  ospfNeighbors => '1.3.6.1.4.1.10704.1.8',
  ospfNeighborsTable => '1.3.6.1.4.1.10704.1.8.1',
  ospfNeighborsEntry => '1.3.6.1.4.1.10704.1.8.1',
  ospfNeighborId => '1.3.6.1.4.1.10704.1.8.1.1',
  ospfNeighborAddress => '1.3.6.1.4.1.10704.1.8.1.2',
  ospfNeighborInterface => '1.3.6.1.4.1.10704.1.8.1.3',
  ospfNeighborStatus => '1.3.6.1.4.1.10704.1.8.1.4',
  ripNeighbors => '1.3.6.1.4.1.10704.1.9',
  ripNeighborsTable => '1.3.6.1.4.1.10704.1.9.1',
  ripNeighborsEntry => '1.3.6.1.4.1.10704.1.9.1',
  ripNeighborAddress => '1.3.6.1.4.1.10704.1.9.1.1',
  ripNeighborState => '1.3.6.1.4.1.10704.1.9.1.2',
  fwStats => '1.3.6.1.4.1.10704.1.10',
  fwStatsTable => '1.3.6.1.4.1.10704.1.10.1',
  fwStatsEntry => '1.3.6.1.4.1.10704.1.10.1',
  firewallSessions => '1.3.6.1.4.1.10704.1.10.1.1',
  packetThroughput => '1.3.6.1.4.1.10704.1.10.1.2',
  dataThroughput => '1.3.6.1.4.1.10704.1.10.1.3',
  firewallSessions64 => '1.3.6.1.4.1.10704.1.10.1.4',
  packetThroughput64 => '1.3.6.1.4.1.10704.1.10.1.5',
  dataThroughput64 => '1.3.6.1.4.1.10704.1.10.1.6',
  vpnUsers => '1.3.6.1.4.1.10704.1.11',
  trafficShape => '1.3.6.1.4.1.10704.1.12',
  trafficShapeTable => '1.3.6.1.4.1.10704.1.12.1',
  trafficShapeEntry => '1.3.6.1.4.1.10704.1.12.1',
  connectorName => '1.3.6.1.4.1.10704.1.12.1.1',
  rate => '1.3.6.1.4.1.10704.1.12.1.2',
  sessions => '1.3.6.1.4.1.10704.1.12.1.3',
  class1Total => '1.3.6.1.4.1.10704.1.12.1.4',
  class1Pakets => '1.3.6.1.4.1.10704.1.12.1.5',
  class1Drop => '1.3.6.1.4.1.10704.1.12.1.6',
  class2Total => '1.3.6.1.4.1.10704.1.12.1.7',
  class2Pakets => '1.3.6.1.4.1.10704.1.12.1.8',
  class2Drop => '1.3.6.1.4.1.10704.1.12.1.9',
  class3Total => '1.3.6.1.4.1.10704.1.12.1.10',
  class3Pakets => '1.3.6.1.4.1.10704.1.12.1.11',
  class3Drop => '1.3.6.1.4.1.10704.1.12.1.12',
  noDelayTotal => '1.3.6.1.4.1.10704.1.12.1.13',
  noDelayPakets => '1.3.6.1.4.1.10704.1.12.1.14',
  noDelayDrop => '1.3.6.1.4.1.10704.1.12.1.15',
  diskSpace => '1.3.6.1.4.1.10704.1.13',
  diskSpaceTable => '1.3.6.1.4.1.10704.1.13.1',
  diskSpaceEntry => '1.3.6.1.4.1.10704.1.13.1',
  partitionName => '1.3.6.1.4.1.10704.1.13.1.1',
  partitionMaxSpace => '1.3.6.1.4.1.10704.1.13.1.2',
  partitionFreeSpace => '1.3.6.1.4.1.10704.1.13.1.3',
  partitionUsedSpace => '1.3.6.1.4.1.10704.1.13.1.4',
  partitionUsedSpacePercent => '1.3.6.1.4.1.10704.1.13.1.5',
  event => '1.3.6.1.4.1.10704.10',
  eventID => '1.3.6.1.4.1.10704.10.1',
  eventIDDescription => '1.3.6.1.4.1.10704.10.2',
  eventType => '1.3.6.1.4.1.10704.10.3',
  eventAlarmTime => '1.3.6.1.4.1.10704.10.4',
  eventLayerDescription => '1.3.6.1.4.1.10704.10.5',
  eventClassification => '1.3.6.1.4.1.10704.10.6',
  eventRepresentation => '1.3.6.1.4.1.10704.10.7',
  eventSeverity => '1.3.6.1.4.1.10704.10.8',
  fwCompliances => '1.3.6.1.4.1.10704.20',
  fwGroups => '1.3.6.1.4.1.10704.21',
  serviceGroups => '1.3.6.1.4.1.10704.21.1',
  firmwareGroups => '1.3.6.1.4.1.10704.21.2',
  hwGroups => '1.3.6.1.4.1.10704.21.3',
  netGroups => '1.3.6.1.4.1.10704.21.4',
  eventGroups => '1.3.6.1.4.1.10704.21.5',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'PHION-MIB'} = {
  RaidEventSeverity => {
    '0' => 'unknown',
    '1' => 'error',
    '2' => 'warning',
    '3' => 'information',
    '4' => 'debug',
  },
  ServiceState => {
    '0' => 'stopped',
    '1' => 'started',
    '2' => 'blocked',
    '4' => 'removed',
  },
  VpnStates => {
    '0' => 'down-disabled',
    '1' => 'active',
  },
  SensorType => {
    '0' => 'voltage',
    '1' => 'fan',
    '2' => 'temperature',
    '3' => 'psu-status',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::PROXYMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'PROXY-MIB'} = {
  url => '',
  name => 'PROXY-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'PROXY-MIB'} = {
  'proxyMemUsage' => '1.3.6.1.3.25.17.1.1.0',
  'proxyStorage' => '1.3.6.1.3.25.17.1.2.0',
  'proxyCpuUsage' => '1.3.6.1.3.25.17.1.3.0',
  'proxyUpTime' => '1.3.6.1.3.25.17.1.4.0',
  'proxyConfig' => '1.3.6.1.3.25.17.2',
  'proxyAdmin' => '1.3.6.1.3.25.17.2.1.0',
  'proxySoftware' => '1.3.6.1.3.25.17.2.2.0',
  'proxyVersion' => '1.3.6.1.3.25.17.2.3.0',
  'proxySysPerf' => '1.3.6.1.3.25.17.3.1',
  'proxyCpuLoad' => '1.3.6.1.3.25.17.3.1.1.0',
  'proxyNumObjects' => '1.3.6.1.3.25.17.3.1.2.0',
  'proxyProtoPerf' => '1.3.6.1.3.25.17.3.2',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::RAPIDCITYMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'RAPID-CITY-MIB'} = {
  url => '',
  name => 'RAPID-CITY-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'RAPID-CITY-MIB'} = 
  '1.3.6.1.4.1.2272';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'RAPID-CITY-MIB'} = {
  'rcSysCpuUtil' => '1.3.6.1.4.1.2272.1.1.20',
  'rcSysDramSize' => '1.3.6.1.4.1.2272.1.1.46',
  'rcSysDramUsed' => '1.3.6.1.4.1.2272.1.1.47',
  'rcSysDramFree' => '1.3.6.1.4.1.2272.1.1.48',
  'rcChasSerialNumber' => '1.3.6.1.4.1.2272.1.4.2',
  'rcChasHardwareRevision' => '1.3.6.1.4.1.2272.1.4.3',
  'rcChasNumSlots' => '1.3.6.1.4.1.2272.1.4.4',
  'rcChasNumPorts' => '1.3.6.1.4.1.2272.1.4.5',
  'rcChasTestResult' => '1.3.6.1.4.1.2272.1.4.6',
  'rcChasTestResultDefinition' => {
    '1' => 'other',
    '2' => 'ok',
    '3' => 'crceeprom',
    '4' => 'timer',
    '5' => 'procdram',
    '6' => 'led',
    '7' => 'formaccpuaccess',
    '8' => 'asiccpuaccess',
    '9' => 'memory',
    '10' => 'loopback',
  },
  'rcChasFan' => '1.3.6.1.4.1.2272.1.4.7',
  'rcChasFanTable' => '1.3.6.1.4.1.2272.1.4.7.1',
  'rcChasFanEntry' => '1.3.6.1.4.1.2272.1.4.7.1.1',
  'rcChasFanId' => '1.3.6.1.4.1.2272.1.4.7.1.1.1',
  'rcChasFanOperStatus' => '1.3.6.1.4.1.2272.1.4.7.1.1.2',
  'rcChasFanOperStatusDefinition' => {
    '1' => 'unknown',
    '2' => 'up',
    '3' => 'down',
  },
  'rcChasFanAmbientTemperature' => '1.3.6.1.4.1.2272.1.4.7.1.1.3',
  'rcChasPowerSupply' => '1.3.6.1.4.1.2272.1.4.8',
  'rcChasPowerSupplyTable' => '1.3.6.1.4.1.2272.1.4.8.1',
  'rcChasPowerSupplyEntry' => '1.3.6.1.4.1.2272.1.4.8.1.1',
  'rcChasPowerSupplyId' => '1.3.6.1.4.1.2272.1.4.8.1.1.1',
  'rcChasPowerSupplyOperStatus' => '1.3.6.1.4.1.2272.1.4.8.1.1.2',
  'rcChasPowerSupplyOperStatusDefinition' => {
    '1' => 'unknown',
    '2' => 'empty',
    '3' => 'up',
    '4' => 'down',
  },
  'rcChasPowerSupplyDetailTable' => '1.3.6.1.4.1.2272.1.4.8.2',
  'rcChasPowerSupplyDetailEntry' => '1.3.6.1.4.1.2272.1.4.8.2.1',
  'rcChasPowerSupplyDetailId' => '1.3.6.1.4.1.2272.1.4.8.2.1.1',
  'rcChasPowerSupplyDetailType' => '1.3.6.1.4.1.2272.1.4.8.2.1.2',
  'rcChasPowerSupplyDetailTypeDefinition' => {
    '0' => 'unknown',
    '1' => 'ac',
    '2' => 'dc',
  },
  'rcChasPowerSupplyDetailSerialNumber' => '1.3.6.1.4.1.2272.1.4.8.2.1.3',
  'rcChasPowerSupplyDetailHardwareRevision' => '1.3.6.1.4.1.2272.1.4.8.2.1.4',
  'rcChasPowerSupplyDetailPartNumber' => '1.3.6.1.4.1.2272.1.4.8.2.1.5',
  'rcChasPowerSupplyDetailDescription' => '1.3.6.1.4.1.2272.1.4.8.2.1.6',
  'rc2kChassisPortOperStatus' => '1.3.6.1.4.1.2272.1.100.1.1.0',
  'rc2kChassisTemperature' => '1.3.6.1.4.1.2272.1.100.1.2.0',
  'rc2kChassisAmbientLowerTemperature' => '1.3.6.1.4.1.2272.1.100.1.3.0',
  'rc2kChassisAmbientUpperTemperature' => '1.3.6.1.4.1.2272.1.100.1.4.0',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::RESOURCEMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'RESOURCE-MIB'} = {
  url => '',
  name => 'RESOURCE-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'RESOURCE-MIB'} = {
  'cpuIndex' => '1.3.6.1.4.1.3417.2.8.1.1.0',
  'cpuName' => '1.3.6.1.4.1.3417.2.8.1.2.0',
  'cpuUtilizationValue' => '1.3.6.1.4.1.3417.2.8.1.3.0',
  'cpuWarningThreshold' => '1.3.6.1.4.1.3417.2.8.1.4.0',
  'cpuWarningInterval' => '1.3.6.1.4.1.3417.2.8.1.5.0',
  'cpuCriticalThreshold' => '1.3.6.1.4.1.3417.2.8.1.6.0',
  'cpuCriticalInterval' => '1.3.6.1.4.1.3417.2.8.1.7.0',
  'cpuNotificationType' => '1.3.6.1.4.1.3417.2.8.1.8.0',
  'cpuCurrentState' => '1.3.6.1.4.1.3417.2.8.1.9.0',
  'cpuPreviousState' => '1.3.6.1.4.1.3417.2.8.1.10.0',
  'cpuLastChangeTime' => '1.3.6.1.4.1.3417.2.8.1.11.0',
  'cpuEvent' => '1.3.6.1.4.1.3417.2.8.1.12',
  'cpuTrap' => '1.3.6.1.4.1.3417.2.8.1.12.1',
  'memory' => '1.3.6.1.4.1.3417.2.8.2',
  'memIndex' => '1.3.6.1.4.1.3417.2.8.2.1.0',
  'memName' => '1.3.6.1.4.1.3417.2.8.2.2.0',
  'memPressureValue' => '1.3.6.1.4.1.3417.2.8.2.3.0',
  'memWarningThreshold' => '1.3.6.1.4.1.3417.2.8.2.4.0',
  'memWarningInterval' => '1.3.6.1.4.1.3417.2.8.2.5.0',
  'memCriticalThreshold' => '1.3.6.1.4.1.3417.2.8.2.6.0',
  'memCriticalInterval' => '1.3.6.1.4.1.3417.2.8.2.7.0',
  'memNotificationType' => '1.3.6.1.4.1.3417.2.8.2.8.0',
  'memCurrentState' => '1.3.6.1.4.1.3417.2.8.2.9.0',
  'memPreviousState' => '1.3.6.1.4.1.3417.2.8.2.10.0',
  'memLastChangeTime' => '1.3.6.1.4.1.3417.2.8.2.11.0',
  'memEvent' => '1.3.6.1.4.1.3417.2.8.2.12',
  'memTrap' => '1.3.6.1.4.1.3417.2.8.2.12.1',
  'network' => '1.3.6.1.4.1.3417.2.8.3',
  'netTable' => '1.3.6.1.4.1.3417.2.8.3.1',
  'netEntry' => '1.3.6.1.4.1.3417.2.8.3.1.1',
  'netIndex' => '1.3.6.1.4.1.3417.2.8.3.1.1.1',
  'netName' => '1.3.6.1.4.1.3417.2.8.3.1.1.2',
  'netUtilizationValue' => '1.3.6.1.4.1.3417.2.8.3.1.1.3',
  'netWarningThreshold' => '1.3.6.1.4.1.3417.2.8.3.1.1.4',
  'netWarningInterval' => '1.3.6.1.4.1.3417.2.8.3.1.1.5',
  'netCriticalThreshold' => '1.3.6.1.4.1.3417.2.8.3.1.1.6',
  'netCriticalInterval' => '1.3.6.1.4.1.3417.2.8.3.1.1.7',
  'netNotificationType' => '1.3.6.1.4.1.3417.2.8.3.1.1.8',
  'netCurrentState' => '1.3.6.1.4.1.3417.2.8.3.1.1.9',
  'netPreviousState' => '1.3.6.1.4.1.3417.2.8.3.1.1.10',
  'netLastChangeTime' => '1.3.6.1.4.1.3417.2.8.3.1.1.11',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::RMONMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'RMON-MIB'} = {
  url => 'https://www.ietf.org/rfc/rfc1271.txt',
  name => 'RMON-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'RMON-MIB'} =
    '1.3.6.1.2.1.16';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'RMON-MIB'} = {
  rmon => '1.3.6.1.2.1.16',
  rmonEventsV2 => '1.3.6.1.2.1.16.0',
  statistics => '1.3.6.1.2.1.16.1',
  etherStatsTable => '1.3.6.1.2.1.16.1.1',
  etherStatsEntry => '1.3.6.1.2.1.16.1.1.1',
  etherStatsIndex => '1.3.6.1.2.1.16.1.1.1.1',
  etherStatsDataSource => '1.3.6.1.2.1.16.1.1.1.2',
  etherStatsDropEvents => '1.3.6.1.2.1.16.1.1.1.3',
  etherStatsOctets => '1.3.6.1.2.1.16.1.1.1.4',
  etherStatsPkts => '1.3.6.1.2.1.16.1.1.1.5',
  etherStatsBroadcastPkts => '1.3.6.1.2.1.16.1.1.1.6',
  etherStatsMulticastPkts => '1.3.6.1.2.1.16.1.1.1.7',
  etherStatsCRCAlignErrors => '1.3.6.1.2.1.16.1.1.1.8',
  etherStatsUndersizePkts => '1.3.6.1.2.1.16.1.1.1.9',
  etherStatsOversizePkts => '1.3.6.1.2.1.16.1.1.1.10',
  etherStatsFragments => '1.3.6.1.2.1.16.1.1.1.11',
  etherStatsJabbers => '1.3.6.1.2.1.16.1.1.1.12',
  etherStatsCollisions => '1.3.6.1.2.1.16.1.1.1.13',
  etherStatsPkts64Octets => '1.3.6.1.2.1.16.1.1.1.14',
  etherStatsPkts65to127Octets => '1.3.6.1.2.1.16.1.1.1.15',
  etherStatsPkts128to255Octets => '1.3.6.1.2.1.16.1.1.1.16',
  etherStatsPkts256to511Octets => '1.3.6.1.2.1.16.1.1.1.17',
  etherStatsPkts512to1023Octets => '1.3.6.1.2.1.16.1.1.1.18',
  etherStatsPkts1024to1518Octets => '1.3.6.1.2.1.16.1.1.1.19',
  etherStatsOwner => '1.3.6.1.2.1.16.1.1.1.20',
  etherStatsStatus => '1.3.6.1.2.1.16.1.1.1.21',
  etherStatsStatusDefinition => 'RMON-MIB::EntryStatus',
  history => '1.3.6.1.2.1.16.2',
  historyControlTable => '1.3.6.1.2.1.16.2.1',
  historyControlEntry => '1.3.6.1.2.1.16.2.1.1',
  historyControlIndex => '1.3.6.1.2.1.16.2.1.1.1',
  historyControlDataSource => '1.3.6.1.2.1.16.2.1.1.2',
  historyControlBucketsRequested => '1.3.6.1.2.1.16.2.1.1.3',
  historyControlBucketsGranted => '1.3.6.1.2.1.16.2.1.1.4',
  historyControlInterval => '1.3.6.1.2.1.16.2.1.1.5',
  historyControlOwner => '1.3.6.1.2.1.16.2.1.1.6',
  historyControlStatus => '1.3.6.1.2.1.16.2.1.1.7',
  historyControlStatusDefinition => 'RMON-MIB::EntryStatus',
  etherHistoryTable => '1.3.6.1.2.1.16.2.2',
  etherHistoryEntry => '1.3.6.1.2.1.16.2.2.1',
  etherHistoryIndex => '1.3.6.1.2.1.16.2.2.1.1',
  etherHistorySampleIndex => '1.3.6.1.2.1.16.2.2.1.2',
  etherHistoryIntervalStart => '1.3.6.1.2.1.16.2.2.1.3',
  etherHistoryDropEvents => '1.3.6.1.2.1.16.2.2.1.4',
  etherHistoryOctets => '1.3.6.1.2.1.16.2.2.1.5',
  etherHistoryPkts => '1.3.6.1.2.1.16.2.2.1.6',
  etherHistoryBroadcastPkts => '1.3.6.1.2.1.16.2.2.1.7',
  etherHistoryMulticastPkts => '1.3.6.1.2.1.16.2.2.1.8',
  etherHistoryCRCAlignErrors => '1.3.6.1.2.1.16.2.2.1.9',
  etherHistoryUndersizePkts => '1.3.6.1.2.1.16.2.2.1.10',
  etherHistoryOversizePkts => '1.3.6.1.2.1.16.2.2.1.11',
  etherHistoryFragments => '1.3.6.1.2.1.16.2.2.1.12',
  etherHistoryJabbers => '1.3.6.1.2.1.16.2.2.1.13',
  etherHistoryCollisions => '1.3.6.1.2.1.16.2.2.1.14',
  etherHistoryUtilization => '1.3.6.1.2.1.16.2.2.1.15',
  alarm => '1.3.6.1.2.1.16.3',
  alarmTable => '1.3.6.1.2.1.16.3.1',
  alarmEntry => '1.3.6.1.2.1.16.3.1.1',
  alarmIndex => '1.3.6.1.2.1.16.3.1.1.1',
  alarmInterval => '1.3.6.1.2.1.16.3.1.1.2',
  alarmVariable => '1.3.6.1.2.1.16.3.1.1.3',
  alarmSampleType => '1.3.6.1.2.1.16.3.1.1.4',
  alarmSampleTypeDefinition => 'RMON-MIB::alarmSampleType',
  alarmValue => '1.3.6.1.2.1.16.3.1.1.5',
  alarmStartupAlarm => '1.3.6.1.2.1.16.3.1.1.6',
  alarmStartupAlarmDefinition => 'RMON-MIB::alarmStartupAlarm',
  alarmRisingThreshold => '1.3.6.1.2.1.16.3.1.1.7',
  alarmFallingThreshold => '1.3.6.1.2.1.16.3.1.1.8',
  alarmRisingEventIndex => '1.3.6.1.2.1.16.3.1.1.9',
  alarmFallingEventIndex => '1.3.6.1.2.1.16.3.1.1.10',
  alarmOwner => '1.3.6.1.2.1.16.3.1.1.11',
  alarmStatus => '1.3.6.1.2.1.16.3.1.1.12',
  alarmStatusDefinition => 'RMON-MIB::EntryStatus',
  hosts => '1.3.6.1.2.1.16.4',
  hostControlTable => '1.3.6.1.2.1.16.4.1',
  hostControlEntry => '1.3.6.1.2.1.16.4.1.1',
  hostControlIndex => '1.3.6.1.2.1.16.4.1.1.1',
  hostControlDataSource => '1.3.6.1.2.1.16.4.1.1.2',
  hostControlTableSize => '1.3.6.1.2.1.16.4.1.1.3',
  hostControlLastDeleteTime => '1.3.6.1.2.1.16.4.1.1.4',
  hostControlOwner => '1.3.6.1.2.1.16.4.1.1.5',
  hostControlStatus => '1.3.6.1.2.1.16.4.1.1.6',
  hostControlStatusDefinition => 'RMON-MIB::EntryStatus',
  hostTable => '1.3.6.1.2.1.16.4.2',
  hostEntry => '1.3.6.1.2.1.16.4.2.1',
  hostAddress => '1.3.6.1.2.1.16.4.2.1.1',
  hostCreationOrder => '1.3.6.1.2.1.16.4.2.1.2',
  hostIndex => '1.3.6.1.2.1.16.4.2.1.3',
  hostInPkts => '1.3.6.1.2.1.16.4.2.1.4',
  hostOutPkts => '1.3.6.1.2.1.16.4.2.1.5',
  hostInOctets => '1.3.6.1.2.1.16.4.2.1.6',
  hostOutOctets => '1.3.6.1.2.1.16.4.2.1.7',
  hostOutErrors => '1.3.6.1.2.1.16.4.2.1.8',
  hostOutBroadcastPkts => '1.3.6.1.2.1.16.4.2.1.9',
  hostOutMulticastPkts => '1.3.6.1.2.1.16.4.2.1.10',
  hostTimeTable => '1.3.6.1.2.1.16.4.3',
  hostTimeEntry => '1.3.6.1.2.1.16.4.3.1',
  hostTimeAddress => '1.3.6.1.2.1.16.4.3.1.1',
  hostTimeCreationOrder => '1.3.6.1.2.1.16.4.3.1.2',
  hostTimeIndex => '1.3.6.1.2.1.16.4.3.1.3',
  hostTimeInPkts => '1.3.6.1.2.1.16.4.3.1.4',
  hostTimeOutPkts => '1.3.6.1.2.1.16.4.3.1.5',
  hostTimeInOctets => '1.3.6.1.2.1.16.4.3.1.6',
  hostTimeOutOctets => '1.3.6.1.2.1.16.4.3.1.7',
  hostTimeOutErrors => '1.3.6.1.2.1.16.4.3.1.8',
  hostTimeOutBroadcastPkts => '1.3.6.1.2.1.16.4.3.1.9',
  hostTimeOutMulticastPkts => '1.3.6.1.2.1.16.4.3.1.10',
  hostTopN => '1.3.6.1.2.1.16.5',
  hostTopNControlTable => '1.3.6.1.2.1.16.5.1',
  hostTopNControlEntry => '1.3.6.1.2.1.16.5.1.1',
  hostTopNControlIndex => '1.3.6.1.2.1.16.5.1.1.1',
  hostTopNHostIndex => '1.3.6.1.2.1.16.5.1.1.2',
  hostTopNRateBase => '1.3.6.1.2.1.16.5.1.1.3',
  hostTopNRateBaseDefinition => 'RMON-MIB::hostTopNRateBase',
  hostTopNTimeRemaining => '1.3.6.1.2.1.16.5.1.1.4',
  hostTopNDuration => '1.3.6.1.2.1.16.5.1.1.5',
  hostTopNRequestedSize => '1.3.6.1.2.1.16.5.1.1.6',
  hostTopNGrantedSize => '1.3.6.1.2.1.16.5.1.1.7',
  hostTopNStartTime => '1.3.6.1.2.1.16.5.1.1.8',
  hostTopNOwner => '1.3.6.1.2.1.16.5.1.1.9',
  hostTopNStatus => '1.3.6.1.2.1.16.5.1.1.10',
  hostTopNStatusDefinition => 'RMON-MIB::EntryStatus',
  hostTopNTable => '1.3.6.1.2.1.16.5.2',
  hostTopNEntry => '1.3.6.1.2.1.16.5.2.1',
  hostTopNReport => '1.3.6.1.2.1.16.5.2.1.1',
  hostTopNIndex => '1.3.6.1.2.1.16.5.2.1.2',
  hostTopNAddress => '1.3.6.1.2.1.16.5.2.1.3',
  hostTopNRate => '1.3.6.1.2.1.16.5.2.1.4',
  matrix => '1.3.6.1.2.1.16.6',
  matrixControlTable => '1.3.6.1.2.1.16.6.1',
  matrixControlEntry => '1.3.6.1.2.1.16.6.1.1',
  matrixControlIndex => '1.3.6.1.2.1.16.6.1.1.1',
  matrixControlDataSource => '1.3.6.1.2.1.16.6.1.1.2',
  matrixControlTableSize => '1.3.6.1.2.1.16.6.1.1.3',
  matrixControlLastDeleteTime => '1.3.6.1.2.1.16.6.1.1.4',
  matrixControlOwner => '1.3.6.1.2.1.16.6.1.1.5',
  matrixControlStatus => '1.3.6.1.2.1.16.6.1.1.6',
  matrixControlStatusDefinition => 'RMON-MIB::EntryStatus',
  matrixSDTable => '1.3.6.1.2.1.16.6.2',
  matrixSDEntry => '1.3.6.1.2.1.16.6.2.1',
  matrixSDSourceAddress => '1.3.6.1.2.1.16.6.2.1.1',
  matrixSDDestAddress => '1.3.6.1.2.1.16.6.2.1.2',
  matrixSDIndex => '1.3.6.1.2.1.16.6.2.1.3',
  matrixSDPkts => '1.3.6.1.2.1.16.6.2.1.4',
  matrixSDOctets => '1.3.6.1.2.1.16.6.2.1.5',
  matrixSDErrors => '1.3.6.1.2.1.16.6.2.1.6',
  matrixDSTable => '1.3.6.1.2.1.16.6.3',
  matrixDSEntry => '1.3.6.1.2.1.16.6.3.1',
  matrixDSSourceAddress => '1.3.6.1.2.1.16.6.3.1.1',
  matrixDSDestAddress => '1.3.6.1.2.1.16.6.3.1.2',
  matrixDSIndex => '1.3.6.1.2.1.16.6.3.1.3',
  matrixDSPkts => '1.3.6.1.2.1.16.6.3.1.4',
  matrixDSOctets => '1.3.6.1.2.1.16.6.3.1.5',
  matrixDSErrors => '1.3.6.1.2.1.16.6.3.1.6',
  filter => '1.3.6.1.2.1.16.7',
  filterTable => '1.3.6.1.2.1.16.7.1',
  filterEntry => '1.3.6.1.2.1.16.7.1.1',
  filterIndex => '1.3.6.1.2.1.16.7.1.1.1',
  filterChannelIndex => '1.3.6.1.2.1.16.7.1.1.2',
  filterPktDataOffset => '1.3.6.1.2.1.16.7.1.1.3',
  filterPktData => '1.3.6.1.2.1.16.7.1.1.4',
  filterPktDataMask => '1.3.6.1.2.1.16.7.1.1.5',
  filterPktDataNotMask => '1.3.6.1.2.1.16.7.1.1.6',
  filterPktStatus => '1.3.6.1.2.1.16.7.1.1.7',
  filterPktStatusMask => '1.3.6.1.2.1.16.7.1.1.8',
  filterPktStatusNotMask => '1.3.6.1.2.1.16.7.1.1.9',
  filterOwner => '1.3.6.1.2.1.16.7.1.1.10',
  filterStatus => '1.3.6.1.2.1.16.7.1.1.11',
  filterStatusDefinition => 'RMON-MIB::EntryStatus',
  channelTable => '1.3.6.1.2.1.16.7.2',
  channelEntry => '1.3.6.1.2.1.16.7.2.1',
  channelIndex => '1.3.6.1.2.1.16.7.2.1.1',
  channelIfIndex => '1.3.6.1.2.1.16.7.2.1.2',
  channelAcceptType => '1.3.6.1.2.1.16.7.2.1.3',
  channelAcceptTypeDefinition => 'RMON-MIB::channelAcceptType',
  channelDataControl => '1.3.6.1.2.1.16.7.2.1.4',
  channelDataControlDefinition => 'RMON-MIB::channelDataControl',
  channelTurnOnEventIndex => '1.3.6.1.2.1.16.7.2.1.5',
  channelTurnOffEventIndex => '1.3.6.1.2.1.16.7.2.1.6',
  channelEventIndex => '1.3.6.1.2.1.16.7.2.1.7',
  channelEventStatus => '1.3.6.1.2.1.16.7.2.1.8',
  channelEventStatusDefinition => 'RMON-MIB::channelEventStatus',
  channelMatches => '1.3.6.1.2.1.16.7.2.1.9',
  channelDescription => '1.3.6.1.2.1.16.7.2.1.10',
  channelOwner => '1.3.6.1.2.1.16.7.2.1.11',
  channelStatus => '1.3.6.1.2.1.16.7.2.1.12',
  channelStatusDefinition => 'RMON-MIB::EntryStatus',
  capture => '1.3.6.1.2.1.16.8',
  bufferControlTable => '1.3.6.1.2.1.16.8.1',
  bufferControlEntry => '1.3.6.1.2.1.16.8.1.1',
  bufferControlIndex => '1.3.6.1.2.1.16.8.1.1.1',
  bufferControlChannelIndex => '1.3.6.1.2.1.16.8.1.1.2',
  bufferControlFullStatus => '1.3.6.1.2.1.16.8.1.1.3',
  bufferControlFullStatusDefinition => 'RMON-MIB::bufferControlFullStatus',
  bufferControlFullAction => '1.3.6.1.2.1.16.8.1.1.4',
  bufferControlFullActionDefinition => 'RMON-MIB::bufferControlFullAction',
  bufferControlCaptureSliceSize => '1.3.6.1.2.1.16.8.1.1.5',
  bufferControlDownloadSliceSize => '1.3.6.1.2.1.16.8.1.1.6',
  bufferControlDownloadOffset => '1.3.6.1.2.1.16.8.1.1.7',
  bufferControlMaxOctetsRequested => '1.3.6.1.2.1.16.8.1.1.8',
  bufferControlMaxOctetsGranted => '1.3.6.1.2.1.16.8.1.1.9',
  bufferControlCapturedPackets => '1.3.6.1.2.1.16.8.1.1.10',
  bufferControlTurnOnTime => '1.3.6.1.2.1.16.8.1.1.11',
  bufferControlOwner => '1.3.6.1.2.1.16.8.1.1.12',
  bufferControlStatus => '1.3.6.1.2.1.16.8.1.1.13',
  bufferControlStatusDefinition => 'RMON-MIB::EntryStatus',
  captureBufferTable => '1.3.6.1.2.1.16.8.2',
  captureBufferEntry => '1.3.6.1.2.1.16.8.2.1',
  captureBufferControlIndex => '1.3.6.1.2.1.16.8.2.1.1',
  captureBufferIndex => '1.3.6.1.2.1.16.8.2.1.2',
  captureBufferPacketID => '1.3.6.1.2.1.16.8.2.1.3',
  captureBufferPacketData => '1.3.6.1.2.1.16.8.2.1.4',
  captureBufferPacketLength => '1.3.6.1.2.1.16.8.2.1.5',
  captureBufferPacketTime => '1.3.6.1.2.1.16.8.2.1.6',
  captureBufferPacketStatus => '1.3.6.1.2.1.16.8.2.1.7',
  event => '1.3.6.1.2.1.16.9',
  eventTable => '1.3.6.1.2.1.16.9.1',
  eventEntry => '1.3.6.1.2.1.16.9.1.1',
  eventIndex => '1.3.6.1.2.1.16.9.1.1.1',
  eventDescription => '1.3.6.1.2.1.16.9.1.1.2',
  eventType => '1.3.6.1.2.1.16.9.1.1.3',
  eventTypeDefinition => 'RMON-MIB::eventType',
  eventCommunity => '1.3.6.1.2.1.16.9.1.1.4',
  eventLastTimeSent => '1.3.6.1.2.1.16.9.1.1.5',
  eventOwner => '1.3.6.1.2.1.16.9.1.1.6',
  eventStatus => '1.3.6.1.2.1.16.9.1.1.7',
  eventStatusDefinition => 'RMON-MIB::EntryStatus',
  logTable => '1.3.6.1.2.1.16.9.2',
  logEntry => '1.3.6.1.2.1.16.9.2.1',
  logEventIndex => '1.3.6.1.2.1.16.9.2.1.1',
  logIndex => '1.3.6.1.2.1.16.9.2.1.2',
  logTime => '1.3.6.1.2.1.16.9.2.1.3',
  logDescription => '1.3.6.1.2.1.16.9.2.1.4',
  rmonConformance => '1.3.6.1.2.1.16.20',
  rmonMibModule => '1.3.6.1.2.1.16.20.8',
  rmonCompliances => '1.3.6.1.2.1.16.20.9',
  rmonGroups => '1.3.6.1.2.1.16.20.10',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'RMON-MIB'} = {
  channelDataControl => {
    '1' => 'on',
    '2' => 'off',
  },
  alarmSampleType => {
    '1' => 'absoluteValue',
    '2' => 'deltaValue',
  },
  hostTopNRateBase => {
    '1' => 'hostTopNInPkts',
    '2' => 'hostTopNOutPkts',
    '3' => 'hostTopNInOctets',
    '4' => 'hostTopNOutOctets',
    '5' => 'hostTopNOutErrors',
    '6' => 'hostTopNOutBroadcastPkts',
    '7' => 'hostTopNOutMulticastPkts',
  },
  channelEventStatus => {
    '1' => 'eventReady',
    '2' => 'eventFired',
    '3' => 'eventAlwaysReady',
  },
  bufferControlFullAction => {
    '1' => 'lockWhenFull',
    '2' => 'wrapWhenFull',
  },
  bufferControlFullStatus => {
    '1' => 'spaceAvailable',
    '2' => 'full',
  },
  eventType => {
    '1' => 'none',
    '2' => 'log',
    '3' => 'snmptrap',
    '4' => 'logandtrap',
  },
  channelAcceptType => {
    '1' => 'acceptMatched',
    '2' => 'acceptFailed',
  },
  alarmStartupAlarm => {
    '1' => 'risingAlarm',
    '2' => 'fallingAlarm',
    '3' => 'risingOrFallingAlarm',
  },
  EntryStatus => {
    '1' => 'valid',
    '2' => 'createRequest',
    '3' => 'underCreation',
    '4' => 'invalid',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::S5CHASSISMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'S5-CHASSIS-MIB'} = {
  url => '',
  name => 'S5-CHASSIS-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'S5-CHASSIS-MIB'} = 
  '1.3.6.1.4.1.45.1.6.3';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'S5-CHASSIS-MIB'} = {
  's5ChasGen' => '1.3.6.1.4.1.45.1.6.3.1',
  's5ChasType' => '1.3.6.1.4.1.45.1.6.3.1.1',
  's5ChasDescr' => '1.3.6.1.4.1.45.1.6.3.1.2',
  's5ChasLocation' => '1.3.6.1.4.1.45.1.6.3.1.3',
  's5ChasContact' => '1.3.6.1.4.1.45.1.6.3.1.4',
  's5ChasVer' => '1.3.6.1.4.1.45.1.6.3.1.5',
  's5ChasSerNum' => '1.3.6.1.4.1.45.1.6.3.1.6',
  's5ChasGblPhysChngs' => '1.3.6.1.4.1.45.1.6.3.1.7',
  's5ChasGblPhysLstChng' => '1.3.6.1.4.1.45.1.6.3.1.8',
  's5ChasGblAttChngs' => '1.3.6.1.4.1.45.1.6.3.1.9',
  's5ChasGblAttLstChng' => '1.3.6.1.4.1.45.1.6.3.1.10',
  's5ChasGblConfChngs' => '1.3.6.1.4.1.45.1.6.3.1.11',
  's5ChasGblConfLstChng' => '1.3.6.1.4.1.45.1.6.3.1.12',
  's5ChasGrp' => '1.3.6.1.4.1.45.1.6.3.2',
  's5ChasGrpTable' => '1.3.6.1.4.1.45.1.6.3.2.1',
  's5ChasGrpEntry' => '1.3.6.1.4.1.45.1.6.3.2.1.1',
  's5ChasGrpIndx' => '1.3.6.1.4.1.45.1.6.3.2.1.1.1',
  's5ChasGrpType' => '1.3.6.1.4.1.45.1.6.3.2.1.1.2',
  's5ChasGrpDescr' => '1.3.6.1.4.1.45.1.6.3.2.1.1.3',
  's5ChasGrpMaxEnts' => '1.3.6.1.4.1.45.1.6.3.2.1.1.4',
  's5ChasGrpNumEnts' => '1.3.6.1.4.1.45.1.6.3.2.1.1.5',
  's5ChasGrpPhysChngs' => '1.3.6.1.4.1.45.1.6.3.2.1.1.6',
  's5ChasGrpPhysLstChng' => '1.3.6.1.4.1.45.1.6.3.2.1.1.7',
  's5ChasGrpEncodeFactor' => '1.3.6.1.4.1.45.1.6.3.2.1.1.8',
  's5ChasCom' => '1.3.6.1.4.1.45.1.6.3.3',
  's5ChasComTable' => '1.3.6.1.4.1.45.1.6.3.3.1',
  's5ChasComEntry' => '1.3.6.1.4.1.45.1.6.3.3.1.1',
  's5ChasComGrpIndx' => '1.3.6.1.4.1.45.1.6.3.3.1.1.1',
  's5ChasComIndx' => '1.3.6.1.4.1.45.1.6.3.3.1.1.2',
  's5ChasComSubIndx' => '1.3.6.1.4.1.45.1.6.3.3.1.1.3',
  's5ChasComType' => '1.3.6.1.4.1.45.1.6.3.3.1.1.4',
  's5ChasComDescr' => '1.3.6.1.4.1.45.1.6.3.3.1.1.5',
  's5ChasComVer' => '1.3.6.1.4.1.45.1.6.3.3.1.1.6',
  's5ChasComSerNum' => '1.3.6.1.4.1.45.1.6.3.3.1.1.7',
  's5ChasComLstChng' => '1.3.6.1.4.1.45.1.6.3.3.1.1.8',
  's5ChasComAdminState' => '1.3.6.1.4.1.45.1.6.3.3.1.1.9',
  's5ChasComAdminStateDefinition' => {
    '1' => 'other',
    '2' => 'notAvail',
    '3' => 'disable',
    '4' => 'enable',
    '5' => 'reset',
    '6' => 'test',
  },
  's5ChasComOperState' => '1.3.6.1.4.1.45.1.6.3.3.1.1.10',
  's5ChasComOperStateDefinition' => {
    '1' => 'other',
    '2' => 'notAvail',
    '3' => 'removed',
    '4' => 'disabled',
    '5' => 'normal',
    '6' => 'resetInProg',
    '7' => 'testing',
    '8' => 'warning',
    '9' => 'nonFatalErr',
    '10' => 'fatalErr',
    '11' => 'notConfig',
    '12' => 'obsoleted',
  },
  's5ChasComMaxSubs' => '1.3.6.1.4.1.45.1.6.3.3.1.1.11',
  's5ChasComNumSubs' => '1.3.6.1.4.1.45.1.6.3.3.1.1.12',
  's5ChasComRelPos' => '1.3.6.1.4.1.45.1.6.3.3.1.1.13',
  's5ChasComLocation' => '1.3.6.1.4.1.45.1.6.3.3.1.1.14',
  's5ChasComGroupMap' => '1.3.6.1.4.1.45.1.6.3.3.1.1.15',
  's5ChasComBaseNumPorts' => '1.3.6.1.4.1.45.1.6.3.3.1.1.16',
  's5ChasComTotalNumPorts' => '1.3.6.1.4.1.45.1.6.3.3.1.1.17',
  's5ChasComIpAddress' => '1.3.6.1.4.1.45.1.6.3.3.1.1.18',
  's5ChasBrd' => '1.3.6.1.4.1.45.1.6.3.4',
  's5ChasBrdTable' => '1.3.6.1.4.1.45.1.6.3.4.1',
  's5ChasBrdEntry' => '1.3.6.1.4.1.45.1.6.3.4.1.1',
  's5ChasBrdIndx' => '1.3.6.1.4.1.45.1.6.3.4.1.1.1',
  's5ChasBrdLeds' => '1.3.6.1.4.1.45.1.6.3.4.1.1.2',
  's5ChasBrdNumAtt' => '1.3.6.1.4.1.45.1.6.3.4.1.1.3',
  's5ChasBrdAttChngs' => '1.3.6.1.4.1.45.1.6.3.4.1.1.4',
  's5ChasBrdAttLstChng' => '1.3.6.1.4.1.45.1.6.3.4.1.1.5',
  's5ChasBrdStatusDsply' => '1.3.6.1.4.1.45.1.6.3.4.1.1.6',
  's5ChasBrdDateCode' => '1.3.6.1.4.1.45.1.6.3.4.1.1.7',
  's5ChasBrdCfgSrc' => '1.3.6.1.4.1.45.1.6.3.4.1.1.8',
  's5ChasBrdCfgSrcDefinition' => {
    '1' => 'other',
    '2' => 'dfltJmpr',
    '3' => 'prmMem',
    '4' => 'brdCfg',
    '5' => 'sm',
    '6' => 'smDfltJmpr',
    '7' => 'smPrmMem',
    '8' => 'smBrdCfg',
  },
  's5ChasBrdCfgChngs' => '1.3.6.1.4.1.45.1.6.3.4.1.1.9',
  's5ChasAttTable' => '1.3.6.1.4.1.45.1.6.3.4.2',
  's5ChasAttEntry' => '1.3.6.1.4.1.45.1.6.3.4.2.1',
  's5ChasAttBrdIndx' => '1.3.6.1.4.1.45.1.6.3.4.2.1.1',
  's5ChasAttIndx' => '1.3.6.1.4.1.45.1.6.3.4.2.1.2',
  's5ChasAttDfltAtt' => '1.3.6.1.4.1.45.1.6.3.4.2.1.3',
  's5ChasAttCurAtt' => '1.3.6.1.4.1.45.1.6.3.4.2.1.4',
  's5ChasAttChngs' => '1.3.6.1.4.1.45.1.6.3.4.2.1.5',
  's5ChasAttLstChng' => '1.3.6.1.4.1.45.1.6.3.4.2.1.6',
  's5ChasAttClusterConnCapability' => '1.3.6.1.4.1.45.1.6.3.4.2.1.7',
  's5ChasLocChanTable' => '1.3.6.1.4.1.45.1.6.3.4.3',
  's5ChasLocChanEntry' => '1.3.6.1.4.1.45.1.6.3.4.3.1',
  's5ChasLocChanBrdIndx' => '1.3.6.1.4.1.45.1.6.3.4.3.1.1',
  's5ChasLocChanIndx' => '1.3.6.1.4.1.45.1.6.3.4.3.1.2',
  's5ChasLocChanBkplMode' => '1.3.6.1.4.1.45.1.6.3.4.3.1.3',
  's5ChasLocChanBkplModeDefinition' => {
    '1' => 'other',
    '2' => 'connected',
    '3' => 'notConnected',
  },
  's5ChasStore' => '1.3.6.1.4.1.45.1.6.3.5',
  's5ChasStoreTable' => '1.3.6.1.4.1.45.1.6.3.5.1',
  's5ChasStoreEntry' => '1.3.6.1.4.1.45.1.6.3.5.1.1',
  's5ChasStoreGrpIndx' => '1.3.6.1.4.1.45.1.6.3.5.1.1.1',
  's5ChasStoreComIndx' => '1.3.6.1.4.1.45.1.6.3.5.1.1.2',
  's5ChasStoreSubIndx' => '1.3.6.1.4.1.45.1.6.3.5.1.1.3',
  's5ChasStoreIndx' => '1.3.6.1.4.1.45.1.6.3.5.1.1.4',
  's5ChasStoreType' => '1.3.6.1.4.1.45.1.6.3.5.1.1.5',
  's5ChasStoreCurSize' => '1.3.6.1.4.1.45.1.6.3.5.1.1.6',
  's5ChasStoreCntntVer' => '1.3.6.1.4.1.45.1.6.3.5.1.1.7',
  's5ChasStoreFilename' => '1.3.6.1.4.1.45.1.6.3.5.1.1.8',
  's5ChasSm' => '1.3.6.1.4.1.45.1.6.3.6',
  's5ChasSmLeds' => '1.3.6.1.4.1.45.1.6.3.6.1',
  's5ChasSmDateCode' => '1.3.6.1.4.1.45.1.6.3.6.2',
  's5ChasTmpSnr' => '1.3.6.1.4.1.45.1.6.3.7',
  's5ChasTmpSnrTable' => '1.3.6.1.4.1.45.1.6.3.7.1',
  's5ChasTmpSnrEntry' => '1.3.6.1.4.1.45.1.6.3.7.1.1',
  's5ChasTmpSnrGrpIndx' => '1.3.6.1.4.1.45.1.6.3.7.1.1.1',
  's5ChasTmpSnrIndx' => '1.3.6.1.4.1.45.1.6.3.7.1.1.2',
  's5ChasTmpSnrSubIndx' => '1.3.6.1.4.1.45.1.6.3.7.1.1.3',
  's5ChasTmpSnrValue' => '1.3.6.1.4.1.45.1.6.3.7.1.1.4',
  's5ChasTmpSnrTmpValue' => '1.3.6.1.4.1.45.1.6.3.7.1.1.5',
  's5ChasUtil' => '1.3.6.1.4.1.45.1.6.3.8',
  's5ChasUtilTable' => '1.3.6.1.4.1.45.1.6.3.8.1',
  's5ChasUtilEntry' => '1.3.6.1.4.1.45.1.6.3.8.1.1',
  's5ChasUtilGrpIndx' => '1.3.6.1.4.1.45.1.6.3.8.1.1.1',
  's5ChasUtilIndx' => '1.3.6.1.4.1.45.1.6.3.8.1.1.2',
  's5ChasUtilSubIndx' => '1.3.6.1.4.1.45.1.6.3.8.1.1.3',
  's5ChasUtilTotalCPUUsage' => '1.3.6.1.4.1.45.1.6.3.8.1.1.4',
  's5ChasUtilCPUUsageLast1Minute' => '1.3.6.1.4.1.45.1.6.3.8.1.1.5',
  's5ChasUtilCPUUsageLast10Minutes' => '1.3.6.1.4.1.45.1.6.3.8.1.1.6',
  's5ChasUtilCPUUsageLast1Hour' => '1.3.6.1.4.1.45.1.6.3.8.1.1.7',
  's5ChasUtilCPUUsageLast24Hours' => '1.3.6.1.4.1.45.1.6.3.8.1.1.8',
  's5ChasUtilMemoryAvailable' => '1.3.6.1.4.1.45.1.6.3.8.1.1.9',
  's5ChasUtilMemoryMinAvailable' => '1.3.6.1.4.1.45.1.6.3.8.1.1.10',
  's5ChasUtilCPUUsageLast10Seconds' => '1.3.6.1.4.1.45.1.6.3.8.1.1.11',
  's5ChasUtilMemoryTotalMB' => '1.3.6.1.4.1.45.1.6.3.8.1.1.12',
  's5ChasUtilMemoryAvailableMB' => '1.3.6.1.4.1.45.1.6.3.8.1.1.13',
  's5ChasPs' => '1.3.6.1.4.1.45.1.6.3.9',
  's5ChasPsRpsuTable' => '1.3.6.1.4.1.45.1.6.3.9.1',
  's5ChasPsRpsuEntry' => '1.3.6.1.4.1.45.1.6.3.9.1.1',
  's5ChasPsRpsuGrpIndx' => '1.3.6.1.4.1.45.1.6.3.9.1.1.1',
  's5ChasPsRpsuIndx' => '1.3.6.1.4.1.45.1.6.3.9.1.1.2',
  's5ChasPsRpsuSubIndx' => '1.3.6.1.4.1.45.1.6.3.9.1.1.3',
  's5ChasPsRpsuType' => '1.3.6.1.4.1.45.1.6.3.9.1.1.4',
  's5ChasPsRpsuTypeDefinition' => {
    '1' => 'bayStack10',
    '2' => 'nes',
  },
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::SENSORMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'SENSOR-MIB'} = {
  url => '',
  name => 'SENSOR-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'SENSOR-MIB'} = {
  'deviceSensorValueTable' => '1.3.6.1.4.1.3417.2.1.1.1.1',
  'deviceSensorValueEntry' => '1.3.6.1.4.1.3417.2.1.1.1.1.1',
  'deviceSensorIndex' => '1.3.6.1.4.1.3417.2.1.1.1.1.1.1',
  'deviceSensorTrapEnabled' => '1.3.6.1.4.1.3417.2.1.1.1.1.1.2',
  'deviceSensorUnits' => '1.3.6.1.4.1.3417.2.1.1.1.1.1.3',
  'deviceSensorUnitsDefinition' => {
    '1' => 'other',
    '2' => 'truthvalue',
    '3' => 'specialEnum',
    '4' => 'volts',
    '5' => 'celsius',
    '6' => 'rpm',
  },
  'deviceSensorScale' => '1.3.6.1.4.1.3417.2.1.1.1.1.1.4',
  'deviceSensorValue' => '1.3.6.1.4.1.3417.2.1.1.1.1.1.5',
  'deviceSensorCode' => '1.3.6.1.4.1.3417.2.1.1.1.1.1.6',
  'deviceSensorCodeDefinition' => {
    '1' => 'ok',
    '2' => 'unknown',
    '3' => 'not-installed',
    '4' => 'voltage-low-warning',
    '5' => 'voltage-low-critical',
    '6' => 'no-power',
    '7' => 'voltage-high-warning',
    '8' => 'voltage-high-critical',
    '9' => 'voltage-high-severe',
    '10' => 'temperature-high-warning',
    '11' => 'temperature-high-critical',
    '12' => 'temperature-high-severe',
    '13' => 'fan-slow-warning',
    '14' => 'fan-slow-critical',
    '15' => 'fan-stopped',
  },
  'deviceSensorStatus' => '1.3.6.1.4.1.3417.2.1.1.1.1.1.7',
  'deviceSensorStatusDefinition' => {
    '1' => 'ok',
    '2' => 'unavailable',
    '3' => 'nonoperational',
  },
  'deviceSensorTimeStamp' => '1.3.6.1.4.1.3417.2.1.1.1.1.1.8',
  'deviceSensorName' => '1.3.6.1.4.1.3417.2.1.1.1.1.1.9',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::SNMPV2TCV1MIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'SNMPv2-TC-v1-MIB'} = {
  url => '',
  name => 'SNMPv2-TC-v1-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'SNMPv2-TC-v1-MIB'} = {
  'TruthValue' => {
    1 => 'true',
    2 => 'false',
  },
  'RowStatus' => {
    1 => 'active',
    2 => 'notInService',
    3 => 'notReady',
    4 => 'createAndGo',
    5 => 'createAndWait',
    6 => 'destroy',
  },
};



package Monitoring::GLPlugin::SNMP::MibsAndOids::STATISTICSMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'STATISTICS-MIB'} = {
  url => '',
  name => 'STATISTICS-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'STATISTICS-MIB'} = {
  'hpSwitchCpuStat' => '1.3.6.1.4.1.11.2.14.11.5.1.9.6.1.0',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::STEELHEADMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'STEELHEAD-MIB'} = {
  url => '',
  name => 'STEELHEAD-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'STEELHEAD-MIB'} =
    '1.3.6.1.4.1.17163.1.1';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'STEELHEAD-MIB'} = {
  steelhead => '1.3.6.1.4.1.17163.1.1',
  system => '1.3.6.1.4.1.17163.1.1.1',
  model => '1.3.6.1.4.1.17163.1.1.1.1',
  serialNumber => '1.3.6.1.4.1.17163.1.1.1.2',
  systemVersion => '1.3.6.1.4.1.17163.1.1.1.3',
  status => '1.3.6.1.4.1.17163.1.1.2',
  systemClock => '1.3.6.1.4.1.17163.1.1.2.1',
  health => '1.3.6.1.4.1.17163.1.1.2.2',
  serviceStatus => '1.3.6.1.4.1.17163.1.1.2.3',
  serviceUptime => '1.3.6.1.4.1.17163.1.1.2.4',
  procTable => '1.3.6.1.4.1.17163.1.1.2.5',
  procEntry => '1.3.6.1.4.1.17163.1.1.2.5.1',
  procIndex => '1.3.6.1.4.1.17163.1.1.2.5.1.1',
  procName => '1.3.6.1.4.1.17163.1.1.2.5.1.2',
  procStatus => '1.3.6.1.4.1.17163.1.1.2.5.1.3',
  procNumFailures => '1.3.6.1.4.1.17163.1.1.2.5.1.4',
  peerStatus => '1.3.6.1.4.1.17163.1.1.2.6',
  peerTable => '1.3.6.1.4.1.17163.1.1.2.6.1',
  peerEntry => '1.3.6.1.4.1.17163.1.1.2.6.1.1',
  peerIndex => '1.3.6.1.4.1.17163.1.1.2.6.1.1.1',
  peerHostname => '1.3.6.1.4.1.17163.1.1.2.6.1.1.2',
  peerVersion => '1.3.6.1.4.1.17163.1.1.2.6.1.1.3',
  peerAddress => '1.3.6.1.4.1.17163.1.1.2.6.1.1.4',
  peerModel => '1.3.6.1.4.1.17163.1.1.2.6.1.1.5',
  systemHealth => '1.3.6.1.4.1.17163.1.1.2.7',
  systemHealthDefinition => 'STEELHEAD-MIB::systemHealth',
  optServiceStatus => '1.3.6.1.4.1.17163.1.1.2.8',
  optServiceStatusDefinition => 'STEELHEAD-MIB::optServiceStatus',
  systemTemperature => '1.3.6.1.4.1.17163.1.1.2.9',
  healthNotes => '1.3.6.1.4.1.17163.1.1.2.10',
  crlStatus => '1.3.6.1.4.1.17163.1.1.2.11',
  crlTable => '1.3.6.1.4.1.17163.1.1.2.11.1',
  crlEntry => '1.3.6.1.4.1.17163.1.1.2.11.1.1',
  crlIndex => '1.3.6.1.4.1.17163.1.1.2.11.1.1.1',
  crlFeatureName => '1.3.6.1.4.1.17163.1.1.2.11.1.1.2',
  crlNumCdpErr => '1.3.6.1.4.1.17163.1.1.2.11.1.1.3',
  crlErrMsg => '1.3.6.1.4.1.17163.1.1.2.11.1.1.4',
  neighborStatus => '1.3.6.1.4.1.17163.1.1.2.12',
  neighborTable => '1.3.6.1.4.1.17163.1.1.2.12.1',
  neighborEntry => '1.3.6.1.4.1.17163.1.1.2.12.1.1',
  neighborIndex => '1.3.6.1.4.1.17163.1.1.2.12.1.1.1',
  neighborAddress => '1.3.6.1.4.1.17163.1.1.2.12.1.1.2',
  neighborState => '1.3.6.1.4.1.17163.1.1.2.12.1.1.3',
  neighborNatReqSent => '1.3.6.1.4.1.17163.1.1.2.12.1.1.4',
  neighborNatDelSent => '1.3.6.1.4.1.17163.1.1.2.12.1.1.5',
  neighborNatAckRcvd => '1.3.6.1.4.1.17163.1.1.2.12.1.1.6',
  neighborNatReqRcvd => '1.3.6.1.4.1.17163.1.1.2.12.1.1.7',
  neighborNatDelRcvd => '1.3.6.1.4.1.17163.1.1.2.12.1.1.8',
  neighborNatAckSent => '1.3.6.1.4.1.17163.1.1.2.12.1.1.9',
  neighborDynReqSent => '1.3.6.1.4.1.17163.1.1.2.12.1.1.10',
  neighborDynDelSent => '1.3.6.1.4.1.17163.1.1.2.12.1.1.11',
  neighborDynAckRcvd => '1.3.6.1.4.1.17163.1.1.2.12.1.1.12',
  neighborDynReqRcvd => '1.3.6.1.4.1.17163.1.1.2.12.1.1.13',
  neighborDynDelRcvd => '1.3.6.1.4.1.17163.1.1.2.12.1.1.14',
  neighborDynAckSent => '1.3.6.1.4.1.17163.1.1.2.12.1.1.15',
  neighborRedirReqSent => '1.3.6.1.4.1.17163.1.1.2.12.1.1.16',
  neighborRedirDelSent => '1.3.6.1.4.1.17163.1.1.2.12.1.1.17',
  neighborRedirAckRcvd => '1.3.6.1.4.1.17163.1.1.2.12.1.1.18',
  neighborRedirReqRcvd => '1.3.6.1.4.1.17163.1.1.2.12.1.1.19',
  neighborRedirDelRcvd => '1.3.6.1.4.1.17163.1.1.2.12.1.1.20',
  neighborRedirAckSent => '1.3.6.1.4.1.17163.1.1.2.12.1.1.21',
  neighborConnFailures => '1.3.6.1.4.1.17163.1.1.2.12.1.1.22',
  neighborKeepaliveTimeouts => '1.3.6.1.4.1.17163.1.1.2.12.1.1.23',
  neighborRequestTimeouts => '1.3.6.1.4.1.17163.1.1.2.12.1.1.24',
  neighborMaxLatency => '1.3.6.1.4.1.17163.1.1.2.12.1.1.25',
  neighborAggregates => '1.3.6.1.4.1.17163.1.1.2.12.2',
  nghAggrConfigured => '1.3.6.1.4.1.17163.1.1.2.12.2.1',
  nghAggrConnected => '1.3.6.1.4.1.17163.1.1.2.12.2.2',
  nghAggrConnFailures => '1.3.6.1.4.1.17163.1.1.2.12.2.3',
  nghAggrKeepaliveTimouts => '1.3.6.1.4.1.17163.1.1.2.12.2.4',
  nghAggrRequestTimeouts => '1.3.6.1.4.1.17163.1.1.2.12.2.5',
  nghAggrMaxLatency => '1.3.6.1.4.1.17163.1.1.2.12.2.6',
  nghAggrNatReqSent => '1.3.6.1.4.1.17163.1.1.2.12.2.7',
  nghAggrNatDelSent => '1.3.6.1.4.1.17163.1.1.2.12.2.8',
  nghAggrNatAckRcvd => '1.3.6.1.4.1.17163.1.1.2.12.2.9',
  nghAggrNatReqRcvd => '1.3.6.1.4.1.17163.1.1.2.12.2.10',
  nghAggrNatDelRcvd => '1.3.6.1.4.1.17163.1.1.2.12.2.11',
  nghAggrNatAckSent => '1.3.6.1.4.1.17163.1.1.2.12.2.12',
  nghAggrDynReqSent => '1.3.6.1.4.1.17163.1.1.2.12.2.13',
  nghAggrDynDelSent => '1.3.6.1.4.1.17163.1.1.2.12.2.14',
  nghAggrDynAckRcvd => '1.3.6.1.4.1.17163.1.1.2.12.2.15',
  nghAggrDynReqRcvd => '1.3.6.1.4.1.17163.1.1.2.12.2.16',
  nghAggrDynDelRcvd => '1.3.6.1.4.1.17163.1.1.2.12.2.17',
  nghAggrDynAckSent => '1.3.6.1.4.1.17163.1.1.2.12.2.18',
  nghAggrRedirReqSent => '1.3.6.1.4.1.17163.1.1.2.12.2.19',
  nghAggrRedirDelSent => '1.3.6.1.4.1.17163.1.1.2.12.2.20',
  nghAggrRedirAckRcvd => '1.3.6.1.4.1.17163.1.1.2.12.2.21',
  nghAggrRedirReqRcvd => '1.3.6.1.4.1.17163.1.1.2.12.2.22',
  nghAggrRedirDelRcvd => '1.3.6.1.4.1.17163.1.1.2.12.2.23',
  nghAggrRedirAckSent => '1.3.6.1.4.1.17163.1.1.2.12.2.24',
  config => '1.3.6.1.4.1.17163.1.1.3',
  activeConfig => '1.3.6.1.4.1.17163.1.1.3.1',
  inpath => '1.3.6.1.4.1.17163.1.1.3.2',
  inpathSupport => '1.3.6.1.4.1.17163.1.1.3.2.1',
  outofpath => '1.3.6.1.4.1.17163.1.1.3.3',
  outofpathSupport => '1.3.6.1.4.1.17163.1.1.3.3.1',
  datastoreSync => '1.3.6.1.4.1.17163.1.1.3.4',
  datastoreSyncPort => '1.3.6.1.4.1.17163.1.1.3.4.1',
  datastoreSyncAddr => '1.3.6.1.4.1.17163.1.1.3.4.2',
  alarms => '1.3.6.1.4.1.17163.1.1.4',
  alarmsPrefix => '1.3.6.1.4.1.17163.1.1.4.0',
  statistics => '1.3.6.1.4.1.17163.1.1.5',
  cpuLoad => '1.3.6.1.4.1.17163.1.1.5.1',
  cpuLoad1 => '1.3.6.1.4.1.17163.1.1.5.1.1',
  cpuLoad5 => '1.3.6.1.4.1.17163.1.1.5.1.2',
  cpuLoad15 => '1.3.6.1.4.1.17163.1.1.5.1.3',
  cpuUtil1 => '1.3.6.1.4.1.17163.1.1.5.1.4',
  cpuIndivUtilTable => '1.3.6.1.4.1.17163.1.1.5.1.5',
  cpuIndivUtilEntry => '1.3.6.1.4.1.17163.1.1.5.1.5.1',
  cpuIndivIndex => '1.3.6.1.4.1.17163.1.1.5.1.5.1.1',
  cpuIndivId => '1.3.6.1.4.1.17163.1.1.5.1.5.1.2',
  cpuIndivIdleTime => '1.3.6.1.4.1.17163.1.1.5.1.5.1.3',
  cpuIndivSystemTime => '1.3.6.1.4.1.17163.1.1.5.1.5.1.4',
  cpuIndivUserTime => '1.3.6.1.4.1.17163.1.1.5.1.5.1.5',
  connectionCounts => '1.3.6.1.4.1.17163.1.1.5.2',
  optimizedConnections => '1.3.6.1.4.1.17163.1.1.5.2.1',
  passthroughConnections => '1.3.6.1.4.1.17163.1.1.5.2.2',
  halfOpenedConnections => '1.3.6.1.4.1.17163.1.1.5.2.3',
  halfClosedConnections => '1.3.6.1.4.1.17163.1.1.5.2.4',
  establishedConnections => '1.3.6.1.4.1.17163.1.1.5.2.5',
  activeConnections => '1.3.6.1.4.1.17163.1.1.5.2.6',
  totalConnections => '1.3.6.1.4.1.17163.1.1.5.2.7',
  bandwidth => '1.3.6.1.4.1.17163.1.1.5.3',
  bandwidthAggregate => '1.3.6.1.4.1.17163.1.1.5.3.1',
  bwAggInLan => '1.3.6.1.4.1.17163.1.1.5.3.1.1',
  bwAggInWan => '1.3.6.1.4.1.17163.1.1.5.3.1.2',
  bwAggOutLan => '1.3.6.1.4.1.17163.1.1.5.3.1.3',
  bwAggOutWan => '1.3.6.1.4.1.17163.1.1.5.3.1.4',
  bandwidthPerPort => '1.3.6.1.4.1.17163.1.1.5.3.2',
  bwPortTable => '1.3.6.1.4.1.17163.1.1.5.3.2.1',
  bwPortEntry => '1.3.6.1.4.1.17163.1.1.5.3.2.1.1',
  bwPortNumber => '1.3.6.1.4.1.17163.1.1.5.3.2.1.1.1',
  bwPortInLan => '1.3.6.1.4.1.17163.1.1.5.3.2.1.1.2',
  bwPortInWan => '1.3.6.1.4.1.17163.1.1.5.3.2.1.1.3',
  bwPortOutLan => '1.3.6.1.4.1.17163.1.1.5.3.2.1.1.4',
  bwPortOutWan => '1.3.6.1.4.1.17163.1.1.5.3.2.1.1.5',
  bandwidthPassThrough => '1.3.6.1.4.1.17163.1.1.5.3.3',
  bwPassThroughIn => '1.3.6.1.4.1.17163.1.1.5.3.3.1',
  bwPassThroughOut => '1.3.6.1.4.1.17163.1.1.5.3.3.2',
  bwPassThroughTotal => '1.3.6.1.4.1.17163.1.1.5.3.3.3',
  datastore => '1.3.6.1.4.1.17163.1.1.5.4',
  dsHitsTotal => '1.3.6.1.4.1.17163.1.1.5.4.1',
  dsMissTotal => '1.3.6.1.4.1.17163.1.1.5.4.2',
  dsCostPerSegment => '1.3.6.1.4.1.17163.1.1.5.4.3',
  topTalkers => '1.3.6.1.4.1.17163.1.1.5.5',
  ttTalkersTable => '1.3.6.1.4.1.17163.1.1.5.5.1',
  ttTalkersEntry => '1.3.6.1.4.1.17163.1.1.5.5.1.1',
  ttTalkerId => '1.3.6.1.4.1.17163.1.1.5.5.1.1.1',
  ttTalkerIp1 => '1.3.6.1.4.1.17163.1.1.5.5.1.1.2',
  ttTalkerPort1 => '1.3.6.1.4.1.17163.1.1.5.5.1.1.3',
  ttTalkerIp2 => '1.3.6.1.4.1.17163.1.1.5.5.1.1.4',
  ttTalkerPort2 => '1.3.6.1.4.1.17163.1.1.5.5.1.1.5',
  ttTalkerByteCount => '1.3.6.1.4.1.17163.1.1.5.5.1.1.6',
  ttSrcHostTable => '1.3.6.1.4.1.17163.1.1.5.5.2',
  ttSrcHostEntry => '1.3.6.1.4.1.17163.1.1.5.5.2.1',
  ttSrcHostId => '1.3.6.1.4.1.17163.1.1.5.5.2.1.1',
  ttSrcHostIp => '1.3.6.1.4.1.17163.1.1.5.5.2.1.2',
  ttSrcHostByteCount => '1.3.6.1.4.1.17163.1.1.5.5.2.1.3',
  ttDestHostTable => '1.3.6.1.4.1.17163.1.1.5.5.3',
  ttDestHostEntry => '1.3.6.1.4.1.17163.1.1.5.5.3.1',
  ttDestHostId => '1.3.6.1.4.1.17163.1.1.5.5.3.1.1',
  ttDestHostIp => '1.3.6.1.4.1.17163.1.1.5.5.3.1.2',
  ttDestHostByteCount => '1.3.6.1.4.1.17163.1.1.5.5.3.1.3',
  ttAppPortTable => '1.3.6.1.4.1.17163.1.1.5.5.4',
  ttAppPortEntry => '1.3.6.1.4.1.17163.1.1.5.5.4.1',
  ttAppPortId => '1.3.6.1.4.1.17163.1.1.5.5.4.1.1',
  ttAppPort => '1.3.6.1.4.1.17163.1.1.5.5.4.1.2',
  ttAppPortByteCount => '1.3.6.1.4.1.17163.1.1.5.5.4.1.3',
  bandwidthHC => '1.3.6.1.4.1.17163.1.1.5.6',
  bandwidthHCAggregate => '1.3.6.1.4.1.17163.1.1.5.6.1',
  bwHCAggInLan => '1.3.6.1.4.1.17163.1.1.5.6.1.1',
  bwHCAggInWan => '1.3.6.1.4.1.17163.1.1.5.6.1.2',
  bwHCAggOutLan => '1.3.6.1.4.1.17163.1.1.5.6.1.3',
  bwAggHCOutWan => '1.3.6.1.4.1.17163.1.1.5.6.1.4',
  bandwidthHCPerPort => '1.3.6.1.4.1.17163.1.1.5.6.2',
  bwHCPortTable => '1.3.6.1.4.1.17163.1.1.5.6.2.1',
  bwHCPortEntry => '1.3.6.1.4.1.17163.1.1.5.6.2.1.1',
  bwHCPortNumber => '1.3.6.1.4.1.17163.1.1.5.6.2.1.1.1',
  bwHCPortInLan => '1.3.6.1.4.1.17163.1.1.5.6.2.1.1.2',
  bwHCPortInWan => '1.3.6.1.4.1.17163.1.1.5.6.2.1.1.3',
  bwHCPortOutLan => '1.3.6.1.4.1.17163.1.1.5.6.2.1.1.4',
  bwHCPortOutWan => '1.3.6.1.4.1.17163.1.1.5.6.2.1.1.5',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'STEELHEAD-MIB'} = {
  systemHealth => {
    '10000' => 'healthy',
    '30000' => 'degraded',
    '31000' => 'admissionControl',
    '50000' => 'critical',
  },
  optServiceStatus => {
    '0' => 'none',
    '1' => 'unmanaged',
    '2' => 'running',
    '3' => 'sentCom1',
    '4' => 'sentTerm1',
    '5' => 'sentTerm2',
    '6' => 'sentTerm3',
    '7' => 'pending',
    '8' => 'stopped',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::STEELHEADEXMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'STEELHEAD-EX-MIB'} = {
  url => '',
  name => 'STEELHEAD-EX-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'STEELHEAD-EX-MIB'} =
    '1.3.6.1.4.1.17163.1.51';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'STEELHEAD-EX-MIB'} = {
  'steelhead-ex' => '1.3.6.1.4.1.17163.1.51',
  'system' => '1.3.6.1.4.1.17163.1.51.1',
  'model' => '1.3.6.1.4.1.17163.1.51.1.1',
  'serialNumber' => '1.3.6.1.4.1.17163.1.51.1.2',
  'systemVersion' => '1.3.6.1.4.1.17163.1.51.1.3',
  'status' => '1.3.6.1.4.1.17163.1.51.2',
  'systemClock' => '1.3.6.1.4.1.17163.1.51.2.1',
  'health' => '1.3.6.1.4.1.17163.1.51.2.2',
  'serviceStatus' => '1.3.6.1.4.1.17163.1.51.2.3',
  'serviceUptime' => '1.3.6.1.4.1.17163.1.51.2.4',
  'procTable' => '1.3.6.1.4.1.17163.1.51.2.5',
  'procEntry' => '1.3.6.1.4.1.17163.1.51.2.5.1',
  'procIndex' => '1.3.6.1.4.1.17163.1.51.2.5.1.1',
  'procName' => '1.3.6.1.4.1.17163.1.51.2.5.1.2',
  'procStatus' => '1.3.6.1.4.1.17163.1.51.2.5.1.3',
  'procNumFailures' => '1.3.6.1.4.1.17163.1.51.2.5.1.4',
  'peerStatus' => '1.3.6.1.4.1.17163.1.51.2.6',
  'peerTable' => '1.3.6.1.4.1.17163.1.51.2.6.1',
  'peerEntry' => '1.3.6.1.4.1.17163.1.51.2.6.1.1',
  'peerIndex' => '1.3.6.1.4.1.17163.1.51.2.6.1.1.1',
  'peerHostname' => '1.3.6.1.4.1.17163.1.51.2.6.1.1.2',
  'peerVersion' => '1.3.6.1.4.1.17163.1.51.2.6.1.1.3',
  'peerAddress' => '1.3.6.1.4.1.17163.1.51.2.6.1.1.4',
  'peerModel' => '1.3.6.1.4.1.17163.1.51.2.6.1.1.5',
  'systemHealth' => '1.3.6.1.4.1.17163.1.51.2.7',
  'systemHealthDefinition' => 'STEELHEAD-EX-MIB::systemHealth',
  'optServiceStatus' => '1.3.6.1.4.1.17163.1.51.2.8',
  'optServiceStatusDefinition' => 'STEELHEAD-EX-MIB::optServiceStatus',
  'systemTemperature' => '1.3.6.1.4.1.17163.1.51.2.9',
  'healthNotes' => '1.3.6.1.4.1.17163.1.51.2.10',
  'crlStatus' => '1.3.6.1.4.1.17163.1.51.2.11',
  'crlTable' => '1.3.6.1.4.1.17163.1.51.2.11.1',
  'crlEntry' => '1.3.6.1.4.1.17163.1.51.2.11.1.1',
  'crlIndex' => '1.3.6.1.4.1.17163.1.51.2.11.1.1.1',
  'crlFeatureName' => '1.3.6.1.4.1.17163.1.51.2.11.1.1.2',
  'crlNumCdpErr' => '1.3.6.1.4.1.17163.1.51.2.11.1.1.3',
  'crlErrMsg' => '1.3.6.1.4.1.17163.1.51.2.11.1.1.4',
  'neighborStatus' => '1.3.6.1.4.1.17163.1.51.2.12',
  'neighborTable' => '1.3.6.1.4.1.17163.1.51.2.12.1',
  'neighborEntry' => '1.3.6.1.4.1.17163.1.51.2.12.1.1',
  'neighborIndex' => '1.3.6.1.4.1.17163.1.51.2.12.1.1.1',
  'neighborAddress' => '1.3.6.1.4.1.17163.1.51.2.12.1.1.2',
  'neighborState' => '1.3.6.1.4.1.17163.1.51.2.12.1.1.3',
  'neighborNatReqSent' => '1.3.6.1.4.1.17163.1.51.2.12.1.1.4',
  'neighborNatDelSent' => '1.3.6.1.4.1.17163.1.51.2.12.1.1.5',
  'neighborNatAckRcvd' => '1.3.6.1.4.1.17163.1.51.2.12.1.1.6',
  'neighborNatReqRcvd' => '1.3.6.1.4.1.17163.1.51.2.12.1.1.7',
  'neighborNatDelRcvd' => '1.3.6.1.4.1.17163.1.51.2.12.1.1.8',
  'neighborNatAckSent' => '1.3.6.1.4.1.17163.1.51.2.12.1.1.9',
  'neighborDynReqSent' => '1.3.6.1.4.1.17163.1.51.2.12.1.1.10',
  'neighborDynDelSent' => '1.3.6.1.4.1.17163.1.51.2.12.1.1.11',
  'neighborDynAckRcvd' => '1.3.6.1.4.1.17163.1.51.2.12.1.1.12',
  'neighborDynReqRcvd' => '1.3.6.1.4.1.17163.1.51.2.12.1.1.13',
  'neighborDynDelRcvd' => '1.3.6.1.4.1.17163.1.51.2.12.1.1.14',
  'neighborDynAckSent' => '1.3.6.1.4.1.17163.1.51.2.12.1.1.15',
  'neighborRedirReqSent' => '1.3.6.1.4.1.17163.1.51.2.12.1.1.16',
  'neighborRedirDelSent' => '1.3.6.1.4.1.17163.1.51.2.12.1.1.17',
  'neighborRedirAckRcvd' => '1.3.6.1.4.1.17163.1.51.2.12.1.1.18',
  'neighborRedirReqRcvd' => '1.3.6.1.4.1.17163.1.51.2.12.1.1.19',
  'neighborRedirDelRcvd' => '1.3.6.1.4.1.17163.1.51.2.12.1.1.20',
  'neighborRedirAckSent' => '1.3.6.1.4.1.17163.1.51.2.12.1.1.21',
  'neighborConnFailures' => '1.3.6.1.4.1.17163.1.51.2.12.1.1.22',
  'neighborKeepaliveTimeouts' => '1.3.6.1.4.1.17163.1.51.2.12.1.1.23',
  'neighborRequestTimeouts' => '1.3.6.1.4.1.17163.1.51.2.12.1.1.24',
  'neighborMaxLatency' => '1.3.6.1.4.1.17163.1.51.2.12.1.1.25',
  'neighborAggregates' => '1.3.6.1.4.1.17163.1.51.2.12.2',
  'nghAggrConfigured' => '1.3.6.1.4.1.17163.1.51.2.12.2.1',
  'nghAggrConnected' => '1.3.6.1.4.1.17163.1.51.2.12.2.2',
  'nghAggrConnFailures' => '1.3.6.1.4.1.17163.1.51.2.12.2.3',
  'nghAggrKeepaliveTimouts' => '1.3.6.1.4.1.17163.1.51.2.12.2.4',
  'nghAggrRequestTimeouts' => '1.3.6.1.4.1.17163.1.51.2.12.2.5',
  'nghAggrMaxLatency' => '1.3.6.1.4.1.17163.1.51.2.12.2.6',
  'nghAggrNatReqSent' => '1.3.6.1.4.1.17163.1.51.2.12.2.7',
  'nghAggrNatDelSent' => '1.3.6.1.4.1.17163.1.51.2.12.2.8',
  'nghAggrNatAckRcvd' => '1.3.6.1.4.1.17163.1.51.2.12.2.9',
  'nghAggrNatReqRcvd' => '1.3.6.1.4.1.17163.1.51.2.12.2.10',
  'nghAggrNatDelRcvd' => '1.3.6.1.4.1.17163.1.51.2.12.2.11',
  'nghAggrNatAckSent' => '1.3.6.1.4.1.17163.1.51.2.12.2.12',
  'nghAggrDynReqSent' => '1.3.6.1.4.1.17163.1.51.2.12.2.13',
  'nghAggrDynDelSent' => '1.3.6.1.4.1.17163.1.51.2.12.2.14',
  'nghAggrDynAckRcvd' => '1.3.6.1.4.1.17163.1.51.2.12.2.15',
  'nghAggrDynReqRcvd' => '1.3.6.1.4.1.17163.1.51.2.12.2.16',
  'nghAggrDynDelRcvd' => '1.3.6.1.4.1.17163.1.51.2.12.2.17',
  'nghAggrDynAckSent' => '1.3.6.1.4.1.17163.1.51.2.12.2.18',
  'nghAggrRedirReqSent' => '1.3.6.1.4.1.17163.1.51.2.12.2.19',
  'nghAggrRedirDelSent' => '1.3.6.1.4.1.17163.1.51.2.12.2.20',
  'nghAggrRedirAckRcvd' => '1.3.6.1.4.1.17163.1.51.2.12.2.21',
  'nghAggrRedirReqRcvd' => '1.3.6.1.4.1.17163.1.51.2.12.2.22',
  'nghAggrRedirDelRcvd' => '1.3.6.1.4.1.17163.1.51.2.12.2.23',
  'nghAggrRedirAckSent' => '1.3.6.1.4.1.17163.1.51.2.12.2.24',
  'capabilityStatus' => '1.3.6.1.4.1.17163.1.51.2.13',
  'shMaxConnections' => '1.3.6.1.4.1.17163.1.51.2.13.1',
  'shMaxBandwidth' => '1.3.6.1.4.1.17163.1.51.2.13.2',
  'asymRouteCount' => '1.3.6.1.4.1.17163.1.51.2.14',
  'config' => '1.3.6.1.4.1.17163.1.51.3',
  'activeConfig' => '1.3.6.1.4.1.17163.1.51.3.1',
  'inpath' => '1.3.6.1.4.1.17163.1.51.3.2',
  'inpathSupport' => '1.3.6.1.4.1.17163.1.51.3.2.1',
  'outofpath' => '1.3.6.1.4.1.17163.1.51.3.3',
  'outofpathSupport' => '1.3.6.1.4.1.17163.1.51.3.3.1',
  'datastoreSync' => '1.3.6.1.4.1.17163.1.51.3.4',
  'datastoreSyncPort' => '1.3.6.1.4.1.17163.1.51.3.4.1',
  'datastoreSyncAddr' => '1.3.6.1.4.1.17163.1.51.3.4.2',
  'alarms' => '1.3.6.1.4.1.17163.1.51.4',
  'alarmsPrefix' => '1.3.6.1.4.1.17163.1.51.4.0',
  'statistics' => '1.3.6.1.4.1.17163.1.51.5',
  'cpuLoad' => '1.3.6.1.4.1.17163.1.51.5.1',
  'cpuLoad1' => '1.3.6.1.4.1.17163.1.51.5.1.1',
  'cpuLoad5' => '1.3.6.1.4.1.17163.1.51.5.1.2',
  'cpuLoad15' => '1.3.6.1.4.1.17163.1.51.5.1.3',
  'cpuUtil1' => '1.3.6.1.4.1.17163.1.51.5.1.4',
  'cpuIndivUtilTable' => '1.3.6.1.4.1.17163.1.51.5.1.5',
  'cpuIndivUtilEntry' => '1.3.6.1.4.1.17163.1.51.5.1.5.1',
  'cpuIndivIndex' => '1.3.6.1.4.1.17163.1.51.5.1.5.1.1',
  'cpuIndivId' => '1.3.6.1.4.1.17163.1.51.5.1.5.1.2',
  'cpuIndivIdleTime' => '1.3.6.1.4.1.17163.1.51.5.1.5.1.3',
  'cpuIndivSystemTime' => '1.3.6.1.4.1.17163.1.51.5.1.5.1.4',
  'cpuIndivUserTime' => '1.3.6.1.4.1.17163.1.51.5.1.5.1.5',
  'connectionCounts' => '1.3.6.1.4.1.17163.1.51.5.2',
  'optimizedConnections' => '1.3.6.1.4.1.17163.1.51.5.2.1',
  'passthroughConnections' => '1.3.6.1.4.1.17163.1.51.5.2.2',
  'halfOpenedConnections' => '1.3.6.1.4.1.17163.1.51.5.2.3',
  'halfClosedConnections' => '1.3.6.1.4.1.17163.1.51.5.2.4',
  'establishedConnections' => '1.3.6.1.4.1.17163.1.51.5.2.5',
  'activeConnections' => '1.3.6.1.4.1.17163.1.51.5.2.6',
  'totalConnections' => '1.3.6.1.4.1.17163.1.51.5.2.7',
  'bandwidth' => '1.3.6.1.4.1.17163.1.51.5.3',
  'bandwidthAggregate' => '1.3.6.1.4.1.17163.1.51.5.3.1',
  'bwAggInLan' => '1.3.6.1.4.1.17163.1.51.5.3.1.1',
  'bwAggInWan' => '1.3.6.1.4.1.17163.1.51.5.3.1.2',
  'bwAggOutLan' => '1.3.6.1.4.1.17163.1.51.5.3.1.3',
  'bwAggOutWan' => '1.3.6.1.4.1.17163.1.51.5.3.1.4',
  'bandwidthPerPort' => '1.3.6.1.4.1.17163.1.51.5.3.2',
  'bwPortTable' => '1.3.6.1.4.1.17163.1.51.5.3.2.1',
  'bwPortEntry' => '1.3.6.1.4.1.17163.1.51.5.3.2.1.1',
  'bwPortNumber' => '1.3.6.1.4.1.17163.1.51.5.3.2.1.1.1',
  'bwPortInLan' => '1.3.6.1.4.1.17163.1.51.5.3.2.1.1.2',
  'bwPortInWan' => '1.3.6.1.4.1.17163.1.51.5.3.2.1.1.3',
  'bwPortOutLan' => '1.3.6.1.4.1.17163.1.51.5.3.2.1.1.4',
  'bwPortOutWan' => '1.3.6.1.4.1.17163.1.51.5.3.2.1.1.5',
  'bandwidthPassThrough' => '1.3.6.1.4.1.17163.1.51.5.3.3',
  'bwPassThroughIn' => '1.3.6.1.4.1.17163.1.51.5.3.3.1',
  'bwPassThroughOut' => '1.3.6.1.4.1.17163.1.51.5.3.3.2',
  'bwPassThroughTotal' => '1.3.6.1.4.1.17163.1.51.5.3.3.3',
  'datastore' => '1.3.6.1.4.1.17163.1.51.5.4',
  'dsHitsTotal' => '1.3.6.1.4.1.17163.1.51.5.4.1',
  'dsMissTotal' => '1.3.6.1.4.1.17163.1.51.5.4.2',
  'dsCostPerSegment' => '1.3.6.1.4.1.17163.1.51.5.4.3',
  'dsAveDiskUtilization' => '1.3.6.1.4.1.17163.1.51.5.4.4',
  'topTalkers' => '1.3.6.1.4.1.17163.1.51.5.5',
  'ttTalkersTable' => '1.3.6.1.4.1.17163.1.51.5.5.1',
  'ttTalkersEntry' => '1.3.6.1.4.1.17163.1.51.5.5.1.1',
  'ttTalkerId' => '1.3.6.1.4.1.17163.1.51.5.5.1.1.1',
  'ttTalkerIp1' => '1.3.6.1.4.1.17163.1.51.5.5.1.1.2',
  'ttTalkerPort1' => '1.3.6.1.4.1.17163.1.51.5.5.1.1.3',
  'ttTalkerIp2' => '1.3.6.1.4.1.17163.1.51.5.5.1.1.4',
  'ttTalkerPort2' => '1.3.6.1.4.1.17163.1.51.5.5.1.1.5',
  'ttTalkerByteCount' => '1.3.6.1.4.1.17163.1.51.5.5.1.1.6',
  'ttSrcHostTable' => '1.3.6.1.4.1.17163.1.51.5.5.2',
  'ttSrcHostEntry' => '1.3.6.1.4.1.17163.1.51.5.5.2.1',
  'ttSrcHostId' => '1.3.6.1.4.1.17163.1.51.5.5.2.1.1',
  'ttSrcHostIp' => '1.3.6.1.4.1.17163.1.51.5.5.2.1.2',
  'ttSrcHostByteCount' => '1.3.6.1.4.1.17163.1.51.5.5.2.1.3',
  'ttDestHostTable' => '1.3.6.1.4.1.17163.1.51.5.5.3',
  'ttDestHostEntry' => '1.3.6.1.4.1.17163.1.51.5.5.3.1',
  'ttDestHostId' => '1.3.6.1.4.1.17163.1.51.5.5.3.1.1',
  'ttDestHostIp' => '1.3.6.1.4.1.17163.1.51.5.5.3.1.2',
  'ttDestHostByteCount' => '1.3.6.1.4.1.17163.1.51.5.5.3.1.3',
  'ttAppPortTable' => '1.3.6.1.4.1.17163.1.51.5.5.4',
  'ttAppPortEntry' => '1.3.6.1.4.1.17163.1.51.5.5.4.1',
  'ttAppPortId' => '1.3.6.1.4.1.17163.1.51.5.5.4.1.1',
  'ttAppPort' => '1.3.6.1.4.1.17163.1.51.5.5.4.1.2',
  'ttAppPortByteCount' => '1.3.6.1.4.1.17163.1.51.5.5.4.1.3',
  'bandwidthHC' => '1.3.6.1.4.1.17163.1.51.5.6',
  'bandwidthHCAggregate' => '1.3.6.1.4.1.17163.1.51.5.6.1',
  'bwHCAggInLan' => '1.3.6.1.4.1.17163.1.51.5.6.1.1',
  'bwHCAggInWan' => '1.3.6.1.4.1.17163.1.51.5.6.1.2',
  'bwHCAggOutLan' => '1.3.6.1.4.1.17163.1.51.5.6.1.3',
  'bwAggHCOutWan' => '1.3.6.1.4.1.17163.1.51.5.6.1.4',
  'bandwidthHCPerPort' => '1.3.6.1.4.1.17163.1.51.5.6.2',
  'bwHCPortTable' => '1.3.6.1.4.1.17163.1.51.5.6.2.1',
  'bwHCPortEntry' => '1.3.6.1.4.1.17163.1.51.5.6.2.1.1',
  'bwHCPortNumber' => '1.3.6.1.4.1.17163.1.51.5.6.2.1.1.1',
  'bwHCPortInLan' => '1.3.6.1.4.1.17163.1.51.5.6.2.1.1.2',
  'bwHCPortInWan' => '1.3.6.1.4.1.17163.1.51.5.6.2.1.1.3',
  'bwHCPortOutLan' => '1.3.6.1.4.1.17163.1.51.5.6.2.1.1.4',
  'bwHCPortOutWan' => '1.3.6.1.4.1.17163.1.51.5.6.2.1.1.5',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'STEELHEAD-EX-MIB'} = {
  optServiceStatus => {
    '0' => 'none',
    '1' => 'unmanaged',
    '2' => 'running',
    '3' => 'sentCom1',
    '4' => 'sentTerm1',
    '5' => 'sentTerm2',
    '6' => 'sentTerm3',
    '7' => 'pending',
    '8' => 'stopped',
  },
  systemHealth => {
    '10000' => 'healthy',
    '30000' => 'degraded',
    '31000' => 'admissionControl',
    '50000' => 'critical',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::SWMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'SW-MIB'} = {
  url => '',
  name => 'SW-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'SW-MIB'} =
    '1.3.6.1.4.1.1588.2.1.1.1';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'SW-MIB'} = {
  sw => '1.3.6.1.4.1.1588.2.1.1.1',
  swTrapsV2 => '1.3.6.1.4.1.1588.2.1.1.1.0',
  swSystem => '1.3.6.1.4.1.1588.2.1.1.1.1',
  swCurrentDate => '1.3.6.1.4.1.1588.2.1.1.1.1.1',
  swBootDate => '1.3.6.1.4.1.1588.2.1.1.1.1.2',
  swFWLastUpdated => '1.3.6.1.4.1.1588.2.1.1.1.1.3',
  swFlashLastUpdated => '1.3.6.1.4.1.1588.2.1.1.1.1.4',
  swBootPromLastUpdated => '1.3.6.1.4.1.1588.2.1.1.1.1.5',
  swFirmwareVersion => '1.3.6.1.4.1.1588.2.1.1.1.1.6',
  swOperStatus => '1.3.6.1.4.1.1588.2.1.1.1.1.7',
  swOperStatusDefinition => 'SW-MIB::swOperStatus',
  swAdmStatus => '1.3.6.1.4.1.1588.2.1.1.1.1.8',
  swAdmStatusDefinition => 'SW-MIB::swAdmStatus',
  swTelnetShellAdmStatus => '1.3.6.1.4.1.1588.2.1.1.1.1.9',
  swTelnetShellAdmStatusDefinition => 'SW-MIB::swTelnetShellAdmStatus',
  swSsn => '1.3.6.1.4.1.1588.2.1.1.1.1.10',
  swFlashDLOperStatus => '1.3.6.1.4.1.1588.2.1.1.1.1.11',
  swFlashDLOperStatusDefinition => 'SW-MIB::swFlashDLOperStatus',
  swFlashDLAdmStatus => '1.3.6.1.4.1.1588.2.1.1.1.1.12',
  swFlashDLAdmStatusDefinition => 'SW-MIB::swFlashDLAdmStatus',
  swFlashDLHost => '1.3.6.1.4.1.1588.2.1.1.1.1.13',
  swFlashDLUser => '1.3.6.1.4.1.1588.2.1.1.1.1.14',
  swFlashDLFile => '1.3.6.1.4.1.1588.2.1.1.1.1.15',
  swFlashDLPassword => '1.3.6.1.4.1.1588.2.1.1.1.1.16',
  swBeaconOperStatus => '1.3.6.1.4.1.1588.2.1.1.1.1.18',
  swBeaconOperStatusDefinition => 'SW-MIB::swBeaconOperStatus',
  swBeaconAdmStatus => '1.3.6.1.4.1.1588.2.1.1.1.1.19',
  swBeaconAdmStatusDefinition => 'SW-MIB::swBeaconAdmStatus',
  swDiagResult => '1.3.6.1.4.1.1588.2.1.1.1.1.20',
  swDiagResultDefinition => 'SW-MIB::swDiagResult',
  swNumSensors => '1.3.6.1.4.1.1588.2.1.1.1.1.21',
  swSensorTable => '1.3.6.1.4.1.1588.2.1.1.1.1.22',
  swSensorEntry => '1.3.6.1.4.1.1588.2.1.1.1.1.22.1',
  swSensorIndex => '1.3.6.1.4.1.1588.2.1.1.1.1.22.1.1',
  swSensorType => '1.3.6.1.4.1.1588.2.1.1.1.1.22.1.2',
  swSensorTypeDefinition => 'SW-MIB::swSensorType',
  swSensorStatus => '1.3.6.1.4.1.1588.2.1.1.1.1.22.1.3',
  swSensorStatusDefinition => 'SW-MIB::swSensorStatus',
  swSensorValue => '1.3.6.1.4.1.1588.2.1.1.1.1.22.1.4',
  swSensorInfo => '1.3.6.1.4.1.1588.2.1.1.1.1.22.1.5',
  swTrackChangesInfo => '1.3.6.1.4.1.1588.2.1.1.1.1.23',
  swID => '1.3.6.1.4.1.1588.2.1.1.1.1.24',
  swEtherIPAddress => '1.3.6.1.4.1.1588.2.1.1.1.1.25',
  swEtherIPMask => '1.3.6.1.4.1.1588.2.1.1.1.1.26',
  swFCIPAddress => '1.3.6.1.4.1.1588.2.1.1.1.1.27',
  swFCIPMask => '1.3.6.1.4.1.1588.2.1.1.1.1.28',
  swIPv6Address => '1.3.6.1.4.1.1588.2.1.1.1.1.29',
  swIPv6Status => '1.3.6.1.4.1.1588.2.1.1.1.1.30',
  swIPv6StatusDefinition => 'SW-MIB::swIPv6Status',
  swModel => '1.3.6.1.4.1.1588.2.1.1.1.1.31',
  swModelDefinition => 'SW-MIB::swModel',
  swTestString => '1.3.6.1.4.1.1588.2.1.1.1.1.32',
  swPortList => '1.3.6.1.4.1.1588.2.1.1.1.1.33',
  swBrcdTrapBitMask => '1.3.6.1.4.1.1588.2.1.1.1.1.34',
  swFCPortPrevType => '1.3.6.1.4.1.1588.2.1.1.1.1.35',
  swFCPortPrevTypeDefinition => 'SW-MIB::swFCPortPrevType',
  swDeviceStatus => '1.3.6.1.4.1.1588.2.1.1.1.1.36',
  swDeviceStatusDefinition => 'SW-MIB::swDeviceStatus',
  swFabric => '1.3.6.1.4.1.1588.2.1.1.1.2',
  swDomainID => '1.3.6.1.4.1.1588.2.1.1.1.2.1',
  swPrincipalSwitch => '1.3.6.1.4.1.1588.2.1.1.1.2.2',
  swPrincipalSwitchDefinition => 'SW-MIB::swPrincipalSwitch',
  swNumNbs => '1.3.6.1.4.1.1588.2.1.1.1.2.8',
  swNbTable => '1.3.6.1.4.1.1588.2.1.1.1.2.9',
  swNbEntry => '1.3.6.1.4.1.1588.2.1.1.1.2.9.1',
  swNbIndex => '1.3.6.1.4.1.1588.2.1.1.1.2.9.1.1',
  swNbMyPort => '1.3.6.1.4.1.1588.2.1.1.1.2.9.1.2',
  swNbRemDomain => '1.3.6.1.4.1.1588.2.1.1.1.2.9.1.3',
  swNbRemPort => '1.3.6.1.4.1.1588.2.1.1.1.2.9.1.4',
  swNbBaudRate => '1.3.6.1.4.1.1588.2.1.1.1.2.9.1.5',
  swNbBaudRateDefinition => 'SW-MIB::swNbBaudRate',
  swNbIslState => '1.3.6.1.4.1.1588.2.1.1.1.2.9.1.6',
  swNbIslStateDefinition => 'SW-MIB::swNbIslState',
  swNbIslCost => '1.3.6.1.4.1.1588.2.1.1.1.2.9.1.7',
  swNbRemPortName => '1.3.6.1.4.1.1588.2.1.1.1.2.9.1.8',
  swFabricMemTable => '1.3.6.1.4.1.1588.2.1.1.1.2.10',
  swFabricMemEntry => '1.3.6.1.4.1.1588.2.1.1.1.2.10.1',
  swFabricMemWwn => '1.3.6.1.4.1.1588.2.1.1.1.2.10.1.1',
  swFabricMemDid => '1.3.6.1.4.1.1588.2.1.1.1.2.10.1.2',
  swFabricMemName => '1.3.6.1.4.1.1588.2.1.1.1.2.10.1.3',
  swFabricMemEIP => '1.3.6.1.4.1.1588.2.1.1.1.2.10.1.4',
  swFabricMemFCIP => '1.3.6.1.4.1.1588.2.1.1.1.2.10.1.5',
  swFabricMemGWIP => '1.3.6.1.4.1.1588.2.1.1.1.2.10.1.6',
  swFabricMemType => '1.3.6.1.4.1.1588.2.1.1.1.2.10.1.7',
  swFabricMemShortVersion => '1.3.6.1.4.1.1588.2.1.1.1.2.10.1.8',
  swIDIDMode => '1.3.6.1.4.1.1588.2.1.1.1.2.11',
  swIDIDModeDefinition => 'SW-MIB::swIDIDMode',
  swPmgrEventType => '1.3.6.1.4.1.1588.2.1.1.1.2.12',
  swPmgrEventTypeDefinition => 'SW-MIB::swPmgrEventType',
  swPmgrEventTime => '1.3.6.1.4.1.1588.2.1.1.1.2.13',
  swPmgrEventDescr => '1.3.6.1.4.1.1588.2.1.1.1.2.14',
  swVfId => '1.3.6.1.4.1.1588.2.1.1.1.2.15',
  swVfName => '1.3.6.1.4.1.1588.2.1.1.1.2.16',
  swModule => '1.3.6.1.4.1.1588.2.1.1.1.3',
  swAgtCfg => '1.3.6.1.4.1.1588.2.1.1.1.4',
  swAgtCmtyTable => '1.3.6.1.4.1.1588.2.1.1.1.4.11',
  swAgtCmtyEntry => '1.3.6.1.4.1.1588.2.1.1.1.4.11.1',
  swAgtCmtyIdx => '1.3.6.1.4.1.1588.2.1.1.1.4.11.1.1',
  swAgtCmtyStr => '1.3.6.1.4.1.1588.2.1.1.1.4.11.1.2',
  swAgtTrapRcp => '1.3.6.1.4.1.1588.2.1.1.1.4.11.1.3',
  swAgtTrapSeverityLevel => '1.3.6.1.4.1.1588.2.1.1.1.4.11.1.4',
  swAgtTrapSeverityLevelDefinition => 'SW-MIB::SwSevType',
  swauthProtocolPassword => '1.3.6.1.4.1.1588.2.1.1.1.4.12',
  swprivProtocolPassword => '1.3.6.1.4.1.1588.2.1.1.1.4.13',
  swFCport => '1.3.6.1.4.1.1588.2.1.1.1.6',
  swFCPortCapacity => '1.3.6.1.4.1.1588.2.1.1.1.6.1',
  swFCPortTable => '1.3.6.1.4.1.1588.2.1.1.1.6.2',
  swFCPortEntry => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1',
  swFCPortIndex => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.1',
  swFCPortType => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.2',
  swFCPortTypeDefinition => 'SW-MIB::swFCPortType',
  swFCPortPhyState => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.3',
  swFCPortPhyStateDefinition => 'SW-MIB::swFCPortPhyState',
  swFCPortOpStatus => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.4',
  swFCPortOpStatusDefinition => 'SW-MIB::swFCPortOpStatus',
  swFCPortAdmStatus => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.5',
  swFCPortAdmStatusDefinition => 'SW-MIB::swFCPortAdmStatus',
  swFCPortLinkState => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.6',
  swFCPortLinkStateDefinition => 'SW-MIB::swFCPortLinkState',
  swFCPortTxType => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.7',
  swFCPortTxTypeDefinition => 'SW-MIB::swFCPortTxType',
  swFCPortTxWords => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.11',
  swFCPortRxWords => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.12',
  swFCPortTxFrames => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.13',
  swFCPortRxFrames => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.14',
  swFCPortRxC2Frames => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.15',
  swFCPortRxC3Frames => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.16',
  swFCPortRxLCs => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.17',
  swFCPortRxMcasts => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.18',
  swFCPortTooManyRdys => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.19',
  swFCPortNoTxCredits => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.20',
  swFCPortRxEncInFrs => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.21',
  swFCPortRxCrcs => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.22',
  swFCPortRxTruncs => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.23',
  swFCPortRxTooLongs => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.24',
  swFCPortRxBadEofs => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.25',
  swFCPortRxEncOutFrs => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.26',
  swFCPortRxBadOs => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.27',
  swFCPortC3Discards => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.28',
  swFCPortMcastTimedOuts => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.29',
  swFCPortTxMcasts => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.30',
  swFCPortLipIns => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.31',
  swFCPortLipOuts => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.32',
  swFCPortLipLastAlpa => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.33',
  swFCPortWwn => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.34',
  swFCPortSpeed => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.35',
  swFCPortSpeedDefinition => 'SW-MIB::swFCPortSpeed',
  swFCPortName => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.36',
  swFCPortSpecifier => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.37',
  swFCPortFlag => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.38',
  swFCPortBrcdType => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.39',
  swFCPortBrcdTypeDefinition => 'SW-MIB::swFCPortBrcdType',
  swFCPortDisableReason => '1.3.6.1.4.1.1588.2.1.1.1.6.2.1.40',
  swFCPortDisableReasonDefinition => 'SW-MIB::swFCPortDisableReason',
  swNs => '1.3.6.1.4.1.1588.2.1.1.1.7',
  swNsLocalNumEntry => '1.3.6.1.4.1.1588.2.1.1.1.7.1',
  swNsLocalTable => '1.3.6.1.4.1.1588.2.1.1.1.7.2',
  swNsLocalEntry => '1.3.6.1.4.1.1588.2.1.1.1.7.2.1',
  swNsEntryIndex => '1.3.6.1.4.1.1588.2.1.1.1.7.2.1.1',
  swNsPortID => '1.3.6.1.4.1.1588.2.1.1.1.7.2.1.2',
  swNsPortType => '1.3.6.1.4.1.1588.2.1.1.1.7.2.1.3',
  swNsPortTypeDefinition => 'SW-MIB::swNsPortType',
  swNsPortName => '1.3.6.1.4.1.1588.2.1.1.1.7.2.1.4',
  swNsPortSymb => '1.3.6.1.4.1.1588.2.1.1.1.7.2.1.5',
  swNsNodeName => '1.3.6.1.4.1.1588.2.1.1.1.7.2.1.6',
  swNsNodeSymb => '1.3.6.1.4.1.1588.2.1.1.1.7.2.1.7',
  swNsIPA => '1.3.6.1.4.1.1588.2.1.1.1.7.2.1.8',
  swNsIpAddress => '1.3.6.1.4.1.1588.2.1.1.1.7.2.1.9',
  swNsCos => '1.3.6.1.4.1.1588.2.1.1.1.7.2.1.10',
  swNsCosDefinition => 'SW-MIB::swNsCos',
  swNsFc4 => '1.3.6.1.4.1.1588.2.1.1.1.7.2.1.11',
  swNsIpNxPort => '1.3.6.1.4.1.1588.2.1.1.1.7.2.1.12',
  swNsWwn => '1.3.6.1.4.1.1588.2.1.1.1.7.2.1.13',
  swNsHardAddr => '1.3.6.1.4.1.1588.2.1.1.1.7.2.1.14',
  swEvent => '1.3.6.1.4.1.1588.2.1.1.1.8',
  swEventTrapLevel => '1.3.6.1.4.1.1588.2.1.1.1.8.1',
  swEventTrapLevelDefinition => 'SW-MIB::swEventTrapLevel',
  swEventNumEntries => '1.3.6.1.4.1.1588.2.1.1.1.8.4',
  swEventTable => '1.3.6.1.4.1.1588.2.1.1.1.8.5',
  swEventEntry => '1.3.6.1.4.1.1588.2.1.1.1.8.5.1',
  swEventIndex => '1.3.6.1.4.1.1588.2.1.1.1.8.5.1.1',
  swEventTimeInfo => '1.3.6.1.4.1.1588.2.1.1.1.8.5.1.2',
  swEventLevel => '1.3.6.1.4.1.1588.2.1.1.1.8.5.1.3',
  swEventLevelDefinition => 'SW-MIB::swEventLevel',
  swEventRepeatCount => '1.3.6.1.4.1.1588.2.1.1.1.8.5.1.4',
  swEventDescr => '1.3.6.1.4.1.1588.2.1.1.1.8.5.1.5',
  swEventVfId => '1.3.6.1.4.1.1588.2.1.1.1.8.5.1.6',
  swFwSystem => '1.3.6.1.4.1.1588.2.1.1.1.10',
  swFwFabricWatchLicense => '1.3.6.1.4.1.1588.2.1.1.1.10.1',
  swFwFabricWatchLicenseDefinition => 'SW-MIB::SwFwLicense',
  swFwClassAreaTable => '1.3.6.1.4.1.1588.2.1.1.1.10.2',
  swFwClassAreaEntry => '1.3.6.1.4.1.1588.2.1.1.1.10.2.1',
  swFwClassAreaIndex => '1.3.6.1.4.1.1588.2.1.1.1.10.2.1.1',
  swFwClassAreaIndexDefinition => 'SW-MIB::SwFwClassesAreas',
  swFwWriteThVals => '1.3.6.1.4.1.1588.2.1.1.1.10.2.1.2',
  swFwWriteThValsDefinition => 'SW-MIB::SwFwWriteVals',
  swFwDefaultUnit => '1.3.6.1.4.1.1588.2.1.1.1.10.2.1.3',
  swFwDefaultTimebase => '1.3.6.1.4.1.1588.2.1.1.1.10.2.1.4',
  swFwDefaultTimebaseDefinition => 'SW-MIB::SwFwTimebase',
  swFwDefaultLow => '1.3.6.1.4.1.1588.2.1.1.1.10.2.1.5',
  swFwDefaultHigh => '1.3.6.1.4.1.1588.2.1.1.1.10.2.1.6',
  swFwDefaultBufSize => '1.3.6.1.4.1.1588.2.1.1.1.10.2.1.7',
  swFwCustUnit => '1.3.6.1.4.1.1588.2.1.1.1.10.2.1.8',
  swFwCustTimebase => '1.3.6.1.4.1.1588.2.1.1.1.10.2.1.9',
  swFwCustTimebaseDefinition => 'SW-MIB::SwFwTimebase',
  swFwCustLow => '1.3.6.1.4.1.1588.2.1.1.1.10.2.1.10',
  swFwCustHigh => '1.3.6.1.4.1.1588.2.1.1.1.10.2.1.11',
  swFwCustBufSize => '1.3.6.1.4.1.1588.2.1.1.1.10.2.1.12',
  swFwThLevel => '1.3.6.1.4.1.1588.2.1.1.1.10.2.1.13',
  swFwThLevelDefinition => 'SW-MIB::SwFwLevels',
  swFwWriteActVals => '1.3.6.1.4.1.1588.2.1.1.1.10.2.1.14',
  swFwWriteActValsDefinition => 'SW-MIB::SwFwWriteVals',
  swFwDefaultChangedActs => '1.3.6.1.4.1.1588.2.1.1.1.10.2.1.15',
  swFwDefaultChangedActsDefinition => 'SW-MIB::SwFwActs',
  swFwDefaultExceededActs => '1.3.6.1.4.1.1588.2.1.1.1.10.2.1.16',
  swFwDefaultExceededActsDefinition => 'SW-MIB::SwFwActs',
  swFwDefaultBelowActs => '1.3.6.1.4.1.1588.2.1.1.1.10.2.1.17',
  swFwDefaultBelowActsDefinition => 'SW-MIB::SwFwActs',
  swFwDefaultAboveActs => '1.3.6.1.4.1.1588.2.1.1.1.10.2.1.18',
  swFwDefaultAboveActsDefinition => 'SW-MIB::SwFwActs',
  swFwDefaultInBetweenActs => '1.3.6.1.4.1.1588.2.1.1.1.10.2.1.19',
  swFwDefaultInBetweenActsDefinition => 'SW-MIB::SwFwActs',
  swFwCustChangedActs => '1.3.6.1.4.1.1588.2.1.1.1.10.2.1.20',
  swFwCustChangedActsDefinition => 'SW-MIB::SwFwActs',
  swFwCustExceededActs => '1.3.6.1.4.1.1588.2.1.1.1.10.2.1.21',
  swFwCustExceededActsDefinition => 'SW-MIB::SwFwActs',
  swFwCustBelowActs => '1.3.6.1.4.1.1588.2.1.1.1.10.2.1.22',
  swFwCustBelowActsDefinition => 'SW-MIB::SwFwActs',
  swFwCustAboveActs => '1.3.6.1.4.1.1588.2.1.1.1.10.2.1.23',
  swFwCustAboveActsDefinition => 'SW-MIB::SwFwActs',
  swFwCustInBetweenActs => '1.3.6.1.4.1.1588.2.1.1.1.10.2.1.24',
  swFwCustInBetweenActsDefinition => 'SW-MIB::SwFwActs',
  swFwValidActs => '1.3.6.1.4.1.1588.2.1.1.1.10.2.1.25',
  swFwValidActsDefinition => 'SW-MIB::SwFwActs',
  swFwActLevel => '1.3.6.1.4.1.1588.2.1.1.1.10.2.1.26',
  swFwActLevelDefinition => 'SW-MIB::SwFwLevels',
  swFwThresholdTable => '1.3.6.1.4.1.1588.2.1.1.1.10.3',
  swFwThresholdEntry => '1.3.6.1.4.1.1588.2.1.1.1.10.3.1',
  swFwThresholdIndex => '1.3.6.1.4.1.1588.2.1.1.1.10.3.1.1',
  swFwStatus => '1.3.6.1.4.1.1588.2.1.1.1.10.3.1.2',
  swFwStatusDefinition => 'SW-MIB::SwFwStatus',
  swFwName => '1.3.6.1.4.1.1588.2.1.1.1.10.3.1.3',
  swFwLabel => '1.3.6.1.4.1.1588.2.1.1.1.10.3.1.4',
  swFwCurVal => '1.3.6.1.4.1.1588.2.1.1.1.10.3.1.5',
  swFwLastEvent => '1.3.6.1.4.1.1588.2.1.1.1.10.3.1.6',
  swFwLastEventDefinition => 'SW-MIB::SwFwEvent',
  swFwLastEventVal => '1.3.6.1.4.1.1588.2.1.1.1.10.3.1.7',
  swFwLastEventTime => '1.3.6.1.4.1.1588.2.1.1.1.10.3.1.8',
  swFwLastState => '1.3.6.1.4.1.1588.2.1.1.1.10.3.1.9',
  swFwLastStateDefinition => 'SW-MIB::SwFwState',
  swFwBehaviorType => '1.3.6.1.4.1.1588.2.1.1.1.10.3.1.10',
  swFwBehaviorTypeDefinition => 'SW-MIB::SwFwBehavior',
  swFwBehaviorInt => '1.3.6.1.4.1.1588.2.1.1.1.10.3.1.11',
  swFwLastSeverityLevel => '1.3.6.1.4.1.1588.2.1.1.1.10.3.1.12',
  swFwLastSeverityLevelDefinition => 'SW-MIB::SwSevType',
  swEndDevice => '1.3.6.1.4.1.1588.2.1.1.1.21',
  swEndDeviceRlsTable => '1.3.6.1.4.1.1588.2.1.1.1.21.1',
  swEndDeviceRlsEntry => '1.3.6.1.4.1.1588.2.1.1.1.21.1.1',
  swEndDevicePort => '1.3.6.1.4.1.1588.2.1.1.1.21.1.1.1',
  swEndDeviceAlpa => '1.3.6.1.4.1.1588.2.1.1.1.21.1.1.2',
  swEndDevicePortID => '1.3.6.1.4.1.1588.2.1.1.1.21.1.1.3',
  swEndDeviceLinkFailure => '1.3.6.1.4.1.1588.2.1.1.1.21.1.1.4',
  swEndDeviceSyncLoss => '1.3.6.1.4.1.1588.2.1.1.1.21.1.1.5',
  swEndDeviceSigLoss => '1.3.6.1.4.1.1588.2.1.1.1.21.1.1.6',
  swEndDeviceProtoErr => '1.3.6.1.4.1.1588.2.1.1.1.21.1.1.7',
  swEndDeviceInvalidWord => '1.3.6.1.4.1.1588.2.1.1.1.21.1.1.8',
  swEndDeviceInvalidCRC => '1.3.6.1.4.1.1588.2.1.1.1.21.1.1.9',
  swGroup => '1.3.6.1.4.1.1588.2.1.1.1.22',
  swGroupTable => '1.3.6.1.4.1.1588.2.1.1.1.22.1',
  swGroupEntry => '1.3.6.1.4.1.1588.2.1.1.1.22.1.1',
  swGroupIndex => '1.3.6.1.4.1.1588.2.1.1.1.22.1.1.1',
  swGroupName => '1.3.6.1.4.1.1588.2.1.1.1.22.1.1.2',
  swGroupType => '1.3.6.1.4.1.1588.2.1.1.1.22.1.1.3',
  swGroupMemTable => '1.3.6.1.4.1.1588.2.1.1.1.22.2',
  swGroupMemEntry => '1.3.6.1.4.1.1588.2.1.1.1.22.2.1',
  swGroupId => '1.3.6.1.4.1.1588.2.1.1.1.22.2.1.1',
  swGroupMemWwn => '1.3.6.1.4.1.1588.2.1.1.1.22.2.1.2',
  swGroupMemPos => '1.3.6.1.4.1.1588.2.1.1.1.22.2.1.3',
  swBlmPerfMnt => '1.3.6.1.4.1.1588.2.1.1.1.23',
  swBlmPerfALPAMntTable => '1.3.6.1.4.1.1588.2.1.1.1.23.1',
  swBlmPerfALPAMntEntry => '1.3.6.1.4.1.1588.2.1.1.1.23.1.1',
  swBlmPerfAlpaPort => '1.3.6.1.4.1.1588.2.1.1.1.23.1.1.1',
  swBlmPerfAlpaIndx => '1.3.6.1.4.1.1588.2.1.1.1.23.1.1.2',
  swBlmPerfAlpa => '1.3.6.1.4.1.1588.2.1.1.1.23.1.1.3',
  swBlmPerfAlpaCRCCnt => '1.3.6.1.4.1.1588.2.1.1.1.23.1.1.4',
  swBlmPerfEEMntTable => '1.3.6.1.4.1.1588.2.1.1.1.23.2',
  swBlmPerfEEMntEntry => '1.3.6.1.4.1.1588.2.1.1.1.23.2.1',
  swBlmPerfEEPort => '1.3.6.1.4.1.1588.2.1.1.1.23.2.1.1',
  swBlmPerfEERefKey => '1.3.6.1.4.1.1588.2.1.1.1.23.2.1.2',
  swBlmPerfEECRC => '1.3.6.1.4.1.1588.2.1.1.1.23.2.1.3',
  swBlmPerfEEFCWRx => '1.3.6.1.4.1.1588.2.1.1.1.23.2.1.4',
  swBlmPerfEEFCWTx => '1.3.6.1.4.1.1588.2.1.1.1.23.2.1.5',
  swBlmPerfEESid => '1.3.6.1.4.1.1588.2.1.1.1.23.2.1.6',
  swBlmPerfEEDid => '1.3.6.1.4.1.1588.2.1.1.1.23.2.1.7',
  swBlmPerfFltMntTable => '1.3.6.1.4.1.1588.2.1.1.1.23.3',
  swBlmPerfFltMntEntry => '1.3.6.1.4.1.1588.2.1.1.1.23.3.1',
  swBlmPerfFltPort => '1.3.6.1.4.1.1588.2.1.1.1.23.3.1.1',
  swBlmPerfFltRefkey => '1.3.6.1.4.1.1588.2.1.1.1.23.3.1.2',
  swBlmPerfFltCnt => '1.3.6.1.4.1.1588.2.1.1.1.23.3.1.3',
  swBlmPerfFltAlias => '1.3.6.1.4.1.1588.2.1.1.1.23.3.1.4',
  swTrunk => '1.3.6.1.4.1.1588.2.1.1.1.24',
  swSwitchTrunkable => '1.3.6.1.4.1.1588.2.1.1.1.24.1',
  swSwitchTrunkableDefinition => 'SW-MIB::swSwitchTrunkable',
  swTrunkTable => '1.3.6.1.4.1.1588.2.1.1.1.24.2',
  swTrunkEntry => '1.3.6.1.4.1.1588.2.1.1.1.24.2.1',
  swTrunkPortIndex => '1.3.6.1.4.1.1588.2.1.1.1.24.2.1.1',
  swTrunkGroupNumber => '1.3.6.1.4.1.1588.2.1.1.1.24.2.1.2',
  swTrunkMaster => '1.3.6.1.4.1.1588.2.1.1.1.24.2.1.3',
  swPortTrunked => '1.3.6.1.4.1.1588.2.1.1.1.24.2.1.4',
  swPortTrunkedDefinition => 'SW-MIB::swPortTrunked',
  swTrunkGrpTable => '1.3.6.1.4.1.1588.2.1.1.1.24.3',
  swTrunkGrpEntry => '1.3.6.1.4.1.1588.2.1.1.1.24.3.1',
  swTrunkGrpNumber => '1.3.6.1.4.1.1588.2.1.1.1.24.3.1.1',
  swTrunkGrpMaster => '1.3.6.1.4.1.1588.2.1.1.1.24.3.1.2',
  swTrunkGrpTx => '1.3.6.1.4.1.1588.2.1.1.1.24.3.1.3',
  swTrunkGrpRx => '1.3.6.1.4.1.1588.2.1.1.1.24.3.1.4',
  swTopTalker => '1.3.6.1.4.1.1588.2.1.1.1.25',
  swTopTalkerMntMode => '1.3.6.1.4.1.1588.2.1.1.1.25.1',
  swTopTalkerMntModeDefinition => 'SW-MIB::swTopTalkerMntMode',
  swTopTalkerMntNumEntries => '1.3.6.1.4.1.1588.2.1.1.1.25.2',
  swTopTalkerMntTable => '1.3.6.1.4.1.1588.2.1.1.1.25.3',
  swTopTalkerMntEntry => '1.3.6.1.4.1.1588.2.1.1.1.25.3.1',
  swTopTalkerMntIndex => '1.3.6.1.4.1.1588.2.1.1.1.25.3.1.1',
  swTopTalkerMntPort => '1.3.6.1.4.1.1588.2.1.1.1.25.3.1.2',
  swTopTalkerMntSpid => '1.3.6.1.4.1.1588.2.1.1.1.25.3.1.3',
  swTopTalkerMntDpid => '1.3.6.1.4.1.1588.2.1.1.1.25.3.1.4',
  swTopTalkerMntflow => '1.3.6.1.4.1.1588.2.1.1.1.25.3.1.5',
  swTopTalkerMntSwwn => '1.3.6.1.4.1.1588.2.1.1.1.25.3.1.6',
  swTopTalkerMntDwwn => '1.3.6.1.4.1.1588.2.1.1.1.25.3.1.7',
  swCpuOrMemoryUsage => '1.3.6.1.4.1.1588.2.1.1.1.26',
  swCpuUsage => '1.3.6.1.4.1.1588.2.1.1.1.26.1',
  swCpuNoOfRetries => '1.3.6.1.4.1.1588.2.1.1.1.26.2',
  swCpuUsageLimit => '1.3.6.1.4.1.1588.2.1.1.1.26.3',
  swCpuPollingInterval => '1.3.6.1.4.1.1588.2.1.1.1.26.4',
  swCpuAction => '1.3.6.1.4.1.1588.2.1.1.1.26.5',
  swCpuActionDefinition => 'SW-MIB::swCpuAction',
  swMemUsage => '1.3.6.1.4.1.1588.2.1.1.1.26.6',
  swMemNoOfRetries => '1.3.6.1.4.1.1588.2.1.1.1.26.7',
  swMemUsageLimit => '1.3.6.1.4.1.1588.2.1.1.1.26.8',
  swMemPollingInterval => '1.3.6.1.4.1.1588.2.1.1.1.26.9',
  swMemAction => '1.3.6.1.4.1.1588.2.1.1.1.26.10',
  swMemActionDefinition => 'SW-MIB::swMemAction',
  swMemUsageLimit1 => '1.3.6.1.4.1.1588.2.1.1.1.26.11',
  swMemUsageLimit3 => '1.3.6.1.4.1.1588.2.1.1.1.26.12',
  swConnUnitPortStatExtentionTable => '1.3.6.1.4.1.1588.2.1.1.1.27',
  swConnUnitPortStatEntry => '1.3.6.1.4.1.1588.2.1.1.1.27.1',
  swConnUnitCRCWithBadEOF => '1.3.6.1.4.1.1588.2.1.1.1.27.1.1',
  swConnUnitZeroTenancy => '1.3.6.1.4.1.1588.2.1.1.1.27.1.2',
  swConnUnitFLNumOfTenancy => '1.3.6.1.4.1.1588.2.1.1.1.27.1.3',
  swConnUnitNLNumOfTenancy => '1.3.6.1.4.1.1588.2.1.1.1.27.1.4',
  swConnUnitStopTenancyStarVation => '1.3.6.1.4.1.1588.2.1.1.1.27.1.5',
  swConnUnitOpend => '1.3.6.1.4.1.1588.2.1.1.1.27.1.6',
  swConnUnitTransferConnection => '1.3.6.1.4.1.1588.2.1.1.1.27.1.7',
  swConnUnitOpen => '1.3.6.1.4.1.1588.2.1.1.1.27.1.8',
  swConnUnitInvalidARB => '1.3.6.1.4.1.1588.2.1.1.1.27.1.9',
  swConnUnitFTB1Miss => '1.3.6.1.4.1.1588.2.1.1.1.27.1.10',
  swConnUnitFTB2Miss => '1.3.6.1.4.1.1588.2.1.1.1.27.1.11',
  swConnUnitFTB6Miss => '1.3.6.1.4.1.1588.2.1.1.1.27.1.12',
  swConnUnitZoneMiss => '1.3.6.1.4.1.1588.2.1.1.1.27.1.13',
  swConnUnitLunZoneMiss => '1.3.6.1.4.1.1588.2.1.1.1.27.1.14',
  swConnUnitBadEOF => '1.3.6.1.4.1.1588.2.1.1.1.27.1.15',
  swConnUnitLCRX => '1.3.6.1.4.1.1588.2.1.1.1.27.1.16',
  swConnUnitRDYPriority => '1.3.6.1.4.1.1588.2.1.1.1.27.1.17',
  swConnUnitLli => '1.3.6.1.4.1.1588.2.1.1.1.27.1.18',
  swConnUnitInterrupts => '1.3.6.1.4.1.1588.2.1.1.1.27.1.19',
  swConnUnitUnknownInterrupts => '1.3.6.1.4.1.1588.2.1.1.1.27.1.20',
  swConnUnitTimedOut => '1.3.6.1.4.1.1588.2.1.1.1.27.1.21',
  swConnUnitProcRequired => '1.3.6.1.4.1.1588.2.1.1.1.27.1.22',
  swConnUnitTxBufferUnavailable => '1.3.6.1.4.1.1588.2.1.1.1.27.1.23',
  swConnUnitStateChange => '1.3.6.1.4.1.1588.2.1.1.1.27.1.24',
  swConnUnitC3DiscardDueToRXTimeout => '1.3.6.1.4.1.1588.2.1.1.1.27.1.25',
  swConnUnitC3DiscardDueToDestUnreachable => '1.3.6.1.4.1.1588.2.1.1.1.27.1.26',
  swConnUnitC3DiscardDueToTXTimeout => '1.3.6.1.4.1.1588.2.1.1.1.27.1.27',
  swConnUnitC3DiscardOther => '1.3.6.1.4.1.1588.2.1.1.1.27.1.28',
  swConnUnitPCSErrorCounter => '1.3.6.1.4.1.1588.2.1.1.1.27.1.29',
  swConnUnitUnroutableFrameCounter => '1.3.6.1.4.1.1588.2.1.1.1.27.1.30',
  swConnUnitFECCorrectedCounter => '1.3.6.1.4.1.1588.2.1.1.1.27.1.31',
  swConnUnitFECUnCorrectedCounter => '1.3.6.1.4.1.1588.2.1.1.1.27.1.32',
  sw28k => '1.3.6.1.4.1.1588.2.1.1.2',
  sw21kN24k => '1.3.6.1.4.1.1588.2.1.1.3',
  sw20x0 => '1.3.6.1.4.1.1588.2.1.1.4',
  swMibModule => '1.3.6.1.4.1.1588.3.1.3',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'SW-MIB'} = {
  swNbIslState => {
    '0' => 'sw-down',
    '1' => 'sw-init',
    '2' => 'sw-internal2',
    '3' => 'sw-internal3',
    '4' => 'sw-internal4',
    '5' => 'sw-active',
  },
  SwFwWriteVals => {
    '1' => 'swFwCancelWrite',
    '2' => 'swFwApplyWrite',
  },
  swMemAction => {
    '0' => 'none',
    '1' => 'raslog',
    '2' => 'snmp',
    '3' => 'raslogandSnmp',
  },
  swEventTrapLevel => {
    '0' => 'none',
    '1' => 'critical',
    '2' => 'error',
    '3' => 'warning',
    '4' => 'informational',
    '5' => 'debug',
  },
  swDiagResult => {
    '1' => 'sw-ok',
    '2' => 'sw-faulty',
    '3' => 'sw-embedded-port-fault',
  },
  SwFwEvent => {
    '1' => 'started',
    '2' => 'changed',
    '3' => 'exceeded',
    '4' => 'below',
    '5' => 'above',
    '6' => 'inBetween',
    '7' => 'lowBufferCrsd',
  },
  swFCPortDisableReason => {
    '1' => 'r-recover-fail',
    '2' => 'r-invalid-reason',
    '3' => 'r-forced',
    '4' => 'r-sw-disabled',
    '5' => 'r-bl-disabled',
    '6' => 'r-slot-off',
    '7' => 'r-sw-enabled',
    '8' => 'r-bl-enabled',
    '9' => 'r-slot-on',
    '10' => 'r-persistid',
    '11' => 'r-sw-violation',
    '12' => 'r-prv-dev-violation',
    '13' => 'r-pub-dev-violation',
    '14' => 'r-port-data-fail',
    '15' => 'r-online-incomplete',
    '16' => 'r-online-route-fail',
    '17' => 'r-inconsistent',
    '18' => 'r-set-vcc-fail',
    '19' => 'r-ecp-in-testing',
    '20' => 'r-elp-in-testing',
    '21' => 'r-ecp-retries-exceeded',
    '22' => 'r-invalid-ecp-state',
    '23' => 'r-bad-ecp-rcvd',
    '24' => 'r-send-rtmark-fail',
    '25' => 'r-send-ecp-fail',
    '26' => 'r-save-link-rtt-fail',
    '27' => 'r-em-incnst',
    '28' => 'r-pci-attach-fail',
    '29' => 'r-buf-starv',
    '30' => 'r-elp-fctl-mismatch',
    '31' => 'r-eport-disabled',
    '32' => 'r-trunk-with-vcxlt',
    '33' => 'r-sw-fl-port-not-ready',
    '34' => 'r-link-reinit',
    '35' => 'r-domain-id-change',
    '36' => 'r-auth-rejected',
    '37' => 'r-auth-timeout',
    '38' => 'r-auth-fail-retry',
    '39' => 'r-fcr-conf-mismatch1',
    '40' => 'r-fcr-conf-mismatch2',
    '41' => 'r-fcr-port-ld-mode-mismatch',
    '42' => 'r-fcr-ld-credit-mismatch',
    '43' => 'r-fcr-set-vcc-failed',
    '44' => 'r-fcr-set-rtc-failed',
    '45' => 'r-fcr-elp-ver-inconsis',
    '46' => 'r-fcr-elp-fctl-mismatch',
    '47' => 'r-fcr-pid-mismatch',
    '48' => 'r-fcr-tov-mismatch',
    '49' => 'r-fcr-ld-incompat',
    '50' => 'r-fcr-isolated',
    '51' => 'r-elp-retries-exceeded',
    '52' => 'r-fcr-exports-exceeded',
    '53' => 'r-fcr-license',
    '54' => 'r-fcr-conf-ex',
    '55' => 'r-fcr-ftag-over',
    '56' => 'r-fcr-ftag-conflict',
    '57' => 'r-fcr-fowner-conflict',
    '58' => 'r-fcr-zone-resource',
    '59' => 'r-fcr-port-state-to',
    '60' => 'r-fcr-authn-reject',
    '61' => 'r-fcr-sec-fcs-list',
    '62' => 'r-fcr-sec-failure',
    '63' => 'r-fcr-incompatible-mode',
    '64' => 'r-fcr-sec-scc-list',
    '65' => 'r-fcr-generic',
    '66' => 'r-sw-ex-port-not-ready',
    '67' => 'r-fcr-class-f-incompat',
    '68' => 'r-fcr-class-n-incompat',
    '69' => 'r-fcr-invalid-flow-rcvd',
    '70' => 'r-fcr-state-disabled',
    '71' => 'r-fdd-strict-exist',
    '72' => 'r-last-port-disable-msg',
    '73' => 'r-sw-l-port-not-support',
    '74' => 'r-peer-port-in-di-zone',
    '75' => 'r-zone-incompat',
    '76' => 'r-sw-config-l-port-not-support',
    '77' => 'r-sw-port-mirror-configured',
    '78' => 'r-nportlogin-inprogress',
    '79' => 'r-nonpiv',
    '80' => 'r-nomapping',
    '81' => 'r-unknowntype',
    '82' => 'r-nportoffline',
    '83' => 'r-flogifailed',
    '84' => 'r-nportbusy',
    '85' => 'r-noflogi',
    '86' => 'r-noflogiresp',
    '87' => 'r-flogidupalpa',
    '88' => 'r-loopcfg',
    '89' => 'r-noenclicense',
    '90' => 'r-nofiportmapping',
    '91' => 'r-brcdfabconn',
    '92' => 'r-port-reset',
    '93' => 'r-floginport',
    '94' => 'r-fdd-strict-conflict',
    '95' => 'r-fdd-cfg-conflict',
    '96' => 'r-fdd-cfg-conflict-na-neigh',
    '97' => 'r-fcr-insistent-front-did-mismatch',
    '98' => 'r-fcr-fabric-binding-failure',
    '99' => 'r-fcr-non-standard-domain-offset',
    '100' => 'r-area-in-use',
    '101' => 'r-mstr-diff-pg',
    '102' => 'r-mstr-diff-area',
    '103' => 'r-ta-not-supported',
    '104' => 'r-eport-not-supported',
    '105' => 'r-fport-not-supported',
    '106' => 'r-cfg-not-supported',
    '107' => 'r-port-ll-th-exceeded',
    '108' => 'r-port-synl-th-exceeded',
    '109' => 'r-port-pe-th-exceeded',
    '110' => 'f-port-disable-no-trk-lic',
    '111' => 'r-port-inw-th-exceeded',
    '112' => 'r-port-crc-th-exceeded',
    '113' => 'f-port-tr-disable-speed-not-ok',
    '114' => 'r-port-auto-disable',
    '115' => 'r-fcr-export-in-non-base-sw',
    '116' => 'r-base-switch-supports-no-device',
    '117' => 'r-port-trunk-proto-error',
    '118' => 'r-no-area-avail',
    '119' => 'r-cannot-unbind-existing-area',
    '120' => 'r-cannot-use-10bit-area',
    '121' => 'r-authentication-required',
    '122' => 'r-port-lr-th-exceeded',
    '123' => 'r-fcr-export-lf-conflict',
    '124' => 'r-incompat',
    '125' => 'r-did-overlap',
    '126' => 'r-zone-conflict',
    '127' => 'r-eport-seg',
    '128' => 'r-no-license',
    '129' => 'r-platform-db',
    '130' => 'r-sec-incompat',
    '131' => 'r-sec-violation',
    '132' => 'r-ecp-longdist',
    '133' => 'r-dup-wwn',
    '134' => 'r-eport-isolated',
    '135' => 'r-ad',
    '136' => 'r-esc-did-offset',
    '137' => 'r-esc-etiz',
    '138' => 'r-esc-fid',
    '139' => 'r-safe-zone',
    '140' => 'r-vf',
    '141' => 'r-vf-bs-incompat',
    '142' => 'r-pers-pid-on-lport',
    '143' => 'r-pers-pid-portaddr-collision',
    '144' => 'r-pers-pid-port-on-same-area',
    '145' => 'r-pers-pid-port-addr-bnd',
    '146' => 'r-msfr',
    '147' => 'r-sw-halfbw-lic',
    '148' => 'r-1g-mode-incompat',
    '149' => 'r-10g-mode-incompat',
    '150' => 'r-dual-mode-incompat',
    '151' => 'r-implict-plt-service-block',
    '152' => 'r-port-st-th-exceeded',
    '153' => 'r-port-c3txto-th-exceeded',
    '154' => 'r-eport-not-supported-def-sw',
    '155' => 'r-eport-ll-th-exceeded',
    '156' => 'r-eport-synl-th-exceeded',
    '157' => 'r-eport-pe-th-exceeded',
    '158' => 'r-eport-inw-th-exceeded',
    '159' => 'r-eport-crc-th-exceeded',
    '160' => 'r-eport-lr-th-exceeded',
    '161' => 'r-eport-st-th-exceeded',
    '162' => 'r-eport-c3txto-th-exceeded',
    '163' => 'r-fopport-ll-th-exceeded',
    '164' => 'r-fopport-synl-th-exceeded',
    '165' => 'r-fopport-pe-th-exceeded',
    '166' => 'r-fopport-inw-th-exceeded',
    '167' => 'r-fopport-crc-th-exceeded',
    '168' => 'r-fopport-lr-th-exceeded',
    '169' => 'r-fopport-st-th-exceeded',
    '170' => 'r-fopport-c3txto-th-exceeded',
    '171' => 'r-fcuport-ll-th-exceeded',
    '172' => 'r-fcuport-synl-th-exceeded',
    '173' => 'r-fcuport-pe-th-exceeded',
    '174' => 'r-fcuport-inw-th-exceeded',
    '175' => 'r-fcuport-crc-th-exceeded',
    '176' => 'r-fcuport-lr-th-exceeded',
    '177' => 'r-fcuport-st-th-exceeded',
    '178' => 'r-fcuport-c3txto-th-exceeded',
    '179' => 'r-port-no-area-avail-pers-disable',
    '180' => 'r-eport-locked',
    '181' => 'r-enh-tizone',
    '182' => 'r-sw-port-swap-not-supported',
    '183' => 'r-fport-slow-drain-condition',
    '184' => 'r-esc-vlanid',
    '185' => 'r-port-recov-state',
    '186' => 'r-port-auto-disable-losn',
    '187' => 'r-port-auto-disable-losg',
    '188' => 'r-port-auto-disable-ols',
    '189' => 'r-port-auto-disable-nos',
    '190' => 'r-port-auto-disable-lip',
    '191' => 'r-port-compression',
    '192' => 'r-port-encryption',
    '193' => 'r-port-enccomp-res',
    '194' => 'r-port-decommissioned',
    '195' => 'r-port-dportmode',
    '196' => 'r-port-dport-incompat',
    '197' => 'r-port-enc-comp-mismatch',
    '198' => 'r-non-rcs-rem-dom',
    '199' => 'r-port-fips-comp-mismatch',
    '200' => 'r-port-non-fips-comp-mismatch',
    '201' => 'r-port-enc-auth-disabled',
    '202' => 'r-port-disable-on-zeroize',
    '203' => 'r-cfgspeed-not-supported',
    '204' => 'r-fcr-ex-port-not-allowed',
    '205' => 'r-port-duplicate-pwwn',
    '206' => 'r-fcr-trunk-master-sfid-not-set',
    '207' => 'r-nportistrunkmem',
    '208' => 'r-policynotsupported',
    '209' => 'r-no-icl-license',
    '210' => 'r-no-ten-gig-license',
    '211' => 'r-fdd-strict-scc-conflict',
    '212' => 'r-fdd-strict-dcc-conflict',
    '213' => 'r-fdd-strict-fcs-conflict',
    '214' => 'r-fdd-strict-fabwide-conflict',
    '215' => 'r-fdd-strict-pwd-conflict',
    '216' => 'r-fcr-interop-conf',
    '217' => 'r-port-enc-interop-conflict',
    '218' => 'r-port-comp-interop-conflict',
    '219' => 'r-no-port-open-rsp',
    '220' => 'r-no-eicl-license',
    '221' => 'r-eicl-license-limited',
    '222' => 'r-esc-base-sw',
    '223' => 'r-sw-cpu-overload',
    '224' => 'r-no-icl-pod2-license',
    '225' => 'r-port-area-mismatch-pers-disable',
    '226' => 'r-unauthorized-device',
    '227' => 'r-max-flogi-reached',
    '228' => 'r-auth-not-supported-in-switch',
    '229' => 'r-icl-ex-on-non-vf',
    '230' => 'r-user-disabled-reason',
  },
  swFCPortOpStatus => {
    '0' => 'unknown',
    '1' => 'online',
    '2' => 'offline',
    '3' => 'testing',
    '4' => 'faulty',
  },
  swFCPortPhyState => {
    '1' => 'noCard',
    '2' => 'noTransceiver',
    '3' => 'laserFault',
    '4' => 'noLight',
    '5' => 'noSync',
    '6' => 'inSync',
    '7' => 'portFault',
    '8' => 'diagFault',
    '9' => 'lockRef',
    '10' => 'validating',
    '11' => 'invalidModule',
    '14' => 'noSigDet',
    '255' => 'unknown',
  },
  swFCPortSpeed => {
    '1' => 'one-GB',
    '2' => 'two-GB',
    '3' => 'auto-Negotiate',
    '4' => 'four-GB',
    '5' => 'eight-GB',
    '6' => 'ten-GB',
    '7' => 'unknown',
    '8' => 'sixteen-GB',
  },
  SwFwStatus => {
    '1' => 'disabled',
    '2' => 'enabled',
  },
  swFCPortAdmStatus => {
    '1' => 'online',
    '2' => 'offline',
    '3' => 'testing',
    '4' => 'faulty',
  },
  SwFwLicense => {
    '1' => 'swFwLicensed',
    '2' => 'swFwNotLicensed',
  },
  SwFwState => {
    '1' => 'swFwInformative',
    '2' => 'swFwNormal',
    '3' => 'swFwFaulty',
  },
  SwFwTimebase => {
    '1' => 'swFwTbNone',
    '2' => 'swFwTbSec',
    '3' => 'swFwTbMin',
    '4' => 'swFwTbHour',
    '5' => 'swFwTbDay',
  },
  SwFwActs => {
    '0' => 'swFwNoAction',
    '1' => 'swFwErrlog',
    '2' => 'swFwSnmptrap',
    '3' => 'swFwErrlogSnmptrap',
    '4' => 'swFwPortloglock',
    '5' => 'swFwErrlogPortloglock',
    '6' => 'swFwSnmptrapPortloglock',
    '7' => 'swFwErrlogSnmptrapPortloglock',
    '8' => 'swFwRn',
    '9' => 'swFwElRn',
    '10' => 'swFwStRn',
    '11' => 'swFwElStRn',
    '12' => 'swFwPlRn',
    '13' => 'swFwElPlRn',
    '14' => 'swFwStPlRn',
    '15' => 'swFwElStPlRn',
    '16' => 'swFwMailAlert',
    '17' => 'swFwMailAlertErrlog',
    '18' => 'swFwMailAlertSnmptrap',
    '19' => 'swFwMailAlertErrlogSnmptrap',
    '20' => 'swFwMailAlertPortloglock',
    '21' => 'swFwMailAlertErrlogPortloglock',
    '22' => 'swFwMailAlertSnmptrapPortloglock',
    '23' => 'swFwMailAlertErrlogSnmptrapPortloglock',
    '24' => 'swFwMailAlertRn',
    '25' => 'swFwElMailAlertRn',
    '26' => 'swFwMailAlertStRn',
    '27' => 'swFwMailAlertElStRn',
    '28' => 'swFwMailAlertPlRn',
    '29' => 'swFwMailAlertElPlRn',
    '30' => 'swFwMailAlertStPlRn',
    '31' => 'swFwMailAlertElStPlRn',
    '32' => 'swFwPf',
    '33' => 'swFwElPf',
    '34' => 'swFwStPf',
    '35' => 'swFwElStPf',
    '36' => 'swFwPlPf',
    '37' => 'swFwElPlPf',
    '38' => 'swFwStPlPf',
    '39' => 'swFwElStPlPf',
    '40' => 'swFwRnPf',
    '41' => 'swFwElRnPf',
    '42' => 'swFwStRnPf',
    '43' => 'swFwElStRnPf',
    '44' => 'swFwPlRnPf',
    '45' => 'swFwElPlRnPf',
    '46' => 'swFwStPlRnPf',
    '47' => 'swFwElStPlRnPf',
    '48' => 'swFwMailAlertPf',
    '49' => 'swFwMailAlertElPf',
    '50' => 'swFwMailAlertStPf',
    '51' => 'swFwMailAlertElStPf',
    '52' => 'swFwMailAlertPlPf',
    '53' => 'swFwMailAlertElPlPf',
    '54' => 'swFwMailAlertStPlPf',
    '55' => 'swFwMailAlertElStPlPf',
    '56' => 'swFwMailAlertRnPf',
    '57' => 'swFwMailAlertElRnPf',
    '58' => 'swFwMailAlertStRnPf',
    '59' => 'swFwMailAlertElStRnPf',
    '60' => 'swFwMailAlertPlRnPf',
    '61' => 'swFwMailAlertElPlRnPf',
    '62' => 'swFwMailAlertStPlRnPf',
    '63' => 'swFwMailAlertElStPlRnPf',
  },
  swBeaconAdmStatus => {
    '1' => 'on',
    '2' => 'off',
  },
  swTopTalkerMntMode => {
    '1' => 'fabricmode',
    '2' => 'portmode',
  },
  swSensorStatus => {
    '1' => 'unknown',
    '2' => 'faulty',
    '3' => 'below-min',
    '4' => 'nominal',
    '5' => 'above-max',
    '6' => 'absent',
  },
  swFCPortBrcdType => {
    '1' => 'unknown',
    '2' => 'other',
    '3' => 'fl-port',
    '4' => 'f-port',
    '5' => 'e-port',
    '6' => 'g-port',
    '7' => 'ex-port',
  },
  SwSevType => {
    '0' => 'none',
    '1' => 'critical',
    '2' => 'error',
    '3' => 'warning',
    '4' => 'informational',
    '5' => 'debug',
  },
  swAdmStatus => {
    '1' => 'online',
    '2' => 'offline',
    '3' => 'testing',
    '4' => 'faulty',
    '5' => 'reboot',
    '6' => 'fastboot',
  },
  swFCPortType => {
    '1' => 'stitch',
    '2' => 'flannel',
    '3' => 'loom',
    '4' => 'bloom',
    '5' => 'rdbloom',
    '6' => 'wormhole',
    '7' => 'other',
    '8' => 'unknown',
  },
  SwFwClassesAreas => {
    '1' => 'swFwEnvTemp',
    '2' => 'swFwEnvFan',
    '3' => 'swFwEnvPs',
    '4' => 'swFwTransceiverTemp',
    '5' => 'swFwTransceiverRxp',
    '6' => 'swFwTransceiverTxp',
    '7' => 'swFwTransceiverCurrent',
    '8' => 'swFwPortLink',
    '9' => 'swFwPortSync',
    '10' => 'swFwPortSignal',
    '11' => 'swFwPortPe',
    '12' => 'swFwPortWords',
    '13' => 'swFwPortCrcs',
    '14' => 'swFwPortRXPerf',
    '15' => 'swFwPortTXPerf',
    '16' => 'swFwPortState',
    '17' => 'swFwFabricEd',
    '18' => 'swFwFabricFr',
    '19' => 'swFwFabricDi',
    '20' => 'swFwFabricSc',
    '21' => 'swFwFabricZc',
    '22' => 'swFwFabricFq',
    '23' => 'swFwFabricFl',
    '24' => 'swFwFabricGs',
    '25' => 'swFwEPortLink',
    '26' => 'swFwEPortSync',
    '27' => 'swFwEPortSignal',
    '28' => 'swFwEPortPe',
    '29' => 'swFwEPortWords',
    '30' => 'swFwEPortCrcs',
    '31' => 'swFwEPortRXPerf',
    '32' => 'swFwEPortTXPerf',
    '33' => 'swFwEPortState',
    '34' => 'swFwFCUPortLink',
    '35' => 'swFwFCUPortSync',
    '36' => 'swFwFCUPortSignal',
    '37' => 'swFwFCUPortPe',
    '38' => 'swFwFCUPortWords',
    '39' => 'swFwFCUPortCrcs',
    '40' => 'swFwFCUPortRXPerf',
    '41' => 'swFwFCUPortTXPerf',
    '42' => 'swFwFCUPortState',
    '43' => 'swFwFOPPortLink',
    '44' => 'swFwFOPPortSync',
    '45' => 'swFwFOPPortSignal',
    '46' => 'swFwFOPPortPe',
    '47' => 'swFwFOPPortWords',
    '48' => 'swFwFOPPortCrcs',
    '49' => 'swFwFOPPortRXPerf',
    '50' => 'swFwFOPPortTXPerf',
    '51' => 'swFwFOPPortState',
    '52' => 'swFwPerfALPACRC',
    '53' => 'swFwPerfEToECRC',
    '54' => 'swFwPerfEToERxCnt',
    '55' => 'swFwPerfEToETxCnt',
    '56' => 'swFwPerffltCusDef',
    '57' => 'swFwTransceiverVoltage',
    '58' => 'swFwSecTelnetViolations',
    '59' => 'swFwSecHTTPViolations',
    '60' => 'swFwSecAPIViolations',
    '61' => 'swFwSecRSNMPViolations',
    '62' => 'swFwSecWSNMPViolations',
    '63' => 'swFwSecSESViolations',
    '64' => 'swFwSecMSViolations',
    '65' => 'swFwSecSerialViolations',
    '66' => 'swFwSecFPViolations',
    '67' => 'swFwSecSCCViolations',
    '68' => 'swFwSecDCCViolations',
    '69' => 'swFwSecLoginViolations',
    '70' => 'swFwSecInvalidTS',
    '71' => 'swFwSecInvalidSign',
    '72' => 'swFwSecInvalidCert',
    '73' => 'swFwSecSlapFail',
    '74' => 'swFwSecSlapBadPkt',
    '75' => 'swFwSecTSOutSync',
    '76' => 'swFwSecNoFcs',
    '77' => 'swFwSecIncompDB',
    '78' => 'swFwSecIllegalCmd',
    '79' => 'swFwSAMTotalDownTime',
    '80' => 'swFwSAMTotalUpTime',
    '81' => 'swFwSAMDurationOfOccur',
    '82' => 'swFwSAMFreqOfOccur',
    '83' => 'swFwResourceFlash',
    '84' => 'swFwEPortUtil',
    '85' => 'swFwEPortPktl',
    '86' => 'swFwPortLr',
    '87' => 'swFwEPortLr',
    '88' => 'swFwFCUPortLr',
    '89' => 'swFwFOPPortLr',
    '90' => 'swFwPortC3Discard',
    '91' => 'swFwEPortC3Discard',
    '92' => 'swFwFCUPortC3Discard',
    '93' => 'swFwFOPPortC3Discard',
    '94' => 'swFwVEPortStateChange',
    '95' => 'swFwVEPortUtil',
    '96' => 'swFwVEPortPktLoss',
    '97' => 'swFwEPortTrunkUtil',
    '98' => 'swFwFCUPortTrunkUtil',
    '99' => 'swFwFOPPortTrunkUtil',
    '100' => 'swFwCPUMemUsage',
    '101' => 'filterFmCfg1',
    '102' => 'filterFmCfg2',
    '103' => 'filterFmCfg3',
    '104' => 'filterFmCfg4',
    '105' => 'filterFmCfg5',
    '106' => 'filterFmCfg6',
    '107' => 'filterFmCfg7',
    '108' => 'filterFmCfg8',
    '109' => 'filterFmCfg9',
    '110' => 'filterFmCfg10',
    '111' => 'filterFmCfg11',
    '112' => 'filterFmCfg12',
    '113' => 'filterFmCfg13',
    '114' => 'filterFmCfg14',
    '115' => 'filterFmCfg15',
    '116' => 'filterFmCfg16',
    '117' => 'filterFmCfg17',
    '118' => 'filterFmCfg18',
    '119' => 'filterFmCfg19',
    '120' => 'filterFmCfg20',
    '121' => 'filterFmCfg21',
    '122' => 'filterFmCfg22',
    '123' => 'filterFmCfg23',
    '124' => 'filterFmCfg24',
    '125' => 'filterFmCfg25',
    '126' => 'filterFmCfg26',
    '127' => 'filterFmCfg27',
    '128' => 'filterFmCfg28',
    '129' => 'filterFmCfg29',
    '130' => 'filterFmCfg30',
    '131' => 'filterFmCfg31',
    '132' => 'filterFmCfg32',
    '133' => 'filterFmCfg33',
    '134' => 'filterFmCfg34',
    '135' => 'filterFmCfg35',
    '136' => 'filterFmCfg36',
    '137' => 'filterFmCfg37',
    '138' => 'filterFmCfg38',
    '139' => 'filterFmCfg39',
    '140' => 'filterFmCfg40',
    '141' => 'filterFmCfg41',
    '142' => 'filterFmCfg42',
    '143' => 'filterFmCfg43',
    '144' => 'filterFmCfg44',
    '145' => 'filterFmCfg45',
    '146' => 'filterFmCfg46',
    '147' => 'filterFmCfg47',
    '148' => 'filterFmCfg48',
    '149' => 'filterFmCfg49',
    '150' => 'filterFmCfg50',
    '151' => 'filterFmCfg51',
    '152' => 'swFwPowerOnHours',
  },
  swOperStatus => {
    '1' => 'online',
    '2' => 'offline',
    '3' => 'testing',
    '4' => 'faulty',
  },
  swIDIDMode => {
    '1' => 'enabled',
    '2' => 'disabled',
  },
  swFCPortLinkState => {
    '1' => 'enabled',
    '2' => 'disabled',
    '3' => 'loopback',
  },
  swFCPortTxType => {
    '1' => 'unknown',
    '2' => 'lw',
    '3' => 'sw',
    '4' => 'ld',
    '5' => 'cu',
  },
  swIPv6Status => {
    '1' => 'tentative',
    '2' => 'preferred',
    '3' => 'ipdeprecated',
    '4' => 'inactive',
  },
  swPrincipalSwitch => {
    '1' => 'yes',
    '2' => 'no',
  },
  swModel => {
    '1' => 'switch7500',
    '2' => 'switch7500E',
    '3' => 'other',
  },
  SwFwBehavior => {
    '1' => 'triggered',
    '2' => 'continuous',
  },
  swFlashDLOperStatus => {
    '0' => 'unknown',
    '1' => 'swCurrent',
    '2' => 'swFwUpgraded',
    '3' => 'swCfUploaded',
    '4' => 'swCfDownloaded',
    '5' => 'swFwCorrupted',
  },
  swTelnetShellAdmStatus => {
    '0' => 'unknown',
    '1' => 'terminated',
  },
  swSwitchTrunkable => {
    '0' => 'no',
    '8' => 'yes',
  },
  swDeviceStatus => {
    '1' => 'login',
    '2' => 'logout',
    '3' => 'unknown',
  },
  swNsPortType => {
    '1' => 'nPort',
    '2' => 'nlPort',
  },
  swNbBaudRate => {
    '1' => 'other',
    '2' => 'oneEighth',
    '4' => 'quarter',
    '8' => 'half',
    '16' => 'full',
    '32' => 'double',
    '64' => 'quadruple',
    '128' => 'octuple',
    '256' => 'decuple',
    '512' => 'sexdecuple',
  },
  swFCPortPrevType => {
    '1' => 'unknown',
    '2' => 'other',
    '3' => 'fl-port',
    '4' => 'f-port',
    '5' => 'e-port',
    '6' => 'g-port',
    '7' => 'ex-port',
  },
  swPortTrunked => {
    '0' => 'disabled',
    '1' => 'enabled',
  },
  swSensorType => {
    '1' => 'temperature',
    '2' => 'fan',
    '3' => 'power-supply',
  },
  swEventLevel => {
    '1' => 'critical',
    '2' => 'error',
    '3' => 'warning',
    '4' => 'informational',
    '5' => 'debug',
  },
  swCpuAction => {
    '0' => 'none',
    '1' => 'raslog',
    '2' => 'snmp',
    '3' => 'raslogandSnmp',
  },
  SwFwLevels => {
    '1' => 'swFwReserved',
    '2' => 'swFwDefault',
    '3' => 'swFwCustom',
  },
  swNsCos => {
    '1' => 'class-F',
    '2' => 'class-1',
    '3' => 'class-F-1',
    '4' => 'class-2',
    '5' => 'class-F-2',
    '6' => 'class-1-2',
    '7' => 'class-F-1-2',
    '8' => 'class-3',
    '9' => 'class-F-3',
    '10' => 'class-1-3',
    '11' => 'class-F-1-3',
    '12' => 'class-2-3',
    '13' => 'class-F-2-3',
    '14' => 'class-1-2-3',
    '15' => 'class-F-1-2-3',
  },
  swPmgrEventType => {
    '0' => 'create',
    '1' => 'delete',
    '2' => 'moveport',
    '3' => 'fidchange',
    '4' => 'basechange',
    '6' => 'vfstatechange',
  },
  swFlashDLAdmStatus => {
    '1' => 'swCurrent',
    '2' => 'swFwUpgrade',
    '3' => 'swCfUpload',
    '4' => 'swCfDownload',
    '5' => 'swFwCorrupted',
  },
  swBeaconOperStatus => {
    '1' => 'on',
    '2' => 'off',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::SYNOPTICSROOTMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'SYNOPTICS-ROOT-MIB'} = {
  url => '',
  name => 'SW-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'SYNOPTICS-ROOT-MIB'} = 
  '1.3.6.1.4.1.45.3';



package Monitoring::GLPlugin::SNMP::MibsAndOids::SYSTEMRESOURCESMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'SYSTEM-RESOURCES-MIB'} = {
  url => '',
  name => 'SYSTEM-RESOURCES-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'SYSTEM-RESOURCES-MIB'} = {
  'cpuIndex' => '1.3.6.1.4.1.3417.2.8.1.1.0',
  'cpuName' => '1.3.6.1.4.1.3417.2.8.1.2.0',
  'cpuUtilizationValue' => '1.3.6.1.4.1.3417.2.8.1.3.0',
  'cpuWarningThreshold' => '1.3.6.1.4.1.3417.2.8.1.4.0',
  'cpuWarningInterval' => '1.3.6.1.4.1.3417.2.8.1.5.0',
  'cpuCriticalThreshold' => '1.3.6.1.4.1.3417.2.8.1.6.0',
  'cpuCriticalInterval' => '1.3.6.1.4.1.3417.2.8.1.7.0',
  'cpuNotificationType' => '1.3.6.1.4.1.3417.2.8.1.8.0',
  'cpuCurrentState' => '1.3.6.1.4.1.3417.2.8.1.9.0',
  'cpuPreviousState' => '1.3.6.1.4.1.3417.2.8.1.10.0',
  'cpuLastChangeTime' => '1.3.6.1.4.1.3417.2.8.1.11.0',
  'cpuEvent' => '1.3.6.1.4.1.3417.2.8.1.12',
  'cpuTrap' => '1.3.6.1.4.1.3417.2.8.1.12.1',
  'memory' => '1.3.6.1.4.1.3417.2.8.2',
  'memIndex' => '1.3.6.1.4.1.3417.2.8.2.1.0',
  'memName' => '1.3.6.1.4.1.3417.2.8.2.2.0',
  'memPressureValue' => '1.3.6.1.4.1.3417.2.8.2.3.0',
  'memWarningThreshold' => '1.3.6.1.4.1.3417.2.8.2.4.0',
  'memWarningInterval' => '1.3.6.1.4.1.3417.2.8.2.5.0',
  'memCriticalThreshold' => '1.3.6.1.4.1.3417.2.8.2.6.0',
  'memCriticalInterval' => '1.3.6.1.4.1.3417.2.8.2.7.0',
  'memNotificationType' => '1.3.6.1.4.1.3417.2.8.2.8.0',
  'memCurrentState' => '1.3.6.1.4.1.3417.2.8.2.9.0',
  'memPreviousState' => '1.3.6.1.4.1.3417.2.8.2.10.0',
  'memLastChangeTime' => '1.3.6.1.4.1.3417.2.8.2.11.0',
  'memEvent' => '1.3.6.1.4.1.3417.2.8.2.12',
  'memTrap' => '1.3.6.1.4.1.3417.2.8.2.12.1',
  'network' => '1.3.6.1.4.1.3417.2.8.3',
  'netTable' => '1.3.6.1.4.1.3417.2.8.3.1',
  'netEntry' => '1.3.6.1.4.1.3417.2.8.3.1.1',
  'netIndex' => '1.3.6.1.4.1.3417.2.8.3.1.1.1',
  'netName' => '1.3.6.1.4.1.3417.2.8.3.1.1.2',
  'netUtilizationValue' => '1.3.6.1.4.1.3417.2.8.3.1.1.3',
  'netWarningThreshold' => '1.3.6.1.4.1.3417.2.8.3.1.1.4',
  'netWarningInterval' => '1.3.6.1.4.1.3417.2.8.3.1.1.5',
  'netCriticalThreshold' => '1.3.6.1.4.1.3417.2.8.3.1.1.6',
  'netCriticalInterval' => '1.3.6.1.4.1.3417.2.8.3.1.1.7',
  'netNotificationType' => '1.3.6.1.4.1.3417.2.8.3.1.1.8',
  'netCurrentState' => '1.3.6.1.4.1.3417.2.8.3.1.1.9',
  'netPreviousState' => '1.3.6.1.4.1.3417.2.8.3.1.1.10',
  'netLastChangeTime' => '1.3.6.1.4.1.3417.2.8.3.1.1.11',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::UCDDISKIOMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'UCD-DISKIO-MIB'} = {
  url => 'http://www.circitor.fr/Mibs/Files/UCD-DISKIO-MIB.mib',
  name => 'UCD-DISKIO-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'UCD-DISKIO-MIB'} =
    '1.3.6.1.4.1.2021.13.15';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'UCD-DISKIO-MIB'} = {
  ucdDiskIOMIB => '1.3.6.1.4.1.2021.13.15',
  diskIOTable => '1.3.6.1.4.1.2021.13.15.1',
  diskIOEntry => '1.3.6.1.4.1.2021.13.15.1.1',
  diskIOIndex => '1.3.6.1.4.1.2021.13.15.1.1.1',
  diskIODevice => '1.3.6.1.4.1.2021.13.15.1.1.2',
  diskIONRead => '1.3.6.1.4.1.2021.13.15.1.1.3',
  diskIONWritten => '1.3.6.1.4.1.2021.13.15.1.1.4',
  diskIOReads => '1.3.6.1.4.1.2021.13.15.1.1.5',
  diskIOWrites => '1.3.6.1.4.1.2021.13.15.1.1.6',
  diskIOLA1 => '1.3.6.1.4.1.2021.13.15.1.1.9',
  diskIOLA5 => '1.3.6.1.4.1.2021.13.15.1.1.10',
  diskIOLA15 => '1.3.6.1.4.1.2021.13.15.1.1.11',
  diskIONReadX => '1.3.6.1.4.1.2021.13.15.1.1.12',
  diskIONWrittenX => '1.3.6.1.4.1.2021.13.15.1.1.13',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'UCD-DISKIO-MIB'} = {
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::UCDSNMPMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'UCD-SNMP-MIB'} = {
  url => '',
  name => 'UCD-SNMP-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'UCD-SNMP-MIB'} =
    '1.3.6.1.4.1.2021';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'UCD-SNMP-MIB'} = {
  ucdavis => '1.3.6.1.4.1.2021',
  prTable => '1.3.6.1.4.1.2021.2',
  prEntry => '1.3.6.1.4.1.2021.2.1',
  prIndex => '1.3.6.1.4.1.2021.2.1.1',
  prNames => '1.3.6.1.4.1.2021.2.1.2',
  prMin => '1.3.6.1.4.1.2021.2.1.3',
  prMax => '1.3.6.1.4.1.2021.2.1.4',
  prCount => '1.3.6.1.4.1.2021.2.1.5',
  prErrorFlag => '1.3.6.1.4.1.2021.2.1.100',
  prErrorFlagDefinition => 'UCD-SNMP-MIB::UCDErrorFlag',
  prErrMessage => '1.3.6.1.4.1.2021.2.1.101',
  prErrFix => '1.3.6.1.4.1.2021.2.1.102',
  prErrFixDefinition => 'UCD-SNMP-MIB::UCDErrorFix',
  prErrFixCmd => '1.3.6.1.4.1.2021.2.1.103',
  memory => '1.3.6.1.4.1.2021.4',
  memIndex => '1.3.6.1.4.1.2021.4.1',
  memErrorName => '1.3.6.1.4.1.2021.4.2',
  memTotalSwap => '1.3.6.1.4.1.2021.4.3',
  memAvailSwap => '1.3.6.1.4.1.2021.4.4',
  memTotalReal => '1.3.6.1.4.1.2021.4.5',
  memAvailReal => '1.3.6.1.4.1.2021.4.6',
  memTotalSwapTXT => '1.3.6.1.4.1.2021.4.7',
  memAvailSwapTXT => '1.3.6.1.4.1.2021.4.8',
  memTotalRealTXT => '1.3.6.1.4.1.2021.4.9',
  memAvailRealTXT => '1.3.6.1.4.1.2021.4.10',
  memTotalFree => '1.3.6.1.4.1.2021.4.11',
  memMinimumSwap => '1.3.6.1.4.1.2021.4.12',
  memShared => '1.3.6.1.4.1.2021.4.13',
  memBuffer => '1.3.6.1.4.1.2021.4.14',
  memCached => '1.3.6.1.4.1.2021.4.15',
  memUsedSwapTXT => '1.3.6.1.4.1.2021.4.16',
  memUsedRealTXT => '1.3.6.1.4.1.2021.4.17',
  memSwapError => '1.3.6.1.4.1.2021.4.100',
  memSwapErrorDefinition => 'UCD-SNMP-MIB::UCDErrorFlag',
  memSwapErrorMsg => '1.3.6.1.4.1.2021.4.101',
  extTable => '1.3.6.1.4.1.2021.8',
  extEntry => '1.3.6.1.4.1.2021.8.1',
  extIndex => '1.3.6.1.4.1.2021.8.1.1',
  extNames => '1.3.6.1.4.1.2021.8.1.2',
  extCommand => '1.3.6.1.4.1.2021.8.1.3',
  extResult => '1.3.6.1.4.1.2021.8.1.100',
  extOutput => '1.3.6.1.4.1.2021.8.1.101',
  extErrFix => '1.3.6.1.4.1.2021.8.1.102',
  extErrFixDefinition => 'UCD-SNMP-MIB::UCDErrorFix',
  extErrFixCmd => '1.3.6.1.4.1.2021.8.1.103',
  dskTable => '1.3.6.1.4.1.2021.9',
  dskEntry => '1.3.6.1.4.1.2021.9.1',
  dskIndex => '1.3.6.1.4.1.2021.9.1.1',
  dskPath => '1.3.6.1.4.1.2021.9.1.2',
  dskDevice => '1.3.6.1.4.1.2021.9.1.3',
  dskMinimum => '1.3.6.1.4.1.2021.9.1.4',
  dskMinPercent => '1.3.6.1.4.1.2021.9.1.5',
  dskTotal => '1.3.6.1.4.1.2021.9.1.6',
  dskAvail => '1.3.6.1.4.1.2021.9.1.7',
  dskUsed => '1.3.6.1.4.1.2021.9.1.8',
  dskPercent => '1.3.6.1.4.1.2021.9.1.9',
  dskPercentNode => '1.3.6.1.4.1.2021.9.1.10',
  dskTotalLow => '1.3.6.1.4.1.2021.9.1.11',
  dskTotalHigh => '1.3.6.1.4.1.2021.9.1.12',
  dskAvailLow => '1.3.6.1.4.1.2021.9.1.13',
  dskAvailHigh => '1.3.6.1.4.1.2021.9.1.14',
  dskUsedLow => '1.3.6.1.4.1.2021.9.1.15',
  dskUsedHigh => '1.3.6.1.4.1.2021.9.1.16',
  dskErrorFlag => '1.3.6.1.4.1.2021.9.1.100',
  dskErrorFlagDefinition => 'UCD-SNMP-MIB::UCDErrorFlag',
  dskErrorMsg => '1.3.6.1.4.1.2021.9.1.101',
  laTable => '1.3.6.1.4.1.2021.10',
  laEntry => '1.3.6.1.4.1.2021.10.1',
  laIndex => '1.3.6.1.4.1.2021.10.1.1',
  laNames => '1.3.6.1.4.1.2021.10.1.2',
  laLoad => '1.3.6.1.4.1.2021.10.1.3',
  laConfig => '1.3.6.1.4.1.2021.10.1.4',
  laLoadInt => '1.3.6.1.4.1.2021.10.1.5',
  laLoadFloat => '1.3.6.1.4.1.2021.10.1.6',
  laErrorFlag => '1.3.6.1.4.1.2021.10.1.100',
  laErrorFlagDefinition => 'UCD-SNMP-MIB::UCDErrorFlag',
  laErrMessage => '1.3.6.1.4.1.2021.10.1.101',
  systemStats => '1.3.6.1.4.1.2021.11',
  ssIndex => '1.3.6.1.4.1.2021.11.1',
  ssErrorName => '1.3.6.1.4.1.2021.11.2',
  ssSwapIn => '1.3.6.1.4.1.2021.11.3',
  ssSwapOut => '1.3.6.1.4.1.2021.11.4',
  ssIOSent => '1.3.6.1.4.1.2021.11.5',
  ssIOReceive => '1.3.6.1.4.1.2021.11.6',
  ssSysInterrupts => '1.3.6.1.4.1.2021.11.7',
  ssSysContext => '1.3.6.1.4.1.2021.11.8',
  ssCpuUser => '1.3.6.1.4.1.2021.11.9',
  ssCpuSystem => '1.3.6.1.4.1.2021.11.10',
  ssCpuIdle => '1.3.6.1.4.1.2021.11.11',
  ssCpuRawUser => '1.3.6.1.4.1.2021.11.50',
  ssCpuRawNice => '1.3.6.1.4.1.2021.11.51',
  ssCpuRawSystem => '1.3.6.1.4.1.2021.11.52',
  ssCpuRawIdle => '1.3.6.1.4.1.2021.11.53',
  ssCpuRawWait => '1.3.6.1.4.1.2021.11.54',
  ssCpuRawKernel => '1.3.6.1.4.1.2021.11.55',
  ssCpuRawInterrupt => '1.3.6.1.4.1.2021.11.56',
  ssIORawSent => '1.3.6.1.4.1.2021.11.57',
  ssIORawReceived => '1.3.6.1.4.1.2021.11.58',
  ssRawInterrupts => '1.3.6.1.4.1.2021.11.59',
  ssRawContexts => '1.3.6.1.4.1.2021.11.60',
  ssCpuRawSoftIRQ => '1.3.6.1.4.1.2021.11.61',
  ssRawSwapIn => '1.3.6.1.4.1.2021.11.62',
  ssRawSwapOut => '1.3.6.1.4.1.2021.11.63',
  ssCpuRawSteal => '1.3.6.1.4.1.2021.11.64',
  ssCpuRawGuest => '1.3.6.1.4.1.2021.11.65',
  ssCpuRawGuestNice => '1.3.6.1.4.1.2021.11.66',
  ssCpuNumCpus => '1.3.6.1.4.1.2021.11.67',
  ucdInternal => '1.3.6.1.4.1.2021.12',
  ucdExperimental => '1.3.6.1.4.1.2021.13',
  fileTable => '1.3.6.1.4.1.2021.15',
  fileEntry => '1.3.6.1.4.1.2021.15.1',
  fileIndex => '1.3.6.1.4.1.2021.15.1.1',
  fileName => '1.3.6.1.4.1.2021.15.1.2',
  fileSize => '1.3.6.1.4.1.2021.15.1.3',
  fileMax => '1.3.6.1.4.1.2021.15.1.4',
  fileErrorFlag => '1.3.6.1.4.1.2021.15.1.100',
  fileErrorFlagDefinition => 'UCD-SNMP-MIB::UCDErrorFlag',
  fileErrorMsg => '1.3.6.1.4.1.2021.15.1.101',
  logMatch => '1.3.6.1.4.1.2021.16',
  logMatchMaxEntries => '1.3.6.1.4.1.2021.16.1',
  logMatchTable => '1.3.6.1.4.1.2021.16.2',
  logMatchEntry => '1.3.6.1.4.1.2021.16.2.1',
  logMatchIndex => '1.3.6.1.4.1.2021.16.2.1.1',
  logMatchName => '1.3.6.1.4.1.2021.16.2.1.2',
  logMatchFilename => '1.3.6.1.4.1.2021.16.2.1.3',
  logMatchRegEx => '1.3.6.1.4.1.2021.16.2.1.4',
  logMatchGlobalCounter => '1.3.6.1.4.1.2021.16.2.1.5',
  logMatchGlobalCount => '1.3.6.1.4.1.2021.16.2.1.6',
  logMatchCurrentCounter => '1.3.6.1.4.1.2021.16.2.1.7',
  logMatchCurrentCount => '1.3.6.1.4.1.2021.16.2.1.8',
  logMatchCounter => '1.3.6.1.4.1.2021.16.2.1.9',
  logMatchCount => '1.3.6.1.4.1.2021.16.2.1.10',
  logMatchCycle => '1.3.6.1.4.1.2021.16.2.1.11',
  logMatchErrorFlag => '1.3.6.1.4.1.2021.16.2.1.100',
  logMatchErrorFlagDefinition => 'UCD-SNMP-MIB::UCDErrorFlag',
  logMatchRegExCompilation => '1.3.6.1.4.1.2021.16.2.1.101',
  version => '1.3.6.1.4.1.2021.100',
  versionIndex => '1.3.6.1.4.1.2021.100.1',
  versionTag => '1.3.6.1.4.1.2021.100.2',
  versionDate => '1.3.6.1.4.1.2021.100.3',
  versionCDate => '1.3.6.1.4.1.2021.100.4',
  versionIdent => '1.3.6.1.4.1.2021.100.5',
  versionConfigureOptions => '1.3.6.1.4.1.2021.100.6',
  versionClearCache => '1.3.6.1.4.1.2021.100.10',
  versionUpdateConfig => '1.3.6.1.4.1.2021.100.11',
  versionRestartAgent => '1.3.6.1.4.1.2021.100.12',
  versionSavePersistentData => '1.3.6.1.4.1.2021.100.13',
  versionDoDebugging => '1.3.6.1.4.1.2021.100.20',
  snmperrs => '1.3.6.1.4.1.2021.101',
  snmperrIndex => '1.3.6.1.4.1.2021.101.1',
  snmperrNames => '1.3.6.1.4.1.2021.101.2',
  snmperrErrorFlag => '1.3.6.1.4.1.2021.101.100',
  snmperrErrorFlagDefinition => 'UCD-SNMP-MIB::UCDErrorFlag',
  snmperrErrMessage => '1.3.6.1.4.1.2021.101.101',
  mrTable => '1.3.6.1.4.1.2021.102',
  mrEntry => '1.3.6.1.4.1.2021.102.1',
  mrIndex => '1.3.6.1.4.1.2021.102.1.1',
  mrModuleName => '1.3.6.1.4.1.2021.102.1.2',
  ucdSnmpAgent => '1.3.6.1.4.1.2021.250',
  hpux9 => '1.3.6.1.4.1.2021.250.1',
  sunos4 => '1.3.6.1.4.1.2021.250.2',
  solaris => '1.3.6.1.4.1.2021.250.3',
  osf => '1.3.6.1.4.1.2021.250.4',
  ultrix => '1.3.6.1.4.1.2021.250.5',
  hpux10 => '1.3.6.1.4.1.2021.250.6',
  netbsd1 => '1.3.6.1.4.1.2021.250.7',
  freebsd => '1.3.6.1.4.1.2021.250.8',
  irix => '1.3.6.1.4.1.2021.250.9',
  linux => '1.3.6.1.4.1.2021.250.10',
  bsdi => '1.3.6.1.4.1.2021.250.11',
  openbsd => '1.3.6.1.4.1.2021.250.12',
  win32 => '1.3.6.1.4.1.2021.250.13',
  hpux11 => '1.3.6.1.4.1.2021.250.14',
  aix => '1.3.6.1.4.1.2021.250.15',
  macosx => '1.3.6.1.4.1.2021.250.16',
  dragonfly => '1.3.6.1.4.1.2021.250.17',
  unknown => '1.3.6.1.4.1.2021.250.255',
  ucdTraps => '1.3.6.1.4.1.2021.251',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'UCD-SNMP-MIB'} = {
  UCDErrorFix => {
    '0' => 'noError',
    '1' => 'runFix',
  },
  UCDErrorFlag => {
    '0' => 'noError',
    '1' => 'error',
  },
};
package Monitoring::GLPlugin::SNMP::MibsAndOids::USAGEMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'USAGE-MIB'} = {
  url => '',
  name => 'USAGE-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'USAGE-MIB'} = {
  'deviceUsageTable' => '1.3.6.1.4.1.3417.2.4.1.1',
  'deviceUsageEntry' => '1.3.6.1.4.1.3417.2.4.1.1.1',
  'deviceUsageIndex' => '1.3.6.1.4.1.3417.2.4.1.1.1.1',
  'deviceUsageTrapEnabled' => '1.3.6.1.4.1.3417.2.4.1.1.1.2',
  'deviceUsageName' => '1.3.6.1.4.1.3417.2.4.1.1.1.3',
  'deviceUsagePercent' => '1.3.6.1.4.1.3417.2.4.1.1.1.4',
  'deviceUsageHigh' => '1.3.6.1.4.1.3417.2.4.1.1.1.5',
  'deviceUsageStatus' => '1.3.6.1.4.1.3417.2.4.1.1.1.6',
  'deviceUsageStatusDefinition' => {
    '1' => 'ok',
    '2' => 'high',
  },
  'deviceUsageTime' => '1.3.6.1.4.1.3417.2.4.1.1.1.7',
};




package Monitoring::GLPlugin::SNMP::MibsAndOids::VRRPMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'VRRP-MIB'} = {
  url => 'ftp://ftp.cisco.com/pub/mibs/v2/VRRP-MIB.my',
  name => 'VRRP-MIB'
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::requirements->{'VRRP-MIB'} = [
  'SNMPv2-TC-v1-MIB',
];

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'VRRP-MIB'} = {
  vrrpMIB => '.1.3.6.1.2.1.68',
  vrrpNotifications => '.1.3.6.1.2.1.68.0',
  vrrpTrapNewMaster => '.1.3.6.1.2.1.68.0.1',
  vrrpTrapAuthFailure => '.1.3.6.1.2.1.68.0.2',
  vrrpOperations => '.1.3.6.1.2.1.68.1',
  vrrpNodeVersion => '.1.3.6.1.2.1.68.1.1',
  vrrpNotificationCntl => '.1.3.6.1.2.1.68.1.2',
  vrrpOperTable => '.1.3.6.1.2.1.68.1.3',
  vrrpOperEntry => '.1.3.6.1.2.1.68.1.3.1',
  vrrpOperVrId => '.1.3.6.1.2.1.68.1.3.1.1',
  vrrpOperAuthKey => '.1.3.6.1.2.1.68.1.3.1.10',
  vrrpOperAdvertisementInterval => '.1.3.6.1.2.1.68.1.3.1.11',
  vrrpOperPreemptMode => '.1.3.6.1.2.1.68.1.3.1.12',
  vrrpOperVirtualRouterUpTime => '.1.3.6.1.2.1.68.1.3.1.13',
  vrrpOperProtocol => '.1.3.6.1.2.1.68.1.3.1.14',
  vrrpOperProtocolDefinition => 'VRRP-MIB::vrrpOperProtocol',
  vrrpOperRowStatus => '.1.3.6.1.2.1.68.1.3.1.15',
  vrrpOperRowStatusDefinition => 'SNMPv2-TC-v1-MIB::RowStatus',
  vrrpOperVirtualMacAddr => '.1.3.6.1.2.1.68.1.3.1.2',
  vrrpOperState => '.1.3.6.1.2.1.68.1.3.1.3',
  vrrpOperStateDefinition => 'VRRP-MIB::vrrpOperState',
  vrrpOperAdminState => '.1.3.6.1.2.1.68.1.3.1.4',
  vrrpOperAdminStateDefinition => 'VRRP-MIB::vrrpOperAdminState',
  vrrpOperPriority => '.1.3.6.1.2.1.68.1.3.1.5',
  vrrpOperIpAddrCount => '.1.3.6.1.2.1.68.1.3.1.6',
  vrrpOperMasterIpAddr => '.1.3.6.1.2.1.68.1.3.1.7',
  vrrpOperPrimaryIpAddr => '.1.3.6.1.2.1.68.1.3.1.8',
  vrrpOperAuthType => '.1.3.6.1.2.1.68.1.3.1.9',
  vrrpOperAuthTypeDefinition => 'VRRP-MIB::vrrpOperAuthType',
  vrrpAssoIpAddrTable => '.1.3.6.1.2.1.68.1.4',
  vrrpAssoIpAddrEntry => '.1.3.6.1.2.1.68.1.4.1',
  vrrpAssoIpAddr => '.1.3.6.1.2.1.68.1.4.1.1',
  vrrpAssoIpAddrRowStatus => '.1.3.6.1.2.1.68.1.4.1.2',
  vrrpAssoIpAddrRowStatusDefinition => 'SNMPv2-TC-v1-MIB::RowStatus',
  vrrpTrapPacketSrc => '.1.3.6.1.2.1.68.1.5',
  vrrpTrapAuthErrorType => '.1.3.6.1.2.1.68.1.6',
  vrrpTrapAuthErrorTypeDefinition => 'VRRP-MIB::vrrpTrapAuthErrorType',
  vrrpStatistics => '.1.3.6.1.2.1.68.2',
  vrrpRouterChecksumErrors => '.1.3.6.1.2.1.68.2.1',
  vrrpRouterVersionErrors => '.1.3.6.1.2.1.68.2.2',
  vrrpRouterVrIdErrors => '.1.3.6.1.2.1.68.2.3',
  vrrpRouterStatsTable => '.1.3.6.1.2.1.68.2.4',
  vrrpRouterStatsEntry => '.1.3.6.1.2.1.68.2.4.1',
  vrrpStatsBecomeMaster => '.1.3.6.1.2.1.68.2.4.1.1',
  vrrpStatsInvalidAuthType => '.1.3.6.1.2.1.68.2.4.1.10',
  vrrpStatsAuthTypeMismatch => '.1.3.6.1.2.1.68.2.4.1.11',
  vrrpStatsPacketLengthErrors => '.1.3.6.1.2.1.68.2.4.1.12',
  vrrpStatsAdvertiseRcvd => '.1.3.6.1.2.1.68.2.4.1.2',
  vrrpStatsAdvertiseIntervalErrors => '.1.3.6.1.2.1.68.2.4.1.3',
  vrrpStatsAuthFailures => '.1.3.6.1.2.1.68.2.4.1.4',
  vrrpStatsIpTtlErrors => '.1.3.6.1.2.1.68.2.4.1.5',
  vrrpStatsPriorityZeroPktsRcvd => '.1.3.6.1.2.1.68.2.4.1.6',
  vrrpStatsPriorityZeroPktsSent => '.1.3.6.1.2.1.68.2.4.1.7',
  vrrpStatsInvalidTypePktsRcvd => '.1.3.6.1.2.1.68.2.4.1.8',
  vrrpStatsAddressListErrors => '.1.3.6.1.2.1.68.2.4.1.9',
  vrrpConformance => '.1.3.6.1.2.1.68.3',
  vrrpMIBCompliances => '.1.3.6.1.2.1.68.3.1',
  vrrpMIBCompliance => '.1.3.6.1.2.1.68.3.1.1',
  vrrpMIBGroups => '.1.3.6.1.2.1.68.3.2',
  vrrpOperGroup => '.1.3.6.1.2.1.68.3.2.1',
  vrrpStatsGroup => '.1.3.6.1.2.1.68.3.2.2',
  vrrpTrapGroup => '.1.3.6.1.2.1.68.3.2.3',
  vrrpNotificationGroup => '.1.3.6.1.2.1.68.3.2.4'
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'VRRP-MIB'} = {
  vrrpOperAdminState => {
    '1' => 'up',
    '2' => 'down'
  },
  vrrpOperAuthType => {
    '1' => 'noAuthentication',
    '2' => 'simpleTextPassword',
    '3' => 'ipAuthenticationHeader'
  },
  vrrpOperProtocol => {
    '1' => 'ip',
    '2' => 'bridge',
    '3' => 'decnet',
    '4' => 'other'
  },
  vrrpOperState => {
    '1' => 'initialize',
    '2' => 'backup',
    '3' => 'master'
  },
  vrrpTrapAuthErrorType => {
    '1' => 'invalidAuthType',
    '2' => 'authTypeMismatch',
    '3' => 'authFailure'
  }
};


package Monitoring::GLPlugin::SNMP::MibsAndOids::WLSXSYSTEMEXTMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'WLSX-SYSTEMEXT-MIB'} = {
  url => '',
  name => 'WLSX-SYSTEMEXT-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::requirements->{'WLSX-SYSTEMEXT-MIB'} = [
  'ARUBA-TC-MIB',
];

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'WLSX-SYSTEMEXT-MIB'} = 
  '1.3.6.1.4.1.14823.2.2.1.2';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'WLSX-SYSTEMEXT-MIB'} = {
  'wlsxSystemExtMIB' => '1.3.6.1.4.1.14823.2.2.1.2',
  'wlsxSystemExtGroup' => '1.3.6.1.4.1.14823.2.2.1.2.1',
  'wlsxSysExtSwitchIp' => '1.3.6.1.4.1.14823.2.2.1.2.1.1',
  'wlsxSysExtHostname' => '1.3.6.1.4.1.14823.2.2.1.2.1.2',
  'wlsxSysExtModelName' => '1.3.6.1.4.1.14823.2.2.1.2.1.3',
  'wlsxSysExtSwitchRole' => '1.3.6.1.4.1.14823.2.2.1.2.1.4',
  'wlsxSysExtSwitchRoleDefinition' => 'ARUBA-TC-MIB::ArubaSwitchRole',
  'wlsxSysExtSwitchMasterIp' => '1.3.6.1.4.1.14823.2.2.1.2.1.5',
  'wlsxSysExtSwitchDate' => '1.3.6.1.4.1.14823.2.2.1.2.1.6',
  'wlsxSysExtSwitchBaseMacaddress' => '1.3.6.1.4.1.14823.2.2.1.2.1.7',
  'wlsxSysExtFanTrayAssemblyNumber' => '1.3.6.1.4.1.14823.2.2.1.2.1.8',
  'wlsxSysExtFanTraySerialNumber' => '1.3.6.1.4.1.14823.2.2.1.2.1.9',
  'wlsxSysExtInternalTemparature' => '1.3.6.1.4.1.14823.2.2.1.2.1.10',
  'wlsxSysExtLicenseSerialNumber' => '1.3.6.1.4.1.14823.2.2.1.2.1.11',
  'wlsxSysExtSwitchLicenseCount' => '1.3.6.1.4.1.14823.2.2.1.2.1.12',
  'wlsxSysExtProcessorTable' => '1.3.6.1.4.1.14823.2.2.1.2.1.13',
  'wlsxSysExtProcessorEntry' => '1.3.6.1.4.1.14823.2.2.1.2.1.13.1',
  'sysExtProcessorID' => '1.3.6.1.4.1.14823.2.2.1.2.1.13.1.1',
  'sysExtProcessorDescr' => '1.3.6.1.4.1.14823.2.2.1.2.1.13.1.2',
  'sysExtProcessorLoad' => '1.3.6.1.4.1.14823.2.2.1.2.1.13.1.3',
  'wlsxSysExtStorageTable' => '1.3.6.1.4.1.14823.2.2.1.2.1.14',
  'wlsxSysExtStorageEntry' => '1.3.6.1.4.1.14823.2.2.1.2.1.14.1',
  'sysExtStorageIndex' => '1.3.6.1.4.1.14823.2.2.1.2.1.14.1.1',
  'sysExtStorageType' => '1.3.6.1.4.1.14823.2.2.1.2.1.14.1.2',
  'sysExtStorageTypeDefinition' => 'WLSX-SYSTEMEXT-MIB::sysExtStorageType',
  'sysExtStorageSize' => '1.3.6.1.4.1.14823.2.2.1.2.1.14.1.3',
  'sysExtStorageUsed' => '1.3.6.1.4.1.14823.2.2.1.2.1.14.1.4',
  'sysExtStorageName' => '1.3.6.1.4.1.14823.2.2.1.2.1.14.1.5',
  'wlsxSysExtMemoryTable' => '1.3.6.1.4.1.14823.2.2.1.2.1.15',
  'wlsxSysExtMemoryEntry' => '1.3.6.1.4.1.14823.2.2.1.2.1.15.1',
  'sysExtMemoryIndex' => '1.3.6.1.4.1.14823.2.2.1.2.1.15.1.1',
  'sysExtMemorySize' => '1.3.6.1.4.1.14823.2.2.1.2.1.15.1.2',
  'sysExtMemoryUsed' => '1.3.6.1.4.1.14823.2.2.1.2.1.15.1.3',
  'sysExtMemoryFree' => '1.3.6.1.4.1.14823.2.2.1.2.1.15.1.4',
  'wlsxSysExtCardTable' => '1.3.6.1.4.1.14823.2.2.1.2.1.16',
  'wlsxSysExtCardEntry' => '1.3.6.1.4.1.14823.2.2.1.2.1.16.1',
  'sysExtCardSlot' => '1.3.6.1.4.1.14823.2.2.1.2.1.16.1.1',
  'sysExtCardType' => '1.3.6.1.4.1.14823.2.2.1.2.1.16.1.2',
  'sysExtCardNumOfPorts' => '1.3.6.1.4.1.14823.2.2.1.2.1.16.1.3',
  'sysExtCardNumOfFastethernetPorts' => '1.3.6.1.4.1.14823.2.2.1.2.1.16.1.4',
  'sysExtCardNumOfGigPorts' => '1.3.6.1.4.1.14823.2.2.1.2.1.16.1.5',
  'sysExtCardSerialNo' => '1.3.6.1.4.1.14823.2.2.1.2.1.16.1.6',
  'sysExtCardAssemblyNo' => '1.3.6.1.4.1.14823.2.2.1.2.1.16.1.7',
  'sysExtCardManufacturingDate' => '1.3.6.1.4.1.14823.2.2.1.2.1.16.1.8',
  'sysExtCardHwRevision' => '1.3.6.1.4.1.14823.2.2.1.2.1.16.1.9',
  'sysExtCardFpgaRevision' => '1.3.6.1.4.1.14823.2.2.1.2.1.16.1.10',
  'sysExtCardSwitchChip' => '1.3.6.1.4.1.14823.2.2.1.2.1.16.1.11',
  'sysExtCardStatus' => '1.3.6.1.4.1.14823.2.2.1.2.1.16.1.12',
  'sysExtCardUserSlot' => '1.3.6.1.4.1.14823.2.2.1.2.1.16.1.13',
  'wlsxSysExtFanTable' => '1.3.6.1.4.1.14823.2.2.1.2.1.17',
  'wlsxSysExtFanEntry' => '1.3.6.1.4.1.14823.2.2.1.2.1.17.1',
  'sysExtFanIndex' => '1.3.6.1.4.1.14823.2.2.1.2.1.17.1.1',
  'sysExtFanStatus' => '1.3.6.1.4.1.14823.2.2.1.2.1.17.1.2',
  'sysExtFanStatusDefinition' => 'ARUBA-TC-MIB::ArubaActiveState',
  'wlsxSysExtPowerSupplyTable' => '1.3.6.1.4.1.14823.2.2.1.2.1.18',
  'wlsxSysExtPowerSupplyEntry' => '1.3.6.1.4.1.14823.2.2.1.2.1.18.1',
  'sysExtPowerSupplyIndex' => '1.3.6.1.4.1.14823.2.2.1.2.1.18.1.1',
  'sysExtPowerSupplyStatus' => '1.3.6.1.4.1.14823.2.2.1.2.1.18.1.2',
  'sysExtPowerSupplyStatusDefinition' => 'ARUBA-TC-MIB::ArubaActiveState',
  'wlsxSysExtSwitchListTable' => '1.3.6.1.4.1.14823.2.2.1.2.1.19',
  'wlsxSysExtSwitchListEntry' => '1.3.6.1.4.1.14823.2.2.1.2.1.19.1',
  'sysExtSwitchIPAddress' => '1.3.6.1.4.1.14823.2.2.1.2.1.19.1.1',
  'sysExtSwitchRole' => '1.3.6.1.4.1.14823.2.2.1.2.1.19.1.2',
  'sysExtSwitchLocation' => '1.3.6.1.4.1.14823.2.2.1.2.1.19.1.3',
  'sysExtSwitchSWVersion' => '1.3.6.1.4.1.14823.2.2.1.2.1.19.1.4',
  'sysExtSwitchStatus' => '1.3.6.1.4.1.14823.2.2.1.2.1.19.1.5',
  'sysExtSwitchName' => '1.3.6.1.4.1.14823.2.2.1.2.1.19.1.6',
  'sysExtSwitchSerNo' => '1.3.6.1.4.1.14823.2.2.1.2.1.19.1.7',
  'wlsxSysExtSwitchLicenseTable' => '1.3.6.1.4.1.14823.2.2.1.2.1.20',
  'wlsxSysExtLicenseEntry' => '1.3.6.1.4.1.14823.2.2.1.2.1.20.1',
  'sysExtLicenseIndex' => '1.3.6.1.4.1.14823.2.2.1.2.1.20.1.1',
  'sysExtLicenseKey' => '1.3.6.1.4.1.14823.2.2.1.2.1.20.1.2',
  'sysExtLicenseInstalled' => '1.3.6.1.4.1.14823.2.2.1.2.1.20.1.3',
  'sysExtLicenseExpires' => '1.3.6.1.4.1.14823.2.2.1.2.1.20.1.4',
  'sysExtLicenseFlags' => '1.3.6.1.4.1.14823.2.2.1.2.1.20.1.5',
  'sysExtLicenseService' => '1.3.6.1.4.1.14823.2.2.1.2.1.20.1.6',
  'wlsxSysExtMMSCompatLevel' => '1.3.6.1.4.1.14823.2.2.1.2.1.21',
  'wlsxSysExtMMSConfigID' => '1.3.6.1.4.1.14823.2.2.1.2.1.22',
  'wlsxSysExtControllerConfigID' => '1.3.6.1.4.1.14823.2.2.1.2.1.23',
  'wlsxSysExtIsMMSConfigUpdateEnabled' => '1.3.6.1.4.1.14823.2.2.1.2.1.24',
  'wlsxSysExtSwitchLastReload' => '1.3.6.1.4.1.14823.2.2.1.2.1.25',
  'wlsxSystemExtTableGenNumberGroup' => '1.3.6.1.4.1.14823.2.2.1.2.2',
  'wlsxSysExtUserTableGenNumber' => '1.3.6.1.4.1.14823.2.2.1.2.2.1',
  'wlsxSysExtAPBssidTableGenNumber' => '1.3.6.1.4.1.14823.2.2.1.2.2.2',
  'wlsxSysExtAPRadioTableGenNumber' => '1.3.6.1.4.1.14823.2.2.1.2.2.3',
  'wlsxSysExtAPTableGenNumber' => '1.3.6.1.4.1.14823.2.2.1.2.2.4',
  'wlsxSysExtSwitchListTableGenNumber' => '1.3.6.1.4.1.14823.2.2.1.2.2.5',
  'wlsxSysExtPortTableGenNumber' => '1.3.6.1.4.1.14823.2.2.1.2.2.6',
  'wlsxSysExtVlanTableGenNumber' => '1.3.6.1.4.1.14823.2.2.1.2.2.7',
  'wlsxSysExtVlanInterfaceTableGenNumber' => '1.3.6.1.4.1.14823.2.2.1.2.2.8',
  'wlsxSysExtLicenseTableGenNumber' => '1.3.6.1.4.1.14823.2.2.1.2.2.9',
  'wlsxSysExtMonAPTableGenNumber' => '1.3.6.1.4.1.14823.2.2.1.2.2.10',
  'wlsxSysExtMonStationTableGenNumber' => '1.3.6.1.4.1.14823.2.2.1.2.2.11',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'WLSX-SYSTEMEXT-MIB'} = {
  'sysExtStorageType' => {
    '1' => 'ram',
    '2' => 'flashMemory',
  },
};



package Monitoring::GLPlugin::SNMP::MibsAndOids::WLSXWLANMIB;

$Monitoring::GLPlugin::SNMP::MibsAndOids::origin->{'WLSX-WLAN-MIB'} = {
  url => '',
  name => 'WLSX-WLAN-MIB',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::mib_ids->{'WLSX-WLAN-MIB'} = 
  '1.3.6.1.4.1.14823.2.2.1.5';

$Monitoring::GLPlugin::SNMP::MibsAndOids::mibs_and_oids->{'WLSX-WLAN-MIB'} = {
  'wlsxWlanMIB' => '1.3.6.1.4.1.14823.2.2.1.5',
  'wlsxWlanConfigGroup' => '1.3.6.1.4.1.14823.2.2.1.5.1',
  'wlsxWlanStateGroup' => '1.3.6.1.4.1.14823.2.2.1.5.2',
  'wlsxWlanAccessPointInfoGroup' => '1.3.6.1.4.1.14823.2.2.1.5.2.1',
  'wlsxWlanTotalNumAccessPoints' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.1',
  'wlsxWlanTotalNumStationsAssociated' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.2',
  'wlsxWlanAPGroupTable' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.3',
  'wlsxWlanAPGroupEntry' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.3.1',
  'wlanAPGroup' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.3.1.1',
  'wlanAPNumAps' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.3.1.2',
  'wlsxWlanAPTable' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4',
  'wlsxWlanAPEntry' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1',
  'wlanAPMacAddress' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1.1',
  'wlanAPIpAddress' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1.2',
  'wlanAPName' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1.3',
  'wlanAPGroupName' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1.4',
  'wlanAPModel' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1.5',
  'wlanAPSerialNumber' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1.6',
  'wlanAPdot11aAntennaGain' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1.7',
  'wlanAPdot11gAntennaGain' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1.8',
  'wlanAPNumRadios' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1.9',
  'wlanAPEnet1Mode' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1.10',
  'wlanAPIpsecMode' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1.11',
  'wlanAPUpTime' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1.12',
  'wlanAPModelName' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1.13',
  'wlanAPLocation' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1.14',
  'wlanAPBuilding' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1.15',
  'wlanAPFloor' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1.16',
  'wlanAPLoc' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1.17',
  'wlanAPExternalAntenna' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1.18',
  'wlanAPStatus' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1.19',
  'wlanAPStatusDefinition' => {
    '1' => 'up',
    '2' => 'down',
  },
  'wlanAPNumBootstraps' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1.20',
  'wlanAPNumReboots' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1.21',
  'wlanAPUnprovisioned' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1.22',
  'wlanAPMonitorMode' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1.23',
  'wlanAPFQLNBuilding' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1.24',
  'wlanAPFQLNFloor' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1.25',
  'wlanAPFQLN' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1.26',
  'wlanAPFQLNCampus' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.4.1.27',
  'wlsxWlanRadioTable' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.5',
  'wlsxWlanRadioEntry' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.5.1',
  'wlanAPRadioNumber' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.5.1.1',
  'wlanAPRadioType' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.5.1.2',
  'wlanAPRadioChannel' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.5.1.3',
  'wlanAPRadioTransmitPower' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.5.1.4',
  'wlanAPRadioMode' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.5.1.5',
  'wlanAPRadioUtilization' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.5.1.6',
  'wlanAPRadioNumAssociatedClients' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.5.1.7',
  'wlanAPRadioNumMonitoredClients' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.5.1.8',
  'wlanAPRadioNumActiveBSSIDs' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.5.1.9',
  'wlanAPRadioNumMonitoredBSSIDs' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.5.1.10',
  'wlsxWlanAPBssidTable' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.7',
  'wlsxWlanAPBssidEntry' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.7.1',
  'wlanAPBSSID' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.7.1.1',
  'wlanAPESSID' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.7.1.2',
  'wlanAPBssidSlot' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.7.1.3',
  'wlanAPBssidPort' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.7.1.4',
  'wlanAPBssidPhyType' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.7.1.5',
  'wlanAPBssidRogueType' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.7.1.6',
  'wlanAPBssidMode' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.7.1.7',
  'wlanAPBssidModeDefinition' => 'WLSX-WLAN-MIB::wlanAPBssidMode',
  'wlanAPBssidChannel' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.7.1.8',
  'wlanAPBssidUpTime' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.7.1.9',
  'wlanAPBssidInactiveTime' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.7.1.10',
  'wlanAPBssidLoadBalancing' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.7.1.11',
  'wlanAPBssidNumAssociatedStations' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.7.1.12',
  'wlanAPBssidAPMacAddress' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.7.1.13',
  'wlanAPBssidPhyNumber' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.7.1.14',
  'wlsxWlanESSIDTable' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.8',
  'wlsxWlanESSIDEntry' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.8.1',
  'wlanESSID' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.8.1.1',
  'wlanESSIDNumStations' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.8.1.2',
  'wlanESSIDNumAccessPointsUp' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.8.1.3',
  'wlanESSIDNumAccessPointsDown' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.8.1.4',
  'wlanESSIDEncryptionType' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.8.1.5',
  'wlsxWlanESSIDVlanPoolTable' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.9',
  'wlsxWlanESSIDVlanPoolEntry' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.9.1',
  'wlanESSIDVlanId' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.9.1.1',
  'wlanESSIDVlanPoolStatus' => '1.3.6.1.4.1.14823.2.2.1.5.2.1.9.1.2',
  'wlsxWlanStationInfoGroup' => '1.3.6.1.4.1.14823.2.2.1.5.2.2',
  'wlsxWlanStationTable' => '1.3.6.1.4.1.14823.2.2.1.5.2.2.1',
  'wlsxWlanStationEntry' => '1.3.6.1.4.1.14823.2.2.1.5.2.2.1.1',
  'wlanStaPhyAddress' => '1.3.6.1.4.1.14823.2.2.1.5.2.2.1.1.1',
  'wlanStaApBssid' => '1.3.6.1.4.1.14823.2.2.1.5.2.2.1.1.2',
  'wlanStaPhyType' => '1.3.6.1.4.1.14823.2.2.1.5.2.2.1.1.3',
  'wlanStaIsAuthenticated' => '1.3.6.1.4.1.14823.2.2.1.5.2.2.1.1.4',
  'wlanStaIsAssociated' => '1.3.6.1.4.1.14823.2.2.1.5.2.2.1.1.5',
  'wlanStaChannel' => '1.3.6.1.4.1.14823.2.2.1.5.2.2.1.1.6',
  'wlanStaVlanId' => '1.3.6.1.4.1.14823.2.2.1.5.2.2.1.1.7',
  'wlanStaVOIPState' => '1.3.6.1.4.1.14823.2.2.1.5.2.2.1.1.8',
  'wlanStaVOIPProtocol' => '1.3.6.1.4.1.14823.2.2.1.5.2.2.1.1.9',
  'wlanStaTransmitRate' => '1.3.6.1.4.1.14823.2.2.1.5.2.2.1.1.10',
  'wlanStaAssociationID' => '1.3.6.1.4.1.14823.2.2.1.5.2.2.1.1.11',
  'wlanStaAccessPointESSID' => '1.3.6.1.4.1.14823.2.2.1.5.2.2.1.1.12',
  'wlanStaPhyNumber' => '1.3.6.1.4.1.14823.2.2.1.5.2.2.1.1.13',
  'wlanStaRSSI' => '1.3.6.1.4.1.14823.2.2.1.5.2.2.1.1.14',
  'wlanStaUpTime' => '1.3.6.1.4.1.14823.2.2.1.5.2.2.1.1.15',
  'wlsxWlanStaAssociationFailureTable' => '1.3.6.1.4.1.14823.2.2.1.5.2.2.2',
  'wlsxWlanStaAssociationFailureEntry' => '1.3.6.1.4.1.14823.2.2.1.5.2.2.2.1',
  'wlanStaAssocFailureApName' => '1.3.6.1.4.1.14823.2.2.1.5.2.2.2.1.1',
  'wlanStaAssocFailureApEssid' => '1.3.6.1.4.1.14823.2.2.1.5.2.2.2.1.2',
  'wlanStaAssocFailurePhyNum' => '1.3.6.1.4.1.14823.2.2.1.5.2.2.2.1.3',
  'wlanStaAssocFailurePhyType' => '1.3.6.1.4.1.14823.2.2.1.5.2.2.2.1.4',
  'wlanStaAssocFailureElapsedTime' => '1.3.6.1.4.1.14823.2.2.1.5.2.2.2.1.5',
  'wlanStaAssocFailureReason' => '1.3.6.1.4.1.14823.2.2.1.5.2.2.2.1.6',
  'wlsxWlanAssociationInfoGroup' => '1.3.6.1.4.1.14823.2.2.1.5.2.3',
  'wlsxWlanStatsGroup' => '1.3.6.1.4.1.14823.2.2.1.5.3',
  'wlsxWlanAccessPointStatsGroup' => '1.3.6.1.4.1.14823.2.2.1.5.3.1',
  'wlsxWlanAPStatsTable' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.1',
  'wlsxWlanAPStatsEntry' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.1.1',
  'wlanAPCurrentChannel' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.1.1.1',
  'wlanAPNumClients' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.1.1.2',
  'wlanAPTxPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.1.1.3',
  'wlanAPTxBytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.1.1.4',
  'wlanAPRxPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.1.1.5',
  'wlanAPRxBytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.1.1.6',
  'wlanAPTxDeauthentications' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.1.1.7',
  'wlanAPRxDeauthentications' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.1.1.8',
  'wlanAPChannelThroughput' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.1.1.9',
  'wlanAPFrameRetryRate' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.1.1.10',
  'wlanAPFrameLowSpeedRate' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.1.1.11',
  'wlanAPFrameNonUnicastRate' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.1.1.12',
  'wlanAPFrameFragmentationRate' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.1.1.13',
  'wlanAPFrameBandwidthRate' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.1.1.14',
  'wlanAPFrameRetryErrorRate' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.1.1.15',
  'wlanAPChannelErrorRate' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.1.1.16',
  'wlanAPFrameReceiveErrorRate' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.1.1.17',
  'wlanAPRxDataPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.1.1.18',
  'wlanAPRxDataBytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.1.1.19',
  'wlanAPTxDataPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.1.1.20',
  'wlanAPTxDataBytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.1.1.21',
  'wlanAPRxDataPkts64' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.1.1.22',
  'wlanAPRxDataBytes64' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.1.1.23',
  'wlanAPTxDataPkts64' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.1.1.24',
  'wlanAPTxDataBytes64' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.1.1.25',
  'wlsxWlanAPRateStatsTable' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.2',
  'wlsxWlanAPRateStatsEntry' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.2.1',
  'wlanAPStatsTotPktsAt1Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.2.1.1',
  'wlanAPStatsTotBytesAt1Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.2.1.2',
  'wlanAPStatsTotPktsAt2Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.2.1.3',
  'wlanAPStatsTotBytesAt2Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.2.1.4',
  'wlanAPStatsTotPktsAt5Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.2.1.5',
  'wlanAPStatsTotBytesAt5Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.2.1.6',
  'wlanAPStatsTotPktsAt11Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.2.1.7',
  'wlanAPStatsTotBytesAt11Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.2.1.8',
  'wlanAPStatsTotPktsAt6Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.2.1.9',
  'wlanAPStatsTotBytesAt6Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.2.1.10',
  'wlanAPStatsTotPktsAt12Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.2.1.11',
  'wlanAPStatsTotBytesAt12Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.2.1.12',
  'wlanAPStatsTotPktsAt18Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.2.1.13',
  'wlanAPStatsTotBytesAt18Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.2.1.14',
  'wlanAPStatsTotPktsAt24Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.2.1.15',
  'wlanAPStatsTotBytesAt24Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.2.1.16',
  'wlanAPStatsTotPktsAt36Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.2.1.17',
  'wlanAPStatsTotBytesAt36Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.2.1.18',
  'wlanAPStatsTotPktsAt48Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.2.1.19',
  'wlanAPStatsTotBytesAt48Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.2.1.20',
  'wlanAPStatsTotPktsAt54Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.2.1.21',
  'wlanAPStatsTotBytesAt54Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.2.1.22',
  'wlanAPStatsTotPktsAt9Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.2.1.23',
  'wlanAPStatsTotBytesAt9Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.2.1.24',
  'wlsxWlanAPDATypeStatsTable' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.3',
  'wlsxWlanAPDATypeStatsEntry' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.3.1',
  'wlanAPStatsTotDABroadcastPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.3.1.1',
  'wlanAPStatsTotDABroadcastBytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.3.1.2',
  'wlanAPStatsTotDAMulticastPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.3.1.3',
  'wlanAPStatsTotDAMulticastBytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.3.1.4',
  'wlanAPStatsTotDAUnicastPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.3.1.5',
  'wlanAPStatsTotDAUnicastBytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.3.1.6',
  'wlsxWlanAPFrameTypeStatsTable' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.4',
  'wlsxWlanAPFrameTypeStatsEntry' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.4.1',
  'wlanAPStatsTotMgmtPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.4.1.1',
  'wlanAPStatsTotMgmtBytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.4.1.2',
  'wlanAPStatsTotCtrlPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.4.1.3',
  'wlanAPStatsTotCtrlBytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.4.1.4',
  'wlanAPStatsTotDataPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.4.1.5',
  'wlanAPStatsTotDataBytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.4.1.6',
  'wlsxWlanAPPktSizeStatsTable' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.5',
  'wlsxWlanAPPktSizeStatsEntry' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.5.1',
  'wlanAPStatsPkts63Bytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.5.1.1',
  'wlanAPStatsPkts64To127' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.5.1.2',
  'wlanAPStatsPkts128To255' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.5.1.3',
  'wlanAPStatsPkts256To511' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.5.1.4',
  'wlanAPStatsPkts512To1023' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.5.1.5',
  'wlanAPStatsPkts1024To1518' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.5.1.6',
  'wlsxWlanAPChStatsTable' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.6',
  'wlsxWlanAPChStatsEntry' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.6.1',
  'wlanAPChannelNumber' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.6.1.1',
  'wlanAPChNumStations' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.6.1.2',
  'wlanAPChTotPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.6.1.3',
  'wlanAPChTotBytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.6.1.4',
  'wlanAPChTotRetryPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.6.1.5',
  'wlanAPChTotFragmentedPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.6.1.6',
  'wlanAPChTotPhyErrPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.6.1.7',
  'wlanAPChTotMacErrPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.6.1.8',
  'wlanAPChNoise' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.6.1.9',
  'wlanAPChCoverageIndex' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.6.1.10',
  'wlanAPChInterferenceIndex' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.6.1.11',
  'wlanAPChFrameRetryRate' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.6.1.12',
  'wlanAPChFrameLowSpeedRate' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.6.1.13',
  'wlanAPChFrameNonUnicastRate' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.6.1.14',
  'wlanAPChFrameFragmentationRate' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.6.1.15',
  'wlanAPChFrameBandwidthRate' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.6.1.16',
  'wlanAPChFrameRetryErrorRate' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.6.1.17',
  'wlanAPChBusyRate' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.6.1.18',
  'wlanAPChNumAPs' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.6.1.19',
  'wlanAPChFrameReceiveErrorRate' => '1.3.6.1.4.1.14823.2.2.1.5.3.1.6.1.20',
  'wlsxWlanStationStatsGroup' => '1.3.6.1.4.1.14823.2.2.1.5.3.2',
  'wlsxWlanStationStatsTable' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.1',
  'wlsxWlanStationStatsEntry' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.1.1',
  'wlanStaChannelNum' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.1.1.1',
  'wlanStaTxPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.1.1.2',
  'wlanStaTxBytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.1.1.3',
  'wlanStaRxPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.1.1.4',
  'wlanStaRxBytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.1.1.5',
  'wlanStaTxBCastPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.1.1.6',
  'wlanStaRxBCastBytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.1.1.7',
  'wlanStaTxMCastPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.1.1.8',
  'wlanStaRxMCastBytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.1.1.9',
  'wlanStaDataPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.1.1.10',
  'wlanStaCtrlPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.1.1.11',
  'wlanStaNumAssocRequests' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.1.1.12',
  'wlanStaNumAuthRequests' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.1.1.13',
  'wlanStaTxDeauthentications' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.1.1.14',
  'wlanStaRxDeauthentications' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.1.1.15',
  'wlanStaFrameRetryRate' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.1.1.16',
  'wlanStaFrameLowSpeedRate' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.1.1.17',
  'wlanStaFrameNonUnicastRate' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.1.1.18',
  'wlanStaFrameFragmentationRate' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.1.1.19',
  'wlanStaFrameBandwidthRate' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.1.1.20',
  'wlanStaFrameRetryErrorRate' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.1.1.21',
  'wlanStaFrameReceiveErrorRate' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.1.1.22',
  'wlanStaTxBCastBytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.1.1.23',
  'wlanStaTxMCastBytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.1.1.24',
  'wlsxWlanStaRateStatsTable' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2',
  'wlsxWlanStaRateStatsEntry' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1',
  'wlanStaTxPktsAt1Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.1',
  'wlanStaTxBytesAt1Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.2',
  'wlanStaTxPktsAt2Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.3',
  'wlanStaTxBytesAt2Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.4',
  'wlanStaTxPktsAt5Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.5',
  'wlanStaTxBytesAt5Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.6',
  'wlanStaTxPktsAt11Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.7',
  'wlanStaTxBytesAt11Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.8',
  'wlanStaTxPktsAt6Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.9',
  'wlanStaTxBytesAt6Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.10',
  'wlanStaTxPktsAt12Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.11',
  'wlanStaTxBytesAt12Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.12',
  'wlanStaTxPktsAt18Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.13',
  'wlanStaTxBytesAt18Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.14',
  'wlanStaTxPktsAt24Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.15',
  'wlanStaTxBytesAt24Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.16',
  'wlanStaTxPktsAt36Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.17',
  'wlanStaTxBytesAt36Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.18',
  'wlanStaTxPktsAt48Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.19',
  'wlanStaTxBytesAt48Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.20',
  'wlanStaTxPktsAt54Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.21',
  'wlanStaTxBytesAt54Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.22',
  'wlanStaRxPktsAt1Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.23',
  'wlanStaRxBytesAt1Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.24',
  'wlanStaRxPktsAt2Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.25',
  'wlanStaRxBytesAt2Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.26',
  'wlanStaRxPktsAt5Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.27',
  'wlanStaRxBytesAt5Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.28',
  'wlanStaRxPktsAt11Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.29',
  'wlanStaRxBytesAt11Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.30',
  'wlanStaRxPktsAt6Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.31',
  'wlanStaRxBytesAt6Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.32',
  'wlanStaRxPktsAt12Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.33',
  'wlanStaRxBytesAt12Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.34',
  'wlanStaRxPktsAt18Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.35',
  'wlanStaRxBytesAt18Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.36',
  'wlanStaRxPktsAt24Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.37',
  'wlanStaRxBytesAt24Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.38',
  'wlanStaRxPktsAt36Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.39',
  'wlanStaRxBytesAt36Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.40',
  'wlanStaRxPktsAt48Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.41',
  'wlanStaRxBytesAt48Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.42',
  'wlanStaRxPktsAt54Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.43',
  'wlanStaRxBytesAt54Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.44',
  'wlanStaTxPktsAt9Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.45',
  'wlanStaTxBytesAt9Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.46',
  'wlanStaRxPktsAt9Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.47',
  'wlanStaRxBytesAt9Mbps' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.2.1.48',
  'wlsxWlanStaDATypeStatsTable' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.3',
  'wlsxWlanStaDATypeStatsEntry' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.3.1',
  'wlanStaTxDABroadcastPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.3.1.1',
  'wlanStaTxDABroadcastBytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.3.1.2',
  'wlanStaTxDAMulticastPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.3.1.3',
  'wlanStaTxDAMulticastBytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.3.1.4',
  'wlanStaTxDAUnicastPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.3.1.5',
  'wlanStaTxDAUnicastBytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.3.1.6',
  'wlsxWlanStaFrameTypeStatsTable' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.4',
  'wlsxWlanStaFrameTypeStatsEntry' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.4.1',
  'wlanStaTxMgmtPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.4.1.1',
  'wlanStaTxMgmtBytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.4.1.2',
  'wlanStaTxCtrlPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.4.1.3',
  'wlanStaTxCtrlBytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.4.1.4',
  'wlanStaTxDataPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.4.1.5',
  'wlanStaTxDataBytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.4.1.6',
  'wlanStaRxMgmtPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.4.1.7',
  'wlanStaRxMgmtBytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.4.1.8',
  'wlanStaRxCtrlPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.4.1.9',
  'wlanStaRxCtrlBytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.4.1.10',
  'wlanStaRxDataPkts' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.4.1.11',
  'wlanStaRxDataBytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.4.1.12',
  'wlsxWlanStaPktSizeStatsTable' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.5',
  'wlsxWlanStaPktSizeStatsEntry' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.5.1',
  'wlanStaTxPkts63Bytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.5.1.1',
  'wlanStaTxPkts64To127' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.5.1.2',
  'wlanStaTxPkts128To255' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.5.1.3',
  'wlanStaTxPkts256To511' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.5.1.4',
  'wlanStaTxPkts512To1023' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.5.1.5',
  'wlanStaTxPkts1024To1518' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.5.1.6',
  'wlanStaRxPkts63Bytes' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.5.1.7',
  'wlanStaRxPkts64To127' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.5.1.8',
  'wlanStaRxPkts128To255' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.5.1.9',
  'wlanStaRxPkts256To511' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.5.1.10',
  'wlanStaRxPkts512To1023' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.5.1.11',
  'wlanStaRxPkts1024To1518' => '1.3.6.1.4.1.14823.2.2.1.5.3.2.5.1.12',
  'wlsxWlanSwitchStatsGroup' => '1.3.6.1.4.1.14823.2.2.1.5.3.3',
  'wlsxWlanEthStatsTable' => '1.3.6.1.4.1.14823.2.2.1.5.3.3.2',
  'wlsxWlanEthStatsEntry' => '1.3.6.1.4.1.14823.2.2.1.5.3.3.2.1',
  'wlanEthRxRate' => '1.3.6.1.4.1.14823.2.2.1.5.3.3.2.1.1',
  'wlanEthTxRate' => '1.3.6.1.4.1.14823.2.2.1.5.3.3.2.1.2',
};

$Monitoring::GLPlugin::SNMP::MibsAndOids::definitions->{'WLSX-WLAN-MIB'} = {
  'wlanAPBssidMode' => {
    '1' => 'ap',
    '2' => 'am',
  },
};



package Monitoring::GLPlugin::SNMP::CSF;
#our @ISA = qw(Monitoring::GLPlugin::SNMP);
use Digest::MD5 qw(md5_hex);
use strict;

sub create_statefile {
  my ($self, %params) = @_;
  my $extension = "";
  $extension .= $params{name} ? '_'.$params{name} : '';
  if ($self->opts->community) {
    $extension .= md5_hex($self->opts->community);
  }
  if ($self->opts->contextname) {
    $extension .= $self->opts->contextname;
  }
  $extension =~ s/\//_/g;
  $extension =~ s/\(/_/g;
  $extension =~ s/\)/_/g;
  $extension =~ s/\*/_/g;
  $extension =~ s/\s/_/g;
  if ($self->opts->snmpwalk && ! $self->opts->hostname) {
    return sprintf "%s/%s_%s%s", $self->statefilesdir(),
        'snmpwalk.file'.md5_hex($self->opts->snmpwalk),
        $self->clean_path($self->mode), $self->clean_path(lc $extension);
  } elsif ($self->opts->snmpwalk && $self->opts->hostname eq "walkhost") {
    return sprintf "%s/%s_%s%s", $self->statefilesdir(),
        'snmpwalk.file'.md5_hex($self->opts->snmpwalk),
        $self->clean_path($self->mode), $self->clean_path(lc $extension);
  } else {
    return sprintf "%s/%s_%s%s", $self->statefilesdir(),
        $self->opts->hostname,
        $self->clean_path($self->mode), $self->clean_path(lc $extension);
  }
}



package Monitoring::GLPlugin::SNMP::Item;
our @ISA = qw(Monitoring::GLPlugin::SNMP::CSF Monitoring::GLPlugin::Item Monitoring::GLPlugin::SNMP);
use strict;



package Monitoring::GLPlugin::SNMP::TableItem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::CSF Monitoring::GLPlugin::TableItem Monitoring::GLPlugin::SNMP);
use strict;

sub ensure_index {
  my ($self, $key) = @_;
  $self->{$key} ||= $self->{flat_indices};
}

sub unhex_ip {
  my ($self, $value) = @_;
  if ($value && $value =~ /^0x(\w{8})/) {
    $value = join(".", unpack "C*", pack "H*", $1);
  } elsif ($value && $value =~ /^0x(\w{2} \w{2} \w{2} \w{2})/) {
    $value = $1;
    $value =~ s/ //g;
    $value = join(".", unpack "C*", pack "H*", $value);
  } elsif ($value && $value =~ /^([A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2})/i) {
    $value = $1;
    $value =~ s/ //g;
    $value = join(".", unpack "C*", pack "H*", $value);
  } elsif ($value && unpack("H8", $value) =~ /(\w{2})(\w{2})(\w{2})(\w{2})/) {
    $value = join(".", map { hex($_) } ($1, $2, $3, $4));
  }
  return $value;
}

sub compact_v6 {
  my ($self, $addr) = @_;

  my @o = split /:/, $addr;
  return $addr unless @o and grep { $_ =~ m/^0+$/ } @o;

  my @candidates	= ();
  my $start		= undef;

  for my $i (0 .. $#o) {
    if (defined $start) {
      if ($o[$i] !~ m/^0+$/) {
        push @candidates, [ $start, $i - $start ];
        $start = undef;
      }
    } else {
      $start = $i if $o[$i] =~ m/^0+$/;
    }
  }

  push @candidates, [$start, 8 - $start] if defined $start;

  my $l = (sort { $b->[1] <=> $a->[1] } @candidates)[0];

  return $addr unless defined $l;

  $addr = $l->[0] == 0 ? '' : join ':', @o[0 .. $l->[0] - 1];
  $addr .= '::';
  $addr .= join ':', @o[$l->[0] + $l->[1] .. $#o];
  $addr =~ s/(^|:)0{1,3}/$1/g;

  return $addr;
}

sub old_unhex_ipv6 {
  my ($self, $value) = @_;
  if (! defined $value) {
    return $value; # tut mir leid
  } elsif ($value =~ /^0x(\w{32})/) {
    $value = join(":", unpack "C*", pack "H*", $1);
  } elsif ($value && $value =~ /^0x(\w{2} \w{2} \w{2} \w{2} \w{2} \w{2} \w{2} \w{2} \w{2} \w{2} \w{2} \w{2} \w{2} \w{2} \w{2} \w{2})/) {
    $value = $1;
    $value =~ s/ //g;
    $value = join(":", unpack "C*", pack "H*", $value);
  } elsif ($value =~ /^([A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2})/i) {
    $value = $1;
    $value =~ s/ //g;
    $value = join(":", unpack "C*", pack "H*", $value);
  } elsif (unpack("H*", $value) =~ /^([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/i) {
	  #$value = join(":", unpack "C*", pack "H*", $value);
    $value = join(":", ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16));
  }
  return $self->compact_v6($value);
}

sub unhex_ipv6 {
  my ($self, $value) = @_;
  my @octets = ();
  if (! defined $value) {
    return $value; # tut mir leid
  } elsif ($value =~ /^0x(\w{32})/) {
    @octets = unpack "H2" x 16, pack "H*", $1;
  } elsif ($value && $value =~ /^0x(\w{2} \w{2} \w{2} \w{2} \w{2} \w{2} \w{2} \w{2} \w{2} \w{2} \w{2} \w{2} \w{2} \w{2} \w{2} \w{2})/) {
    $value = $1;
    @octets = split(" ", $value);
  } elsif ($value =~ /^([A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2} [A-Z0-9]{2})/i) {
    $value = $1;
    $value =~ s/ //g;
    @octets = unpack "H2" x 16, pack "H*", $value;
  } elsif (unpack("H*", $value) =~ /^([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})/i) {
    @octets = ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14, $15, $16);
  }
  $value = join(":",
      map { my $idx = 2*$_; $octets[$idx].$octets[$idx+1] } (0..7)
  );
  return $value;
  return $self->compact_v6($value);
}

sub unhex_mac {
  my ($self, $value) = @_;
  if ($value && $value =~ /^0x(\w{12})/) {
    $value = join(".", unpack "C*", pack "H*", $1);
  } elsif ($value && $value =~ /^0x(\w{2}\s*\w{2}\s*\w{2}\s*\w{2}\s*\w{2}\s*\w{2})/) {
    $value = $1;
    $value =~ s/ //g;
    $value = join(":", unpack "C*", pack "H*", $value);
  } elsif ($value && unpack("H12", $value) =~ /(\w{2})(\w{2})(\w{2})(\w{2})(\w{2})(\w{2})/) {
    $value = join(":", ($1, $2, $3, $4, $5, $6));
  }
  return $value;
}

sub unhex_octet_string {
  my ($self, $value) = @_;
  my $original = $value;
  $value =~ s/ //g;
  if ($value && $value =~ /^0x([0-9a-zA-Z]+)$/) {
    $value = join("", unpack "A*", pack "H*", $1);
  } elsif ($value && $value =~ /^([0-9a-zA-Z]+)$/) {
    $value = join("", unpack "A*", pack "H*", $1);
  } else {
    $value = $original;
  }
  return $value;
}



package Monitoring::GLPlugin::UPNP;
our @ISA = qw(Monitoring::GLPlugin);
# ABSTRACT: helper functions to build a upnp-based monitoring plugin

use strict;
use File::Basename;
use Digest::MD5 qw(md5_hex);
use AutoLoader;
our $AUTOLOAD;

use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };

{
  our $mode = undef;
  our $plugin = undef;
  our $blacklist = undef;
  our $session = undef;
  our $rawdata = {};
  our $info = [];
  our $extendedinfo = [];
  our $summary = [];
  our $oidtrace = [];
  our $uptime = 0;
}

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::walk/) {
  } elsif ($self->mode =~ /device::uptime/) {
    my $info = sprintf 'device is up since %s',
        $self->human_timeticks($self->{uptime});
    $self->add_info($info);
    $self->set_thresholds(warning => '15:', critical => '5:');
    $self->add_message($self->check_thresholds($self->{uptime}), $info);
    $self->add_perfdata(
        label => 'uptime',
        value => $self->{uptime} / 60,
        warning => $self->{warning},
        critical => $self->{critical},
    );
    my ($code, $message) = $self->check_messages(join => ', ', join_all => ', ');
    $Monitoring::GLPlugin::plugin->nagios_exit($code, $message);
  }
}

sub check_upnp_and_model {
  my ($self) = @_;
  if (eval "require SOAP::Lite") {
    require XML::LibXML;
  } else {
    $self->add_critical('could not find SOAP::Lite module');
  }
  $self->{services} = {};
  if (! $self->check_messages()) {
    eval {
      my $igddesc = sprintf "http://%s:%s/igddesc.xml",
          $self->opts->hostname, $self->opts->port;
      my $parser = XML::LibXML->new();
      my $doc = $parser->parse_file($igddesc);
      my $root = $doc->documentElement();
      my $xpc = XML::LibXML::XPathContext->new( $root );
      $xpc->registerNs('n', 'urn:schemas-upnp-org:device-1-0');
      $self->{productname} = $xpc->findvalue('(//n:device)[position()=1]/n:modelName' );
      $self->debug(sprintf "igddesc productname is %s", $self->{productname});
      my @services = ();
      my @servicedescs = $xpc->find('(//n:service)')->get_nodelist;
      foreach my $service (@servicedescs) {
        my $servicetype = undef;
        my $serviceid = undef;
        my $controlurl = undef;
        foreach my $node ($service->nonBlankChildNodes("./*")) {
          $serviceid = $node->textContent if ($node->nodeName eq "serviceId");
          $servicetype = $node->textContent if ($node->nodeName eq "serviceType");
          $controlurl = $node->textContent if ($node->nodeName eq "controlURL");
        }
        if ($serviceid && $controlurl) {
          push(@services, {
              serviceType => $servicetype,
              serviceId => $serviceid,
              controlURL => sprintf('http://%s:%s%s',
                  $self->opts->hostname, $self->opts->port, $controlurl),
          });
          $self->debug(sprintf "found %s service %s",
              $servicetype, $serviceid);
        }
      }
      $self->set_variable('services', \@services);
    };
    if ($@) {
      $self->add_critical($@);
    }
  }
  if (! $self->check_messages()) {
    eval {
      my $service = (grep { $_->{serviceId} =~ /WANIPConn1/ } @{$self->get_variable('services')})[0];
      my $som = SOAP::Lite
          -> proxy($service->{controlURL})
          -> uri($service->{serviceType})
          -> GetStatusInfo();
      $self->{uptime} = $som->valueof("//GetStatusInfoResponse/NewUptime");
      $self->{uptime} /= 1.0;
      $self->debug("WANIPConn1->GetStatusInfo returned uptime");
    };
    if ($@) {
      $self->add_critical("could not get uptime: ".$@);
    }
  }
}

sub create_statefile {
  my ($self, %params) = @_;
  my $extension = "";
  $extension .= $params{name} ? '_'.$params{name} : '';
  if ($self->opts->community) {
    $extension .= md5_hex($self->opts->community);
  }
  $extension =~ s/\//_/g;
  $extension =~ s/\(/_/g;
  $extension =~ s/\)/_/g;
  $extension =~ s/\*/_/g;
  $extension =~ s/\s/_/g;
  if ($^O =~ /MSWin/) {
    $extension =~ s/:/_/g;
  }
  return sprintf "%s/%s_%s%s", $self->statefilesdir(),
      $self->opts->hostname, $self->opts->mode, lc $extension;
}



package Classes::UPNP::AVM::FritzBox7390::Component::InterfaceSubsystem;
our @ISA = qw(Classes::IFMIB::Component::InterfaceSubsystem);
use strict;


sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::interfaces/) {
    $self->{ifDescr} = "WAN";
    my $service = (grep { $_->{serviceId} =~ /WANIPConn1/ } @{$self->get_variable('services')})[0];
    $self->{ExternalIPAddress} = SOAP::Lite
      -> proxy($service->{controlURL})
      -> uri($service->{serviceType})
      -> GetExternalIPAddress()
      -> result;
    $self->{ConnectionStatus} = SOAP::Lite
      -> proxy($service->{controlURL})
      -> uri($service->{serviceType})
      -> GetStatusInfo()
      -> valueof("//GetStatusInfoResponse/NewConnectionStatus");;
    $service = (grep { $_->{serviceId} =~ /WANCommonIFC1/ } @{$self->get_variable('services')})[0];
    $self->{PhysicalLinkStatus} = SOAP::Lite
      -> proxy($service->{controlURL})
      -> uri($service->{serviceType})
      -> GetCommonLinkProperties()
      -> valueof("//GetCommonLinkPropertiesResponse/NewPhysicalLinkStatus");
    $self->{Layer1UpstreamMaxBitRate} = SOAP::Lite
      -> proxy($service->{controlURL})
      -> uri($service->{serviceType})
      -> GetCommonLinkProperties()
      -> valueof("//GetCommonLinkPropertiesResponse/NewLayer1UpstreamMaxBitRate");
    $self->{Layer1DownstreamMaxBitRate} = SOAP::Lite
      -> proxy($service->{controlURL})
      -> uri($service->{serviceType})
      -> GetCommonLinkProperties()
      -> valueof("//GetCommonLinkPropertiesResponse/NewLayer1DownstreamMaxBitRate");
    $self->{TotalBytesSent} = SOAP::Lite
      -> proxy($service->{controlURL})
      -> uri($service->{serviceType})
      -> GetTotalBytesSent()
      -> result;
    $self->{TotalBytesReceived} = SOAP::Lite
      -> proxy($service->{controlURL})
      -> uri($service->{serviceType})
      -> GetTotalBytesReceived()
      -> result;
    if ($self->mode =~ /device::interfaces::usage/) {
      $self->valdiff({name => $self->{ifDescr}}, qw(TotalBytesSent TotalBytesReceived));
      $self->{delta_ifInBits} = $self->{delta_TotalBytesReceived} * 8;
      $self->{delta_ifOutBits} = $self->{delta_TotalBytesSent} * 8;
      $self->{inputUtilization} = 100 * $self->{delta_ifInBits} /
          ($self->{delta_timestamp} * $self->{Layer1DownstreamMaxBitRate});
      $self->{outputUtilization} = 100 * $self->{delta_ifOutBits} /
          ($self->{delta_timestamp} * $self->{Layer1UpstreamMaxBitRate});
      $self->{maxInputRate} = $self->{Layer1DownstreamMaxBitRate};
      $self->{maxOutputRate} = $self->{Layer1UpstreamMaxBitRate};
      $self->{inputRate} = $self->{delta_ifInBits} / $self->{delta_timestamp};
      $self->{outputRate} = $self->{delta_ifOutBits} / $self->{delta_timestamp};
      $self->override_opt("units", "bit") if ! $self->opts->units;
      $self->{inputRate} /= $self->number_of_bits($self->opts->units);
      $self->{outputRate} /= $self->number_of_bits($self->opts->units);
      $self->{maxInputRate} /= $self->number_of_bits($self->opts->units);
      $self->{maxOutputRate} /= $self->number_of_bits($self->opts->units);
      if ($self->{ConnectionStatus} ne "Connected") {
        $self->{inputUtilization} = 0;
        $self->{outputUtilization} = 0;
        $self->{inputRate} = 0;
        $self->{outputRate} = 0;
        $self->{maxInputRate} = 0;
        $self->{maxOutputRate} = 0;
      }
    } elsif ($self->mode =~ /device::interfaces::operstatus/) {
    } elsif ($self->mode =~ /device::interfaces::list/) {
    } else {
      $self->no_such_mode();
    }
  }
}

sub check {
  my ($self) = @_;
  $self->add_info('checking interfaces');
  if ($self->mode =~ /device::interfaces::usage/) {
    $self->add_info(sprintf 'interface %s usage is in:%.2f%% (%s) out:%.2f%% (%s)',
        $self->{ifDescr},
        $self->{inputUtilization},
        sprintf("%.2f%s/s", $self->{inputRate}, $self->opts->units),
        $self->{outputUtilization},
        sprintf("%.2f%s/s", $self->{outputRate}, $self->opts->units));
    $self->set_thresholds(
        metric => $self->{ifDescr}.'_usage_in',
        warning => 80,
        critical => 90
    );
    my $in = $self->check_thresholds(
        metric => $self->{ifDescr}.'_usage_in',
        value => $self->{inputUtilization}
    );
    $self->set_thresholds(
        metric => $self->{ifDescr}.'_usage_out',
        warning => 80,
        critical => 90
    );
    my $out = $self->check_thresholds(
        metric => $self->{ifDescr}.'_usage_out',
        value => $self->{outputUtilization}
    );
    my $level = ($in > $out) ? $in : ($out > $in) ? $out : $in;
    $self->add_message($level);
    $self->add_perfdata(
        label => $self->{ifDescr}.'_usage_in',
        value => $self->{inputUtilization},
        uom => '%',
    );
    $self->add_perfdata(
        label => $self->{ifDescr}.'_usage_out',
        value => $self->{outputUtilization},
        uom => '%',
    );

    my ($inwarning, $incritical) = $self->get_thresholds(
        metric => $self->{ifDescr}.'_usage_in',
    );
    $self->set_thresholds(
        metric => $self->{ifDescr}.'_traffic_in',
        warning => $self->{maxInputRate} / 100 * $inwarning,
        critical => $self->{maxInputRate} / 100 * $incritical
    );
    $self->add_perfdata(
        label => $self->{ifDescr}.'_traffic_in',
        value => $self->{inputRate},
        uom => $self->opts->units =~ /^(B|KB|MB|GB|TB)$/ ? $self->opts->units : undef,
        places => 2,
        min => 0,
        max => $self->{maxInputRate},
    );
    my ($outwarning, $outcritical) = $self->get_thresholds(
        metric => $self->{ifDescr}.'_usage_out',
    );
    $self->set_thresholds(
        metric => $self->{ifDescr}.'_traffic_out',
        warning => $self->{maxOutputRate} / 100 * $outwarning,
        critical => $self->{maxOutputRate} / 100 * $outcritical,
    );
    $self->add_perfdata(
        label => $self->{ifDescr}.'_traffic_out',
        value => $self->{outputRate},
        uom => $self->opts->units =~ /^(B|KB|MB|GB|TB)$/ ? $self->opts->units : undef,
        places => 2,
        min => 0,
        max => $self->{maxOutputRate},
    );
  } elsif ($self->mode =~ /device::interfaces::operstatus/) {
    $self->add_info(sprintf 'interface %s%s status is %s',
        $self->{ifDescr}, 
        $self->{ExternalIPAddress} ? " (".$self->{ExternalIPAddress}.")" : "",
        $self->{ConnectionStatus});
    if ($self->{ConnectionStatus} eq "Connected") {
      $self->add_ok();
    } else {
      $self->add_critical();
    }
  } elsif ($self->mode =~ /device::interfaces::list/) {
    printf "%s\n", $self->{ifDescr};
    $self->add_ok("have fun");
  }
}

package Classes::UPNP::AVM::FritzBox7390::Component::SmartHomeSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item Classes::UPNP::AVM::FritzBox7390);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /smarthome::device::list/) {
    $self->update_device_cache(1);
    foreach my $ain (keys %{$self->{device_cache}}) {
      my $name = $self->{device_cache}->{$ain}->{name};
      printf "%s %s\n", $ain, $name;
    }
  } elsif ($self->mode =~ /smarthome::device/) {
    $self->update_device_cache(0);
    my @indices = $self->get_device_indices();
    foreach my $ain (map {$_->[0]} @indices) {
      my %tmp_dev = (
          ain => $ain,
          name => $self->{device_cache}->{$ain}->{name},
          functionbitmask => $self->{device_cache}->{$ain}->{functionbitmask},
      );
      push(@{$self->{smart_home_devices}},
          Classes::UPNP::AVM::FritzBox7390::Component::SmartHomeSubsystem::Device->new(%tmp_dev));
    }
  }
}

sub check {
  my ($self) = @_;
  foreach (@{$self->{smart_home_devices}}) {
    $_->check();
  }
}

sub create_device_cache_file {
  my ($self) = @_;
  my $extension = "";
  if ($self->opts->community) {
    $extension .= Digest::MD5::md5_hex($self->opts->community);
  }
  $extension =~ s/\//_/g;
  $extension =~ s/\(/_/g;
  $extension =~ s/\)/_/g;
  $extension =~ s/\*/_/g;
  $extension =~ s/\s/_/g;
  return sprintf "%s/%s_interface_cache_%s", $self->statefilesdir(),
      $self->opts->hostname, lc $extension;
}

sub update_device_cache {
  my ($self, $force) = @_;
  my $statefile = $self->create_device_cache_file();
  my $update = time - 3600;
  if ($force || ! -f $statefile || ((stat $statefile)[9]) < ($update)) {
    $self->debug('force update of device cache');
    $self->{device_cache} = {};
    my $switchlist = $self->http_get('/webservices/homeautoswitch.lua?switchcmd=getdevicelistinfos');
    $switchlist = join(",", map {
        /<device identifier="(.*?)"/;
        my $ain = $1; $ain =~ s/\s//g;
        /<name>(.*?)<\/name>/; $self->{device_cache}->{$ain}->{name} = $1;
        /functionbitmask="(.*?)"/; $self->{device_cache}->{$ain}->{functionbitmask} = $1;
       $ain;
    } ($switchlist =~ /<device.*?<\/device>/g));
    $self->save_device_cache();
  }
  $self->load_device_cache();
}

sub save_device_cache {
  my ($self) = @_;
  $self->create_statefilesdir();
  my $statefile = $self->create_device_cache_file();
  my $tmpfile = $self->statefilesdir().'/check_nwc_health_tmp_'.$$;
  my $fh = IO::File->new();
  $fh->open(">$tmpfile");
  $fh->print(Data::Dumper::Dumper($self->{device_cache}));
  $fh->flush();
  $fh->close();
  my $ren = rename $tmpfile, $statefile;
  $self->debug(sprintf "saved %s to %s",
      Data::Dumper::Dumper($self->{device_cache}), $statefile);
}

sub load_device_cache {
  my ($self) = @_;
  my $statefile = $self->create_device_cache_file();
  if ( -f $statefile) {
    our $VAR1;
    eval {
      require $statefile;
    };
    if($@) {
      printf "FATAL: Could not load cache!\n";
    }
    $self->debug(sprintf "load %s", Data::Dumper::Dumper($VAR1));
    $self->{device_cache} = $VAR1;
    eval {
      foreach (keys %{$self->{device_cache}}) {
        /^[\d\s]+$/ || die "newrelease";
      }
    };
    if($@) {
      $self->{device_cache} = {};
      unlink $statefile;
      delete $INC{$statefile};
      $self->update_device_cache(1);
    }
  }
}

sub get_device_indices {
  my ($self) = @_;
  my @indices = ();
  foreach my $id (keys %{$self->{device_cache}}) {
    my $name = $self->{device_cache}->{$id}->{name};
    if ($self->opts->name) {
      if ($self->opts->regexp) {
        my $pattern = $self->opts->name;
        if ($name =~ /$pattern/i) {
          push(@indices, [$id]);
        }
      } else {
        if ($self->opts->name =~ /^\d+$/) {
          if ($id == 1 * $self->opts->name) {
            push(@indices, [1 * $self->opts->name]);
          }
        } else {
          if (lc $name eq lc $self->opts->name) {
            push(@indices, [$id]);
          }
        }
      }
    } else {
      push(@indices, [$id]);
    }
  }
  return @indices;
}


package Classes::UPNP::AVM::FritzBox7390::Component::SmartHomeSubsystem::Device;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem Classes::UPNP::AVM::FritzBox7390::Component::SmartHomeSubsystem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{cometdect} = ($self->{functionbitmask} & 0b000001000000) ? 1 : 0;
  $self->{energy} = ($self->{functionbitmask} & 0b000010000000) ? 1 : 0;
  $self->{temperature} = ($self->{functionbitmask} & 0b000100000000) ? 1 : 0;
  $self->{schaltsteck} = ($self->{functionbitmask} & 0b001000000000) ? 1 : 0;
  $self->{dectrepeater} = ($self->{functionbitmask} & 0b010000000000) ? 1 : 0;
  if ($self->mode =~ /smarthome::device::status/) {
    $self->{connected} = $self->http_get('/webservices/homeautoswitch.lua?switchcmd=getswitchpresent&ain='.$self->{ain});
    $self->{switched} = $self->http_get('/webservices/homeautoswitch.lua?switchcmd=getswitchstate&ain='.$self->{ain});
    chomp $self->{connected};
    chomp $self->{switched};
  } elsif ($self->mode =~ /smarthome::device::energy/ && $self->{energy}) {
    eval {
      $self->{last_watt} = $self->http_get('/webservices/homeautoswitch.lua?switchcmd=getswitchpower&ain='.$self->{ain});
      $self->{last_watt} /= 1000;
    };
  } elsif ($self->mode =~ /smarthome::device::consumption/ && $self->{energy}) {
    eval {
      $self->{kwh} = $self->http_get('/webservices/homeautoswitch.lua?switchcmd=getswitchenergy&ain='.$self->{ain});
      $self->{kwh} /= 1000;
    };
  } elsif ($self->mode =~ /smarthome::device::temperature/ && $self->{temperature}) {
    eval {
      $self->{celsius} = $self->http_get('/webservices/homeautoswitch.lua?switchcmd=gettemperature&ain='.$self->{ain});
      $self->{celsius} /= 10;
    };
  }
}

sub check {
  my ($self) = @_;
  my $label = $self->{name};
  if ($self->mode =~ /smarthome::device::status/) {
    $self->add_info(sprintf "device %s is %sconnected and switched %s",
        $self->{name}, $self->{connected} ? "" : "not ", $self->{switched} ? "on" : "off");
    if (! $self->{connected} || ! $self->{switched}) {
      $self->add_critical();
    } else {
      $self->add_ok(sprintf "device %s ok", $self->{name});
    }
  } elsif ($self->mode =~ /smarthome::device::energy/ && $self->{energy}) {
    $self->add_info(sprintf "device %s consumes %.4f watts",
        $self->{name}, $self->{last_watt});
    $self->set_thresholds(metric => $label."_watt",
        warning => 80 / 100 * 220 * 10, critical => 90 / 100 * 220 * 10);
    $self->add_message($self->check_thresholds(
        metric => $label."_watt", value => $self->{last_watt}));
    $self->add_perfdata(
        label => $label."_watt",
        value => $self->{last_watt},
    );
  } elsif ($self->mode =~ /smarthome::device::consumption/ && $self->{energy}) {
    $self->add_info(sprintf "device %s consumed %.4f kwh",
        $self->{name}, $self->{kwh});
    $self->set_thresholds(metric => $label."_kwh",
        warning => 1000, critical => 1000);
    $self->add_message($self->check_thresholds(
        metric => $label."_kwh", value => $self->{kwh}));
    $self->add_perfdata(
        label => $label."_kwh",
        value => $self->{kwh},
    );
  } elsif ($self->mode =~ /smarthome::device::temperature/ && $self->{temperature}) {
    $self->add_info(sprintf "device %s temperature is %.4f C",
        $self->{name}, $self->{celsius});
    $self->set_thresholds(metric => $label."_temperature",
        warning => 40, critical => 50);
    $self->add_message($self->check_thresholds(
        metric => $label."_temperature", value => $self->{celsius}));
    $self->add_perfdata(
        label => $label."_temperature",
        value => $self->{celsius},
    );
  }
}
package Classes::UPNP::AVM::FritzBox7390;
our @ISA = qw(Classes::UPNP::AVM);
use strict;

{
  our $sid = undef;
}

sub sid : lvalue {
  my ($self) = @_;
  $Classes::UPNP::AVM::FritzBox7390::sid;
}

sub init {
  my ($self) = @_;
  foreach my $module (qw(HTML::TreeBuilder LWP::UserAgent Encode Digest::MD5 JSON)) {
    if (! eval "require $module") {
      $self->add_unknown("could not find $module module");
    }
  }
  if (! $self->check_messages()) {
    if ($self->mode =~ /device::hardware::health/) {
      $self->login();
      $self->analyze_environmental_subsystem();
      $self->check_environmental_subsystem();
    } elsif ($self->mode =~ /device::hardware::load/) {
      $self->login();
      $self->analyze_cpu_subsystem();
      $self->check_cpu_subsystem();
    } elsif ($self->mode =~ /device::hardware::memory/) {
      $self->login();
      $self->analyze_mem_subsystem();
      $self->check_mem_subsystem();
    } elsif ($self->mode =~ /device::interfaces/) {
      $self->analyze_and_check_interface_subsystem("Classes::UPNP::AVM::FritzBox7390::Component::InterfaceSubsystem");
    } elsif ($self->mode =~ /device::smarthome/) {
      $self->login();
      $self->analyze_and_check_smarthome_subsystem("Classes::UPNP::AVM::FritzBox7390::Component::SmartHomeSubsystem");
    } else {
      $self->no_such_mode();
    }
    $self->logout();
  }
}

sub login {
  my ($self) = @_;
  my $ua = LWP::UserAgent->new;
  my $loginurl = sprintf "http://%s/login_sid.lua", $self->opts->hostname;
  my $resp = $ua->get($loginurl);
  my $content = $resp->content();
  my $challenge = ($content =~ /<Challenge>(.*?)<\/Challenge>/ && $1);
  my $input = $challenge . '-' . $self->opts->community;
  Encode::from_to($input, 'ascii', 'utf16le');
  my $challengeresponse = $challenge . '-' . lc(Digest::MD5::md5_hex($input));
  $resp = HTTP::Request->new(POST => $loginurl);
  $resp->content_type("application/x-www-form-urlencoded");
  my $login = "response=$challengeresponse";
  if ($self->opts->username) {
      $login .= "&username=" . $self->opts->username;
  }
  $resp->content($login);
  my $loginresp = $ua->request($resp);
  $content = $loginresp->content();
  $self->sid() = ($content =~ /<SID>(.*?)<\/SID>/ && $1);
  if (! $loginresp->is_success() || ! $self->sid() || $self->sid() =~ /^0+$/) {
    $self->add_critical($loginresp->status_line());
  } else {
    $self->debug("logged in with sid ".$self->sid());
  }
}

sub logout {
  my ($self) = @_;
  return if ! $self->sid();
  my $ua = LWP::UserAgent->new;
  my $loginurl = sprintf "http://%s/login_sid.lua", $self->opts->hostname;
  my $resp = HTTP::Request->new(POST => $loginurl);
  $resp->content_type("application/x-www-form-urlencoded");
  my $logout = "sid=".$self->sid()."&security:command/logout=1";
  $resp->content($logout);
  my $logoutresp = $ua->request($resp);
  $self->sid() = undef;
  $self->debug("logged out");
}

sub DESTROY {
  my ($self) = @_;
  $self->logout();
}

sub http_get {
  my ($self, $page) = @_;
  my $ua = LWP::UserAgent->new;
  if ($page =~ /\?/) {
    $page .= "&sid=".$self->sid();
  } else {
    $page .= "?sid=".$self->sid();
  }
  my $url = sprintf "http://%s/%s", $self->opts->hostname, $page;
  $self->debug("http get ".$url);
  my $resp = $ua->get($url);
  if (! $resp->is_success()) {
    $self->add_critical($resp->status_line());
  } else {
  }
  return $resp->content();
}

sub analyze_cpu_subsystem {
  my ($self) = @_;
  my $html = $self->http_get('system/ecostat.lua');
  if ($html =~ /uiSubmitLogin/) {
    $self->add_critical("wrong login");
    $self->{cpu_usage} = 0;
  } elsif ($html =~ /StatCPU/) {
    my $cpu = (grep /StatCPU/, split(/\n/, $html))[0];
    my @cpu = ($cpu =~ /= "(.*?)"/ && split(/,/, $1));
    $self->{cpu_usage} = $cpu[0];
  } elsif ($html =~ /uiViewCpu/) {
    $html =~ /Query1 = "(.*?)"/;
    $self->{cpu_usage} = (split(",", $1))[0];
  }
}

sub analyze_mem_subsystem {
  my ($self) = @_;
  my $html = $self->http_get('system/ecostat.lua');
  if ($html =~ /uiSubmitLogin/) {
    $self->add_critical("wrong login");
    $self->{ram_used} = 0;
  } elsif ($html =~ /StatRAMCacheUsed/) {
    my $ramcacheused = (grep /StatRAMCacheUsed/, split(/\n/, $html))[0];
    my @ramcacheused = ($ramcacheused =~ /= "(.*?)"/ && split(/,/, $1));
    $self->{ram_cache_used} = $ramcacheused[0];
    my $ramphysfree = (grep /StatRAMPhysFree/, split(/\n/, $html))[0];
    my @ramphysfree = ($ramphysfree =~ /= "(.*?)"/ && split(/,/, $1));
    $self->{ram_phys_free} = $ramphysfree[0];
    my $ramstrictlyused = (grep /StatRAMStrictlyUsed/, split(/\n/, $html))[0];
    my @ramstrictlyused = ($ramstrictlyused =~ /= "(.*?)"/ && split(/,/, $1));
    $self->{ram_strictly_used} = $ramstrictlyused[0];
    $self->{ram_used} = $self->{ram_strictly_used} + $self->{ram_cache_used};
  } elsif ($html =~ /uiViewRamValue/) {
    $html =~ /Query1 ="(.*?)"/;
    $self->{ram_free} = (split(",", $1))[0];
    $html =~ /Query2 ="(.*?)"/;
    $self->{ram_dynamic} = (split(",", $1))[0];
    $html =~ /Query3 ="(.*?)"/;
    $self->{ram_fix} = (split(",", $1))[0];
    $self->{ram_used} = $self->{ram_fix} + $self->{ram_dynamic};
  }
}

sub check_cpu_subsystem {
  my ($self) = @_;
  $self->add_info('checking cpus');
  $self->add_info(sprintf 'cpu usage is %.2f%%', $self->{cpu_usage});
  $self->set_thresholds(warning => 40, critical => 60);
  $self->add_message($self->check_thresholds($self->{cpu_usage}), $self->{info});
  $self->add_perfdata(
      label => 'cpu_usage',
      value => $self->{cpu_usage},
      uom => '%',
      warning => $self->{warning},
      critical => $self->{critical},
  );
}

sub check_mem_subsystem {
  my ($self) = @_;
  $self->add_info('checking memory');
  $self->add_info(sprintf 'memory usage is %.2f%%', $self->{ram_used});
  $self->set_thresholds(warning => 80, critical => 90);
  $self->add_message($self->check_thresholds($self->{ram_used}), $self->{info});
  $self->add_perfdata(
      label => 'memory_usage',
      value => $self->{ram_used},
      uom => '%',
      warning => $self->{warning},
      critical => $self->{critical},
  );
}





package Classes::UPNP::AVM;
our @ISA = qw(Classes::UPNP);
use strict;

sub init {
  my ($self) = @_;
  if ($self->{productname} =~ /(7390|7490)/) {
    bless $self, 'Classes::UPNP::AVM::FritzBox7390';
    $self->debug('using Classes::UPNP::AVM::FritzBox7390');
  } elsif ($self->{productname} =~ /7490/) {
    bless $self, 'Classes::UPNP::AVM::FritzBox7390';
    $self->debug('using Classes::UPNP::AVM::FritzBox7390');
  } elsif ($self->{productname} =~ /7590/) {
    bless $self, 'Classes::UPNP::AVM::FritzBox7390';
    $self->debug('using Classes::UPNP::AVM::FritzBox7390');
  } elsif ($self->{productname} =~ /6490/) {
    bless $self, 'Classes::UPNP::AVM::FritzBox7390';
    $self->debug('using Classes::UPNP::AVM::FritzBox7390');
  } elsif ($self->{productname} =~ /7412/) {
    bless $self, 'Classes::UPNP::AVM::FritzBox7390';
    $self->debug('using Classes::UPNP::AVM::FritzBox7390');
  } else {
    $self->no_such_model();
  }
  if (ref($self) ne "Classes::UPNP::AVM") {
    $self->init();
  }
}

package Classes::UPNP;
our @ISA = qw(Classes::Device);
use strict;

package Server::LinuxLocal;
our @ISA = qw(Classes::Device);
use strict;


sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::interfaces/) {
    $self->analyze_and_check_interface_subsystem('Server::LinuxLocal::Component::InterfaceSubsystem');
  }
}


package Server::LinuxLocal::Component::InterfaceSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->{interfaces} = [];
  if ($self->mode =~ /device::interfaces::list/) {
    foreach (glob "/sys/class/net/*") {
      my $name = $_;
      next if ! -d $name;
      $name =~ s/.*\///g;
      my $tmpif = {
        ifDescr => $name,
      };
      push(@{$self->{interfaces}},
        Server::LinuxLocal::Component::InterfaceSubsystem::Interface->new(%{$tmpif}));
    }
  } else {
    my $max_speed = 0;
    foreach (glob "/sys/class/net/*") {
      my $name = $_;
      $name =~ s/.*\///g;
      my $tmp_speed = (-f "/sys/class/net/$name/speed" ? do { local (@ARGV, $/) = "/sys/class/net/$name/speed"; my $x = <>; close ARGV; $x; } : undef);
      $max_speed = $tmp_speed if defined $tmp_speed && $tmp_speed > $max_speed;
      next if ! $self->filter_name($name);
      *SAVEERR = *STDERR;
      open ERR ,'>/dev/null';
      *STDERR = *ERR;
      my $tmpif = {
        ifDescr => $name,
        ifIndex => $name,
        ifSpeed => $tmp_speed,
        ifInOctets => do { local (@ARGV, $/) = "/sys/class/net/$name/statistics/rx_bytes"; my $x = <>; close ARGV; $x; },
        ifInDiscards => do { local (@ARGV, $/) = "/sys/class/net/$name/statistics/rx_dropped"; my $x = <>; close ARGV; $x; },
        ifInErrors => do { local (@ARGV, $/) = "/sys/class/net/$name/statistics/rx_errors"; my $x = <>; close ARGV; $x; },
        ifOutOctets => do { local (@ARGV, $/) = "/sys/class/net/$name/statistics/tx_bytes"; my $x = <>; close ARGV; $x; },
        ifOutDiscards => do { local (@ARGV, $/) = "/sys/class/net/$name/statistics/tx_dropped"; my $x = <>; close ARGV; $x; },
        ifOutErrors => do { local (@ARGV, $/) = "/sys/class/net/$name/statistics/tx_errors"; my $x = <>; close ARGV; $x; },
        ifOperStatus => do { local (@ARGV, $/) = "/sys/class/net/$name/operstate"; my $x = <>; close ARGV; $x; },
        ifInUcastPkts => 0, # sonst wird in IFMIB... ein StackSub draus
        ifOutUcastPkts => 0,
        ifCarrier => do { local (@ARGV, $/) = "/sys/class/net/$name/carrier"; my $x = <>; close ARGV; $x; },
      };
      *STDERR = *SAVEERR;
      map {
          chomp $tmpif->{$_} if defined $tmpif->{$_};
          $tmpif->{$_} =~ s/\s*$//g if defined $tmpif->{$_};
      } keys %{$tmpif};
      if ($tmpif->{ifOperStatus} eq 'unknown') {
        $tmpif->{ifOperStatus} = $tmpif->{ifCarrier} ? 'up' : 'down';
      }
      $tmpif->{ifAdminStatus} = $tmpif->{ifOperStatus};
      if (defined $self->opts->ifspeed) {
        $tmpif->{ifSpeed} = $self->opts->ifspeed * 1024*1024;
      } else {
        $tmpif->{ifSpeed} *= 1024*1024 if defined $tmpif->{ifSpeed};
      }
      push(@{$self->{interfaces}},
        Server::LinuxLocal::Component::InterfaceSubsystem::Interface->new(%{$tmpif}));
    }
    map { $_->{sysMaxSpeed} = $max_speed; chomp $_->{sysMaxSpeed}; } @{$self->{interfaces}};
  }
}

sub check {
  my ($self) = @_;
  $self->add_info('checking interfaces');
  if (scalar(@{$self->{interfaces}}) == 0) {
    $self->add_unknown('no interfaces');
    return;
  }
  if ($self->mode =~ /device::interfaces::list/) {
    foreach (sort {$a->{ifDescr} cmp $b->{ifDescr}} @{$self->{interfaces}}) {
      $_->list();
    }
  } else {
    foreach (@{$self->{interfaces}}) {
      $_->check();
    }
  }
}


package Server::LinuxLocal::Component::InterfaceSubsystem::Interface;
our @ISA = qw(Classes::IFMIB::Component::InterfaceSubsystem::Interface);
use strict;

sub finish {
  my ($self) = @_;
  if (! defined $self->{ifSpeed} && $self->mode =~ /device::interfaces::(complete|usage)/) {
    bless $self, 'Server::LinuxLocal::Component::InterfaceSubsystem::Interface::Virt';
  }
  $self->SUPER::finish();
}

package Server::LinuxLocal::Component::InterfaceSubsystem::Interface::Virt;
our @ISA = qw(Server::LinuxLocal::Component::InterfaceSubsystem::Interface);
use strict;

sub check {
  my ($self) = @_;
  if (! defined $self->{ifSpeed}) {
    if (defined $self->opts->mitigation && $self->opts->mitigation eq 'ok') {
      $self->{ifSpeed} = $self->{sysMaxSpeed};
      # virtuelles zeug bekommt die geschw. des schnellsten verbauten interf.
      # wird schon passen.
      $self->SUPER::check();
    } elsif ($self->mode =~ /evice::interfaces::(complete|usage)/) {
      $self->add_unknown(sprintf "There is no /sys/class/net/%s/speed. Use --ifspeed", $self->{ifDescr});
    } else {
      $self->SUPER::check();
    }
  } else {
    $self->SUPER::check();
  }
}

package Server::WindowsLocal;
our @ISA = qw(Classes::Device);
use strict;


sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::interfaces/) {
    $self->analyze_and_check_interface_subsystem('Server::WindowsLocal::Component::InterfaceSubsystem');
  }
}


package Server::WindowsLocal::Component::InterfaceSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub merge_by_canonical {
  my ($self, $tmpif, $network_adapters, $network_adapter_configs) = @_;
  $tmpif->{CanonicalName} = $tmpif->{ifDescr};
  $tmpif->{CanonicalName} =~ s/[^0-9a-zA-Z]/_/g;
  $self->debug(sprintf "found interface %s", $tmpif->{CanonicalName});
  if (! exists $network_adapter_configs->{$tmpif->{CanonicalName}}) {
    foreach (keys %{$network_adapters}) {
printf "= %s\n  %s\n", substr($tmpif->{CanonicalName}, 0, length($_)), $_;
      if (substr($tmpif->{CanonicalName}, 0, length($_)) eq $_) {
        $tmpif->{CanonicalName} = $_;
printf "dong\n";
        last;
      }
    }
  }
  if (exists $network_adapters->{$tmpif->{CanonicalName}}) {
    map {
      $tmpif->{$_} = $network_adapters->{$tmpif->{CanonicalName}}->{$_}
    } (qw(Index NetConnectionStatus NetEnabled));
    if (exists $network_adapter_configs->{$tmpif->{Index}}) {
      map {
        $tmpif->{$_} = $network_adapter_configs->{$tmpif->{Index}}->{$_}
      } (qw(InterfaceIndex));
    }
  }
}

sub init {
  my ($self) = @_;
  $self->{interfaces} = [];
# bits per second
  if ($self->mode =~ /device::interfaces::list/) {
    my $network_adapter_configs = {};
    my $network_adapters = {};
    my $dbh = DBI->connect('dbi:WMI:');
    my $sth = $dbh->prepare("select * from Win32_NetworkAdapter");
    # AdapterType, DeviceID, MACAddress, MaxSpeed, NetConnectionStatus, StatusInfo
    $self->debug("select Description, DeviceID, Index, MACAddress, MaxSpeed, NetConnectionID, NetConnectionStatus, NetEnabled, Speed, Status, StatusInfo from Win32_NetworkAdapter");
    $sth->execute();
    map {
      my $copy = {};
      my $orig = $_;
      map { $copy->{$_} = $orig->{$_} } (qw(Description DeviceID Index MACAddress MaxSpeed Name NetConnectionID NetConnectionStatus NetEnabled Speed Status StatusInfo));
      $copy->{CanonicalName} = unpack("Z*", $_->{Name});
      $copy->{CanonicalName} =~ s/[^0-9a-zA-Z]/_/g;
      $network_adapters->{$copy->{CanonicalName}} = $copy;
printf "network_adapters %s\n", Data::Dumper::Dumper($copy);
printf "network_adapters %s     %d\n", $copy->{CanonicalName}, $copy->{Index};
    } map {
      $_->[0];
    } @{$sth->fetchall_arrayref()};
    $sth->finish();
    $sth = $dbh->prepare("select * from Win32_NetworkAdapterConfiguration");
    # Description, InterfaceIndex, IPAddress, IPEndbled, IPSubnet, MTU
    $self->debug("select * from Win32_NetworkAdapterConfiguration");
    $sth->execute();
    map {
      my $copy = {};
      my $orig = $_;
      map { $copy->{$_} = $orig->{$_} } (qw(Description Index InterfaceIndex MACAddress MTU));
      $network_adapter_configs->{$copy->{Index}} = $copy;
    } map {
      $_->[0];
    } @{$sth->fetchall_arrayref()};
$self->debug("finish");
    $sth->finish();
    $sth = $dbh->prepare("select * from Win32_PerfRawData_Tcpip_NetworkInterface");
    $self->debug("select * from Win32_PerfRawData_Tcpip_NetworkInterface");
    $sth->execute();
    my $index = 0;
    while (my $member_arr = $sth->fetchrow_arrayref()) {
      my $member = $member_arr->[0];
      my $tmpif = {
        ifDescr => unpack("Z*", $member->{Name}),
        ifIndex => $index++,
      };
      $self->merge_by_canonical($tmpif, $network_adapters, $network_adapter_configs);
      push(@{$self->{interfaces}},
        Server::WindowsLocal::Component::InterfaceSubsystem::Interface->new(%{$tmpif}));
    }
    $sth->finish();
  } else {
    my $dbh = DBI->connect('dbi:WMI:');
    my $sth = $dbh->prepare("select * from Win32_PerfRawData_Tcpip_NetworkInterface");
    $sth->execute();
    while (my $member_arr = $sth->fetchrow_arrayref()) {
      my $i = 0;
      my $member = $member_arr->[0];
      my $name = $member->{Name};
      $name =~ s/.*\///g;
      if ($self->opts->name) {
        if ($self->opts->regexp) {
          my $pattern = $self->opts->name;
          if ($name !~ /$pattern/i) {
            next;
          }
        } elsif (lc $name ne lc $self->opts->name) {
          next;
        }
      }
      *SAVEERR = *STDERR;
      open ERR ,'>/dev/null';
      *STDERR = *ERR;
      my $tmpif = {
        ifDescr => $name,
        ifIndex => $name,
        ifSpeed => $member->{CurrentBandwidth}, # bits per second
        ifInOctets => $member->{BytesReceivedPerSec},
        ifInDiscards => $member->{PacketsReceivedDiscarded},
        ifInErrors => $member->{PacketsReceivedErrors},
        ifOutOctets => $member->{BytesSentPerSec},
        ifOutDiscards => $member->{PacketsOutboundDiscarded},
        ifOutErrors => $member->{PacketsOutboundErrors},
        ifOperStatus => 'up', # found no way to get interface status
        ifInUcastPkts => 0, # sonst wird in IFMIB... ein StackSub draus
        ifOutUcastPkts => 0,
      };
      *STDERR = *SAVEERR;
      map { 
          chomp $tmpif->{$_} if defined $tmpif->{$_}; 
          $tmpif->{$_} =~ s/\s*$//g if defined $tmpif->{$_};
      } keys %{$tmpif};
      $tmpif->{ifOperStatus} = 'down' if $tmpif->{ifOperStatus} ne 'up';
      $tmpif->{ifAdminStatus} = $tmpif->{ifOperStatus};
      if (defined $self->opts->ifspeed) {
        $tmpif->{ifSpeed} = $self->opts->ifspeed * 1024*1024;
      } else {
        $tmpif->{ifSpeed} *= 1024*1024 if defined $tmpif->{ifSpeed};
      }
      if (! defined $tmpif->{ifSpeed}) {
        $self->add_unknown(sprintf "There is no CurrentBandwidth. Use --ifspeed", $name);
      } else {
        push(@{$self->{interfaces}},
          Server::WindowsLocal::Component::InterfaceSubsystem::Interface->new(%{$tmpif}));
      }
    }
    $sth->finish();
    $sth = $dbh->prepare("select * from Win32_NetworkAdapter");
    $sth->execute();
    while (my $member_arr = $sth->fetchrow_arrayref()) {
    }
    $sth->finish();
    $sth = $dbh->prepare("select * from CIM_NetworkAdapter");
    $sth->execute();
    while (my $member_arr = $sth->fetchrow_arrayref()) {
    }
    $sth->finish();
  }
}

sub check {
  my ($self) = @_;
  $self->add_info('checking interfaces');
  if (scalar(@{$self->{interfaces}}) == 0) {
    $self->add_unknown('no interfaces');
    return;
  }
  if ($self->mode =~ /device::interfaces::list/) {
    foreach (sort {$a->{ifDescr} cmp $b->{ifDescr}} @{$self->{interfaces}}) {
      $_->list();
    }
  } else {
    foreach (@{$self->{interfaces}}) {
      $_->check();
    }
  }
}


package Server::WindowsLocal::Component::InterfaceSubsystem::Interface;
our @ISA = qw(Classes::IFMIB::Component::InterfaceSubsystem::Interface);
use strict;

sub finish {
  my ($self) = @_;
  # NetEnabled 1=admin up
  # NetConnectionStatus Disconnected (0)Connecting (1)Connected (2)Disconnecting (3)Hardware Not Present (4)Hardware Disabled (5)Hardware Malfunction (6)Media Disconnected (7)Authenticating (8)Authentication Succeeded (9)Authentication Failed (10)Invalid Address (11)Credentials Required (12)Other (13–65535)
  $self->SUPER::finish();
}

package Server::SolarisLocal;
our @ISA = qw(Classes::Device);
use strict;


sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::interfaces/) {
    $self->analyze_and_check_interface_subsystem('Server::SolarisLocal::Component::InterfaceSubsystem');
  }
}


package Server::SolarisLocal::Component::InterfaceSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub packet_size {
  my ($stats) = @_;
  if (defined $stats->{opackets64} && $stats->{opackets64} != 0 && defined $stats->{obytes64}) {
    return int($stats->{obytes64} / $stats->{opackets64});
  } elsif (defined $stats->{ipackets64} && $stats->{ipackets64} != 0 && defined $stats->{rbytes64}) {
    return int($stats->{rbytes64} / $stats->{ipackets64});
  } elsif (defined $stats->{opackets} && $stats->{opackets} != 0 && defined $stats->{obytes}) {
    return int($stats->{obytes} / $stats->{opackets});
  } elsif (defined $stats->{ipackets} && $stats->{ipackets} != 0 && defined $stats->{rbytes}) {
    return int($stats->{rbytes} / $stats->{ipackets});
  } else {
    return 0;
  }
}

sub init {
  my ($self) = @_;
  $self->{kstat} = Sun::Solaris::Kstat->new();
  $self->{interfaces} = [];
  $self->{kstat_interfaces} = {};
  foreach my $module (keys %{$self->{kstat}}) {
    foreach my $instance (keys %{$self->{kstat}->{$module}}) {
      foreach my $name (keys %{$self->{kstat}->{$module}->{$instance}}) {
        next if $name !~ /^$module/;
        if (defined $self->{kstat}->{$module}->{$instance}->{$name}->{ifspeed} ||
            $module eq "lo") {
          if (! defined $self->{packet_size}) {
            my $packet_size = packet_size($self->{kstat}->{$module}->{$instance}->{$name});
            $self->{packet_size} = $packet_size if $packet_size;
          }
          if ($self->filter_name($name)) {
            $self->{kstat_interfaces}->{$name} =
                exists $self->{kstat}->{$module}->{$instance}->{mac} ?
                $self->{kstat}->{$module}->{$instance}->{mac} :
                $self->{kstat}->{$module}->{$instance}->{$name};
          }
        }
      }
    }
  }
  if ($self->mode =~ /device::interfaces::list/) {
    foreach my $name (keys %{$self->{kstat_interfaces}}) {
      my $tmpif = {
        ifDescr => $name,
      };
      push(@{$self->{interfaces}},
        Server::SolarisLocal::Component::InterfaceSubsystem::Interface->new(%{$tmpif}));
    }
  } else {
    foreach my $name (keys %{$self->{kstat_interfaces}}) {
      my $tmpif = {};
      my $stats = $self->{kstat_interfaces}->{$name};
      $tmpif->{ifDescr} = $name;
      $tmpif->{ifSnapTime} = $stats->{snaptime};
      $tmpif->{ifSnapTime} =~ s/\..*//g;
      if (defined $stats->{ifspeed}) {
        $tmpif->{ifSpeed} = $stats->{ifspeed};
      } elsif ($name =~ /^lo/) {
        $tmpif->{ifSpeed} = 10000000000; # assume 10GBit backplane
      }
      if (defined $stats->{rbytes64}) {
        $tmpif->{ifInOctets} = $stats->{rbytes64};
      } elsif (defined $stats->{rbytes}) {
        $tmpif->{ifInOctets} = $stats->{rbytes};
      } elsif (defined $stats->{ipackets} && $self->{packet_size}) {
        $tmpif->{ifInOctets} = $stats->{ipackets} * $self->{packet_size};
      } else {
        $tmpif->{ifInOctets} = 0;
      }
      if (defined $stats->{obytes64}) {
        $tmpif->{ifOutOctets} = $stats->{obytes64};
      } elsif (defined $stats->{obytes}) {
        $tmpif->{ifOutOctets} = $stats->{obytes};
      } elsif (defined $stats->{opackets} && $self->{packet_size}) {
        $tmpif->{ifOutOctets} = $stats->{opackets} * $self->{packet_size};
      } else {
        $tmpif->{ifOutOctets} = 0;
      }
      $tmpif->{ifInErrors} = defined $stats->{ierrors} ? $stats->{ierrors} : 0;
      $tmpif->{ifOutErrors} = defined $stats->{oerrors} ? $stats->{oerrors} : 0;
      $tmpif->{ifInDiscards} = 0;
      $tmpif->{ifOutDiscards} = 0;
      if (defined $self->opts->ifspeed) {
        $tmpif->{ifSpeed} = $self->opts->ifspeed * 1024*1024;
      }
      if (! defined $tmpif->{ifSpeed}) {
        $self->add_unknown(sprintf "There is no /sys/class/net/%s/speed. Use --ifspeed", $name);
      } else {
        push(@{$self->{interfaces}},
          Server::SolarisLocal::Component::InterfaceSubsystem::Interface->new(%{$tmpif}));
      }
    }
  }
}

sub check {
  my ($self) = @_;
  $self->add_info('checking interfaces');
  if (scalar(@{$self->{interfaces}}) == 0) {
    $self->add_unknown('no interfaces');
    return;
  }
  if ($self->mode =~ /device::interfaces::list/) {
    foreach (sort {$a->{ifDescr} cmp $b->{ifDescr}} @{$self->{interfaces}}) {
      $_->list();
    }
  } else {
    foreach (@{$self->{interfaces}}) {
      $_->check();
    }
  }
}

package Server::SolarisLocal::Component::InterfaceSubsystem::Interface;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  foreach (qw(ifSpeed ifInOctets ifInDiscards ifInErrors ifOutOctets ifOutDiscards ifOutErrors ifSnapTime)) {
    $self->{$_} = 0 if ! defined $self->{$_};
  }
  if ($self->mode =~ /device::interfaces::complete/) {
    # uglatto, but $self->mode is an lvalue
    $Monitoring::GLPlugin::mode = "device::interfaces::operstatus";
    $self->init();
    #if ($self->{ifOperStatus} eq "up") {
      foreach my $mode (qw(device::interfaces::usage
          device::interfaces::errors)) {
        $Monitoring::GLPlugin::mode = $mode;
        $self->init();
      }
    #}
    $Monitoring::GLPlugin::mode = "device::interfaces::complete";
  } elsif ($self->mode =~ /device::interfaces::usage/) {
    $self->valdiff({name => $self->{ifDescr}}, qw(ifInOctets ifOutOctets ifSnapTime));
    $self->{delta_timestamp} = $self->{delta_ifSnapTime};
    $self->{delta_ifInBits} = $self->{delta_ifInOctets} * 8;
    $self->{delta_ifOutBits} = $self->{delta_ifOutOctets} * 8;
    if ($self->{ifSpeed} == 0) {
      # vlan graffl
      $self->{inputUtilization} = 0;
      $self->{outputUtilization} = 0;
      $self->{maxInputRate} = 0;
      $self->{maxOutputRate} = 0;
    } else {
      $self->{inputUtilization} = 100 * $self->{delta_ifInBits} /
          ($self->{delta_timestamp} * $self->{ifSpeed});
      $self->{outputUtilization} = 100 * $self->{delta_ifOutBits} /
          ($self->{delta_timestamp} * $self->{ifSpeed});
      $self->{maxInputRate} = $self->{ifSpeed};
      $self->{maxOutputRate} = $self->{ifSpeed};
    }
    if (defined $self->opts->ifspeed) {
      $self->override_opt('ifspeedin', $self->opts->ifspeed);
      $self->override_opt('ifspeedout', $self->opts->ifspeed);
    }
    if (defined $self->opts->ifspeedin) {
      $self->{inputUtilization} = 100 * $self->{delta_ifInBits} /
          ($self->{delta_timestamp} * $self->opts->ifspeedin);
      $self->{maxInputRate} = $self->opts->ifspeedin;
    }
    if (defined $self->opts->ifspeedout) {
      $self->{outputUtilization} = 100 * $self->{delta_ifOutBits} /
          ($self->{delta_timestamp} * $self->opts->ifspeedout);
      $self->{maxOutputRate} = $self->opts->ifspeedout;
    }
    $self->{inputRate} = $self->{delta_ifInBits} / $self->{delta_timestamp};
    $self->{outputRate} = $self->{delta_ifOutBits} / $self->{delta_timestamp};
    $self->override_opt("units", "bit") if ! $self->opts->units;
    $self->{inputRate} /= $self->number_of_bits($self->opts->units);
    $self->{outputRate} /= $self->number_of_bits($self->opts->units);
    $self->{maxInputRate} /= $self->number_of_bits($self->opts->units);
    $self->{maxOutputRate} /= $self->number_of_bits($self->opts->units);
    if ($self->{ifOperStatus} eq 'down') {
      $self->{inputUtilization} = 0;
      $self->{outputUtilization} = 0;
      $self->{inputRate} = 0;
      $self->{outputRate} = 0;
      $self->{maxInputRate} = 0;
      $self->{maxOutputRate} = 0;
    }
  } elsif ($self->mode =~ /device::interfaces::errors/) {
    $self->valdiff({name => $self->{ifDescr}}, qw(ifInErrors ifOutErrors ifSnapTime));
    $self->{delta_timestamp} = $self->{delta_ifSnapTime};
    $self->{inputErrorRate} = $self->{delta_ifInErrors}
        / $self->{delta_timestamp};
    $self->{outputErrorRate} = $self->{delta_ifOutErrors}
        / $self->{delta_timestamp};
  } elsif ($self->mode =~ /FORCENOTIMPLEMENTEDERROR::device::interfaces::discards/) {
    $self->valdiff({name => $self->{ifDescr}}, qw(ifInDiscards ifOutDiscards));
    $self->{inputDiscardRate} = $self->{delta_ifInDiscards}
        / $self->{delta_timestamp};
    $self->{outputDiscardRate} = $self->{delta_ifOutDiscards}
        / $self->{delta_timestamp};
  } elsif ($self->mode =~ /device::interfaces::operstatus/) {
  }
  return $self;
}

sub check {
  my ($self) = @_;
  if ($self->mode =~ /device::interfaces::complete/) {
    # uglatto, but $self->mode is an lvalue
    $Monitoring::GLPlugin::mode = "device::interfaces::operstatus";
    $self->check();
    #if ($self->{ifOperStatus} eq "up") {
      foreach my $mode (qw(device::interfaces::usage
          device::interfaces::errors)) {
        $Monitoring::GLPlugin::mode = $mode;
        $self->check();
      }
    #}
    $Monitoring::GLPlugin::mode = "device::interfaces::complete";
  } elsif ($self->mode =~ /device::interfaces::usage/) {
    $self->add_info(sprintf 'interface %s usage is in:%.2f%% (%s) out:%.2f%% (%s)',
        $self->{ifDescr},
        $self->{inputUtilization},
        sprintf("%.2f%s/s", $self->{inputRate}, $self->opts->units),
        $self->{outputUtilization},
        sprintf("%.2f%s/s", $self->{outputRate}, $self->opts->units));
    $self->set_thresholds(
        metric => $self->{ifDescr}.'_usage_in',
        warning => 80,
        critical => 90
    );
    my $in = $self->check_thresholds(
        metric => $self->{ifDescr}.'_usage_in',
        value => $self->{inputUtilization}
    );
    $self->set_thresholds(
        metric => $self->{ifDescr}.'_usage_out',
        warning => 80,
        critical => 90
    );
    my $out = $self->check_thresholds(
        metric => $self->{ifDescr}.'_usage_out',
        value => $self->{outputUtilization}
    );
    my $level = ($in > $out) ? $in : ($out > $in) ? $out : $in;
    $self->add_message($level);
    $self->add_perfdata(
        label => $self->{ifDescr}.'_usage_in',
        value => $self->{inputUtilization},
        uom => '%',
    );
    $self->add_perfdata(
        label => $self->{ifDescr}.'_usage_out',
        value => $self->{outputUtilization},
        uom => '%',
    );

    my ($inwarning, $incritical) = $self->get_thresholds(
        metric => $self->{ifDescr}.'_usage_in',
    );
    $self->set_thresholds(
        metric => $self->{ifDescr}.'_traffic_in',
        warning => $self->{maxInputRate} / 100 * $inwarning,
        critical => $self->{maxInputRate} / 100 * $incritical
    );
    $self->add_perfdata(
        label => $self->{ifDescr}.'_traffic_in',
        value => $self->{inputRate},
        uom => $self->opts->units =~ /^(B|KB|MB|GB|TB)$/ ? $self->opts->units : undef,
        places => 2,
        min => 0,
        max => $self->{maxInputRate},
    );
    my ($outwarning, $outcritical) = $self->get_thresholds(
        metric => $self->{ifDescr}.'_usage_out',
    );
    $self->set_thresholds(
        metric => $self->{ifDescr}.'_traffic_out',
        warning => $self->{maxOutputRate} / 100 * $outwarning,
        critical => $self->{maxOutputRate} / 100 * $outcritical,
    );
    $self->add_perfdata(
        label => $self->{ifDescr}.'_traffic_out',
        value => $self->{outputRate},
        uom => $self->opts->units =~ /^(B|KB|MB|GB|TB)$/ ? $self->opts->units : undef,
        places => 2,
        min => 0,
        max => $self->{maxOutputRate},
    );
  } elsif ($self->mode =~ /device::interfaces::errors/) {
    $self->add_info(sprintf 'interface %s errors in:%.2f/s out:%.2f/s ',
        $self->{ifDescr},
        $self->{inputErrorRate} , $self->{outputErrorRate});
    $self->set_thresholds(warning => 1, critical => 10);
    my $in = $self->check_thresholds($self->{inputErrorRate});
    my $out = $self->check_thresholds($self->{outputErrorRate});
    my $level = ($in > $out) ? $in : ($out > $in) ? $out : $in;
    $self->add_message($level);
    $self->add_perfdata(
        label => $self->{ifDescr}.'_errors_in',
        value => $self->{inputErrorRate},
    );
    $self->add_perfdata(
        label => $self->{ifDescr}.'_errors_out',
        value => $self->{outputErrorRate},
    );
  } elsif ($self->mode =~ /device::interfaces::discards/) {
    $self->add_info(sprintf 'interface %s discards in:%.2f/s out:%.2f/s ',
        $self->{ifDescr},
        $self->{inputDiscardRate} , $self->{outputDiscardRate});
    $self->set_thresholds(warning => 1, critical => 10);
    my $in = $self->check_thresholds($self->{inputDiscardRate});
    my $out = $self->check_thresholds($self->{outputDiscardRate});
    my $level = ($in > $out) ? $in : ($out > $in) ? $out : $in;
    $self->add_message($level);
    $self->add_perfdata(
        label => $self->{ifDescr}.'_discards_in',
        value => $self->{inputDiscardRate},
    );
    $self->add_perfdata(
        label => $self->{ifDescr}.'_discards_out',
        value => $self->{outputDiscardRate},
    );
  }
}

sub list {
  my ($self) = @_;
  printf "%s\n", $self->{ifDescr};
}

package Classes::Server::Linux;
our @ISA = qw(Classes::Device);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::Server::Linux::Component::EnvironmentalSubsystem")
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::Server::Linux::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::disk::usage/) {
    $self->analyze_and_check_disk_subsystem("Classes::UCDMIB::Component::DiskSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::Server::Linux::Component::MemSubsystem");
  } elsif ($self->mode =~ /device::process::status/) {
    $self->analyze_and_check_process_subsystem("Classes::UCDMIB::Component::ProcessSubsystem");
  } elsif ($self->mode =~ /device::uptime/ && $self->implements_mib("HOST-RESOURCES-MIB")) {
    $self->analyze_and_check_uptime_subsystem("Classes::HOSTRESOURCESMIB::Component::UptimeSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::Server::Linux::Component::CpuSubsystem;
our @ISA = qw(Classes::Server::Linux);
use strict;

sub new {
  my ($class) = @_;
  my $self = {};
  bless $self, $class;
  $self->init();
  return $self;
}

sub init {
  my ($self) = @_;
  $self->{cpu_subsystem} =
      Classes::UCDMIB::Component::CpuSubsystem->new();
  $self->{load_subsystem} =
      Classes::UCDMIB::Component::LoadSubsystem->new();
}

sub check {
  my ($self) = @_;
  $self->{cpu_subsystem}->check();
  $self->{load_subsystem}->check();
}

sub dump {
  my ($self) = @_;
  $self->{cpu_subsystem}->dump();
  $self->{load_subsystem}->dump();
}



package Classes::Server::Linux::Component::EnvironmentalSubsystem;
our @ISA = qw(Classes::Server::Linux);
use strict;

sub new {
  my ($class) = @_;
  my $self = {};
  bless $self, $class;
  $self->init();
  return $self;
}

sub init {
  my ($self) = @_;
  $self->{fan_subsystem} =
      Classes::LMSENSORSMIB::Component::FanSubsystem->new();
  $self->{temperature_subsystem} =
      Classes::LMSENSORSMIB::Component::TemperatureSubsystem->new();
}

sub check {
  my ($self) = @_;
  $self->{fan_subsystem}->check();
  $self->{temperature_subsystem}->check();
  if (! $self->check_messages()) {
    $self->add_ok("environmental hardware working fine");
  }
}

sub dump {
  my ($self) = @_;
  $self->{fan_subsystem}->dump();
  $self->{temperature_subsystem}->dump();
}


package Classes::Server::Linux::Component::MemSubsystem;
our @ISA = qw(Classes::Server::Linux);
use strict;

sub new {
  my ($class) = @_;
  my $self = {};
  bless $self, $class;
  $self->init();
  return $self;
}

sub init {
  my ($self) = @_;
  $self->{mem_subsystem} =
      Classes::UCDMIB::Component::MemSubsystem->new();
  $self->{swap_subsystem} =
      Classes::UCDMIB::Component::SwapSubsystem->new();
}

sub check {
  my ($self) = @_;
  $self->{mem_subsystem}->check();
  $self->{swap_subsystem}->check();
}

sub dump {
  my ($self) = @_;
  $self->{mem_subsystem}->dump();
  $self->{swap_subsystem}->dump();
}



package Classes::Bintec::Bibo::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->bulk_is_baeh();
  # there is temperature/sensor information in these mibs
  # mib-sensor.mib mib-box.mib mib-sysped.mib mib-sysiny.mib mibsysx8.mib
  # but i don't have a device which implements them
  $self->add_ok('hardware working fine. at least i hope so, because no checks are implemented');
}


package Classes::Bintec::Bibo::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->bulk_is_baeh();
  $self->get_snmp_tables('BIANCA-BRICK-MIBRES-MIB', [
      ['mem', 'memoryTable', 'Classes::Bintec::Bibo::Component::MemSubsystem::Memory'],
  ]);
}


package Classes::Bintec::Bibo::Component::MemSubsystem::Memory;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish  {
  my ($self) = @_;
  $self->{usage} = $self->{memoryInuse} /
      $self->{memoryTotal} * 100;
  bless $self, "Classes::Bintec::Bibo::Component::MemSubsystem::Memory::Flash"
      if $self->{memoryType} eq "flash";
  bless $self, "Classes::Bintec::Bibo::Component::MemSubsystem::Memory::Dram"
      if $self->{memoryType} eq "dram";
  bless $self, "Classes::Bintec::Bibo::Component::MemSubsystem::Memory::Dpool"
      if $self->{memoryType} eq "dpool";
}


package Classes::Bintec::Bibo::Component::MemSubsystem::Memory::Flash;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->{memoryDescr} = $self->unhex_octet_string($self->{memoryDescr});
  $self->{memoryDescr} =~ s/\0//g;
  $self->add_info(sprintf '%s usage is %.2f%%',
      $self->{memoryDescr}, $self->{usage});
  my $label = 'memory_'.$self->{memoryDescr}.'_usage';
  $self->set_thresholds(metric => $label, warning => 90, critical => 95);
  $self->add_message($self->check_thresholds(metric => $label, value => $self->{usage}));
  $self->add_perfdata(
      label => $label,
      value => $self->{usage},
      uom => '%',
  );
}


package Classes::Bintec::Bibo::Component::MemSubsystem::Memory::Dram;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->{memoryDescr} = $self->unhex_octet_string($self->{memoryDescr});
  $self->{memoryDescr} =~ s/\0//g;
  $self->add_info(sprintf '%s usage is %.2f%%',
      $self->{memoryDescr}, $self->{usage});
  my $label = 'memory_'.$self->{memoryDescr}.'_usage';
  $self->set_thresholds(metric => $label, warning => 80, critical => 90);
  $self->add_message($self->check_thresholds(metric => $label, value => $self->{usage}));
  $self->add_perfdata(
      label => $label,
      value => $self->{usage},
      uom => '%',
  );
}

package Classes::Bintec::Bibo::Component::MemSubsystem::Memory::Dpool;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf '%s usage is %.2f%%',
      $self->{memoryDescr}, $self->{usage});
  my $label = 'memory_'.$self->{memoryDescr}.'_usage';
  $self->add_perfdata(
      label => $label,
      value => $self->{usage},
      uom => '%',
  );
}


package Classes::Bintec::Bibo::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->bulk_is_baeh();
  $self->get_snmp_tables('BIANCA-BRICK-MIBRES-MIB', [
      ['cpus', 'cpuTable', 'Classes::Bintec::Bibo::Component::CpuSubsystem::Cpu'],
  ]);
}


package Classes::Bintec::Bibo::Component::CpuSubsystem::Cpu;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->valdiff({name => 'cpu'}, qw(cpuTotalIdle));
  $self->{cpuTotalUsage} = 100 - (100 * $self->{delta_cpuTotalIdle} / $self->{delta_timestamp});
  if ($self->{cpuTotalUsage} < 0 || $self->{cpuTotalUsage} > 100 || ! $self->{delta_cpuTotalIdle}) {
    # falls irgendein bloedsinn passiert
    $self->{cpuTotalUsage} = 100 - $self->{cpuLoadIdle60s};
  }
}

sub check {
  my ($self) = @_;
  my $label = 'cpu_'.$self->{cpuDescr};
  $self->add_info(sprintf 'cpu %d (%s) usage is %.2f%%',
      $self->{cpuNumber},
      $self->{cpuDescr},
      $self->{cpuTotalUsage});
  $self->set_thresholds(metric => $label, warning => '80', critical => '90');
  $self->add_message($self->check_thresholds(
      metric => $label, value => $self->{cpuTotalUsage}));
  $self->add_perfdata(
      label => $label,
      value => $self->{cpuTotalUsage},
      uom => '%',
  );
}

package Classes::Bintec::Bibo;
our @ISA = qw(Classes::Bintec);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::Bintec::Bibo::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::Bintec::Bibo::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::Bintec::Bibo::Component::MemSubsystem");
  } else {
    $self->no_such_mode();
  }
}
package Classes::Bintec;
our @ISA = qw(Classes::Device);
use strict;

package Classes::Cisco::CISCOBGP4MIB::Component::PeerSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

our $errorcodes = {
  # REFERENCE       "RFC 4271, Section 4.5."
  0 => {
    0 => 'No Error',
  },
  1 => {
    0 => 'MESSAGE Header Error',
    1 => 'Connection Not Synchronized',
    2 => 'Bad Message Length',
    3 => 'Bad Message Type',
  },
  2 => {
    0 => 'OPEN Message Error',
    1 => 'Unsupported Version Number',
    2 => 'Bad Peer AS',
    3 => 'Bad BGP Identifier',
    4 => 'Unsupported Optional Parameter',
    5 => '[Deprecated => see Appendix A]',
    6 => 'Unacceptable Hold Time',
  },
  3 => {
    0 => 'UPDATE Message Error',
    1 => 'Malformed Attribute List',
    2 => 'Unrecognized Well-known Attribute',
    3 => 'Missing Well-known Attribute',
    4 => 'Attribute Flags Error',
    5 => 'Attribute Length Error',
    6 => 'Invalid ORIGIN Attribute',
    7 => '[Deprecated => see Appendix A]',
    8 => 'Invalid NEXT_HOP Attribute',
    9 => 'Optional Attribute Error',
   10 => 'Invalid Network Field',
   11 => 'Malformed AS_PATH',
  },
  4 => {
    0 => 'Hold Timer Expired',
  },
  5 => {
    0 => 'Finite State Machine Error',
  },
  6 => {
    0 => 'Cease',
    1 => 'Maximum Number of Prefixes Reached',
    2 => 'Administrative Shutdown',
    3 => 'Peer De-configured',
    4 => 'Administrative Reset',
    5 => 'Connection Rejected',
    6 => 'Other Configuration Change',
    7 => 'Connection Collision Resolution',
    8 => 'Out of Resources',
  },
};

sub init {
  my ($self) = @_;
  $self->{peers} = [];
  $self->implements_mib('INET-ADDRESS-MIB');
  $self->get_snmp_tables('CISCO-BGP4-MIB', [
      ['peers', 'cbgpPeer2Table', 'Classes::Cisco::CISCOBGP4MIB::Component::PeerSubsystem::Peer2', sub {
          my $o = shift;
	  # regexp -> arschlecken!
          if ($self->opts->name) {
	    return $self->filter_name($o->compact_v6($o->{cbgpPeer2RemoteAddr}));
	  } else {
	    return 1;
	  }
      }],
  ]);
return;
  if ($self->mode =~ /device::bgp::peer::(list|count|watch)/) {
    $self->update_entry_cache(1, 'BGP4-MIB', 'bgpPeerTable', 'cbgpPeer2RemoteAddr');
  }
  foreach ($self->get_snmp_table_objects_with_cache(
      'BGP4-MIB', 'bgpPeerTable', 'cbgpPeer2RemoteAddr')) {
    if ($self->filter_name($_->{cbgpPeer2RemoteAddr})) {
      push(@{$self->{peers}},
          Classes::BGP::Component::PeerSubsystem::Peer->new(%{$_}));
    }
  }
}

sub check {
  my ($self) = @_;
  my $errorfound = 0;
  $self->add_info('checking bgp peers');
  if ($self->mode =~ /peer::list/) {
    foreach (sort {$a->{cbgpPeer2RemoteAddr} cmp $b->{cbgpPeer2RemoteAddr}} @{$self->{peers}}) {
      printf "%s\n", $_->{cbgpPeer2RemoteAddr};
      #$_->list();
    }
    $self->add_ok("have fun");
  } elsif ($self->mode =~ /peer::count/) {
    $self->add_info(sprintf "found %d peers", scalar(@{$self->{peers}}));
    $self->set_thresholds(warning => '1:', critical => '1:');
    $self->add_message($self->check_thresholds(scalar(@{$self->{peers}})));
    $self->add_perfdata(
        label => 'peers',
        value => scalar(@{$self->{peers}}),
    );
  } elsif ($self->mode =~ /peer::watch/) {
    # take a snapshot of the peer list. -> good baseline
    # warning if there appear peers, mitigate to ok
    # critical if warn/crit percent disappear
    $self->{numOfPeers} = scalar (@{$self->{peers}});
    $self->{peerNameList} = [map { $_->{cbgpPeer2RemoteAddr} } @{$self->{peers}}];
    $self->opts->override_opt('lookback', 3600) if ! $self->opts->lookback;
    if ($self->opts->reset) {
      my $statefile = $self->create_statefile(name => 'bgppeerlist', lastarray => 1);
      unlink $statefile if -f $statefile;
    }
    $self->valdiff({name => 'bgppeerlist', lastarray => 1},
        qw(peerNameList numOfPeers));
    my $problem = 0;
    if ($self->opts->warning || $self->opts->critical) {
      $self->set_thresholds(warning => $self->opts->warning,
          critical => $self->opts->critical);
      my $before = $self->{numOfPeers} - scalar(@{$self->{delta_found_peerNameList}}) + scalar(@{$self->{delta_lost_peerNameList}});
      # use own delta_numOfPeers, because the glplugin version treats
      # negative deltas as overflows
      $self->{delta_numOfPeers} = $self->{numOfPeers} - $before;
      if ($self->opts->units && $self->opts->units eq "%") {
        my $delta_pct = $before ? (($self->{delta_numOfPeers} / $before) * 100) : 0;
        $self->add_message($self->check_thresholds($delta_pct),
          sprintf "%.2f%% delta, before: %d, now: %d", $delta_pct, $before, $self->{numOfPeers});
        $problem = $self->check_thresholds($delta_pct);
      } else {
        $self->add_message($self->check_thresholds($self->{delta_numOfPeers}),
          sprintf "%d delta, before: %d, now: %d", $self->{delta_numOfPeers}, $before, $self->{numOfPeers});
        $problem = $self->check_thresholds($self->{delta_numOfPeers});
      }
      if (scalar(@{$self->{delta_found_peerNameList}}) > 0) {
        $self->add_ok(sprintf 'found: %s',
            join(", ", @{$self->{delta_found_peerNameList}}));
      }
      if (scalar(@{$self->{delta_lost_peerNameList}}) > 0) {
        $self->add_ok(sprintf 'lost: %s',
            join(", ", @{$self->{delta_lost_peerNameList}}));
      }
    } else {
      if (scalar(@{$self->{delta_found_peerNameList}}) > 0) {
        $self->add_warning(sprintf '%d new bgp peers (%s)',
            scalar(@{$self->{delta_found_peerNameList}}),
            join(", ", @{$self->{delta_found_peerNameList}}));
        $problem = 1;
      }
      if (scalar(@{$self->{delta_lost_peerNameList}}) > 0) {
        $self->add_critical(sprintf '%d bgp peers missing (%s)',
            scalar(@{$self->{delta_lost_peerNameList}}),
            join(", ", @{$self->{delta_lost_peerNameList}}));
        $problem = 2;
      }
      $self->add_ok(sprintf 'found %d bgp peers', scalar (@{$self->{peers}}));
    }
    if ($problem) { # relevant only for lookback=9999 and support contract customers
      $self->valdiff({name => 'bgppeerlist', lastarray => 1, freeze => 1},
          qw(peerNameList numOfPeers));
    } else {
      $self->valdiff({name => 'bgppeerlist', lastarray => 1, freeze => 2},
          qw(peerNameList numOfPeers));
    }
    $self->add_perfdata(
        label => 'num_peers',
        value => scalar (@{$self->{peers}}),
    );
  } else {
    if (scalar(@{$self->{peers}}) == 0) {
      $self->add_unknown('no peers');
      return;
    }
    # es gibt
    # kleine installation: 1 peer zu 1 as, evt 2. as als fallback
    # grosse installation: n peer zu 1 as, alternative routen zum provider
    #                      n peer zu m as, mehrere provider, mehrere alternativrouten
    # 1 ausfall on 4 peers zu as ist egal
    my $as_numbers = {};
    foreach (@{$self->{peers}}) {
      $_->check();
      if (! exists $as_numbers->{$_->{cbgpPeer2RemoteAs}}->{peers}) {
        $as_numbers->{$_->{cbgpPeer2RemoteAs}}->{peers} = [];
        $as_numbers->{$_->{cbgpPeer2RemoteAs}}->{availability} = 100;
      }
      push(@{$as_numbers->{$_->{cbgpPeer2RemoteAs}}->{peers}}, $_);
    }
    if ($self->opts->name2) {
      $self->clear_ok();
      $self->clear_critical();
      if ($self->opts->name2 eq "_ALL_") {
        $self->opts->override_opt("name2", join(",", keys %{$as_numbers}));
      }
      foreach my $as (split(",", $self->opts->name2)) {
        my $asname = "";
        if ($as =~ /(\d+)=(\w+)/) {
          $as = $1;
          $asname = $2;
        }
        if (exists $as_numbers->{$as}) {
          my $num_peers = scalar(@{$as_numbers->{$as}->{peers}});
          my $num_ok_peers = scalar(grep { $_->{cbgpPeer2Faulty} == 0 } @{$as_numbers->{$as}->{peers}});
          my $num_admdown_peers = scalar(grep { $_->{cbgpPeer2AdminStatus} eq "stop" } @{$as_numbers->{$as}->{peers}});
          $as_numbers->{$as}->{availability} = 100 * $num_ok_peers / $num_peers;
          $self->set_thresholds(warning => "100:", critical => "50:");
          $self->add_message($self->check_thresholds($as_numbers->{$as}->{availability}),
              sprintf "%d from %d connections to %s are up (%.2f%%%s)",
              $num_ok_peers, $num_peers, $asname ? $asname : "AS".$as,
              $as_numbers->{$as}->{availability},
              $num_admdown_peers ? sprintf(", but %d are admin down and counted as up!", $num_admdown_peers) : "");
        } else {
          $self->add_critical(sprintf 'found no peer for %s', $asname ? $asname : "AS".$as);
        }
      }
    }
    if ($self->opts->report eq "short") {
      $self->clear_ok();
      $self->add_ok('no problems') if ! $self->check_messages();
    }
  }
}


package Classes::Cisco::CISCOBGP4MIB::Component::PeerSubsystem::Peer2;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };

sub finish {
  my ($self) = @_;
  my @tmp_indices = @{$self->{indices}};
  my $last_tmp = scalar(@tmp_indices) - 1;
  $self->{cbgpPeer2Type} = $self->mibs_and_oids_definition(
      'INET-ADDRESS-MIB', 'InetAddressType', $tmp_indices[0]);
  shift @tmp_indices;

  $self->{cbgpPeer2RemoteAddr} = $self->mibs_and_oids_definition(
      'INET-ADDRESS-MIB', 'InetAddressMaker',
      $self->{cbgpPeer2Type}, @tmp_indices);

  # cbgpPeer2LocalAddr kann ein Leerstring sein
  $self->{cbgpPeer2LocalAddr} = $self->mibs_and_oids_definition(
      'INET-ADDRESS-MIB', 'InetAddress',
      $self->{cbgpPeer2LocalAddr}, $self->{cbgpPeer2Type}) if $self->{cbgpPeer2LocalAddr};
  $self->{cbgpPeer2LocalAddr} = "999.999.999.999" if ! $self->{cbgpPeer2LocalAddr};

  $self->{cbgpPeer2LastError} |= "00 00";
  my $errorcode = 0;
  my $subcode = 0;
  if (lc $self->{cbgpPeer2LastError} =~ /([0-9a-f]+)\s+([0-9a-f]+)/) {
    $errorcode = hex($1) * 1;
    $subcode = hex($2) * 1;
  }
  $self->{cbgpPeer2LastError} = $Classes::Cisco::CISCOBGP4MIB::Component::PeerSubsystem::errorcodes->{$errorcode}->{$subcode};
  $self->{cbgpPeer2RemoteAsName} = "";
  $self->{cbgpPeer2RemoteAsImportant} = 0; # if named in --name2
  $self->{cbgpPeer2Faulty} = 0;
  my @parts = gmtime($self->{cbgpPeer2FsmEstablishedTime});
  $self->{cbgpPeer2FsmEstablishedTime} = sprintf ("%dd, %dh, %dm, %ds",@parts[7,2,1,0]);

  if ($self->{cbgpPeer2Type} eq "ipv6") {
    $self->{cbgpPeer2RemoteAddrCompact} = $self->compact_v6($self->{cbgpPeer2RemoteAddr});
    $self->{cbgpPeer2LocalAddrCompact} = $self->compact_v6($self->{cbgpPeer2LocalAddr});
  } else {
    $self->{cbgpPeer2RemoteAddrCompact} = $self->{cbgpPeer2RemoteAddr};
    $self->{cbgpPeer2LocalAddrCompact} = $self->{cbgpPeer2LocalAddr};
  }
}

sub check {
  my ($self) = @_;
  if ($self->opts->name2) {
    foreach my $as (split(",", $self->opts->name2)) {
      if ($as =~ /(\d+)=(\w+)/) {
        $as = $1;
        $self->{cbgpPeer2RemoteAsName} = ", ".$2;
      } else {
        $self->{cbgpPeer2RemoteAsName} = "";
      }
      if ($as eq "_ALL_" || $as == $self->{cbgpPeer2RemoteAs}) {
        $self->{cbgpPeer2RemoteAsImportant} = 1;
      }
    }
  } else {
    $self->{cbgpPeer2RemoteAsImportant} = 1;
  }
  if ($self->{cbgpPeer2State} eq "established") {
    $self->add_ok(sprintf "peer %s (AS%s) state is %s since %s",
        $self->{cbgpPeer2RemoteAddr},
        $self->{cbgpPeer2RemoteAs}.$self->{cbgpPeer2RemoteAsName},
        $self->{cbgpPeer2State},
        $self->{cbgpPeer2FsmEstablishedTime}
    );
  } elsif ($self->{cbgpPeer2AdminStatus} eq "stop") {
    # admin down is by default critical, but can be mitigated
    $self->add_message(
        defined $self->opts->mitigation() ? $self->opts->mitigation() :
            $self->{cbgpPeer2RemoteAsImportant} ? WARNING : OK,
        sprintf "peer %s (AS%s) state is %s (is admin down)",
        $self->{cbgpPeer2RemoteAddr},
        $self->{cbgpPeer2RemoteAs}.$self->{cbgpPeer2RemoteAsName},
        $self->{cbgpPeer2State}
    );
    $self->{cbgpPeer2Faulty} =
        defined $self->opts->mitigation() && $self->opts->mitigation() eq "ok" ? 0 :
        $self->{cbgpPeer2RemoteAsImportant} ? 1 : 0;
  } else {
    # cbgpPeer2LastError may be undef, at least under the following circumstances
    # cbgpPeer2RemoteAsName is "", cbgpPeer2AdminStatus is "start",
    # cbgpPeer2State is "active"
    $self->add_message($self->{cbgpPeer2RemoteAsImportant} ? CRITICAL : OK,
        sprintf "peer %s (AS%s) state is %s (last error: %s)",
        $self->{cbgpPeer2RemoteAddr},
        $self->{cbgpPeer2RemoteAs}.$self->{cbgpPeer2RemoteAsName},
        $self->{cbgpPeer2State},
        $self->{cbgpPeer2LastError}||"no error"
    );
    $self->{cbgpPeer2Faulty} = $self->{cbgpPeer2RemoteAsImportant} ? 1 : 0;
  }
}


package Classes::Cisco::EIGRPMIB::Component::PeerSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('CISCO-EIGRP-MIB', [
		  #['peers', 'cEigrpPeerTable', 'Classes::Cisco::EIGRPMIB::Component::PeerSubsystem::Peer', , sub { my ($o) = @_; return $self->filter_name($o->{ospfNbrIpAddr}) && $self->filter_name2($o->{ospfNbrRtrId}) }],
    ['vpns', 'cEigrpVpnTable', 'Classes::Cisco::EIGRPMIB::Component::PeerSubsystem::Vpn'],
    ['peers', 'cEigrpPeerTable', 'Classes::Cisco::EIGRPMIB::Component::PeerSubsystem::Peer'],
    ['stats', 'cEigrpTraffStatsTable', 'Classes::Cisco::EIGRPMIB::Component::PeerSubsystem::TrafficStats'],
  ]);
  #if (! @{$self->{peers}}) {
  #$self->add_unknown("no neighbors found");
  #}
  $self->merge_tables_with_code('peers', 'vpns', sub {
      my ($peer, $vpn) = @_;
      return ($peer->{cEigrpVpnId} == $vpn->{cEigrpVpnId}) ? 1 : 0;
  });
  $self->merge_tables_with_code('peers', 'stats', sub {
      my ($peer, $stat) = @_;
      return ($peer->{cEigrpVpnId} == $stat->{cEigrpVpnId} &&
          $peer->{cEigrpAsNumber} == $stat->{cEigrpAsNumber}) ? 1 : 0;
  });
}

sub check {
  my ($self) = @_;
  if ($self->mode =~ /device::eigrp::peer::list/) {
    foreach (@{$self->{peers}}) {
      printf "%s (vpn %s, as %d, routerid %s) up since %s\n",
          $_->{cEigrpPeerAddr}, $_->{cEigrpVpnName}, $_->{cEigrpAsNumber},
	  $_->{cEigrpAsRouterId}, $_->human_timeticks($_->{cEigrpUpTime});
    }
    $self->add_ok("have fun");
  } elsif ($self->mode =~ /peer::count/) {
    $self->add_info(sprintf "found %d peers", scalar(@{$self->{peers}}));
    $self->set_thresholds(warning => '1:', critical => '1:');
    $self->add_message($self->check_thresholds(scalar(@{$self->{peers}})));
    $self->add_perfdata(
        label => 'peers',
        value => scalar(@{$self->{peers}}),
    );
  } elsif ($self->mode =~ /peer::watch/) {
    # take a snapshot of the peer list. -> good baseline
    # warning if there appear peers, mitigate to ok
    # critical if warn/crit percent disappear
    $self->{numOfPeers} = scalar (@{$self->{peers}});
    $self->{peerNameList} = [map { $_->{cEigrpPeerAddr} } @{$self->{peers}}];
    $self->opts->override_opt('lookback', 3600) if ! $self->opts->lookback;
    if ($self->opts->reset) {
      my $statefile = $self->create_statefile(name => 'eigrppeerlist', lastarray => 1);
      unlink $statefile if -f $statefile;
    }
    $self->valdiff({name => 'eigrppeerlist', lastarray => 1},
        qw(peerNameList numOfPeers));
    my $problem = 0;
    if ($self->opts->warning || $self->opts->critical) {
      $self->set_thresholds(warning => $self->opts->warning,
          critical => $self->opts->critical);
      my $before = $self->{numOfPeers} - scalar(@{$self->{delta_found_peerNameList}}) + scalar(@{$self->{delta_lost_peerNameList}});
      # use own delta_numOfPeers, because the glplugin version treats
      # negative deltas as overflows
      $self->{delta_numOfPeers} = $self->{numOfPeers} - $before;
      if ($self->opts->units && $self->opts->units eq "%") {
        my $delta_pct = $before ? (($self->{delta_numOfPeers} / $before) * 100) : 0;
        $self->add_message($self->check_thresholds($delta_pct),
          sprintf "%.2f%% delta, before: %d, now: %d", $delta_pct, $before, $self->{numOfPeers});
        $problem = $self->check_thresholds($delta_pct);
      } else {
        $self->add_message($self->check_thresholds($self->{delta_numOfPeers}),
          sprintf "%d delta, before: %d, now: %d", $self->{delta_numOfPeers}, $before, $self->{numOfPeers});
        $problem = $self->check_thresholds($self->{delta_numOfPeers});
      }
      if (scalar(@{$self->{delta_found_peerNameList}}) > 0) {
        $self->add_ok(sprintf 'found: %s',
            join(", ", @{$self->{delta_found_peerNameList}}));
      }
      if (scalar(@{$self->{delta_lost_peerNameList}}) > 0) {
        $self->add_ok(sprintf 'lost: %s',
            join(", ", @{$self->{delta_lost_peerNameList}}));
      }
    } else {
      if (scalar(@{$self->{delta_found_peerNameList}}) > 0) {
        $self->add_warning(sprintf '%d new eigrp peers (%s)',
            scalar(@{$self->{delta_found_peerNameList}}),
            join(", ", @{$self->{delta_found_peerNameList}}));
        $problem = 1;
      }
      if (scalar(@{$self->{delta_lost_peerNameList}}) > 0) {
        $self->add_critical(sprintf '%d eigrp peers missing (%s)',
            scalar(@{$self->{delta_lost_peerNameList}}),
            join(", ", @{$self->{delta_lost_peerNameList}}));
        $problem = 2;
      }
      $self->add_ok(sprintf 'found %d eigrp peers', scalar (@{$self->{peers}}));
    }
    if ($problem) { # relevant only for lookback=9999 and support contract customers
      $self->valdiff({name => 'eigrppeerlist', lastarray => 1, freeze => 1},
          qw(peerNameList numOfPeers));
    } else {
      $self->valdiff({name => 'eigrppeerlist', lastarray => 1, freeze => 2},
          qw(peerNameList numOfPeers));
    }
    $self->add_perfdata(
        label => 'num_peers',
        value => scalar (@{$self->{peers}}),
    );
  }
}


package Classes::Cisco::EIGRPMIB::Component::PeerSubsystem::TrafficStats;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{cEigrpVpnId} = $self->{indices}->[0];
  $self->{cEigrpAsNumber} = $self->{indices}->[1];
}


package Classes::Cisco::EIGRPMIB::Component::PeerSubsystem::Vpn;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{cEigrpVpnId} = $self->{indices}->[0];
}


package Classes::Cisco::EIGRPMIB::Component::PeerSubsystem::Peer;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{cEigrpVpnId} = $self->{indices}->[0];
  $self->{cEigrpAsNumber} = $self->{indices}->[1];
  $self->{cEigrpHandle} = $self->{indices}->[2];
  if ($self->{cEigrpUpTime} =~ /(\d+):(\d+):(\d+)/) {
    $self->{cEigrpUpTime} = $1 * 3600 + $2 * 60 + $3;
  } elsif ($self->{cEigrpUpTime} =~ /(\d+)d(\d+)h/) {
    $self->{cEigrpUpTime} = $1 * 3600 * 24 + $2 * 3600;
  } elsif ($self->{cEigrpUpTime} =~ /(\d+)w(\d+)d/) {
    $self->{cEigrpUpTime} = $1 * 3600 * 24 * 7 + $2 * 3600 * 24;
  }
  if ($self->opts->name2) {
    foreach my $as (split(",", $self->opts->name2)) {
      if ($as =~ /(\d+)=(\w+)/) {
        $as = $1;
        $self->{eigrpPeerRemoteAsName} = ", ".$2;
      } else {
        $self->{eigrpPeerRemoteAsName} = "";
      }
      if ($as eq "_ALL_" || $as == $self->{eigrpPeerRemoteAs}) {
        $self->{eigrpPeerRemoteAsImportant} = 1;
      }
    }
  } else {
    $self->{eigrpPeerRemoteAsImportant} = 1;
  }
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf "neighbor %s (Id %s) has status %s",
      $self->{name}, $self->{ospfNbrRtrId}, $self->{ospfNbrState});
  if ($self->{ospfNbrState} ne "full" && $self->{ospfNbrState} ne "twoWay") {
    $self->add_critical();
  } else {
    $self->add_ok();
  }
}

package Classes::Cisco::CISCOPORTSECURITYMIB::Component::InterfaceSubsystem;
our @ISA = qw(Classes::IFMIB::Component::InterfaceSubsystem);
use strict;

sub init {
  my ($self) = @_;
  my @iftable_columns = qw(ifIndex ifDescr ifAlias ifName);
  my @cpsifconfigtable_columns = ();
  if ($self->mode =~ /device::interfaces::portsecurity/) {
    $self->get_snmp_objects('CISCO-PORT-SECURITY-MIB', qw(cpsGlobalPortSecurityEnable));
    if ($self->{cpsGlobalPortSecurityEnable} eq 'false') {
      return;
    }
    push(@iftable_columns, qw(
        ifOperStatus ifAdminStatus
    ));
    push(@cpsifconfigtable_columns, qw(
        cpsIfPortSecurityEnable cpsIfPortSecurityStatus cpsIfViolationCount
        cpsIfSecureLastMacAddress
    ));
  } else {
    $self->SUPER::init();
  }
  if ($self->mode =~ /device::interfaces::portsecurity/) {
    my $if_has_changed = $self->update_interface_cache(0);
    my $only_admin_up =
        $self->opts->name && $self->opts->name eq '_adminup_' ? 1 : 0;
    my $only_oper_up =
        $self->opts->name && $self->opts->name eq '_operup_' ? 1 : 0;
    if ($only_admin_up || $only_oper_up) {
      $self->override_opt('name', undef);
      $self->override_opt('drecksptkdb', undef);
    }
    my @indices = $self->get_interface_indices();
    my @all_indices = @indices;
    my @selected_indices = ();
    if (! $self->opts->name && ! $self->opts->name3) {
      # get_table erzwingen
      @indices = ();
      $self->bulk_is_baeh(10);
    }
    if (!$self->opts->name || scalar(@indices) > 0) {
      my @save_indices = @indices; # die werden in get_snmp_table_objects geshiftet
      foreach ($self->get_snmp_table_objects(
          'IFMIB', 'ifTable+ifXTable', \@indices, \@iftable_columns)) {
        next if $only_admin_up && $_->{ifAdminStatus} ne 'up';
        next if $only_oper_up && $_->{ifOperStatus} ne 'up';
        my $interface = Classes::Cisco::CISCOPORTSECURITYMIB::Component::InterfaceSubsystem::Interface->new(%{$_});
        $interface->{columns} = [@iftable_columns];
        push(@{$self->{interfaces}}, $interface);
      }
      @indices = map { [$_->{ifIndex}]; } @{$self->{interfaces}};
      if (! $self->opts->name && ! $self->opts->name3) {
        $self->get_snmp_tables('CISCO-PORT-SECURITY-MIB', [
            ['cpsifs', 'cpsIfConfigTable', 'Classes::Cisco::CISCOPORTSECURITYMIB::Component::InterfaceSubsystem::CpsIf'],
        ]);
      } else {
        $self->{cpsifs} = [];
        foreach ($self->get_snmp_table_objects(
            'CISCO-PORT-SECURITY-MIB', 'cpsIfConfigTable', \@indices, \@cpsifconfigtable_columns)) {
          my $interface = Classes::Cisco::CISCOPORTSECURITYMIB::Component::InterfaceSubsystem::CpsIf->new(%{$_});
          push(@{$self->{cpsifs}}, $interface);
        }
      }
      $self->merge_tables('interfaces', 'cpsifs');
      @{$self->{interfaces}} = grep {
        exists $_->{cpsIfPortSecurityEnable} &&
            $_->{cpsIfPortSecurityEnable} eq 'true';
      } @{$self->{interfaces}};
    }
  } else {
    $self->SUPER::init();
  }
}

sub check {
  my ($self) = @_;
  if ($self->mode =~ /device::interfaces::portsecurity/) {
    if ($self->{cpsGlobalPortSecurityEnable} eq 'true') {
      $self->SUPER::check();
    } else {
      $self->add_ok("port security is not enabled on this device");
    }
  } else {
    $self->SUPER::check();
  }
}

package Classes::Cisco::CISCOPORTSECURITYMIB::Component::InterfaceSubsystem::CpsIf;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{cpsIfSecureLastMacAddress} = $self->{cpsIfSecureLastMacAddress} ?
      $self->unhex_mac($self->{cpsIfSecureLastMacAddress}) : '-unknown-';

}

package Classes::Cisco::CISCOPORTSECURITYMIB::Component::InterfaceSubsystem::Interface;
our @ISA = qw(Classes::IFMIB::Component::InterfaceSubsystem::Interface);
use strict;


sub check {
  my ($self) = @_;
  my $full_descr = sprintf "%s%s",
      $self->{ifDescr},
      $self->{ifAlias} && $self->{ifAlias} ne $self->{ifDescr} ?
          " (alias ".$self->{ifAlias}.")" : "";
  if ($self->mode =~ /device::interfaces::portsecurity/) {
    if ($self->{cpsIfPortSecurityEnable} eq 'false') {
      $self->add_info(sprintf 'interface %s security not enabled',
          $full_descr);
      $self->add_ok();
    } else {
      $self->add_info(sprintf 'interface %s security status is %s',
          $full_descr, $self->{cpsIfPortSecurityStatus});
      if ($self->{cpsIfPortSecurityStatus} eq 'secureup') {
        $self->add_ok();
      } elsif ($self->{cpsIfPortSecurityStatus} eq 'securedown') {
        $self->annotate_info('last mac address was '.$self->{cpsIfSecureLastMacAddress});
        $self->add_unknown_mitigation();
      } elsif ($self->{cpsIfPortSecurityStatus} eq 'shutdown') {
        $self->annotate_info('last mac address was '.$self->{cpsIfSecureLastMacAddress});
        $self->add_critical();
      }
    }
  } else {
    $self->SUPER::check();
  }
}


package Classes::Cisco::OLDCISCOINTERFACESMIB::Component::InterfaceSubsystem;
our @ISA = qw(Classes::IFMIB::Component::InterfaceSubsystem);
use strict;

sub init {
  my ($self) = @_;
  $self->{interfaces} = [];
  $self->{etherstats} = [];
  #$self->session_translate(['-octetstring' => 1]);
  my @iftable_columns = qw(ifIndex ifDescr ifAlias ifName);
  my @ethertable_columns = qw();
  my @ethertablehc_columns = qw();
  my @rmontable_columns = qw();
  if ($self->mode =~ /device::interfaces::etherstats/) {
    push(@iftable_columns, qw(
        ifOperStatus ifAdminStatus
        ifInMulticastPkts ifOutMulticastPkts
        ifInBroadcastPkts ifOutBroadcastPkts
        ifInUcastPkts ifOutUcastPkts
        ifHCInMulticastPkts ifHCOutMulticastPkts
        ifHCInBroadcastPkts ifHCOutBroadcastPkts
        ifHCInUcastPkts ifHCOutUcastPkts
    ));
    push(@ethertable_columns, qw(
        dot3StatsAlignmentErrors dot3StatsFCSErrors
        dot3StatsSingleCollisionFrames dot3StatsMultipleCollisionFrames
        dot3StatsSQETestErrors dot3StatsDeferredTransmissions
        dot3StatsLateCollisions dot3StatsExcessiveCollisions
        dot3StatsInternalMacTransmitErrors dot3StatsCarrierSenseErrors
        dot3StatsFrameTooLongs dot3StatsInternalMacReceiveErrors
    ));
    push(@ethertablehc_columns, qw(
        dot3HCStatsFCSErrors
    ));
    push(@rmontable_columns, qw(
        locIfInCRC
    ));
    if ($self->opts->report !~ /^(long|short|html)$/) {
      my @reports = split(',', $self->opts->report);
      @ethertable_columns = grep {
        my $ec = $_;
        grep {
          $ec eq $_;
        } @reports;
      } @ethertable_columns;
      @ethertablehc_columns = grep {
        my $ec = $_;
        grep {
          $ec eq $_;
        } @reports;
      } @ethertablehc_columns;
      @rmontable_columns = grep {
        my $ec = $_;
        grep {
          $ec eq $_;
        } @reports;
      } @rmontable_columns;
    }
    if (grep /dot3HCStatsFCSErrors/, @ethertablehc_columns) {
      # wenn ifSpeed == 4294967295, dann 10GBit, dann dot3HCStatsFCSErrors
      push(@iftable_columns, qw(
          ifSpeed
      ));
    }
    if (@rmontable_columns) {
      push(@rmontable_columns, qw(
        locIfDescr
        locIfHardType
      ));
    }
  } else {
    $self->SUPER::init();
  }
  if ($self->mode =~ /device::interfaces::etherstats/) {
    my $if_has_changed = $self->update_interface_cache(0);
    my $only_admin_up =
        $self->opts->name && $self->opts->name eq '_adminup_' ? 1 : 0;
    my $only_oper_up =
        $self->opts->name && $self->opts->name eq '_operup_' ? 1 : 0;
    if ($only_admin_up || $only_oper_up) {
      $self->override_opt('name', undef);
      $self->override_opt('drecksptkdb', undef);
    }
    my @indices = $self->get_interface_indices();
    my @all_indices = @indices;
    my @selected_indices = ();
    if (! $self->opts->name && ! $self->opts->name3) {
      # get_table erzwingen
      @indices = ();
      $self->bulk_is_baeh(10);
    }
    if (!$self->opts->name || scalar(@indices) > 0) {
      my @save_indices = @indices; # die werden in get_snmp_table_objects geshiftet
      foreach ($self->get_snmp_table_objects(
          'IFMIB', 'ifTable+ifXTable', \@indices, \@iftable_columns)) {
        next if $only_admin_up && $_->{ifAdminStatus} ne 'up';
        next if $only_oper_up && $_->{ifOperStatus} ne 'up';
        my $interface = Classes::Cisco::OLDCISCOINTERFACESMIB::Component::InterfaceSubsystem::Interface->new(%{$_});
        $interface->{columns} = [@iftable_columns];
        push(@{$self->{interfaces}}, $interface);
      }
      if ($self->mode =~ /device::interfaces::etherstats/) {
        @indices = @save_indices;
        my @etherindices = ();
        my @etherhcindices = ();
        my @lifindices = ();
        foreach my $interface (@{$self->{interfaces}}) {
          push(@selected_indices, [$interface->{ifIndex}]);
          if (@ethertablehc_columns && $interface->{ifSpeed} == 4294967295) {
            push(@etherhcindices, [$interface->{ifIndex}]);
          }
          push(@etherindices, [$interface->{ifIndex}]);
          push(@lifindices, [$interface->{ifIndex}]);
        }
        $self->debug(
            sprintf 'all_interfaces %d, selected %d, ether %d, etherhc %d',
                scalar(@all_indices), scalar(@selected_indices),
                scalar(@etherindices), scalar(@etherhcindices));
        if ($only_admin_up || $only_oper_up) {
          if (scalar(@etherindices) > scalar(@all_indices) * 0.70) {
            $self->bulk_is_baeh(20);
            @etherindices = ();
          }
          if (scalar(@etherhcindices) > scalar(@all_indices) * 0.70) {
            $self->bulk_is_baeh(20);
            @etherhcindices = ();
          }
          if (scalar(@lifindices) > scalar(@all_indices) * 0.70) {
            $self->bulk_is_baeh(20);
            @lifindices = ();
          }
        } elsif (! @indices) {
            $self->bulk_is_baeh(20);
          @etherindices = ();
          if (scalar(@etherhcindices) > scalar(@all_indices) * 0.70) {
            @etherhcindices = ();
          }
          @lifindices = ();
        }
        if (@ethertable_columns) {
          # es gibt interfaces mit ifSpeed == 4294967295
          # aber nix in dot3HCStatsTable. also dann dot3StatsTable fuer alle
          foreach my $etherstat ($self->get_snmp_table_objects(
              'ETHERLIKE-MIB', 'dot3StatsTable', \@etherindices, \@ethertable_columns)) {
            foreach my $interface (@{$self->{interfaces}}) {
              if ($interface->{ifIndex} == $etherstat->{flat_indices}) {
                foreach my $key (grep /^dot3/, keys %{$etherstat}) {
                  $interface->{$key} = $etherstat->{$key};
                }
                push(@{$interface->{columns}}, @ethertable_columns);
                last;
              }
            }
          }
        }
        if (@ethertablehc_columns && scalar(@etherhcindices)) {
          foreach my $etherstat ($self->get_snmp_table_objects(
              'ETHERLIKE-MIB', 'dot3HCStatsTable', \@etherhcindices, \@ethertablehc_columns)) {
            foreach my $interface (@{$self->{interfaces}}) {
              if ($interface->{ifIndex} == $etherstat->{flat_indices}) {
                foreach my $key (grep /^dot3/, keys %{$etherstat}) {
                  $interface->{$key} = $etherstat->{$key};
                }
                push(@{$interface->{columns}}, @ethertablehc_columns);
                if (grep /^dot3HCStatsFCSErrors/, @{$interface->{columns}}) {
                  @{$interface->{columns}} = grep {
                    $_ if $_ ne 'dot3StatsFCSErrors';
                  } @{$interface->{columns}};
                }
                last;
              }
            }
          }
        }
        if (@rmontable_columns) {
          foreach my $etherstat ($self->get_snmp_table_objects(
              'OLD-CISCO-INTERFACES-MIB', 'lifTable', \@lifindices, \@rmontable_columns)) {
            foreach my $interface (@{$self->{interfaces}}) {
              if ($interface->{ifIndex} eq $etherstat->{flat_indices}) {
                foreach my $key (grep /^locIf/, keys %{$etherstat}) {
                  $interface->{$key} = $etherstat->{$key};
                }
                push(@{$interface->{columns}}, @rmontable_columns);
                last;
              }
            }
          }
          @{$self->{interfaces}} = grep {
              grep /locIf/, keys %{$_};
          } @{$self->{interfaces}};
        }
        foreach my $interface (@{$self->{interfaces}}) {
          delete $interface->{dot3StatsIndex};
          delete $interface->{locIfDescr};
          delete $interface->{locIfHardType};
          @{$interface->{columns}} = grep {
              $_ !~ /^(dot3StatsIndex|locIfDescr|locIfHardType)$/;
          } @{$interface->{columns}};
          $interface->init_etherstats;
        }
      }
    }
  } else {
    $self->SUPER::init();
  }
}


package Classes::Cisco::OLDCISCOINTERFACESMIB::Component::InterfaceSubsystem::Interface;
our @ISA = qw(Classes::IFMIB::Component::InterfaceSubsystem::Interface);
use strict;
use Digest::MD5 qw(md5_hex);


sub finish {
  my ($self) = @_;
  foreach my $key (keys %{$self}) {
    next if $key !~ /^if/;
    $self->{$key} = 0 if ! defined $self->{$key};
  }
  $self->{ifDescr} = unpack("Z*", $self->{ifDescr}); # windows has trailing nulls
  if ($self->opts->name2 && $self->opts->name2 =~ /\(\.\*\?*\)/) {
    if ($self->{ifDescr} =~ $self->opts->name2) {
      $self->{ifDescr} = $1;
    }
  }
  # Manche Stinkstiefel haben ifName, ifHighSpeed und z.b. ifInMulticastPkts,
  # aber keine ifHC*Octets. Gesehen bei Cisco Switch Interface Nul0 o.ae.
  if ($self->{ifName} && defined $self->{ifHCInUcastPkts} &&
      defined $self->{ifHCOutUcastPkts} && $self->{ifHCInUcastPkts} ne "noSuchObject") {
    $self->{ifAlias} ||= $self->{ifName};
    $self->{ifName} = unpack("Z*", $self->{ifName});
    $self->{ifAlias} = unpack("Z*", $self->{ifAlias});
    $self->{ifAlias} =~ s/\|/!/g if $self->{ifAlias};
    bless $self,'Classes::Cisco::OLDCISCOINTERFACESMIB::Component::InterfaceSubsystem::Interface::64bit';
  }
  if (! exists $self->{ifInUcastPkts} && ! exists $self->{ifOutUcastPkts} &&
      $self->mode =~ /device::interfaces::(broadcast|complete|etherstats)/) {
    bless $self, 'Classes::IFMIB::Component::InterfaceSubsystem::Interface::StackSub';
  }
  if ($self->{ifPhysAddress}) {
    $self->{ifPhysAddress} = join(':', unpack('(H2)*', $self->{ifPhysAddress})); 
  }
  $self->init();
}

sub init_etherstats {
  my ($self) = @_;
  if ($self->mode =~ /device::interfaces::etherstats/) {
    $Monitoring::GLPlugin::mode = "device::interfaces::broadcasts";
    $self->init();
    $Monitoring::GLPlugin::mode = "device::interfaces::etherstats";
    # in the beginning we start 32/64bit-unaware, so columns contain
    # also ifHC-names, but there are no such attributes in the interface object
    @{$self->{columns}} = grep {
      ! /^ifHC(In|Out).*castPkts$/
    } grep {
      ! /^(ifOperStatus|ifAdminStatus|ifIndex|ifDescr|ifAlias|ifName)$/
    } @{$self->{columns}};
    my $ident = $self->{ifDescr}.md5_hex(join('_', @{$self->{columns}}));
    $self->valdiff({name => $ident}, @{$self->{columns}});
    $self->{delta_InPkts} = $self->{delta_ifInUcastPkts} +
        $self->{delta_ifInMulticastPkts} + $self->{delta_ifInBroadcastPkts};
    $self->{delta_OutPkts} = $self->{delta_ifOutUcastPkts} +
        $self->{delta_ifOutMulticastPkts} + $self->{delta_ifOutBroadcastPkts};
    for my $stat (grep { /^(dot3|locIf)/ } @{$self->{columns}}) {
      next if ! defined $self->{'delta_'.$stat};
      $self->{$stat.'Percent'} = $self->{delta_InPkts} + $self->{delta_OutPkts} ?
          100 * $self->{'delta_'.$stat} /
          ($self->{delta_InPkts} + $self->{delta_OutPkts}) : 0;
    }
  }
  return $self;
}

sub check {
  my ($self) = @_;
  my $full_descr = sprintf "%s%s",
      $self->{ifDescr},
      $self->{ifAlias} && $self->{ifAlias} ne $self->{ifDescr} ?
          " (alias ".$self->{ifAlias}.")" : "";
  if ($self->mode =~ /device::interfaces::etherstats/) {
    for my $stat (grep { /^(dot3|locIf)/ } @{$self->{columns}}) {
      next if ! defined $self->{$stat.'Percent'};
      my $label = $stat.'Percent';
      $label =~ s/^(dot3Stats|locIf)//g;
      $label =~ s/(?:\b|(?<=([a-z])))([A-Z][a-z]+)/(defined($1) ? "_" : "") . lc($2)/eg;
      $label = $self->{ifDescr}.'_'.$label;
      $self->add_info(sprintf 'interface %s %s is %.2f%%',
          $full_descr, $stat.'Percent', $self->{$stat.'Percent'});
      $self->set_thresholds(
          metric => $label,
          warning => 1,
          critical => 10
      );
      $self->add_message(
          $self->check_thresholds(metric => $label, value => $self->{$stat.'Percent'}));
      $self->add_perfdata(
          label => $label,
          value => $self->{$stat.'Percent'},
          uom => '%',
      );
    }
  } else {
    $self->SUPER::check();
  }
}


package Classes::Cisco::OLDCISCOINTERFACESMIB::Component::InterfaceSubsystem::Interface::64bit;
our @ISA = qw(Classes::IFMIB::Component::InterfaceSubsystem::Interface::64bit Classes::Cisco::OLDCISCOINTERFACESMIB::Component::InterfaceSubsystem::Interface);
use strict;
use Digest::MD5 qw(md5_hex);

sub init_etherstats {
  my ($self) = @_;
  if ($self->mode =~ /device::interfaces::etherstats/) {
    $Monitoring::GLPlugin::mode = "device::interfaces::broadcasts";
    $self->init();
    $Monitoring::GLPlugin::mode = "device::interfaces::etherstats";
    # 32bit-cast ausputzen. es gibt welche, die haben nur 64bit
    @{$self->{columns}} = grep {
      ! /^if(In|Out).*castPkts$/
    } grep {
      ! /^(ifOperStatus|ifAdminStatus|ifIndex|ifDescr|ifAlias|ifName)$/
    } @{$self->{columns}};
    my $ident = $self->{ifDescr}.md5_hex(join('_', @{$self->{columns}}));
    $self->valdiff({name => $ident}, @{$self->{columns}});
    $self->{delta_InPkts} = $self->{delta_ifHCInUcastPkts} +
        $self->{delta_ifHCInMulticastPkts} + $self->{delta_ifHCInBroadcastPkts};
    $self->{delta_OutPkts} = $self->{delta_ifHCOutUcastPkts} +
        $self->{delta_ifHCOutMulticastPkts} + $self->{delta_ifHCOutBroadcastPkts};
    for my $stat (grep { /^(dot3|locIf)/ } @{$self->{columns}}) {
      next if ! defined $self->{'delta_'.$stat};
      $self->{$stat.'Percent'} = $self->{delta_InPkts} + $self->{delta_OutPkts} ?
          100 * $self->{'delta_'.$stat} /
          ($self->{delta_InPkts} + $self->{delta_OutPkts}) : 0;
    }
  }
  return $self;
}


package Classes::Cisco::CISCOIPSECFLOWMONITOR::Component::VpnSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  my $now = time;
  $self->opts->override_opt('lookback', 1800) if ! $self->opts->lookback;
  $self->get_snmp_tables('CISCO-IPSEC-FLOW-MONITOR-MIB', [
      ['ciketunnels', 'cikeTunnelTable', 'Classes::Cisco::CISCOIPSECFLOWMONITOR::Component::VpnSubsystem::cikeTunnel',  sub { my ($o) = @_; $o->filter_name($o->{cikeTunRemoteAddr}); }],
      [ 'cikefails', 'cikeFailTable', 'Classes::Cisco::CISCOIPSECFLOWMONITOR::Component::VpnSubsystem::cikeFail', sub { my ($o) = @_; $o->filter_name($o->{cikeFailRemoteAddr}) && $o->{cikeFailTimeAgo} < $self->opts->lookback; }],
      [ 'cipsecfails', 'cipSecFailTable', 'Classes::Cisco::CISCOIPSECFLOWMONITOR::Component::VpnSubsystem::cipSecFail', sub { my ($o) = @_; $o->filter_name($o->{cipSecFailPktDstAddr}) && $o->{cipSecFailTimeAgo} < $self->opts->lookback; }],
  ]);
}

sub check {
  my ($self) = @_;
  if ($self->opts->name && ! $self->opts->regexp && ! @{$self->{ciketunnels}}) {
    $self->add_critical(sprintf 'tunnel to %s does not exist',
        $self->opts->name);
  } elsif (! @{$self->{ciketunnels}}) {
    $self->add_unknown("no tunnels found");
  } else {
    foreach (@{$self->{ciketunnels}}) {
      $_->check();
    }
    foreach (@{$self->{cikefails}}) {
      $_->check();
    }
    foreach (@{$self->{cipsecfails}}) {
      $_->check();
    }
  }
}


package Classes::Cisco::CISCOIPSECFLOWMONITOR::Component::VpnSubsystem::cikeTunnel;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{cikeTunLocalAddr} = $self->unhex_ip($self->{cikeTunLocalAddr});
  $self->{cikeTunRemoteAddr} = $self->unhex_ip($self->{cikeTunRemoteAddr});
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf "tunnel %s%s->%s%s is %s",
      $self->{cikeTunLocalAddr},
      $self->{cikeTunLocalName} ? " (".$self->{cikeTunLocalName}.")" : "",
      $self->{cikeTunRemoteAddr},
      $self->{cikeTunRemoteName} ? " (".$self->{cikeTunRemoteName}.")" : "",
      $self->{cikeTunStatus},
  );
  if ($self->{cikeTunStatus} ne "active") {
    # ich bezweifle, dass man jemals hierher gelangt. die zeile
    # wird schlichtweg verschwinden.
    $self->add_critical();
  } else {
    $self->add_ok();
  }
}


# cipSecFailPhaseOne
package Classes::Cisco::CISCOIPSECFLOWMONITOR::Component::VpnSubsystem::cikeFail;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);

sub finish {
  my ($self) = @_;
  $self->{cikeFailLocalAddr} = $self->unhex_ip($self->{cikeFailLocalAddr});
  $self->{cikeFailLocalValue} = $self->unhex_ip($self->{cikeFailLocalValue});
  $self->{cikeFailRemoteAddr} = $self->unhex_ip($self->{cikeFailRemoteAddr});
  $self->{cikeFailRemoteValue} = $self->unhex_ip($self->{cikeFailRemoteValue});
  $self->{cikeFailTimeAgo} = $self->ago_sysuptime($self->{cikeFailTime});
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf "%s phase1 failure %s->%s %s ago",
      $self->{cikeFailReason},
      $self->{cikeFailLocalAddr},
      $self->{cikeFailRemoteAddr},
      $self->human_timeticks($self->{cikeFailTimeAgo}),
  );
  $self->add_critical_mitigation();
}


# cipSecFailPhaseTwo
package Classes::Cisco::CISCOIPSECFLOWMONITOR::Component::VpnSubsystem::cipSecFail;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);

sub ago {
  my ($self, $eventtime) = @_;
  my $sysUptime = $self->get_snmp_object('MIB-2-MIB', 'sysUpTime', 0);
  if ($sysUptime < $self->uptime()) {
  }
}

sub finish {
  my ($self) = @_;
  $self->{cipSecFailPktDstAddr} = $self->unhex_ip($self->{cipSecFailPktDstAddr});
  $self->{cipSecFailPktSrcAddr} = $self->unhex_ip($self->{cipSecFailPktSrcAddr});
  $self->{cipSecFailTimeAgo} = $self->ago_sysuptime($self->{cipSecFailTime});
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf "%s phase2 failure %s->%s %s ago",
      $self->{cipSecFailReason},
      $self->{cipSecFailPktSrcAddr},
      $self->{cipSecFailPktDstAddr},
      $self->human_timeticks($self->{cipSecFailTimeAgo}),
  );
  if ($self->{cipSecFailReason} eq "other") {
    # passiert stuendlich, kann wohl ein simpler idle-timeout sein
  } else {
    $self->add_critical_mitigation();
  }
}

package Classes::Cisco::CISCOENHANCEDMEMPOOLMIB::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('CISCO-ENHANCED-MEMPOOL-MIB', [
      ['mems', 'cempMemPoolTable', 'Classes::Cisco::CISCOENHANCEDMEMPOOLMIB::Component::MemSubsystem::EnhMem'],
  ]);
}

package Classes::Cisco::CISCOENHANCEDMEMPOOLMIB::Component::MemSubsystem::EnhMem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  if (defined $self->{cempMemPoolHCUsed}) {
    $self->{usage} = 100 * $self->{cempMemPoolHCUsed} /
        ($self->{cempMemPoolHCFree} + $self->{cempMemPoolHCUsed});
  } else {
    # there was a posixMemory with used=0, free=0
    # (= heap mem for posix-like processes in modular ios)
    $self->{usage} =
        ($self->{cempMemPoolFree} + $self->{cempMemPoolUsed}) == 0 ? 0 :
	100 * $self->{cempMemPoolUsed} /
        ($self->{cempMemPoolFree} + $self->{cempMemPoolUsed});
  }
  $self->{type} = $self->{cempMemPoolType} ||= 0;
  $self->{name} = $self->{cempMemPoolName}.'_'.$self->{indices}->[0];
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'mempool %s usage is %.2f%%',
      $self->{name}, $self->{usage});
  my $used100 = 0;
  if ($self->{name} =~ /^lsmpi_io/ &&
      $self->get_snmp_object('MIB-2-MIB', 'sysDescr', 0) =~ /IOS.*(XE|ASR1000)/i) {
    # https://supportforums.cisco.com/docs/DOC-16425
    $used100 = 1;
  } elsif ($self->{name} =~ /global.*shared/i &&
      $self->get_snmp_object('MIB-2-MIB', 'sysDescr', 0)
          =~ /(asa|adaptive security appliance)/i) {
    if ($self->get_snmp_object('MIB-2-MIB', 'sysDescr', 0) =~ /Version ([\d\.]+)/) {
      $self->set_variable("version", $1);
      if ($self->version_is_minimum("9.3.2")) {
        # Cisco Adaptive Security Appliance Version 9.4(4)16
        $used100 = 1;
      }
    }
  } elsif ($self->{name} =~ /^reserved/ &&
      $self->get_snmp_object('MIB-2-MIB', 'sysDescr', 0) =~ /IOS.*XR/i) {
    # ASR9K "reserved" and "image" are always at 100%
    $used100 = 1;
  } elsif ($self->{name} =~ /^image/ &&
      $self->get_snmp_object('MIB-2-MIB', 'sysDescr', 0) =~ /IOS.*XR/i) {
    $used100 = 1;
  } elsif ($self->{name} =~ /heapcache/i &&
      $self->get_snmp_object('MIB-2-MIB', 'sysDescr', 0) =~ /adaptive/i) {
    # MEMPOOL_HEAPCACHE_0. It's a cache, so usage >99% is fine imho
    $used100 = 1;
  }
  if ($used100) {
    $self->force_thresholds(
        metric => $self->{name}.'_usage',
        warning => 100,
        critical => 100,
    );
  } else {
    $self->set_thresholds(
        metric => $self->{name}.'_usage',
        warning => 80,
        critical => 90,
    );
  }
  $self->add_message($self->check_thresholds(
      metric => $self->{name}.'_usage',
      value => $self->{usage},
  ));
  $self->add_perfdata(
      label => $self->{name}.'_usage',
      value => $self->{usage},
      uom => '%',
  );
}

package Classes::Cisco::CISCOMEMORYPOOLMIB::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->mult_snmp_max_msg_size(2);
  $self->get_snmp_tables('CISCO-MEMORY-POOL-MIB', [
      ['mems', 'ciscoMemoryPoolTable', 'Classes::Cisco::CISCOMEMORYPOOLMIB::Component::MemSubsystem::Mem'],
  ]);
}

package Classes::Cisco::CISCOMEMORYPOOLMIB::Component::MemSubsystem::Mem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{usage} = 100 * $self->{ciscoMemoryPoolUsed} /
      ($self->{ciscoMemoryPoolFree} + $self->{ciscoMemoryPoolUsed});
  $self->{type} = $self->{ciscoMemoryPoolType} ||= 0;
  $self->{name} = $self->{ciscoMemoryPoolName};
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'mempool %s usage is %.2f%%',
      $self->{name}, $self->{usage});
  if ($self->{name} =~ /^lsmpi_io/ &&
      $self->get_snmp_object('MIB-2-MIB', 'sysDescr', 0) =~ /IOS.*(XE|ASR1000)/i) {
    # https://supportforums.cisco.com/docs/DOC-16425
    $self->force_thresholds(
        metric => $self->{name}.'_usage',
        warning => 100,
        critical => 100,
    );
  } elsif ($self->{name} eq 'reserved' &&
      $self->get_snmp_object('MIB-2-MIB', 'sysDescr', 0) =~ /IOS.*XR/i) {
    # ASR9K "reserved" and "image" are always at 100%
    $self->force_thresholds(
        metric => $self->{name}.'_usage',
        warning => 100,
        critical => 100,
    );
  } elsif ($self->{name} eq 'image' &&
      $self->get_snmp_object('MIB-2-MIB', 'sysDescr', 0) =~ /IOS.*XR/i) {
    $self->force_thresholds(
        metric => $self->{name}.'_usage',
        warning => 100,
        critical => 100,
    );
  } else {
    $self->set_thresholds(
        metric => $self->{name}.'_usage',
        warning => 80,
        critical => 90,
    );
  }
  $self->add_message($self->check_thresholds(
      metric => $self->{name}.'_usage',
      value => $self->{usage},
  ));
  $self->add_perfdata(
      label => $self->{name}.'_usage',
      value => $self->{usage},
      uom => '%',
  );
}

package Classes::Cisco::CISCOENTITYFRUCONTROLMIB::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->{fan_subsystem} =
      Classes::Cisco::CISCOENTITYFRUCONTROLMIB::Component::FanSubsystem->new();
  $self->{powersupply_subsystem} =
      Classes::Cisco::CISCOENTITYFRUCONTROLMIB::Component::PowersupplySubsystem->new();
  $self->{module_subsystem} =
      Classes::Cisco::CISCOENTITYFRUCONTROLMIB::Component::ModuleSubsystem->new();
}

sub check {
  my ($self) = @_;
  $self->{fan_subsystem}->check();
  $self->{powersupply_subsystem}->check();
  $self->{module_subsystem}->check();
  if (! $self->check_messages()) {
    $self->add_ok("environmental hardware working fine");
  }
}

sub dump {
  my ($self) = @_;
  $self->{fan_subsystem}->dump();
  $self->{powersupply_subsystem}->dump();
  $self->{module_subsystem}->dump();
}

package Classes::Cisco::CISCOENTITYFRUCONTROLMIB::Component::FanSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('CISCO-ENTITY-FRU-CONTROL-MIB', [
    ['fans', 'cefcFanTrayStatusTable', 'Classes::Cisco::CISCOENTITYFRUCONTROLMIB::Component::FanSubsystem::Fan'],
  ]);
  $self->get_snmp_tables('ENTITY-MIB', [
    ['entities', 'entPhysicalTable', 'Classes::Cisco::CISCOENTITYSENSORMIB::Component::SensorSubsystem::PhysicalEntity'],
  ]);
  @{$self->{entities}} = grep { $_->{entPhysicalClass} eq 'fan' } @{$self->{entities}};
  foreach my $fan (@{$self->{fans}}) {
    foreach my $entity (@{$self->{entities}}) {
      if ($fan->{flat_indices} eq $entity->{entPhysicalIndex}) {
        $fan->{entity} = $entity;
      }
    }
  }
}

package Classes::Cisco::CISCOENTITYFRUCONTROLMIB::Component::FanSubsystem::Fan;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'fan/tray %s%s status is %s',
      $self->{flat_indices},
      #exists $self->{entity} ? ' ('.$self->{entity}->{entPhysicalDescr}.' idx '.$self->{entity}->{entPhysicalIndex}.' class '.$self->{entity}->{entPhysicalClass}.')' : '',
      exists $self->{entity} ? ' ('.$self->{entity}->{entPhysicalDescr}.')' : '',
      $self->{cefcFanTrayOperStatus});
  if ($self->{cefcFanTrayOperStatus} eq "unknown") {
    $self->add_unknown();
  } elsif ($self->{cefcFanTrayOperStatus} eq "down") {
    $self->add_warning();
  } elsif ($self->{cefcFanTrayOperStatus} eq "warning") {
    $self->add_warning();
  }
}

package Classes::Cisco::CISCOENTITYFRUCONTROLMIB::Component::ModuleSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('CISCO-ENTITY-FRU-CONTROL-MIB', [
    ['modules', 'cefcModuleTable', 'Classes::Cisco::CISCOENTITYFRUCONTROLMIB::Component::ModuleSubsystem::Module'],
  ]);
  $self->get_snmp_tables('ENTITY-MIB', [
    ['entities', 'entPhysicalTable', 'Classes::Cisco::CISCOENTITYSENSORMIB::Component::SensorSubsystem::PhysicalEntity'],
  ]);
  @{$self->{entities}} = grep { $_->{entPhysicalClass} eq 'module' } @{$self->{entities}};
  foreach my $module (@{$self->{modules}}) {
    foreach my $entity (@{$self->{entities}}) {
      if ($module->{flat_indices} eq $entity->{entPhysicalIndex}) {
        $module->{entity} = $entity;
      }
    }
  }
}

package Classes::Cisco::CISCOENTITYFRUCONTROLMIB::Component::ModuleSubsystem::Module;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  my @criticals = qw(failed missing okButPowerOverCritical powerDenied);
  my @warnings = qw(mismatchWithParent mismatchConfig diagFailed
    outOfServiceAdmin outOfServiceEnvTemp powerDown okButPowerOverWarning
    okButAuthFailed);
  $self->add_info(sprintf 'module %s%s admin status is %s, oper status is %s',
      $self->{flat_indices},
      #exists $self->{entity} ? ' ('.$self->{entity}->{entPhysicalDescr}.' idx '.$self->{entity}->{entPhysicalIndex}.' class '.$self->{entity}->{entPhysicalClass}.')' : '',
      exists $self->{entity} ? ' ('.$self->{entity}->{entPhysicalDescr}.')' : '',
      $self->{cefcModuleAdminStatus},
      $self->{cefcModuleOperStatus});
  if ($self->{cefcModuleAdminStatus} ne 'enabled' && defined $self->opts->mitigation() && $self->opts->mitigation() == 0) {
    $self->add_ok();
  } if ($self->{cefcModuleOperStatus} eq "unknown") {
    $self->add_unknown();
  } elsif (grep $_ eq $self->{cefcModuleOperStatus}, @criticals) {
    $self->add_critical();
  } elsif (grep $_ eq $self->{cefcModuleOperStatus}, @warnings) {
    $self->add_warning();
  }
  # else ok
}

package Classes::Cisco::CISCOENTITYFRUCONTROLMIB::Component::PowersupplySubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('CISCO-ENTITY-FRU-CONTROL-MIB', [
    ['powersupplies', 'cefcFRUPowerStatusTable', 'Classes::Cisco::CISCOENTITYFRUCONTROLMIB::Component::PowersupplySubsystem::Powersupply'],
    ['powersupplygroups', 'cefcFRUPowerSupplyGroupTable', 'Classes::Cisco::CISCOENTITYFRUCONTROLMIB::Component::PowersupplySubsystem::PowersupplyGroup'],
  ]);
  $self->get_snmp_tables('ENTITY-MIB', [
    ['entities', 'entPhysicalTable', 'Classes::Cisco::CISCOENTITYSENSORMIB::Component::SensorSubsystem::PhysicalEntity'],
  ]);
  @{$self->{entities}} = grep { $_->{entPhysicalClass} eq 'powerSupply' } @{$self->{entities}};
  foreach my $supply (@{$self->{powersupplies}}) {
    foreach my $entity (@{$self->{entities}}) {
      if ($supply->{flat_indices} eq $entity->{entPhysicalIndex}) {
        $supply->{entity} = $entity;
      }
    }
  }
}


package Classes::Cisco::CISCOENTITYFRUCONTROLMIB::Component::PowersupplySubsystem::Powersupply;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'power supply %s%s admin status is %s, oper status is %s',
      $self->{flat_indices},
      #exists $self->{entity} ? ' ('.$self->{entity}->{entPhysicalDescr}.' idx '.$self->{entity}->{entPhysicalIndex}.' class '.$self->{entity}->{entPhysicalClass}.')' : '',
      exists $self->{entity} ? ' ('.$self->{entity}->{entPhysicalDescr}.' )' : '',
      $self->{cefcFRUPowerAdminStatus},
      $self->{cefcFRUPowerOperStatus});
  if ($self->{cefcFRUPowerAdminStatus} eq 'off' && defined $self->opts->mitigation() && $self->opts->mitigation() == 0) {
    $self->add_ok();
  } elsif ($self->{cefcFRUPowerOperStatus} eq "on") {
  } elsif ($self->{cefcFRUPowerOperStatus} eq "unknown") {
    $self->add_unknown();
  } elsif ($self->{cefcFRUPowerOperStatus} eq "onButFanFail") {
    $self->add_warning();
  } else {
    $self->add_critical();
  }
}


package Classes::Cisco::CISCOENTITYFRUCONTROLMIB::Component::PowersupplySubsystem::PowersupplyGroup;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;


package Classes::Cisco::CISCOENTITYSENSORMIB::Component::SensorSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  my $sensors = {};
  $self->get_snmp_tables('CISCO-ENTITY-SENSOR-MIB', [
    ['sensors', 'entSensorValueTable', 'Classes::Cisco::CISCOENTITYSENSORMIB::Component::SensorSubsystem::Sensor', sub { my ($o) = @_; $self->filter_name($o->{entPhysicalIndex})}],
    ['thresholds', 'entSensorThresholdTable', 'Classes::Cisco::CISCOENTITYSENSORMIB::Component::SensorSubsystem::SensorThreshold'],
  ]);
  $self->get_snmp_tables('ENTITY-MIB', [
    ['entities', 'entPhysicalTable', 'Classes::Cisco::CISCOENTITYSENSORMIB::Component::SensorSubsystem::PhysicalEntity'],
  ]);
  @{$self->{sensor_entities}} = grep { $_->{entPhysicalClass} eq 'sensor' } @{$self->{entities}};
  foreach my $sensor (@{$self->{sensors}}) {
    $sensors->{$sensor->{entPhysicalIndex}} = $sensor;
    foreach my $threshold (@{$self->{thresholds}}) {
      if ($sensor->{entPhysicalIndex} eq $threshold->{entPhysicalIndex}) {
        push(@{$sensor->{thresholds}}, $threshold);
      }
    }
    foreach my $entity (@{$self->{sensor_entities}}) {
      if ($sensor->{entPhysicalIndex} eq $entity->{entPhysicalIndex}) {
        $sensor->{entity} = $entity;
      }
    }
  }
}

package Classes::Cisco::CISCOENTITYSENSORMIB::Component::SensorSubsystem::Sensor;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };

sub finish {
  my ($self) = @_;
  $self->{entPhysicalIndex} = $self->{flat_indices};
  # www.thaiadmin.org%2Fboard%2Findex.php%3Faction%3Ddlattach%3Btopic%3D45832.0%3Battach%3D23494&ei=kV9zT7GHJ87EsgbEvpX6DQ&usg=AFQjCNHuHiS2MR9TIpYtu7C8bvgzuqxgMQ&cad=rja
  # zu klaeren. entPhysicalIndex entspricht dem entPhysicalindex der ENTITY-MIB.
  # In der stehen alle moeglichen Powersupplies etc.
  # Was bedeutet aber dann entSensorMeasuredEntity? gibt's eh nicht in meinen
  # Beispiel-walks
  $self->{thresholds} = [];
  $self->{entSensorMeasuredEntity} ||= 'undef';
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf '%s sensor %s%s is %s',
      $self->{entSensorType},
      $self->{entPhysicalIndex},
      exists $self->{entity} ? ' ('.$self->{entity}->{entPhysicalDescr}.')' : '',
      $self->{entSensorStatus});
  if ($self->{entSensorStatus} eq "nonoperational") {
    $self->add_critical();
  } elsif ($self->{entSensorStatus} eq "unknown_10") {
    # these sensors do not exist according to cisco-tools
    return;
  } elsif ($self->{entSensorStatus} eq "unavailable") {
    return;
  }
  my $label = sprintf('sens_%s_%s', $self->{entSensorType}, $self->{entPhysicalIndex});
  my $warningx = ($self->get_thresholds(metric => $label))[0];
  my $criticalx = ($self->get_thresholds(metric => $label))[1];
  if (scalar(@{$self->{thresholds}} == 4)) {
    # sowos gits aa.
    # an entSensorType: voltsAC mied 3249milli, der wou 4 thresholds hod.
    # owa: entSensorThresholdEvaluation: unknown_0,
    # entSensorThresholdSeverity: other
    # entSensorThresholdValue: 3630, entSensorThresholdRelation: lessThan
    # und de andern: entSensorThresholdValue: 3465, 2970, 3135
    # wos wuellsd ejtz do mocha? i dou jednfalls nix. es kinnts me.
  }
  if (scalar(@{$self->{thresholds}} == 2)) {
    # reparaturlauf
    foreach my $idx (0..1) {
      my $otheridx = $idx == 0 ? 1 : 0;
      if (! defined @{$self->{thresholds}}[$idx]->{entSensorThresholdSeverity} &&   
          @{$self->{thresholds}}[$otheridx]->{entSensorThresholdSeverity} eq "minor") {
        @{$self->{thresholds}}[$idx]->{entSensorThresholdSeverity} = "major";
      } elsif (! defined @{$self->{thresholds}}[$idx]->{entSensorThresholdSeverity} &&   
          @{$self->{thresholds}}[$otheridx]->{entSensorThresholdSeverity} eq "minor") {
        @{$self->{thresholds}}[$idx]->{entSensorThresholdSeverity} = "minor";
      }
    }
    my $warning = (map { $_->{entSensorThresholdValue} } 
        grep { $_->{entSensorThresholdSeverity} eq "minor" }
        @{$self->{thresholds}})[0];
    my $critical = (map { $_->{entSensorThresholdValue} } 
        grep { $_->{entSensorThresholdSeverity} eq "major" }
        @{$self->{thresholds}})[0];
    $self->set_thresholds(
        metric => $label,
        warning => $warning, critical => $critical
    );
    if ((defined($criticalx) && 
        $self->check_thresholds(metric => $label, value => $self->{entSensorValue}) == CRITICAL) ||
        (! defined($criticalx) && 
            grep { $_->{entSensorThresholdEvaluation} eq "true" } 
            grep { $_->{entSensorThresholdSeverity} eq "major" } @{$self->{thresholds}})) {
      # eigener schwellwert hat vorrang
      $self->add_critical(sprintf "%s sensor %s threshold evaluation is true (value: %s, major threshold: %s)", 
          $self->{entSensorType},
          $self->{entPhysicalIndex},
          $self->{entSensorValue},
          defined($criticalx) ? $criticalx : $critical
      );
    } elsif ((defined($warningx) && 
        $self->check_thresholds(metric => $label, value => $self->{entSensorValue}) == WARNING) ||
        (! defined($warningx) && 
            grep { $_->{entSensorThresholdEvaluation} eq "true" } 
            grep { $_->{entSensorThresholdSeverity} eq "minor" } @{$self->{thresholds}})) {
      $self->add_warning(sprintf "%s sensor %s threshold evaluation is true (value: %s, minor threshold: %s)", 
          $self->{entSensorType},
          $self->{entPhysicalIndex},
          $self->{entSensorValue},
          defined($warningx) ? $warningx : $warning
      );
    }
    $self->add_perfdata(
        label => $label,
        value => $self->{entSensorValue},
        warning => defined($warningx) ? $warningx : $warning,
        critical => defined($criticalx) ? $criticalx : $critical,
    );
  } elsif (defined $self->{entSensorValue}) {
    if ((defined($criticalx) && 
        $self->check_thresholds(metric => $label, value => $self->{entSensorValue}) == CRITICAL) ||
       (defined($warningx) && 
        $self->check_thresholds(metric => $label, value => $self->{entSensorValue}) == WARNING) ||
       ($self->{entSensorThresholdEvaluation} && $self->{entSensorThresholdEvaluation} eq "true")) {
    }
    if (defined($criticalx) &&
        $self->check_thresholds(metric => $label, value => $self->{entSensorValue}) == CRITICAL) {
      $self->add_critical(sprintf "%s sensor %s threshold evaluation is true (value: %s)",
          $self->{entSensorType},
          $self->{entPhysicalIndex},
          $self->{entSensorValue}
      );
      $self->add_perfdata(
          label => $label,
          value => $self->{entSensorValue},
          critical => $criticalx,
          warning => $warningx,
      );
    } elsif (defined($warningx) &&
        $self->check_thresholds(metric => $label, value => $self->{entSensorValue}) == WARNING) {
      $self->add_warning(sprintf "%s sensor %s threshold evaluation is true (value: %s)",
          $self->{entSensorType},
          $self->{entPhysicalIndex},
          $self->{entSensorValue}
      );
      $self->add_perfdata(
          label => $label,
          value => $self->{entSensorValue},
          critical => $criticalx,
          warning => $warningx,
      );
    } elsif ($self->{entSensorThresholdEvaluation} && $self->{entSensorThresholdEvaluation} eq "true") {
      $self->add_warning(sprintf "%s sensor %s threshold evaluation is true (value: %s)",
          $self->{entSensorType},
          $self->{entPhysicalIndex},
          $self->{entSensorValue}
      );
      $self->add_perfdata(
          label => $label,
          value => $self->{entSensorValue},
          warning => $self->{ciscoEnvMonSensorThreshold},
      );
    } else {
      $self->add_perfdata(
          label => $label,
          value => $self->{entSensorValue},
      );
    }
  } elsif (scalar(grep { $_->{entSensorThresholdEvaluation} eq "true" }
      @{$self->{thresholds}})) {
    $self->add_warning(sprintf "%s sensor %s threshold evaluation is true", 
        $self->{entSensorType},
        $self->{entPhysicalIndex});
  }
}


package Classes::Cisco::CISCOENTITYSENSORMIB::Component::SensorSubsystem::SensorThreshold;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{entPhysicalIndex} = $self->{indices}->[0];
  $self->{entSensorThresholdIndex} = $self->{indices}->[1];
}


package Classes::Cisco::CISCOENTITYSENSORMIB::Component::SensorSubsystem::PhysicalEntity;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{entPhysicalIndex} = $self->{flat_indices};
}



package Classes::Cisco::CISCOENTITYALARMMIB::Component::AlarmSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  my $alarms = {};
  $self->get_snmp_tables('CISCO-ENTITY-ALARM-MIB', [
    ['alarms', 'ceAlarmTable', 'Classes::Cisco::CISCOENTITYSENSORMIB::Component::AlarmSubsystem::Alarm', sub { my ($o) = @_; $o->{parent} = $self; $self->filter_name($o->{entPhysicalIndex})}],
    ['alarmdescriptionmappings', 'ceAlarmDescrMapTable', 'Classes::Cisco::CISCOENTITYSENSORMIB::Component::AlarmSubsystem::AlarmDescriptionMapping' ],
    ['alarmdescriptions', 'ceAlarmDescrTable', 'Classes::Cisco::CISCOENTITYSENSORMIB::Component::AlarmSubsystem::AlarmDescription' ],
    ['alarmfilterprofiles', 'ceAlarmFilterProfileTable', 'Classes::Cisco::CISCOENTITYSENSORMIB::Component::AlarmSubsystem::AlarmFilterProfile' ],
    ['alarmhistory', 'ceAlarmHistTable', 'Classes::Cisco::CISCOENTITYSENSORMIB::Component::AlarmSubsystem::AlarmHistory', sub { my ($o) = @_; $o->{parent} = $self; $self->filter_name($o->{entPhysicalIndex})}],
  ]);
  $self->get_snmp_tables('ENTITY-MIB', [
    ['entities', 'entPhysicalTable', 'Classes::Cisco::CISCOENTITYSENSORMIB::Component::AlarmSubsystem::PhysicalEntity'],
  ]);
  $self->get_snmp_objects('CISCO-ENTITY-ALARM-MIB', qw(
      ceAlarmCriticalCount ceAlarmMajorCount ceAlarmMinorCount
      ceAlarmFilterProfileIndexNext
  ));
  foreach (qw(ceAlarmCriticalCount ceAlarmMajorCount ceAlarmMinorCount)) {
    $self->{$_} ||= 0;
  }
  @{$self->{alarms}} = grep { 
      $_->{ceAlarmSeverity} ne 'none' &&
      $_->{ceAlarmSeverity} ne 'info'
  } @{$self->{alarms}};
  foreach my $alarm (@{$self->{alarms}}) {
    foreach my $entity (@{$self->{entities}}) {
      if ($alarm->{entPhysicalIndex} eq $entity->{entPhysicalIndex}) {
        $alarm->{entity} = $entity;
      }
    }
  }
}

sub check {
  my ($self) = @_;
  if (scalar(@{$self->{alarms}}) == 0) {
    $self->add_info('no alarms');
    $self->add_ok();
  } else {
    foreach (@{$self->{alarms}}) {
      $_->check();
    }
    foreach (@{$self->{alarmhistory}}) {
      $_->check();
    }
    if (! $self->check_messages()) { # blacklisted des ganze glump
      $self->add_info('no alarms');
      $self->add_ok();
    }
  }
}

package Classes::Cisco::CISCOENTITYSENSORMIB::Component::AlarmSubsystem::Alarm;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{entPhysicalIndex} = $self->{flat_indices};
  $self->{ceAlarmTypes} = [];
  if ($self->{ceAlarmList}) {
    my $index = 0;
    foreach my $octet (unpack('H2', $self->{ceAlarmList})) {
      my $hexoctet = hex($octet) & 0xff;
      if ($hexoctet) {
        my $base = 8 * $index;
        foreach my $bit (0..7) {
          my $mask = (2 ** $bit) & 0xff;
          if ($hexoctet & $mask) {
            push(@{$self->{ceAlarmTypes}}, $base + $bit);
          }
        }
      }
      $index++;
    }
  }
  $self->{ceAlarmTypes} = join(",", @{$self->{ceAlarmTypes}}); # weil sonst der drecks-dump nicht funktioniert.
}

sub check {
  my ($self) = @_;
  my $location = exists $self->{entity} ?
      $self->{entity}->{entPhysicalDescr} : "unknown";
  if (length($self->{ceAlarmTypes})) {
    my @descriptorindexes = map {
        $_->{ceAlarmDescrIndex}
    } grep {
        $self->{entity}->{entPhysicalVendorType} eq $_->{ceAlarmDescrVendorType}
    } @{$self->{parent}->{alarmdescriptionmappings}};
    if (@descriptorindexes) {
      my $ceAlarmDescrIndex = $descriptorindexes[0];
      my @descriptions = grep {
        $_->{ceAlarmDescrIndex} == $ceAlarmDescrIndex;
      } @{$self->{parent}->{alarmdescriptions}};
      foreach my $ceAlarmType (split(",", $self->{ceAlarmTypes})) {
        foreach my $alarmdesc (@descriptions) {
          if ($alarmdesc->{ceAlarmDescrAlarmType} == $ceAlarmType) {
            $self->add_info(sprintf "%s alarm '%s' in entity %d (%s)",
                $alarmdesc->{ceAlarmDescrSeverity},
                $alarmdesc->{ceAlarmDescrText},
                $self->{entPhysicalIndex},
                $location);
            if ($alarmdesc->{ceAlarmDescrSeverity} eq "none") {
              # A value of '0' indicates that there the corresponding physical entity currently is not asserting any alarms.
            } elsif ($alarmdesc->{ceAlarmDescrSeverity} eq "critical") {
              $self->add_critical();
            } elsif ($alarmdesc->{ceAlarmDescrSeverity} eq "major") {
              $self->add_critical();
            } elsif ($alarmdesc->{ceAlarmDescrSeverity} eq "minor") {
              $self->add_warning();
            } elsif ($alarmdesc->{ceAlarmDescrSeverity} eq "info") {
              $self->add_ok();
            }
          }
        }
      }
    }
  }
  delete $self->{parent}; # brauch ma nimmer, daad eh sched bon dump scheebern
}


package Classes::Cisco::CISCOENTITYSENSORMIB::Component::AlarmSubsystem::PhysicalEntity;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{entPhysicalIndex} = $self->{flat_indices};
}

package Classes::Cisco::CISCOENTITYSENSORMIB::Component::AlarmSubsystem::AlarmDescription;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);

sub finish {
  my ($self) = @_;
  $self->{ceAlarmDescrIndex} = $self->{indices}->[0];
  $self->{ceAlarmDescrAlarmType} = $self->{indices}->[1];
}


package Classes::Cisco::CISCOENTITYSENSORMIB::Component::AlarmSubsystem::AlarmDescriptionMapping;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);

sub finish {
  my ($self) = @_;
  $self->{ceAlarmDescrIndex} = $self->{indices}->[0];
}

package Classes::Cisco::CISCOENTITYSENSORMIB::Component::AlarmSubsystem::AlarmFilterProfile;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);

package Classes::Cisco::CISCOENTITYSENSORMIB::Component::AlarmSubsystem::AlarmHistory;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);

sub finish {
  my ($self) = @_;
  $self->{ceAlarmHistTimeStamp} = time - $self->uptime() + $self->timeticks($self->{ceAlarmHistTimeStamp});
  $self->{ceAlarmHistTimeStampLocal} = scalar localtime $self->{ceAlarmHistTimeStamp};
}

sub check {
  my ($self) = @_;
  my $vendortype = "unknown";
  my @entities = grep {
    $_->{entPhysicalIndex} == $self->{ceAlarmHistEntPhysicalIndex};
  } @{$self->{parent}->{entities}};
  if (@entities) {
    $vendortype = $entities[0]->{entPhysicalVendorType};
    $self->{ceAlarmHistEntPhysicalDescr} = $entities[0]->{entPhysicalDescr};
  }
  my @descriptorindexes = map {
      $_->{ceAlarmDescrIndex}
  } grep {
      $vendortype eq $_->{ceAlarmDescrVendorType}
  } @{$self->{parent}->{alarmdescriptionmappings}};
  if (@descriptorindexes) {
    my $ceAlarmDescrIndex = $descriptorindexes[0];
    my @descriptions = grep {
      $_->{ceAlarmDescrIndex} == $ceAlarmDescrIndex;
    } @{$self->{parent}->{alarmdescriptions}};
    foreach my $alarmdesc (@descriptions) {
      if ($alarmdesc->{ceAlarmDescrAlarmType} == $self->{ceAlarmHistAlarmType}) {
        $self->{ceAlarmHistAlarmDescrText} = $alarmdesc->{ceAlarmDescrText};
      }
    }
  }
  delete $self->{parent};
}

package Classes::Cisco::CISCOENVMONMIB::Component::TemperatureSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('CISCO-ENVMON-MIB', [
      ['temperatures', 'ciscoEnvMonTemperatureStatusTable', 'Classes::Cisco::CISCOENVMONMIB::Component::TemperatureSubsystem::Temperature'],
  ]);
}

package Classes::Cisco::CISCOENVMONMIB::Component::TemperatureSubsystem::Temperature;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  if (! exists $self->{ciscoEnvMonTemperatureStatusValue}) {
    bless $self, ref($self).'::Simple';
  }
  $self->ensure_index('ciscoEnvMonTemperatureStatusIndex');
  $self->{ciscoEnvMonTemperatureLastShutdown} ||= 0;
}

sub check {
  my ($self) = @_;
  if ($self->{ciscoEnvMonTemperatureStatusValue} >
      $self->{ciscoEnvMonTemperatureThreshold}) {
    $self->add_info(sprintf 'temperature %d %s is too high (%d of %d max = %s)',
        $self->{ciscoEnvMonTemperatureStatusIndex},
        $self->{ciscoEnvMonTemperatureStatusDescr},
        $self->{ciscoEnvMonTemperatureStatusValue},
        $self->{ciscoEnvMonTemperatureThreshold},
        $self->{ciscoEnvMonTemperatureState});
    if ($self->{ciscoEnvMonTemperatureState} eq 'warning') {
      $self->add_warning();
    } elsif ($self->{ciscoEnvMonTemperatureState} eq 'critical') {
      $self->add_critical();
    }
  } else {
    $self->add_info(sprintf 'temperature %d %s is %d (of %d max = normal)',
        $self->{ciscoEnvMonTemperatureStatusIndex},
        $self->{ciscoEnvMonTemperatureStatusDescr},
        $self->{ciscoEnvMonTemperatureStatusValue},
        $self->{ciscoEnvMonTemperatureThreshold});
    $self->add_ok();
  }
  $self->add_perfdata(
      label => sprintf('temp_%s', $self->{ciscoEnvMonTemperatureStatusIndex}),
      value => $self->{ciscoEnvMonTemperatureStatusValue},
      warning => $self->{ciscoEnvMonTemperatureThreshold},
      critical => undef,
  );
}


package Classes::Cisco::CISCOENVMONMIB::Component::TemperatureSubsystem::Temperature::Simple;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->{ciscoEnvMonTemperatureStatusIndex} ||= 0;
  $self->{ciscoEnvMonTemperatureStatusDescr} ||= 0;
  $self->add_info(sprintf 'temperature %d %s is %s',
      $self->{ciscoEnvMonTemperatureStatusIndex},
      $self->{ciscoEnvMonTemperatureStatusDescr},
      $self->{ciscoEnvMonTemperatureState});
  if ($self->{ciscoEnvMonTemperatureState} ne 'normal') {
    if ($self->{ciscoEnvMonTemperatureState} eq 'warning') {
      $self->add_warning();
    } elsif ($self->{ciscoEnvMonTemperatureState} eq 'critical') {
      $self->add_critical();
    }
  } else {
    $self->add_ok();
  }
}

package Classes::Cisco::CISCOENVMONMIB::Component::PowersupplySubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('CISCO-ENVMON-MIB', [
      ['supplies', 'ciscoEnvMonSupplyStatusTable', 'Classes::Cisco::CISCOENVMONMIB::Component::PowersupplySubsystem::Powersupply'],
  ]);
}


package Classes::Cisco::CISCOENVMONMIB::Component::PowersupplySubsystem::Powersupply;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->ensure_index('ciscoEnvMonSupplyStatusIndex');
  $self->add_info(sprintf 'powersupply %d (%s) is %s',
      $self->{ciscoEnvMonSupplyStatusIndex},
      $self->{ciscoEnvMonSupplyStatusDescr},
      $self->{ciscoEnvMonSupplyState});
  if ($self->{ciscoEnvMonSupplyState} eq 'notPresent') {
  } elsif ($self->{ciscoEnvMonSupplyState} eq 'warning') {
    $self->add_warning();
  } elsif ($self->{ciscoEnvMonSupplyState} eq 'critical' &&
      $self->{ciscoEnvMonSupplyStatusDescr} =~
      /Sw\d+, PS\d+ Critical, RPS Normal/) {
    # 4.8.2017:
    # Der Netzwerktechniker on site sagt mir, dass das aber so normal ist,
    # weil die Netzteile nicht angeschlossen sind, und der switch
    # nur ueber "RPS" seinen Saft bezieht. Gut ich kenn mich mit dem Geraffel
    # nicht aus, also glaube ich ihm das mal.
    # Gruesse, aus dem gerade extrem heissen Athen.
    $self->add_ok();
  } elsif ($self->{ciscoEnvMonSupplyState} eq 'shutdown' &&
      $self->{ciscoEnvMonSupplySource} eq 'ac') {
    # check for bug
    # https://communities.ca.com/thread/241748773
    my $stack = $self->get_snmp_object('ENTITY-MIB', 'entPhysicalModelName', 1);
    if ($stack && $stack =~ /C(3850|3750|3560)/i) {
      $self->blacklist();
      $self->annotate_info('Bug CSCuv18572');
    }
    $self->add_critical();
  } elsif ($self->{ciscoEnvMonSupplyState} ne 'normal') {
    $self->add_critical();
  }
}

package Classes::Cisco::CISCOENVMONMIB::Component::VoltageSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  my $index = 0;
  $self->get_snmp_tables('CISCO-ENVMON-MIB', [
      ['voltages', 'ciscoEnvMonVoltageStatusTable', 'Classes::Cisco::CISCOENVMONMIB::Component::VoltageSubsystem::Voltage'],
  ]);
}

sub check {
  my ($self) = @_;
  my $errorfound = 0;
  $self->add_info('checking voltages');
  if (scalar (@{$self->{voltages}}) == 0) {
  } else {
    foreach (@{$self->{voltages}}) {
      $_->check();
    }
  }
}


package Classes::Cisco::CISCOENVMONMIB::Component::VoltageSubsystem::Voltage;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->ensure_index('ciscoEnvMonVoltageStatusIndex');
  $self->add_info(sprintf 'voltage %d (%s) is %s',
      $self->{ciscoEnvMonVoltageStatusIndex},
      $self->{ciscoEnvMonVoltageStatusDescr},
      $self->{ciscoEnvMonVoltageState});
  if ($self->{ciscoEnvMonVoltageState} eq 'notPresent') {
  } elsif ($self->{ciscoEnvMonVoltageState} ne 'normal') {
    $self->add_critical();
  }
  $self->add_perfdata(
      label => sprintf('mvolt_%s', $self->{ciscoEnvMonVoltageStatusIndex}),
      value => $self->{ciscoEnvMonVoltageStatusValue},
      warning => $self->{ciscoEnvMonVoltageThresholdLow},
      critical => $self->{ciscoEnvMonVoltageThresholdHigh},
  );
}

package Classes::Cisco::CISCOENVMONMIB::Component::FanSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('CISCO-ENVMON-MIB', [
      ['fans', 'ciscoEnvMonFanStatusTable', 'Classes::Cisco::CISCOENVMONMIB::Component::FanSubsystem::Fan'],
  ]);
}

package Classes::Cisco::CISCOENVMONMIB::Component::FanSubsystem::Fan;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->ensure_index('ciscoEnvMonFanStatusIndex');
  $self->add_info(sprintf 'fan %d (%s) is %s',
      $self->{ciscoEnvMonFanStatusIndex},
      $self->{ciscoEnvMonFanStatusDescr},
      $self->{ciscoEnvMonFanState});
  if ($self->{ciscoEnvMonFanState} eq 'notPresent') {
  } elsif ($self->{ciscoEnvMonFanState} ne 'normal') {
    $self->add_critical();
  }
}

package Classes::Cisco::CISCOSTACKMIB::Component::StackSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };


sub init {
  my ($self) = @_;
  $self->get_snmp_objects('CISCO-STACK-MIB', qw(sysStatus
      chassisSysType 
      chassisPs1Type chassisPs1Status chassisPs1TestResult
      chassisPs2Type chassisPs2Status chassisPs2TestResult
      chassisPs3Type chassisPs3Status chassisPs3TestResult
      chassisFanStatus chassisFanTestResult
      chassisMinorAlarm chassisMajorAlarm chassisTempAlarm
      chassisModel chassisSerialNumberString
  ));
  $self->bulk_is_baeh(10);
  $self->get_snmp_tables("CISCO-STACK-MIB", [
      ['components', 'chassisComponentTable', 'Monitoring::GLPlugin::SNMP::TableItem'],
      ['modules', 'moduleTable', 'Classes::Cisco::CISCOSTACKMIB::Component::StackSubsystem::Module'],
  ]);
  if (grep { exists $_->{moduleEntPhysicalIndex} } @{$self->{modules}}) {
    $self->get_snmp_tables('ENTITY-MIB', [
      ['entities', 'entPhysicalTable', 'Monitoring::GLPlugin::TableItem'],
    ]);
    my $entities = {};
    foreach (@{$self->{entities}}) {
      $entities->{$_->{flat_indices}} = $_;
    }
    foreach (@{$self->{modules}}) {
      if (exists $entities->{$_->{moduleEntPhysicalIndex}}) {
        foreach my $key (keys %{$entities->{$_->{moduleEntPhysicalIndex}}}) {
          $_->{$key} = $entities->{$_->{moduleEntPhysicalIndex}}->{$key} if $key =~ /entPhysical/;
        }
      }
    }
    delete $self->{entities};
  }
  $self->{numModules} = scalar(@{$self->{modules}});
  $self->{moduleSerialList} = [map { $_->{moduleSerialNumberString} } @{$self->{modules}}];
  map { $self->{numPorts} += $_->{moduleNumPorts} } @{$self->{modules}};
}

sub check {
  my ($self) = @_;
  if ($self->{chassisSysType} eq 'other' &&
      ! $self->{chassisSerialNumberString} &&
      ! $self->{chassisSerialNumberString}) {
    $self->add_message(defined $self->opts->mitigation() ?
        $self->opts->mitigation() : UNKNOWN,
        'this is probably not a stacked device');
    return;
  }
  foreach (@{$self->{modules}}) {
    $_->check();
  }
  if (defined $self->{sysStatus}) {
    $self->add_info(sprintf 'chassis sys status is %s',
        $self->{sysStatus});
    if ($self->{sysStatus} eq 'minorFault') {
      $self->add_warning();
    } elsif ($self->{sysStatus} eq 'majorFault') {
      $self->add_critical();
    } else {
      $self->add_ok();
    }
  }
  $self->add_info(sprintf 'chassis fan status is %s',
      $self->{chassisFanStatus});
  if ($self->{chassisFanStatus} !~ /^(ok|other)$/) {
    # other bedeutet wohl, daß kein fan verbaut wurde.
    $self->add_critical();
  }
  $self->add_info(sprintf 'chassis minor alarm is %s',
      $self->{chassisMinorAlarm});
  if ($self->{chassisMinorAlarm} ne 'off') {
    $self->add_warning();
  }
  $self->add_info(sprintf 'chassis major alarm is %s',
      $self->{chassisMajorAlarm});
  if ($self->{chassisMajorAlarm} ne 'off') {
    $self->add_critical();
  }
  $self->add_info(sprintf 'chassis temperature alarm is %s',
      $self->{chassisTempAlarm});
  if ($self->{chassisTempAlarm} ne 'off') {
    $self->add_critical();
  }
  for my $ps (1, 2, 3) {
    if (exists $self->{'chassisPs'.$ps.'Type'}) {
      # da wurde nix verbaut
      next if $self->{'chassisPs'.$ps.'Status'} eq 'other';
      $self->add_info(sprintf 'power supply %d status is %s',
          $ps, $self->{'chassisPs'.$ps.'Status'});
      if ($self->{'chassisPs'.$ps.'Status'} eq 'minorFault') {
        $self->add_warning();
      } elsif ($self->{'chassisPs'.$ps.'Status'} eq 'majorFault') {
        $self->add_critical();
      } else {
        $self->add_ok();
      }
    }
  }
  $self->opts->override_opt('lookback', 1800) if ! $self->opts->lookback;
  $self->valdiff({name => $self->{chassisSerialNumberString}, lastarray => 1},
      qw(moduleSerialList numModules numPorts));
  if (scalar(@{$self->{delta_found_moduleSerialList}}) > 0) {
    $self->add_warning(sprintf '%d new module(s) (%s)',
        scalar(@{$self->{delta_found_moduleSerialList}}),
        join(", ", @{$self->{delta_found_moduleSerialList}}));
  }
  if (scalar(@{$self->{delta_lost_moduleSerialList}}) > 0) {
    $self->add_critical(sprintf '%d module(s) missing (%s)',
        scalar(@{$self->{delta_lost_moduleSerialList}}),
        join(", ", @{$self->{delta_lost_moduleSerialList}}));
  }
  if ($self->{delta_numPorts} > 0) {
    $self->add_warning(sprintf '%d new ports', $self->{delta_numPorts});
  } elsif ($self->{delta_numPorts} < 0) {
    $self->add_critical(sprintf '%d missing ports', abs($self->{delta_numPorts}));
  }
  if (! $self->check_messages()) {
    $self->add_ok('chassis is ok');
  }
  $self->add_info(sprintf 'found %d modules with %d ports',
      $self->{numModules}, $self->{numPorts});
  $self->add_ok();
}

package Classes::Cisco::CISCOSTACKMIB::Component::StackSubsystem::Module;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);

sub finish {
  my ($self) = @_;
  $self->{modulePortStatus} = unpack("H*", $self->{modulePortStatus});
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'module %d (serial %s) is %s',
      $self->{moduleIndex}, $self->{moduleSerialNumberString},
      $self->{moduleStatus}
  );
  if ($self->{moduleStatus} eq 'minorFault' && $self->{moduleTestResult} == 0) {
    # make Deepak happy
    $self->annotate_info('but all tests passed');
    $self->add_ok();
  } elsif ($self->{moduleStatus} eq 'minorFault') {
    $self->add_warning();
  } elsif ($self->{moduleStatus} ne 'ok') {
    $self->add_critical();
  }
}

package Classes::Cisco::CISCOSTACKWISEMIB::Component::StackSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };


sub init {
  my ($self) = @_;
  $self->get_snmp_objects('CISCO-STACKWISE-MIB', qw(cswMaxSwitchNum
      cswRingRedundant cswStackBandWidth ciscoStackWiseMIBConform
      cswStackWiseMIBCompliances
  ));
  # cswStackType is not uniqe enough depening of IOS-XE version.
  # cswStackBandWidth exists only on distributed switches with SVL
  if ($self->{cswStackBandWidth}) {
    $self->get_snmp_tables("CISCO-STACKWISE-MIB", [
        ['switches', 'cswSwitchInfoTable', 'Classes::Cisco::CISCOSTACKWISEMIB::Component::StackSubsystem::Switch'],
        ['ports', 'cswDistrStackPhyPortInfoEntry', 'Classes::Cisco::CISCOSTACKWISEMIB::Component::StackSubsystem::PhyPort'],
    ]);
  } else {
    $self->get_snmp_tables("CISCO-STACKWISE-MIB", [
        ['switches', 'cswSwitchInfoTable', 'Classes::Cisco::CISCOSTACKWISEMIB::Component::StackSubsystem::Switch'],
        ['ports', 'cswStackPortInfoTable', 'Classes::Cisco::CISCOSTACKWISEMIB::Component::StackSubsystem::Port'],
    ]);
  };
  $self->{numSwitches} = scalar(@{$self->{switches}});
  $self->{switchSerialList} = [map { $_->{flat_indices} } @{$self->{switches}}];
  $self->{numPorts} = scalar(@{$self->{ports}});
}

sub check {
  my ($self) = @_;
  foreach (@{$self->{switches}}) {
    $_->check();
  }
  if ($self->{cswStackBandWidth}) {
    $self->add_info(sprintf
        'this is a distributed stack with bandwidth %d Gbit/s',
        $self->{cswStackBandWidth});
  } else {
    $self->add_info(sprintf 'ring is %sredundant',
        $self->{cswRingRedundant} ne 'true' ? 'not ' : '');
    if ($self->{cswRingRedundant} ne 'true' && $self->{numSwitches} > 1) {
        $self->add_warning();
    }
  }
  $self->opts->override_opt('lookback', 1800) if ! $self->opts->lookback;
  $self->valdiff({name => 'stackwise', lastarray => 1},
      qw(switchSerialList numSwitches numPorts));
  if (scalar(@{$self->{delta_found_switchSerialList}}) > 0) {
    $self->add_warning(sprintf '%d new switch(s) (%s)',
        scalar(@{$self->{delta_found_switchSerialList}}),
        join(", ", @{$self->{delta_found_switchSerialList}}));
  }
  if (scalar(@{$self->{delta_lost_switchSerialList}}) > 0) {
    $self->add_critical(sprintf '%d switch(s) missing (%s)',
        scalar(@{$self->{delta_lost_switchSerialList}}),
        join(", ", @{$self->{delta_lost_switchSerialList}}));
  }
  if ($self->{delta_numPorts} > 0) {
    $self->add_warning(sprintf '%d new ports', $self->{delta_numPorts});
  } elsif ($self->{delta_numPorts} < 0) {
    $self->add_critical(sprintf '%d missing ports', abs($self->{delta_numPorts}));
  }
  if (! $self->check_messages()) {
    $self->add_ok('chassis is ok');
  }
  $self->add_info(sprintf 'found %d switches with %d ports',
      $self->{numSwitches}, $self->{numPorts});
  $self->add_ok();
}

package Classes::Cisco::CISCOSTACKWISEMIB::Component::StackSubsystem::Port;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'link to neighbor %s is %s',
      $self->{cswStackPortNeighbor}, $self->{cswStackPortOperStatus}
  );
}

package Classes::Cisco::CISCOSTACKWISEMIB::Component::StackSubsystem::PhyPort;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'link to neighbor %s is %s',
      $self->{cswDistrStackPhyPortNbr}, $self->{cswDistrStackPhyPortOperStatus}
  );
}

package Classes::Cisco::CISCOSTACKWISEMIB::Component::StackSubsystem::Switch;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);

sub check {
  my ($self) = @_;
  $self->add_info(sprintf '%s switch %s is %s',
      $self->{cswSwitchRole}, $self->{flat_indices}, $self->{cswSwitchState}
  );
  $self->add_warning() if $self->{cswSwitchState} ne 'ready';
}

package Classes::Cisco::ASA;
our @ISA = qw(Classes::Cisco);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::Cisco::CISCOENTITYALARMMIB::Component::AlarmSubsystem");
    $self->analyze_and_check_environmental_subsystem("Classes::Cisco::CISCOENTITYSENSORMIB::Component::SensorSubsystem");
    $self->analyze_and_check_environmental_subsystem("Classes::ENTITYSENSORMIB::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::Cisco::IOS::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::Cisco::IOS::Component::MemSubsystem");
  } elsif ($self->mode =~ /device::hsrp/) {
    $self->analyze_and_check_hsrp_subsystem("Classes::HSRP::Component::HSRPSubsystem");
  } elsif ($self->mode =~ /device::users/ || $self->mode =~ /device::connections/) {
    # das war frueher "users". seit 6c70c2627e53cce991181369456c03f630f90f71
    # ist count-connections kein alias von count-users mehr, sondern ein
    # eigenstaendiger mode. fuehrte dazu, dass count-connections hier unten
    # in no_such_mode reinlief. daher dieses users||connections.
    # weil es sich bei asa tatsaechlich eher um connections als users handelt,
    # waere es sauber, das users rauszuwerfen, allerdings wuerde das dann
    # bei denen krachen, die count-users verwenden.
    $self->analyze_and_check_connection_subsystem("Classes::Cisco::IOS::Component::ConnectionSubsystem");
  } elsif ($self->mode =~ /device::config/) {
    $self->analyze_and_check_config_subsystem("Classes::Cisco::IOS::Component::ConfigSubsystem");
  } elsif ($self->mode =~ /device::interfaces::nat::sessions::count/) {
    $self->analyze_and_check_config_subsystem("Classes::Cisco::IOS::Component::NatSubsystem");
  } elsif ($self->mode =~ /device::interfaces::nat::rejects/) {
    $self->analyze_and_check_config_subsystem("Classes::Cisco::IOS::Component::NatSubsystem");
  } elsif ($self->mode =~ /device::vpn::status/) {
    $self->analyze_and_check_config_subsystem("Classes::Cisco::CISCOIPSECFLOWMONITOR::Component::VpnSubsystem");
  } elsif ($self->mode =~ /device::ha::role/) {
    $self->analyze_and_check_config_subsystem("Classes::Cisco::IOS::Component::HaSubsystem");
  } else {
    $self->no_such_mode();
  }
}


package Classes::Cisco::IOS::Component::HaSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::ha::role/) {
    $self->get_snmp_tables("CISCO-FIREWALL-MIB", [
      ['resources', 'cfwHardwareStatusTable', 'Classes::Cisco::IOS::Component::HaSubsystem::Resource'],
    ]);
    if (! $self->opts->role()) {
      $self->opts->override_opt('role', 'active'); # active/standby
    }
  }
}


package Classes::Cisco::IOS::Component::HaSubsystem::Resource;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };

sub finish {
  my ($self) = @_;
  ($self->{cfwHardwareInformationShort} = $self->{cfwHardwareInformation}) =~ s/\s*\(this device\).*//g;
  if ($self->{cfwHardwareInformation} =~ /Failover LAN Interface/) {
    bless $self, "Classes::Cisco::IOS::Component::HaSubsystem::Resource::LAN";
  } elsif ($self->{cfwHardwareInformation} =~ /Primary/) {
    bless $self, "Classes::Cisco::IOS::Component::HaSubsystem::Resource::Primary";
  } elsif ($self->{cfwHardwareInformation} =~ /Secondary/) {
    bless $self, "Classes::Cisco::IOS::Component::HaSubsystem::Resource::Secondary";
  }
}

package Classes::Cisco::IOS::Component::HaSubsystem::Resource::Primary;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  my @roles = split ',', $self->opts->role(); # active,standby for checking the cluster status
  $self->add_info(sprintf "resource %s has status %s (%s)", 
      $self->{cfwHardwareInformationShort},
      $self->{cfwHardwareStatusValue},
      $self->{cfwHardwareStatusDetail});
  if ($self->{cfwHardwareStatusDetail} eq "Failover Off") {
    $self->add_ok();
  } elsif ($self->{cfwHardwareInformation} =~ /this device/) {
    if (grep { "active" eq $_ } @roles) {
      $self->add_ok();
    } else {
      $self->add_critical();
      $self->add_info("this device should be ".$self->opts->role());
      $self->add_critical();
    }
  } else {
    # as seen from Secondary. check the cluster status, not the role
    if ($self->{cfwHardwareStatusValue} eq "error") {
      $self->add_critical_mitigation("Primary has failed");
    } elsif ($self->{cfwHardwareStatusValue} ne "active") {
      $self->add_warning_mitigation("Primary is not the active node");
    } else {
      $self->add_ok("Primary is active");
    }
  }
}

package Classes::Cisco::IOS::Component::HaSubsystem::Resource::Secondary;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  my @roles = split ',', $self->opts->role(); # active,standby for checking the cluster status
  $self->add_info(sprintf "resource %s has status %s (%s)", 
      $self->{cfwHardwareInformationShort},
      $self->{cfwHardwareStatusValue},
      $self->{cfwHardwareStatusDetail});
  if ($self->{cfwHardwareStatusDetail} eq "Failover Off") {
    $self->add_ok();
  } elsif ($self->{cfwHardwareInformation} =~ /this device/) {
    if (grep { "standby" eq $_ } @roles) {
      $self->add_ok();
    } else {
      $self->add_critical();
      $self->add_info("this device should be ".$self->opts->role());
      $self->add_critical();
    }
  } else {
    # as seen from primary
    if ($self->{cfwHardwareStatusValue} eq "error") {
      $self->add_critical_mitigation("Secondary has failed");
    } elsif ($self->{cfwHardwareStatusValue} ne "standby") {
      $self->add_warning_mitigation("Secondary is not the standby node");
    } else {
      $self->add_ok("Secondary is standby");
    }
  }
}

package Classes::Cisco::IOS::Component::HaSubsystem::Resource::LAN;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf "resource %s has status %s (%s)", 
      $self->{cfwHardwareInformationShort},
      $self->{cfwHardwareStatusValue},
      $self->{cfwHardwareStatusDetail});
  if ($self->{cfwHardwareStatusDetail} eq "Failover Off") {
    $self->add_ok();
#  } elsif ($self->{cfwHardwareStatusDetail} =~ /FAILOVER/) {
#    kommt verdaechtig oft vor und schaut so aus, als waere das normal
#    $self->add_warning_mitigation("cluster has switched");
  } elsif ($self->{cfwHardwareStatusValue} eq "error") {
    $self->add_warning_mitigation("cluster has lost redundancy");
  } elsif ($self->{cfwHardwareStatusValue} ne "up") {
    $self->add_warning_mitigation("LAN interface has a problem");
  }
}


package Classes::Cisco::IOS::Component::ConfigSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('CISCO-CONFIG-MAN-MIB', (qw(
      ccmHistoryRunningLastChanged ccmHistoryRunningLastSaved
      ccmHistoryStartupLastChanged)));
  foreach ((qw(ccmHistoryRunningLastChanged ccmHistoryRunningLastSaved
      ccmHistoryStartupLastChanged))) {
    if (! defined $self->{$_}) {
      $self->add_unknown(sprintf "%s is not defined", $_);
    }
    $self->{$_} = time - $self->uptime() + $self->timeticks($self->{$_});
  }
}

sub check {
  my ($self) = @_;
  my $info;
  my $runningChangedMarginAfterReload = 300;
  $self->add_info('checking config');
  if ($self->check_messages()) {
    return;
  }

  # Set default thresholds: Warning 1 hour, Critical 24 hours
  $self->set_thresholds(warning => 3600, critical => 3600*24);

  # How much is ccmHistoryRunningLastChanged ahead of ccmHistoryStartupLastChanged
  # Note: the saved config could still be identical to the running config.

  # ccmHistoryRunningLastChanged
  # ccmHistoryRunningLastSaved - saving is ANY write (local/remote storage, terminal)
  # ccmHistoryStartupLastChanged 
  my $runningUnchangedDuration = time - $self->{ccmHistoryRunningLastChanged};
  my $startupUnchangedDuration = time - $self->{ccmHistoryStartupLastChanged};

  # If running config has been changed after the startup config
  if ($runningUnchangedDuration < $startupUnchangedDuration) {
    # After a reload the running config is reported to be ahead of the startup config by a few seconds to possibly
    # a few minutes, while neither has been changed. Therefor a reload-margin is used.
    # If running config is reported to have changed within the (5 minute) margin since the last reload
    if (($runningUnchangedDuration + $runningChangedMarginAfterReload) > $self->uptime()) {
      $self->add_ok(sprintf("running config has not changed since reload (using a %d second margin)",
          $runningChangedMarginAfterReload));
    } else {
      # Running config is unsaved since $runningUnchangedDuration
      my $errorlevel = $self->check_thresholds($runningUnchangedDuration);

      if ($errorlevel != OK && defined $self->opts->mitigation()) {
        $errorlevel = $self->opts->mitigation();
      }

      $self->add_info(sprintf "running config is ahead of startup config since %d minutes. changes will be lost in case of a reboot",
          $runningUnchangedDuration / 60);
      $self->add_message($errorlevel);
    }
  } else {
    $self->add_ok("saved config is up to date");
  }
}

sub dump {
  my ($self) = @_;
  printf "[CONFIG]\n";
  foreach (qw(ccmHistoryRunningLastChanged ccmHistoryRunningLastSaved ccmHistoryStartupLastChanged)) {
    printf "%s: %s (%s)\n", $_, $self->{$_}, scalar localtime $self->{$_};
  }
}

package Classes::Cisco::IOS::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;
use constant PHYS_NAME => 1;
use constant PHYS_ASSET => 2;
use constant PHYS_DESCR => 4;

{
  our $cpmCPUTotalIndex = 0;
  our $uniquify = PHYS_NAME;
}

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('CISCO-PROCESS-MIB', [
      ['cpus', 'cpmCPUTotalTable', 'Classes::Cisco::IOS::Component::CpuSubsystem::Cpu' ],
  ]);
  if (scalar(@{$self->{cpus}}) == 0) {
    # maybe too old. i fake a cpu. be careful. this is a really bad hack
    $self->get_snmp_objects('OLD-CISCO-CPU-MIB', qw(avgBusy1
        avgBusy5 busyPer
    ));
    if (defined $self->{avgBusy1}) {
      push(@{$self->{cpus}},
          Classes::Cisco::IOS::Component::CpuSubsystem::Cpu->new(
              cpmCPUTotalPhysicalIndex => 0, #fake
              cpmCPUTotalIndex => 0, #fake
              cpmCPUTotal5sec => 0, #fake
              cpmCPUTotal5secRev => 0, #fake
              cpmCPUTotal1min => $self->{avgBusy1},
              cpmCPUTotal1minRev => $self->{avgBusy1},
              cpmCPUTotal5min => $self->{avgBusy5},
              cpmCPUTotal5minRev => $self->{avgBusy51},
              cpmCPUMonInterval => 0, #fake
              cpmCPUTotalMonIntervalValue => 0, #fake
              cpmCPUInterruptMonIntervalValue => 0, #fake
      ));
    }
  }
  # same cpmCPUTotalPhysicalIndex found in multiple table rows
  if (scalar(@{$self->{cpus}}) > 1) {
    my %names = ();
    foreach my $cpu (@{$self->{cpus}}) {
      $names{$cpu->{name}}++;
    }
    foreach my $cpu (@{$self->{cpus}}) {
      if ($names{$cpu->{name}} > 1) {
        # more than one cpu points to the same physical entity
        $cpu->{name} .= '.'.$cpu->{flat_indices};
      }
    }
  }
}

package Classes::Cisco::IOS::Component::CpuSubsystem::Cpu;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{cpmCPUTotalIndex} = $self->{flat_indices};
  $self->{cpmCPUTotalPhysicalIndex} = exists $self->{cpmCPUTotalPhysicalIndex} ?
      $self->{cpmCPUTotalPhysicalIndex} : 0;
  if (exists $self->{cpmCPUTotal5minRev}) {
    $self->{usage} = $self->{cpmCPUTotal5minRev};
  } else {
    $self->{usage} = $self->{cpmCPUTotal5min};
  }
  $self->protect_value($self->{cpmCPUTotalIndex}.$self->{cpmCPUTotalPhysicalIndex}, 'usage', 'percent');
  if ($self->{cpmCPUTotalPhysicalIndex}) {
    $self->{entPhysicalName} = $self->get_snmp_object('ENTITY-MIB', 'entPhysicalName', $self->{cpmCPUTotalPhysicalIndex});
    # wichtig fuer gestacktes zeugs, bei dem entPhysicalName doppelt und mehr vorkommen kann
    # This object is a user-assigned asset tracking identifier for the physical entity
    # as specified by a network manager, and provides non-volatile storage of this
    # information. On the first instantiation of an physical entity, the value of
    # entPhysicalAssetID associated with that entity is set to the zero-length string.
    # ...
    # If write access is implemented for an instance of entPhysicalAssetID, and a value
    # is written into the instance, the agent must retain the supplied value in the
    # entPhysicalAssetID instance associated with the same physical entity for as long
    # as that entity remains instantiated. This includes instantiations across all
    # re-initializations/reboots of the network management system, including those
    # which result in a change of the physical entity's entPhysicalIndex value.
    $self->{entPhysicalAssetID} = $self->get_snmp_object('ENTITY-MIB', 'entPhysicalAssetID', $self->{cpmCPUTotalPhysicalIndex});
    $self->{entPhysicalDescr} = $self->get_snmp_object('ENTITY-MIB', 'entPhysicalDescr', $self->{cpmCPUTotalPhysicalIndex});
    $self->{name} = $self->{entPhysicalName} || $self->{entPhysicalDescr};
    # letzter Ausweg, weil auch alle drei get_snmp_object fehlschlagen koennen
    $self->{name} ||= $self->{cpmCPUTotalIndex};
  } else {
    $self->{name} = $self->{cpmCPUTotalIndex};
    # waere besser, aber dann zerlegts wohl zu viele rrdfiles
    #$self->{name} = 'central processor';
  }
  return $self;
}

sub check {
  my ($self) = @_;
  $self->{label} = $self->{name};
  $self->add_info(sprintf 'cpu %s usage (5 min avg.) is %.2f%%',
      $self->{name}, $self->{usage});
  $self->set_thresholds(warning => 80, critical => 90);
  $self->add_message($self->check_thresholds($self->{usage}));
  $self->add_perfdata(
      label => 'cpu_'.$self->{label}.'_usage',
      value => $self->{usage},
      uom => '%',
  );
}

package Classes::Cisco::IOS::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  if ($self->implements_mib('CISCO-ENHANCED-MEMPOOL-MIB')) {
    $self->analyze_and_check_mem_subsystem("Classes::Cisco::CISCOENHANCEDMEMPOOLMIB::Component::MemSubsystem");
    if (! exists $self->{components}->{mem_subsystem} ||
        scalar(@{$self->{components}->{mem_subsystem}->{mems}}) == 0) {
      # satz mix x....
      # der hier: Cisco IOS Software, IOS-XE Software, Catalyst L3 Switch Software (CAT3K_CAA-UNIVERSALK9-M), Version 03.03.02SE RELEASE SOFTWARE (fc2)
      # hat nicht mehr zu bieten als eine einzige oid
      # cempMemBufferNotifyEnabled .1.3.6.1.4.1.9.9.221.1.2.1.0 = INTEGER: 2
      # deshalb:
      $self->analyze_and_check_mem_subsystem("Classes::Cisco::CISCOMEMORYPOOLMIB::Component::MemSubsystem");
    }
  } else {
    $self->analyze_and_check_mem_subsystem("Classes::Cisco::CISCOMEMORYPOOLMIB::Component::MemSubsystem");
  }
}

package Classes::Cisco::IOS::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  my $has_envmon = 0;
  #
  # 1.3.6.1.4.1.9.9.13.1.1.0 ciscoEnvMonPresent (irgendein typ of envmon)
  # 
  $self->get_snmp_objects('CISCO-ENVMON-MIB', qw(
      ciscoEnvMonPresent));
  if (! $self->{ciscoEnvMonPresent}) {
    # gibt IOS-Kisten, die haben kein ciscoEnvMonPresent
    $self->{ciscoEnvMonPresent} = $self->implements_mib('CISCO-ENVMON-MIB');
  }
  if ($self->{ciscoEnvMonPresent} && 
      $self->{ciscoEnvMonPresent} ne 'oldAgs') {
    $self->{fan_subsystem} =
        Classes::Cisco::CISCOENVMONMIB::Component::FanSubsystem->new();
    $self->{temperature_subsystem} =
        Classes::Cisco::CISCOENVMONMIB::Component::TemperatureSubsystem->new();
    $self->{powersupply_subsystem} = 
        Classes::Cisco::CISCOENVMONMIB::Component::PowersupplySubsystem->new();
    $self->{voltage_subsystem} =
        Classes::Cisco::CISCOENVMONMIB::Component::VoltageSubsystem->new();
    $has_envmon = 1;
  }
  if ($has_envmon &&
      ! scalar(@{$self->{fan_subsystem}->{fans}}) &&
      ! scalar(@{$self->{temperature_subsystem}->{temperatures}}) &&
      ! scalar(@{$self->{powersupply_subsystem}->{supplies}}) &&
      ! scalar(@{$self->{voltage_subsystem}->{voltages}})) {
    $has_envmon = 0;
    for my $subsys (qw(fan_subsystem temperature_subsystem
        powersupply_subsystem voltage_subsystem)) {
      delete $self->{$subsys};
    }
    $has_envmon = 0;
  }
  if ($has_envmon) {
  } elsif ($self->implements_mib('CISCO-ENTITY-FRU-CONTROL-MIB')) {
    $self->{fru_subsystem} =
        Classes::Cisco::CISCOENTITYFRUCONTROLMIB::Component::EnvironmentalSubsystem->new();
  } elsif ($self->implements_mib('CISCO-ENTITY-SENSOR-MIB')) {
    # (IOS can have ENVMON+ENTITY. Sensors are copies, so not needed)
    $self->{sensor_subsystem} =
        Classes::Cisco::CISCOENTITYSENSORMIB::Component::SensorSubsystem->new();
  } elsif ($self->get_snmp_object('MIB-2-MIB', 'sysDescr', 0) =~ /C1700 Software/) {
    $self->add_ok("environmental hardware working fine");
    $self->add_ok('soho device, hopefully too small to fail');
  } else {
    # last hope
    $self->{alarm_subsystem} =
        Classes::Cisco::CISCOENTITYALARMMIB::Component::AlarmSubsystem->new();
    #$self->no_such_mode();
  }
}

sub check {
  my ($self) = @_;
  foreach my $subsys (qw(fan_subsystem temperature_subsystem
      powersupply_subsystem voltage_subsystem fru_subsystem
      sensor_subsystem alarm_subsystem)) {
    if (exists $self->{$subsys}) {
      $self->{$subsys}->check();
    }
  }
  if (! $self->check_messages()) {
    $self->reduce_messages("environmental hardware working fine");
  }
}

sub dump {
  my ($self) = @_;
  foreach my $subsys (qw(fan_subsystem temperature_subsystem
      powersupply_subsystem voltage_subsystem fru_subsystem
      sensor_subsystem alarm_subsystem)) {
    if (exists $self->{$subsys}) {
      $self->{$subsys}->dump();
    }
  }
}

package Classes::Cisco::IOS::Component::ConnectionSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('CISCO-FIREWALL-MIB', [
      ['connectionstates', 'cfwConnectionStatTable', 'Classes::Cisco::IOS::Component::ConnectionSubsystem::ConnectionState'],
  ]);
}

package Classes::Cisco::IOS::Component::ConnectionSubsystem::ConnectionState;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  if ($self->{cfwConnectionStatDescription} !~ /number of connections currently in use/i) {
    $self->add_blacklist(sprintf 'c:%s', $self->{cfwConnectionStatDescription});
    $self->add_info(sprintf '%d connections currently in use',
        $self->{cfwConnectionStatValue}||$self->{cfwConnectionStatCount}, $self->{usage});
  } else {
    $self->add_info(sprintf '%d connections currently in use',
        $self->{cfwConnectionStatValue}, $self->{usage});
    $self->set_thresholds(warning => 500000, critical => 750000);
    $self->add_message($self->check_thresholds($self->{cfwConnectionStatValue}));
    $self->add_perfdata(
        label => 'connections',
        value => $self->{cfwConnectionStatValue},
    );
  }
}

package Classes::Cisco::IOS::Component::NatSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::interfaces::nat::sessions::count/) { 
    $self->get_snmp_objects('CISCO-IETF-NAT-MIB', qw(
        cnatAddrBindNumberOfEntries cnatAddrPortBindNumberOfEntries
    ));
  } elsif ($self->mode =~ /device::interfaces::nat::rejects/) { 
    $self->get_snmp_tables('CISCO-IETF-NAT-MIB', [
        ['protocolstats', 'cnatProtocolStatsTable', 'Classes::Cisco::IOS::Component::NatSubsystem::CnatProtocolStats'],
    ]);
  }
}

sub check {
  my ($self) = @_;
  if ($self->mode =~ /device::interfaces::nat::sessions::count/) { 
    $self->add_info(sprintf '%d bind entries (%d addr, %d port)',
        $self->{cnatAddrBindNumberOfEntries} + $self->{cnatAddrPortBindNumberOfEntries},
        $self->{cnatAddrBindNumberOfEntries},
        $self->{cnatAddrPortBindNumberOfEntries}
    );
    $self->add_ok();
    $self->add_perfdata(
        label => 'nat_bindings',
        value => $self->{cnatAddrBindNumberOfEntries} + $self->{cnatAddrPortBindNumberOfEntries},
    );
    $self->add_perfdata(
        label => 'nat_addr_bindings',
        value => $self->{cnatAddrBindNumberOfEntries},
    );
    $self->add_perfdata(
        label => 'nat_port_bindings',
        value => $self->{cnatAddrPortBindNumberOfEntries},
    );
  } elsif ($self->mode =~ /device::interfaces::nat::rejects/) {
    foreach (@{$self->{protocolstats}}) {
      $_->check();
    }
  }
}

package Classes::Cisco::IOS::Component::NatSubsystem::CnatProtocolStats;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{cnatProtocolStatsName} = $self->{flat_indices};
  $self->make_symbolic('CISCO-IETF-NAT-MIB', 'cnatProtocolStatsName', $self->{cnatProtocolStatsName});
  $self->valdiff({name => $self->{cnatProtocolStatsName}},
      qw(cnatProtocolStatsInTranslate cnatProtocolStatsOutTranslate cnatProtocolStatsRejectCount));
  $self->{delta_cnatProtocolStatsTranslate} = 
      $self->{delta_cnatProtocolStatsInTranslate} +
      $self->{delta_cnatProtocolStatsOutTranslate};
  $self->{rejects} = $self->{delta_cnatProtocolStatsTranslate} ?
      (100 * $self->{delta_cnatProtocolStatsRejectCount} / 
      $self->{delta_cnatProtocolStatsTranslate}) : 0;
  $self->protect_value($self->{rejects}, 'rejects', 'percent');
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf '%.2f%% of all %s packets have been dropped/rejected',
      $self->{rejects}, $self->{cnatProtocolStatsName});
  $self->set_thresholds(warning => 30, critical => 50);
  $self->add_message($self->check_thresholds($self->{rejects}));
}

package Classes::Cisco::IOS::Component::BgpSubsystem;
our @ISA = qw(Classes::BGP::Component::PeerSubsystem Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::bgp::prefix::count/) {
    $self->get_snmp_tables('CISCO-BGP4-MIB', [
        ['peers', 'cbgpPeer2AddrFamilyPrefixTable', 'Classes::Cisco::IOS::Component::BgpSubsystem::Peer2', sub { return $self->filter_name(shift->{cbgpPeer2RemoteAddr}) } ],
    ]);
    if (! @{$self->{peers}}) {
      $self->get_snmp_tables('CISCO-BGP4-MIB', [
          ['peers', 'cbgpPeerAddrFamilyPrefixTable', 'Classes::Cisco::IOS::Component::BgpSubsystem::Peer', sub { return $self->filter_name(shift->{cbgpPeerRemoteAddr}) } ],
      ]);
    }
  } else {
    $self->get_snmp_tables('CISCO-BGP4-MIB', [
        ['peers', 'cbgpPeer2Table', 'Classes::Cisco::IOS::Component::BgpSubsystem::Peer2', sub { return $self->filter_name(shift->{cbgpPeer2RemoteAddr}) } ],
    ]);
    if (! @{$self->{peers}}) {
      $self->get_snmp_tables('CISCO-BGP4-MIB', [
          ['peers', 'cbgpPeerTable', 'Classes::Cisco::IOS::Component::BgpSubsystem::Peer', sub { return $self->filter_name(shift->{cbgpPeerRemoteAddr}) } ],
      ]);
    }
    if (scalar(@{$self->{peers}}) == 0) {
      bless $self, "Classes::BGP::Component::PeerSubsystem";
      $self->init();
    }
  }
}

sub check {
  my ($self) = @_;
  if ($self->mode =~ /device::bgp::prefix::count/) {
    if (scalar(@{$self->{peers}}) == 0) {
      $self->add_critical('no peers found');
    } else {
      foreach (@{$self->{peers}}) {
        $_->check();
      }
    }
  } else {
    $self->SUPER::check();
  }
}

package Classes::Cisco::IOS::Component::BgpSubsystem::Peer;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  if ($self->mode =~ /device::bgp::prefix::count/) {
    $self->{cbgpPeerAddrFamilySafi} = pop @{$self->{indices}};
    $self->{cbgpPeerAddrFamilyAfi} = pop @{$self->{indices}};
    $self->{cbgpPeerRemoteAddr} = join(".", @{$self->{indices}});
  }
}

sub check {
  my ($self) = @_;
  if ($self->mode =~ /device::bgp::prefix::count/) {
    $self->add_info(sprintf "peer %s accepted %d prefixes", 
        $self->{cbgpPeerRemoteAddr}, $self->{cbgpPeerAcceptedPrefixes});
    $self->set_thresholds(metric => $self->{cbgpPeerRemoteAddr}.'_accepted_prefixes',
        warning => '1:', critical => '1:');
    $self->add_message($self->check_thresholds(
        metric => $self->{cbgpPeerRemoteAddr}.'_accepted_prefixes',
        value => $self->{cbgpPeerAcceptedPrefixes}));
    $self->add_perfdata(
        label => $self->{cbgpPeerRemoteAddr}.'_accepted_prefixes',
        value => $self->{cbgpPeerAcceptedPrefixes},
    );
  }
}

package Classes::Cisco::IOS::Component::BgpSubsystem::Peer2;
our @ISA = qw(Classes::BGP::Component::PeerSubsystem::Peer Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  if ($self->mode =~ /device::bgp::prefix::count/) {
    $self->{cbgpPeer2AddrFamilySafi} = pop @{$self->{indices}};
    $self->{cbgpPeer2AddrFamilyAfi} = pop @{$self->{indices}};
    $self->{cbgpPeer2Type} = shift @{$self->{indices}};
    # ja mei
    $self->{cbgpPeer2Type} = shift @{$self->{indices}};
    if (scalar(@{$self->{indices}}) > 4) {
      $self->{cbgpPeer2RemoteAddr} = pack "C*", @{$self->{indices}};
      $self->{cbgpPeer2RemoteAddr} = $self->unhex_ipv6($self->{cbgpPeer2RemoteAddr});
    } else {
      $self->{cbgpPeer2RemoteAddr} = join(".", @{$self->{indices}});
    }
  } else {
    $self->{cbgpPeer2Type} = shift @{$self->{indices}};
    $self->{cbgpPeer2Type} = shift @{$self->{indices}};
    if (scalar(@{$self->{indices}}) > 4) {
      $self->{cbgpPeer2RemoteAddr} = pack "C*", @{$self->{indices}};
      $self->{cbgpPeer2RemoteAddr} = $self->unhex_ipv6($self->{cbgpPeer2RemoteAddr});
    } else {
      $self->{cbgpPeer2RemoteAddr} = join(".", @{$self->{indices}});
    }
  }
  if ($self->mode !~ /device::bgp::prefix::count/) {
    # na dasporama ohm en Item a eigns check und ko des vom
    # Classes::BGP hernehma.
    my @mapping = (
        ["bgpPeerRemoteAddr", "cbgpPeer2RemoteAddr"],
        ["bgpPeerRemoteAs", "cbgpPeer2RemoteAs"],
        ["bgpPeerAdminStatus", "cbgpPeer2AdminStatus"],
        ["bgpPeerLastError", "cbgpPeer2LastError"],
        ["bgpPeerFsmEstablishedTime", "cbgpPeer2FsmEstablishedTime"],
        ["bgpPeerState", "cbgpPeer2State"],
    );
    foreach (@mapping) {
      $self->{$_->[0]} = $self->{$_->[1]};
    }
    $self->SUPER::finish();
  }
}

sub check {
  my ($self) = @_;
  if ($self->mode =~ /device::bgp::prefix::count/) {
    $self->add_info(sprintf "peer %s accepted %d prefixes",
        $self->{cbgpPeer2RemoteAddr}, $self->{cbgpPeer2AcceptedPrefixes});
    $self->set_thresholds(metric => $self->{cbgpPeer2RemoteAddr}.'_accepted_prefixes',
        warning => '1:', critical => '1:');
    $self->add_message($self->check_thresholds(
        metric => $self->{cbgpPeer2RemoteAddr}.'_accepted_prefixes',
        value => $self->{cbgpPeer2AcceptedPrefixes}));
    $self->add_perfdata(
        label => $self->{cbgpPeer2RemoteAddr}.'_accepted_prefixes',
        value => $self->{cbgpPeer2AcceptedPrefixes},
    );
  } else {
    $self->SUPER::check();
  }
}

package Classes::Cisco::IOS;
our @ISA = qw(Classes::Cisco);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::chassis::health/) {
    if ($self->implements_mib('CISCO-STACK-MIB')) {
      $self->analyze_and_check_environmental_subsystem("Classes::Cisco::CISCOSTACKMIB::Component::StackSubsystem");
    } elsif ($self->implements_mib('CISCO-STACKWISE-MIB')) {
      $self->analyze_and_check_environmental_subsystem("Classes::Cisco::CISCOSTACKWISEMIB::Component::StackSubsystem");
    }
    if (! $self->implements_mib('CISCO-STACKWISE-MIB') &&
        !  $self->implements_mib('CISCO-STACK-MIB')) {
      if (defined $self->opts->mitigation()) {
        $self->add_message($self->opts->mitigation(), 'this is not a stacked device');
      } else {
        $self->add_unknown('this is not a stacked device');
      }
    }
  } elsif ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::Cisco::IOS::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::Cisco::IOS::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::Cisco::IOS::Component::MemSubsystem");
  } elsif ($self->mode =~ /device::hsrp/) {
    $self->analyze_and_check_hsrp_subsystem("Classes::HSRP::Component::HSRPSubsystem");
  } elsif ($self->mode =~ /device::users/) {
    $self->analyze_and_check_connection_subsystem("Classes::Cisco::IOS::Component::ConnectionSubsystem");
  } elsif ($self->mode =~ /device::config/) {
    $self->analyze_and_check_config_subsystem("Classes::Cisco::IOS::Component::ConfigSubsystem");
  } elsif ($self->mode =~ /device::interfaces::nat::sessions::count/) {
    $self->analyze_and_check_config_subsystem("Classes::Cisco::IOS::Component::NatSubsystem");
  } elsif ($self->mode =~ /device::interfaces::nat::rejects/) {
    $self->analyze_and_check_config_subsystem("Classes::Cisco::IOS::Component::NatSubsystem");
  #} elsif ($self->mode =~ /device::bgp::prefix::count/) {
  } elsif ($self->mode =~ /device::bgp/) {
    $self->analyze_and_check_bgp_subsystem("Classes::BGP::Component::PeerSubsystem");
  } elsif ($self->mode =~ /device::wlan/ && $self->implements_mib('AIRESPACE-WIRELESS-MIB')) {
      $self->analyze_and_check_wlan_subsystem("Classes::Cisco::WLC::Component::WlanSubsystem");
  } elsif ($self->mode =~ /device::vpn::status/) {
    $self->analyze_and_check_config_subsystem("Classes::Cisco::CISCOIPSECFLOWMONITOR::Component::VpnSubsystem");
  } else {
    $self->no_such_mode();
  }
}


package Classes::Cisco::NXOS::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

{
  our $cpmCPUTotalIndex = 0;
}

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('CISCO-PROCESS-MIB', [
      ['cpus', 'cpmCPUTotalTable', 'Classes::Cisco::NXOS::Component::CpuSubsystem::Cpu' ],
  ]);
  if (scalar(@{$self->{cpus}}) == 0) {
    # maybe too old. i fake a cpu. be careful. this is a really bad hack
    my $response = $self->get_request(
        -varbindlist => [
            $Classes::Device::mibs_and_oids->{'OLD-CISCO-CPU-MIB'}->{avgBusy1},
            $Classes::Device::mibs_and_oids->{'OLD-CISCO-CPU-MIB'}->{avgBusy5},
            $Classes::Device::mibs_and_oids->{'OLD-CISCO-CPU-MIB'}->{busyPer},
        ]
    );
    if (exists $response->{$Classes::Device::mibs_and_oids->{'OLD-CISCO-CPU-MIB'}->{avgBusy1}}) {
      push(@{$self->{cpus}},
          Classes::Cisco::NXOS::Component::CpuSubsystem::Cpu->new(
              cpmCPUTotalPhysicalIndex => 0, #fake
              cpmCPUTotalIndex => 0, #fake
              cpmCPUTotal5sec => 0, #fake
              cpmCPUTotal5secRev => 0, #fake
              cpmCPUTotal1min => $response->{$Classes::Device::mibs_and_oids->{'OLD-CISCO-CPU-MIB'}->{avgBusy1}},
              cpmCPUTotal1minRev => $response->{$Classes::Device::mibs_and_oids->{'OLD-CISCO-CPU-MIB'}->{avgBusy1}},
              cpmCPUTotal5min => $response->{$Classes::Device::mibs_and_oids->{'OLD-CISCO-CPU-MIB'}->{avgBusy5}},
              cpmCPUTotal5minRev => $response->{$Classes::Device::mibs_and_oids->{'OLD-CISCO-CPU-MIB'}->{avgBusy5}},
              cpmCPUMonInterval => 0, #fake
              cpmCPUTotalMonIntervalValue => 0, #fake
              cpmCPUInterruptMonIntervalValue => 0, #fake
      ));
    }
  }
}

package Classes::Cisco::NXOS::Component::CpuSubsystem::Cpu;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{cpmCPUTotalIndex} = exists $self->{cpmCPUTotalIndex} ?
      $self->{cpmCPUTotalIndex} :
      $Classes::Cisco::NXOS::Component::CpuSubsystem::cpmCPUTotalIndex++;
  $self->{cpmCPUTotalPhysicalIndex} = exists $self->{cpmCPUTotalPhysicalIndex} ? 
      $self->{cpmCPUTotalPhysicalIndex} : 0;
  if (exists $self->{cpmCPUTotal5minRev}) {
    $self->{usage} = $self->{cpmCPUTotal5minRev};
  } else {
    $self->{usage} = $self->{cpmCPUTotal5min};
  }
  $self->protect_value($self->{cpmCPUTotalIndex}.$self->{cpmCPUTotalPhysicalIndex}, 'usage', 'percent');
  if ($self->{cpmCPUTotalPhysicalIndex}) {
    $self->{entPhysicalName} = $self->get_snmp_object('ENTITY-MIB', 'entPhysicalName', $self->{cpmCPUTotalPhysicalIndex});
    # This object is a user-assigned asset tracking identifier for the physical entity
    # as specified by a network manager, and provides non-volatile storage of this 
    # information. On the first instantiation of an physical entity, the value of
    # entPhysicalAssetID associated with that entity is set to the zero-length string.
    # ...
    # If write access is implemented for an instance of entPhysicalAssetID, and a value
    # is written into the instance, the agent must retain the supplied value in the
    # entPhysicalAssetID instance associated with the same physical entity for as long
    # as that entity remains instantiated. This includes instantiations across all 
    # re-initializations/reboots of the network management system, including those
    # which result in a change of the physical entity's entPhysicalIndex value.
    $self->{entPhysicalAssetID} = $self->get_snmp_object('ENTITY-MIB', 'entPhysicalAssetID', $self->{cpmCPUTotalPhysicalIndex});
    $self->{name} = $self->{entPhysicalName};
    $self->{name} .= ' '.$self->{entPhysicalAssetID} if $self->{entPhysicalAssetID};
    $self->{label} = $self->{entPhysicalName};
    $self->{label} .= ' '.$self->{entPhysicalAssetID} if $self->{entPhysicalAssetID};
  } else {
    $self->{name} = $self->{cpmCPUTotalIndex};
    $self->{label} = $self->{cpmCPUTotalIndex};
  }
  return $self;
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'cpu %s usage (5 min avg.) is %.2f%%',
      $self->{name}, $self->{usage});
  $self->set_thresholds(warning => 80, critical => 90);
  $self->add_message($self->check_thresholds($self->{usage}));
  $self->add_perfdata(
      label => 'cpu_'.$self->{label}.'_usage',
      value => $self->{usage},
      uom => '%',
  );
}


package Classes::Cisco::NXOS::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('CISCO-SYSTEM-EXT-MIB', (qw(
      cseSysMemoryUtilization)));
}

sub check {
  my ($self) = @_;
  $self->add_info('checking memory');
  if (defined $self->{cseSysMemoryUtilization}) {
    $self->add_info(sprintf 'memory usage is %.2f%%',
        $self->{cseSysMemoryUtilization});
    $self->set_thresholds(warning => 80, critical => 90);
    $self->add_message($self->check_thresholds($self->{cseSysMemoryUtilization}));
    $self->add_perfdata(
        label => 'memory_usage',
        value => $self->{cseSysMemoryUtilization},
        uom => '%',
    );
  } else {
    $self->add_unknown('cannot aquire memory usage');
  }
}


package Classes::Cisco::NXOS::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  #$self->mult_snmp_max_msg_size(10);
  $self->bulk_is_baeh(10);
  $self->{sensor_subsystem} =
      Classes::Cisco::CISCOENTITYSENSORMIB::Component::SensorSubsystem->new();
  if ($self->implements_mib('CISCO-ENTITY-FRU-CONTROL-MIB')) {
    $self->{fru_subsystem} = Classes::Cisco::CISCOENTITYFRUCONTROLMIB::Component::EnvironmentalSubsystem->new();
    $self->check_l2_l3();
    foreach my $mod (@{$self->{fru_subsystem}->{module_subsystem}->{modules}}) {
      if (exists $mod->{entity} &&
          $mod->{entity}->{entPhysicalDescr} =~ /L3 DAUGHTER CARD/ &&
          $mod->get_variable('layer', 'l3') eq 'l2') {
        # l3 routing cards may look failed, but the real cause is that the
        # nexus is used as a l2 switch without any routing functionality.
        $mod->blacklist();
        #$self->annotate_info('no l3 routing');
        foreach my $ps (@{$self->{fru_subsystem}->{powersupply_subsystem}->{powersupplies}}) {
          # blacklist also the corresponding power supply which can look like
          # admin status is on, oper status is offDenied
          if ($mod->{flat_indices} eq $ps->{flat_indices}) {
            $ps->blacklist();
          }
        }
      }
    }
  }
}

sub check {
  my ($self) = @_;
  $self->{sensor_subsystem}->check();
  if (exists $self->{fru_subsystem}) {
    $self->{fru_subsystem}->check();
  }
  if (! $self->check_messages()) {
    $self->clear_ok();
    $self->add_ok("environmental hardware working fine");
  }
}

sub dump {
  my ($self) = @_;
  $self->{sensor_subsystem}->dump();
  if (exists $self->{fru_subsystem}) {
    $self->{fru_subsystem}->dump();
  }
}

sub check_l2_l3 {
  my ($self) = @_;
  my @unrealistic_number_of_routes = ();
  for my $masklen (1..12) {
    push(@unrealistic_number_of_routes, 2 ** (32 - $masklen));
  }
  # find out if this device is L2-only (and blacklist offline L3-cpu)
  # ipCidrRouteNumber deprecates ipForwardNumber
  # inetCidrRouteNumber deprecates ipCidrRouteNumber
  my $inetCidrRouteNumber =
      $self->get_snmp_object('IP-FORWARD-MIB', 'inetCidrRouteNumber');
  my $ipCidrRouteNumber =
      $self->get_snmp_object('IP-FORWARD-MIB', 'ipCidrRouteNumber');
  my $ipForwardNumber =
      $self->get_snmp_object('IP-FORWARD-MIB', 'ipForwardNumber');
  my $num_routes = defined $inetCidrRouteNumber ? $inetCidrRouteNumber :
      defined $ipCidrRouteNumber ? $ipCidrRouteNumber :
      defined $ipForwardNumber ? $ipForwardNumber : 0;
  $num_routes = 0 if grep $num_routes, @unrealistic_number_of_routes;
  $self->set_variable("layer", $num_routes ? "l3" : "l2");
}

package Classes::Cisco::NXOS::Component::FexSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->mult_snmp_max_msg_size(10); # FEATURE-CONTROL
  $self->get_snmp_tables('CISCO-FEATURE-CONTROL-MIB', [
    ['features', 'cfcFeatureCtrlTable', 'Monitoring::GLPlugin::SNMP::TableItem'],
  ]);
  $self->get_snmp_tables('CISCO-ETHERNET-FABRIC-EXTENDER-MIB', [
    ['fexes', 'cefexConfigTable', 'Classes::Cisco::NXOS::Component::FexSubsystem::Fex'],
  ]);
  $self->{fex_feature} = 1;
  foreach (@{$self->{features}}) {
    if ($_->{cfcFeatureCtrlName} eq 'fex' &&
        $_->{cfcFeatureCtrlOpStatusReason} =~ /feature never enabled/) {
      $self->{fex_feature} = 0;
      return;
    }
  }
  if (scalar (@{$self->{fexes}}) == 0) {
   # fallback
    $self->get_snmp_tables('ENTITY-MIB', [
      ['fexes', 'entPhysicalTable', 'Classes::Cisco::NXOS::Component::FexSubsystem::Fex'],
    ]);
    @{$self->{fexes}} = grep {
        $_->{entPhysicalClass} eq 'chassis' && $_->{entPhysicalDescr} =~ /fex/i; 
    } @{$self->{fexes}};
    if (scalar (@{$self->{fexes}}) == 0) {
      $self->get_snmp_tables('ENTITY-MIB', [
        ['fexes', 'entPhysicalTable', 'Classes::Cisco::NXOS::Component::FexSubsystem::Fex'],
      ]);
      # fallback
      my $known_fexes = {};
      @{$self->{fexes}} = grep {
        ! $known_fexes->{$_->{cefexConfigExtenderName}}++;
      } grep {
          $_->{entPhysicalClass} eq 'other' && $_->{entPhysicalDescr} =~ /fex.*cable/i; 
      } @{$self->{fexes}};
    }
  }
}

sub dump {
  my ($self) = @_;
  foreach (@{$self->{fexes}}) {
    $_->dump();
  }
}

sub check {
  my ($self) = @_;
  $self->add_info('counting fexes');
  if (! $self->{fex_feature}) {
    $self->add_ok('feature fex is not enabled');
    return;
  }
  $self->{numOfFexes} = scalar (@{$self->{fexes}});
  $self->{fexNameList} = [map { $_->{cefexConfigExtenderName} } @{$self->{fexes}}];
  if (scalar (@{$self->{fexes}}) == 0) {
    $self->add_unknown('no FEXes found');
  } else {
    # lookback, denn sonst muesste der check is_volatile sein und koennte bei
    # einem kurzen netzausfall fehler schmeissen.
    # empfehlung: check_interval 5 (muss jedesmal die entity-mib durchwalken)
    #             retry_interval 2
    #             max_check_attempts 2
    # --lookback 360
    $self->opts->override_opt('lookback', 1800) if ! $self->opts->lookback;
    $self->valdiff({name => $self->{name}, lastarray => 1},
        qw(fexNameList numOfFexes));
    if (scalar(@{$self->{delta_found_fexNameList}}) > 0) {
      $self->add_warning(sprintf '%d new FEX(es) (%s)',
          scalar(@{$self->{delta_found_fexNameList}}),
          join(", ", @{$self->{delta_found_fexNameList}}));
    }
    if (scalar(@{$self->{delta_lost_fexNameList}}) > 0) {
      $self->add_critical(sprintf '%d FEXes missing (%s)',
          scalar(@{$self->{delta_lost_fexNameList}}),
          join(", ", @{$self->{delta_lost_fexNameList}}));
    }
    $self->add_ok(sprintf 'found %d FEXes', scalar (@{$self->{fexes}}));
    $self->add_perfdata(
        label => 'num_fexes',
        value => $self->{numOfFexes},
    );
  }
}


package Classes::Cisco::NXOS::Component::FexSubsystem::Fex;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{original_cefexConfigExtenderName} = $self->{cefexConfigExtenderName};
  if (exists $self->{entPhysicalClass}) {
    # stammt aus ENTITY-MIB
    if ($self->{entPhysicalDescr} =~ /^FEX[^\d]*(\d+)/i) {
      $self->{cefexConfigExtenderName} = "FEX".$1;
    } else {
      $self->{cefexConfigExtenderName} = $self->{entPhysicalDescr};
    }
  } else {
    # stammt aus CISCO-ETHERNET-FABRIC-EXTENDER-MIB, kann FEX101-J8-VT04.01 heissen
    if ($self->{cefexConfigExtenderName} =~ /^FEX[^\d]*(\d+)/i) {
      $self->{cefexConfigExtenderName} = "FEX".$1;
    }
  }
}

package Classes::Cisco::NXOS;
our @ISA = qw(Classes::Cisco);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    #$self->mult_snmp_max_msg_size(10);
    $self->analyze_and_check_environmental_subsystem("Classes::Cisco::NXOS::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::cisco::fex::watch/) {
    $self->analyze_and_check_environmental_subsystem("Classes::Cisco::NXOS::Component::FexSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::Cisco::IOS::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::Cisco::NXOS::Component::MemSubsystem");
  } elsif ($self->mode =~ /device::config/) {
    $self->analyze_and_check_config_subsystem("Classes::Cisco::IOS::Component::ConfigSubsystem");
  } elsif ($self->mode =~ /device::hsrp/) {
    $self->analyze_and_check_hsrp_subsystem("Classes::HSRP::Component::HSRPSubsystem");
  } else {
    $self->no_such_mode();
  }
}

sub pretty_sysdesc {
  my ($self, $sysDescr) = @_;
  if ($sysDescr =~ /(Cisco NX-OS.*? n\d+),.*(Version .*), RELEASE SOFTWARE/) {
    return $1.' '.$2;
  }
}
package Classes::Cisco::WLC::Component::HaSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::ha::status/) {
    $self->{name} = $self->get_snmp_object('MIB-2-MIB', 'sysName', 0);
    $self->get_snmp_objects('CISCO-LWAPP-HA-MIB', qw(
        cLHaPeerIpAddressType cLHaPeerIpAddress
        cLHaServicePortPeerIpAddressType cLHaServicePortPeerIpAddress
        cLHaServicePortPeerIpNetMaskType cLHaServicePortPeerIpNetMask
        cLHaRedundancyIpAddressType cLHaRedundancyIpAddress
        cLHaPrimaryUnit cLHaNetworkFailOver
        cLHaBulkSyncStatus cLHaRFStatusUnitIp
        cLHaAvgPeerReachLatency cLHaAvgGwReachLatency 
    ));
  }
}

sub check {
  my ($self) = @_;
  $self->add_info('checking ha config');
  if ($self->mode =~ /device::ha::status/) {
    if ($self->{cLHaNetworkFailOver} &&
          $self->{cLHaNetworkFailOver} eq 'true') {
      $self->add_info(sprintf "this is a %s unit in a failover setup, bulk sync status is %s",
          ($self->{cLHaPrimaryUnit} && $self->{cLHaPrimaryUnit} eq 'false') ?
          "secondary" : "primary", $self->{cLHaBulkSyncStatus});
      if($self->{cLHaPrimaryUnit} &&
          $self->{cLHaPrimaryUnit} eq 'false') {
        $self->add_ok();
      } else {
        $self->add_ok();
      }
      if ($self->{cLHaBulkSyncStatus} ne "Complete") {
        $self->add_warning();
      }
    } else {
      $self->add_critical_mitigation('ha failover is not configured');
    }
  }
}

package Classes::Cisco::WLC::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('AIRESPACE-SWITCHING-MIB', (qw(
      agentTotalMemory agentFreeMemory)));
  $self->{memory_usage} = $self->{agentFreeMemory} ? 
      ( ($self->{agentTotalMemory} - $self->{agentFreeMemory}) / $self->{agentTotalMemory} * 100) : 100;
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'memory usage is %.2f%%',
      $self->{memory_usage});
  $self->set_thresholds(warning => 80, critical => 90);
  $self->add_message($self->check_thresholds($self->{memory_usage}));
  $self->add_perfdata(
      label => 'memory_usage',
      value => $self->{memory_usage},
      uom => '%',
  );
}

package Classes::Cisco::WLC::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  my $type = 0;
  $self->get_snmp_objects('AIRESPACE-SWITCHING-MIB', (qw(
      agentCurrentCPUUtilization)));
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'cpu usage is %.2f%%',
      $self->{agentCurrentCPUUtilization});
  $self->set_thresholds(warning => 80, critical => 90);
  $self->add_message($self->check_thresholds($self->{agentCurrentCPUUtilization}));
  $self->add_perfdata(
      label => 'cpu_usage',
      value => $self->{agentCurrentCPUUtilization},
      uom => '%',
  );
}

package Classes::Cisco::WLC::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->{ps1_present} = $self->get_snmp_object(
      'AIRESPACE-SWITCHING-MIB', 'agentSwitchInfoPowerSupply1Present', 0);
  $self->{ps1_operational} = $self->get_snmp_object(
      'AIRESPACE-SWITCHING-MIB', 'agentSwitchInfoPowerSupply1Operational', 0);
  $self->{ps2_present} = $self->get_snmp_object(
      'AIRESPACE-SWITCHING-MIB', 'agentSwitchInfoPowerSupply2Present', 0);
  $self->{ps2_operational} = $self->get_snmp_object(
      'AIRESPACE-SWITCHING-MIB', 'agentSwitchInfoPowerSupply2Operational', 0);
  $self->{temp_environment} = $self->get_snmp_object(
      'AIRESPACE-WIRELESS-MIB', 'bsnOperatingTemperatureEnvironment', 0);
  $self->{temp_value} = $self->get_snmp_object(
      'AIRESPACE-WIRELESS-MIB', 'bsnSensorTemperature', 0);
  $self->{temp_alarm_low} = $self->get_snmp_object(
      'AIRESPACE-WIRELESS-MIB', 'bsnTemperatureAlarmLowLimit', 0);
  $self->{temp_alarm_high} = $self->get_snmp_object(
      'AIRESPACE-WIRELESS-MIB', 'bsnTemperatureAlarmHighLimit', 0);
}

sub check {
  my ($self) = @_;
  #$self->blacklist('t', $self->{cpmCPUTotalPhysicalIndex});
  my $tinfo = sprintf 'temperature is %.2fC (%s env %s-%s)',
      $self->{temp_value}, $self->{temp_environment},
      $self->{temp_alarm_low}, $self->{temp_alarm_high};
  $self->set_thresholds(
      warning => $self->{temp_alarm_low}.':'.$self->{temp_alarm_high},
      critical => $self->{temp_alarm_low}.':'.$self->{temp_alarm_high});
  $self->add_message($self->check_thresholds($self->{temp_value}), $tinfo);
  $self->add_perfdata(
      label => 'temperature',
      value => $self->{temp_value},
  );
  if ($self->{ps1_present} eq "true") {
    if ($self->{ps1_operational} ne "true") {
      $self->add_warning("Powersupply 1 is not operational");
    }
  }
  if ($self->{ps2_present} eq "true") {
    if ($self->{ps2_operational} ne "true") {
      $self->add_warning("Powersupply 2 is not operational");
    }
  }
  my $p1info = sprintf "PS1 is %spresent and %soperational",
      $self->{ps1_present} eq "true" ? "" : "not ",
      $self->{ps1_operational} eq "true" ? "" : "not ";
  my $p2info = sprintf "PS2 is %spresent and %soperational",
      $self->{ps2_present} eq "true" ? "" : "not ",
      $self->{ps2_operational} eq "true" ? "" : "not ";
  $self->add_info($tinfo.", ".$p1info.", ".$p2info);
}

sub dump {
  my ($self) = @_;
  printf "[TEMPERATURE]\n";
  foreach (qw(temp_environment temp_value temp_alarm_low temp_alarm_high)) {
    if (exists $self->{$_}) {
      printf "%s: %s\n", $_, $self->{$_};
    }
  }
  printf "[PS1]\n";
  foreach (qw(ps1_present ps1_operational)) {
    if (exists $self->{$_}) {
      printf "%s: %s\n", $_, $self->{$_};
    }
  }
  printf "[PS2]\n";
  foreach (qw(ps2_present ps2_operational)) {
    if (exists $self->{$_}) {
      printf "%s: %s\n", $_, $self->{$_};
    }
  }
  printf "info: %s\n", $self->{info};
  printf "\n";
}

package Classes::Cisco::WLC::Component::WlanSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::wlan::aps::clients/) {
    $self->get_snmp_tables('AIRESPACE-WIRELESS-MIB', [
        ['mobilestations', 'bsnMobileStationTable', 'Classes::Cisco::WLC::Component::WlanSubsystem::MobileStation', sub { return $self->filter_name(shift->{bsnMobileStationSsid}) } ],
    ]);
  } else {
    $self->{name} = $self->get_snmp_object('MIB-2-MIB', 'sysName', 0);
    $self->get_snmp_objects('CISCO-LWAPP-HA-MIB', qw(
        cLHaPrimaryUnit cLHaNetworkFailOver cLHaPeerIpAddress
        cLHaRedundancyIpAddress 
    ));
    $self->mult_snmp_max_msg_size(4);
    $self->get_snmp_tables('AIRESPACE-WIRELESS-MIB', [
        ['aps', 'bsnAPTable', 'Classes::Cisco::WLC::Component::WlanSubsystem::AP', sub { return $self->filter_name(shift->{bsnAPName}) } ],
        ['ifs', 'bsnAPIfTable', 'Classes::Cisco::WLC::Component::WlanSubsystem::AP' ],
        ['ifloads', 'bsnAPIfLoadParametersTable', 'Classes::Cisco::WLC::Component::WlanSubsystem::IFLoad' ],
    ]);
    $self->assign_loads_to_ifs();
    $self->dummy_loads_to_ifs();
    $self->assign_ifs_to_aps();
  }
}

sub check {
  my ($self) = @_;
  $self->add_info('checking access points');
  if ($self->mode =~ /device::wlan::aps::clients/) {
    my $ssids = {};
    map { $ssids->{$_->{bsnMobileStationSsid}} += 1 } @{$self->{mobilestations}};
    foreach my $ssid (sort keys %{$ssids}) {
      $self->set_thresholds(metric => $ssid.'_clients',
          warning => '0:', critical => ':0');
      $self->add_message($self->check_thresholds(metric => $ssid.'_clients',
          value => $ssids->{$ssid}),
          sprintf 'SSID %s has %d clients',
          $ssid, $ssids->{$ssid});
      $self->add_perfdata(label => $ssid.'_clients',
          value => $ssids->{$ssid});
    }
  } else {
    $self->{numOfAPs} = scalar (@{$self->{aps}});
    $self->{apNameList} = [map { $_->{bsnAPName} } @{$self->{aps}}];
    if (scalar (@{$self->{aps}}) == 0) {
      if ($self->{cLHaNetworkFailOver} &&
          $self->{cLHaNetworkFailOver} eq 'true') {
        if($self->{cLHaPrimaryUnit} &&
            $self->{cLHaPrimaryUnit} eq 'false') {
          $self->add_ok('no access points found, this is a secondary unit in a failover setup');
        } else {
          $self->add_unknown('no access points found, this is a primary unit in a failover setup');
        }
      } else {
        $self->add_unknown('no access points found');
      }
      return;
    }
    foreach (@{$self->{aps}}) {
      $_->check();
    }
    if ($self->mode =~ /device::wlan::aps::watch/) {
      $self->opts->override_opt('lookback', 1800) if ! $self->opts->lookback;
      $self->valdiff({name => $self->{name}, lastarray => 1},
          qw(apNameList numOfAPs));
      if (scalar(@{$self->{delta_found_apNameList}}) > 0) {
      #if (scalar(@{$self->{delta_found_apNameList}}) > 0 &&
      #    $self->{delta_timestamp} > $self->opts->lookback) {
        $self->add_warning(sprintf '%d new access points (%s)',
            scalar(@{$self->{delta_found_apNameList}}),
            join(", ", @{$self->{delta_found_apNameList}}));
      }
      if (scalar(@{$self->{delta_lost_apNameList}}) > 0) {
        $self->add_critical(sprintf '%d access points missing (%s)',
            scalar(@{$self->{delta_lost_apNameList}}),
            join(", ", @{$self->{delta_lost_apNameList}}));
      }
      $self->add_ok(sprintf 'found %d access points', scalar (@{$self->{aps}}));
      $self->add_perfdata(
          label => 'num_aps',
          value => scalar (@{$self->{aps}}),
      );
    } elsif ($self->mode =~ /device::wlan::aps::count/) {
      $self->set_thresholds(warning => '10:', critical => '5:');
      $self->add_message($self->check_thresholds(
          scalar (@{$self->{aps}})), 
          sprintf 'found %d access points', scalar (@{$self->{aps}}));
      $self->add_perfdata(
          label => 'num_aps',
          value => scalar (@{$self->{aps}}),
      );
    } elsif ($self->mode =~ /device::wlan::aps::status/) {
      if ($self->opts->report eq "short") {
        $self->clear_ok();
        $self->add_ok('no problems') if ! $self->check_messages();
      }
    } elsif ($self->mode =~ /device::wlan::aps::list/) {
      foreach (@{$self->{aps}}) {
        printf "%s\n", $_->{bsnAPName};
      }
    }
  }
}

sub assign_ifs_to_aps {
  my ($self) = @_;
  foreach my $ap (@{$self->{aps}}) {
    $ap->{interfaces} = [];
    foreach my $if (@{$self->{ifs}}) {
      if ($if->{flat_indices} eq $ap->{bsnAPDot3MacAddress}.".".$if->{bsnAPIfSlotId}) {
        push(@{$ap->{interfaces}}, $if);
      }
    }
    $ap->{NumOfClients} = 0;
    map {$ap->{NumOfClients} += $_->{bsnAPIfLoadNumOfClients} }
        @{$ap->{interfaces}};
  }
}

sub assign_loads_to_ifs {
  my ($self) = @_;
  foreach my $if (@{$self->{ifs}}) {
    foreach my $load (@{$self->{ifloads}}) {
      if ($load->{flat_indices} eq $if->{flat_indices}) {
        map { $if->{$_} = $load->{$_} } grep { $_ !~ /indices/ } keys %{$load};
      }
    }
    if (! exists $if->{bsnAPIfLoadNumOfClients}) {
      # sometimes there is no corresponding load entry for an interface
      $if->{bsnAPIfLoadNumOfClients} = 0;
      $if->{bsnAPIfLoadTxUtilization} = 0;
      $if->{bsnAPIfLoadRxUtilization} = 0;
    }
  }
}


package Classes::Cisco::WLC::Component::WlanSubsystem::IF;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;


package Classes::Cisco::WLC::Component::WlanSubsystem::IFLoad;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;


package Classes::Cisco::WLC::Component::WlanSubsystem::AP;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  if ($self->{bsnAPDot3MacAddress} && $self->{bsnAPDot3MacAddress} =~ /0x(\w{2})(\w{2})(\w{2})(\w{2})(\w{2})(\w{2})/) {
    $self->{bsnAPDot3MacAddress} = join(".", map { hex($_) } ($1, $2, $3, $4, $5, $6));
  } elsif ($self->{bsnAPDot3MacAddress} && unpack("H12", $self->{bsnAPDot3MacAddress}) =~ /(\w{2})(\w{2})(\w{2})(\w{2})(\w{2})(\w{2})/) {
    $self->{bsnAPDot3MacAddress} = join(".", map { hex($_) } ($1, $2, $3, $4, $5, $6));
  }
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'access point %s is %s/%s (%d interfaces with %d clients)',
      $self->{bsnAPName}, $self->{bsnAPAdminStatus},
      $self->{bsnAPOperationStatus},
      scalar(@{$self->{interfaces}}), $self->{NumOfClients});
  if ($self->mode =~ /device::wlan::aps::status/) {
    if ($self->{bsnAPAdminStatus} eq 'disable') {
      $self->add_ok();
    } elsif ($self->{bsnAPOperationStatus} eq 'disassociating') {
      $self->add_critical();
    } elsif ($self->{bsnAPOperationStatus} eq 'downloading') {
      # das verschwindet hoffentlich noch vor dem HARD-state
      $self->add_warning();
    } elsif ($self->{bsnAPOperationStatus} eq 'associated') {
      $self->add_ok();
    } else {
      $self->add_unknown();
    }
  }
}

package Classes::Cisco::WLC::Component::WlanSubsystem::MobileStation;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{bsnMobileStationMacAddress} = 
      $self->unhex_mac($self->{bsnMobileStationMacAddress});
}
package Classes::Cisco::WLC;
our @ISA = qw(Classes::Cisco);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    if ($self->implements_mib('AIRESPACE-SWITCHING-MIB') &&
        $self->get_snmp_object('AIRESPACE-SWITCHING-MIB', 'agentSwitchInfoPowerSupply1Present')) {
      $self->analyze_and_check_environmental_subsystem("Classes::Cisco::WLC::Component::EnvironmentalSubsystem");
    } else {
      $self->analyze_and_check_environmental_subsystem("Classes::Cisco::IOS::Component::EnvironmentalSubsystem");
    }
  } elsif ($self->mode =~ /device::hardware::load/) {
    if ($self->implements_mib('AIRESPACE-SWITCHING-MIB') &&
        defined $self->get_snmp_object('AIRESPACE-SWITCHING-MIB', 'agentCurrentCPUUtilization')) {
      $self->analyze_and_check_cpu_subsystem("Classes::Cisco::WLC::Component::CpuSubsystem");
    } else {
      $self->analyze_and_check_cpu_subsystem("Classes::Cisco::IOS::Component::CpuSubsystem");
    }
  } elsif ($self->mode =~ /device::hardware::memory/) {
    if ($self->implements_mib('AIRESPACE-SWITCHING-MIB') &&
        $self->get_snmp_object('AIRESPACE-SWITCHING-MIB', 'agentTotalMemory')) {
      $self->analyze_and_check_mem_subsystem("Classes::Cisco::WLC::Component::MemSubsystem");
    } else {
      $self->analyze_and_check_mem_subsystem("Classes::Cisco::IOS::Component::MemSubsystem");
    }
  } elsif ($self->mode =~ /device::wlan/) {
    $self->analyze_and_check_wlan_subsystem("Classes::Cisco::WLC::Component::WlanSubsystem");
  } elsif ($self->mode =~ /device::ha::/) {
    $self->analyze_and_check_wlan_subsystem("Classes::Cisco::WLC::Component::HaSubsystem");
  } else {
    $self->no_such_mode();
  }
}

sub pretty_sysdesc {
  my ($self, $sysDescr) = @_;
  $self->get_snmp_objects('AIRESPACE-SWITCHING-MIB', qw(agentInventorySysDescription agentInventoryMachineModel));
  if ($self->{agentInventorySysDescription} and $self->{agentInventoryMachineModel}) {
    return $self->{agentInventorySysDescription}." ".$self->{agentInventoryMachineModel};
  }
}
package Classes::Cisco::PrimeNCS;
our @ISA = qw(Classes::Cisco);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    #$self->analyze_and_check_environmental_subsystem("Classes::Cisco::CISCOENTITYFRUCONTROLMIB::Component::EnvironmentalSubsystem");
    $self->analyze_and_check_environmental_subsystem("Classes::HOSTRESOURCESMIB::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::HOSTRESOURCESMIB::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::HOSTRESOURCESMIB::Component::MemSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::Cisco::UCOS;
our @ISA = qw(Classes::Cisco);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::HOSTRESOURCESMIB::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::HOSTRESOURCESMIB::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::HOSTRESOURCESMIB::Component::MemSubsystem");
  } elsif ($self->mode =~ /device::phone::cm/) {
    $self->analyze_and_check_cm_subsystem("Classes::Cisco::CCM::Component::CmSubsystem");
  } elsif ($self->mode =~ /device::phone/) {
    $self->analyze_and_check_phone_subsystem("Classes::Cisco::CCM::Component::PhoneSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::Cisco::CCM::Component::PhoneSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('CISCO-CCM-MIB', (qw(
      ccmRegisteredPhones ccmUnregisteredPhones ccmRejectedPhones)));
  if (! defined $self->{ccmRegisteredPhones}) {
    $self->get_snmp_tables('CISCO-CCM-MIB', [
        ['ccms', 'ccmTable', 'Classes::Cisco::CCM::Component::CmSubsystem::Cm'],
    ]);
  }
}

sub check {
  my ($self) = @_;
  if (! defined $self->{ccmRegisteredPhones}) {
    foreach (qw(ccmRegisteredPhones ccmUnregisteredPhones ccmRejectedPhones)) {
      $self->{$_} = 0;
    }
    if (! scalar(@{$self->{ccms}})) {
      $self->add_ok('cm is down');
    } else {
      $self->add_unknown('unable to count phones');
    }
  }

  $self->add_info(sprintf 'phones: %d registered, %d unregistered, %d rejected',
      $self->{ccmRegisteredPhones},
      $self->{ccmUnregisteredPhones},
      $self->{ccmRejectedPhones});

  $self->set_thresholds(metric => 'registered',
      warning => '0:', critical => '0:');
  $self->set_level($self->check_thresholds(metric => 'registered',
      value => $self->{ccmRegisteredPhones}));

  $self->set_thresholds(metric => 'unregistered',
      warning => 11, critical => 22);
  $self->set_level($self->check_thresholds(metric => 'unregistered',
      value => $self->{ccmUnregisteredPhones}));

  $self->set_thresholds(metric => 'rejected',
      warning => 110, critical => 120);
  $self->set_level($self->check_thresholds(metric => 'rejected',
      value => $self->{ccmRejectedPhones}));

  $self->add_message($self->get_level());

  $self->add_perfdata(
      label => 'registered',
      value => $self->{ccmRegisteredPhones},
  );
  $self->add_perfdata(
      label => 'unregistered',
      value => $self->{ccmUnregisteredPhones},
  );
  $self->add_perfdata(
      label => 'rejected',
      value => $self->{ccmRejectedPhones},
  );
}

package Classes::Cisco::CCM::Component::CmSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('CISCO-CCM-MIB', [
      ['ccms', 'ccmTable', 'Classes::Cisco::CCM::Component::CmSubsystem::Cm'],
  ]);
}

sub check {
  my ($self) = @_;
  foreach (@{$self->{ccms}}) {
    $_->check();
  }
  if (! scalar(@{$self->{ccms}})) {
    $self->add_message(
        defined $self->opts->mitigation() ? $self->opts->mitigation() : 2,
        'local callmanager is down');
  }
}


package Classes::Cisco::CCM::Component::CmSubsystem::Cm;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'cm %s is %s',
      $self->{ccmName},
      $self->{ccmStatus});
  $self->add_message($self->{ccmStatus} eq 'up' ? OK : CRITICAL);
}

package Classes::Cisco::CCM;
our @ISA = qw(Classes::Cisco);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::HOSTRESOURCESMIB::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::HOSTRESOURCESMIB::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::HOSTRESOURCESMIB::Component::MemSubsystem");
  } elsif ($self->mode =~ /device::phone::cm/) {
    $self->analyze_and_check_cm_subsystem("Classes::Cisco::CCM::Component::CmSubsystem");
  } elsif ($self->mode =~ /device::phone/) {
    $self->analyze_and_check_phone_subsystem("Classes::Cisco::CCM::Component::PhoneSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::Cisco::AsyncOS::Component::KeySubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('ASYNCOS-MAIL-MIB', [
      ['keys', 'keyExpirationTable', 'Classes::Cisco::AsyncOS::Component::KeySubsystem::Key'],
  ]);
}

package Classes::Cisco::AsyncOS::Component::KeySubsystem::Key;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->{keyDaysUntilExpire} = int($self->{keySecondsUntilExpire} / 86400);
  if ($self->{keyIsPerpetual} eq 'true') {
    $self->add_info(sprintf 'perpetual key %d (%s) never expires',
        $self->{keyExpirationIndex},
        $self->{keyDescription});
    $self->add_ok();
  } else {
    $self->add_info(sprintf 'key %d (%s) expires in %d days',
        $self->{keyExpirationIndex},
        $self->{keyDescription},
        $self->{keyDaysUntilExpire});
    $self->set_thresholds(warning => '14:', critical => '7:');
    $self->add_message($self->check_thresholds($self->{keyDaysUntilExpire}));
  }
  $self->{keyDescription} =~ s/Ironport//gi;
  $self->{keyDescription} =~ s/^ //;
  $self->{keyDescription} =~ s/ /_/g;
  $self->add_perfdata(
      label => sprintf('lifetime_%s', $self->{keyDescription}),
      value => $self->{keyDaysUntilExpire},
      thresholds => $self->{keyIsPerpetual} eq 'true' ? 0 : 1,
  );
}

package Classes::Cisco::AsyncOS::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('ASYNCOS-MAIL-MIB', (qw(
      perCentMemoryUtilization memoryAvailabilityStatus)));
}

sub check {
  my ($self) = @_;
  $self->add_info('checking memory');
  $self->add_info(sprintf 'memory usage is %.2f%% (%s)',
      $self->{perCentMemoryUtilization}, $self->{memoryAvailabilityStatus});
  $self->set_thresholds(warning => 80, critical => 90);
  if ($self->check_thresholds($self->{perCentMemoryUtilization})) {
    $self->add_message($self->check_thresholds($self->{perCentMemoryUtilization}));
  } elsif ($self->{memoryAvailabilityStatus} eq 'memoryShortage') {
    $self->add_warning();
    $self->set_thresholds(warning => $self->{perCentMemoryUtilization}, critical => 90);
  } elsif ($self->{memoryAvailabilityStatus} eq 'memoryFull') {
    $self->add_critical();
    $self->set_thresholds(warning => 80, critical => $self->{perCentMemoryUtilization});
  } else {
    $self->add_ok();
  }
  $self->add_perfdata(
      label => 'memory_usage',
      value => $self->{perCentMemoryUtilization},
      uom => '%',
  );
}

package Classes::Cisco::AsyncOS::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('ASYNCOS-MAIL-MIB', (qw(
      perCentCPUUtilization)));
}

sub check {
  my ($self) = @_;
  $self->add_info('checking cpus');
  $self->add_info(sprintf 'cpu usage is %.2f%%',
      $self->{perCentCPUUtilization});
  $self->set_thresholds(warning => 80, critical => 90);
  $self->add_message($self->check_thresholds($self->{perCentCPUUtilization}));
  $self->add_perfdata(
      label => 'cpu_usage',
      value => $self->{perCentCPUUtilization},
      uom => '%',
  );
}

package Classes::Cisco::AsyncOS::Component::TemperatureSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('ASYNCOS-MAIL-MIB', [
      ['temperatures', 'temperatureTable', 'Classes::Cisco::AsyncOS::Component::TemperatureSubsystem::Temperature'],
  ]);
}

package Classes::Cisco::AsyncOS::Component::TemperatureSubsystem::Temperature;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->set_thresholds(warning => 60, critical => 70);
  $self->add_info(sprintf 'temperature %d (%s) is %s degree C',
        $self->{temperatureIndex},
        $self->{temperatureName},
        $self->{degreesCelsius});
  if ($self->check_thresholds($self->{degreesCelsius})) {
    $self->add_message($self->check_thresholds($self->{degreesCelsius}),
        $self->{info});
  }
  $self->add_perfdata(
      label => sprintf('temp_%s', $self->{temperatureIndex}),
      value => $self->{degreesCelsius},
  );
}

package Classes::Cisco::AsyncOS::Component::PowersupplySubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('ASYNCOS-MAIL-MIB', [
      ['supplies', 'powerSupplyTable', 'Classes::Cisco::AsyncOS::Component::PowersupplySubsystem::Powersupply'],
  ]);
}

package Classes::Cisco::AsyncOS::Component::PowersupplySubsystem::Powersupply;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'powersupply %d (%s) has status %s',
      $self->{powerSupplyIndex},
      $self->{powerSupplyName},
      $self->{powerSupplyStatus});
  if ($self->{powerSupplyStatus} eq 'powerSupplyNotInstalled') {
  } elsif ($self->{powerSupplyStatus} ne 'powerSupplyHealthy') {
    $self->add_critical();
  }
}

package Classes::Cisco::AsyncOS::Component::FanSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('ASYNCOS-MAIL-MIB', [
      ['fans', 'fanTable', 'Classes::Cisco::AsyncOS::Component::FanSubsystem::Fan'],
  ]);
}

package Classes::Cisco::AsyncOS::Component::FanSubsystem::Fan;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'fan %d (%s) has %s rpm',
      $self->{fanIndex},
      $self->{fanName},
      $self->{fanRPMs});
  $self->add_perfdata(
      label => sprintf('fan_c%s', $self->{fanIndex}),
      value => $self->{fanRPMs},
      thresholds => 0,
  );
}

package Classes::Cisco::AsyncOS::Component::RaidSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('ASYNCOS-MAIL-MIB', (qw(
      raidEvents)));
  $self->get_snmp_tables('ASYNCOS-MAIL-MIB', [
      ['raids', 'raidTable', 'Classes::Cisco::AsyncOS::Component::RaidSubsystem::Raid'],
  ]);
}

package Classes::Cisco::AsyncOS::Component::RaidSubsystem::Raid;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'raid %d has status %s',
      $self->{raidIndex},
      $self->{raidStatus});
  if ($self->{raidStatus} eq 'driveHealthy') {
  } elsif ($self->{raidStatus} eq 'driveRebuild') {
    $self->add_warning();
  } elsif ($self->{raidStatus} eq 'driveFailure') {
    $self->add_critical();
  }
}

package Classes::Cisco::AsyncOS::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  #
  # 1.3.6.1.4.1.9.9.13.1.1.0 ciscoEnvMonPresent (irgendein typ of envmon)
  # 
  $self->{fan_subsystem} =
      Classes::Cisco::AsyncOS::Component::FanSubsystem->new();
  $self->{temperature_subsystem} =
      Classes::Cisco::AsyncOS::Component::TemperatureSubsystem->new();
  $self->{powersupply_subsystem} = 
      Classes::Cisco::AsyncOS::Component::PowersupplySubsystem->new();
  $self->{raid_subsystem} = 
      Classes::Cisco::AsyncOS::Component::RaidSubsystem->new();
}

sub check {
  my ($self) = @_;
  $self->{fan_subsystem}->check();
  $self->{temperature_subsystem}->check();
  $self->{powersupply_subsystem}->check();
  $self->{raid_subsystem}->check();
  if (! $self->check_messages()) {
    $self->add_ok("environmental hardware working fine");
  }
}

sub dump {
  my ($self) = @_;
  $self->{fan_subsystem}->dump();
  $self->{temperature_subsystem}->dump();
  $self->{powersupply_subsystem}->dump();
  $self->{raid_subsystem}->dump();
}

package Classes::Cisco::AsyncOS;
our @ISA = qw(Classes::Cisco);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::Cisco::AsyncOS::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::Cisco::AsyncOS::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::Cisco::AsyncOS::Component::MemSubsystem");
  } elsif ($self->mode =~ /device::licenses::/) {
    $self->analyze_and_check_key_subsystem("Classes::Cisco::AsyncOS::Component::KeySubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::Cisco::SB::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  # schaut eher schlecht aus, das zeugs ist nicht main memory wie ueblich
  $self->get_snmp_objects('CISCOSB-SYSMNG-MIB', (qw(
      rlSysmngResourcePerUnitEntry
  )));
  $self->xget_snmp_tables('CISCOSB-SYSMNG-MIB', [
    ['tcamallocs', 'rlSysmngTcamAllocationsTable', 'Monitoring::GLPlugin::SNMP::TableItem'],
    ['resources', 'rlSysmngResourceTable', 'Monitoring::GLPlugin::SNMP::TableItem'],
    ['resourceusage', 'rlSysmngResourceUsageTable', 'Monitoring::GLPlugin::SNMP::TableItem'],
    ['resperunit', 'rlSysmngResourcePerUnitTable', 'Monitoring::GLPlugin::SNMP::TableItem'],
  ]);
}

sub check {
  my ($self) = @_;
}

package Classes::Cisco::SB::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  my $type = 0;
  $self->get_snmp_objects('CISCOSB-RNDMNG', (qw(
      rlCpuUtilDuringLast5Minutes)));
}

sub check {
  my ($self) = @_;
  if ($self->{rlCpuUtilDuringLast5Minutes} == 101) {
    $self->add_unknown('cpu measurement disabled');
    return;
  }
  $self->add_info(sprintf 'cpu usage is %.2f%%',
      $self->{rlCpuUtilDuringLast5Minutes});
  $self->set_thresholds(warning => 80, critical => 90);
  $self->add_message($self->check_thresholds(
      $self->{rlCpuUtilDuringLast5Minutes}));
  $self->add_perfdata(
      label => 'cpu_usage',
      value => $self->{rlCpuUtilDuringLast5Minutes},
      uom => '%',
  );
}

package Classes::Cisco::SB::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('CISCOSB-HWENVIROMENT', [
      ['fans', 'rlEnvMonFanStatusTable', 'Classes::Cisco::SB::Component::EnvironmentalSubsystem::Fan'],
      ['powersupplies', 'rlEnvMonSupplyStatusTable', 'Classes::Cisco::SB::Component::EnvironmentalSubsystem::Powersupply'],
  ]);
  $self->get_snmp_tables('ENTITY-MIB', [
    ['entities', 'entPhysicalTable', 'Monitoring::GLPlugin::SNMP::TableItem'],
  ]);

}


package Classes::Cisco::SB::Component::EnvironmentalSubsystem::Fan;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'status of fan %s is %s',
      $self->{flat_indices}, $self->{rlEnvMonFanState});
  if ($self->{rlEnvMonFanState} eq 'notPresent') {
  } elsif ($self->{rlEnvMonFanState} eq 'normal') {
    $self->add_ok();
  } elsif ($self->{rlEnvMonFanState} eq 'warning') {
    $self->add_warning();
  } else {
    $self->add_critical();
  }
}

package Classes::Cisco::SB::Component::EnvironmentalSubsystem::Powersupply;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'status of supply %s is %s',
      $self->{flat_indices}, $self->{rlEnvMonSupplyState});
  if ($self->{rlEnvMonSupplyState} eq 'notPresent') {
  } elsif ($self->{rlEnvMonSupplyState} eq 'normal') {
    $self->add_ok();
  } elsif ($self->{rlEnvMonSupplyState} eq 'warning') {
    $self->add_warning();
  } else {
    $self->add_critical();
  }
}


package Classes::Cisco::SB;
our @ISA = qw(Classes::Cisco);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::Cisco::SB::Component::EnvironmentalSubsystem");
    if (! $self->check_messages()) {
      $self->clear_messages(0);
      $self->add_ok("environmental hardware working fine");
    }
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_environmental_subsystem("Classes::Cisco::SB::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->no_such_mode();
    #$self->analyze_and_check_environmental_subsystem("Classes::Cisco::SB::Component::MemSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::Cisco;
our @ISA = qw(Classes::Device);
use strict;

sub init {
  my ($self) = @_;
  if ($self->{productname} =~ /Cisco NX-OS/i) {
    $self->rebless('Classes::Cisco::NXOS');
  } elsif ($self->{productname} =~ /Cisco Controller/i ||
      $self->implements_mib('AIRESPACE-SWITCHING-MIB')) {
    # die AIRESPACE-WIRELESS-MIB haben manchmal auch stinknormale Switche,
    # das hat also nichts zu sagen. SWITCHING ist entscheidend.
    $self->rebless('Classes::Cisco::WLC');
  } elsif ($self->{productname} =~ /Cisco.*(IronPort|AsyncOS)/i) {
    $self->rebless('Classes::Cisco::AsyncOS');
  } elsif ($self->{productname} =~ /Cisco.*Prime Network Control System/i) {
    $self->rebless('Classes::Cisco::PrimeNCS');
  } elsif ($self->{productname} =~ /UCOS /i) {
    $self->rebless('Classes::Cisco::UCOS');
  } elsif ($self->{productname} =~ /Cisco (PIX|Adaptive) Security Appliance/i) {
    $self->rebless('Classes::Cisco::ASA');
  } elsif ($self->{productname} =~ /Cisco/i) {
    $self->rebless('Classes::Cisco::IOS');
  } elsif ($self->{productname} =~ /Fujitsu Intelligent Blade Panel 30\/12/i) {
    $self->rebless('Classes::Cisco::IOS');
  } elsif ($self->get_snmp_object('MIB-2-MIB', 'sysObjectID', 0) eq '1.3.6.1.4.1.9.1.1348') {
    $self->rebless('Classes::Cisco::CCM');
  } elsif ($self->get_snmp_object('MIB-2-MIB', 'sysObjectID', 0) eq '1.3.6.1.4.1.9.1.746') {
    $self->rebless('Classes::Cisco::CCM');
  } elsif ($self->get_snmp_object('MIB-2-MIB', 'sysObjectID', 0) =~ /.1.3.6.1.4.1.9.6.1.83/) {
    $self->rebless('Classes::Cisco::SB');
  }
  if (ref($self) ne "Classes::Cisco") {
    if ($self->mode =~ /device::bgp/) {
      if ($self->implements_mib('CISCO-BGP4-MIB', 'cbgpPeer2Table')) {
        $self->analyze_and_check_interface_subsystem("Classes::Cisco::CISCOBGP4MIB::Component::PeerSubsystem");
      } else {
        $self->debug("no CISCO-BGP4-MIB and/or no cbgpPeer2Table, fallback");
        $self->no_such_mode();
      }
    } elsif ($self->mode =~ /device::eigrp/) {
      if ($self->implements_mib('CISCO-EIGRP-MIB')) {
        $self->analyze_and_check_interface_subsystem("Classes::Cisco::EIGRPMIB::Component::PeerSubsystem");
      } else {
        $self->no_such_mode();
      }
    } elsif ($self->mode =~ /device::interfaces::etherstats/) {
      if ($self->implements_mib('OLD-CISCO-INTERFACES-MIB')) {
        $self->analyze_and_check_interface_subsystem("Classes::Cisco::OLDCISCOINTERFACESMIB::Component::InterfaceSubsystem");
      } else {
        $self->no_such_mode();
      }
    } elsif ($self->mode =~ /device::interfaces::portsecurity/) {
      if ($self->implements_mib('CISCO-PORT-SECURITY-MIB')) {
        $self->analyze_and_check_interface_subsystem("Classes::Cisco::CISCOPORTSECURITYMIB::Component::InterfaceSubsystem");
      } else {
        $self->no_such_mode();
      }
    } else {
      $self->init();
      if ($self->mode =~ /device::interfaces::ifstack::status/ &&
          $self->{productname} =~ /IOS.*((12.0\(25\)SX3)|(12.0S)|(12.1E)|(12.2)|(12.2S)|(12.3))/) {
        # known bug in this ios release. CSCed67708
        my ($code, $msg) = $self->check_messages(join => ', ', join_all => ', ');
        if ($code == 1 && $msg =~ /^(([^,]+? has stack status active but no sub-layer interfaces(, )*)+)$/) {
          $self->override_opt('negate', {'warning' => 'ok'});
        }
      }
    }
  } else {
    $self->no_such_mode();
  }
}

package Classes::OneOS::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('ONEACCESS-SYS-MIB', [
    ['comps', 'oacExpIMSysHwComponentsTable', 'Classes::OneOS::Component::EnvironmentalSubsystem::Comp' ],
  ]);
}

sub check {
  my ($self) = @_;
  $self->add_ok("environmental hardware working fine, at least i hope so. this device did not implement any kind of hardware health status. use -vv to see a list of components");
}


package Classes::OneOS::Component::EnvironmentalSubsystem::Comp;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  my $label = sprintf 'usage', $self->{flat_indices};
  $self->add_info(sprintf '%s %s %s',
      $self->{flat_indices}, $self->{oacExpIMSysHwcTypeDefinition},
      $self->{oacExpIMSysHwcDescription});
}
package Classes::OneOS::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('ONEACCESS-SYS-MIB', (qw(
      oacSysCpuUsed)));
}

sub check {
  my ($self) = @_;
  $self->add_info('checking cpu');
  $self->add_info(sprintf 'cpu usage is %.2f%%',
      $self->{oacSysCpuUsed});
  $self->set_thresholds(warning => 80, critical => 90);
  $self->add_message($self->check_thresholds($self->{oacSysCpuUsed}));
  $self->add_perfdata(
      label => 'cpu_usage',
      value => $self->{oacSysCpuUsed},
      uom => '%',
  );
}

package Classes::OneOS::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('ONEACCESS-SYS-MIB', (qw(
      oacSysMemoryUsed)));
}

sub check {
  my ($self) = @_;
  $self->add_info('checking memory');
  $self->add_info(sprintf 'memory usage is %.2f%%',
      $self->{oacSysMemoryUsed});
  $self->set_thresholds(warning => 80, critical => 90);
  $self->add_message($self->check_thresholds($self->{oacSysMemoryUsed}));
  $self->add_perfdata(
      label => 'memory_usage',
      value => $self->{oacSysMemoryUsed},
      uom => '%',
  );
}
package Classes::OneOS;
our @ISA = qw(Classes::Device);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::OneOS::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::OneOS::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::OneOS::Component::MemSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::Nortel::S5::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('S5-CHASSIS-MIB', [
    ['comps', 's5ChasComTable', 'Classes::Nortel::S5::Component::EnvironmentalSubsystem::Comp' ],
  ]);
}

sub check {
  my ($self) = @_;
  foreach (@{$self->{comps}}) {
    $_->check();
  }
  $self->reduce_messages("environmental hardware working fine");
}


package Classes::Nortel::S5::Component::EnvironmentalSubsystem::Comp;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{s5ChasComShortDescr} = $self->{s5ChasComDescr};
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'component %s/%s status is %s (admin %s)',
      $self->{flat_indices}, $self->{s5ChasComShortDescr},
      $self->{s5ChasComOperState}, $self->{s5ChasComAdminState});
  if ($self->{s5ChasComOperState} eq 'removed') {
  } elsif ($self->{s5ChasComAdminState} eq 'disable') {
  } elsif (grep { $self->{s5ChasComOperState} eq $_ }
      (qw(normal resetInProg testing disabled))) {
    $self->add_ok();
  } elsif (grep { $self->{s5ChasComOperState} eq $_ }
      (qw(warning nonFatalErr))) {
    $self->add_warning();
  } elsif (grep { $self->{s5ChasComOperState} eq $_ }
      (qw(fatalErr))) {
    $self->add_critical();
  } else {
    $self->add_unknown();
  }
}
package Classes::Nortel::S5::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('S5-CHASSIS-MIB', [
    ['utils', 's5ChasUtilTable', 'Classes::Nortel::S5::Component::CpuSubsystem::Cpu' ],
  ]);
}


package Classes::Nortel::S5::Component::CpuSubsystem::Cpu;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  my $label = sprintf 'cpu_%s_usage', $self->{flat_indices};
  $self->add_info(sprintf 'cpu %s usage was %.2f%%(1min) %.2f%%(10min)',
      $self->{flat_indices},,
      $self->{s5ChasUtilCPUUsageLast1Minute},
      $self->{s5ChasUtilCPUUsageLast10Minutes});
  $self->set_thresholds(metric => $label.'_10m', warning => 80, critical => 90);
  $self->add_message($self->check_thresholds(
      metric => $label.'_10m', value => $self->{s5ChasUtilCPUUsageLast10Minutes}));
  $self->add_perfdata(
      label => $label.'_1m',
      value => $self->{s5ChasUtilCPUUsageLast1Minute},
      uom => '%',
  );
  $self->add_perfdata(
      label => $label.'_10m',
      value => $self->{s5ChasUtilCPUUsageLast10Minutes},
      uom => '%',
  );
}
package Classes::Nortel::S5::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('S5-CHASSIS-MIB', [
    ['utils', 's5ChasUtilTable', 'Classes::Nortel::S5::Component::MemSubsystem::Mem' ],
  ]);
}


package Classes::Nortel::S5::Component::MemSubsystem::Mem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{s5ChasUtilMemoryUsage} = 100 - 
      ($self->{s5ChasUtilMemoryAvailableMB} /
      $self->{s5ChasUtilMemoryTotalMB} * 100);
}

sub check {
  my ($self) = @_;
  my $label = sprintf 'memory_%s_usage', $self->{flat_indices};
  $self->add_info(sprintf 'memory %s usage is %.2f%%',
      $self->{flat_indices},,
      $self->{s5ChasUtilMemoryUsage});
  $self->set_thresholds(metric => $label, warning => 80, critical => 90);
  $self->add_message($self->check_thresholds(
      metric => $label, value => $self->{s5ChasUtilMemoryUsage}));
  $self->add_perfdata(
      label => $label,
      value => $self->{s5ChasUtilMemoryUsage},
      uom => '%',
  );
}
# 3fach indexiert, als tabelle ausgeben und durchnumerieren
package Classes::Nortel::S5;
our @ISA = qw(Classes::Device);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::Nortel::S5::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::Nortel::S5::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::Nortel::S5::Component::MemSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::Nortel;
our @ISA = qw(Classes::Device);
use strict;

sub init {
  my ($self) = @_;
  if ($self->implements_mib('S5-CHASSIS-MIB')) {
    bless $self, 'Classes::Nortel::S5';
    $self->debug('using Classes::Nortel::S5');
  } elsif ($self->implements_mib('RAPID-CITY-MIB')) {
    # synoptics wird von bay networks gekauft
    # bay networks wird von nortel gekauft
    # und alles was ich da an testdaten habe, ist muell. lauter
    # dreck aus einer rcPortTable, aber nix fan, nix temp, nix cpu
    bless $self, 'Classes::RAPIDCITYMIB';
    $self->debug('using Classes::RAPID-CITY-MIB');
  }
  if (ref($self) ne "Classes::Nortel") {
    $self->init();
  }
}

package Classes::Juniper::JunOS::Component::BgpSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub init {
  my ($self) = @_;
  $self->{peers} = [];
  if ($self->mode =~ /device::bgp::peer::(list|count|watch)/) {
    $self->update_entry_cache(1, 'JUNOS-BGP4V2-MIB', 'jnxBgpM2PeerTable', 'jnxBgpM2PeerRemoteAddr');
    $self->update_entry_cache(1, 'JUNOS-BGP4V2-MIB', 'jnxBgpM2PeerEventTimesTable', '');
    $self->update_entry_cache(1, 'JUNOS-BGP4V2-MIB', 'jnxBgpM2PeerErrorsTable', '');
  }
  my %peers = ();
  foreach ($self->get_snmp_table_objects_with_cache(
      'JUNOS-BGP4V2-MIB', 'jnxBgpM2PeerTable', 'jnxBgpM2PeerRemoteAddr')) {
    if ($_->{jnxBgpM2PeerRemoteAddrType} =~ /ipv6/) {
      $_->{jnxBgpM2PeerRemoteAddr} = $self->unhex_ipv6($_->{jnxBgpM2PeerRemoteAddr});
    } else {
      $_->{jnxBgpM2PeerRemoteAddr} = $self->unhex_ip($_->{jnxBgpM2PeerRemoteAddr});
    }
    $peers{$_->{flat_indices}} = $_;
  }
  foreach ($self->get_snmp_table_objects_with_cache('JUNOS-BGP4V2-MIB', 'jnxBgpM2PeerEventTimesTable', '')) {
    my $peer = $peers{$_->{flat_indices}};
    $peer->{jnxBgpM2PeerFsmEstablishedTime} = $_->{jnxBgpM2PeerFsmEstablishedTime};
  }
  foreach ($self->get_snmp_table_objects_with_cache('JUNOS-BGP4V2-MIB', 'jnxBgpM2PeerErrorsTable', '')) {
    my $peer = $peers{$_->{flat_indices}};
    $peer->{jnxBgpM2PeerLastErrorReceivedText} = $_->{jnxBgpM2PeerLastErrorReceivedText};
    $peer->{jnxBgpM2PeerLastErrorSentText} = $_->{jnxBgpM2PeerLastErrorSentText};
  }
  foreach my $key (keys %peers)
  {
    if ($self->filter_name($peers{$key}->{jnxBgpM2PeerRemoteAddr})) {
      my $peer = $peers{$key};
      push(@{$self->{peers}}, Classes::Juniper::JunOS::Component::BgpSubsystem::Peer->new(%$peer));
    }
  }
}

sub check {
  my ($self) = @_;
  my $errorfound = 0;
  if ($self->mode =~ /prefix::count/) {
    if (scalar(@{$self->{peers}}) == 0) {
      $self->add_critical('no peers found');
    } else {
      $self->SUPER::check();
    }
  }
  $self->add_info('checking bgp peers');
  if ($self->mode =~ /peer::list/) {
    foreach (sort {$a->{jnxBgpM2PeerRemoteAddr} cmp $b->{jnxBgpM2PeerRemoteAddr}} @{$self->{peers}}) {
      printf "%s\n", $_->{jnxBgpM2PeerRemoteAddr};
      $_->list();
    }
    $self->add_ok("have fun");
  } elsif ($self->mode =~ /peer::count/) {
    $self->add_info(sprintf "found %d peers", scalar(@{$self->{peers}}));
    $self->set_thresholds(warning => '1:', critical => '1:');
    $self->add_message($self->check_thresholds(scalar(@{$self->{peers}})));
    $self->add_perfdata(
        label => 'peers',
        value => scalar(@{$self->{peers}}),
    );
  } elsif ($self->mode =~ /peer::watch/) {
    # take a snapshot of the peer list. -> good baseline
    # warning if there appear peers, mitigate to ok
    # critical if warn/crit percent disappear
    $self->{numOfPeers} = scalar (@{$self->{peers}});
    $self->{peerNameList} = [map { $_->{jnxBgpM2PeerRemoteAddr} } @{$self->{peers}}];
    $self->opts->override_opt('lookback', 3600) if ! $self->opts->lookback;
    if ($self->opts->reset) {
      my $statefile = $self->create_statefile(name => 'bgppeerlist', lastarray => 1);
      unlink $statefile if -f $statefile;
    }
    $self->valdiff({name => 'bgppeerlist', lastarray => 1},
        qw(peerNameList numOfPeers));
    my $problem = 0;
    if ($self->opts->warning || $self->opts->critical) {
      $self->set_thresholds(warning => $self->opts->warning,
          critical => $self->opts->critical);
      my $before = $self->{numOfPeers} - scalar(@{$self->{delta_found_peerNameList}}) + scalar(@{$self->{delta_lost_peerNameList}});
      # use own delta_numOfPeers, because the glplugin version treats
      # negative deltas as overflows
      $self->{delta_numOfPeers} = $self->{numOfPeers} - $before;
      if ($self->opts->units && $self->opts->units eq "%") {
        my $delta_pct = $before ? (($self->{delta_numOfPeers} / $before) * 100) : 0;
        $self->add_message($self->check_thresholds($delta_pct),
          sprintf "%.2f%% delta, before: %d, now: %d", $delta_pct, $before, $self->{numOfPeers});
        $problem = $self->check_thresholds($delta_pct);
      } else {
        $self->add_message($self->check_thresholds($self->{delta_numOfPeers}),
          sprintf "%d delta, before: %d, now: %d", $self->{delta_numOfPeers}, $before, $self->{numOfPeers});
        $problem = $self->check_thresholds($self->{delta_numOfPeers});
      }
      if (scalar(@{$self->{delta_found_peerNameList}}) > 0) {
        $self->add_ok(sprintf 'found: %s',
            join(", ", @{$self->{delta_found_peerNameList}}));
      }
      if (scalar(@{$self->{delta_lost_peerNameList}}) > 0) {
        $self->add_ok(sprintf 'lost: %s',
            join(", ", @{$self->{delta_lost_peerNameList}}));
      }
    } else {
      if (scalar(@{$self->{delta_found_peerNameList}}) > 0) {
        $self->add_warning(sprintf '%d new bgp peers (%s)',
            scalar(@{$self->{delta_found_peerNameList}}),
            join(", ", @{$self->{delta_found_peerNameList}}));
        $problem = 1;
      }
      if (scalar(@{$self->{delta_lost_peerNameList}}) > 0) {
        $self->add_critical(sprintf '%d bgp peers missing (%s)',
            scalar(@{$self->{delta_lost_peerNameList}}),
            join(", ", @{$self->{delta_lost_peerNameList}}));
        $problem = 2;
      }
      $self->add_ok(sprintf 'found %d bgp peers', scalar (@{$self->{peers}}));
    }
    if ($problem) { # relevant only for lookback=9999 and support contract customers
      $self->valdiff({name => 'bgppeerlist', lastarray => 1, freeze => 1},
          qw(peerNameList numOfPeers));
    } else {
      $self->valdiff({name => 'bgppeerlist', lastarray => 1, freeze => 2},
          qw(peerNameList numOfPeers));
    }
    $self->add_perfdata(
        label => 'num_peers',
        value => scalar (@{$self->{peers}}),
    );
  } else {
    if (scalar(@{$self->{peers}}) == 0) {
      $self->add_unknown('no peers');
      return;
    }
    # es gibt
    # kleine installation: 1 peer zu 1 as, evt 2. as als fallback
    # grosse installation: n peer zu 1 as, alternative routen zum provider
    #                      n peer zu m as, mehrere provider, mehrere alternativrouten
    # 1 ausfall on 4 peers zu as ist egal
    my $as_numbers = {};
    foreach (@{$self->{peers}}) {
      $_->check();
      if (! exists $as_numbers->{$_->{jnxBgpM2PeerRemoteAs}}->{peers}) {
        $as_numbers->{$_->{jnxBgpM2PeerRemoteAs}}->{peers} = [];
        $as_numbers->{$_->{jnxBgpM2PeerRemoteAs}}->{availability} = 100;
      }
      push(@{$as_numbers->{$_->{jnxBgpM2PeerRemoteAs}}->{peers}}, $_);
    }
    if ($self->opts->name2) {
      $self->clear_ok();
      $self->clear_critical();
      if ($self->opts->name2 eq "_ALL_") {
        $self->opts->override_opt("name2", join(",", keys %{$as_numbers}));
      }
      foreach my $as (split(",", $self->opts->name2)) {
        my $asname = "";
        if ($as =~ /(\d+)=(\w+)/) {
          $as = $1;
          $asname = $2;
        }
        if (exists $as_numbers->{$as}) {
          my $num_peers = scalar(@{$as_numbers->{$as}->{peers}});
          my $num_ok_peers = scalar(grep { $_->{jnxBgpM2PeerStatus} == 0 } @{$as_numbers->{$as}->{peers}});
          my $num_admdown_peers = scalar(grep { $_->{jnxBgpM2PeerStatus} == 1 } @{$as_numbers->{$as}->{peers}});
          $as_numbers->{$as}->{availability} = 100 * $num_ok_peers / $num_peers;
          $self->set_thresholds(warning => "100:", critical => "50:");
          $self->add_message($self->check_thresholds($as_numbers->{$as}->{availability}),
              sprintf "%d from %d connections to %s are up (%.2f%%%s)",
              $num_ok_peers, $num_peers, $asname ? $asname : "AS".$as,
              $as_numbers->{$as}->{availability},
              $num_admdown_peers ? sprintf(", but %d are admin down and counted as up!", $num_admdown_peers) : "");
        } else {
          $self->add_critical(sprintf 'found no peer for %s', $asname ? $asname : "AS".$as);
        }
      }
    }
    if ($self->opts->report eq "short") {
      $self->clear_ok();
      $self->add_ok('no problems') if ! $self->check_messages();
    }
  }
}

package Classes::Juniper::JunOS::Component::BgpSubsystem::Peer;
our @ISA = qw(Classes::Juniper::JunOS::Component::BgpSubsystem);
use strict;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };

sub new {
  my ($class, %params) = @_;
  my $self = {};
  foreach(keys %params) {
    $self->{$_} = $params{$_};
  }
  bless $self, $class;
  $self->{jnxBgpM2PeerRemoteAsName} = "";
  $self->{jnxBgpM2PeerRemoteAsImportant} = 0; # if named in --name2
  $self->{jnxBgpM2PeerStatus} = 0;
  my @parts = gmtime($self->{jnxBgpM2PeerFsmEstablishedTime});
  $self->{jnxBgpM2PeerFsmEstablishedTime} = sprintf ("%dd, %dh, %dm, %ds",@parts[7,2,1,0]);

  return $self;
}

sub check {
  my ($self) = @_;
  if ($self->opts->name2) {
    foreach my $as (split(",", $self->opts->name2)) {
      if ($as =~ /(\d+)=(\w+)/) {
        $as = $1;
        $self->{jnxBgpM2PeerRemoteAsName} = ", ".$2;
      } else {
        $self->{jnxBgpM2PeerRemoteAsName} = "";
      }
      if ($as eq "_ALL_" || $as == $self->{jnxBgpM2PeerRemoteAs}) {
        $self->{jnxBgpM2PeerRemoteAsImportant} = 1;
      }
    }
  } else {
    $self->{jnxBgpM2PeerRemoteAsImportant} = 1;
  }
  if ($self->{jnxBgpM2PeerState} eq "established") {
    $self->add_ok(sprintf "peer %s (AS%s) state is %s since %s",
        $self->{jnxBgpM2PeerRemoteAddr},
        $self->{jnxBgpM2PeerRemoteAs}.$self->{jnxBgpM2PeerRemoteAsName},
        $self->{jnxBgpM2PeerState},
        $self->{jnxBgpM2PeerFsmEstablishedTime}
    );
  } elsif ($self->{jnxBgpM2PeerStatus} eq "halted") {
    # admin down is by default critical, but can be mitigated
    $self->add_message(
        defined $self->opts->mitigation() ? $self->opts->mitigation() :
            $self->{jnxBgpM2PeerRemoteAsImportant} ? WARNING : OK,
        sprintf "peer %s (AS%s) state is %s (is admin down)",
        $self->{jnxBgpM2PeerRemoteAddr},
        $self->{jnxBgpM2PeerRemoteAs}.$self->{jnxBgpM2PeerRemoteAsName},
        $self->{jnxBgpM2PeerState}
    );
    $self->{jnxBgpM2PeerStatus} =
        defined $self->opts->mitigation() && $self->opts->mitigation() eq "ok" ? 0 :
        $self->{jnxBgpM2PeerRemoteAsImportant} ? 1 : 0;
  } else {
    # bgpPeerLastError may be undef, at least under the following circumstances
    # jnxBgpM2PeerRemoteAsName is "", bgpPeerAdminStatus is "start",
    # jnxBgpM2PeerState is "active"
    $self->add_message($self->{jnxBgpM2PeerRemoteAsImportant} ? CRITICAL : OK,
        sprintf "peer %s (AS%s) state is %s (last error received: %s, last error sent: %s)",
        $self->{jnxBgpM2PeerRemoteAddr},
        $self->{jnxBgpM2PeerRemoteAs}.$self->{jnxBgpM2PeerRemoteAsName},
        $self->{jnxBgpM2PeerState},
        $self->{jnxBgpM2PeerLastErrorReceivedText}||"no error",
        $self->{jnxBgpM2PeerLastErrorSentText}||"no error"
    );
    $self->{jnxBgpM2PeerStatus} = $self->{jnxBgpM2PeerRemoteAsImportant} ? 1 : 0;
  }
}


package Classes::Juniper::JunOS;
our @ISA = qw(Classes::Juniper);
use strict;

use constant trees => (
  '1.3.6.1.2.1',        # mib-2
  '1.3.6.1.2.1.105',
);

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::bgp/) {
    $self->analyze_and_check_bgp_subsystem("Classes::Juniper::JunOS::Component::BgpSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::Juniper::NetScreen::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('NETSCREEN-RESOURCE-MIB', (qw(
      nsResCpuAvg)));
}

sub check {
  my ($self) = @_;
  $self->add_info('checking cpus');
  $self->add_info(sprintf 'cpu usage is %.2f%%', $self->{nsResCpuAvg});
  $self->set_thresholds(warning => 50, critical => 90);
  $self->add_message($self->check_thresholds($self->{nsResCpuAvg}));
  $self->add_perfdata(
      label => 'cpu_usage',
      value => $self->{nsResCpuAvg},
      uom => '%',
  );
}
package Classes::Juniper::NetScreen::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('NETSCREEN-RESOURCE-MIB', (qw(
      nsResMemAllocate nsResMemLeft nsResMemFrag)));
  my $mem_total = $self->{nsResMemAllocate} + $self->{nsResMemLeft};
  $self->{mem_usage} = $self->{nsResMemAllocate} / $mem_total * 100;
}

sub check {
  my ($self) = @_;
  $self->add_info('checking memory');
  if (defined $self->{mem_usage}) {
    $self->add_info(sprintf 'memory usage is %.2f%%', $self->{mem_usage});
    $self->set_thresholds(warning => 80,
        critical => 90);
    $self->add_message($self->check_thresholds($self->{mem_usage}));
    $self->add_perfdata(
        label => 'memory_usage',
        value => $self->{mem_usage},
        uom => '%',
    );
  } else {
    $self->add_unknown('cannot aquire memory usage');
  }
}

package Classes::Juniper::NetScreen::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects("NETSCREEN-CHASSIS-MIB", (qw(
      sysBatteryStatus)));
  $self->get_snmp_tables("NETSCREEN-CHASSIS-MIB", [
      ['fans', 'nsFanTable', 'Classes::Juniper::NetScreen::Component::EnvironmentalSubsystem::Fan'],
      ['power', 'nsPowerTable', 'Classes::Juniper::NetScreen::Component::EnvironmentalSubsystem::Power'],
      ['slots', 'nsSlotTable', 'Classes::Juniper::NetScreen::Component::EnvironmentalSubsystem::Slot'],
      ['temperatures', 'nsTemperatureTable', 'Classes::Juniper::NetScreen::Component::EnvironmentalSubsystem::Temperature'],
  ]);
}

sub check {
  my ($self) = @_;
  foreach (@{$self->{fans}}, @{$self->{power}}, @{$self->{slots}}, @{$self->{temperatures}}) {
    $_->check();
  }
}


package Classes::Juniper::NetScreen::Component::EnvironmentalSubsystem::Fan;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf "fan %s (%s) is %s",
      $self->{nsFanId}, $self->{nsFanDesc}, $self->{nsFanStatus});
  if ($self->{nsFanStatus} eq "notInstalled") {
  } elsif ($self->{nsFanStatus} eq "good") {
    $self->add_ok();
  } elsif ($self->{nsFanStatus} eq "fail") {
    $self->add_warning();
  }
}


package Classes::Juniper::NetScreen::Component::EnvironmentalSubsystem::Power;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  if ($self->{nsPowerDesc}) {
    $self->add_info(sprintf "power supply %s (%s) is %s",
      $self->{nsPowerId}, $self->{nsPowerDesc}, $self->{nsPowerStatus});
  } else {
    $self->add_info(sprintf "power supply %s is %s",
      $self->{nsPowerId}, $self->{nsPowerStatus});
  }
  if ($self->{nsPowerStatus} eq "good") {
    $self->add_ok();
  } elsif ($self->{nsPowerStatus} eq "fail") {
    $self->add_warning();
  }
}


package Classes::Juniper::NetScreen::Component::EnvironmentalSubsystem::Slot;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{nsSlotSN} =~ s/^\s+//g;
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf "%s slot %s (%s) is %s",
      $self->{nsSlotType}, $self->{nsSlotId}, $self->{nsSlotSN}, $self->{nsSlotStatus});
  if ($self->{nsSlotStatus} eq "good") {
    $self->add_ok();
  } elsif ($self->{nsSlotStatus} eq "fail") {
    $self->add_warning();
  }
}


package Classes::Juniper::NetScreen::Component::EnvironmentalSubsystem::Temperature;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf "temperature %s (%s) is %sC",
      $self->{nsTemperatureId}, $self->{nsTemperatureDesc}, $self->{nsTemperatureCur});
  $self->add_ok();
  $self->add_perfdata(
      label => 'temp_'.$self->{nsTemperatureId},
      value => $self->{nsTemperatureCur},
  );
}

package Classes::Juniper::NetScreen::Component::VsdSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('NETSCREEN-NSRP-MIB', [
    ['members', 'nsrpVsdMemberTable', 'Classes::Juniper::NetScreen::Component::VsdSubsystem::Member'],
    ['clusters', 'nsrpClusterTable', 'Classes::Juniper::NetScreen::Component::VsdSubsystem::Cluster'],
  ]);
}


package Classes::Juniper::NetScreen::Component::VsdSubsystem::Member;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  my $label = $self->{nsrpVsdMemberGroupId}.'_'.$self->{nsrpVsdMemberUnitId};
  $self->add_info(sprintf 'vsd member %s has status %s',
      $label, $self->{nsrpVsdMemberStatus});
  if ($self->{nsrpVsdMemberStatus} =~ /(undefined|init|ineligible|inoperable)/) {
    $self->add_critical();
  } else {
    $self->add_ok();
  }
}

package Classes::Juniper::NetScreen::Component::VsdSubsystem::Cluster;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;


package Classes::Juniper::NetScreen;
our @ISA = qw(Classes::Juniper);
use strict;

use constant trees => (
  '1.3.6.1.2.1',        # mib-2
  '1.3.6.1.2.1.105',
);

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::Juniper::NetScreen::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::Juniper::NetScreen::Component::MemSubsystem");
  } elsif ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::Juniper::NetScreen::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::ha::status/) {
    $self->analyze_and_check_environmental_subsystem("Classes::Juniper::NetScreen::Component::VsdSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::Juniper::IVE::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('JUNIPER-IVE-MIB', (qw(
      iveMemoryUtil iveSwapUtil)));
}

sub check {
  my ($self) = @_;
  $self->add_info('checking memory');
  $self->add_info(sprintf 'memory usage is %.2f%%, swap usage is %.2f%%',
      $self->{iveMemoryUtil}, $self->{iveSwapUtil});
  $self->set_thresholds(warning => 90, critical => 95);
  $self->add_message($self->check_thresholds($self->{iveMemoryUtil}),
      sprintf 'memory usage is %.2f%%', $self->{iveMemoryUtil});
  $self->add_perfdata(
      label => 'memory_usage',
      value => $self->{iveMemoryUtil},
      uom => '%',
  );
  $self->set_thresholds(warning => 5, critical => 10);
  $self->add_message($self->check_thresholds($self->{iveSwapUtil}),
      sprintf 'swap usage is %.2f%%', $self->{iveSwapUtil});
  $self->add_perfdata(
      label => 'swap_usage',
      value => $self->{iveSwapUtil},
      uom => '%',
  );
}

package Classes::Juniper::IVE::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('JUNIPER-IVE-MIB', (qw(
      iveCpuUtil)));
}

sub check {
  my ($self) = @_;
  $self->add_info('checking cpus');
  $self->add_info(sprintf 'cpu usage is %.2f%%', $self->{iveCpuUtil});
  # http://www.juniper.net/techpubs/software/ive/guides/howtos/SA-IC-MAG-SNMP-Monitoring-Guide.pdf
  $self->set_thresholds(warning => 50, critical => 90);
  $self->add_message($self->check_thresholds($self->{iveCpuUtil}));
  $self->add_perfdata(
      label => 'cpu_usage',
      value => $self->{iveCpuUtil},
      uom => '%',
  );
}

package Classes::Juniper::IVE::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->{disk_subsystem} =
      Classes::Juniper::IVE::Component::DiskSubsystem->new();
  $self->get_snmp_objects('JUNIPER-IVE-MIB', (qw(
      iveTemperature fanDescription psDescription raidDescription)));
}

sub check {
  my ($self) = @_;
  $self->{disk_subsystem}->check();
  $self->add_info(sprintf "temperature is %.2f deg", $self->{iveTemperature});
  $self->set_thresholds(warning => 70, critical => 75);
  $self->check_thresholds(0);
  $self->add_perfdata(
      label => 'temperature',
      value => $self->{iveTemperature},
      warning => $self->{warning},
      critical => $self->{critical},
  ) if $self->{iveTemperature};
  if ($self->{fanDescription} && $self->{fanDescription} =~ /(failed)|(threshold)/) {
    $self->add_critical($self->{fanDescription});
  }
  if ($self->{psDescription} && $self->{psDescription} =~ /failed/) {
    $self->add_critical($self->{psDescription});
  }
  if ($self->{raidDescription} && $self->{raidDescription} =~ /(failed)|(unknown)/) {
    $self->add_critical($self->{raidDescription});
  }
  if (! $self->check_messages()) {
    $self->add_ok("environmental hardware working fine");
  }
}

sub dump {
  my ($self) = @_;
  $self->{disk_subsystem}->dump();
}

package Classes::Juniper::IVE::Component::DiskSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('JUNIPER-IVE-MIB', (qw(
      diskFullPercent)));
}

sub check {
  my ($self) = @_;
  $self->add_info('checking disks');
  $self->add_info(sprintf 'disk is %.2f%% full',
      $self->{diskFullPercent});
  $self->set_thresholds(warning => 80, critical => 90);
  $self->add_message($self->check_thresholds($self->{diskFullPercent}));
  $self->add_perfdata(
      label => 'disk_usage',
      value => $self->{diskFullPercent},
      uom => '%',
  );
}

package Classes::Juniper::IVE::Component::UserSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('JUNIPER-IVE-MIB', (qw(
      iveSSLConnections iveVPNTunnels 
      signedInWebUsers signedInMailUsers meetingUserCount
      iveConcurrentUsers clusterConcurrentUsers)));
  foreach (qw(
      iveSSLConnections iveVPNTunnels 
      signedInWebUsers signedInMailUsers meetingUserCount
      iveConcurrentUsers clusterConcurrentUsers)) {
    $self->{$_} = 0 if ! defined $self->{$_};
  }
}

sub check {
  my ($self) = @_;
  $self->add_info('checking memory');
  $self->add_info(sprintf 'Users: sslconns=%d cluster=%d, node=%d, web=%d, mail=%d, meeting=%d',
      $self->{iveSSLConnections},
      $self->{clusterConcurrentUsers},
      $self->{iveConcurrentUsers},
      $self->{signedInWebUsers},
      $self->{signedInMailUsers},
      $self->{meetingUserCount});
  $self->add_ok();
  $self->add_perfdata(
      label => 'sslconns',
      value => $self->{iveSSLConnections},
  );
  $self->add_perfdata(
      label => 'web_users',
      value => $self->{signedInWebUsers},
  );
  $self->add_perfdata(
      label => 'mail_users',
      value => $self->{signedInMailUsers},
  );
  $self->add_perfdata(
      label => 'meeting_users',
      value => $self->{meetingUserCount},
  );
  $self->add_perfdata(
      label => 'concurrent_users',
      value => $self->{iveConcurrentUsers},
  );
  $self->add_perfdata(
      label => 'cluster_concurrent_users',
      value => $self->{clusterConcurrentUsers},
  );
}
package Classes::Juniper::IVE;
our @ISA = qw(Classes::Juniper);
use strict;

use constant trees => (
  '1.3.6.1.2.1',        # mib-2
  '1.3.6.1.2.1.105',
);

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::Juniper::IVE::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::Juniper::IVE::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::Juniper::IVE::Component::MemSubsystem");
  } elsif ($self->mode =~ /device::users/) {
    $self->analyze_and_check_user_subsystem("Classes::Juniper::IVE::Component::UserSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::Juniper::SRX::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('JUNIPER-MIB', [
    ['leds', 'jnxLEDTable', 'Classes::Juniper::SRX::Component::EnvironmentalSubsystem::Led'],
    ['operatins', 'jnxOperatingTable', 'Classes::Juniper::SRX::Component::EnvironmentalSubsystem::Operating'],
    ['containers', 'jnxContainersTable', 'Classes::Juniper::SRX::Component::EnvironmentalSubsystem::Container'],
    ['fru', 'jnxFruTable', 'Classes::Juniper::SRX::Component::EnvironmentalSubsystem::Fru'],
    ['redun', 'jnxRedundancyTable', 'Classes::Juniper::SRX::Component::EnvironmentalSubsystem::Redundancy'],
    ['contents', 'jnxContentsTable', 'Classes::Juniper::SRX::Component::EnvironmentalSubsystem::Content'],
    ['filled', 'jnxFilledTable', 'Classes::Juniper::SRX::Component::EnvironmentalSubsystem::Fille'],
  ]);
  $self->get_snmp_tables('JUNIPER-RPS-MIB', [
    ['versions', 'jnxRPSVersionTable', 'GLPlugin::SNMP::TableItem'],
    ['status', 'jnxRPSStatusTable', 'GLPlugin::SNMP::TableItem'],
    ['powersupplies', 'jnxRPSPowerSupplyTable', 'GLPlugin::SNMP::TableItem'],
    ['leds', 'jnxRPSLedPortStatusTable', 'GLPlugin::SNMP::TableItem'],
    ['ports', 'jnxRPSPortStatusTable', 'GLPlugin::SNMP::TableItem'],
  ]);
  $self->merge_tables("operatins", "filled", "fru", "contents");
  $self->get_snmp_objects('JUNIPER-ALARM-MIB', (qw(jnxYellowAlarmState
      jnxYellowAlarmCount jnxYellowAlarmLastChange jnxRedAlarmState
      jnxRedAlarmCount jnxRedAlarmLastChange)));
}

package Classes::Juniper::SRX::Component::EnvironmentalSubsystem::Led;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'led %s is %s', $self->{jnxLEDDescr},
      $self->{jnxLEDState});
  if ($self->{jnxLEDState} eq 'yellow') {
    $self->add_warning();
  } elsif ($self->{jnxLEDState} eq 'red') {
    $self->add_critical();
  } elsif ($self->{jnxLEDState} eq 'amber') {
    $self->add_critical();
  } elsif ($self->{jnxLEDState} eq 'green') {
    $self->add_ok();
  } elsif ($self->{jnxLEDState} eq 'blue') {
    $self->add_ok();
  }
}

package Classes::Juniper::SRX::Component::EnvironmentalSubsystem::Container;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);

package Classes::Juniper::SRX::Component::EnvironmentalSubsystem::Fru;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);

package Classes::Juniper::SRX::Component::EnvironmentalSubsystem::Redundancy;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);

package Classes::Juniper::SRX::Component::EnvironmentalSubsystem::Content;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);

package Classes::Juniper::SRX::Component::EnvironmentalSubsystem::Fille;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);



package Classes::Juniper::SRX::Component::EnvironmentalSubsystem::Operating;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);

sub finish {
  my ($self) = @_;
  if ($self->{jnxOperatingDescr} =~ /Routing Engine$/) {
    bless $self, "Classes::Juniper::SRX::Component::EnvironmentalSubsystem::Engine";
  }
  $self->{jnxOperatingRestartTimeHuman} =
      scalar localtime($self->{jnxOperatingRestartTime});
}

package Classes::Juniper::SRX::Component::EnvironmentalSubsystem::Engine;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);

sub check {
  my ($self) = @_;
  $self->add_info(sprintf '%s temperature is %.2f',
      $self->{jnxOperatingDescr}, $self->{jnxOperatingTemp});
  my $label = 'temp_'.$self->{jnxOperatingDescr};
  $self->set_thresholds(metric => $label, warning => 89, critical => 91);
  $self->add_message($self->check_thresholds(metric => $label, 
      value => $self->{jnxOperatingTemp}));
  $self->add_perfdata(
      label => $label,
      value => $self->{jnxOperatingTemp},
  );
}

package Classes::Juniper::SRX::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('JUNIPER-MIB', [
    ['operatins', 'jnxOperatingTable', 'Classes::Juniper::SRX::Component::CpuSubsystem::OperatingItem', sub { shift->{jnxOperatingDescr} =~ /engine/i; }],
  ]);
  $self->get_snmp_tables('JUNIPER-SRX5000-SPU-MONITORING-MIB', [
    ['monobjects', 'jnxJsSPUMonitoringObjectsTable', 'Classes::Juniper::SRX::Component::CpuSubsystem::OperatingItem2'],
  ]);
}

package Classes::Juniper::SRX::Component::CpuSubsystem::OperatingItem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);

sub finish  {
  my ($self) = @_;
  $self->{jnxOperatingRestartTimeHuman} =
      scalar localtime($self->{jnxOperatingRestartTime});
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf '%s cpu usage is %.2f%%',
      $self->{jnxOperatingDescr}, $self->{jnxOperatingCPU});
  my $label = 'cpu_'.$self->{jnxOperatingDescr}.'_usage';
  $self->set_thresholds(metric => $label, warning => 85, critical => 95);
  $self->add_message($self->check_thresholds(metric => $label, 
      value => $self->{jnxOperatingCPU}));
  $self->add_perfdata(
      label => $label,
      value => $self->{jnxOperatingCPU},
      uom => '%',
  );
}

package Classes::Juniper::SRX::Component::CpuSubsystem::OperatingItem2;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'packet forwarding %s cpu usage is %.2f%%',
      $self->{jnxJsSPUMonitoringNodeDescr}, $self->{jnxJsSPUMonitoringCPUUsage});
  my $label = 'pf_cpu_'.$self->{jnxJsSPUMonitoringNodeDescr}.'_usage';
  $self->set_thresholds(metric => $label, warning => 80, critical => 95);
  $self->add_message($self->check_thresholds(metric => $label, 
      value => $self->{jnxJsSPUMonitoringCPUUsage}));
  $self->add_perfdata(
      label => $label,
      value => $self->{jnxJsSPUMonitoringCPUUsage},
      uom => '%',
  );
}

package Classes::Juniper::SRX::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('JUNIPER-MIB', qw(jnxBoxKernelMemoryUsedPercent));
  $self->get_snmp_tables('JUNIPER-MIB', [
    ['operatins', 'jnxOperatingTable', 'Classes::Juniper::SRX::Component::MemSubsystem::OperatingItem', sub { shift->{jnxOperatingDescr} =~ /engine/i; }],
  ]);
  $self->get_snmp_tables('JUNIPER-SRX5000-SPU-MONITORING-MIB', [
    ['objects', 'jnxJsSPUMonitoringObjectsTable', 'Classes::Juniper::SRX::Component::MemSubsystem::OperatingItem2'],
  ]);
}

sub check {
  my ($self) = @_;
  $self->SUPER::check();
  if (exists $self->{jnxBoxKernelMemoryUsedPercent}) {
    $self->add_info(sprintf 'kernel memory usage is %.2f%%',
        $self->{jnxBoxKernelMemoryUsedPercent});
    $self->set_thresholds(metric => 'kernel_memory_usage',
        warning => 90, critical => 95);
    $self->add_message($self->check_thresholds(metric => 'kernel_memory_usage', 
        value => $self->{jnxBoxKernelMemoryUsedPercent}));
    $self->add_perfdata(
        label => 'kernel_memory_usage',
        value => $self->{jnxBoxKernelMemoryUsedPercent},
        uom => '%',
    );
  }
}


package Classes::Juniper::SRX::Component::MemSubsystem::OperatingItem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);

sub finish  {
  my ($self) = @_;
  $self->{jnxOperatingRestartTimeHuman} =
      scalar localtime($self->{jnxOperatingRestartTime});
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'routing engine %s buffer usage is %.2f%%',
      $self->{jnxOperatingDescr}, $self->{jnxOperatingBuffer});
  my $label = 'buffer_'.$self->{jnxOperatingDescr}.'_usage';
  $self->set_thresholds(metric => $label, warning => 80, critical => 95);
  $self->add_message($self->check_thresholds(metric => $label, 
      value => $self->{jnxOperatingBuffer}));
  $self->add_perfdata(
      label => $label,
      value => $self->{jnxOperatingBuffer},
      uom => '%',
  );
}

package Classes::Juniper::SRX::Component::MemSubsystem::OperatingItem2;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'packet forwarding %s memory usage is %.2f%%',
      $self->{jnxJsSPUMonitoringNodeDescr}, $self->{jnxJsSPUMonitoringMemoryUsage});
  my $label = 'pf_mem_'.$self->{jnxJsSPUMonitoringNodeDescr}.'_usage';
  $self->set_thresholds(metric => $label, warning => 80, critical => 95);
  $self->add_message($self->check_thresholds(metric => $label,
      value => $self->{jnxJsSPUMonitoringMemoryUsage}));
  $self->add_perfdata(
      label => $label,
      value => $self->{jnxJsSPUMonitoringMemoryUsage},
      uom => '%',
  );
}
package Classes::Juniper::SRX;
our @ISA = qw(Classes::Juniper);
use strict;


sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::Juniper::SRX::Component::EnvironmentalSubsystem");
    $self->{components}->{hostresource_subsystem} =
        Classes::HOSTRESOURCESMIB::Component::EnvironmentalSubsystem->new();
    foreach (@{$self->{components}->{hostresource_subsystem}->{disk_subsystem}->{storages}}) {
      if (exists $_->{device} && $_->{device} =~ /^\/dev\/md/) {
        $_->blacklist();
      }
    }
    $self->{components}->{hostresource_subsystem}->check();
    $self->{components}->{hostresource_subsystem}->dump()
        if $self->opts->verbose >= 2;
    $self->clear_ok();
    if (! $self->check_messages()) {
      $self->add_ok("environmental hardware working fine");
    }
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::Juniper::SRX::Component::CpuSubsystem");
    #$self->analyze_and_check_cpu_subsystem("Classes::HOSTRESOURCESMIB::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::Juniper::SRX::Component::MemSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::Juniper;
our @ISA = qw(Classes::Device);
use strict;

use constant trees => (
    '1.3.6.1.4.1.4874.',
    '1.3.6.1.4.1.3224.',
);

sub init {
  my ($self) = @_;
  if ($self->{productname} =~ /NetScreen/i) {
    bless $self, 'Classes::Juniper::NetScreen';
    $self->debug('using Classes::Juniper::NetScreen');
  } elsif ($self->{productname} =~ /JunOS/i) {
    bless $self, 'Classes::Juniper::JunOS';
    $self->debug('using Classes::Juniper::JunOS');
  } elsif ($self->{productname} =~ /Juniper.*MAG\-\d+/i) {
    # Juniper Networks,Inc,MAG-4610,7.2R10
    bless $self, 'Classes::Juniper::IVE';
    $self->debug('using Classes::Juniper::IVE');
  }
  if (ref($self) ne "Classes::Juniper") {
    $self->init();
  }
}

package Classes::AlliedTelesyn;
our @ISA = qw(Classes::Device);
use strict;

sub init {
  my ($self) = @_;
  $self->no_such_mode();
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::AlliedTelesyn::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::AlliedTelesyn::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::AlliedTelesyn::Component::MemSubsystem");
  } elsif ($self->mode =~ /device::hsrp/) {
    $self->analyze_and_check_hsrp_subsystem("Classes::HSRP::Component::HSRPSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::Fortigate::Component::HaSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('FORTINET-CORE-MIB', (qw(
      fnSysSerial
  )));
  $self->get_snmp_objects('FORTINET-FORTIGATE-MIB', (qw(
      fgHaStatsSyncStatus fgHaSystemMode fgHaOverride fgHaAutoSync
      fgHaGroupName fgFcSwSerial fgFcSwName
  )));
  $self->get_snmp_tables('FORTINET-FORTIGATE-MIB', [
      ['fgHaStatsTable', 'fgHaStatsTable', 'Classes::Fortigate::Component::HaSubsystem::SyncStatus'],
      ['fgVdTable', 'fgVdTable', 'Monitoring::GLPlugin::SNMP::TableItem'],
  ]);
  if (! $self->opts->role()) {
    $self->opts->override_opt('role', 'master');
    # fgHaSystemMode: activePassive, activeActive or standalone
    # https://docs.fortinet.com/document/fortigate/6.0.6/handbook/943352/fgcp-ha-glossary
    # Primary unit
    # Also called the primary cluster unit, this cluster unit controls how the cluster operates.
    # The FortiGate firmware uses the term master to refer to the primary unit.
    # Standby State
    # A subordinate unit in an active-passive HA cluster operates in the standby state
    # Subordinate unit
    # Also called the subordinate cluster unit, each cluster contains one or more cluster units that are not functioning as the primary unit.
    # The FortiGate firmware uses the terms slave and subsidiary unit to refer to a subordinate unit.
  }
  foreach (@{$self->{fgHaStatsTable}}) {
    $_->{fnSysSerial} = $self->{fnSysSerial};
    $_->{fgHaSystemMode} = $self->{fgHaSystemMode};
  }
}

# Specify threshold values, so that you understand when the number of units
# decreases, for example we have only 2 units in stack, so we should get
# warning state if one of unit goes down:
# ./check_nwc_health --hostname 10.10.10.2 --mode ha-status --warning 2:
# OK - stack have 2 units | 'units'=2;2:;0:;;
# and when only one unit left:
# WARNING - stack have 1 units | 'units'=1;2:;0:;;

sub check {
  my ($self) = @_;
  if ($self->{fgHaSystemMode} eq "standalone") {
    $self->add_warning_mitigation("this is a standalone system");
  } else {
    foreach (@{$self->{fgHaStatsTable}}) {
      $_->check();
    }
    $self->add_info(sprintf "cluster has %d nodes", scalar(@{$self->{fgHaStatsTable}}));
    $self->add_ok();
  }
}


package Classes::Fortigate::Component::HaSubsystem::SyncStatus;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  if ($self->{fgHaStatsSerial} eq $self->{fnSysSerial}) {
    if ($self->mode eq "device::ha::role") {
      $self->{myrole} = $self->{fgHaSystemMode} eq "standalone" ? "master" :
          $self->{fgHaStatsMasterSerial} eq $self->{fnSysSerial} ? "master" : "slave";
      $self->add_info(sprintf "this is a %s node in a %s setup", $self->{myrole}, $self->{fgHaSystemMode});
      if ($self->opts->role ne "master" and $self->opts->role ne "slave") {
        $self->add_unknown('role must be master or slave');
      } elsif ($self->opts->role eq $self->{myrole}) {
        $self->add_ok();
      } else {
        $self->add_critical();
      }
    } elsif ($self->mode eq "device::ha::status") {
      $self->add_info(sprintf "ha sync status is %s", $self->{fgHaStatsSyncStatus});
      if ($self->{fgHaStatsSyncStatus} eq "synchronized") {
        $self->add_ok();
      } else {
        $self->add_critical();
      }
    }
  } else {
    # this row is not relevant for the local node
  }
}

package Classes::Fortigate::Component::DiskSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('FORTINET-FORTIGATE-MIB', (qw(
      fgSysDiskUsage fgSysDiskCapacity)));
  $self->{usage} = $self->{fgSysDiskCapacity} ? 
      100 * $self->{fgSysDiskUsage} /  $self->{fgSysDiskCapacity} : undef;
}

sub check {
  my ($self) = @_;
  $self->add_info('checking disks');
  if (! defined $self->{usage}) {
    $self->add_info(sprintf 'system has no disk');
    return;
  }
  $self->add_info(sprintf 'disk is %.2f%% full',
      $self->{usage});
  $self->set_thresholds(warning => 80, critical => 90);
  $self->add_message($self->check_thresholds($self->{usage}));
  $self->add_perfdata(
      label => 'disk_usage',
      value => $self->{usage},
      uom => '%',
  );
}

package Classes::Fortigate::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('FORTINET-FORTIGATE-MIB', (qw(
      fgSysMemUsage)));
}

sub check {
  my ($self) = @_;
  $self->add_info('checking memory');
  if (defined $self->{fgSysMemUsage}) {
    $self->add_info(sprintf 'memory usage is %.2f%%',
        $self->{fgSysMemUsage});
    $self->set_thresholds(warning => 80, critical => 90);
    $self->add_message($self->check_thresholds($self->{fgSysMemUsage}));
    $self->add_perfdata(
        label => 'memory_usage',
        value => $self->{fgSysMemUsage},
        uom => '%',
    );
  } else {
    $self->add_unknown('cannot aquire memory usage');
  }
}

package Classes::Fortigate::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self, %params) = @_;
  my $type = 0;
  $self->get_snmp_objects('FORTINET-FORTIGATE-MIB', (qw(
      fgSysCpuUsage)));
}

sub check {
  my ($self) = @_;
  my $errorfound = 0;
  $self->add_info('checking cpus');
  $self->add_info(sprintf 'cpu usage is %.2f%%', $self->{fgSysCpuUsage});
  $self->set_thresholds(warning => 80, critical => 90);
  $self->add_message($self->check_thresholds($self->{fgSysCpuUsage}));
  $self->add_perfdata(
      label => 'cpu_usage',
      value => $self->{fgSysCpuUsage},
      uom => '%',
  );
}

package Classes::Fortigate::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->{sensor_subsystem} =
      Classes::Fortigate::Component::SensorSubsystem->new();
  $self->{disk_subsystem} =
      Classes::Fortigate::Component::DiskSubsystem->new();
}

sub check {
  my ($self) = @_;
  $self->{sensor_subsystem}->check();
  $self->{disk_subsystem}->check();
  if (! $self->check_messages()) {
    $self->add_ok("environmental hardware working fine");
  }
}

sub dump {
  my ($self) = @_;
  $self->{sensor_subsystem}->dump();
  $self->{disk_subsystem}->dump();
}

package Classes::Fortigate::Component::SensorSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('FORTINET-FORTIGATE-MIB', [
      ['sensors', 'fgHwSensorTable', 'Classes::Fortigate::Component::SensorSubsystem::Sensor'],
  ]);
}

package Classes::Fortigate::Component::SensorSubsystem::Sensor;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{fgHwSensorEntAlarmStatus} ||= "false";
  $self->{fgHwSensorEntValue} = -1 if ! defined $self->{fgHwSensorEntValue};
  if ($self->{fgHwSensorEntValue} == -1) {
    # empty, this case is handled in the default sensor class
  } elsif ($self->{fgHwSensorEntName} =~ /Fan/) {
    bless $self, "Classes::Fortigate::Component::SensorSubsystem::Fan";
  } elsif ($self->{fgHwSensorEntName} =~ /PS.*Status/) {
    bless $self, "Classes::Fortigate::Component::SensorSubsystem::Powersupply";
  } elsif ($self->{fgHwSensorEntName} =~ /(LM75)|(Temp)|(^(TD|TR)\d+)|(DTS\d+)/) {
    # thermal diode/resistor, dingsbums thermal sensor
    bless $self, "Classes::Fortigate::Component::SensorSubsystem::Temperature";
  } elsif ($self->{fgHwSensorEntName} =~ /(VOUT)|(VIN)|(VCC)|(P\d+V\d+)|(_\d+V\d+_)|(DDR)|(VCORE)|(DVDD)/) {
    # VPP_DDR, VTT_DDR sind irgendwelche voltage regulatory devices
    # DVDD irgendein Realtec digital voltage drecksdeil
    bless $self, "Classes::Fortigate::Component::SensorSubsystem::Voltage";
  } else {
$self->{UNKNOWN} = 1;
  }
}

sub check {
  my ($self) = @_;
  if ($self->{fgHwSensorEntValue} == -1) {
    $self->add_info(sprintf '%s is not installed',
        $self->{fgHwSensorEntName});
    return;
  }
  $self->add_info(sprintf 'sensor %s alarm status is %s',
      $self->{fgHwSensorEntName},
      $self->{fgHwSensorEntAlarmStatus});
  if ($self->{fgHwSensorEntAlarmStatus} && $self->{fgHwSensorEntAlarmStatus} eq "true") {
    $self->add_critical();
  }
  if ($self->{fgHwSensorEntValue}) {
    $self->add_perfdata(
        label => sprintf('sensor_%s', $self->{fgHwSensorEntName}),
        value => $self->{fgHwSensorEntValue},
    );
  }
}

package Classes::Fortigate::Component::SensorSubsystem::Fan;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf '%s%s alarm status is %s',
      $self->{fgHwSensorEntName} =~ /Fan/i ? "" : "Fan ",
      $self->{fgHwSensorEntName},
      $self->{fgHwSensorEntAlarmStatus});
  if ($self->{fgHwSensorEntAlarmStatus} eq "true") {
    $self->add_critical();
  }
  if (defined $self->{fgHwSensorEntValue}) {
    $self->add_perfdata(
        label => sprintf('rpm_%s', $self->{fgHwSensorEntName}),
        value => $self->{fgHwSensorEntValue},
    );
  }
}

package Classes::Fortigate::Component::SensorSubsystem::Temperature;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf '%s%s alarm status is %s',
      $self->{fgHwSensorEntName} =~ /Temp/i ? "" : "Temp ",
      $self->{fgHwSensorEntName},
      $self->{fgHwSensorEntAlarmStatus});
  if ($self->{fgHwSensorEntAlarmStatus} eq "true") {
    $self->add_critical();
  }
  if (defined $self->{fgHwSensorEntValue}) {
    $self->add_perfdata(
        label => sprintf('temp_%s', $self->{fgHwSensorEntName}),
        value => $self->{fgHwSensorEntValue},
    );
  }
}

package Classes::Fortigate::Component::SensorSubsystem::Voltage;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf '%s alarm status is %s',
      $self->{fgHwSensorEntName},
      $self->{fgHwSensorEntAlarmStatus});
  if ($self->{fgHwSensorEntAlarmStatus} eq "true") {
    $self->add_critical();
  }
  if (defined $self->{fgHwSensorEntValue}) {
    $self->add_perfdata(
        label => sprintf('volt_%s', $self->{fgHwSensorEntName}),
        value => $self->{fgHwSensorEntValue},
    );
  }
}

package Classes::Fortigate::Component::SensorSubsystem::Powersupply;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf '%s alarm status is %s',
      $self->{fgHwSensorEntName},
      $self->{fgHwSensorEntAlarmStatus});
  if ($self->{fgHwSensorEntAlarmStatus} eq "true") {
    $self->add_critical();
  }
}

package Classes::Fortigate;
our @ISA = qw(Classes::Device);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::Fortigate::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::Fortigate::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::Fortigate::Component::MemSubsystem");
  } elsif ($self->mode =~ /device::ha::/) {
    $self->analyze_and_check_mem_subsystem("Classes::Fortigate::Component::HaSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::FabOS::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  foreach (qw(swMemUsage swMemUsageLimit1 swMemUsageLimit3 swMemPollingInterval
      swMemNoOfRetries swMemAction)) {
    $self->{$_} = $self->valid_response('SW-MIB', $_, 0);
  }
  $self->get_snmp_objects('SW-MIB', (qw(
      swFwFabricWatchLicense)));
}

sub check {
  my ($self) = @_;
  $self->add_info('checking memory');
  if (defined $self->{swMemUsage}) {
    my $maps = (! defined $self->{swMemUsageLimit1} || $self->{swMemUsageLimit1} == 0) &&
        (! defined $self->{swMemUsageLimit3} || $self->{swMemUsageLimit3} == 0) ?
        'enabled' : 'disabled';
    $self->add_info(sprintf 'maps is %s', $maps);
    $self->add_info(sprintf 'memory usage is %.2f%%',
        $self->{swMemUsage});
    $self->set_thresholds(
        metric => 'memory_usage',
        warning => $maps eq 'enabled' ? 80 : $self->{swMemUsageLimit1},
        critical => $maps eq 'enabled' ? 90 : $self->{swMemUsageLimit3});
    $self->add_message($self->check_thresholds(
        metric => 'memory_usage',
        value => $self->{swMemUsage},
    ));
    $self->add_perfdata(
        label => 'memory_usage',
        value => $self->{swMemUsage},
        uom => '%',
    );
  } elsif ($self->{swFwFabricWatchLicense} eq 'swFwNotLicensed') {
    $self->add_unknown('please install a fabric watch license');
  } else {
    my $swFirmwareVersion = $self->get_snmp_object('SW-MIB', 'swFirmwareVersion');
    if ($swFirmwareVersion && $swFirmwareVersion =~ /^v6/) {
      $self->add_ok('memory usage is not implemented');
    } else {
      $self->add_unknown('cannot aquire memory usage');
    }
  }
}

package Classes::FabOS::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  foreach (qw(swCpuUsage swCpuNoOfRetries swCpuUsageLimit swCpuPollingInterval
      swCpuAction)) {
    $self->{$_} = $self->valid_response('SW-MIB', $_, 0);
  }
  $self->get_snmp_objects('SW-MIB', (qw(
      swFwFabricWatchLicense)));
}

sub check {
  my ($self) = @_;
  $self->add_info('checking cpus');
  if (defined $self->{swCpuUsage}) {
    my $maps = $self->{swCpuUsageLimit} == 0 ?
        'enabled' : 'disabled';
    $self->add_info(sprintf 'maps is %s', $maps);
    $self->add_info(sprintf 'cpu usage is %.2f%%', $self->{swCpuUsage});
    $self->set_thresholds(
        metric => 'cpu_usage',
        warning => $maps eq 'enabled' ? 80 : $self->{swCpuUsageLimit},
        critical => $maps eq 'enabled' ? 90 : $self->{swCpuUsageLimit});
    $self->add_message($self->check_thresholds(
        metric => 'cpu_usage',
        value => $self->{swCpuUsage},
    ));
    $self->add_perfdata(
        label => 'cpu_usage',
        value => $self->{swCpuUsage},
        uom => '%',
    );
  } elsif ($self->{swFwFabricWatchLicense} eq 'swFwNotLicensed') {
    $self->add_unknown('please install a fabric watch license');
  } else {
    my $swFirmwareVersion = $self->get_snmp_object('SW-MIB', 'swFirmwareVersion');
    if ($swFirmwareVersion && $swFirmwareVersion =~ /^v6/) {
      $self->add_ok('cpu usage is not implemented');
    } else {
      $self->add_unknown('cannot aquire cpu usage');
    }
  }
}

package Classes::FabOS::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->{sensor_subsystem} =
      Classes::FabOS::Component::SensorSubsystem->new();
}

sub check {
  my ($self) = @_;
  $self->{sensor_subsystem}->check();
  if (! $self->check_messages()) {
    $self->add_ok("environmental hardware working fine");
  }
}

sub dump {
  my ($self) = @_;
  $self->{sensor_subsystem}->dump();
}

package Classes::FabOS::Component::SensorSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->bulk_is_baeh();
  $self->get_snmp_tables('SW-MIB', [
      ['sensors', 'swSensorTable', 'Classes::FabOS::Component::SensorSubsystem::Sensor'],
  ]);
}

package Classes::FabOS::Component::SensorSubsystem::Sensor;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };

sub check {
  my ($self) = @_;
  $self->add_info(sprintf '%s sensor %s (%s) is %s',
      $self->{swSensorType},
      $self->{swSensorIndex},
      $self->{swSensorInfo},
      $self->{swSensorStatus});
  if ($self->{swSensorStatus} eq "faulty") {
    $self->add_critical();
  } elsif ($self->{swSensorStatus} eq "absent") {
  } elsif ($self->{swSensorStatus} eq "unknown") {
    $self->add_critical();
  } else {
    if ($self->{swSensorStatus} eq "nominal") {
      #$self->add_ok();
    } else {
      $self->add_critical();
    }
    $self->add_perfdata(
        label => sprintf('sensor_%s_%s', 
            $self->{swSensorType}, $self->{swSensorIndex}),
        value => $self->{swSensorValue},
    ) if $self->{swSensorType} ne "power-supply";
  }
}

package Classes::FabOS::Component::InterfaceSubsystem;
our @ISA = qw(Classes::IFMIB::Component::InterfaceSubsystem);
use strict;

sub enrich_interface_cache {
  my ($self) = @_;
  $self->get_snmp_tables('SW-MIB', [
    ['fcinterfaces', 'swFCPortTable', 'Monitoring::GLPlugin::SNMP::TableItem', undef, ['swFCPortIndex', 'swFCPortName']],
  ]);
  foreach my $index (keys %{$self->{interface_cache}}) {
    my $ifDescr = $self->{interface_cache}->{$index}->{ifDescr};
    if ($ifDescr =~ /FC port 0\/(\d+)/) {
      my $label = $1;
      foreach my $fcinterface (@{$self->{fcinterfaces}}) {
        if ($fcinterface->{swFCPortName} &&
            $fcinterface->{swFCPortIndex} == $label + 1 &&
            $fcinterface->{swFCPortName} !~ /^port\d+$/) {
          $self->{interface_cache}->{$index}->{swFCPortName} =
              $fcinterface->{swFCPortName};
          $self->{interface_cache}->{$index}->{swFCPortIndex} =
              $fcinterface->{swFCPortIndex};
        }
      }
    }
  }
}

sub get_interface_indices {
  my ($self) = @_;
  # --name3 swFCPortName
  # wer sowas haben will: kostet 2880 Euro.
  $self->SUPER::get_interface_indices();
}

sub enrich_interface_attributes {
  my ($self, $interface) = @_;
  foreach my $index (keys %{$self->{interface_cache}}) {
    if ($index eq $interface->{flat_indices}) {
      if (exists $self->{interface_cache}->{$index}->{swFCPortName}) {
        $interface->{swFCPortName} =
            $self->{interface_cache}->{$index}->{swFCPortName};
        $interface->{swFCPortIndex} =
            $self->{interface_cache}->{$index}->{swFCPortIndex};
        if (! $interface->{ifAlias} || $interface->{ifAlias} eq '________') {
          $interface->{ifAlias} = $interface->{swFCPortName};
        }
      }
    }
  }
}

# eigentlich unnoetig, aber Classes::IFMIB::Component::InterfaceSubsystem
# blesst ref($self)::Interface
# falls es mal doch nich noetig sein sollte, am interface-check() was zu drehen
#
package Classes::FabOS::Component::InterfaceSubsystem::Interface;
our @ISA = qw(Classes::IFMIB::Component::InterfaceSubsystem::Interface);
use strict;

package Classes::FabOS::Component::InterfaceSubsystem::Interface::64bit;
our @ISA = qw(Classes::IFMIB::Component::InterfaceSubsystem::Interface::64bit);
use strict;


package Classes::FabOS;
our @ISA = qw(Classes::Brocade);
use strict;


sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::FabOS::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::FabOS::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::FabOS::Component::MemSubsystem");
  } elsif ($self->mode =~ /device::interfaces/) {
    $self->analyze_and_check_interface_subsystem("Classes::FabOS::Component::InterfaceSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::HH3C::Component::EntitySubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

package Classes::HH3C::Component::EnvironmentalSubsystem;
our @ISA = qw(Classes::HH3C::Component::EntitySubsystem);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables("ENTITY-MIB", [
    ["entities", "entPhysicalTable", "Classes::HH3C::Component::EnvironmentalSubsystem::Entity", undef, ["entPhysicalDescr", "entPhysicalName", "entPhysicalClass"]]
  ]);
  $self->get_snmp_tables("HH3C-ENTITY-EXT-MIB", [
    ["entitystates", "hh3cEntityExtStateTable", "Classes::HH3C::Component::EnvironmentalSubsystem::EntityState", undef, ["hh3cEntityExtErrorStatus"]]
  ]);
  $self->merge_tables("entities", "entitystates");
}

sub check {
  my ($self) = @_;
  $self->add_info('checking entities');
  if (scalar (@{$self->{entities}}) == 0) {
    $self->add_unknown('no entities found');
  } else {
    foreach (@{$self->{entities}}) {
      $_->check();
    }
    if (! $self->check_messages()) {
      $self->reduce_messages_short("environmental hardware working fine");
    }
  }
}

package Classes::HH3C::Component::EnvironmentalSubsystem::EntityState;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

package Classes::HH3C::Component::EnvironmentalSubsystem::Entity;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf '%s (%s) is %s',
      $self->{entPhysicalName} || $self->{entPhysicalDescr},
      $self->{entPhysicalClass},
      $self->{hh3cEntityExtErrorStatus});

  if ($self->{hh3cEntityExtErrorStatus} eq "notSupported") {
    # no health check implemented for this entity
    $self->add_ok();
  } elsif ($self->{hh3cEntityExtErrorStatus} eq "normal") {
    $self->add_ok();
  } elsif (
    $self->{hh3cEntityExtErrorStatus} eq "entityAbsent" or
    $self->{hh3cEntityExtErrorStatus} =~ /^sfp/
  ) {
    $self->add_warning();
  } else {
    $self->add_critical();
  }
}

package Classes::HH3C::Component::MemSubsystem;
our @ISA = qw(Classes::HH3C::Component::EntitySubsystem);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables("ENTITY-MIB", [
    ["entities", "entPhysicalTable", "Classes::HH3C::Component::MemSubsystem::Entity", sub { my ($o) = @_; $o->{entPhysicalClass} eq 'module' and $o->{entPhysicalName} =~ /board/i; }, ["entPhysicalDescr", "entPhysicalName", "entPhysicalClass"]]
  ]);
  $self->get_snmp_tables("HH3C-ENTITY-EXT-MIB", [
    ["entitystates", "hh3cEntityExtStateTable", "Classes::HH3C::Component::MemSubsystem::EntityState", undef, ["hh3cEntityExtMemAvgUsage"]]
  ]);
  $self->merge_tables("entities", "entitystates");
}

sub check {
  my ($self) = @_;
  $self->add_info('checking memory');
  if (scalar (@{$self->{entities}}) == 0) {
    $self->add_unknown('no board found');
  } else {
    my $i = 0;
    foreach (@{$self->{entities}}) {
      $_->check($i++);
    }
  }
}

package Classes::HH3C::Component::MemSubsystem::EntityState;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

package Classes::HH3C::Component::MemSubsystem::Entity;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self, $id) = @_;
  $self->add_info(sprintf 'Memory %s usage is %s%%',
      $id,
      $self->{hh3cEntityExtMemAvgUsage});
  $self->set_thresholds(warning => 80, critical => 90);
  $self->add_message($self->check_thresholds($self->{hh3cEntityExtMemAvgUsage}));
  $self->add_perfdata(
      label => 'memory_'.$id.'_usage',
      value => $self->{hh3cEntityExtMemAvgUsage},
      uom => '%',
  );
}
package Classes::HH3C::Component::CpuSubsystem;
our @ISA = qw(Classes::HH3C::Component::EntitySubsystem);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables("ENTITY-MIB", [
    ["entities", "entPhysicalTable", "Classes::HH3C::Component::CpuSubsystem::Entity", sub { my ($o) = @_; $o->{entPhysicalClass} eq 'module' and $o->{entPhysicalName} =~ /board/i; }, ["entPhysicalDescr", "entPhysicalName", "entPhysicalClass"]]
  ]);
  $self->get_snmp_tables("HH3C-ENTITY-EXT-MIB", [
    ["entitystates", "hh3cEntityExtStateTable", "Classes::HH3C::Component::CpuSubsystem::EntityState", undef, ["hh3cEntityExtCpuAvgUsage"]]
  ]);
  $self->merge_tables("entities", "entitystates");
}

sub check {
  my ($self) = @_;
  $self->add_info('checking cpus');
  if (scalar (@{$self->{entities}}) == 0) {
    $self->add_unknown('no board found');
  } else {
    my $i = 0;
    foreach (@{$self->{entities}}) {
      $_->check($i++);
    }
  }
}

package Classes::HH3C::Component::CpuSubsystem::EntityState;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

package Classes::HH3C::Component::CpuSubsystem::Entity;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self, $id) = @_;
  $self->add_info(sprintf 'CPU %s usage is %s%%',
      $id,
      $self->{hh3cEntityExtCpuAvgUsage});
  $self->set_thresholds(warning => 80, critical => 90);
  $self->add_message($self->check_thresholds($self->{hh3cEntityExtCpuAvgUsage}));
  $self->add_perfdata(
      label => 'cpu_'.$id.'_usage',
      value => $self->{hh3cEntityExtCpuAvgUsage},
      uom => '%',
  );
}
# HP Huawei 3Com
package Classes::HH3C;
our @ISA = qw(Classes::Device);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::HH3C::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::HH3C::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::HH3C::Component::MemSubsystem");
  } else {
    $self->no_such_mode();
  }
}
package Classes::Huawei::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('ENTITY-MIB', [
    ['modules', 'entPhysicalTable',
        'Classes::Huawei::Component::EnvironmentalSubsystem::Module',
        sub { my ($o) = @_; $o->{entPhysicalClass} eq 'module' },
        ['entPhysicalClass', 'entPhysicalDescr', 'entPhysicalName']],
    ['fans', 'entPhysicalTable',
        'Classes::Huawei::Component::EnvironmentalSubsystem::Fan', 
        sub { my ($o) = @_; $o->{entPhysicalClass} eq 'fan' },
        ['entPhysicalClass', 'entPhysicalDescr', 'entPhysicalName']],
    ['powersupplies', 'entPhysicalTable',
        'Classes::Huawei::Component::EnvironmentalSubsystem::Powersupply',
        sub { my ($o) = @_; $o->{entPhysicalClass} eq 'powerSupply' },
       ['entPhysicalClass', 'entPhysicalDescr', 'entPhysicalName']],
  ]);
  $self->get_snmp_tables('HUAWEI-ENTITY-EXTENT-MIB', [
    ['fanstates', 'hwFanStatusTable', 'Monitoring::GLPlugin::SNMP::TableItem'],
  ]);
  foreach (qw(modules fans powersupplies)) {
    $self->get_snmp_tables('HUAWEI-ENTITY-EXTENT-MIB', [
      ['entitystates', 'hwEntityStateTable',
      'Monitoring::GLPlugin::SNMP::TableItem'],
    ]);
    $self->merge_tables($_, "entitystates");
  }
  if (@{$self->{fanstates}} && ! @{$self->{fans}}) {
    # gibts auch, d.h. retten, was zu retten ist
    foreach (@{$self->{fanstates}}) {
      bless $_, "Classes::Huawei::Component::EnvironmentalSubsystem::Fan";
      $_->{entPhysicalName} = $_->{flat_indices};
      $_->finish();
    }
  } else {
    $self->merge_tables_with_code("fans", "fanstates", sub {
      my ($fan, $fanstate) = @_;
      return ($fan->{entPhysicalName} eq sprintf("FAN %d/%d",
          $fanstate->{hwEntityFanSlot}, $fanstate->{hwEntityFanSn})) ? 1 : 0;
    });
  }
}


package Classes::Huawei::Component::EnvironmentalSubsystem::Fan;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  # kommt auch vor, dass die nicht existieren. Im Zweifelsfall "up"
  $self->{hwEntityAdminStatus} ||= "up";
  $self->{hwEntityOperStatus} ||= "up";
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'fan %s is %s, state is %s, admin status is %s, oper status is %s',
      $self->{entPhysicalName}, $self->{hwEntityFanPresent},
      $self->{hwEntityFanState},
      $self->{hwEntityAdminStatus}, $self->{hwEntityOperStatus});
  if ($self->{hwEntityFanPresent} eq 'present') {
    if ($self->{hwEntityFanState} ne 'normal') {
      $self->add_warning();
    }
    $self->add_perfdata(
        label => 'rpm_'.$self->{entPhysicalName},
        value => $self->{hwEntityFanSpeed},
        uom => '%',
    );
  }
}

package Classes::Huawei::Component::EnvironmentalSubsystem::Powersupply;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'powersupply %s has admin status is %s, oper status is %s',
      $self->{entPhysicalName},
      $self->{hwEntityAdminStatus}, $self->{hwEntityOperStatus});
  if ($self->{hwEntityOperStatus} eq 'down' ||
      $self->{hwEntityOperStatus} eq 'offline') {
    $self->add_warning();
  }
}

package Classes::Huawei::Component::EnvironmentalSubsystem::Module;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{name} = $self->{entPhysicalName};
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'module %s admin status is %s, oper status is %s',
      $self->{name}, $self->{hwEntityAdminStatus}, $self->{hwEntityOperStatus});
  $self->add_info(sprintf 'module %s temperature is %.2f',
      $self->{name}, $self->{hwEntityTemperature});
  $self->set_thresholds(
      metric => 'temp_'.$self->{name},
      warning => $self->{hwEntityTemperatureLowThreshold}.':'.$self->{hwEntityTemperatureThreshold},
      critical => $self->{hwEntityTemperatureLowThreshold}.':'.$self->{hwEntityTemperatureThreshold},
  );
  $self->add_message(
      $self->check_thresholds(
          metric => 'temp_'.$self->{name},
          value => $self->{hwEntityTemperature}
  ));
  $self->add_perfdata(
      label => 'temp_'.$self->{name},
      value => $self->{hwEntityTemperature},
  );
  $self->add_info(sprintf 'module %s fault light is %s',
      $self->{name}, $self->{hwEntityFaultLight});
}


package Classes::Huawei::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('ENTITY-MIB', [
    ['entities', 'entPhysicalTable', 'Classes::Huawei::Component::CpuSubsystem::Cpu', sub { my ($o) = @_; $o->{entPhysicalClass} eq 'module' }, ['entPhysicalClass', 'entPhysicalDescr', 'entPhysicalName']],
  ]);
  $self->get_snmp_tables('HUAWEI-ENTITY-EXTENT-MIB', [
    ['entitystates', 'hwEntityStateTable', 'Monitoring::GLPlugin::SNMP::TableItem', undef, ['hwEntityCpuUsage', 'hwEntityCpuUsageThreshold']],
  ]);
  $self->merge_tables("entities", "entitystates");
}


package Classes::Huawei::Component::CpuSubsystem::Cpu;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{name} = $self->{entPhysicalName};
}

sub check {
  my ($self, $id) = @_;
  $self->add_info(sprintf 'CPU %s usage is %s%%',
      $self->{name}, $self->{hwEntityCpuUsage});
  $self->set_thresholds(
      metric => 'cpu_'.$self->{name},
      warning => $self->{hwEntityCpuUsageThreshold},
      critical => $self->{hwEntityCpuUsageThreshold},
  );
  $self->add_message(
      $self->check_thresholds(
          metric => 'cpu_'.$self->{name},
          value => $self->{hwEntityCpuUsage}
  ));
  $self->add_perfdata(
      label => 'cpu_'.$self->{name},
      value => $self->{hwEntityCpuUsage},
      uom => '%',
  );
}

package Classes::Huawei::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('ENTITY-MIB', [
    ['entities', 'entPhysicalTable', 'Classes::Huawei::Component::MemSubsystem::Mem', sub { my ($o) = @_; $o->{entPhysicalClass} eq 'module' }, ['entPhysicalClass', 'entPhysicalDescr', 'entPhysicalName']],
  ]);
  $self->get_snmp_tables('HUAWEI-ENTITY-EXTENT-MIB', [
    ['entitystates', 'hwEntityStateTable', 'Monitoring::GLPlugin::SNMP::TableItem', undef, ['hwEntityMemUsage', 'hwEntityMemUsageThreshold', 'hwEntityMemSizeMega']],
  ]);
  $self->merge_tables("entities", "entitystates");
}


package Classes::Huawei::Component::MemSubsystem::Mem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{name} = $self->{entPhysicalName};
}

sub check {
  my ($self) = @_;
  if ($self->{hwEntityMemSizeMega}) {
    $self->add_info(sprintf 'Memory %s usage is %s%% (of %dMB)',
        $self->{name}, $self->{hwEntityMemUsage},
        $self->{hwEntityMemSizeMega});
  } else {
    $self->add_info(sprintf 'Memory %s usage is %s%%',
        $self->{name}, $self->{hwEntityMemUsage});
  }
  $self->set_thresholds(
      metric => 'cpu_'.$self->{name},
      warning => $self->{hwEntityMemUsageThreshold},
      critical => $self->{hwEntityMemUsageThreshold},
  );
  $self->add_message(
      $self->check_thresholds(
          metric => 'cpu_'.$self->{name},
          value => $self->{hwEntityMemUsage}
  ));
  $self->add_perfdata(
      label => 'cpu_'.$self->{name},
      value => $self->{hwEntityMemUsage},
      uom => '%',
  );
}

package Classes::Huawei::CloudEngine;
our @ISA = qw(Classes::Huawei);
use strict;

sub init {
  my ($self) = @_;

  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::Huawei::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::Huawei::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::Huawei::Component::MemSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::Huawei;
our @ISA = qw(Classes::Device);
use strict;

sub init {
  my ($self) = @_;
  my $sysobj = $self->get_snmp_object('MIB-2-MIB', 'sysObjectID', 0);
  if ($sysobj =~ /^\.*1\.3\.6\.1\.4\.1\.2011\.2\.239/) {
    bless $self, 'Classes::Huawei::CloudEngine';
    $self->debug('using Classes::Huawei::CloudEngine');
  }
  if (ref($self) ne "Classes::Huawei") {
    $self->init();
  } else {
    if ($self->mode =~ /device::hardware::health/) {
      $self->analyze_and_check_environmental_subsystem("Classes::Huawei::Component::EnvironmentalSubsystem");
    } elsif ($self->mode =~ /device::hardware::load/) {
      $self->analyze_and_check_cpu_subsystem("Classes::Huawei::Component::CpuSubsystem");
    } elsif ($self->mode =~ /device::hardware::memory/) {
      $self->analyze_and_check_mem_subsystem("Classes::Huawei::Component::MemSubsystem");
    } else {
      $self->no_such_mode();
    }
  }
}

package Classes::HP::Procurve::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('NETSWITCH-MIB', [
      ['mem', 'hpLocalMemTable', 'Classes::HP::Procurve::Component::MemSubsystem::Memory'],
  ]);
}

sub check {
  my ($self) = @_;
  $self->add_info('checking memory');
  if (scalar (@{$self->{mem}}) == 0) {
  } else {
    foreach (@{$self->{mem}}) {
      $_->check();
    }
  }
}


package Classes::HP::Procurve::Component::MemSubsystem::Memory;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->{usage} = $self->{hpLocalMemAllocBytes} / 
      $self->{hpLocalMemTotalBytes} * 100;
  $self->add_info(sprintf 'memory %s usage is %.2f',
      $self->{hpLocalMemSlotIndex}, $self->{usage});
  $self->set_thresholds(warning => 80, critical => 90);
  $self->add_message($self->check_thresholds($self->{usage}));
  $self->add_perfdata(
      label => 'memory_'.$self->{hpLocalMemSlotIndex}.'_usage',
      value => $self->{usage},
      uom => '%',
  );
}

package Classes::HP::Procurve::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('STATISTICS-MIB', (qw(
      hpSwitchCpuStat)));
  if (! defined $self->{hpSwitchCpuStat}) {
    $self->get_snmp_objects('OLD-STATISTICS-MIB', (qw(
        hpSwitchCpuStat)));
  }
}

sub check {
  my ($self) = @_;
  $self->add_info('checking cpus');
  $self->add_info(sprintf 'cpu usage is %.2f%%', $self->{hpSwitchCpuStat});
  $self->set_thresholds(warning => 80, critical => 90); # maybe lower, because the switching is done in hardware
  $self->add_message($self->check_thresholds($self->{hpSwitchCpuStat}));
  $self->add_perfdata(
      label => 'cpu_usage',
      value => $self->{hpSwitchCpuStat},
      uom => '%',
  );
}

package Classes::HP::Procurve::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  if ($self->implements_mib('HP-ICF-CHASSIS-MIB')) {
    $self->analyze_and_check_sensor_subsystem('Classes::HP::Procurve::Component::SensorSubsystem');
  } else {
    $self->analyze_and_check_environmental_subsystem("Classes::ENTITYSENSORMIB::Component::EnvironmentalSubsystem");
  }
  if (! $self->check_messages()) {
    $self->add_ok("environmental hardware working fine");
  }
}


package Classes::HP::Procurve::Component::SensorSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('HP-ICF-CHASSIS-MIB', [
      ['sensors', 'hpicfSensorTable', 'Classes::HP::Procurve::Component::SensorSubsystem::Sensor'],
  ]);
}

sub check {
  my ($self) = @_;
  $self->add_info('checking sensors');
  if (scalar (@{$self->{sensors}}) == 0) {
    $self->add_ok('no sensors');
  } else {
    foreach (@{$self->{sensors}}) {
      $_->check();
    }
  }
}


package Classes::HP::Procurve::Component::SensorSubsystem::Sensor;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'sensor %s (%s) is %s',
      $self->{hpicfSensorIndex},
      $self->{hpicfSensorDescr},
      $self->{hpicfSensorStatus});
  if ($self->{hpicfSensorStatus} eq "notPresent") {
  } elsif ($self->{hpicfSensorStatus} eq "bad") {
    $self->add_critical();
  } elsif ($self->{hpicfSensorStatus} eq "warning") {
    $self->add_warning();
  } elsif ($self->{hpicfSensorStatus} eq "good") {
    #$self->add_ok();
  } else {
    $self->add_unknown();
  }
}

package Classes::HP::Procurve;
our @ISA = qw(Classes::HP);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::HP::Procurve::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::HP::Procurve::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::HP::Procurve::Component::MemSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::HP;
our @ISA = qw(Classes::Device);
use strict;

use constant trees => (
    '1.3.6.1.4.1.11.2.14.11.1.2', # HP-ICF-CHASSIS
    '1.3.6.1.2.1.1.7.11.12.9', # STATISTICS-MIB (old?)
    '1.3.6.1.2.1.1.7.11.12.1', # NETSWITCH-MIB (old?)
    '1.3.6.1.4.1.11.2.14.11.5.1.9', # STATISTICS-MIB
    '1.3.6.1.4.1.11.2.14.11.5.1.1', # NETSWITCH-MIB

);

sub init {
  my ($self) = @_;
  if ($self->{productname} =~ /Procurve/i ||
      ($self->implements_mib('HP-ICF-CHASSIS') &&
      $self->implements_mib('NETSWITCH-MIB'))) {
    bless $self, 'Classes::HP::Procurve';
    $self->debug('using Classes::HP::Procurve');
  }
  if (ref($self) ne "Classes::HP") {
    $self->init();
  }
}

package Classes::MEOS;
our @ISA = qw(Classes::Brocade);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_and_check_environmental_subsystem();
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_and_check_cpu_subsystem("Classes::UCDMIB::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_and_check_mem_subsystem("Classes::UCDMIB::Component::MemSubsystem");
  } else {
    $self->no_such_mode();
  }
}

sub analyze_environmental_subsystem {
  my ($self) = @_;
  $self->{components}->{environmental_subsystem1} =
      Classes::FCMGMT::Component::EnvironmentalSubsystem->new();
  $self->{components}->{environmental_subsystem2} =
      Classes::FCEOS::Component::EnvironmentalSubsystem->new();
}

sub check_environmental_subsystem {
  my ($self) = @_;
  $self->{components}->{environmental_subsystem1}->check();
  $self->{components}->{environmental_subsystem2}->check();
  if ($self->check_messages()) {
    $self->clear_ok();
  }
  $self->{components}->{environmental_subsystem1}->dump()
      if $self->opts->verbose >= 2;
  $self->{components}->{environmental_subsystem2}->dump()
      if $self->opts->verbose >= 2;
}

package Classes::Brocade;
our @ISA = qw(Classes::Device);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode !~ /device::uptime/) {
    foreach ($self->get_snmp_table_objects(
        'ENTITY-MIB', 'entPhysicalTable', undef, ['entPhysicalDescr'])) {
      if ($_->{entPhysicalDescr} =~ /Brocade/) {
        $self->{productname} = "FabOS";
      }
    }
    my $swFirmwareVersion = $self->get_snmp_object('SW-MIB', 'swFirmwareVersion');
    if ($swFirmwareVersion && $swFirmwareVersion =~ /^v6/) {
      $self->{productname} = "FabOS"
    }
  }
  if ($self->{productname} =~ /EMC\s*DS.*4700M/i) {
    bless $self, 'Classes::MEOS';
    $self->debug('using Classes::MEOS');
  } elsif ($self->{productname} =~ /EMC\s*DS-24M2/i) {
    bless $self, 'Classes::MEOS';
    $self->debug('using Classes::MEOS');
  } elsif ($self->{productname} =~ /FabOS/i) {
    bless $self, 'Classes::FabOS';
    $self->debug('using Classes::FabOS');
  } elsif ($self->{productname} =~ /ICX6|FastIron/i) {
    bless $self, 'Classes::Foundry';
    $self->debug('using Classes::Foundry');
  } elsif ($self->implements_mib('SW-MIB')) {
    bless $self, 'Classes::FabOS';
    $self->debug('using Classes::FabOS');
  }
  if (ref($self) ne "Classes::Brocade") {
    $self->init();
  } else {
    $self->no_such_mode();
  }
}

package Classes::SecureOS;
our @ISA = qw(Classes::Device);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    # not sure if this works fa25239716cb74c672f8dd390430dc4056caffa7
    if ($self->implements_mib('FCMGMT-MIB')) {
      $self->analyze_and_check_environmental_subsystem("Classes::FCMGMT::Component::EnvironmentalSubsystem");
    }
    if ($self->implements_mib('HOST-RESOURCES-MIB')) {
      $self->analyze_and_check_environmental_subsystem("Classes::HOSTRESOURCESMIB::Component::EnvironmentalSubsystem");
    }
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::UCDMIB::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::UCDMIB::Component::MemSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::HSRP::Component::HSRPSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->{groups} = [];
  if ($self->mode =~ /device::hsrp/) {
    $self->get_snmp_tables('CISCO-HSRP-MIB', [
      ['groups', 'cHsrpGrpTable', 'Classes::HSRP::Component::HSRPSubsystem::Group',  sub { my ($o) = @_; $self->filter_name($o->{name})}],
    ]);
  }
}

sub check {
  my ($self) = @_;
  $self->add_info('checking hsrp groups');
  if ($self->mode =~ /device::hsrp::list/) {
    foreach (@{$self->{groups}}) {
      $_->list();
    }
  } elsif ($self->mode =~ /device::hsrp/) {
    if (scalar (@{$self->{groups}}) == 0) {
      $self->add_unknown('no hsrp groups');
    } else {
      foreach (@{$self->{groups}}) {
        $_->check();
      }
    }
  }
}


package Classes::HSRP::Component::HSRPSubsystem::Group;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };

sub finish {
  my ($self) = @_;
  $self->{ifIndex} = $self->{indices}->[0];
  $self->{cHsrpGrpNumber} = $self->{indices}->[1];
  $self->{name} = $self->{cHsrpGrpNumber}.':'.$self->{ifIndex};
  if ($self->mode =~ /device::hsrp::state/) {
    if (! $self->opts->role()) {
      $self->opts->override_opt('role', 'active');
    }
  }
  return $self;
}

sub check {
  my ($self) = @_;
  if ($self->mode =~ /device::hsrp::state/) {
    $self->add_info(sprintf 'hsrp group %s (interface %s) state is %s (active router is %s, standby router is %s)',
        $self->{cHsrpGrpNumber}, $self->{ifIndex},
        $self->{cHsrpGrpStandbyState},
        $self->{cHsrpGrpActiveRouter}, $self->{cHsrpGrpStandbyRouter});
    my @roles = split ',', $self->opts->role();
    if (grep $_ eq $self->{cHsrpGrpStandbyState}, @roles) {
      if ($self->{cHsrpGrpStandbyRouter} eq '0.0.0.0') {
        $self->add_message(
          defined $self->opts->mitigation() ? $self->opts->mitigation() : 1,
          sprintf 'standby hsrp router missing in group %s (interface %s)',
          $self->{cHsrpGrpNumber}, $self->{ifIndex}
        );
      } else {
        $self->add_ok();
      }
    } else {
      $self->add_critical(
          sprintf 'state in group %s (interface %s) is %s instead of %s',
              $self->{cHsrpGrpNumber}, $self->{ifIndex},
              $self->{cHsrpGrpStandbyState},
              $self->opts->role());
    }
  } elsif ($self->mode =~ /device::hsrp::failover/) {
    $self->add_info(sprintf 'hsrp group %s/%s: active node is %s, standby node is %s',
        $self->{cHsrpGrpNumber}, $self->{ifIndex},
        $self->{cHsrpGrpActiveRouter}, $self->{cHsrpGrpStandbyRouter});
    if (my $laststate = $self->load_state( name => $self->{name} )) {
      if ($laststate->{active} ne $self->{cHsrpGrpActiveRouter}) {
        $self->add_critical(sprintf 'hsrp group %s/%s: active node %s --> %s',
            $self->{cHsrpGrpNumber}, $self->{ifIndex},
            $laststate->{active}, $self->{cHsrpGrpActiveRouter});
      }
      if ($laststate->{standby} ne $self->{cHsrpGrpStandbyRouter}) {
        $self->add_warning(sprintf 'hsrp group %s/%s: standby node %s --> %s',
            $self->{cHsrpGrpNumber}, $self->{ifIndex},
            $laststate->{standby}, $self->{cHsrpGrpStandbyRouter});
      }
      if (($laststate->{active} eq $self->{cHsrpGrpActiveRouter}) &&
          ($laststate->{standby} eq $self->{cHsrpGrpStandbyRouter})) {
        $self->add_ok();
      }
    } else {
      $self->add_ok('initializing....');
    }
    $self->save_state( name => $self->{name}, save => {
        active => $self->{cHsrpGrpActiveRouter},
        standby => $self->{cHsrpGrpStandbyRouter},
    });
  }
}

sub list {
  my ($self) = @_;
  printf "%s %s %s %s\n", $self->{name}, $self->{cHsrpGrpVirtualIpAddr},
      $self->{cHsrpGrpActiveRouter}, $self->{cHsrpGrpStandbyRouter};
}

package Classes::HSRP;
our @ISA = qw(Classes::Device);
use strict;

package Classes::IFMIB::Component::LinkAggregation;
our @ISA = qw(Classes::IFMIB);
use strict;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };

sub init {
  my ($self) = @_;
  if ($self->opts->name) {
    my @ifs = split(",", $self->opts->name);
    $self->{name} = shift @ifs;
    if ($self->opts->regexp) {
      $self->opts->override_opt('name',
          sprintf "(%s)", join("|", map { sprintf "(%s)", $_ } @ifs));
    } else {
      $self->opts->override_opt('name',
          sprintf "(%s)", join("|", map { sprintf "(^%s\$)", $_ } @ifs));
      $self->opts->override_opt('regexp', 1);
    }
    $self->{components}->{interface_subsystem} =
        Classes::IFMIB::Component::InterfaceSubsystem->new();
  } else {
    #error, must have a name
  }
  if ($self->mode =~ /device::interfaces::aggregation::availability/) {
    $self->{num_if} = scalar(@{$self->{components}->{interface_subsystem}->{interfaces}});
    $self->{down_if} = [grep { $_->{ifOperStatus} eq "down" } @{$self->{components}->{interface_subsystem}->{interfaces}}];
    $self->{num_down_if} = scalar(@{$self->{down_if}});
    $self->{num_up_if} = $self->{num_if} - $self->{num_down_if};
    $self->{availability} = $self->{num_if} ? (100 * $self->{num_up_if} / $self->{num_if}) : 0;
  }
}

sub check {
  my ($self) = @_;
  $self->add_info('checking link aggregation');
  if (scalar(@{$self->{components}->{interface_subsystem}->{interfaces}}) == 0) {
    $self->add_unknown('no interfaces');
    return;
  }
  if ($self->mode =~ /device::interfaces::aggregation::availability/) {
    my $down_info = scalar(@{$self->{down_if}}) ?
        sprintf " (down: %s)", join(", ", map { $_->{ifDescr} } @{$self->{down_if}}) : "";
    $self->add_info(sprintf 'aggregation %s availability is %.2f%% (%d of %d)%s',
        $self->{name},
        $self->{availability}, $self->{num_up_if}, $self->{num_if},
        $down_info);
    my $cavailability = $self->{num_if} ? (100 * 1 / $self->{num_if}) : 0;
    $cavailability = $cavailability == int($cavailability) ? $cavailability + 1: int($cavailability + 1.0);
    $self->set_thresholds(
        metric => 'aggr_'.$self->{name}.'_availability',
        warning => '100:',
        critical => $cavailability.':'
    );
    $self->add_message($self->check_thresholds(
        metric => 'aggr_'.$self->{name}.'_availability',
        value => $self->{availability}
    ));
    $self->add_perfdata(
        label => 'aggr_'.$self->{name}.'_availability',
        value => $self->{availability},
        uom => '%',
    );
  }
}


package Classes::IFMIB::Component::InterfaceSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->{interfaces} = [];
  $self->{etherstats} = [];
  #$self->session_translate(['-octetstring' => 1]);
  my @iftable_columns = qw(ifDescr ifAlias ifName);
  my @ethertable_columns = qw();
  my @ethertablehc_columns = qw();
  my @rmontable_columns = qw();
  my @ipaddress_columns = qw();
  $self->implements_mib('INET-ADDRESS-MIB');
  if ($self->mode =~ /device::interfaces::list/) {
  } elsif ($self->mode =~ /device::interfaces::complete/) {
    push(@iftable_columns, qw(
        ifInOctets ifOutOctets ifSpeed ifOperStatus ifAdminStatus
        ifHCInOctets ifHCOutOctets ifHighSpeed
        ifInErrors ifOutErrors
        ifInDiscards ifOutDiscards
        ifInMulticastPkts ifOutMulticastPkts
        ifInBroadcastPkts ifOutBroadcastPkts
        ifInUcastPkts ifOutUcastPkts
        ifHCInMulticastPkts ifHCOutMulticastPkts
        ifHCInBroadcastPkts ifHCOutBroadcastPkts
        ifHCInUcastPkts ifHCOutUcastPkts
    ));
    # kostenpflichtiges feature # push(@ethertable_columns, qw(
    #    dot3StatsDuplexStatus
    #));
  } elsif ($self->mode =~ /device::interfaces::usage/) {
    push(@iftable_columns, qw(
        ifInOctets ifOutOctets ifSpeed ifOperStatus
        ifHCInOctets ifHCOutOctets ifHighSpeed
    ));
  } elsif ($self->mode =~ /device::interfaces::errors/) {
    push(@iftable_columns, qw(
        ifInErrors ifOutErrors
    ));
  } elsif ($self->mode =~ /device::interfaces::discards/) {
    push(@iftable_columns, qw(
        ifInDiscards ifOutDiscards
    ));
  } elsif ($self->mode =~ /device::interfaces::broadcast/) {
    push(@iftable_columns, qw(
        ifInMulticastPkts ifOutMulticastPkts
        ifInBroadcastPkts ifOutBroadcastPkts
        ifInUcastPkts ifOutUcastPkts
        ifHCInMulticastPkts ifHCOutMulticastPkts
        ifHCInBroadcastPkts ifHCOutBroadcastPkts
        ifHCInUcastPkts ifHCOutUcastPkts
    ));
  } elsif ($self->mode =~ /device::interfaces::operstatus/) {
    push(@iftable_columns, qw(
        ifOperStatus ifAdminStatus
    ));
  } elsif ($self->mode =~ /device::interfaces::availability/) {
    push(@iftable_columns, qw(
        ifType ifOperStatus ifAdminStatus
        ifLastChange ifHighSpeed ifSpeed
    ));
  } elsif ($self->mode =~ /device::interfaces::etherstats/) {
    push(@iftable_columns, qw(
        ifOperStatus ifAdminStatus
        ifInMulticastPkts ifOutMulticastPkts
        ifInBroadcastPkts ifOutBroadcastPkts
        ifInUcastPkts ifOutUcastPkts
        ifHCInMulticastPkts ifHCOutMulticastPkts
        ifHCInBroadcastPkts ifHCOutBroadcastPkts
        ifHCInUcastPkts ifHCOutUcastPkts
    ));
    push(@ethertable_columns, qw(
        dot3StatsAlignmentErrors dot3StatsFCSErrors
        dot3StatsSingleCollisionFrames dot3StatsMultipleCollisionFrames
        dot3StatsSQETestErrors dot3StatsDeferredTransmissions
        dot3StatsLateCollisions dot3StatsExcessiveCollisions
        dot3StatsInternalMacTransmitErrors dot3StatsCarrierSenseErrors
        dot3StatsFrameTooLongs dot3StatsInternalMacReceiveErrors
    ));
    push(@ethertablehc_columns, qw(
        dot3HCStatsFCSErrors
    ));
    push(@rmontable_columns, qw(
        etherStatsCRCAlignErrors
    ));
    if ($self->opts->report !~ /^(long|short|html)$/) {
      my @reports = split(',', $self->opts->report);
      @ethertable_columns = grep {
        my $ec = $_;
        grep {
          $ec eq $_;
        } @reports;
      } @ethertable_columns;
      @ethertablehc_columns = grep {
        my $ec = $_;
        grep {
          $ec eq $_;
        } @reports;
      } @ethertablehc_columns;
      @rmontable_columns = grep {
        my $ec = $_;
        grep {
          $ec eq $_;
        } @reports;
      } @rmontable_columns;
    }
    if (grep /dot3HCStatsFCSErrors/, @ethertablehc_columns) {
      # wenn ifSpeed == 4294967295, dann 10GBit, dann dot3HCStatsFCSErrors
      push(@iftable_columns, qw(
          ifSpeed
      ));
    }
    if (@rmontable_columns) {
      push(@rmontable_columns, qw(
          etherStatsIndex
          etherStatsDataSource
      ));
    }
  } elsif ($self->mode =~ /device::interfaces::duplex/) {
    push(@iftable_columns, qw(
        ifType ifSpeed ifOperStatus ifAdminStatus ifHighSpeed
    ));
    push(@ethertable_columns, qw(
        dot3StatsDuplexStatus
    ));
  } elsif ($self->mode =~ /device::interfaces::uptime/) {
    push(@iftable_columns, qw(
        ifLastChange
    ));
  } else {
    @iftable_columns = ();
  }
  if ($self->mode =~ /device::interfaces::list/) {
    $self->update_interface_cache(1);
    my @indices = $self->get_interface_indices();
    foreach my $ifIndex (map { $_->[0] } @indices) {
      my $ifDescr = $self->{interface_cache}->{$ifIndex}->{ifDescr};
      my $ifName = $self->{interface_cache}->{$ifIndex}->{ifName} || '________';
      my $ifAlias = $self->{interface_cache}->{$ifIndex}->{ifAlias} || '________';
      my $interface_class = ref($self)."::Interface";
      my $interface = $interface_class->new(
          ifIndex => $ifIndex,
          ifDescr => $ifDescr,
          ifName => $ifName,
          ifAlias => $ifAlias,
          indices => [$ifIndex],
          flat_indices => $ifIndex,
      );
      $self->enrich_interface_attributes($interface);
      push(@{$self->{interfaces}}, $interface);
    }
    # die sind mit etherStatsDataSource verknuepft
  } elsif ($self->mode =~ /device::interfaces/) {
    my $if_has_changed = $self->update_interface_cache(0);
    my $only_admin_up =
        $self->opts->name && $self->opts->name eq '_adminup_' ? 1 : 0;
    my $only_oper_up =
        $self->opts->name && $self->opts->name eq '_operup_' ? 1 : 0;
    # --name '(lan|wan|_adminup_)'
    # alle mit match auf lan|wan, und davon dann die mit admin up
    my $plus_admin_up =
        $self->opts->name && ! $only_admin_up &&
        $self->opts->name =~ /_adminup_/ ? 1 : 0;
    my $plus_oper_up =
        $self->opts->name && ! $only_oper_up &&
        $self->opts->name =~ /_operup_/ ? 1 : 0;
    if ($only_admin_up || $only_oper_up) {
      $self->override_opt('name', undef);
      $self->override_opt('drecksptkdb', undef);
    }
    my @indices = $self->get_interface_indices();
    my @all_indices = @indices;
    my @selected_indices = ();
    if (! $self->opts->name && ! $self->opts->name3) {
      # get_table erzwingen
      @indices = ();
      $self->bulk_is_baeh(10);
    }
    if ((! $self->opts->name && ! $self->opts->name3) || scalar(@indices) > 0) {
      my @save_indices = @indices; # die werden in get_snmp_table_objects geshiftet
      foreach ($self->get_snmp_table_objects(
          'IFMIB', 'ifTable+ifXTable', \@indices, \@iftable_columns)) {
        next if $only_admin_up && $_->{ifAdminStatus} ne 'up';
        next if $only_oper_up && $_->{ifOperStatus} ne 'up';
        next if $plus_admin_up && $_->{ifAdminStatus} ne 'up';
        next if $plus_oper_up && $_->{ifOperStatus} ne 'up';
        $self->make_ifdescr_unique($_);
        $self->enrich_interface_attributes($_);
        my $interface_class = ref($self)."::Interface";
        my $interface = $interface_class->new(%{$_});
        $interface->{columns} = [@iftable_columns];
        push(@{$self->{interfaces}}, $interface);
      }
      # kostenpflichtiges feature # if ($self->mode =~ /device::interfaces::(duplex|etherstats|complete)/) {
      if ($self->mode =~ /device::interfaces::(duplex|etherstats)/) {
        @indices = @save_indices;
        my @etherindices = ();
        my @etherhcindices = ();
        foreach my $interface (@{$self->{interfaces}}) {
          push(@selected_indices, [$interface->{ifIndex}]);
          if (@ethertablehc_columns && $interface->{ifSpeed} == 4294967295) {
            push(@etherhcindices, [$interface->{ifIndex}]);
          }
          push(@etherindices, [$interface->{ifIndex}]);
        }
        $self->debug(
            sprintf 'all_interfaces %d, selected %d, ether %d, etherhc %d',
                scalar(@all_indices), scalar(@selected_indices),
                scalar(@etherindices), scalar(@etherhcindices));
        my @rmonpatterns = map {
            '([\.]*1.3.6.1.2.1.2.2.1.1.'.$_.')';
        } map {
            $_->[0];
        } @selected_indices;
        if ($only_admin_up || $only_oper_up) {
          if (scalar(@etherindices) > scalar(@all_indices) * 0.70) {
            $self->bulk_is_baeh(20);
            @etherindices = ();
          }
          if (scalar(@etherhcindices) > scalar(@all_indices) * 0.70) {
            $self->bulk_is_baeh(20);
            @etherhcindices = ();
          }
          if (scalar(@rmonpatterns) > scalar(@all_indices) * 0.70) {
            $self->bulk_is_baeh(20);
            @rmonpatterns = ();
          }
        } elsif (! @indices) {
            $self->bulk_is_baeh(20);
          @etherindices = ();
          if (scalar(@etherhcindices) > scalar(@all_indices) * 0.70) {
            @etherhcindices = ();
          }
          @rmonpatterns = ();
        }
        if (@ethertable_columns) {
          # es gibt interfaces mit ifSpeed == 4294967295
          # aber nix in dot3HCStatsTable. also dann dot3StatsTable fuer alle
          foreach my $etherstat ($self->get_snmp_table_objects(
              'EtherLike-MIB', 'dot3StatsTable', \@etherindices, \@ethertable_columns)) {
            foreach my $interface (@{$self->{interfaces}}) {
              if ($interface->{ifIndex} == $etherstat->{flat_indices}) {
                foreach my $key (grep /^dot3/, keys %{$etherstat}) {
                  $interface->{$key} = $etherstat->{$key};
                  push(@{$interface->{columns}}, $key);
                }
                last;
              }
            }
          }
        }
        if (@ethertablehc_columns && scalar(@etherhcindices)) {
          foreach my $etherstat ($self->get_snmp_table_objects(
              'EtherLike-MIB', 'dot3HCStatsTable', \@etherhcindices, \@ethertablehc_columns)) {
            foreach my $interface (@{$self->{interfaces}}) {
              if ($interface->{ifIndex} == $etherstat->{flat_indices}) {
                foreach my $key (grep /^dot3/, keys %{$etherstat}) {
                  $interface->{$key} = $etherstat->{$key};
                  push(@{$interface->{columns}}, $key);
                }
                if (grep /^dot3HCStatsFCSErrors/, @{$interface->{columns}}) {
                  @{$interface->{columns}} = grep {
                    $_ if $_ ne 'dot3StatsFCSErrors';
                  } @{$interface->{columns}};
                }
                last;
              }
            }
          }
        }
        if (@rmontable_columns) {
          if ($self->opts->name) {
            $self->override_opt('drecksptkdb', '^('.join('|', @rmonpatterns).')$');
            $self->override_opt('name', '^('.join('|', @rmonpatterns).')$');
            $self->override_opt('regexp', 1);
          }
          # Value von etherStatsDataSource entspricht ifIndex 1.3.6.1.2.1.2.2.1.1.idx
          foreach my $etherstat ($self->get_snmp_table_objects_with_cache(
              'RMON-MIB', 'etherStatsTable', 'etherStatsDataSource', \@rmontable_columns, $if_has_changed ? 1 : -1)) {
              $etherstat->{etherStatsDataSource} =~ s/^\.//g;
            foreach my $interface (@{$self->{interfaces}}) {
              if ('1.3.6.1.2.1.2.2.1.1.'.$interface->{ifIndex} eq $etherstat->{etherStatsDataSource}) {
                foreach my $key (grep /^etherStats/, keys %{$etherstat}) {
                  $interface->{$key} = $etherstat->{$key};
                  push(@{$interface->{columns}}, $key);
                }
                last;
              }
            }
          }
        }
        # @{$self->{interfaces}} haben ein ->{columns}
        # alle ausfiltern, die _keine_ der gewuenschten oids haben
        @{$self->{interfaces}} = grep {
            # check (@ethertable_columns, @rmontable_columns)
            my $found = undef;
            foreach my $oid (@ethertable_columns, @rmontable_columns) {
              if (grep { $oid eq $_ } @{$_->{columns}}) {
                $found = 1;
              }
            }
            $found;
        } @{$self->{interfaces}};
        foreach my $interface (@{$self->{interfaces}}) {
          delete $interface->{dot3StatsIndex};
          delete $interface->{etherStatsIndex};
          delete $interface->{etherStatsDataSource};
          @{$interface->{columns}} = grep {
              $_ !~ /^(dot3StatsIndex|etherStatsIndex|etherStatsDataSource)$/;
          } @{$interface->{columns}};
          $interface->init_etherstats;
        }
        if (scalar(@{$self->{interfaces}}) == 0) {
          $self->add_unknown('device probably has no RMON-MIB or EtherLike-MIB');
        }
      }
    }
  }
  if ($self->opts->report =~ /^(\w+)\+address/) {
    $self->override_opt('report', $1);
    # flat_indices, weil die Schluesselelemente ipAddressAddrType+ipAddressAddr
    # not-accessible sind und im Index stecken.
    if (scalar(@{$self->{interfaces}}) > 0) {
      my $interfaces_by_index = {};
      map {
          $interfaces_by_index->{$_->{ifIndex}} = $_;
      } @{$self->{interfaces}};
      my $indexpattern = join('|', map {
          $_->{ifIndex}
      } @{$self->{interfaces}});
      $self->override_opt('name', '^('.$indexpattern.')$');
      $self->override_opt('drecksptkdb', '^('.$indexpattern.')$');
      $self->override_opt('regexp', 1);

      $self->get_snmp_objects('IP-MIB', qw(ipv4InterfaceTableLastChange ipv6InterfaceTableLastChange));
      $self->{ipv4InterfaceTableLastChange} ||= 0;
      $self->{ipv6InterfaceTableLastChange} ||= 0;
      $self->{ipv46InterfaceTableLastChange} =
          $self->{ipv4InterfaceTableLastChange} > $self->{ipv6InterfaceTableLastChange} ?
          $self->{ipv4InterfaceTableLastChange} : $self->{ipv6InterfaceTableLastChange};
      $self->{bootTime} = time - $self->uptime();
      $self->{ipAddressTableLastChange} = $self->{bootTime} + $self->timeticks($self->{ipv46InterfaceTableLastChange} / 100);

      $self->update_entry_cache(0, 'IP-MIB', 'ipAddressTable', 'ipAddressIfIndex', $self->{ipAddressTableLastChange});
      my @address_indices = $self->get_cache_indices('IP-MIB', 'ipAddressTable', 'ipAddressIfIndex');
      $self->{addresses} = [];
      if (@address_indices) {
        # es gibt adressen zu den ausgewaehlten interfaces
        foreach ($self->get_snmp_table_objects_with_cache(
            'IP-MIB', 'ipAddressTable', 'ipAddressIfIndex', ['ipAddressIfIndex'], 0)) {
          my $address = Classes::IFMIB::Component::InterfaceSubsystem::Address->new(%{$_});
          push(@{$self->{addresses}}, $address);
          if (exists $interfaces_by_index->{$address->{ipAddressIfIndex}}) {
            if (exists  $interfaces_by_index->{$address->{ipAddressIfIndex}}->{ifAddresses}) {
              push(@{$interfaces_by_index->{$address->{ipAddressIfIndex}}->{ifAddresses}}, $address->{ipAddressAddr});
            } else {
              $interfaces_by_index->{$address->{ipAddressIfIndex}}->{ifAddresses} = [$address->{ipAddressAddr}];
            }
          }
        }
      }
      foreach (@{$self->{interfaces}}) {
        $_->{ifAddresses} = exists $_->{ifAddresses} ? join(", ", @{$_->{ifAddresses}}) : "";
      }
    }
  }
}

sub check {
  my ($self) = @_;
  $self->add_info('checking interfaces');
  if (scalar(@{$self->{interfaces}}) == 0) {
    $self->add_unknown('no interfaces');
    return;
  }
  if ($self->mode =~ /device::interfaces::list/) {
    foreach (sort {$a->{ifIndex} <=> $b->{ifIndex}} @{$self->{interfaces}}) {
    #foreach (sort @{$self->{interfaces}}) {
      $_->list();
    }
    $self->add_ok("have fun");
  } elsif ($self->mode =~ /device::interfaces::availability/) {
    foreach (@{$self->{interfaces}}) {
      $_->check();
    }
    my $num_interfaces = scalar(@{$self->{interfaces}});
    my $up_interfaces =
        scalar(grep { $_->{ifAdminStatus} eq "up" } @{$self->{interfaces}});
    my $available_interfaces =
        scalar(grep { $_->{ifAvailable} eq "true" } @{$self->{interfaces}});
    $self->add_info(sprintf "%d of %d (%d adm. up) interfaces are available",
        $available_interfaces, $num_interfaces, $up_interfaces);
    $self->set_thresholds(warning => "3:", critical => "2:");
    $self->add_message($self->check_thresholds($available_interfaces));
    $self->add_perfdata(
        label => 'num_interfaces',
        value => $num_interfaces,
        thresholds => 0,
    );
    $self->add_perfdata(
        label => 'available_interfaces',
        value => $available_interfaces,
    );

    printf "%s\n", $self->{info};
    printf "<table style=\"border-collapse:collapse; border: 1px solid black;\">";
    printf "<tr>";
    foreach (qw(Index Descr Type Speed AdminStatus OperStatus Duration Available)) {
      printf "<th style=\"text-align: right; padding-left: 4px; padding-right: 6px;\">%s</th>", $_;
    }
    printf "</tr>";
    foreach (sort {$a->{ifIndex} <=> $b->{ifIndex}} @{$self->{interfaces}}) {
      printf "<tr>";
      printf "<tr style=\"border: 1px solid black;\">";
      foreach my $attr (qw(ifIndex ifDescr ifType ifSpeedText ifAdminStatus ifOperStatus ifStatusDuration ifAvailable)) {
        if ($_->{ifAvailable} eq "false") {
          printf "<td style=\"text-align: right; padding-left: 4px; padding-right: 6px;\">%s</td>", $_->{$attr};
        } else {
          printf "<td style=\"text-align: right; padding-left: 4px; padding-right: 6px; background-color: #00ff33;\">%s</td>", $_->{$attr};
        }
      }
      printf "</tr>";
    }
    printf "</table>\n";
    printf "<!--\nASCII_NOTIFICATION_START\n";
    my $column_length = {};
    foreach (qw(ifIndex ifDescr ifType ifSpeed ifAdminStatus ifOperStatus Duration ifAvailable ifSpeedText ifStatusDuration)) {
      $column_length->{$_} = length($_);
    }
    foreach (sort {$a->{ifIndex} <=> $b->{ifIndex}} @{$self->{interfaces}}) {
      foreach my $attr (qw(ifIndex ifDescr ifType ifSpeedText ifAdminStatus ifOperStatus ifStatusDuration ifAvailable)) {
        if (length($_->{$attr}) > $column_length->{$attr}) {
          $column_length->{$attr} = length($_->{$attr});
        }
      }
    }
    foreach (qw(ifIndex ifDescr ifType ifSpeed ifAdminStatus ifOperStatus Duration ifStatusDuration ifAvailable ifSpeedText)) {
      $column_length->{$_} = "%".($column_length->{$_} + 3)."s I";
    }
    $column_length->{ifSpeed} = $column_length->{ifSpeedText};
    $column_length->{Duration} = $column_length->{ifStatusDuration};
    foreach (qw(ifIndex ifDescr ifType ifSpeed ifAdminStatus ifOperStatus Duration ifAvailable)) {
      printf $column_length->{$_}, $_;
    }
    printf "\n";
    foreach (sort {$a->{ifIndex} <=> $b->{ifIndex}} @{$self->{interfaces}}) {
      foreach my $attr (qw(ifIndex ifDescr ifType ifSpeedText ifAdminStatus ifOperStatus ifStatusDuration ifAvailable)) {
        printf $column_length->{$attr}, $_->{$attr};
      }
      printf "\n";
    }
    printf "ASCII_NOTIFICATION_END\n-->\n";
  } else {
    if (scalar (@{$self->{interfaces}}) == 0) {
    } else {
      foreach (sort {$a->{ifIndex} <=> $b->{ifIndex}} @{$self->{interfaces}}) {
        $_->check();
      }
      if ($self->opts->report =~ /^short/) {
        $self->clear_ok();
        $self->add_ok('no problems') if ! $self->check_messages();
      }
    }
  }
}

sub update_interface_cache {
  my ($self, $force) = @_;
  my $statefile = $self->create_interface_cache_file();
  $self->get_snmp_objects('IFMIB', qw(ifTableLastChange));
  # "The value of sysUpTime at the time of the last creation or
  # deletion of an entry in the ifTable. If the number of
  # entries has been unchanged since the last re-initialization
  # of the local network management subsystem, then this object
  # contains a zero value."
  $self->{ifTableLastChange} ||= 0;
  $self->{ifCacheLastChange} = -f $statefile ? (stat $statefile)[9] : 0;
  $self->{bootTime} = time - $self->uptime();
  $self->debug(sprintf 'boot time was %s', scalar localtime $self->{bootTime});
  $self->debug(sprintf 'if last change is %s', scalar localtime $self->{ifTableLastChange});
  $self->{ifTableLastChange} = $self->{bootTime} + $self->timeticks($self->{ifTableLastChange});
  $self->debug(sprintf 'if last change is %s', scalar localtime $self->{ifTableLastChange});
  my $update_deadline = time - 3600;
  my $must_update = 0;
  if ($self->{ifCacheLastChange} < $update_deadline) {
    # file older than 1h or file does not exist
    $must_update = 1;
    $self->debug(sprintf 'interface cache is older than 1h (%s < %s)',
        scalar localtime $self->{ifCacheLastChange}, scalar localtime $update_deadline);
  }
  if ($self->{ifTableLastChange} >= $self->{ifCacheLastChange}) {
    $must_update = 1;
    $self->debug(sprintf 'interface table changes newer than cache file (%s >= %s)',
        scalar localtime $self->{ifTableLastChange}, scalar localtime $self->{ifCacheLastChange});
  }
  if ($force) {
    $must_update = 1;
    $self->debug(sprintf 'interface table update forced');
  }
  if ($must_update) {
    $self->debug('update of interface cache');
    $self->{interface_cache} = {};
    foreach ($self->get_snmp_table_objects('MINI-IFMIB', 'ifTable+ifXTable', [-1], ['ifDescr', 'ifName', 'ifAlias'])) {
      # auch hier explizit ifIndex vermeiden, sonst fliegen dem Rattabratha Singh die Nexus um die Ohren
      # neuerdings index+descr, weil die drecksscheiss allied telesyn ports
      # alle gleich heissen
      # und noch so ein hirnbrand: --mode list-interfaces
      # 000003 Adaptive Security Appliance 'GigabitEthernet0/0' interface
      # ....
      # der ASA-schlonz ist ueberfluessig, also brauchen wir eine hintertuer
      # um die namen auszuputzen
      if ($self->opts->name2 && $self->opts->name2 =~ /\(\.\*\?*\)/) {
        if ($_->{ifDescr} =~ $self->opts->name2) {
          $_->{ifDescr} = $1;
        }
      }
      $self->{interface_cache}->{$_->{flat_indices}}->{ifDescr} = unpack("Z*", $_->{ifDescr});
      $self->{interface_cache}->{$_->{flat_indices}}->{ifName} = unpack("Z*", $_->{ifName}) if exists $_->{ifName};
      $self->{interface_cache}->{$_->{flat_indices}}->{ifAlias} = unpack("Z*", $_->{ifAlias}) if exists $_->{ifAlias};
    }
    $self->enrich_interface_cache();
    $self->save_interface_cache();
  }
  $self->load_interface_cache();
  $self->{duplicates} = {};
  foreach my $index (keys %{$self->{interface_cache}}) {
    my $ifDescr = $self->{interface_cache}->{$index}->{ifDescr};
    if (! exists $self->{duplicates}->{$ifDescr}) {
      $self->{duplicates}->{$ifDescr} = 1;
    } else {
      $self->{duplicates}->{$ifDescr}++;
    }
  }
  foreach my $index (keys %{$self->{interface_cache}}) {
    $self->{interface_cache}->{$index}->{flat_indices} = $index;
    $self->make_ifdescr_unique($self->{interface_cache}->{$index});
  }
  return $must_update;
}

sub enrich_interface_cache {
  my ($self) = @_;
  # a dummy method. it can be used in Classes::XY::Component::InterfaceSubsystem
  # to add for example vendor-specific port names to the interface cache
  # which has been collected by get_snmp_tables(vendor-mib, tablexy, xyPortName
}

sub save_interface_cache {
  my ($self) = @_;
  $self->create_statefilesdir();
  my $statefile = $self->create_interface_cache_file();
  my $tmpfile = $self->statefilesdir().'/check_nwc_health_tmp_'.$$;
  my $fh = IO::File->new();
  $fh->open(">$tmpfile");
  $fh->print(Data::Dumper::Dumper($self->{interface_cache}));
  $fh->flush();
  $fh->close();
  my $ren = rename $tmpfile, $statefile;
  $self->debug(sprintf "saved %s to %s",
      Data::Dumper::Dumper($self->{interface_cache}), $statefile);

}

sub load_interface_cache {
  my ($self) = @_;
  my $statefile = $self->create_interface_cache_file();
  if ( -f $statefile) {
    our $VAR1;
    eval {
      require $statefile;
    };
    if($@) {
      printf "FATAL: Could not load cache!\n";
    }
    $self->debug(sprintf "load %s", Data::Dumper::Dumper($VAR1));
    $self->{interface_cache} = $VAR1;
    eval {
      foreach (keys %{$self->{interface_cache}}) {
        /^\d+$/ || die "newrelease";
      }
    };
    if($@) {
      $self->{interface_cache} = {};
      unlink $statefile;
      delete $INC{$statefile};
      $self->update_interface_cache(1);
    }
  }
}

sub make_ifdescr_unique {
  my ($self, $if) = @_;
  $if->{ifDescr} = $if->{ifDescr}.' '.$if->{flat_indices} if $self->{duplicates}->{$if->{ifDescr}} > 1;
}

sub get_interface_indices {
  my ($self) = @_;
  my @indices = ();
  foreach my $ifIndex (keys %{$self->{interface_cache}}) {
    my $ifDescr = $self->{interface_cache}->{$ifIndex}->{ifDescr};
    my $ifUniqDescr = $self->{interface_cache}->{$ifIndex}->{ifUniqDescr};
    my $ifAlias = $self->{interface_cache}->{$ifIndex}->{ifAlias} || '________';
    # Check ifDescr (using --name)
    if ($self->opts->name) {
      if ($self->opts->regexp) {
        my $pattern = $self->opts->name;
        if ($ifDescr =~ /$pattern/i) {
          push(@indices, [$ifIndex]);
        }
      } else {
        if ($self->opts->name =~ /^\d+$/) {
          if ($ifIndex == 1 * $self->opts->name) {
            push(@indices, [1 * $self->opts->name]);
          }
        } else {
          if (lc $ifDescr eq lc $self->opts->name) {
            push(@indices, [$ifIndex]);
          }
        }
      }
    # Check ifAlias (using --name3)
    } elsif ($self->opts->name3) {
      if ($self->opts->regexp) {
        my $pattern = $self->opts->name3;
        if ($ifAlias =~ /$pattern/i) {
          push(@indices, [$ifIndex]);
        }
      } else {
        if (lc $ifAlias eq lc $self->opts->name3) {
          push(@indices, [$ifIndex]);
        }
      }
    # take all interfaces
    } else {
      push(@indices, [$ifIndex]);
    }
  }
  return @indices;
}

sub enrich_interface_attributes {
  my ($self, $interface) = @_;
  # can be used by vendor-specific InterfaceSubsystem to add extra
  # attributes
}


package Classes::IFMIB::Component::InterfaceSubsystem::Interface;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;
use Digest::MD5 qw(md5_hex);

sub finish {
  my ($self) = @_;
  foreach my $key (keys %{$self}) {
    next if $key !~ /^if/;
    $self->{$key} = 0 if ! defined $self->{$key};
  }
  # Nexus 5k/6k - Memory leak in pfstat process causing hap reset CSCur11599
  # Nexus 6.x crashen, wenn man ifIndex abfragt. Kein Kommentar
  $self->{ifIndex} = $self->{flat_indices} if ! exists $self->{ifIndex};
  $self->{ifDescr} = unpack("Z*", $self->{ifDescr}); # windows has trailing nulls
  if ($self->opts->name2 && $self->opts->name2 =~ /\(\.\*\?*\)/) {
    if ($self->{ifDescr} =~ $self->opts->name2) {
      $self->{ifDescr} = $1;
    }
  }
  if ($self->mode =~ /device::interfaces::duplex/) {
  } elsif ($self->mode =~ /device::interfaces::uptime/) {
    $self->{sysUptime} = $self->get_snmp_object('MIB-2-MIB', 'sysUpTime', 0) / 100;
    $self->{sysUptime64} = $self->uptime();
  } else {
    # Manche Stinkstiefel haben ifName, ifHighSpeed und z.b. ifInMulticastPkts,
    # aber keine ifHC*Octets. Gesehen bei Cisco Switch Interface Nul0 o.ae.
    if ($self->{ifName} && defined $self->{ifHCInOctets} && 
        defined $self->{ifHCOutOctets} && $self->{ifHCInOctets} ne "noSuchObject") {
      $self->{ifAlias} ||= $self->{ifName};
      $self->{ifName} = unpack("Z*", $self->{ifName});
      $self->{ifAlias} = unpack("Z*", $self->{ifAlias});
      $self->{ifAlias} =~ s/\|/!/g if $self->{ifAlias};
      bless $self, 'Classes::IFMIB::Component::InterfaceSubsystem::Interface::64bit';
    }
    if ((! exists $self->{ifInOctets} && ! exists $self->{ifOutOctets} &&
        $self->mode =~ /device::interfaces::(usage|complete)/) ||
        (! exists $self->{ifInErrors} && ! exists $self->{ifOutErrors} &&
        $self->mode =~ /device::interfaces::(errors|complete)/) ||
        (! exists $self->{ifInDiscards} && ! exists $self->{ifOutDiscards} &&
        $self->mode =~ /device::interfaces::(discards|complete)/) ||
        (! exists $self->{ifInUcastPkts} && ! exists $self->{ifOutUcastPkts} &&
        $self->mode =~ /device::interfaces::(broadcast|complete)/)) {
      bless $self, 'Classes::IFMIB::Component::InterfaceSubsystem::Interface::StackSub';
    }
    if ($self->{ifPhysAddress}) {
      $self->{ifPhysAddress} = join(':', unpack('(H2)*', $self->{ifPhysAddress})); 
    }
  }
  $self->init();
}

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::interfaces::complete/) {
    # uglatto, but $self->mode is an lvalue
    $Monitoring::GLPlugin::mode = "device::interfaces::operstatus";
    $self->init();
    if ($self->{ifOperStatus} eq "up") {
      foreach my $mode (qw(device::interfaces::usage
          device::interfaces::errors device::interfaces::discards
          device::interfaces::broadcasts)) {
        $Monitoring::GLPlugin::mode = $mode;
        $self->init();
      }
    }
    $Monitoring::GLPlugin::mode = "device::interfaces::complete";
  } elsif ($self->mode =~ /device::interfaces::usage/) {
    $self->valdiff({name => $self->{ifIndex}.'#'.$self->{ifDescr}}, qw(ifInOctets ifOutOctets));
    $self->{delta_ifInBits} = $self->{delta_ifInOctets} * 8;
    $self->{delta_ifOutBits} = $self->{delta_ifOutOctets} * 8;
    if ($self->{ifSpeed} == 0) {
      # vlan graffl
      $self->{inputUtilization} = 0;
      $self->{outputUtilization} = 0;
      $self->{maxInputRate} = 0;
      $self->{maxOutputRate} = 0;
    } else {
      $self->{inputUtilization} = 100 * $self->{delta_ifInBits} /
          ($self->{delta_timestamp} * $self->{ifSpeed});
      $self->{outputUtilization} = 100 * $self->{delta_ifOutBits} /
          ($self->{delta_timestamp} * $self->{ifSpeed});
      $self->{maxInputRate} = $self->{ifSpeed};
      $self->{maxOutputRate} = $self->{ifSpeed};
    }
    if (defined $self->opts->ifspeed) {
      $self->override_opt('ifspeedin', $self->opts->ifspeed);
      $self->override_opt('ifspeedout', $self->opts->ifspeed);
    }
    if (defined $self->opts->ifspeedin) {
      $self->{inputUtilization} = 100 * $self->{delta_ifInBits} /
          ($self->{delta_timestamp} * $self->opts->ifspeedin);
      $self->{maxInputRate} = $self->opts->ifspeedin;
    }
    if (defined $self->opts->ifspeedout) {
      $self->{outputUtilization} = 100 * $self->{delta_ifOutBits} /
          ($self->{delta_timestamp} * $self->opts->ifspeedout);
      $self->{maxOutputRate} = $self->opts->ifspeedout;
    }
    $self->{inputRate} = $self->{delta_ifInBits} / $self->{delta_timestamp};
    $self->{outputRate} = $self->{delta_ifOutBits} / $self->{delta_timestamp};
    $self->override_opt("units", "bit") if ! $self->opts->units;
    $self->{inputRate} /= $self->number_of_bits($self->opts->units);
    $self->{outputRate} /= $self->number_of_bits($self->opts->units);
    $self->{maxInputRate} /= $self->number_of_bits($self->opts->units);
    $self->{maxOutputRate} /= $self->number_of_bits($self->opts->units);
    if ($self->{ifOperStatus} eq 'down') {
      $self->{inputUtilization} = 0;
      $self->{outputUtilization} = 0;
      $self->{inputRate} = 0;
      $self->{outputRate} = 0;
      $self->{maxInputRate} = 0;
      $self->{maxOutputRate} = 0;
    }
  } elsif ($self->mode =~ /device::interfaces::errors/) {
    $self->valdiff({name => $self->{ifDescr}}, qw(ifInErrors ifOutErrors));
    $self->{inputErrorRate} = $self->{delta_ifInErrors} 
        / $self->{delta_timestamp};
    $self->{outputErrorRate} = $self->{delta_ifOutErrors} 
        / $self->{delta_timestamp};
  } elsif ($self->mode =~ /device::interfaces::discards/) {
    $self->valdiff({name => $self->{ifDescr}}, qw(ifInDiscards ifOutDiscards));
    $self->{inputDiscardRate} = $self->{delta_ifInDiscards} 
        / $self->{delta_timestamp};
    $self->{outputDiscardRate} = $self->{delta_ifOutDiscards} 
        / $self->{delta_timestamp};
  } elsif ($self->mode =~ /device::interfaces::broadcasts/) {
    foreach my $key (qw(ifInUcastPkts
        ifInMulticastPkts ifInBroadcastPkts ifOutUcastPkts
        ifOutMulticastPkts ifOutBroadcastPkts)) {
      $self->{$key} = 0 if (! exists $self->{$key} || ! defined $self->{$key});
    }
    $self->valdiff({name => $self->{ifDescr}}, qw(ifInUcastPkts
        ifInMulticastPkts ifInBroadcastPkts ifOutUcastPkts
        ifOutMulticastPkts ifOutBroadcastPkts));
    $self->{broadcastInPercent} = $self->{delta_ifInBroadcastPkts} == 0 ? 0 :
        100 * $self->{delta_ifInBroadcastPkts} /
        ($self->{delta_ifInUcastPkts} + $self->{delta_ifInMulticastPkts} +
        $self->{delta_ifInBroadcastPkts});
    $self->{broadcastOutPercent} = $self->{delta_ifOutBroadcastPkts} == 0 ? 0 :
        100 * $self->{delta_ifOutBroadcastPkts} /
        ($self->{delta_ifOutUcastPkts} + $self->{delta_ifOutMulticastPkts} +
        $self->{delta_ifOutBroadcastPkts});
  } elsif ($self->mode =~ /device::interfaces::operstatus/) {
  } elsif ($self->mode =~ /device::interfaces::availability/) {
    $self->{ifStatusDuration} = 
        $self->uptime() - $self->timeticks($self->{ifLastChange});
    $self->opts->override_opt('lookback', 1800) if ! $self->opts->lookback;
    if ($self->{ifAdminStatus} eq "down") {
      $self->{ifAvailable} = "true";
    } elsif ($self->{ifAdminStatus} eq "up" && $self->{ifOperStatus} ne "up" &&
        $self->{ifStatusDuration} > $self->opts->lookback) {
      # and ifLastChange schon ein wenig laenger her
      $self->{ifAvailable} = "true";
    } else {
      $self->{ifAvailable} = "false";
    }
    my $gb = 1000 * 1000 * 1000;
    my $mb = 1000 * 1000;
    my $kb = 1000;
    my $speed = $self->{ifHighSpeed} ? 
        ($self->{ifHighSpeed} * $mb) : $self->{ifSpeed};
    if ($speed >= $gb) {
      $self->{ifSpeedText} = sprintf "%.2fGB", $speed / $gb;
    } elsif ($speed >= $mb) {
      $self->{ifSpeedText} = sprintf "%.2fMB", $speed / $mb;
    } elsif ($speed >= $kb) {
      $self->{ifSpeedText} = sprintf "%.2fKB", $speed / $kb;
    } else {
      $self->{ifSpeedText} = sprintf "%.2fB", $speed;
    }
    $self->{ifSpeedText} =~ s/\.00//g;
  } elsif ($self->mode =~ /device::interfaces::uptime/) {
    $self->{ifLastChangeRaw} = $self->{ifLastChange};
    $self->{ifLastChange} = time -
        $self->ago_sysuptime($self->{ifLastChange});
    # Alter Text:
    # Wenn sysUptime ueberlaeuft, dann wird's schwammig. Denn dann kann
    # ich nicht sagen, ob ein ifLastChange ganz am Anfang passiert ist,
    # unmittelbar nach dem Booten, oder grad eben vor drei Minuten, als
    # der Ueberlauf stattfand. Ergo ist dieser Mode nach einer Uptime von
    # 497 Tagen nicht mehr brauchbar.
    # Und tatsaechlich gibt es Typen die lassen ihre Switche in den
    # Filialen ueber ein Jahr durchlaufen und machen dann reihenweise Tickets auf.
    # boot                   ifchange1  overflow  ifchange2
    # |                      |          |         |
    # |---------------------------------^---------------------------------^-----
    #                                          |
    #                                          check
    # Zum Zeitpunkt des Checks ist ifchange1 groesser als die sysUptime
    # Damit wird ifLastChange negativ.
    # Eine Chance gibts dann noch, man geht davon aus, dass das der
    # einzige Overflow war (tatsaechlich koennten ja mehrere passiert sein)
    # Also: max(32bit) - ifchange1 + sysUptime
    # ago_sysuptime fackelt das ganz gut ab.
    $self->{ifLastChangeHuman} = scalar localtime $self->{ifLastChange};
    $self->{ifDuration} = time - $self->{ifLastChange};
    $self->{ifDurationMinutes} = $self->{ifDuration} / 60; # minutes
  }
  return $self;
}

sub init_etherstats {
  my ($self) = @_;
  if ($self->mode =~ /device::interfaces::etherstats/) {
    $Monitoring::GLPlugin::mode = "device::interfaces::broadcasts";
    $self->init();
    $Monitoring::GLPlugin::mode = "device::interfaces::etherstats";
    # in the beginning we start 32/64bit-unaware, so columns contain
    # also ifHC-names, but there are no such attributes in the interface object
    @{$self->{columns}} = grep {
      ! /^ifHC(In|Out).*castPkts$/
    } grep {
      ! /^(ifOperStatus|ifAdminStatus|ifIndex|ifDescr|ifAlias|ifName)$/
    } @{$self->{columns}};
    # z.b. Serial2/3/2 in Singapore, broadcastet nicht
    my $ident = $self->{ifDescr}.md5_hex(join('_', @{$self->{columns}}));
    $self->valdiff({name => $ident}, @{$self->{columns}});
    $self->{delta_InPkts} = $self->{delta_ifInUcastPkts} +
        $self->{delta_ifInMulticastPkts} + $self->{delta_ifInBroadcastPkts};
    $self->{delta_OutPkts} = $self->{delta_ifOutUcastPkts} +
        $self->{delta_ifOutMulticastPkts} + $self->{delta_ifOutBroadcastPkts};
    for my $stat (grep { /^(dot3|etherStats)/ } @{$self->{columns}}) {
      next if ! defined $self->{'delta_'.$stat};
      $self->{$stat.'Percent'} = $self->{delta_InPkts} + $self->{delta_OutPkts} ?
          100 * $self->{'delta_'.$stat} /
          ($self->{delta_InPkts} + $self->{delta_OutPkts}) : 0;
    }
  } elsif ($self->mode =~ /device::interfaces::duplex/) {
    if (defined $self->{dot3StatsDuplexStatus}) {
    } elsif (! defined $self->{dot3StatsDuplexStatus} && $self->{ifType} !~ /ether/i) {
        $self->{dot3StatsDuplexStatus} = "notApplicable";
    } elsif (! defined $self->{dot3StatsDuplexStatus} && $self->implements_mib('EtherLike-MIB')) {
      if (defined $self->opts->mitigation() &&
          $self->opts->mitigation() eq 'ok') {
        $self->{dot3StatsDuplexStatus} = "fullDuplex";
      } else {
        $self->{dot3StatsDuplexStatus} = "unknown";
      }
    } else {
      $self->{dot3StatsDuplexStatus} = "unknown";
    }
  }
  return $self;
}

sub check {
  my ($self) = @_;
  my $full_descr = sprintf "%s%s%s",
      $self->{ifDescr},
      $self->{ifAlias} && $self->{ifAlias} ne $self->{ifDescr} ?
          " (alias ".$self->{ifAlias}.")" : "",
      $self->{ifAddresses} ? " (addresses ".$self->{ifAddresses}.")" : "";
  if ($self->mode =~ /device::interfaces::complete/) {
    # uglatto, but $self->mode is an lvalue
    $Monitoring::GLPlugin::mode = "device::interfaces::operstatus";
    $self->check();
    if ($self->{ifOperStatus} eq "up") {
          # kostenpflichtiges feature # device::interfaces::duplex
      foreach my $mode (qw(device::interfaces::usage
          device::interfaces::errors device::interfaces::discards
          device::interfaces::broadcast)) {
        $Monitoring::GLPlugin::mode = $mode;
        $self->check();
      }
    }
    $Monitoring::GLPlugin::mode = "device::interfaces::complete";
  } elsif ($self->mode =~ /device::interfaces::usage/) {
    $self->add_info(sprintf 'interface %s usage is in:%.2f%% (%s) out:%.2f%% (%s)%s',
        $full_descr,
        $self->{inputUtilization}, 
        sprintf("%.2f%s/s", $self->{inputRate}, $self->opts->units),
        $self->{outputUtilization},
        sprintf("%.2f%s/s", $self->{outputRate}, $self->opts->units),
        $self->{ifOperStatus} eq 'down' ? ' (down)' : '');
    $self->set_thresholds(
        metric => $self->{ifDescr}.'_usage_in',
        warning => 80,
        critical => 90
    );
    my $in = $self->check_thresholds(
        metric => $self->{ifDescr}.'_usage_in',
        value => $self->{inputUtilization}
    );
    $self->set_thresholds(
        metric => $self->{ifDescr}.'_usage_out',
        warning => 80,
        critical => 90
    );
    my $out = $self->check_thresholds(
        metric => $self->{ifDescr}.'_usage_out',
        value => $self->{outputUtilization}
    );
    my $level = ($in > $out) ? $in : ($out > $in) ? $out : $in;
    $self->add_message($level);
    $self->add_perfdata(
        label => $self->{ifDescr}.'_usage_in',
        value => $self->{inputUtilization},
        uom => '%',
    );
    $self->add_perfdata(
        label => $self->{ifDescr}.'_usage_out',
        value => $self->{outputUtilization},
        uom => '%',
    );
    my ($inwarning, $incritical) = $self->get_thresholds(
        metric => $self->{ifDescr}.'_usage_in',
    );
    $self->set_thresholds(
        metric => $self->{ifDescr}.'_traffic_in',
        warning => $self->{maxInputRate} / 100 * $inwarning,
        critical => $self->{maxInputRate} / 100 * $incritical
    );
    $self->add_perfdata(
        label => $self->{ifDescr}.'_traffic_in',
        value => $self->{inputRate},
        uom => $self->opts->units =~ /^(B|KB|MB|GB|TB)$/ ? $self->opts->units : undef,
        places => 2,
        min => 0,
        max => $self->{maxInputRate},
    );
    my ($outwarning, $outcritical) = $self->get_thresholds(
        metric => $self->{ifDescr}.'_usage_out',
    );
    $self->set_thresholds(
        metric => $self->{ifDescr}.'_traffic_out',
        warning => $self->{maxOutputRate} / 100 * $outwarning,
        critical => $self->{maxOutputRate} / 100 * $outcritical,
    );
    $self->add_perfdata(
        label => $self->{ifDescr}.'_traffic_out',
        value => $self->{outputRate},
        uom => $self->opts->units =~ /^(B|KB|MB|GB|TB)$/ ? $self->opts->units : undef,
        places => 2,
        min => 0,
        max => $self->{maxOutputRate},
    );
  } elsif ($self->mode =~ /device::interfaces::errors/) {
    $self->add_info(sprintf 'interface %s errors in:%.2f/s out:%.2f/s ',
        $full_descr,
        $self->{inputErrorRate} , $self->{outputErrorRate});
    $self->set_thresholds(
        metric => $self->{ifDescr}.'_errors_in',
        warning => 1,
        critical => 10
    );
    my $in = $self->check_thresholds(
        metric => $self->{ifDescr}.'_errors_in',
        value => $self->{inputErrorRate}
    );
    $self->set_thresholds(
        metric => $self->{ifDescr}.'_errors_out',
        warning => 1,
        critical => 10
    );
    my $out = $self->check_thresholds(
        metric => $self->{ifDescr}.'_errors_out',
        value => $self->{outputErrorRate}
    );
    my $level = ($in > $out) ? $in : ($out > $in) ? $out : $in;
    $self->add_message($level);
    $self->add_perfdata(
        label => $self->{ifDescr}.'_errors_in',
        value => $self->{inputErrorRate},
    );
    $self->add_perfdata(
        label => $self->{ifDescr}.'_errors_out',
        value => $self->{outputErrorRate},
    );
  } elsif ($self->mode =~ /device::interfaces::discards/) {
    $self->add_info(sprintf 'interface %s discards in:%.2f/s out:%.2f/s ',
        $full_descr,
        $self->{inputDiscardRate} , $self->{outputDiscardRate});
    $self->set_thresholds(
        metric => $self->{ifDescr}.'_discards_in',
        warning => 1,
        critical => 10
    );
    my $in = $self->check_thresholds(
        metric => $self->{ifDescr}.'_discards_in',
        value => $self->{inputDiscardRate}
    );
    $self->set_thresholds(
        metric => $self->{ifDescr}.'_discards_out',
        warning => 1,
        critical => 10
    );
    my $out = $self->check_thresholds(
        metric => $self->{ifDescr}.'_discards_out',
        value => $self->{outputDiscardRate}
    );
    my $level = ($in > $out) ? $in : ($out > $in) ? $out : $in;
    $self->add_message($level);
    $self->add_perfdata(
        label => $self->{ifDescr}.'_discards_in',
        value => $self->{inputDiscardRate},
    );
    $self->add_perfdata(
        label => $self->{ifDescr}.'_discards_out',
        value => $self->{outputDiscardRate},
    );
  } elsif ($self->mode =~ /device::interfaces::broadcast/) {
    $self->add_info(sprintf 'interface %s broadcast in:%.2f%% out:%.2f%% ',
        $full_descr,
        $self->{broadcastInPercent} , $self->{broadcastOutPercent});
    $self->set_thresholds(
        metric => $self->{ifDescr}.'_broadcast_in',
        warning => 10,
        critical => 20
    );
    my $in = $self->check_thresholds(
        metric => $self->{ifDescr}.'_broadcast_in',
        value => $self->{broadcastInPercent}
    );
    $self->set_thresholds(
        metric => $self->{ifDescr}.'_broadcast_out',
        warning => 10,
        critical => 20
    );
    my $out = $self->check_thresholds(
        metric => $self->{ifDescr}.'_broadcast_out',
        value => $self->{broadcastOutPercent}
    );
    my $level = ($in > $out) ? $in : ($out > $in) ? $out : $in;
    $self->add_message($level);
    $self->add_perfdata(
        label => $self->{ifDescr}.'_broadcast_in',
        value => $self->{broadcastInPercent},
        uom => '%',
    );
    $self->add_perfdata(
        label => $self->{ifDescr}.'_broadcast_out',
        value => $self->{broadcastOutPercent},
        uom => '%',
    );
  } elsif ($self->mode =~ /device::interfaces::operstatus/) {
    #rfc2863
    #(1)   if ifAdminStatus is not down and ifOperStatus is down then a
    #     fault condition is presumed to exist on the interface.
    #(2)   if ifAdminStatus is down, then ifOperStatus will normally also
    #     be down (or notPresent) i.e., there is not (necessarily) a
    #     fault condition on the interface.
    # --warning onu,anu
    # Admin: admindown,admin
    # Admin: --warning 
    #        --critical admindown
    # !ad+od  ad+!(od*on)
    # warn & warnbitfield
#    if ($self->opts->critical) {
#      if ($self->opts->critical =~ /^u/) {
#      } elsif ($self->opts->critical =~ /^u/) {
#      }
#    }
#    if ($self->{ifOperStatus} ne 'up') {
#      }
#    } 
    $self->add_info(sprintf '%s is %s/%s',
        $full_descr,
        $self->{ifOperStatus}, $self->{ifAdminStatus});
    $self->add_ok();
    if ($self->{ifOperStatus} eq 'down' && $self->{ifAdminStatus} ne 'down') {
      $self->add_critical(
          sprintf 'fault condition is presumed to exist on %s',
          $full_descr);
    }
    if ($self->{ifAdminStatus} eq 'down') {
      $self->add_message(
          defined $self->opts->mitigation() ? $self->opts->mitigation() : 2,
          sprintf '%s is admin down', $full_descr);
    }
  } elsif ($self->mode =~ /device::interfaces::availability/) {
    $self->{ifStatusDuration} = 
        $self->human_timeticks($self->{ifStatusDuration});
    $self->add_info(sprintf '%s is %savailable (%s/%s, since %s)',
        $self->{ifDescr}, ($self->{ifAvailable} eq "true" ? "" : "un"),
        $self->{ifOperStatus}, $self->{ifAdminStatus},
        $self->{ifStatusDuration});
  } elsif ($self->mode =~ /device::interfaces::etherstats/) {
    for my $stat (grep { /^(dot3|etherStats)/ } @{$self->{columns}}) {
      next if ! defined $self->{$stat.'Percent'};
      my $label = $stat.'Percent';
      $label =~ s/^(dot3Stats|etherStats)//g;
      $label =~ s/(?:\b|(?<=([a-z])))([A-Z][a-z]+)/(defined($1) ? "_" : "") . lc($2)/eg;
      $label = $self->{ifDescr}.'_'.$label;
      $self->add_info(sprintf 'interface %s %s is %.2f%%',
          $full_descr, $stat.'Percent', $self->{$stat.'Percent'});
      $self->set_thresholds(
          metric => $label,
          warning => 1,
          critical => 10
      );
      $self->add_message(
          $self->check_thresholds(metric => $label, value => $self->{$stat.'Percent'}));
      $self->add_perfdata(
          label => $label,
          value => $self->{$stat.'Percent'},
          uom => '%',
      );
    }
  } elsif ($self->mode =~ /device::interfaces::duplex/) {
    $self->add_info(sprintf "%s duplex status is %s",
        $self->{ifDescr}, $self->{dot3StatsDuplexStatus}
    );
    if ($self->{ifOperStatus} ne "up") {
      $self->annotate_info(sprintf "oper %s", $self->{ifOperStatus});
      $self->add_ok();
    } elsif ($self->{dot3StatsDuplexStatus} eq "notApplicable") {
      $self->add_ok();
    } else {
      if ($self->{dot3StatsDuplexStatus} eq "unknown") {
        $self->add_unknown();
      } elsif ($self->{dot3StatsDuplexStatus} eq "fullDuplex") {
        $self->add_ok();
      } else {
        # kein critical, weil so irgendwie funktionierts ja
        $self->add_warning();
      }
    }
  } elsif ($self->mode =~ /device::interfaces::uptime/) {
    $self->add_info(sprintf "%s was changed %s ago",
        $full_descr, $self->human_timeticks($self->{ifDuration}));
    $self->set_thresholds(metric => $self->{ifDescr}."_duration",
        warning => "15:", critical => "5:");
    $self->add_message($self->check_thresholds(
        metric => $self->{ifDescr}."_duration",
        value => $self->{ifDurationMinutes}));
    $self->add_perfdata(
        label => $self->{ifDescr}."_duration",
        value => $self->{ifDurationMinutes},
    );
  }
}

sub list {
  my ($self) = @_;
  if ($self->mode =~ /device::interfaces::listdetail/) {
    my $cL2L3IfModeOper = $self->get_snmp_object('CISCO-L2L3-INTERFACE-CONFIG-MIB', 'cL2L3IfModeOper', $self->{ifIndex}) || "unknown";
    my $vlanTrunkPortDynamicStatus = $self->get_snmp_object('CISCO-VTP-MIB', 'vlanTrunkPortDynamicStatus', $self->{ifIndex}) || "unknown";
    printf "%06d %s %s %s %s\n", $self->{ifIndex}, $self->{ifDescr}, $self->{ifAlias},
        $cL2L3IfModeOper, $vlanTrunkPortDynamicStatus;
  } else {
    printf "%06d %s\n", $self->{ifIndex}, $self->{ifDescr};
  }
}


package Classes::IFMIB::Component::InterfaceSubsystem::Interface::64bit;
our @ISA = qw(Classes::IFMIB::Component::InterfaceSubsystem::Interface);
use strict;
use Digest::MD5 qw(md5_hex);

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::interfaces::usage/) {
    $self->valdiff({name => $self->{ifIndex}.'#'.$self->{ifDescr}}, qw(ifHCInOctets ifHCOutOctets));
    $self->{delta_ifInBits} = $self->{delta_ifHCInOctets} * 8;
    $self->{delta_ifOutBits} = $self->{delta_ifHCOutOctets} * 8;
    # ifSpeed = Bits/sec
    # ifHighSpeed = 1000000Bits/sec
    if ($self->{ifSpeed} == 0) {
      # vlan graffl
      $self->{inputUtilization} = 0;
      $self->{outputUtilization} = 0;
      $self->{maxInputRate} = 0;
      $self->{maxOutputRate} = 0;
    } elsif ($self->{ifSpeed} == 4294967295) {
      $self->{maxInputRate} = $self->{ifHighSpeed} * 1000000;
      $self->{maxOutputRate} = $self->{ifHighSpeed} * 1000000;
      $self->{inputUtilization} = 100 * $self->{delta_ifInBits} /
          ($self->{delta_timestamp} * $self->{maxInputRate});
      $self->{outputUtilization} = 100 * $self->{delta_ifOutBits} /
          ($self->{delta_timestamp} * $self->{maxOutputRate});
    } else {
      $self->{maxInputRate} = $self->{ifSpeed};
      $self->{maxOutputRate} = $self->{ifSpeed};
      $self->{inputUtilization} = 100 * $self->{delta_ifInBits} /
          ($self->{delta_timestamp} * $self->{maxInputRate});
      $self->{outputUtilization} = 100 * $self->{delta_ifOutBits} /
          ($self->{delta_timestamp} * $self->{maxOutputRate});
    }
    if (defined $self->opts->ifspeed) {
      $self->override_opt('ifspeedin', $self->opts->ifspeed);
      $self->override_opt('ifspeedout', $self->opts->ifspeed);
    }
    if (defined $self->opts->ifspeedin) {
      $self->{inputUtilization} = 100 * $self->{delta_ifInBits} /
          ($self->{delta_timestamp} * $self->opts->ifspeedin);
      $self->{maxInputRate} = $self->opts->ifspeedin;
    }
    if (defined $self->opts->ifspeedout) {
      $self->{outputUtilization} = 100 * $self->{delta_ifOutBits} /
          ($self->{delta_timestamp} * $self->opts->ifspeedout);
      $self->{maxOutputRate} = $self->opts->ifspeedout;
    }
    $self->{inputRate} = $self->{delta_ifInBits} / $self->{delta_timestamp};
    $self->{outputRate} = $self->{delta_ifOutBits} / $self->{delta_timestamp};
    $self->override_opt("units", "bit") if ! $self->opts->units;
    $self->{inputRate} /= $self->number_of_bits($self->opts->units);
    $self->{outputRate} /= $self->number_of_bits($self->opts->units);
    $self->{maxInputRate} /= $self->number_of_bits($self->opts->units);
    $self->{maxOutputRate} /= $self->number_of_bits($self->opts->units);
    if ($self->{ifOperStatus} eq 'down') {
      $self->{inputUtilization} = 0;
      $self->{outputUtilization} = 0;
      $self->{inputRate} = 0;
      $self->{outputRate} = 0;
      $self->{maxInputRate} = 0;
      $self->{maxOutputRate} = 0;
    }
  } elsif ($self->mode =~ /device::interfaces::broadcasts/) {
    foreach my $key (qw(
        ifHCInUcastPkts ifHCInMulticastPkts ifHCInBroadcastPkts
        ifHCOutUcastPkts ifHCOutMulticastPkts ifHCOutBroadcastPkts)) {
      $self->{$key} = 0 if (! exists $self->{$key} || ! defined $self->{$key});
    }
    $self->valdiff({name => $self->{ifDescr}}, qw(
        ifHCInUcastPkts ifHCInMulticastPkts ifHCInBroadcastPkts
        ifHCOutUcastPkts ifHCOutMulticastPkts ifHCOutBroadcastPkts));
    $self->{broadcastInPercent} = $self->{delta_ifHCInBroadcastPkts} == 0 ? 0 :
        100 * $self->{delta_ifHCInBroadcastPkts} /
        ($self->{delta_ifHCInUcastPkts} + $self->{delta_ifHCInMulticastPkts} +
        $self->{delta_ifHCInBroadcastPkts});
    $self->{broadcastOutPercent} = $self->{delta_ifHCOutBroadcastPkts} == 0 ? 0 :
        100 * $self->{delta_ifHCOutBroadcastPkts} /
        ($self->{delta_ifHCOutUcastPkts} + $self->{delta_ifHCOutMulticastPkts} +
        $self->{delta_ifHCOutBroadcastPkts});
  } else {
    $self->SUPER::init();
  }
  return $self;
}

sub init_etherstats {
  my ($self) = @_;
  if ($self->mode =~ /device::interfaces::etherstats/) {
    $Monitoring::GLPlugin::mode = "device::interfaces::broadcasts";
    $self->init();
    $Monitoring::GLPlugin::mode = "device::interfaces::etherstats";
    # 32bit-cast ausputzen. es gibt welche, die haben nur 64bit
    @{$self->{columns}} = grep {
      ! /^if(In|Out).*castPkts$/
    } grep {
      ! /^(ifOperStatus|ifAdminStatus|ifIndex|ifDescr|ifAlias|ifName)$/
    } @{$self->{columns}};
    my $ident = $self->{ifDescr}.md5_hex(join('_', @{$self->{columns}}));
    $self->valdiff({name => $ident}, @{$self->{columns}});
    $self->{delta_InPkts} = $self->{delta_ifHCInUcastPkts} +
        $self->{delta_ifHCInMulticastPkts} + $self->{delta_ifHCInBroadcastPkts};
    $self->{delta_OutPkts} = $self->{delta_ifHCOutUcastPkts} +
        $self->{delta_ifHCOutMulticastPkts} + $self->{delta_ifHCOutBroadcastPkts};
    for my $stat (grep { /^(dot3|etherStats)/ } @{$self->{columns}}) {
      next if ! defined $self->{'delta_'.$stat};
      $self->{$stat.'Percent'} = $self->{delta_InPkts} + $self->{delta_OutPkts} ?
          100 * $self->{'delta_'.$stat} / 
          ($self->{delta_InPkts} + $self->{delta_OutPkts}) : 0;
    }
  }
  return $self;
}

package Classes::IFMIB::Component::InterfaceSubsystem::Interface::StackSub;
our @ISA = qw(Classes::IFMIB::Component::InterfaceSubsystem::Interface);
use strict;

sub init {
  my ($self) = @_;
}

sub init_etherstats {
  my ($self) = @_;
  # hat sowieso keine broadcastcounter, ist sinnlos
}

sub check {
  my ($self) = @_;
  my $full_descr = sprintf "%s%s%s",
      $self->{ifDescr},
      $self->{ifAlias} && $self->{ifAlias} ne $self->{ifDescr} ?
          " (alias ".$self->{ifAlias}.")" : "",
      $self->{ifAddresses} ? " (addresses ".$self->{ifAddresses}.")" : "";
  if ($self->mode =~ /device::interfaces::operstatus/) {
    $self->SUPER::check();
  } elsif ($self->mode =~ /device::interfaces::duplex/) {
    $self->SUPER::check();
  } else {
    $self->add_ok(sprintf '%s has no traffic', $full_descr);
  }
}


package Classes::IFMIB::Component::InterfaceSubsystem::Address;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  # INDEX { ipAddressAddrType, ipAddressAddr }
  my @tmp_indices = @{$self->{indices}};
  my $last_tmp = scalar(@tmp_indices) - 1;
  # .1.3.6.1.2.1.4.24.7.1.7.1.4.0.0.0.0.32.2.0.0.1.4.10.208.143.81 = INTEGER: 25337
  # IP-FORWARD-MIB::inetCidrRouteIfIndex.ipv4."0.0.0.0".32.2.0.0.ipv4."10.208.143.81" = INTEGER: 25337
  # Frag mich jetzt keiner, warum dem ipv4 ein 1.4 entspricht. Ich kann
  # jedenfalls der IP-FORWARD-MIB bzw. RFC4001 nicht entnehmen, dass fuer
  # InetAddressType zwei Stellen des Index vorgesehen sind. Zumal nur die
  # erste Stelle für die Textual Convention relevant ist. Aergert mich ziemlich,
  # daß jeder bloede /usr/bin/snmpwalk das besser hinbekommt als ich.
  # Was dazugelernt: 1=InetAddressType, 4=gehoert zur folgenden InetAddressIPv4
  # und gibt die Laenge an. Noch mehr gelernt: wenn eine Table mit Integer und
  # Octet String indiziert ist, dann ist die Groeße des Octet String Bestandteil
  # der OID. Diese _kann_ weggelassen werden für den _letzten_ Index. Der ist
  # halt dann so lang wie der Rest der OID.
  # Mit einem IMPLIED-Keyword koennte die Laenge auch weggelassen werden.

  $self->{ipAddressAddrType} = $self->mibs_and_oids_definition(
      'INET-ADDRESS-MIB', 'InetAddressType', $tmp_indices[0]);
  shift @tmp_indices;

  $self->{ipAddressAddr} = $self->mibs_and_oids_definition(
      'INET-ADDRESS-MIB', 'InetAddressMaker',
      $self->{ipAddressAddrType}, @tmp_indices);
}

package Classes::IFMIB::Component::StackSubsystem;
our @ISA = qw(Classes::IFMIB::Component::InterfaceSubsystem);
use strict;


sub init {
  my ($self) = @_;
  my @iftable_columns = qw(ifDescr ifAlias ifOperStatus ifAdminStatus);
  $self->update_interface_cache(0);
  my @selected_indices = $self->get_interface_indices();
  if (! $self->opts->name) {
    # get_table erzwingen
    @selected_indices = ();
  } elsif (scalar(@selected_indices)) {
    @selected_indices = map { $_->[0] } @selected_indices;
  } else {
    @selected_indices = ();
  }
  $self->get_snmp_tables("IFMIB", [
      ['stacks', 'ifStackTable', 'Classes::IFMIB::Component::StackSubsystem::Relationship'],
  ]);
  my @higher_indices = ();
  my @lower_indices = ();
  foreach my $rel (@{$self->{stacks}}) {
    if (@selected_indices) {
      if (defined $rel->{ifStackLowerLayer} && grep { $rel->{ifStackHigherLayer} == $_ } @selected_indices) {
        #push(@higher_indices, $rel->{ifStackHigherLayer}) if $rel->{ifStackLowerLayer};
        push(@higher_indices, $rel->{ifStackHigherLayer});
        push(@lower_indices, $rel->{ifStackLowerLayer});
      }
    } else {
      if (defined $rel->{ifStackLowerLayer} && $rel->{ifStackHigherLayer}) {
        push(@higher_indices, $rel->{ifStackHigherLayer}) if $rel->{ifStackLowerLayer};
        push(@lower_indices, $rel->{ifStackLowerLayer});
      }
    }
  }
  @higher_indices = grep { $_ != 0 } keys %{{map {($_ => 1)} @higher_indices}};
  if (! @{$self->{stacks}} && @selected_indices) {
    # those which don't have a ifStackTable at all
    @higher_indices = @selected_indices;
  }
  @lower_indices = grep { $_ != 0 } keys %{{map {($_ => 1)} @lower_indices}};
  my @indices = map { [$_] } keys %{{map {($_ => 1)} (@higher_indices, @lower_indices, @selected_indices)}};
  $self->{interface_hash} = {};
  if (! $self->opts->name || scalar(@higher_indices) > 0) {
    foreach ($self->get_snmp_table_objects(
        'IFMIB', 'ifTable+ifXTable', @selected_indices ? \@indices : [], \@iftable_columns)) {
      my $interface = Classes::IFMIB::Component::InterfaceSubsystem::Interface->new(%{$_});
      $self->{interface_hash}->{$interface->{ifIndex}} = $interface;
      if (@selected_indices && grep { $interface->{ifIndex} == $_ } @selected_indices) {
        $interface->{lower_interfaces} = [];
        $interface->{stack_status} = [];
      } elsif (grep { $interface->{ifIndex} == $_ } @higher_indices) {
        $interface->{lower_interfaces} = [];
        $interface->{stack_status} = [];
      }
    }
  }
  #$self->arista_schlamperei();
  $self->link_stack_to_interfaces(@higher_indices);
}

sub link_stack_to_interfaces {
  my ($self, @higher_indices) = @_;
  $self->{interfaces} = [];
  foreach my $rel (@{$self->{stacks}}) {
    if ($rel->{ifStackHigherLayer} != 0 && grep { $rel->{ifStackHigherLayer} == $_ } @higher_indices) {
      if ($rel->{ifStackLowerLayer} == 0) {
        # sowas hier. 
        # IF-MIB::ifStackStatus.0.1000004 = INTEGER: active(1)
        # IF-MIB::ifStackStatus.1000004.0 = INTEGER: active(1)
        # IF-MIB::ifStackStatus.1000004.50 = INTEGER: active(1)
        # Arista macht sowas gelegentlich. Der mittlere, falsche Eintrag wird einfach ignoriert.
        # und noch so eine Besonderheit von Arista.
        # Die IF-MIB::ifStackStatus.1000004.[>0] verschwinden einfach, wenn die lower
        # Interfaces wegbrechen. Die Upper-Lower-Zuordnung ist dann nur noch
        # in der Konsole sichtbar.
        $self->{interface_hash}->{$rel->{ifStackHigherLayer}}->{ifStackStatus} = $rel->{ifStackStatus};
      } elsif (exists $self->{interface_hash}->{$rel->{ifStackHigherLayer}}) {
        push(@{$self->{interface_hash}->{$rel->{ifStackHigherLayer}}->{lower_interfaces}},
            $self->{interface_hash}->{$rel->{ifStackLowerLayer}});
        push(@{$self->{interface_hash}->{$rel->{ifStackHigherLayer}}->{stack_status}},
            $rel->{ifStackStatus});
      }
    }
  }
  @{$self->{interfaces}} = sort {
        $a->{ifIndex} <=> $b->{ifIndex}
  } values %{$self->{interface_hash}};
}

sub arista_schlamperei {
  my ($self) = @_;
  my @have_lower = map {
    $_->{ifStackHigherLayer}
  } grep {
    exists $self->{higher_interfaces}->{$_->{ifStackHigherLayer}}
  } grep {
    $_->{ifStackLowerLayer} != 0
  } @{$self->{stacks}};
  @{$self->{stacks}} = grep {
      my $ref = $_;
      ! ($ref->{ifStackLowerLayer} == 0 && grep /^$ref->{ifStackHigherLayer}$/, @have_lower)
  } @{$self->{stacks}};
}

sub check {
  my ($self) = @_;
 my @selected_interfaces = sort {
      $a->{ifIndex} <=> $b->{ifIndex}
  } grep {
      exists $_->{lower_interfaces}
  } @{$self->{interfaces}};
  if (! scalar (@{$self->{stacks}}) && ! scalar(@selected_interfaces)) {
    $self->add_ok("no portchannels found, ifStackTable is empty or unreadable");
  } elsif (! scalar(@selected_interfaces)) {
    $self->add_ok("no portchannels found");
  } else {
    foreach my $interface (@selected_interfaces) {
      # Liste der Sublayer Interfaces ist ggf. auch leer
      $interface->{lower_interfaces_ok} = [];
      $interface->{lower_interfaces_fail} = [];
      my $index = 0;
      foreach my $lower (@{$interface->{lower_interfaces}}) {
        if ($lower->{ifOperStatus} ne 'up' && $lower->{ifAdminStatus} ne 'down' &&
            $interface->{stack_status}->[$index] ne 'notInService') {
          push(@{$interface->{lower_interfaces_fail}}, $lower);
        } else {
          push(@{$interface->{lower_interfaces_ok}}, $lower);
        }
        $index++;
      }
      if ($self->mode =~ /device::interfaces::ifstack::status/) {
        if (! scalar (@{$interface->{lower_interfaces}})) {
          if ($interface->{ifAdminStatus} eq 'down') {
            $self->add_ok(sprintf '%s (%s) is admin down',
                $interface->{ifDescr},
                $interface->{ifAlias},
            );
          } elsif ($interface->{ifOperStatus} eq 'lowerLayerDown') {
            # Port-channel members are supposed to be down, for example
            # in a firewall cluster setup.
            # So this _could_ be a desired state. In order to allow this
            # state, it must be mitigated.
            $self->add_critical_mitigation(sprintf '%s%s has status lowerLayerDown and no sublayer interfaces',
                $interface->{ifDescr},
                $interface->{ifAlias} ? " (".$interface->{ifAlias}.")" : "",
            );
          } elsif (! $interface->{ifStackStatus} && $interface->{ifOperStatus} ne "up") {
            # there is no ifStackTable, ifOperStatus is the only info
            $self->add_warning(sprintf '%s%s has no stack status and no sub-layer interfaces. Oper status is %s',
                $interface->{ifDescr},
                $interface->{ifAlias} ? " (".$interface->{ifAlias}.")" : "",
                $interface->{ifOperStatus},
            );
          } elsif ($interface->{ifStackStatus} && $interface->{ifStackStatus} ne 'notInService') {
            $self->add_warning(sprintf '%s%s has stack status %s but no sub-layer interfaces. Oper status is %s',
                $interface->{ifDescr},
                $interface->{ifAlias} ? " (".$interface->{ifAlias}.")" : "",
                $interface->{ifStackStatus},
                $interface->{ifOperStatus},
            );
          } else {
            $self->add_ok(sprintf '%s%s oper status is %s',
                $interface->{ifDescr},
                $interface->{ifAlias} ? " (".$interface->{ifAlias}.")" : "",
                $interface->{ifOperStatus},
            );
          }
        } else {
          if (scalar(@{$interface->{lower_interfaces_fail}})) {
            foreach my $lower (@{$interface->{lower_interfaces_fail}}) {
              $self->add_critical(sprintf '%s%s has a sub-layer interface %s with status %s',
                  $interface->{ifDescr},
                  $interface->{ifAlias} ? " (".$interface->{ifAlias}.")" : "",
                  $lower->{ifDescr},
                  $lower->{ifOperStatus},
              );
            }
          } elsif ($interface->{ifOperStatus} eq 'lowerLayerDown') {
            # maybe something like what happens with Arista. Sub-Interface is configured
            # but as soon as it is broken, it disappears fromthe ifStackTable
            $self->add_critical_mitigation(sprintf '%s%s has status lowerLayerDown',
                $interface->{ifDescr},
                $interface->{ifAlias} ? " (".$interface->{ifAlias}.")" : "",
            );
          } else {
            $self->add_ok(sprintf 'interface %s%s has %d sub-layers',
                $interface->{ifDescr},
                $interface->{ifAlias} ? " (".$interface->{ifAlias}.")" : "",
                scalar(@{$interface->{lower_interfaces_ok}})
            );
          }
        }
      } elsif ($self->mode =~ /device::interfaces::ifstack::availability/) {
        my $lower_interfaces_ok = scalar(@{$interface->{lower_interfaces_ok}});
        my $lower_interfaces_all = scalar(@{$interface->{lower_interfaces_fail}}) + $lower_interfaces_ok;
        my $availability = $lower_interfaces_all ?
            (100 * $lower_interfaces_ok / $lower_interfaces_all) : 0;
        my $cavailability = $availability == int($availability) ?
            $availability + 1: int($availability + 1.0);
        $self->add_info(sprintf '%s has %d of %d running sub-layer interfaces, availability is %.2f%%',
            $interface->{ifDescr},
            $lower_interfaces_ok,
            $lower_interfaces_all,
            $availability);
        $self->set_thresholds(
            metric => 'aggr_'.$interface->{ifDescr}.'_availability',
            warning => '100:',
            critical => $cavailability.':'
        );
        $self->add_message($self->check_thresholds(
            metric => 'aggr_'.$interface->{ifDescr}.'_availability',
            value => $availability,
        ));
        $self->add_perfdata(
            label => 'aggr_'.$interface->{ifDescr}.'_availability',
            value => $availability,
            uom => '%',
        );
      }
    }
    my $num_portchannels = scalar(grep {
        exists $_->{lower_interfaces}
    } @{$self->{interfaces}});
    $self->reduce_messages_short(sprintf '%d portchannel%s working fine',
        $num_portchannels,
        $num_portchannels > 1 ? 's' : '',
    );
  }
}

package Classes::IFMIB::Component::StackSubsystem::Relationship;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);

sub finish {
  my ($self) = @_;
  $self->{ifStackHigherLayer} = $self->{indices}->[0];
  $self->{ifStackLowerLayer} = $self->{indices}->[1];
}

package Classes::IFMIB;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

package Classes::IPFORWARDMIB::Component::RoutingSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;
# plugins-scripts/check_nwc_health  --mode list-routes --snmpwalk walks/simon.snmpwalk
# ipRouteTable		1.3.6.1.2.1.4.21 
# replaced by
# ipForwardTable	1.3.6.1.2.1.4.24.2
# deprecated by
# ipCidrRouteTable	1.3.6.1.2.1.4.24.4
# deprecated by the ip4/6-neutral
# inetCidrRouteTable	1.3.6.1.2.1.4.24.7

sub init {
  my ($self) = @_;
  $self->implements_mib('INET-ADDRESS-MIB');
  $self->get_snmp_tables('IP-FORWARD-MIB', [
      ['routes', 'ipCidrRouteTable', 'Classes::IPFORWARDMIB::Component::RoutingSubsystem::ipCidrRoute',
          sub {
            my ($o) = @_;
            if ($o->opts->name && $o->opts->name =~ /\//) {
              my ($dest, $cidr) = split(/\//, $o->opts->name);
              my $bits = ( 2 ** (32 - $cidr) ) - 1;
              my ($full_mask) = unpack("N", pack("C4", split(/\./, '255.255.255.255')));
              my $netmask = join('.', unpack("C4", pack("N", ($full_mask ^ $bits))));
              return defined $o->{ipCidrRouteDest} && (
                  $o->filter_namex($dest, $o->{ipCidrRouteDest}) &&
                  $o->filter_namex($netmask, $o->{ipCidrRouteMask}) &&
                  $o->filter_name2($o->{ipCidrRouteNextHop})
              );
            } else {
              return defined $o->{ipCidrRouteDest} && (
                  $o->filter_name($o->{ipCidrRouteDest}) &&
                  $o->filter_name2($o->{ipCidrRouteNextHop})
              );
            }
          }
      ],
      ['routes', 'inetCidrRouteTable', 'Classes::IPFORWARDMIB::Component::RoutingSubsystem::inetCidrRoute',
          sub {
            my ($o) = @_;
            if ($o->opts->name && $o->opts->name =~ /\//) {
              my ($dest, $cidr) = split(/\//, $o->opts->name);
              return defined $o->{inetCidrRouteDest} && (
                  $o->filter_namex($dest, $o->{inetCidrRouteDest}) &&
                  $o->filter_namex($cidr, $o->{inetCidrRoutePfxLen}) &&
                  $o->filter_name2($o->{inetCidrRouteNextHop})
              );
            } else {
              return defined $o->{inetCidrRouteDest} && (
                  $o->filter_name($o->{inetCidrRouteDest}) &&
                  $o->filter_name2($o->{inetCidrRouteNextHop})
              );
            }
          }
      ],
  ]);
  # deprecated
  #$self->get_snmp_tables('IP-FORWARD-MIB', [
  #    ['routes', 'ipForwardTable', 'Classes::IPFORWARDMIB::Component::RoutingSubsystem::Route' ],
  #]);
  #$self->get_snmp_tables('IP-MIB', [
  #    ['routes', 'ipRouteTable', 'Classes::IPFORWARDMIB::Component::RoutingSubsystem::Route' ],
  #]);
  #
  # Hundsglump varreckts!!!!
  # Es gibt so Kandidaten, bei denen stecken die v6-Routen in der neuen
  # inetCidrRouteTable (was ja korrekt ist) und die v4-Routen in der
  # ipCidrRouteTable. Das war der Grund, weshalb beim get_snmp_tables
  # beide abgefragt werden und nicht wie frueher ein Fallback auf von inet
  # auf ip stattfindet, falls die inet leer ist.
  # Korrekt waere zumindest meiner Ansicht nach, wenn sowohl v4 als auch v6
  # in inetCidrRouteTable stuenden. Solche gibt es tatsaechlich auch.
  # Aber dank der Hornochsen bei Cisco mit ihrer o.g. Vorgehensweise darf ich
  # jetzt die Doubletten rausfieseln.
  my $found = {};
  @{$self->{routes}} = grep {
      if (exists $found->{$_->id()}) {
        return 0;
      } else {
        $found->{$_->id()} = 1;
	return 1;
      }
  } @{$self->{routes}};
}

sub check {
  my ($self) = @_;
  $self->add_info('checking routes');
  if ($self->mode =~ /device::routes::list/) {
    foreach (@{$self->{routes}}) {
      $_->list();
    }
    $self->add_ok("have fun");
  } elsif ($self->mode =~ /device::routes::count/) {
    if (! $self->opts->name && $self->opts->name2) {
      $self->add_info(sprintf "found %d routes via next hop %s",
          scalar(@{$self->{routes}}), $self->opts->name2);
    } elsif ($self->opts->name && ! $self->opts->name2) {
      $self->add_info(sprintf "found %d routes to dest %s",
          scalar(@{$self->{routes}}), $self->opts->name);
    } elsif ($self->opts->name && $self->opts->name2) {
      $self->add_info(sprintf "found %d routes to dest %s via hop %s",
          scalar(@{$self->{routes}}), $self->opts->name, $self->opts->name2);
    } else {
      $self->add_info(sprintf "found %d routes",
          scalar(@{$self->{routes}}));
    }
    $self->set_thresholds(warning => '1:', critical => '1:');
    $self->add_message($self->check_thresholds(scalar(@{$self->{routes}})));
    $self->add_perfdata(
        label => 'routes',
        value => scalar(@{$self->{routes}}),
    );
  } elsif ($self->mode =~ /device::routes::exists/) {
    # geht auch mit count-routes. irgendwann mal....
    $self->no_such_mode();
  }
}


package Classes::IPFORWARDMIB::Component::RoutingSubsystem::Route;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);

package Classes::IPFORWARDMIB::Component::RoutingSubsystem::ipRoute;
our @ISA = qw(Classes::IPFORWARDMIB::Component::RoutingSubsystem::Route);

package Classes::IPFORWARDMIB::Component::RoutingSubsystem::ipCidrRoute;
our @ISA = qw(Classes::IPFORWARDMIB::Component::RoutingSubsystem::Route);

sub finish {
  my ($self) = @_;
  if (! defined $self->{ipCidrRouteDest}) {
    # we can reconstruct a few attributes from the index
    # one customer only made ipCidrRouteStatus visible
    $self->{ipCidrRouteDest} = join(".", map { $self->{indices}->[$_] } (0, 1, 2, 3));
    $self->{ipCidrRouteMask} = join(".", map { $self->{indices}->[$_] } (4, 5, 6, 7));
    $self->{ipCidrRouteTos} = $self->{indices}->[8];
    $self->{ipCidrRouteNextHop} = join(".", map { $self->{indices}->[$_] } (9, 10, 11, 12));
    $self->{ipCidrRouteType} = "other"; # maybe not, who cares
    $self->{ipCidrRouteProto} = "other"; # maybe not, who cares
  }
}

sub list {
  my ($self) = @_;
  printf "%16s %16s %16s %11s %7s\n", 
      $self->{ipCidrRouteDest}, $self->{ipCidrRouteMask},
      $self->{ipCidrRouteNextHop}, $self->{ipCidrRouteProto},
      $self->{ipCidrRouteType};
}

sub id {
  my ($self) = @_;
  return sprintf "%s-%s", $self->{ipCidrRouteDest},
      $self->{ipCidrRouteNextHop};
}

package Classes::IPFORWARDMIB::Component::RoutingSubsystem::inetCidrRoute;
our @ISA = qw(Classes::IPFORWARDMIB::Component::RoutingSubsystem::Route);

sub finish {
  my ($self) = @_;
  # http://www.mibdepot.com/cgi-bin/vendor_index.cgi?r=ietf_rfcs
  # INDEX { inetCidrRouteDestType, inetCidrRouteDest, inetCidrRoutePfxLen, inetCidrRoutePolicy, inetCidrRouteNextHopType, inetCidrRouteNextHop }
  my @tmp_indices = @{$self->{indices}};
  my $last_tmp = scalar(@tmp_indices) - 1;
  # .1.3.6.1.2.1.4.24.7.1.7.1.4.0.0.0.0.32.2.0.0.1.4.10.208.143.81 = INTEGER: 25337
  # IP-FORWARD-MIB::inetCidrRouteIfIndex.ipv4."0.0.0.0".32.2.0.0.ipv4."10.208.143.81" = INTEGER: 25337
  # Frag mich jetzt keiner, warum dem ipv4 ein 1.4 entspricht. Ich kann
  # jedenfalls der IP-FORWARD-MIB bzw. RFC4001 nicht entnehmen, dass fuer
  # InetAddressType zwei Stellen des Index vorgesehen sind. Zumal nur die
  # erste Stelle für die Textual Convention relevant ist. Aergert mich ziemlich,
  # daß jeder bloede /usr/bin/snmpwalk das besser hinbekommt als ich.
  # Was dazugelernt: 1=InetAddressType, 4=gehoert zur folgenden InetAddressIPv4
  # und gibt die Laenge an. Noch mehr gelernt: wenn eine Table mit Integer und
  # Octet String indiziert ist, dann ist die Groeße des Octet String Bestandteil
  # der OID. Diese _kann_ weggelassen werden für den _letzten_ Index. Der ist
  # halt dann so lang wie der Rest der OID. 
  # Mit einem IMPLIED-Keyword koennte die Laenge auch weggelassen werden.

  $self->{inetCidrRouteDestType} = $self->mibs_and_oids_definition(
      'INET-ADDRESS-MIB', 'InetAddressType', $tmp_indices[0]);
  shift @tmp_indices;

  $self->{inetCidrRouteDest} = $self->mibs_and_oids_definition(
      'INET-ADDRESS-MIB', 'InetAddressMaker',
      $self->{inetCidrRouteDestType}, @tmp_indices);

  # laenge plus adresse weg
  splice @tmp_indices, 0, $tmp_indices[0]+1;

  $self->{inetCidrRoutePfxLen} = shift @tmp_indices;
  $self->{inetCidrRoutePolicy} = join(".", splice @tmp_indices, 0, $tmp_indices[0]+1);

  $self->{inetCidrRouteNextHopType} = $self->mibs_and_oids_definition(
      'INET-ADDRESS-MIB', 'InetAddressType', $tmp_indices[0]);
  shift @tmp_indices;

  $self->{inetCidrRouteNextHop} = $self->mibs_and_oids_definition(
      'INET-ADDRESS-MIB', 'InetAddressMaker',
      $self->{inetCidrRouteNextHopType}, @tmp_indices);

  if ($self->{inetCidrRouteDestType} eq "ipv4") {
  my $bits = ( 2 ** (32 - $self->{inetCidrRoutePfxLen}) ) - 1;
  my ($full_mask) = unpack("N", pack("C4", split(/\./, '255.255.255.255')));
  my $netmask = join('.', unpack("C4", pack("N", ($full_mask ^ $bits))));
  $self->{inetCidrRouteMask} = $netmask;
  }

}

sub list {
  my ($self) = @_;
  printf "%16s %16s %16s %11s %7s\n",
      $self->{inetCidrRouteDest}, $self->{inetCidrRoutePfxLen},
      $self->{inetCidrRouteNextHop}, $self->{inetCidrRouteProto},
      $self->{inetCidrRouteType};
}

sub id {
  my ($self) = @_;
  return sprintf "%s-%s", $self->{inetCidrRouteDest},
      $self->{inetCidrRouteNextHop};
}
package Classes::IPFORWARDMIB;
our @ISA = qw(Classes::Device);
use strict;

package Classes::IPMIB::Component::RoutingSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->{interfaces} = [];
  $self->get_snmp_tables('IP-MIB', [
      ['routes', 'ipRouteTable', 'Classes::IPMIB::Component::RoutingSubsystem::Route' ],
  ]);
}

sub check {
  my ($self) = @_;
  $self->add_info('checking routes');
  if ($self->mode =~ /device::routes::list/) {
    foreach (@{$self->{routes}}) {
      $_->list();
    }
    $self->add_ok("have fun");
  } elsif ($self->mode =~ /device::routes::count/) {
    if (! $self->opts->name && $self->opts->name2) {
      $self->add_info(sprintf "found %d routes via next hop %s",
          scalar(@{$self->{routes}}), $self->opts->name2);
    } elsif ($self->opts->name && ! $self->opts->name2) {
      $self->add_info(sprintf "found %d routes to dest %s",
          scalar(@{$self->{routes}}), $self->opts->name);
    } elsif ($self->opts->name && $self->opts->name2) {
      $self->add_info(sprintf "found %d routes to dest %s via hop %s",
          scalar(@{$self->{routes}}), $self->opts->name, $self->opts->name2);
    } else {
      $self->add_info(sprintf "found %d routes",
          scalar(@{$self->{routes}}));
    }
    $self->set_thresholds(warning => '1:', critical => '1:');
    $self->add_message($self->check_thresholds(scalar(@{$self->{routes}})));
    $self->add_perfdata(
        label => 'routes',
        value => scalar(@{$self->{routes}}),
    );
  }
}


package Classes::IPMIB::Component::RoutingSubsystem::Route;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);

package Classes::IPMIB;
our @ISA = qw(Classes::Device);
use strict;

package Classes::VRRPMIB::Component::VRRPSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use Data::Dumper;
use strict;

sub init {
  my ($self) = @_;
  $self->{groups} = [];
  $self->{assoc} = ();
  if ($self->mode =~ /device::vrrp/) {
    foreach ($self->get_snmp_table_objects(
  'VRRP-MIB', 'vrrpAssoIpAddrTable')) {
      my %entry = %{$_};
      my @index = @{$entry{indices}};
      my $key = shift(@index).'.'.shift(@index);
      my $ip = join ".", @index;
      push @{$self->{assoc}{$key}}, $ip;
    }
    foreach ($self->get_snmp_table_objects(
       'VRRP-MIB', 'vrrpOperTable')) {
      my %entry = %{$_};
      my $key = $entry{indices}->[0].".".$entry{indices}->[1];
      $entry{'vrrpAssocIpAddr'} = defined $self->{assoc}{$key} ? $self->{assoc}{$key} : [];

      my $group = Classes::VRRPMIB::Component::VRRPSubsystem::Group->new(%entry);
      if ($self->filter_name($group->{name}) &&
          $group->{'vrrpOperAdminState'} eq 'up') {
        push(@{$self->{groups}}, $group);
      }
    }
  }
}

sub check {
  my ($self) = @_;
  $self->add_info('checking vrrp groups');
  if ($self->mode =~ /device::vrrp::list/) {
    foreach (@{$self->{groups}}) {
      $_->list();
    }
  } elsif ($self->mode =~ /device::vrrp/) {
    if (scalar (@{$self->{groups}}) == 0) {
      $self->add_unknown('no vrrp groups');
    } else {
      foreach (@{$self->{groups}}) {
        $_->check();
      }
    }
  }
}


package Classes::VRRPMIB::Component::VRRPSubsystem::Group;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;
use Data::Dumper;

sub finish {
  my ($self) = @_;
  $self->{ifIndex} = $self->{indices}->[0];
  $self->{vrrpGrpNumber} = $self->{indices}->[1];
  $self->{name} = $self->{vrrpGrpNumber}.':'.$self->{ifIndex};
  if ($self->mode =~ /device::vrrp::state/) {
    if (! $self->opts->role()) {
      $self->opts->override_opt('role', 'master');
    }
  }
  return $self;
}

sub check {
  my ($self) = @_;
  if ($self->mode =~ /device::vrrp::state/) {
    $self->add_info(sprintf 'vrrp group %s (interface %s) state is %s (active router is %s)',
        $self->{vrrpGrpNumber}, $self->{ifIndex},
        $self->{vrrpOperState},
        $self->{vrrpOperMasterIpAddr});
    my @roles = split ',', $self->opts->role();
    if (grep $_ eq $self->{vrrpOperState}, @roles) {
      $self->add_ok();
    } else {
      $self->add_critical(
          sprintf 'state in group %s (interface %s) is %s instead of %s',
              $self->{vrrpGrpNumber}, $self->{ifIndex},
              $self->{vrrpOperState},
              $self->opts->role());
    }
  } elsif ($self->mode =~ /device::vrrp::failover/) {
    $self->add_info(sprintf 'vrrp group %s/%s: active node is %s',
        $self->{vrrpGrpNumber}, $self->{ifIndex},
        $self->{vrrpOperMasterIpAddr});
    if (my $laststate = $self->load_state( name => $self->{name} )) {
      if ($laststate->{state} ne $self->{vrrpOperState}) {
        $self->add_critical(sprintf 'vrrp group %s/%s: switched %s --> %s',
        $self->{vrrpGrpNumber}, $self->{ifIndex},
        $laststate->{state}, $self->{vrrpOperState});
      } elsif ($laststate->{state} !~ /^(master|backup)$/) {
        $self->add_critical(sprintf 'vrrp group %s/%s: in state %s',
        $self->{vrrpGrpNumber}, $self->{ifIndex}, $self->{vrrpOperState});
      } else {
        $self->add_ok();
      }
    } else {
      $self->add_ok('initializing....');
    }
    $self->save_state( name => $self->{name}, save => {
        state => $self->{vrrpOperState}
    });
  }
}
sub list {
  my ($self) = @_;
  printf "name(grp:if)=%s state=%s/%s master=%s ips=%s\n",
      $self->{name}, $self->{vrrpOperState}, $self->{vrrpOperAdminState},
      $self->{vrrpOperMasterIpAddr},
      join ",", sort @{$self->{vrrpAssocIpAddr}};
}
package Classes::VRRPMIB;
our @ISA = qw(Classes::Device);
use strict;
package Classes::HOSTRESOURCESMIB::Component::ClockSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('HOST-RESOURCES-MIB', qw(
      hrSystemDate
  ));
  $self->{localSystemDate} = time;
}

sub check {
  my ($self) = @_;
  if ($self->{hrSystemDate}) {
    $self->add_info(sprintf "monitoring clock and device clock differ by %ds",
        $self->{hrSystemDate} - $self->{localSystemDate});
    $self->set_thresholds(metric => 'clock_deviation',
        warning => 60, critical => 120);
    $self->add_message($self->check_thresholds(metric => 'clock_deviation',
        value => abs($self->{hrSystemDate} - $self->{localSystemDate})));
    $self->add_perfdata(label => 'clock_deviation',
        value => $self->{hrSystemDate} - $self->{localSystemDate});
  }
}

package Classes::HOSTRESOURCESMIB::Component::DeviceSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('HOST-RESOURCES-MIB', [
      ['devices', 'hrDeviceTable', 'Classes::HOSTRESOURCESMIB::Component::DeviceSubsystem::Device'],
  ]);
}

package Classes::HOSTRESOURCESMIB::Component::DeviceSubsystem::Device;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  my $class = ref($self);
  my $newclass = $class."::".$self->{hrDeviceType};
  {
    no strict 'refs';
    if (! scalar %{$newclass."::"}) {
      *{ ${newclass}."::ISA" } = \@{ ${class}."::ISA" };
      *{ ${newclass}."::check" } = \&{ ${class}."::check" };
      if ($self->{hrDeviceType} eq "hrDeviceNetwork") {
        *{ ${newclass}."::internal_name" } = sub {
          my ($this) = (@_);
          $this->{hrDeviceDescr} =~ /network interface (.*)/;
          if ($1) {
            return (uc $this->{hrDeviceType})."_".$1;
          } else {
            return $this->SUPER::internal_name();
          }
        };
      }
    }
  }
  bless $self, $newclass;
  if ($self->{hrDeviceDescr} =~ /Guessing/ && ! $self->{hrDeviceStatus}) {
    # found on an F5: Guessing that there's a floating point co-processor.
    # if you guess there's a device, then i guess it's running.
    $self->{hrDeviceStatus} = 'running';
  } elsif ($self->{hrDeviceType} eq 'hrDeviceDiskStorage' && ! $self->{hrDeviceStatus}) {
    $self->{hrDeviceStatus} = 'running';
  }
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf '%s (%s) has status %s',
      $self->{hrDeviceType}, $self->{hrDeviceDescr},
      $self->{hrDeviceStatus}
  );
  if ($self->{hrDeviceStatus} =~ /(warning|testing)/) {
    $self->add_warning();
  } elsif ($self->{hrDeviceStatus} =~ /down/ && ! (
      $self->{hrDeviceType} eq 'hrDeviceDiskStorage' && $self->{hrDeviceDescr} eq 'sysfs' ||
      $self->{hrDeviceType} eq 'hrDeviceDiskStorage' && $self->{hrDeviceDescr} eq 'sunrpc' ||
      $self->{hrDeviceType} eq 'hrDeviceDiskStorage' && $self->{hrDeviceDescr} =~ /CDROM/ ||
      $self->{hrDeviceType} eq 'hrDeviceNetwork' && $self->{hrDeviceDescr} eq 'sit0'
    )) {
    $self->add_critical();
  } elsif ($self->{hrDeviceStatus} =~ /unknown/) {
    $self->add_unknown();
  } else {
    $self->add_ok();
  }
}


package Classes::HOSTRESOURCESMIB::Component::DiskSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('HOST-RESOURCES-MIB', [
      ['storages', 'hrStorageTable', 'Classes::HOSTRESOURCESMIB::Component::DiskSubsystem::Storage', sub { return shift->{hrStorageType} eq 'hrStorageFixedDisk' } ],
  ]);
}

package Classes::HOSTRESOURCESMIB::Component::DiskSubsystem::Storage;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  if ($self->{hrStorageDescr} =~ /(.*?),*\s+mounted on:\s+(.*)/) {
    my ($dev, $mnt) = ($1, $2);
    if ($dev =~ /^dev/) {
      $self->{name} = 'devfs_'.$mnt;
      $self->{device} = 'devfs';
      $self->{mountpoint} = $mnt;
    } else {
      $self->{name} = $dev.'_'.$mnt;
      $self->{device} = $dev;
      $self->{mountpoint} = $mnt;
    }
  } else {
    $self->{name} = $self->{hrStorageDescr};
  }
  if ($self->{hrStorageDescr} eq "/dev" || $self->{hrStorageDescr} =~ /^devfs/ ||
      $self->{hrStorageDescr} =~ /.*cdrom.*/ || $self->{hrStorageSize} == 0 ||
      $self->{hrStorageDescr} =~ /.*iso$/) {
    $self->{special} = 1;
  } else {
    $self->{special} = 0;
  }
}

sub check {
  my ($self) = @_;
  my $free = 100;
  eval {
     $free = 100 - 100 * $self->{hrStorageUsed} / $self->{hrStorageSize};
  };
  $self->add_info(sprintf 'storage %s (%s) has %.2f%% free space left',
      $self->{hrStorageIndex},
      $self->{hrStorageDescr},
      $free);
  if ($self->{special}) {
    # /dev is usually full, so we ignore it. size 0 is virtual crap
    $self->set_thresholds(metric => sprintf('%s_free_pct', $self->{name}),
        warning => '0:', critical => '0:');
  } else {
    $self->set_thresholds(metric => sprintf('%s_free_pct', $self->{name}),
        warning => '10:', critical => '5:');
  }
  $self->add_message($self->check_thresholds(metric => sprintf('%s_free_pct', $self->{name}),
      value => $free));
  $self->add_perfdata(
      label => sprintf('%s_free_pct', $self->{name}),
      value => $free,
      uom => '%',
  );
}

package Classes::HOSTRESOURCESMIB::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_object('HOST-RESOURCES-MIB', 'hrSystemDate');
  $self->{disk_subsystem} =
      Classes::HOSTRESOURCESMIB::Component::DiskSubsystem->new();
  $self->{device_subsystem} =
      Classes::HOSTRESOURCESMIB::Component::DeviceSubsystem->new();
}

sub check {
  my ($self) = @_;
  $self->{disk_subsystem}->check();
  $self->{device_subsystem}->check();
  if ($self->{hrSystemDate}) {
    $self->set_thresholds(metric => 'clock_deviation',
        warning => 60, critical => 120);
    $self->add_message($self->check_thresholds(metric => 'clock_deviation',
        value => abs(time - $self->{hrSystemDate})));
    $self->add_perfdata(label => 'clock_deviation',
        value => $self->{hrSystemDate} - time);
  }
  $self->reduce_messages_short('environmental hardware working fine');
}

sub dump {
  my ($self) = @_;
  $self->{disk_subsystem}->dump();
  $self->{device_subsystem}->dump();
}

package Classes::HOSTRESOURCESMIB::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  my $idx = 0;
  $self->get_snmp_tables('HOST-RESOURCES-MIB', [
      ['cpus', 'hrProcessorTable', 'Classes::HOSTRESOURCESMIB::Component::CpuSubsystem::Cpu'],
  ]);
  foreach (@{$self->{cpus}}) {
    $_->{hrProcessorIndex} = $idx++;
  }
}

package Classes::HOSTRESOURCESMIB::Component::CpuSubsystem::Cpu;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'cpu %s is %.2f%%',
      $self->{hrProcessorIndex},
      $self->{hrProcessorLoad});
  $self->set_thresholds(warning => '80', critical => '90');
  $self->add_message($self->check_thresholds($self->{hrProcessorLoad}));
  $self->add_perfdata(
      label => sprintf('cpu_%s_usage', $self->{hrProcessorIndex}),
      value => $self->{hrProcessorLoad},
      uom => '%',
  );
}

package Classes::HOSTRESOURCESMIB::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('HOST-RESOURCES-MIB', [
      ['storagesram', 'hrStorageTable', 'Classes::HOSTRESOURCESMIB::Component::MemSubsystem::Ram', sub { return shift->{hrStorageType} eq 'hrStorageRam' } ],
  ]);
}

sub check {
  my ($self) = @_;
  my $ramsignature =
      join "_", sort map { $_->{hrStorageDescr} } @{$self->{storagesram}};
  if ($ramsignature eq "RAM_RAM (Buffers)_RAM (Cache)") {
    # https://eos.arista.com/introduction-to-managing-eos-devices-memory-utilisation/
    my ($total, $used, $buffers, $cached) = (0, 0, 0, 0);
    foreach (@{$self->{storagesram}}) {
      $used = $_->{hrStorageUsed} if $_->{hrStorageDescr} eq "RAM";
      $buffers = $_->{hrStorageUsed} if $_->{hrStorageDescr} eq "RAM (Buffers)";
      $cached = $_->{hrStorageUsed} if $_->{hrStorageDescr} eq "RAM (Cache)";
      $total = $_->{hrStorageSize} if $_->{hrStorageDescr} eq "RAM";
    }
    my $free = ($total - $used) + $buffers + $cached;
    my $usage = 100 * ($total - $free) / $total;
    $self->add_info(sprintf 'memory usage is %.2f%%', $usage);
    my $label = 'memory_usage';
    $self->set_thresholds(metric => $label, warning => '90', critical => '95');
    $self->add_message($self->check_thresholds(metric => $label,
        value => $usage));
    $self->add_perfdata(
        label => $label,
        value => $usage,
        uom => '%',
    );
  } else {
    $self->SUPER::check();
  }
}


package Classes::HOSTRESOURCESMIB::Component::MemSubsystem::Ram;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  my $used = 100;
  eval {
     $used = 100 * $self->{hrStorageUsed} / $self->{hrStorageSize};
  };
  $self->add_info(sprintf 'memory %s (%s) usage is %.2f%%',
      $self->{hrStorageIndex},
      $self->{hrStorageDescr},
      $used);
  my $label = sprintf 'memory_%s_usage', $self->{hrStorageDescr};
  $self->set_thresholds(metric => $label, warning => '90', critical => '95');
  $self->add_message($self->check_thresholds(metric => $label,
      value => $used));
  $self->add_perfdata(
      label => $label,
      value => $used,
      uom => '%',
  );
}

package Classes::HOSTRESOURCESMIB::Component::UptimeSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  my $hrSystemUptime = $self->get_snmp_object('HOST-RESOURCES-MIB', 'hrSystemUptime');
  $self->{uptime} = $self->timeticks($hrSystemUptime);
  $self->debug(sprintf 'uptime: %s', $self->{uptime});
  $self->debug(sprintf 'up since: %s',
      scalar localtime (time - $self->{uptime}));
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'device is up since %s',
      $self->human_timeticks($self->{uptime}));
  $self->set_thresholds(warning => '15:', critical => '5:');
  $self->add_message($self->check_thresholds($self->{uptime} / 60));
  $self->add_perfdata(
      label => 'uptime',
      value => $self->{uptime} / 60,
      places => 0,
  );
}

package Classes::HOSTRESOURCESMIB;
our @ISA = qw(Classes::Device);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::HOSTRESOURCESMIB::Component::EnvironmentalSubsystem");
    $self->analyze_and_check_environmental_subsystem("Classes::LMSENSORSMIB::Component::EnvironmentalSubsystem");
    if (! $self->check_messages()) {
      $self->reduce_messages("hardware working fine");
    }
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::HOSTRESOURCESMIB::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::HOSTRESOURCESMIB::Component::MemSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::LMSENSORSMIB::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->{fan_subsystem} =
      Classes::LMSENSORSMIB::Component::FanSubsystem->new();
  $self->{temperature_subsystem} =
      Classes::LMSENSORSMIB::Component::TemperatureSubsystem->new();
}

sub check {
  my ($self) = @_;
  $self->{fan_subsystem}->check();
  $self->{temperature_subsystem}->check();
  $self->reduce_messages_short('lmsensors are fine');
}

sub dump {
  my ($self) = @_;
  $self->{fan_subsystem}->dump();
  $self->{temperature_subsystem}->dump();
}

package Classes::LMSENSORSMIB::Component::FanSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('LM-SENSORS-MIB', [
      ['fans', 'lmFanSensorsTable', 'Classes::LMSENSORSMIB::Component::FanSubsystem::Fan'],
  ]);
}

package Classes::LMSENSORSMIB::Component::FanSubsystem::Fan;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'fan %s is %s',
      $self->{lmFanSensorsDevice},
      $self->{lmFanSensorsValue});
  $self->add_ok();
}

package Classes::LMSENSORSMIB::Component::TemperatureSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('LM-SENSORS-MIB', [
      ['temperatures', 'lmTempSensorsTable', 'Classes::LMSENSORSMIB::Component::TemperatureSubsystem::Temperature'],
  ]);
}

package Classes::LMSENSORSMIB::Component::TemperatureSubsystem::Temperature;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{lmTempSensorsValue} /= 1000;
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'temp %s is %.2fC',
      $self->{lmTempSensorsDevice},
      $self->{lmTempSensorsValue});
  $self->add_ok();
  $self->add_perfdata(
      label => sprintf('temp_%s', $self->{lmTempSensorsDevice}),
      value => $self->{lmTempSensorsValue},
  );
}

package Classes::LMSENSORSMIB;
our @ISA = qw(Classes::Device);
use strict;

package Classes::ENTITYSENSORMIB;
our @ISA = qw(Classes::Device);
use strict;

package Classes::ENTITYSENSORMIB::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  my $entity_indices = {};
  $self->get_snmp_tables('ENTITY-MIB', [
    ['entities', 'entPhysicalTable', 'Monitoring::GLPlugin::TableItem'],
  ]);
  $self->get_snmp_tables('ENTITY-SENSOR-MIB', [
    ['sensors', 'entPhySensorTable', 'Classes::ENTITYSENSORMIB::Component::EnvironmentalSubsystem::Sensor' ],
    ['thresholds', 'entSensorThresholdTable', 'Classes::ENTITYSENSORMIB::Component::EnvironmentalSubsystem::Threshold' ],
  ]);
  if (! @{$self->{entities}}) {
    $self->fake_names();
  }
  foreach (@{$self->{entities}}) {
    $entity_indices->{$_->{flat_indices}} = $_;
  }
  my $billig = 0;
  foreach (@{$self->{sensors}}) {
    $billig++ if ! exists $entity_indices->{$_->{flat_indices}};
  }
  if ($billig) {
    my @fans = grep { $_->{entPhysicalClass} eq 'fan' } @{$self->{entities}};
    my @pss = grep { $_->{entPhysicalClass} eq 'powerSupply' } @{$self->{entities}};
    my @sensors = grep { $_->{entPhysicalClass} eq 'sensor' } @{$self->{entities}};
    my @sfans = grep { $_->{entPhySensorType} eq 'rpm' } @{$self->{sensors}};
    my @spss = grep { $_->{entPhySensorType} eq 'watts' } @{$self->{sensors}};
    my @ssensors = grep { $_->{entPhySensorType} eq 'celsius' } @{$self->{sensors}};
    foreach (@sfans) {
      if (my $physpendant = shift @fans) {
        $_->{entPhySensorEntityName} = $physpendant->{entPhysicalName};
      } else {
        $_->{entPhySensorEntityName} = 'some_fan';
      }
    }
    foreach (@spss) {
      if (my $physpendant = shift @pss) {
        $_->{entPhySensorEntityName} = $physpendant->{entPhysicalName};
      } else {
        $_->{entPhySensorEntityName} = 'some_powersupply';
      }
    }
    foreach (@ssensors) {
      if (my $physpendant = shift @sensors) {
        $_->{entPhySensorEntityName} = $physpendant->{entPhysicalName};
      } else {
        $_->{entPhySensorEntityName} = 'some_sensor';
      }
    }
    @{$self->{sensors}} = (@sfans, @spss, @ssensors);
  } else {
    foreach (@{$self->{sensors}}) {
      $_->{entPhySensorEntityName} =
          $entity_indices->{$_->{flat_indices}}->{entPhysicalName};
    }
  }
  delete $self->{entities};
}

sub check {
  my ($self) = @_;
  foreach (@{$self->{sensors}}) {
    $_->check();
  }
  if (! $self->check_messages()) {
    $self->add_ok("environmental hardware working fine");
  }
}

sub dump {
  my ($self) = @_;
  foreach (@{$self->{sensors}}) {
    $_->dump();
  }
}

sub fake_names {
  # das ist hoffentlich ein ausnahmefall. 
  # z.b. cisco asa hat keine entPhysicalTable, aber entPhySensorTable
  my ($self) = @_;
  my $no_has_entities_names = {};
  foreach (@{$self->{sensors}}) {
    if (! exists $no_has_entities_names->{$_->{entPhySensorType}}) {
      $no_has_entities_names->{$_->{entPhySensorType}} = {};
    }
    if (! exists $no_has_entities_names->{$_->{entPhySensorType}}->{$_->{entPhySensorUnitsDisplay}}) {
      $no_has_entities_names->{$_->{entPhySensorType}}->{$_->{entPhySensorUnitsDisplay}} = 1;
    } else {
      $no_has_entities_names->{$_->{entPhySensorType}}->{$_->{entPhySensorUnitsDisplay}}++;
    }
    if ($_->{entPhySensorType} eq "truthvalue") {
      $_->{entPhySensorEntityName} = sprintf "%s %s",
          $_->{entPhySensorUnitsDisplay},
          $_->{entPhySensorValue};
    } else {
      $_->{entPhySensorEntityName} = sprintf "%s %s",
          $_->{entPhySensorUnitsDisplay},
          $no_has_entities_names->{$_->{entPhySensorType}}->{$_->{entPhySensorUnitsDisplay}};
    }
    $_->{entPhySensorEntityName} =~ s/\s+/_/g;
  }
}

package Classes::ENTITYSENSORMIB::Component::EnvironmentalSubsystem::Sensor;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  if ($self->{entPhySensorPrecision} && $self->{entPhySensorValue}) {
    $self->{entPhySensorValue} /= 10 ** $self->{entPhySensorPrecision};
  }
  if ($self->{entPhySensorType} eq 'rpm') {
    bless $self, 'Classes::ENTITYSENSORMIB::Component::EnvironmentalSubsystem::Sensor::Fan';
  } elsif ($self->{entPhySensorType} eq 'celsius') {
    bless $self, 'Classes::ENTITYSENSORMIB::Component::EnvironmentalSubsystem::Sensor::Temperature';
  } elsif ($self->{entPhySensorType} eq 'watts') {
    bless $self, 'Classes::ENTITYSENSORMIB::Component::EnvironmentalSubsystem::Sensor::Power';
  }
}

sub check {
  my ($self) = @_;
  if ($self->{entPhySensorOperStatus} ne 'ok') {
    $self->add_info(sprintf '%s sensor %s has status %s',
        $self->{entPhySensorType},
        $self->{entPhySensorEntityName},
        $self->{entPhySensorOperStatus});
    if ($self->{entPhySensorOperStatus} eq 'nonoperational') {
      $self->add_critical();
    } else {
      $self->add_unknown();
    }
  } else {
    $self->add_info(sprintf "%s sensor %s reports %s%s",
        $self->{entPhySensorType},
        $self->{entPhySensorEntityName},
        $self->{entPhySensorValue},
        $self->{entPhySensorUnitsDisplay}
    );
    #$self->add_ok();
  }
}


package Classes::ENTITYSENSORMIB::Component::EnvironmentalSubsystem::Sensor::Temperature;
our @ISA = qw(Classes::ENTITYSENSORMIB::Component::EnvironmentalSubsystem::Sensor);
use strict;

sub rename {
  my ($self) = @_;
}

sub check {
  my ($self) = @_;
  $self->SUPER::check();
  my $label = $self->{entPhySensorEntityName};
  $label =~ s/[Tt]emperature\s*@\s*(.*)/$1/;
  $self->add_perfdata(
    label => 'temp_'.$label,
    value => $self->{entPhySensorValue},
  );
}

package Classes::ENTITYSENSORMIB::Component::EnvironmentalSubsystem::Sensor::Fan;
our @ISA = qw(Classes::ENTITYSENSORMIB::Component::EnvironmentalSubsystem::Sensor);
use strict;

sub check {
  my ($self) = @_;
  $self->SUPER::check();
  my $label = $self->{entPhySensorEntityName};
  $label =~ s/ RPM$//g;
  $label =~ s/Fan #(\d+)/$1/g;
  $self->add_perfdata(
    label => 'fan_'.$label,
    value => $self->{entPhySensorValue},
  );
}

package Classes::ENTITYSENSORMIB::Component::EnvironmentalSubsystem::Sensor::Power;
our @ISA = qw(Classes::ENTITYSENSORMIB::Component::EnvironmentalSubsystem::Sensor);
use strict;

sub check {
  my ($self) = @_;
  $self->SUPER::check();
  my $label = $self->{entPhySensorEntityName};
  $self->add_perfdata(
    label => 'power_'.$label,
    value => $self->{entPhySensorValue},
  );
}


package Classes::ENTITYSENSORMIB::Component::EnvironmentalSubsystem::Threshold;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;


package Classes::OSPF::Component::NeighborSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('OSPF-MIB', [
    ['nbr', 'ospfNbrTable', 'Classes::OSPF::Component::NeighborSubsystem::Neighbor', sub { my ($o) = @_; return $self->filter_name($o->{ospfNbrIpAddr}) && $self->filter_name2($o->{ospfNbrRtrId}) }],
  ]);
eval {
  $self->get_snmp_tables('OSPFV3-MIB', [
    ['nbr3', 'ospfv3NbrTable', 'Classes::OSPF::Component::NeighborSubsystem::V3Neighbor', sub {
        my ($o) = @_;
        return ($self->filter_name($o->compact_v6($o->{ospfv3NbrAddress})) && $self->filter_name2($o->{ospfv3NbrRtrId}) ||
        $self->filter_name($o->{ospfv3NbrAddress}) && $self->filter_name2($o->{ospfv3NbrRtrId}));
    }],
  ]);
};
  if ($self->establish_snmp_secondary_session()) {
    $self->clear_table_cache('OSPF-MIB', 'ospfNbrTable');
    $self->clear_table_cache('OSPFV3-MIB', 'ospfv3NbrTable');
    $self->get_snmp_tables('OSPF-MIB', [
      ['nbr', 'ospfNbrTable', 'Classes::OSPF::Component::NeighborSubsystem::Neighbor', sub { my ($o) = @_; return $self->filter_name($o->{ospfNbrIpAddr}) && $self->filter_name2($o->{ospfNbrRtrId}) }],
    ]);
    $self->get_snmp_tables('OSPFV3-MIB', [
      ['nbr3', 'ospfv3NbrTable', 'Classes::OSPF::Component::NeighborSubsystem::V3Neighbor', sub {
          my ($o) = @_;
          return ($self->filter_name($o->compact_v6($o->{ospfv3NbrAddress})) && $self->filter_name2($o->{ospfv3NbrRtrId}) ||
          $self->filter_name($o->{ospfv3NbrAddress}) && $self->filter_name2($o->{ospfv3NbrRtrId}));
      }],
    ]);
    # doppelte Eintraege rauswerfen
    my $nbr_found = {};
    @{$self->{nbr}} = grep {
        my $signature = $_->{name}.$_->{ospfNbrRtrId}.$_->{ospfNbrState};
        if (exists $nbr_found->{$signature}) {
	  0;
	} else {
	  $nbr_found->{$signature} = 1;
	  1;
	}
    } @{$self->{nbr}};
    my $nbr3_found = {};
    @{$self->{nbr3}} = grep {
        my $signature = $_->{name}.$_->{ospfv3NbrRtrId}.$_->{ospfv3NbrState};
        if (exists $nbr3_found->{$signature}) {
	  0;
	} else {
	  $nbr3_found->{$signature} = 1;
	  1;
	}
    } @{$self->{nbr3}};
  }
  if (! @{$self->{nbr}} && ! @{$self->{nbr3}}) {
    $self->add_unknown("no neighbors found");
  }
}

sub check {
  my ($self) = @_;
  if ($self->mode =~ /device::ospf::neighbor::list/) {
    foreach (@{$self->{nbr}}) {
      printf "%s %s %s\n", $_->{name}, $_->{ospfNbrRtrId}, $_->{ospfNbrState};
    }
    foreach (@{$self->{nbr3}}) {
      printf "%s %s %s\n", $_->{name}, $_->{ospfv3NbrRtrId}, $_->{ospfv3NbrState};
    }
    $self->add_ok("have fun");
  } elsif ($self->mode =~ /neighbor::watch/) {
    @{$self->{neighbors}} = (@{$self->{nbr3}}, @{$self->{nbr}});
    # take a snapshot of the neighbor list. -> good baseline
    # warning if there appear neighbors, mitigate to ok
    # critical if warn/crit percent disappear
    $self->{numOfNeighbors} = scalar (@{$self->{neighbors}});
    $self->{neighborNameList} = [map { $_->{name} } @{$self->{neighbors}}];
    $self->opts->override_opt('lookback', 3600) if ! $self->opts->lookback;
    if ($self->opts->reset) {
      my $statefile = $self->create_statefile(name => 'ospfneighborlist', lastarray => 1);
      unlink $statefile if -f $statefile;
    }
    $self->valdiff({name => 'ospfneighborlist', lastarray => 1},
        qw(neighborNameList numOfNeighbors));
    my $problem = 0;
    if ($self->opts->warning || $self->opts->critical) {
      $self->set_thresholds(warning => $self->opts->warning,
          critical => $self->opts->critical);
      my $before = $self->{numOfNeighbors} - scalar(@{$self->{delta_found_neighborNameList}}) + scalar(@{$self->{delta_lost_neighborNameList}});
      # use own delta_numOfNeighbors, because the glplugin version treats
      # negative deltas as overflows
      $self->{delta_numOfNeighbors} = $self->{numOfNeighbors} - $before;
      if ($self->opts->units && $self->opts->units eq "%") {
        my $delta_pct = $before ? (($self->{delta_numOfNeighbors} / $before) * 100) : 0;
        $self->add_message($self->check_thresholds($delta_pct),
          sprintf "%.2f%% delta, before: %d, now: %d", $delta_pct, $before, $self->{numOfNeighbors});
        $problem = $self->check_thresholds($delta_pct);
      } else {
        $self->add_message($self->check_thresholds($self->{delta_numOfNeighbors}),
          sprintf "%d delta, before: %d, now: %d", $self->{delta_numOfNeighbors}, $before, $self->{numOfNeighbors});
        $problem = $self->check_thresholds($self->{delta_numOfNeighbors});
      }
      if (scalar(@{$self->{delta_found_neighborNameList}}) > 0) {
        $self->add_ok(sprintf 'found: %s',
            join(", ", @{$self->{delta_found_neighborNameList}}));
      }
      if (scalar(@{$self->{delta_lost_neighborNameList}}) > 0) {
        $self->add_ok(sprintf 'lost: %s',
            join(", ", @{$self->{delta_lost_neighborNameList}}));
      }
    } else {
      if (scalar(@{$self->{delta_found_neighborNameList}}) > 0) {
        $self->add_warning_mitigation(sprintf '%d new ospf neighbors (%s)',
            scalar(@{$self->{delta_found_neighborNameList}}),
            join(", ", @{$self->{delta_found_neighborNameList}}));
        $problem = 1;
      }
      if (scalar(@{$self->{delta_lost_neighborNameList}}) > 0) {
        $self->add_critical(sprintf '%d ospf neighbors missing (%s)',
            scalar(@{$self->{delta_lost_neighborNameList}}),
            join(", ", @{$self->{delta_lost_neighborNameList}}));
        $problem = 2;
      }
      $self->add_ok(sprintf 'found %d ospf neighbors', scalar (@{$self->{neighbors}}));
    }
    if ($problem) { # relevant only for lookback=9999 and support contract customers
      $self->valdiff({name => 'ospfneighborlist', lastarray => 1, freeze => 1},
          qw(neighborNameList numOfNeighbors));
    } else {
      $self->valdiff({name => 'ospfneighborlist', lastarray => 1, freeze => 2},
          qw(neighborNameList numOfNeighbors));
    }
    $self->add_perfdata(
        label => 'num_neighbors',
        value => scalar (@{$self->{neighbors}}),
    );
  } else {
    map { $_->check(); } @{$self->{nbr}};
    map { $_->check(); } @{$self->{nbr3}};
  }
}

package Classes::OSPF::Component::NeighborSubsystem::Neighbor;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;
# Index: ospfNbrIpAddr, ospfNbrAddressLessIndex

sub finish {
  my ($self) = @_;
  $self->{name} = $self->{ospfNbrIpAddr} || $self->{ospfNbrAddressLessIndex}
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf "neighbor %s (Id %s) has status %s",
      $self->{name}, $self->{ospfNbrRtrId}, $self->{ospfNbrState});
  if ($self->{ospfNbrState} ne "full" && $self->{ospfNbrState} ne "twoWay") {
    $self->add_critical();
  } else {
    $self->add_ok();
  }
}

package Classes::OSPF::Component::NeighborSubsystem::V3Neighbor;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;
# Index: ospfv3NbrIfIndex, ospfv3NbrIfInstId, ospfv3NbrRtrId

sub finish {
  my ($self) = @_;
  $self->{name} = $self->{ospfv3NbrAddress};
  $self->{ospfv3NbrRtrId} = join('.',unpack('C4', pack('N', $self->{indices}->[2])));
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf "neighbor %s (Id %s) has status %s",
      $self->{name}, $self->{ospfv3NbrRtrId}, $self->{ospfv3NbrState});
  if ($self->{ospfv3NbrState} ne "full" && $self->{ospfv3NbrState} ne "twoWay") {
    $self->add_critical();
  } else {
    $self->add_ok();
  }
}

# eventuell: warning, wenn sich die RouterId ändert
package Classes::OSPF;
our @ISA = qw(Classes::Device);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::ospf::neighbor/) {
    $self->analyze_and_check_neighbor_subsystem("Classes::OSPF::Component::NeighborSubsystem");
  } else {
    $self->no_such_mode();
  }
}


package Classes::OSPF::Component::AreaSubsystem;
our @ISA = qw(Monitoring::GLPlugin::Item);
use strict;

package Classes::OSPF::Component::AreaSubsystem::Area;
our @ISA = qw(Monitoring::GLPlugin::TableItem);
use strict;
# Index: ospfAreaId

package Classes::OSPF::Component::HostSubsystem::Host;
our @ISA = qw(Monitoring::GLPlugin::TableItem);
use strict;
# Index: ospfHostIpAddress, ospfHostTOS

package Classes::OSPF::Component::InterfaceSubsystem::Interface;
our @ISA = qw(Monitoring::GLPlugin::TableItem);
use strict;
# Index: ospfIfIpAddress, ospfAddressLessIf




package Classes::BGP::Component::PeerSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

our $errorcodes = {
  0 => {
    0 => 'No Error',
  },
  1 => {
    0 => 'MESSAGE Header Error',
    1 => 'Connection Not Synchronized',
    2 => 'Bad Message Length',
    3 => 'Bad Message Type',
  },
  2 => {
    0 => 'OPEN Message Error',
    1 => 'Unsupported Version Number',
    2 => 'Bad Peer AS',
    3 => 'Bad BGP Identifier',
    4 => 'Unsupported Optional Parameter',
    5 => '[Deprecated => see Appendix A]',
    6 => 'Unacceptable Hold Time',
  },
  3 => {
    0 => 'UPDATE Message Error',
    1 => 'Malformed Attribute List',
    2 => 'Unrecognized Well-known Attribute',
    3 => 'Missing Well-known Attribute',
    4 => 'Attribute Flags Error',
    5 => 'Attribute Length Error',
    6 => 'Invalid ORIGIN Attribute',
    7 => '[Deprecated => see Appendix A]',
    8 => 'Invalid NEXT_HOP Attribute',
    9 => 'Optional Attribute Error',
   10 => 'Invalid Network Field',
   11 => 'Malformed AS_PATH',
  },
  4 => {
    0 => 'Hold Timer Expired',
  },
  5 => {
    0 => 'Finite State Machine Error',
  },
  6 => {
    0 => 'Cease',
    1 => 'Maximum Number of Prefixes Reached',
    2 => 'Administrative Shutdown',
    3 => 'Peer De-configured',
    4 => 'Administrative Reset',
    5 => 'Connection Rejected',
    6 => 'Other Configuration Change',
    7 => 'Connection Collision Resolution',
    8 => 'Out of Resources',
  },
};

sub init {
  my ($self) = @_;
  $self->{peers} = [];
  if ($self->mode =~ /device::bgp::peer::(list|count|watch)/) {
    $self->update_entry_cache(1, 'BGP4-MIB', 'bgpPeerTable', 'bgpPeerRemoteAddr');
  }
  foreach ($self->get_snmp_table_objects_with_cache(
      'BGP4-MIB', 'bgpPeerTable', 'bgpPeerRemoteAddr')) {
    if ($self->filter_name($_->{bgpPeerRemoteAddr})) {
      push(@{$self->{peers}},
          Classes::BGP::Component::PeerSubsystem::Peer->new(%{$_}));
    }
  }
}

sub check {
  my ($self) = @_;
  my $errorfound = 0;
  $self->add_info('checking bgp peers');
  if ($self->mode =~ /peer::list/) {
    foreach (sort {$a->{bgpPeerRemoteAddr} cmp $b->{bgpPeerRemoteAddr}} @{$self->{peers}}) {
      printf "%s\n", $_->{bgpPeerRemoteAddr};
      #$_->list();
    }
    $self->add_ok("have fun");
  } elsif ($self->mode =~ /peer::count/) {
    $self->add_info(sprintf "found %d peers", scalar(@{$self->{peers}}));
    $self->set_thresholds(warning => '1:', critical => '1:');
    $self->add_message($self->check_thresholds(scalar(@{$self->{peers}})));
    $self->add_perfdata(
        label => 'peers',
        value => scalar(@{$self->{peers}}),
    );
  } elsif ($self->mode =~ /peer::watch/) {
    # take a snapshot of the peer list. -> good baseline
    # warning if there appear peers, mitigate to ok
    # critical if warn/crit percent disappear
    $self->{numOfPeers} = scalar (@{$self->{peers}});
    $self->{peerNameList} = [map { $_->{bgpPeerRemoteAddr} } @{$self->{peers}}];
    $self->opts->override_opt('lookback', 3600) if ! $self->opts->lookback;
    if ($self->opts->reset) {
      my $statefile = $self->create_statefile(name => 'bgppeerlist', lastarray => 1);
      unlink $statefile if -f $statefile;
    }
    $self->valdiff({name => 'bgppeerlist', lastarray => 1},
        qw(peerNameList numOfPeers));
    my $problem = 0;
    if ($self->opts->warning || $self->opts->critical) {
      $self->set_thresholds(warning => $self->opts->warning,
          critical => $self->opts->critical);
      my $before = $self->{numOfPeers} - scalar(@{$self->{delta_found_peerNameList}}) + scalar(@{$self->{delta_lost_peerNameList}});
      # use own delta_numOfPeers, because the glplugin version treats
      # negative deltas as overflows
      $self->{delta_numOfPeers} = $self->{numOfPeers} - $before;
      if ($self->opts->units && $self->opts->units eq "%") {
        my $delta_pct = $before ? (($self->{delta_numOfPeers} / $before) * 100) : 0;
        $self->add_message($self->check_thresholds($delta_pct),
          sprintf "%.2f%% delta, before: %d, now: %d", $delta_pct, $before, $self->{numOfPeers});
        $problem = $self->check_thresholds($delta_pct);
      } else {
        $self->add_message($self->check_thresholds($self->{delta_numOfPeers}),
          sprintf "%d delta, before: %d, now: %d", $self->{delta_numOfPeers}, $before, $self->{numOfPeers});
        $problem = $self->check_thresholds($self->{delta_numOfPeers});
      }
      if (scalar(@{$self->{delta_found_peerNameList}}) > 0) {
        $self->add_ok(sprintf 'found: %s',
            join(", ", @{$self->{delta_found_peerNameList}}));
      }
      if (scalar(@{$self->{delta_lost_peerNameList}}) > 0) {
        $self->add_ok(sprintf 'lost: %s',
            join(", ", @{$self->{delta_lost_peerNameList}}));
      }
    } else {
      if (scalar(@{$self->{delta_found_peerNameList}}) > 0) {
        $self->add_warning(sprintf '%d new bgp peers (%s)',
            scalar(@{$self->{delta_found_peerNameList}}),
            join(", ", @{$self->{delta_found_peerNameList}}));
        $problem = 1;
      }
      if (scalar(@{$self->{delta_lost_peerNameList}}) > 0) {
        $self->add_critical(sprintf '%d bgp peers missing (%s)',
            scalar(@{$self->{delta_lost_peerNameList}}),
            join(", ", @{$self->{delta_lost_peerNameList}}));
        $problem = 2;
      }
      $self->add_ok(sprintf 'found %d bgp peers', scalar (@{$self->{peers}}));
    }
    if ($problem) { # relevant only for lookback=9999 and support contract customers
      $self->valdiff({name => 'bgppeerlist', lastarray => 1, freeze => 1},
          qw(peerNameList numOfPeers));
    } else {
      $self->valdiff({name => 'bgppeerlist', lastarray => 1, freeze => 2},
          qw(peerNameList numOfPeers));
    }
    $self->add_perfdata(
        label => 'num_peers',
        value => scalar (@{$self->{peers}}),
    );
  } else {
    if (scalar(@{$self->{peers}}) == 0) {
      $self->add_unknown('no peers');
      return;
    }
    # es gibt
    # kleine installation: 1 peer zu 1 as, evt 2. as als fallback
    # grosse installation: n peer zu 1 as, alternative routen zum provider
    #                      n peer zu m as, mehrere provider, mehrere alternativrouten
    # 1 ausfall on 4 peers zu as ist egal
    my $as_numbers = {};
    foreach (@{$self->{peers}}) {
      $_->check();
      if (! exists $as_numbers->{$_->{bgpPeerRemoteAs}}->{peers}) {
        $as_numbers->{$_->{bgpPeerRemoteAs}}->{peers} = [];
        $as_numbers->{$_->{bgpPeerRemoteAs}}->{availability} = 100;
      }
      push(@{$as_numbers->{$_->{bgpPeerRemoteAs}}->{peers}}, $_);
    }
    if ($self->opts->name2) {
      $self->clear_ok();
      $self->clear_critical();
      if ($self->opts->name2 eq "_ALL_") {
        $self->opts->override_opt("name2", join(",", keys %{$as_numbers}));
      }
      foreach my $as (split(",", $self->opts->name2)) {
        my $asname = "";
        if ($as =~ /(\d+)=(\w+)/) {
          $as = $1;
          $asname = $2;
        }
        if (exists $as_numbers->{$as}) {
          my $num_peers = scalar(@{$as_numbers->{$as}->{peers}});
          my $num_ok_peers = scalar(grep { $_->{bgpPeerFaulty} == 0 } @{$as_numbers->{$as}->{peers}});
          my $num_admdown_peers = scalar(grep { $_->{bgpPeerAdminStatus} eq "stop" } @{$as_numbers->{$as}->{peers}});
          $as_numbers->{$as}->{availability} = 100 * $num_ok_peers / $num_peers;
          $self->set_thresholds(warning => "100:", critical => "50:");
          $self->add_message($self->check_thresholds($as_numbers->{$as}->{availability}),
              sprintf "%d from %d connections to %s are up (%.2f%%%s)",
              $num_ok_peers, $num_peers, $asname ? $asname : "AS".$as,
              $as_numbers->{$as}->{availability},
              $num_admdown_peers ? sprintf(", but %d are admin down and counted as up!", $num_admdown_peers) : "");
        } else {
          $self->add_critical(sprintf 'found no peer for %s', $asname ? $asname : "AS".$as);
        }
      }
    }
    if ($self->opts->report eq "short") {
      $self->clear_ok();
      $self->add_ok('no problems') if ! $self->check_messages();
    }
  }
}


package Classes::BGP::Component::PeerSubsystem::Peer;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };

sub finish {
  my ($self) = @_;
  $self->{bgpPeerLastError} |= "00 00";
  my $errorcode = 0;
  my $subcode = 0;
  if (lc $self->{bgpPeerLastError} =~ /([0-9a-f]+)\s+([0-9a-f]+)/) {
    $errorcode = hex($1) * 1;
    $subcode = hex($2) * 1;
  }
  $self->{bgpPeerLastError} = $Classes::BGP::Component::PeerSubsystem::errorcodes->{$errorcode}->{$subcode};
  $self->{bgpPeerRemoteAsName} = "";
  $self->{bgpPeerRemoteAsImportant} = 0; # if named in --name2
  $self->{bgpPeerFaulty} = 0;
  my @parts = gmtime($self->{bgpPeerFsmEstablishedTime});
  $self->{bgpPeerFsmEstablishedTime} = sprintf ("%dd, %dh, %dm, %ds",@parts[7,2,1,0]);
}

sub check {
  my ($self) = @_;
  if ($self->opts->name2) {
    foreach my $as (split(",", $self->opts->name2)) {
      if ($as =~ /(\d+)=(\w+)/) {
        $as = $1;
        $self->{bgpPeerRemoteAsName} = ", ".$2;
      } else {
        $self->{bgpPeerRemoteAsName} = "";
      }
      if ($as eq "_ALL_" || $as == $self->{bgpPeerRemoteAs}) {
        $self->{bgpPeerRemoteAsImportant} = 1;
      }
    }
  } else {
    $self->{bgpPeerRemoteAsImportant} = 1;
  }
  if ($self->{bgpPeerState} eq "established") {
    $self->add_ok(sprintf "peer %s (AS%s) state is %s since %s",
        $self->{bgpPeerRemoteAddr},
        $self->{bgpPeerRemoteAs}.$self->{bgpPeerRemoteAsName},
        $self->{bgpPeerState},
        $self->{bgpPeerFsmEstablishedTime}
    );
  } elsif ($self->{bgpPeerAdminStatus} eq "stop") {
    # admin down is by default critical, but can be mitigated
    $self->add_message(
        defined $self->opts->mitigation() ? $self->opts->mitigation() :
            $self->{bgpPeerRemoteAsImportant} ? WARNING : OK,
        sprintf "peer %s (AS%s) state is %s (is admin down)",
        $self->{bgpPeerRemoteAddr},
        $self->{bgpPeerRemoteAs}.$self->{bgpPeerRemoteAsName},
        $self->{bgpPeerState}
    );
    $self->{bgpPeerFaulty} =
        defined $self->opts->mitigation() && $self->opts->mitigation() eq "ok" ? 0 :
        $self->{bgpPeerRemoteAsImportant} ? 1 : 0;
  } else {
    # bgpPeerLastError may be undef, at least under the following circumstances
    # bgpPeerRemoteAsName is "", bgpPeerAdminStatus is "start",
    # bgpPeerState is "active"
    $self->add_message($self->{bgpPeerRemoteAsImportant} ? CRITICAL : OK,
        sprintf "peer %s (AS%s) state is %s (last error: %s)",
        $self->{bgpPeerRemoteAddr},
        $self->{bgpPeerRemoteAs}.$self->{bgpPeerRemoteAsName},
        $self->{bgpPeerState},
        $self->{bgpPeerLastError}||"no error"
    );
    $self->{bgpPeerFaulty} = $self->{bgpPeerRemoteAsImportant} ? 1 : 0;
  }
}


package Classes::BGP;
our @ISA = qw(Classes::Device);
use strict;

package Classes::FCMGMT::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->{sensor_subsystem} =
      Classes::FCMGMT::Component::SensorSubsystem->new();
}

sub check {
  my ($self) = @_;
  $self->{sensor_subsystem}->check();
  if (! $self->check_messages()) {
    $self->add_ok("environmental hardware working fine");
  }
}

sub dump {
  my ($self) = @_;
  $self->{sensor_subsystem}->dump();
}

package Classes::FCMGMT::Component::SensorSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('FCMGMT-MIB', [
      ['sensors', 'fcConnUnitSensorTable', 'Classes::FCMGMT::Component::SensorSubsystem::Sensor'],
  ]);
  foreach (@{$self->{sensors}}) {
    $_->{fcConnUnitSensorIndex} ||= $_->{flat_indices};
  }
}

package Classes::FCMGMT::Component::SensorSubsystem::Sensor;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf '%s sensor %s (%s) is %s (%s)',
      $self->{fcConnUnitSensorType},
      $self->{fcConnUnitSensorIndex},
      $self->{fcConnUnitSensorInfo},
      $self->{fcConnUnitSensorStatus},
      $self->{fcConnUnitSensorMessage});
  if ($self->{fcConnUnitSensorStatus} ne "ok") {
    $self->add_critical();
  } else {
    #$self->add_ok();
  }
}

package Classes::FCMGMT;
our @ISA = qw(Classes::Device);
use strict;

package Classes::FCEOS::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub overall_init {
  my ($self) = @_;
  $self->get_snmp_objects('FCEOS-MIB', (qw(
      fcEosSysOperStatus)));
}

sub init {
  my ($self) = @_;
  $self->{fru_subsystem} =
      Classes::FCEOS::Component::FruSubsystem->new();
}

sub check {
  my ($self) = @_;
  $self->{fru_subsystem}->check();
  if (! $self->check_messages()) {
    $self->add_ok("environmental hardware working fine");
  } else {
    if ($self->{fcEosSysOperStatus} eq "operational") {
      $self->clear_critical();
      $self->clear_warning();
    } elsif ($self->{fcEosSysOperStatus} eq "major-failure") {
      $self->add_critical("major device failure");
    } else {
      $self->add_warning($self->{fcEosSysOperStatus});
    }
  }
}

package Classes::FCEOS::Component::FruSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('FCEOS-MIB', [
      ['frus', 'fcEosFruTable', 'Classes::FCEOS::Component::FruSubsystem::Fcu'],
  ]);
}

package Classes::FCEOS::Component::FruSubsystem::Fcu;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf '%s fru (pos %s) is %s',
      $self->{fcEosFruCode},
      $self->{fcEosFruPosition},
      $self->{fcEosFruStatus});
  if ($self->{fcEosFruStatus} eq "failed") {
    $self->add_critical();
  } else {
    #$self->add_ok();
  }
}

package Classes::FCEOS;
our @ISA = qw(Classes::Device);
use strict;

package Classes::UCDMIB::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('UCD-SNMP-MIB', (qw(
      memTotalSwap memTotalReal memTotalFree memAvailReal
      memBuffer memCached memShared)));

  # basically buffered memory can always be freed up (filesystem cache)
  # https://kc.mcafee.com/corporate/index?page=content&id=KB73175
  my $mem_available = $self->{memAvailReal};
  foreach (qw(memBuffer memCached memShared)) {
    $mem_available += $self->{$_} if defined($self->{$_});
  }

  # calc memory (no swap)
  $self->{mem_usage} = 100 - ($mem_available * 100 / $self->{memTotalReal});
}

sub check {
  my ($self) = @_;
  $self->add_info('checking memory');
  if (defined $self->{mem_usage}) {
    $self->add_info(sprintf 'memory usage is %.2f%%',
        $self->{mem_usage});
    $self->set_thresholds(
        metric => 'memory_usage',
        warning => 80,
        critical => 90);
    $self->add_message($self->check_thresholds(
        metric => 'memory_usage',
        value => $self->{mem_usage}));
    $self->add_perfdata(
        label => 'memory_usage',
        value => $self->{mem_usage},
        uom => '%',
    );
  } else {
    $self->add_unknown('cannot aquire memory usage');
  }
}

package Classes::UCDMIB::Component::SwapSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('UCD-SNMP-MIB', (qw(
      memTotalSwap memAvailSwap memMinimumSwap
      memSwapError memSwapErrorMsg)));

  # calc swap usage
  eval {
    $self->{swap_usage} = 100 - ($self->{memAvailSwap} * 100 / $self->{memTotalSwap});
  };
  # exception if memTotalSwap = 0, which means that no swap partition/device
  # was configured at all
}

sub check {
  my ($self) = @_;
  if (defined $self->{'swap_usage'}) {
    $self->add_info(sprintf 'swap usage is %.2f%%',
        $self->{swap_usage});
    $self->set_thresholds(
      metric => 'swap_usage',
      warning => int(100 - ($self->{memMinimumSwap} * 100 / $self->{memTotalSwap})),
      critical => int(100 - ($self->{memMinimumSwap} * 100 / $self->{memTotalSwap}))
    );
    $self->add_message($self->check_thresholds(
        metric => 'swap_usage',
        value => $self->{swap_usage}));
    $self->add_perfdata(
        label => 'swap_usage',
        value => $self->{swap_usage},
        uom => '%',
    );
    if ($self->{'memSwapError'} eq 'error') {
      $self->add_critical('SwapError: ' . $self->{'memSwapErrorMsg'});
    }
  } else {
    # $self->add_unknown('cannot aquire swap usage');
    # This system does not use swap
  }
}

package Classes::UCDMIB::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  my @all_cpu_metrics = qw(
      ssCpuRawUser ssCpuRawSystem ssCpuRawIdle ssCpuRawNice
      ssCpuRawWait ssCpuRawKernel ssCpuRawInterrupt
  );
  $self->get_snmp_objects('UCD-SNMP-MIB', (qw(
      ssCpuUser ssCpuSystem ssCpuIdle ssCpuRawUser ssCpuRawSystem ssCpuRawIdle
      ssCpuRawNice ssCpuRawWait ssCpuRawKernel ssCpuRawInterrupt)));
  @all_cpu_metrics = grep {
    # not every kernel/snmpd supports every counter
    defined $self->{$_};
  } @all_cpu_metrics;
  $self->valdiff({name => 'cpu'}, @all_cpu_metrics);
  my $cpu_total = 0;
  foreach (@all_cpu_metrics) {
    $cpu_total += $self->{'delta_'.$_};
  }

  # main cpu usage (total - idle)
  $self->{cpu_usage} =
      $cpu_total == 0 ? 0 : (100 - ($self->{delta_ssCpuRawIdle} / $cpu_total) * 100);

  # additional metrics (all but idle)
  if (defined $self->{delta_ssCpuRawUser}) {
    $self->{user_usage} =
        $cpu_total == 0 ? 0 : ($self->{delta_ssCpuRawUser} / $cpu_total) * 100;
  }
  if (defined $self->{delta_ssCpuRawSystem}) {
    $self->{system_usage} =
        $cpu_total == 0 ? 0 : ($self->{delta_ssCpuRawSystem} / $cpu_total) * 100;
  }
  if (defined $self->{delta_ssCpuRawNice}) {
    $self->{nice_usage} =
        $cpu_total == 0 ? 0 : ($self->{delta_ssCpuRawNice} / $cpu_total) * 100;
  }
  if (defined $self->{delta_ssCpuRawWait}) {
    $self->{wait_usage} =
        $cpu_total == 0 ? 0 : ($self->{delta_ssCpuRawWait} / $cpu_total) * 100;
  }
  if (defined $self->{delta_ssCpuRawKernel}) {
    $self->{kernel_usage} =
        $cpu_total == 0 ? 0 : ($self->{delta_ssCpuRawKernel} / $cpu_total) * 100;
  }
  if (defined $self->{delta_ssCpuRawInterrupt}) {
    $self->{interrupt_usage} =
        $cpu_total == 0 ? 0 : ($self->{delta_ssCpuRawInterrupt} / $cpu_total) * 100;
  }
}

sub check {
  my ($self) = @_;
  $self->add_info('checking cpus');
  foreach (qw(cpu user system nice wait kernel interrupt)) {
    my $key = $_ . '_usage';
    if (exists $self->{$key}) {
      $self->add_info(sprintf '%s: %.2f%%',
          $_ . ($_ eq 'cpu' ? ' (total)' : ''),
	  $self->{$key});
      $self->set_thresholds(
          metric => $key,
          warning => 50,
          critical => 90);
      $self->add_message($self->check_thresholds(
          metric => $key,
          value => $self->{$key}));
      $self->add_perfdata(
          label => $key,
          value => $self->{$key},
          uom => '%',
      );
    }
  }
}
package Classes::UCDMIB::Component::LoadSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('UCD-SNMP-MIB', [
      ['loads', 'laTable', 'Classes::UCDMIB::Component::LoadSubsystem::Load'],
  ]);
}

sub check {
  my ($self) = @_;
  $self->add_info('checking loads');
  foreach (@{$self->{loads}}) {
    $_->check();
  }
}

sub dump {
  my ($self) = @_;
  foreach (@{$self->{loads}}) {
    $_->dump();
  }
}


package Classes::UCDMIB::Component::LoadSubsystem::Load;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;
use Data::Dumper;

sub check {
  my ($self) = @_;
  my $errorfound = 0;
  $self->set_thresholds(
      metric => lc $self->{laNames},
      warning => $self->{laConfig},
      critical => $self->{laConfig}
  );
  $self->add_info(
      sprintf '%s is %.2f%s',
      lc $self->{laNames}, $self->{laLoad},
      $self->{'laErrorFlag'} eq 'error'
          ? sprintf ' (%s)', $self->{'laErrMessage'}
          : ''
  );
  if ($self->{'laErrorFlag'} eq 'error') {
    $self->add_critical();
  } else {
    $self->add_message($self->check_thresholds(
        metric => lc $self->{laNames},
        value => $self->{laLoad}));
  }
  $self->add_perfdata(
      label => lc $self->{laNames},
      value => $self->{laLoad},
  );
}

package Classes::UCDMIB::Component::DiskSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('UCD-SNMP-MIB', [
      ['disks', 'dskTable', 'Classes::UCDMIB::Component::DiskSubsystem::Disk',
          sub {
            my ($self) = @_;
            # limit disk checks to specific disks. could be improvied by
            # checking the path first and then request the table by indizes
            if ($self->opts->name) {
              if ($self->opts->regexp) {
                my $pattern = $self->opts->name;
                return $self->{dskTotal} && $self->{dskPath} =~ /$pattern/i;
              } else {
                return $self->{dskTotal} && grep { $_ eq $self->{dskPath} }
                    split ',', $self->opts->name;
              }
            } else {
              return $self->{dskTotal} &&
                  $self->{dskDevice} !~ /^(sysfs|proc|udev|devpts|rpc_pipefs|nfsd|devfs)$/;
            }
          }
      ],
  ]);
}

sub check {
  my ($self) = @_;
  $self->add_info('checking disks');
  if (scalar(@{$self->{disks}}) == 0) {
    $self->add_unknown('no disks');
    return;
  }
  foreach (@{$self->{disks}}) {
    $_->check();
  }
}

package Classes::UCDMIB::Component::DiskSubsystem::Disk;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;

  # use 32bit counter first
  my $avail = $self->{dskAvail};
  my $total = $self->{dskTotal};
  my $used = $self->{dskUsed};

  # support large disks if 64bit counter are present
  if (defined $self->{dskAvailHigh} && defined $self->{dskAvailLow}
      && $self->{dskAvailHigh} > 0) {
    $avail = $self->{dskAvailHigh} * 2**32 + $self->{dskAvailLow};
  }
  if (defined $self->{dskTotalHigh} && defined $self->{dskTotalLow}
      && $self->{dskTotalHigh} > 0) {
    $total = $self->{dskTotalHigh} * 2**32 + $self->{dskTotalLow};
  }
  if (defined $self->{dskUsedHigh} && defined $self->{dskUsedLow}
      && $self->{dskUsedHigh} > 0) {
    $used = $self->{dskUsedHigh} * 2**32 + $self->{dskUsedLow};
  }

  # calc free space left
  my $free = 100 * $avail / $total;

  # define + set threshold
  my $warn = '10:';
  my $crit = '5:';
  my $warn_used = int($total * 0.9);
  my $crit_used = int($total * 0.95);

  # set threshold based on snmp response
  if ($self->{dskMinPercent} >= 0) {
    $warn = sprintf '%d:', $self->{dskMinPercent};
    $crit = $warn;
    $warn_used = int($total * (1 - $self->{dskMinPercent}/100));
    $crit_used = $warn_used;
  } elsif ($self->{dskMinimum} >= 0) {
    $warn = sprintf '%f:', $self->{dskMinimum} / $total;
    $crit = $warn;
    $warn_used = $total - $self->{dskMinimum};
    $crit_used = $warn_used;
  }

  # now set the thresholds
  $self->set_thresholds(metric => sprintf('%s_free_pct', $self->{dskPath}),
      warning => $warn, critical => $crit);

  # display human readable free space message
  my $spaceleft = int($avail/1024);
  $spaceleft =~ s/(?<=\d)(?=(?:\d\d\d)+\b)/,/g;
  $self->add_info(sprintf '%s has %s MB left (%.2f%%)%s',
      $self->{dskPath}, $spaceleft, $free,
      $self->{dskErrorFlag} eq 'error'
          ? sprintf ' - %s', $self->{dskErrorMsg}
          : '');

  # raise critical error if errorflag is set
  if ($self->{dskErrorFlag} eq 'error') {
    $self->add_critical();
  } else {
    # otherwise check thresholds
    $self->add_message($self->check_thresholds(
        metric => sprintf('%s_free_pct', $self->{dskPath}),
        value => $free));
  }

  # add performance data
  $self->add_perfdata(
      label => sprintf('%s_free_pct', $self->{dskPath}),
      value => $free,
      uom => '%',
  );

  # add additional perfdata and map thresholds if they have been changed
  # via commandline arguments (just for perfdata display
  my @thresholds = $self->get_thresholds(
      metric => sprintf('%s_free_pct', $self->{dskPath}));
  if ($warn ne $thresholds[0] && $thresholds[0] =~ m/^(\d+):$/) {
    $warn_used = int($total * (1 - $1/100));
  }
  if ($crit ne $thresholds[1] && $thresholds[1] =~ m/^(\d+):$/) {
    $crit_used = int($total * (1 - $1/100));
  }
  $self->add_perfdata(
      label => sprintf('%s_used_kb', $self->{dskPath}),
      value => $used,
      uom => 'kb',
      min => 0,
      max => $total,
      warning => $warn_used,
      critical => $crit_used
  );
}

package Classes::UCDMIB::Component::ProcessSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('UCD-SNMP-MIB', [
      ['processes', 'prTable', 'Classes::UCDMIB::Component::ProcessSubsystem::Process',
        sub {
          my ($self) = @_;
          # limit process checks to specific names. could be improvied by
          # checking the names first and then request the table by indizes
          if ($self->opts->name) {
            if ($self->opts->regexp) {
              my $pattern = $self->opts->name;
              return $self->{prNames} =~ /$pattern/i;
            } else {
              return grep { $_ eq $self->{prNames} }
                  split ',', $self->opts->name;
            }
          } else {
            return 1;
          }
        }
      ]
  ]);
}

sub check {
  my ($self) = @_;
  $self->add_info('checking processes');
  if (scalar(@{$self->{processes}}) == 0) {
    $self->add_unknown('no processes');
    return;
  }
  foreach (@{$self->{processes}}) {
    $_->check();
  }
}

package Classes::UCDMIB::Component::ProcessSubsystem::Process;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf '%s: %d%s',
      $self->{prNames},
      $self->{prCount},
      $self->{prErrorFlag} eq 'error'
          ? sprintf ' (%s)', $self->{prErrMessage}
          : '');
  my $threshold = sprintf '%u:%s',
      !$self->{prMin} && !$self->{prMax} ? 1 : $self->{prMin},
      $self->{prMax} && $self->{prMax} >= $self->{prMin} ? $self->{prMax} : '';
  $self->set_thresholds(
      metric => $self->{prNames},
      warning => $threshold,
      critical => $threshold);
  if ($self->{prErrorFlag} eq 'error') {
    $self->add_critical();
  } else {
    $self->add_message($self->check_thresholds(
        metric => $self->{prNames},
        value => $self->{prCount}));
  }
  $self->add_perfdata(
      label => $self->{prNames},
      value => $self->{prCount}
  );
}

package Classes::UCDMIB;
our @ISA = qw(Classes::Device);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::UCDMIB::Component::DiskSubsystem");
    $self->analyze_and_check_environmental_subsystem("Classes::LMSENSORSMIB::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::UCDMIB::Component::CpuSubsystem");
    $self->analyze_and_check_load_subsystem("Classes::UCDMIB::Component::LoadSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::UCDMIB::Component::MemSubsystem");
    $self->analyze_and_check_swap_subsystem("Classes::UCDMIB::Component::SwapSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::F5::F5BIGIP::Component::ConfigSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };

sub init {
  my $self = shift;
  $self->get_snmp_objects('F5-BIGIP-SYSTEM-MIB', (qw(sysCmSyncStatusId sysCmSyncStatusColor sysCmSyncStatusSummary)));
  $self->get_snmp_tables('F5-BIGIP-SYSTEM-MIB', [
    ['details', 'sysCmSyncStatusDetailsTable', 'Classes::F5::F5BIGIP::Component::ConfigSubsystem::Details'],
  ]);

  # using role=standalone to adjust the check for clustered/standalone configurations
  if (! $self->opts->role()) {
    $self->opts->override_opt('role', 'active'); # active/standby/standalone
  }
}

sub check {
  my $self = shift;
  my $info;

  $self->add_info(sprintf "config sync state is %s (%s)\n%s",
    $self->{sysCmSyncStatusId},
    $self->{sysCmSyncStatusColor},
    $self->{sysCmSyncStatusSummary}
  );

  # The sync status ID on the system.
  # 0 unknown - the device is disconnected from the device group;
  # 1 syncing - the device is joining the device group or has requested changes from device group or inconsistent with the group;
  # 2 needManualSync - changes have been made on the device not syncd to the device group;
  # 3 inSync - the device is consistent with the device group
  # 4 syncFailed - the device is inconsistent with the device group, requires user intervention;
  # 5 syncDisconnected - the device is not connected to any peers;
  # 6 standalone - the device is in a standalone configuration;
  # 7 awaitingInitialSync - the device is waiting for initial sync;
  # 8 incompatibleVersion - the device's version is incompatible with rest of the devices in the device group;
  # 9 partialSync - some but not all devices successfully received the last sync."
  if ( $self->{sysCmSyncStatusId} eq 'inSync' ) {
    # inSync
    if ( $self->opts->role() eq 'standalone' ) {
      $self->add_warning(sprintf "Unexpected sync status for standalone node: %s (%s)",
        $self->{sysCmSyncStatusId}, $self->{sysCmSyncStatusColor});
    } else {
      $self->add_ok();
    }
  } elsif ( $self->{sysCmSyncStatusId} eq 'standalone' ) {
    # standalone
    if ( $self->opts->role() eq 'standalone' ) {
      $self->add_ok();
    } else {
      $self->add_critical_mitigation();
    }
  } else {
    # everything else - error
    $self->add_critical_mitigation();
  }

  foreach (@{$self->{details}}) {
    $_->check();
  }
}

package Classes::F5::F5BIGIP::Component::ConfigSubsystem::Details;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my $self = shift;

  $self->add_ok(sprintf "%d: %s",
    $self->{sysCmSyncStatusDetailsIndex},
    $self->{sysCmSyncStatusDetailsDetails},
  );
}

package Classes::F5::F5BIGIP::Component::ConnectionSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my $self = shift;
  if ($self->mode =~ /device::users::count/) {
    $self->get_snmp_objects('F5-BIGIP-SYSTEM-MIB', (qw(sysStatClientCurConns sysStatServerCurConns)));
  } elsif ($self->mode =~ /device::connections::count/) {
    $self->get_snmp_objects('F5-BIGIP-APM-MIB', (qw(
        apmAccessStatTotalSessions apmAccessStatCurrentActiveSessions
	apmGlobalConnectivityStatTotConns apmGlobalConnectivityStatCurConns
    )));
  }
}

sub check {
  my $self = shift;
  if ($self->mode =~ /device::users::count/) {
    $self->set_thresholds(warning => 500000, critical => 750000);
    $self->add_info(sprintf '%d client connections in use', $self->{sysStatClientCurConns});
    $self->add_message($self->check_thresholds(metric => 'client_cur_conns', value => $self->{sysStatClientCurConns}));
    $self->add_perfdata(
        label => 'client_cur_conns',
        value => $self->{sysStatClientCurConns},
    );
    $self->add_info(sprintf '%d server connections in use', $self->{sysStatServerCurConns});
    $self->add_message($self->check_thresholds(metric => 'server_cur_conns', value => $self->{sysStatServerCurConns}));
    $self->add_perfdata(
        label => 'server_cur_conns',
        value => $self->{sysStatServerCurConns},
    );
  } elsif ($self->mode =~ /device::connections::count/) {
    # schwellwerte aus https://support.f5.com/csp/article/K15032
    $self->set_thresholds(metric => 'apm_access_sessions',
        warning => 2000, critical => 2500);
    $self->add_info(sprintf '%d current access sessions',
        $self->{apmAccessStatCurrentActiveSessions});
    $self->add_message($self->check_thresholds(
        metric => 'apm_access_sessions',
        value => $self->{apmAccessStatCurrentActiveSessions}
    ));
    $self->add_perfdata(
        label => 'apm_access_sessions',
        value => $self->{apmAccessStatCurrentActiveSessions},
    );
    $self->set_thresholds(metric => 'apm_ccu_sessions',
        warning => 400, critical => 500);
    $self->add_info(sprintf '%d current connectivity sessions',
        $self->{apmGlobalConnectivityStatCurConns});
    $self->add_message($self->check_thresholds(
        metric => 'apm_ccu_sessions',
        value => $self->{apmGlobalConnectivityStatCurConns}
    ));
    $self->add_perfdata(
        label => 'apm_ccu_sessions',
        value => $self->{apmGlobalConnectivityStatCurConns},
    );
  }
}

package Classes::F5::F5BIGIP::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub new {
  my ($class) = @_;
  my $self = {};
  bless $self, $class;
  if ($self->mode =~ /load/) {
    $self->overall_init();
  } else {
    $self->init();
  }
  return $self;
}

sub overall_init {
  my ($self) = @_;
  $self->get_snmp_objects('F5-BIGIP-SYSTEM-MIB', (qw(
      sysStatTmTotalCycles sysStatTmIdleCycles sysStatTmSleepCycles)));
  $self->valdiff({name => 'cpu'}, qw(sysStatTmTotalCycles sysStatTmIdleCycles sysStatTmSleepCycles ));
  my $delta_used_cycles = $self->{delta_sysStatTmTotalCycles} -
     ($self->{delta_sysStatTmIdleCycles} + $self->{delta_sysStatTmSleepCycles});
  $self->{cpu_usage} =  $self->{delta_sysStatTmTotalCycles} ?
      (($delta_used_cycles / $self->{delta_sysStatTmTotalCycles}) * 100) : 0;
}

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('F5-BIGIP-SYSTEM-MIB', [
      ['cpus', 'sysCpuTable', 'Classes::F5::F5BIGIP::Component::CpuSubsystem::Cpu'],
  ]);
}

sub check {
  my ($self) = @_;
  $self->add_info('checking cpus');
  if ($self->mode =~ /load/) {
    $self->add_info(sprintf 'tmm cpu usage is %.2f%%',
        $self->{cpu_usage});
    $self->set_thresholds(warning => 80, critical => 90);
    $self->add_message($self->check_thresholds($self->{cpu_usage}));
    $self->add_perfdata(
        label => 'cpu_tmm_usage',
        value => $self->{cpu_usage},
        uom => '%',
    );
    return;
  }
  foreach (@{$self->{cpus}}) {
    $_->check();
  }
}


package Classes::F5::F5BIGIP::Component::CpuSubsystem::Cpu;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'cpu %d has %dC (%drpm)',
      $self->{sysCpuIndex},
      $self->{sysCpuTemperature},
      $self->{sysCpuFanSpeed});
  $self->add_perfdata(
      label => sprintf('temp_c%s', $self->{sysCpuIndex}),
      value => $self->{sysCpuTemperature},
      thresholds => 0,
  );
  $self->add_perfdata(
      label => sprintf('fan_c%s', $self->{sysCpuIndex}),
      value => $self->{sysCpuFanSpeed},
      thresholds => 0,
  );
}

package Classes::F5::F5BIGIP::Component::DiskSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('F5-BIGIP-SYSTEM-MIB', [
      ['disks', 'sysPhysicalDiskTable', 'Classes::F5::F5BIGIP::Component::DiskSubsystem::Disk'],
  ]);
}

package Classes::F5::F5BIGIP::Component::DiskSubsystem::Disk;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'disk %s is %s',
      $self->{sysPhysicalDiskName},
      $self->{sysPhysicalDiskArrayStatus});
  if ($self->{sysPhysicalDiskArrayStatus} eq 'failed' && $self->{sysPhysicalDiskIsArrayMember} eq 'false') {
    $self->add_critical();
  } elsif ($self->{sysPhysicalDiskArrayStatus} eq 'failed' && $self->{sysPhysicalDiskIsArrayMember} eq 'true') {
    $self->add_warning();
  }
  # diskname CF* usually has status unknown 
}

package Classes::F5::F5BIGIP::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->{cpu_subsystem} =
      Classes::F5::F5BIGIP::Component::CpuSubsystem->new();
  $self->{fan_subsystem} =
      Classes::F5::F5BIGIP::Component::FanSubsystem->new();
  $self->{temperature_subsystem} =
      Classes::F5::F5BIGIP::Component::TemperatureSubsystem->new();
  $self->{powersupply_subsystem} = 
      Classes::F5::F5BIGIP::Component::PowersupplySubsystem->new();
  $self->{disk_subsystem} = 
      Classes::F5::F5BIGIP::Component::DiskSubsystem->new();
}

sub check {
  my ($self) = @_;
  $self->{cpu_subsystem}->check();
  $self->{fan_subsystem}->check();
  $self->{temperature_subsystem}->check();
  $self->{powersupply_subsystem}->check();
  $self->{disk_subsystem}->check();
  $self->reduce_messages("environmental hardware working fine");
}

sub dump {
  my ($self) = @_;
  $self->{cpu_subsystem}->dump();
  $self->{fan_subsystem}->dump();
  $self->{temperature_subsystem}->dump();
  $self->{powersupply_subsystem}->dump();
  $self->{disk_subsystem}->dump();
}

package Classes::F5::F5BIGIP::Component::FanSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('F5-BIGIP-SYSTEM-MIB', [
      ['fans', 'sysChassisFanTable', 'Classes::F5::F5BIGIP::Component::FanSubsystem::Fan'],
  ]);
}

package Classes::F5::F5BIGIP::Component::FanSubsystem::Fan;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'chassis fan %d is %s (%drpm)',
      $self->{sysChassisFanIndex},
      $self->{sysChassisFanStatus},
      $self->{sysChassisFanSpeed});
  if ($self->{sysChassisFanStatus} eq 'notpresent') {
  } else {
    if ($self->{sysChassisFanStatus} ne 'good') {
      $self->add_critical();
    }
    $self->add_perfdata(
        label => sprintf('fan_%s', $self->{sysChassisFanIndex}),
        value => $self->{sysChassisFanSpeed},
    );
  }
}

package Classes::F5::F5BIGIP::Component::GTMSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->mult_snmp_max_msg_size(10);
  if ($self->mode =~ /device::wideip/) {
    $self->get_snmp_tables('F5-BIGIP-GLOBAL-MIB', [
        ['wideips', 'gtmWideipStatusTable', 'Classes::F5::F5BIGIP::Component::GTMSubsystem::WideIP'],
    ]);
  } elsif ($self->mode =~ /device::lb::pool/) {
    bless $self, "Classes::F5::F5BIGIP::Component::GTMPoolSubsystem";
    $self->init();
  }
}

sub check {
  my ($self) = @_;
  $self->SUPER::check();
  if ($self->mode =~ /device::wideip/) {
    if (scalar(@{$self->{wideips}}) == 0) {
      $self->add_unknown('no wide IPs found');
    } else {
      $self->reduce_messages_short(sprintf '%d wide IPs working fine',
          scalar(@{$self->{wideips}})
      );
    }
  } elsif ($self->mode =~ /device::lb::pool::list/) {
    foreach (sort {$a->{gtmPoolName} cmp $b->{gtmPoolName}} @{$self->{pools}}) {
      printf "%s\n", $_->{gtmPoolName};
      #$_->list();
    }
  }
}

package Classes::F5::F5BIGIP::Component::GTMSubsystem::WideIP;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'wide IP %s has status %s, is %s',
      $self->{gtmWideipStatusName},
      $self->{gtmWideipStatusAvailState},
      $self->{gtmWideipStatusEnabledState});
  if ($self->{gtmWideipStatusEnabledState} =~ /^disabled/) {
    $self->add_ok();
  } elsif ($self->{gtmWideipStatusAvailState} eq 'green') {
    $self->add_ok();
  } elsif ($self->{gtmWideipStatusAvailState} eq 'blue') {
    $self->add_unknown();
  } else {
    $self->add_critical();
    $self->add_critical('reason: '.$self->{gtmWideipStatusDetailReason});
  }
}

package Classes::F5::F5BIGIP::Component::GTMPoolSubsystem;
our @ISA = qw(Classes::F5::F5BIGIP::Component::GTMSubsystem Monitoring::GLPlugin::SNMP::TableItem);
use strict;

#
# A node is an ip address (may belong to more than one pool)
# A pool member is an ip:port combination
#

sub init {
  my ($self) = @_;
  # ! merge gtmPoolStatus, gtmPoolMbrStatus, bec. gtmPoolAvailabilityState is deprecated
  if ($self->mode =~ /pool::list/) {
    $self->update_entry_cache(1, 'F5-BIGIP-GLOBAL-MIB', 'gtmPoolStatusTable', 'gtmPoolStatusName');
    $self->update_entry_cache(1, 'F5-BIGIP-GLOBAL-MIB', 'gtmPoolTable', 'gtmPoolName');
    $self->update_entry_cache(1, 'F5-BIGIP-GLOBAL-MIB', 'gtmPoolMbrStatusTable', 'gtmPoolMbrStatusPoolName');
    $self->update_entry_cache(1, 'F5-BIGIP-GLOBAL-MIB', 'gtmPoolMbrTable', 'gtmPoolMbrPoolName');
    #$self->update_entry_cache(1, 'F5-BIGIP-GLOBAL-MIB', 'gtmPoolStatTable', 'gtmPoolStatName');
  }
  my @auxpools = ();
  foreach ($self->get_snmp_table_objects_with_cache(
      'F5-BIGIP-GLOBAL-MIB', 'gtmPoolStatusTable', 'gtmPoolStatusName')) {
    push(@auxpools, $_);
  }
  if (! grep { $self->filter_name($_->{gtmPoolStatusName}) } @auxpools) {
    $self->add_unknown("did not find any pools");
    $self->{pools} = [];
    return;
  }
  my @auxstats = ();
  foreach ($self->get_snmp_table_objects_with_cache(
      'F5-BIGIP-GLOBAL-MIB', 'gtmPoolStatTable', 'gtmPoolStatName')) {
    push(@auxstats, $_) if $self->filter_name($_->{gtmPoolStatName});
  }
  foreach ($self->get_snmp_table_objects_with_cache(
      'F5-BIGIP-GLOBAL-MIB', 'gtmPoolTable', 'gtmPoolName')) {
    foreach my $auxpool (@auxpools) {
      if ($_->{gtmPoolName} eq $auxpool->{gtmPoolStatusName}) {
        foreach my $key (keys %{$auxpool}) {
          $_->{$key} = $auxpool->{$key};
        }
      }
    }
    foreach my $auxstat (@auxstats) {
      if ($_->{gtmPoolName} eq $auxstat->{gtmPoolStatName}) {
        foreach my $key (keys %{$auxstat}) {
          $_->{$key} = $auxstat->{$key};
        }
      }
    }
    push(@{$self->{pools}},
        Classes::F5::F5BIGIP::Component::GTMSubsystem::GTMPool->new(%{$_}));
  }
  my @auxpoolmbrstatus = ();
  foreach ($self->get_snmp_table_objects_with_cache(
      'F5-BIGIP-GLOBAL-MIB', 'gtmPoolMbrStatusTable', 'gtmPoolMbrStatusPoolName')) {
    next if ! defined $_->{gtmPoolMbrStatusPoolName};
    $_->{gtmPoolMbrStatusAddr} = $self->unhex_ip($_->{gtmPoolMbrStatusAddr});
    # gtmPoolMbrStatusIp is deprecated, use gtmPoolMbrStatusServerName+VsName
    push(@auxpoolmbrstatus, $_);
  }
  #my @auxpoolmemberstat = ();
  #foreach ($self->get_snmp_table_objects_with_cache(
  #    'F5-BIGIP-GLOBAL-MIB', 'gtmPoolMbrStatTable', 'gtmPoolMbrStatPoolName')) {
  #  $_->{gtmPoolMbrStatAddr} = $self->unhex_ip($_->{gtmPoolMbrStatAddr});
  #  push(@auxpoolmemberstat, $_);
  #  # gtmPoolMbrStatAddr is deprecated, use gtmPoolMbrStatNodeName
  #}
  foreach ($self->get_snmp_table_objects_with_cache(
      'F5-BIGIP-GLOBAL-MIB', 'gtmPoolMbrTable', 'gtmPoolMbrPoolName')) {
    $_->{gtmPoolMbrAddr} = $self->unhex_ip($_->{gtmPoolMbrAddr});
    foreach my $auxmbr (@auxpoolmbrstatus) {
      if ($_->{gtmPoolMbrPoolName} eq $auxmbr->{gtmPoolMbrStatusPoolName} &&
          $_->{gtmPoolMbrServerName} eq $auxmbr->{gtmPoolMbrStatusServerName} &&
          $_->{gtmPoolMbrVsName} eq $auxmbr->{gtmPoolMbrStatusVsName}) {
        foreach my $key (keys %{$auxmbr}) {
          next if $key =~ /.*indices$/;
          $_->{$key} = $auxmbr->{$key};
        }
      }
    }
    #foreach my $auxmember (@auxpoolmemberstat) {
    #  if ($_->{gtmPoolMbrPoolName} eq $auxmember->{gtmPoolMbrStatPoolName} &&
    #      $_->{gtmPoolMbrServerName} eq $auxmember->{gtmPoolMbrStatServerName} &&
    #      $_->{gtmPoolMbrVsName} eq $auxmember->{gtmPoolMbrStatVsName}) {
    #    foreach my $key (keys %{$auxmember}) {
    #      next if $key =~ /.*indices$/;
    #      $_->{$key} = $auxmember->{$key};
    #    }
    #  }
    #}
    push(@{$self->{poolmembers}},
        Classes::F5::F5BIGIP::Component::GTMSubsystem::GTMPoolMember->new(%{$_}));
  }
  $self->assign_members_to_pools();
  delete $self->{poolmembers};
}

sub assign_members_to_pools {
  my ($self) = @_;
  foreach my $pool (@{$self->{pools}}) {
    foreach my $poolmember (@{$self->{poolmembers}}) {
      if ($poolmember->{gtmPoolMbrPoolName} eq $pool->{gtmPoolName}) {
        push(@{$pool->{members}}, $poolmember);
      }
    }
    $pool->{gtmPoolMbrCnt} = scalar(@{$pool->{members}}) ;
    $pool->{gtmPoolActiveMemberCnt} = scalar(grep {
      $_->{gtmPoolMbrStatusAvailState} eq "green";
    } @{$pool->{members}}) ;
    $pool->{completeness} = $pool->{gtmPoolMbrCnt} ?
        $pool->{gtmPoolActiveMemberCnt} / $pool->{gtmPoolMbrCnt} * 100
        : 0;
  }
}

package Classes::F5::F5BIGIP::Component::GTMSubsystem::GTMPool;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };

sub finish {
  my ($self) = @_;
  $self->{members} = [];
}

sub check {
  my ($self) = @_;
  if ($self->mode =~ /device::lb::pool::comple/) {
    my $pool_info = sprintf "pool %s is %s, avail state is %s, active members: %d of %d",
        $self->{gtmPoolName},
        $self->{gtmPoolStatusEnabledState}, $self->{gtmPoolStatusAvailState},
        $self->{gtmPoolActiveMemberCnt}, $self->{gtmPoolMbrCnt};
    $self->add_info($pool_info);
    if ($self->{gtmPoolStatusAvailState} ne "green") {
      $self->annotate_info(sprintf "reason: %s", $self->{gtmPoolStatusDetailReason});
    }
    if ($self->{gtmPoolActiveMemberCnt} == 1) {
      # only one member left = no more redundancy!!
      $self->set_thresholds(
          metric => sprintf('pool_%s_completeness', $self->{gtmPoolName}),
          warning => "100:", critical => "51:");
    } else {
      $self->set_thresholds(
          metric => sprintf('pool_%s_completeness', $self->{gtmPoolName}),
          warning => "51:", critical => "26:");
    }
    $self->add_message($self->check_thresholds(
        metric => sprintf('pool_%s_completeness', $self->{gtmPoolName}),
        value => $self->{completeness}));
    if ($self->check_messages() || $self->mode  =~ /device::lb::pool::co.*tions/) {
      foreach my $member (@{$self->{members}}) {
        $member->check();
      }
    }
    $self->add_perfdata(
        label => sprintf('pool_%s_completeness', $self->{gtmPoolName}),
        value => $self->{completeness},
        uom => '%',
    );
    if ($self->opts->report eq "html") {
      printf "%s - %s%s\n", $self->status_code($self->check_messages()), $pool_info, $self->perfdata_string() ? " | ".$self->perfdata_string() : "";
      $self->suppress_messages();
      $self->draw_html_table();
    }
  }
}

sub draw_html_table {
  my ($self) = @_;
  if ($self->mode =~ /device::lb::pool::comple/) {
    my @headers = qw(Node Port Enabled Avail Reason);
    my @columns = qw(gtmPoolMbrNodeName gtmPoolMbrPort gtmPoolMbrStatusEnabledState gtmPoolMbrStatusAvailState gtmPoolMbrStatusDetailReason);
    if ($self->mode =~ /device::lb::pool::complections/) {
      push(@headers, "Connections");
      push(@headers, "ConnPct");
      push(@columns, "gtmPoolMbrStatServerCurConns");
      push(@columns, "gtmPoolMbrStatServerPctConns");
      foreach my $member (@{$self->{members}}) {
        $member->{gtmPoolMbrStatServerPctConns} = sprintf "%.5f", $member->{gtmPoolMbrStatServerPctConns};
      }
    }
    printf "<table style=\"border-collapse:collapse; border: 1px solid black;\">";
    printf "<tr>";
    foreach (@headers) {
      printf "<th style=\"text-align: left; padding-left: 4px; padding-right: 6px;\">%s</th>", $_;
    }
    printf "</tr>";
    foreach (sort {$a->{gtmPoolMbrNodeName} cmp $b->{gtmPoolMbrNodeName}} @{$self->{members}}) {
      printf "<tr>";
      printf "<tr style=\"border: 1px solid black;\">";
      foreach my $attr (@columns) {
        if ($_->{gtmPoolMbrStatusEnabledState} eq "enabled") {
          if ($_->{gtmPoolMbrStatusAvailState} eq "green") {
            printf "<td style=\"text-align: left; padding-left: 4px; padding-right: 6px; background-color: #33ff00;\">%s</td>", $_->{$attr};
          } else {
            printf "<td style=\"text-align: left; padding-left: 4px; padding-right: 6px; background-color: #f83838;\">%s</td>", $_->{$attr};
          }
        } else {
          printf "<td style=\"text-align: left; padding-left: 4px; padding-right: 6px; background-color: #acacac;\">%s</td>", $_->{$attr};
        }
      }
      printf "</tr>";
    }
    printf "</table>\n";
    printf "<!--\nASCII_NOTIFICATION_START\n";
    foreach (@headers) {
      printf "%20s", $_;
    }
    printf "\n";
    foreach (sort {$a->{gtmPoolMbrNodeName} cmp $b->{gtmPoolMbrNodeName}} @{$self->{members}}) {
      foreach my $attr (@columns) {
        printf "%20s", $_->{$attr};
      }
      printf "\n";
    }
    printf "ASCII_NOTIFICATION_END\n-->\n";
  } elsif ($self->mode =~ /device::lb::pool::complections/) {
  }
}

package Classes::F5::F5BIGIP::Component::GTMSubsystem::GTMPoolMember;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };


sub check {
  my ($self) = @_;
  if ($self->mode =~ /device::lb::pool::comple.*/) {
    if ($self->{gtmPoolMbrStatusEnabledState} eq "enabled") {
      if ($self->{gtmPoolMbrStatusAvailState} ne "green") {
        # info only, because it would ruin thresholds in the pool
        $self->add_ok(sprintf
            "member %s (%s) is %s (%s)",
            $self->{gtmPoolMbrStatusServerName},
            $self->{gtmPoolMbrStatusVsName},
            $self->{gtmPoolMbrStatusAvailState},
            $self->{gtmPoolMbrStatusDetailReason});
      }
    }
  }
}


package Classes::F5::F5BIGIP::Component::HaSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };

sub init {
  my $self = shift;
  if ($self->mode =~ /device::ha::role/) {
    $self->get_snmp_objects('F5-BIGIP-SYSTEM-MIB', (qw(sysAttrFailoverIsRedundant sysCmFailoverStatusId sysCmFailoverStatusColor sysCmFailoverStatusSummary)));
    $self->get_snmp_tables("F5-BIGIP-SYSTEM-MIB", [
      ['failoverstatusdetails', 'sysCmFailoverStatusDetailsTable', 'Classes::F5::F5BIGIP::Component::HaSubsystem::FailoverStatusDetails'],
    ]);
    $self->get_snmp_tables("F5-BIGIP-SYSTEM-MIB", [
      ['trafficgroupstatus', 'sysCmTrafficGroupStatusTable', 'Classes::F5::F5BIGIP::Component::HaSubsystem::TrafficGroupStatus'],
    ]);
    if (! $self->opts->role()) {
      $self->opts->override_opt('role', 'active'); # active/standby/standalone
    }
  }
}

sub check {
  my $self = shift;

  # The color of the failover status on the system.
  #   0 green - the system is functioning correctly;
  #   1 yellow - the system may be functioning suboptimally;
  #   2 red - the system requires attention to function correctly;
  #   3 blue - the system's status is unknown or incomplete;
  #   4 gray - the system is intentionally not functioning (offline);
  #   5 black - the system is not connected to any peers."

  my $msg = sprintf("ha %sstarted, role is %s (%s)",
      $self->{sysAttrFailoverIsRedundant} eq 'true' ? '' : 'not ',
      $self->{sysCmFailoverStatusId},
      $self->{sysCmFailoverStatusColor});

  # Note: verification needed that sysAttrFailoverIsRedundant is reliable to detect
  #       clustering enabled state
  if ( $self->{sysAttrFailoverIsRedundant} ) {
    if ( $self->opts->role() eq 'standalone' ) {
      $self->add_warning(sprintf "Unexpected failover status for standalone node: %s (%s)",
        $self->{sysCmFailoverStatusId},
        $self->{sysCmFailoverStatusColor},
      );
    } else {
      # failover is enabled, check node has proper state according to role
      if ( $self->{sysCmFailoverStatusId} eq $self->opts->role() ) {
        $self->add_ok($msg);
      } else {
        $self->add_critical_mitigation($msg);
        $self->add_message(defined $self->opts->mitigation() ? $self->opts->mitigation() : WARNING,
          sprintf "%s, expected role %s", $self->{sysCmFailoverStatusSummary}, $self->opts->role());
      }
    }
  } else {
    if ( $self->opts->role() eq 'standalone' ) {
      $self->add_ok($msg);
    } else {
      $self->add_critical($msg);
    }
  }

  if ( scalar(@{$self->{failoverstatusdetails}}) > 0 ) {
    $self->add_info("Failover Status Details:");
    foreach (@{$self->{failoverstatusdetails}}) {
      $_->check();
    }
  }

  if ( scalar(@{$self->{trafficgroupstatus}}) > 0 ) {
    $self->add_info("Traffic Groups:");
    foreach (@{$self->{trafficgroupstatus}}) {
      $_->check();
    }
  }
}

package Classes::F5::F5BIGIP::Component::HaSubsystem::FailoverStatusDetails;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my $self = shift;
  $self->add_info($self->{sysCmFailoverStatusDetailsDetails});
}

package Classes::F5::F5BIGIP::Component::HaSubsystem::TrafficGroupStatus;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my $self = shift;
  # TODO: should probably add some real checking...
  $self->add_info(sprintf "%s: %s -> %s",
    $self->{sysCmTrafficGroupStatusTrafficGroup},
    $self->{sysCmTrafficGroupStatusDeviceName},
    $self->{sysCmTrafficGroupStatusFailoverStatus}
  );
}

package Classes::F5::F5BIGIP::Component::LTMSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

{
  our $max_l4_connections = 10000000;
}

sub max_l4_connections : lvalue {
  my ($self) = @_;
  $Classes::F5::F5BIGIP::Component::LTMSubsystem::max_l4_connections;
}

sub new {
  my ($class, %params) = @_;
  my $self = {
    sysProductVersion => $params{sysProductVersion},
    sysPlatformInfoMarketingName => $params{sysPlatformInfoMarketingName},
  };
  if ($self->{sysProductVersion} =~ /^4/) {
    bless $self, "Classes::F5::F5BIGIP::Component::LTMSubsystem4";
    $self->debug("use Classes::F5::F5BIGIP::Component::LTMSubsystem4");
  } else {
    bless $self, "Classes::F5::F5BIGIP::Component::LTMSubsystem9";
    $self->debug("use Classes::F5::F5BIGIP::Component::LTMSubsystem9");
  }
  # tables can be huge
  $self->mult_snmp_max_msg_size(10);
  $self->set_max_l4_connections();
  $self->init();
  return $self;
}

sub set_max_l4_connections {
  my ($self) = @_;
  if ($self->{sysPlatformInfoMarketingName} && 
      $self->{sysPlatformInfoMarketingName} =~ /BIG-IP\s*(\d+)/i) {
    if ($1 =~ /^(1500)$/) {
      $self->max_l4_connections() = 1500000;
    } elsif ($1 =~ /^(1600)$/) {
      $self->max_l4_connections() = 3000000;
    } elsif ($1 =~ /^(2000|2200)$/) {
      $self->max_l4_connections() = 5000000;
    } elsif ($1 =~ /^(3400)$/) {
      $self->max_l4_connections() = 4000000;
    } elsif ($1 =~ /^(3600|8800|8400)$/) {
      $self->max_l4_connections() = 8000000;
    } elsif ($1 =~ /^(4000|4200)$/) {
      $self->max_l4_connections() = 10000000;
    } elsif ($1 =~ /^(8900|8950)$/) {
      $self->max_l4_connections() = 12000000;
    } elsif ($1 =~ /^(5000|5050|5200|5250|7000|7050|7200|7250|11050)$/) {
      $self->max_l4_connections() = 24000000;
    } elsif ($1 =~ /^(10000|10050|10200|10250)$/) {
      $self->max_l4_connections() = 36000000;
    } elsif ($1 =~ /^(10350|12250)$/) {
      $self->max_l4_connections() = 80000000;
    } elsif ($1 =~ /^(11000)$/) {
      $self->max_l4_connections() = 30000000;
    }
  } elsif ($self->{sysPlatformInfoMarketingName} && 
      $self->{sysPlatformInfoMarketingName} =~ /Viprion\s*(\d+)/i) {
    if ($1 =~ /^(2100)$/) {
      $self->max_l4_connections() = 12000000;
    } elsif ($1 =~ /^(2150)$/) {
      $self->max_l4_connections() = 24000000;
    } elsif ($1 =~ /^(2200|2250|2400)$/) {
      $self->max_l4_connections() = 48000000;
    } elsif ($1 =~ /^(4300)$/) {
      $self->max_l4_connections() = 36000000;
    } elsif ($1 =~ /^(4340|4800)$/) {
      $self->max_l4_connections() = 72000000;
    }
  }
}

sub check {
  my ($self) = @_;
  $self->add_info('checking ltm pools');
  if (scalar(@{$self->{pools}}) == 0) {
    $self->add_unknown('no pools');
    return;
  }
  if ($self->mode =~ /pool::list/) {
    foreach (sort {$a->{ltmPoolName} cmp $b->{ltmPoolName}} @{$self->{pools}}) {
      printf "%s\n", $_->{ltmPoolName};
      #$_->list();
    }
  } else {
    foreach (@{$self->{pools}}) {
      $_->check();
    }
    $self->reduce_messages_short('pools are in good condition');
  }
}


package Classes::F5::F5BIGIP::Component::LTMSubsystem9;
our @ISA = qw(Classes::F5::F5BIGIP::Component::LTMSubsystem Monitoring::GLPlugin::SNMP::TableItem);
use strict;

#
# A node is an ip address (may belong to more than one pool)
# A pool member is an ip:port combination
#

sub init {
  my ($self) = @_;
  # ! merge ltmPoolStatus, ltmPoolMemberStatus, bec. ltmPoolAvailabilityState is deprecated
  if ($self->mode =~ /pool::list/) {
    $self->update_entry_cache(1, 'F5-BIGIP-LOCAL-MIB', 'ltmPoolStatusTable', 'ltmPoolStatusName');
    $self->update_entry_cache(1, 'F5-BIGIP-LOCAL-MIB', 'ltmPoolTable', 'ltmPoolName');
    $self->update_entry_cache(1, 'F5-BIGIP-LOCAL-MIB', 'ltmPoolMbrStatusTable', 'ltmPoolMbrStatusPoolName');
    $self->update_entry_cache(1, 'F5-BIGIP-LOCAL-MIB', 'ltmPoolMemberTable', 'ltmPoolMemberPoolName');
    $self->update_entry_cache(1, 'F5-BIGIP-LOCAL-MIB', 'ltmPoolStatTable', 'ltmPoolStatName');
  }
  my @auxpools = ();
  foreach ($self->get_snmp_table_objects_with_cache(
      'F5-BIGIP-LOCAL-MIB', 'ltmPoolStatusTable', 'ltmPoolStatusName')) {
    push(@auxpools, $_);
  }
  if (! grep { $self->filter_name($_->{ltmPoolStatusName}) } @auxpools) {
    #$self->add_unknown("did not find any pools");
    $self->{pools} = [];
    return;
  }
  my @auxstats = ();
  foreach ($self->get_snmp_table_objects_with_cache(
      'F5-BIGIP-LOCAL-MIB', 'ltmPoolStatTable', 'ltmPoolStatName')) {
    push(@auxstats, $_) if $self->filter_name($_->{ltmPoolStatName});
  }
  foreach ($self->get_snmp_table_objects_with_cache(
      'F5-BIGIP-LOCAL-MIB', 'ltmPoolTable', 'ltmPoolName')) {
    foreach my $auxpool (@auxpools) {
      if ($_->{ltmPoolName} eq $auxpool->{ltmPoolStatusName}) {
        foreach my $key (keys %{$auxpool}) {
          $_->{$key} = $auxpool->{$key};
        }
      }
    }
    foreach my $auxstat (@auxstats) {
      if ($_->{ltmPoolName} eq $auxstat->{ltmPoolStatName}) {
        foreach my $key (keys %{$auxstat}) {
          $_->{$key} = $auxstat->{$key};
        }
      }
    }
    push(@{$self->{pools}},
        Classes::F5::F5BIGIP::Component::LTMSubsystem9::LTMPool->new(%{$_}));
  }
  my @auxpoolmbrstatus = ();
  foreach ($self->get_snmp_table_objects_with_cache(
      'F5-BIGIP-LOCAL-MIB', 'ltmPoolMbrStatusTable', 'ltmPoolMbrStatusPoolName')) {
    next if ! defined $_->{ltmPoolMbrStatusPoolName};
    $_->{ltmPoolMbrStatusAddr} = $self->unhex_ip($_->{ltmPoolMbrStatusAddr});
    push(@auxpoolmbrstatus, $_);
  }
  my @auxpoolmemberstat = ();
  foreach ($self->get_snmp_table_objects_with_cache(
      'F5-BIGIP-LOCAL-MIB', 'ltmPoolMemberStatTable', 'ltmPoolMemberStatPoolName')) {
    $_->{ltmPoolMemberStatAddr} = $self->unhex_ip($_->{ltmPoolMemberStatAddr});
    push(@auxpoolmemberstat, $_);
    # ltmPoolMemberStatAddr is deprecated, use ltmPoolMemberStatNodeName
    # (but for older devices which have no ltmPoolMemberStatNodeName,
    # check ltmPoolMemberStatAddr(Type) as well
  }
  foreach ($self->get_snmp_table_objects_with_cache(
      'F5-BIGIP-LOCAL-MIB', 'ltmPoolMemberTable', 'ltmPoolMemberPoolName')) {
    $_->{ltmPoolMemberAddr} = $self->unhex_ip($_->{ltmPoolMemberAddr});
    foreach my $auxmbr (@auxpoolmbrstatus) {
      if ($_->{ltmPoolMemberPoolName} eq $auxmbr->{ltmPoolMbrStatusPoolName} &&
          $_->{ltmPoolMemberPort} eq $auxmbr->{ltmPoolMbrStatusPort} &&
          $_->{ltmPoolMemberAddrType} eq $auxmbr->{ltmPoolMbrStatusAddrType} &&
          $_->{ltmPoolMemberAddr} eq $auxmbr->{ltmPoolMbrStatusAddr}) {
        foreach my $key (keys %{$auxmbr}) {
          next if $key =~ /.*indices$/;
          $_->{$key} = $auxmbr->{$key};
        }
      }
    }
    foreach my $auxmember (@auxpoolmemberstat) {
      if ($_->{ltmPoolMemberPoolName} eq $auxmember->{ltmPoolMemberStatPoolName} &&
          $_->{ltmPoolMemberPort} eq $auxmember->{ltmPoolMemberStatPort} && ((
              $_->{ltmPoolMemberNodeName} && $auxmember->{ltmPoolMemberStatNodeName} &&
              $_->{ltmPoolMemberNodeName} eq $auxmember->{ltmPoolMemberStatNodeName}
          ) || (
              $_->{ltmPoolMemberAddrType} eq $auxmember->{ltmPoolMemberStatAddrType}
 &&
              $_->{ltmPoolMemberAddr} eq $auxmember->{ltmPoolMemberStatAddr}
          ))
      ) {
        foreach my $key (keys %{$auxmember}) {
          next if $key =~ /.*indices$/;
          $_->{$key} = $auxmember->{$key};
        }
      }
    }
    push(@{$self->{poolmembers}},
        Classes::F5::F5BIGIP::Component::LTMSubsystem9::LTMPoolMember->new(%{$_}));
  }
  # ltmPoolMemberNodeName may be the same as ltmPoolMemberAddr
  # there is a chance to learn the actual hostname via ltmNodeAddrStatusName
  # so if there ia a member with name==addr, we get the addrstatus table
  my $need_name_from_addr = 0;
  foreach my $poolmember (@{$self->{poolmembers}}) {
    if ($poolmember->{ltmPoolMemberNodeName} eq $poolmember->{ltmPoolMemberAddr}) {
      $need_name_from_addr = 1;
    }
  }
  if ($need_name_from_addr) {
    my @auxnodeaddrstatus = ();
    foreach ($self->get_snmp_table_objects(
        'F5-BIGIP-LOCAL-MIB', 'ltmNodeAddrStatusTable')) {
      $_->{ltmNodeAddrStatusAddr} = $self->unhex_ip($_->{ltmNodeAddrStatusAddr});
      push(@auxnodeaddrstatus, $_);
    }
    foreach my $poolmember (@{$self->{poolmembers}}) {
      foreach my $auxaddr (@auxnodeaddrstatus) {
        if ($poolmember->{ltmPoolMemberAddrType} eq $auxaddr->{ltmNodeAddrStatusAddrType} &&
            $poolmember->{ltmPoolMemberAddr} eq $auxaddr->{ltmNodeAddrStatusAddr}) {
          $poolmember->{ltmNodeAddrStatusName} = $auxaddr->{ltmNodeAddrStatusName};
          last;
          # needed later, if ltmNodeAddrStatusName is an ip-address. LTMPoolMember::finish
        }
      }
    }
  } else {
    foreach my $poolmember (@{$self->{poolmembers}}) {
      # because later we use ltmNodeAddrStatusName
      $poolmember->{ltmNodeAddrStatusName} = $poolmember->{ltmPoolMemberNodeName};
      my $x = 1;
    }
  }
  foreach my $poolmember (@{$self->{poolmembers}}) {
    $poolmember->rename();
  }
  $self->assign_members_to_pools();
}

sub assign_members_to_pools {
  my ($self) = @_;
  foreach my $pool (@{$self->{pools}}) {
    foreach my $poolmember (@{$self->{poolmembers}}) {
      if ($poolmember->{ltmPoolMemberPoolName} eq $pool->{ltmPoolName}) {
        $poolmember->{ltmPoolMonitorRule} = $pool->{ltmPoolMonitorRule};
        push(@{$pool->{members}}, $poolmember);
      }
    }
    if (! defined $pool->{ltmPoolMemberCnt}) {
      $pool->{ltmPoolMemberCnt} = scalar(@{$pool->{members}}) ;
      $self->debug("calculate ltmPoolMemberCnt");
    }
    $pool->{completeness} = $pool->{ltmPoolMemberCnt} ?
        $pool->{ltmPoolActiveMemberCnt} / $pool->{ltmPoolMemberCnt} * 100
        : 0;
  }
}


package Classes::F5::F5BIGIP::Component::LTMSubsystem9::LTMPool;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };

sub finish {
  my ($self) = @_;
  $self->{ltmPoolMemberMonitorRule} ||= $self->{ltmPoolMonitorRule};
  $self->{members} = [];
}

sub check {
  my ($self) = @_;
  if ($self->mode =~ /device::lb::pool::comple/) {
    my $pool_info = sprintf "pool %s is %s, avail state is %s, active members: %d of %d, connections: %d",
        $self->{ltmPoolName},
        $self->{ltmPoolStatusEnabledState}, $self->{ltmPoolStatusAvailState},
        $self->{ltmPoolActiveMemberCnt}, $self->{ltmPoolMemberCnt}, $self->{ltmPoolStatServerCurConns};
    $self->add_info($pool_info);
    if ($self->{ltmPoolActiveMemberCnt} == 1) {
      # only one member left = no more redundancy!!
      $self->set_thresholds(
          metric => sprintf('pool_%s_completeness', $self->{ltmPoolName}),
          warning => "100:", critical => "51:");
    } else {
      $self->set_thresholds(
          metric => sprintf('pool_%s_completeness', $self->{ltmPoolName}),
          warning => "51:", critical => "26:");
    }
    $self->add_message($self->check_thresholds(
        metric => sprintf('pool_%s_completeness', $self->{ltmPoolName}),
        value => $self->{completeness}));
    if ($self->{ltmPoolMinActiveMembers} > 0 &&
        $self->{ltmPoolActiveMemberCnt} < $self->{ltmPoolMinActiveMembers}) {
      $self->annotate_info(sprintf("not enough active members (%d, min is %d)",
              $self->{ltmPoolActiveMemberCnt},
              $self->{ltmPoolMinActiveMembers}));
      $self->add_message(defined $self->opts->mitigation() ? $self->opts->mitigation() : CRITICAL);
    }
    if ($self->check_messages() || $self->mode  =~ /device::lb::pool::co.*tions/) {
      foreach my $member (@{$self->{members}}) {
        $member->check();
      }
    }
    $self->add_perfdata(
        label => sprintf('pool_%s_completeness', $self->{ltmPoolName}),
        value => $self->{completeness},
        uom => '%',
    );
    $self->add_perfdata(
        label => sprintf('pool_%s_servercurconns', $self->{ltmPoolName}),
        value => $self->{ltmPoolStatServerCurConns},
        warning => undef, critical => undef,
    );
    if ($self->opts->report eq "html") {
      printf "%s - %s%s\n", $self->status_code($self->check_messages()), $pool_info, $self->perfdata_string() ? " | ".$self->perfdata_string() : "";
      $self->suppress_messages();
      $self->draw_html_table();
    }
  } elsif ($self->mode =~ /device::lb::pool::connections/) {
    foreach my $member (@{$self->{members}}) {
      $member->check();
    }
  }
}

sub draw_html_table {
  my ($self) = @_;
  if ($self->mode =~ /device::lb::pool::comple/) {
    my @headers = qw(Node Port Enabled Avail Reason);
    my @columns = qw(ltmPoolMemberNodeName ltmPoolMemberPort ltmPoolMbrStatusEnabledState ltmPoolMbrStatusAvailState ltmPoolMbrStatusDetailReason);
    if ($self->mode =~ /device::lb::pool::complections/) {
      push(@headers, "Connections");
      push(@headers, "ConnPct");
      push(@columns, "ltmPoolMemberStatServerCurConns");
      push(@columns, "ltmPoolMemberStatServerPctConns");
      foreach my $member (@{$self->{members}}) {
        $member->{ltmPoolMemberStatServerPctConns} = sprintf "%.5f", $member->{ltmPoolMemberStatServerPctConns};
      }
    }
    printf "<table style=\"border-collapse:collapse; border: 1px solid black;\">";
    printf "<tr>";
    foreach (@headers) {
      printf "<th style=\"text-align: left; padding-left: 4px; padding-right: 6px;\">%s</th>", $_;
    }
    printf "</tr>";
    foreach (sort {$a->{ltmPoolMemberNodeName} cmp $b->{ltmPoolMemberNodeName}} @{$self->{members}}) {
      printf "<tr>";
      printf "<tr style=\"border: 1px solid black;\">";
      foreach my $attr (@columns) {
        if ($_->{ltmPoolMbrStatusEnabledState} eq "enabled") {
          if ($_->{ltmPoolMbrStatusAvailState} eq "green") {
            printf "<td style=\"text-align: left; padding-left: 4px; padding-right: 6px; background-color: #33ff00;\">%s</td>", $_->{$attr};
          } else {
            printf "<td style=\"text-align: left; padding-left: 4px; padding-right: 6px; background-color: #f83838;\">%s</td>", $_->{$attr};
          }
        } else {
          printf "<td style=\"text-align: left; padding-left: 4px; padding-right: 6px; background-color: #acacac;\">%s</td>", $_->{$attr};
        }
      }
      printf "</tr>";
    }
    printf "</table>\n";
    printf "<!--\nASCII_NOTIFICATION_START\n";
    foreach (@headers) {
      printf "%20s", $_;
    }
    printf "\n";
    foreach (sort {$a->{ltmPoolMemberNodeName} cmp $b->{ltmPoolMemberNodeName}} @{$self->{members}}) {
      foreach my $attr (@columns) {
        printf "%20s", $_->{$attr};
      }
      printf "\n";
    }
    printf "ASCII_NOTIFICATION_END\n-->\n";
  } elsif ($self->mode =~ /device::lb::pool::complections/) {
  }
}

package Classes::F5::F5BIGIP::Component::LTMSubsystem9::LTMPoolMember;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };

sub max_l4_connections {
  my ($self) = @_;
  $Classes::F5::F5BIGIP::Component::LTMSubsystem::max_l4_connections;
}

sub finish {
  my ($self) = @_;
  if ($self->mode =~ /device::lb::pool::comple/) {
    $self->{ltmPoolMemberNodeName} ||= $self->{ltmPoolMemberAddr};
  }
  if (! exists $self->{ltmPoolMemberStatPoolName}) {
    # if ltmPoolMbrStatusDetailReason: Forced down
    #    ltmPoolMbrStatusEnabledState: disabled
    # then we have no ltmPoolMemberStat*
    $self->{ltmPoolMemberStatServerCurConns} = 0;
  }
  if ($self->mode =~ /device::lb::pool::co.*ctions/) {
    # in rare cases we suddenly get noSuchInstance for ltmPoolMemberConnLimit
    # looks like shortly before a member goes down, all attributes get noSuchInstance
    #  except ltmPoolMemberStatAddr, ltmPoolMemberAddr,ltmPoolMemberStatusAddr
    # after a while, the member appears again, but Forced down and without Stats (see above)
    $self->protect_value($self->{ltmPoolMemberAddr},
        'ltmPoolMemberConnLimit', 'positive');
    $self->protect_value($self->{ltmPoolMemberAddr},
        'ltmPoolMemberStatServerCurConns', 'positive');
    if (! $self->{ltmPoolMemberConnLimit}) {
      $self->{ltmPoolMemberConnLimit} = $self->max_l4_connections();
    }
    $self->{ltmPoolMemberStatServerPctConns} = 
        100 * $self->{ltmPoolMemberStatServerCurConns} /
        $self->{ltmPoolMemberConnLimit};
  }
}

sub rename {
  my ($self) = @_;
  if ($self->{ltmPoolMemberNodeName} eq $self->{ltmPoolMemberAddr} &&
      $self->{ltmNodeAddrStatusName}) {
    $self->{ltmPoolMemberNodeName} = $self->{ltmNodeAddrStatusName};
  }
}

sub check {
  my ($self) = @_;
  if ($self->mode =~ /device::lb::pool::comple.*/) {
    if ($self->{ltmPoolMbrStatusEnabledState} eq "enabled") {
      if ($self->{ltmPoolMbrStatusAvailState} ne "green") {
        # info only, because it would ruin thresholds in the pool
        $self->add_ok(sprintf 
            "member %s:%s is %s/%s (%s)",
            $self->{ltmPoolMemberNodeName},
            $self->{ltmPoolMemberPort},
            $self->{ltmPoolMemberMonitorState},
            $self->{ltmPoolMbrStatusAvailState},
            $self->{ltmPoolMbrStatusDetailReason});
      }
    }
  }
  if ($self->mode =~ /device::lb::pool::co.*ctions/) {
    my $label = 'member_'.$self->{ltmPoolMemberNodeName}.'_'.$self->{ltmPoolMemberPort};
    $self->set_thresholds(metric => $label.'_connections_pct', warning => "85", critical => "95");
    $self->add_info(sprintf "member %s:%s has %d connections (from max %dM)",
        $self->{ltmPoolMemberNodeName},
        $self->{ltmPoolMemberPort},
        $self->{ltmPoolMemberStatServerCurConns},
        $self->{ltmPoolMemberConnLimit} / 1000000);
    $self->add_message($self->check_thresholds(metric => $label.'_connections_pct', value => $self->{ltmPoolMemberStatServerPctConns}));
    $self->add_perfdata(
        label => $label.'_connections_pct',
        value => $self->{ltmPoolMemberStatServerPctConns},
        uom => '%',
    );
    $self->add_perfdata(
        label => $label.'_connections',
        value => $self->{ltmPoolMemberStatServerCurConns},
        warning => undef, critical => undef,
    );
  }
}


package Classes::F5::F5BIGIP::Component::LTMSubsystem4;
our @ISA = qw(Classes::F5::F5BIGIP::Component::LTMSubsystem Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub init {
  my ($self) = @_;
  foreach ($self->get_snmp_table_objects(
      'LOAD-BAL-SYSTEM-MIB', 'poolTable')) {
    if ($self->filter_name($_->{poolName})) {
      push(@{$self->{pools}},
          Classes::F5::F5BIGIP::Component::LTMSubsystem4::LTMPool->new(%{$_}));
    }
  }
  foreach ($self->get_snmp_table_objects(
      'LOAD-BAL-SYSTEM-MIB', 'poolMemberTable')) {
    if ($self->filter_name($_->{poolMemberPoolName})) {
      push(@{$self->{poolmembers}},
          Classes::F5::F5BIGIP::Component::LTMSubsystem4::LTMPoolMember->new(%{$_}));
    }
  }
  $self->assign_members_to_pools();
}

sub assign_members_to_pools {
  my ($self) = @_;
  foreach my $pool (@{$self->{pools}}) {
    foreach my $poolmember (@{$self->{poolmembers}}) {
      if ($poolmember->{poolMemberPoolName} eq $pool->{poolName}) {
        push(@{$pool->{members}}, $poolmember);
      }
    }
    if (! defined $pool->{poolMemberQty}) {
      $pool->{poolMemberQty} = scalar(@{$pool->{members}}) ;
      $self->debug("calculate poolMemberQty");
    }
    $pool->{completeness} = $pool->{poolMemberQty} ?
        $pool->{poolActiveMemberCount} / $pool->{poolMemberQty} * 100
        : 0;
  }
}


package Classes::F5::F5BIGIP::Component::LTMSubsystem4::LTMPool;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };

sub finish {
  my ($self) = @_;
  $self->{members} = [];
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'pool %s active members: %d of %d', $self->{poolName},
      $self->{poolActiveMemberCount},
      $self->{poolMemberQty});
  if ($self->{poolActiveMemberCount} == 1) {
    # only one member left = no more redundancy!!
    $self->set_thresholds(warning => "100:", critical => "51:");
  } else {
    $self->set_thresholds(warning => "51:", critical => "26:");
  }
  $self->add_message($self->check_thresholds($self->{completeness}));
  if ($self->{poolMinActiveMembers} > 0 &&
      $self->{poolActiveMemberCount} < $self->{poolMinActiveMembers}) {
    $self->add_nagios(
        defined $self->opts->mitigation() ? $self->opts->mitigation() : CRITICAL,
        sprintf("pool %s has not enough active members (%d, min is %d)", 
            $self->{poolName}, $self->{poolActiveMemberCount}, 
            $self->{poolMinActiveMembers})
    );
  }
  $self->add_perfdata(
      label => sprintf('pool_%s_completeness', $self->{poolName}),
      value => $self->{completeness},
      uom => '%',
      warning => $self->{warning},
      critical => $self->{critical},
  );
}


package Classes::F5::F5BIGIP::Component::LTMSubsystem4::LTMPoolMember;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

package Classes::F5::F5BIGIP::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('F5-BIGIP-SYSTEM-MIB', (qw(
      sysStatMemoryTotal sysStatMemoryUsed sysHostMemoryTotal sysHostMemoryUsed)));
  $self->{stat_mem_usage} = ($self->{sysStatMemoryUsed} / $self->{sysStatMemoryTotal}) * 100;
  $self->{host_mem_usage} = ($self->{sysHostMemoryUsed} / $self->{sysHostMemoryTotal}) * 100;
}

sub check {
  my ($self) = @_;
  $self->add_info('checking memory');
  $self->add_info(sprintf 'tmm memory usage is %.2f%%',
      $self->{stat_mem_usage});
  $self->set_thresholds(warning => 80, critical => 90, metric => 'tmm_usage');
  $self->add_message($self->check_thresholds(metric => 'tmm_usage', value => $self->{stat_mem_usage}));
  $self->add_perfdata(
      label => 'tmm_usage',
      value => $self->{stat_mem_usage},
      uom => '%',
  );
  $self->add_info(sprintf 'host memory usage is %.2f%%',
      $self->{host_mem_usage});
  $self->set_thresholds(warning => 100, critical => 100, metric => 'host_usage');
  $self->add_message($self->check_thresholds(metric => 'host_usage', value => $self->{host_mem_usage}));
  $self->add_perfdata(
      label => 'host_usage',
      value => $self->{host_mem_usage},
      uom => '%',
  );
}

package Classes::F5::F5BIGIP::Component::PowersupplySubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('F5-BIGIP-SYSTEM-MIB', [
      ['powersupplies', 'sysChassisPowerSupplyTable', 'Classes::F5::F5BIGIP::Component::PowersupplySubsystem::Powersupply'],
  ]);
}

package Classes::F5::F5BIGIP::Component::PowersupplySubsystem::Powersupply;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'chassis powersupply %d is %s',
      $self->{sysChassisPowerSupplyIndex},
      $self->{sysChassisPowerSupplyStatus});
  if ($self->{sysChassisPowerSupplyStatus} eq 'notpresent') {
  } else {
    if ($self->{sysChassisPowerSupplyStatus} ne 'good') {
      $self->add_critical();
    }
  }
}

package Classes::F5::F5BIGIP::Component::TemperatureSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('F5-BIGIP-SYSTEM-MIB', [
      ['temperatures', 'sysChassisTempTable', 'Classes::F5::F5BIGIP::Component::TemperatureSubsystem::Temperature'],
  ]);
}

package Classes::F5::F5BIGIP::Component::TemperatureSubsystem::Temperature;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'chassis temperature %d is %sC',
      $self->{sysChassisTempIndex},
      $self->{sysChassisTempTemperature});
  $self->add_perfdata(
      label => sprintf('temp_%s', $self->{sysChassisTempIndex}),
      value => $self->{sysChassisTempTemperature},
  );
}

package Classes::F5::F5BIGIP;
our @ISA = qw(Classes::F5);
use strict;

sub init {
  my ($self) = @_;
  # gets 11.* and 9.*
  $self->{sysProductVersion} = $self->get_snmp_object('F5-BIGIP-SYSTEM-MIB', 'sysProductVersion');
  $self->{sysPlatformInfoMarketingName} = $self->get_snmp_object('F5-BIGIP-SYSTEM-MIB', 'sysPlatformInfoMarketingName');
  if (! defined $self->{sysProductVersion} ||
      $self->{sysProductVersion} !~ /^((9)|(10)|(11)|(12)|(13)|(14)|(15)|(16))/) {
    $self->{sysProductVersion} = "4";
  }
  if ($self->mode =~ /device::hardware::health/) {
    if (! $self->get_snmp_object('F5-BIGIP-SYSTEM-MIB', 'sysChassisFanNumber') &&
        ! $self->get_snmp_object('F5-BIGIP-SYSTEM-MIB', 'sysChassisPowerSupplyNumber')) {
      $self->analyze_and_check_environmental_subsystem("Classes::HOSTRESOURCESMIB::Component::EnvironmentalSubsystem");
    } else {
      $self->analyze_and_check_environmental_subsystem("Classes::F5::F5BIGIP::Component::EnvironmentalSubsystem");
    }
    $self->analyze_and_check_environmental_subsystem("Classes::F5::F5BIGIP::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::F5::F5BIGIP::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::F5::F5BIGIP::Component::MemSubsystem");
  } elsif ($self->mode =~ /device::lb/) {
    if ($self->opts->role && $self->opts->role eq "gtm") {
      $self->analyze_and_check_gtm_subsystem("Classes::F5::F5BIGIP::Component::GTMSubsystem");
    } else {
      $self->analyze_and_check_ltm_subsystem();
    }
  } elsif ($self->mode =~ /device::wideip/) {
    $self->analyze_and_check_gtm_subsystem("Classes::F5::F5BIGIP::Component::GTMSubsystem");
  } elsif ($self->mode =~ /device::users::count/) {
    $self->analyze_and_check_connection_subsystem("Classes::F5::F5BIGIP::Component::ConnectionSubsystem");
  } elsif ($self->mode =~ /device::connections::count/) {
    $self->analyze_and_check_connection_subsystem("Classes::F5::F5BIGIP::Component::ConnectionSubsystem");
  } elsif ($self->mode =~ /device::config/) {
    $self->analyze_and_check_config_subsystem("Classes::F5::F5BIGIP::Component::ConfigSubsystem");
  } elsif ($self->mode =~ /device::ha::/) {
    $self->analyze_and_check_ha_subsystem("Classes::F5::F5BIGIP::Component::HaSubsystem");
  } else {
    $self->no_such_mode();
  }
}

sub analyze_ltm_subsystem {
  my ($self) = @_;
  $self->{components}->{ltm_subsystem} =
      Classes::F5::F5BIGIP::Component::LTMSubsystem->new('sysProductVersion' => $self->{sysProductVersion}, sysPlatformInfoMarketingName => $self->{sysPlatformInfoMarketingName});
}

package Classes::F5;
our @ISA = qw(Classes::Device);
use strict;

use constant trees => (
    '1.3.6.1.4.1.3375.1.2.1.1.1', # F5-3DNS-MIB
    '1.3.6.1.4.1.3375', # F5-BIGIP-COMMON-MIB
    '1.3.6.1.4.1.3375.2.2', # F5-BIGIP-LOCAL-MIB
    '1.3.6.1.4.1.3375.2.1', # F5-BIGIP-SYSTEM-MIB
    '1.3.6.1.4.1.3375.1.1.1.1', # LOAD-BAL-SYSTEM-MIB
    '1.3.6.1.4.1.2021', # UCD-SNMP-MIB
);

sub init {
  my ($self) = @_;
  if ($self->{productname} =~ /Linux.*((el6.f5.x86_64)|(el5.1.0.f5app)) .*/i ||
      $self->{sysobjectid} =~ /1\.3\.6\.1\.4\.1\.3375\./) {
    bless $self, 'Classes::F5::F5BIGIP';
    $self->debug('using Classes::F5::F5BIGIP');
  }
  if (ref($self) ne "Classes::F5") {
    $self->init();
  }
}

package Classes::CheckPoint::Firewall1::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->{disk_subsystem} =
      Classes::CheckPoint::Firewall1::Component::DiskSubsystem->new();
  $self->{temperature_subsystem} =
      Classes::CheckPoint::Firewall1::Component::TemperatureSubsystem->new();
  $self->{fan_subsystem} =
      Classes::CheckPoint::Firewall1::Component::FanSubsystem->new();
  $self->{voltage_subsystem} =
      Classes::CheckPoint::Firewall1::Component::VoltageSubsystem->new();
  $self->{powersupply_subsystem} =
      Classes::CheckPoint::Firewall1::Component::PowersupplySubsystem->new();
  $self->{clock_subsystem} =
      Classes::HOSTRESOURCESMIB::Component::ClockSubsystem->new();
}

sub check {
  my ($self) = @_;
  $self->{disk_subsystem}->check();
  $self->{temperature_subsystem}->check();
  $self->{fan_subsystem}->check();
  $self->{voltage_subsystem}->check();
  $self->{powersupply_subsystem}->check();
  $self->{clock_subsystem}->check() if ! $self->{clock_subsystem}->is_blacklisted();
  if (! $self->check_messages()) {
    $self->clear_ok(); # too much noise
    $self->add_ok("environmental hardware working fine");
  }
}

sub dump {
  my ($self) = @_;
  $self->{disk_subsystem}->dump();
  $self->{temperature_subsystem}->dump();
  $self->{fan_subsystem}->dump();
  $self->{voltage_subsystem}->dump();
  $self->{powersupply_subsystem}->dump();
  $self->{clock_subsystem}->dump();
}

package Classes::CheckPoint::Firewall1::Component::TemperatureSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('CHECKPOINT-MIB', [
      ['temperatures', 'tempertureSensorTable', 'Classes::CheckPoint::Firewall1::Component::TemperatureSubsystem::Temperature'],
  ]);
}

sub check {
  my ($self) = @_;
  foreach (@{$self->{temperatures}}) {
    $_->check();
  }
}


package Classes::CheckPoint::Firewall1::Component::TemperatureSubsystem::Temperature;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'temperature %s is %s (%d %s)', 
      $self->{tempertureSensorName}, $self->{tempertureSensorStatus},
      $self->{tempertureSensorValue}, $self->{tempertureSensorUnit});
  if ($self->{tempertureSensorStatus} eq 'normal') {
    $self->add_ok();
  } elsif ($self->{tempertureSensorStatus} eq 'abnormal') {
    $self->add_critical();
  } else {
    $self->add_unknown();
  }
  $self->add_perfdata(
      label => 'temperature_'.$self->{tempertureSensorName},
      value => $self->{tempertureSensorValue},
  );
}

package Classes::CheckPoint::Firewall1::Component::FanSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('CHECKPOINT-MIB', [
      ['fans', 'fanSpeedSensorTable', 'Classes::CheckPoint::Firewall1::Component::FanSubsystem::Fan'],
  ]);
}

sub check {
  my ($self) = @_;
  foreach (@{$self->{fans}}) {
    $_->check();
  }
}


package Classes::CheckPoint::Firewall1::Component::FanSubsystem::Fan;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'fan %s is %s (%d %s)', 
      $self->{fanSpeedSensorName}, $self->{fanSpeedSensorStatus},
      $self->{fanSpeedSensorValue}, $self->{fanSpeedSensorUnit});
  if ($self->{fanSpeedSensorStatus} eq 'normal') {
    $self->add_ok();
  } elsif ($self->{fanSpeedSensorStatus} eq 'abnormal') {
    $self->add_critical();
  } else {
    $self->add_unknown();
  }
  $self->set_thresholds(warning => 60, critical => 70);
  $self->add_perfdata(
      label => 'fan'.$self->{fanSpeedSensorName}.'_rpm',
      value => $self->{fanSpeedSensorValue},
  );
}

package Classes::CheckPoint::Firewall1::Component::VoltageSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('CHECKPOINT-MIB', [
      ['voltages', 'voltageSensorTable', 'Classes::CheckPoint::Firewall1::Component::VoltageSubsystem::Voltage'],
  ]);
}

sub check {
  my ($self) = @_;
  foreach (@{$self->{voltages}}) {
    $_->check();
  }
}


package Classes::CheckPoint::Firewall1::Component::VoltageSubsystem::Voltage;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'voltage %s is %s (%.2f %s)', 
      $self->{voltageSensorName}, $self->{voltageSensorStatus},
      $self->{voltageSensorValue}, $self->{voltageSensorUnit});
  if ($self->{voltageSensorStatus} eq 'normal') {
    $self->add_ok();
  } elsif ($self->{voltageSensorStatus} eq 'abnormal') {
    $self->add_critical();
  } else {
    $self->add_unknown();
  }
  $self->set_thresholds(warning => 60, critical => 70);
  $self->add_perfdata(
      label => 'voltage'.$self->{voltageSensorName}.'_rpm',
      value => $self->{voltageSensorValue},
  );
}

package Classes::CheckPoint::Firewall1::Component::PowersupplySubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('CHECKPOINT-MIB', [
      ['powersupplies', 'powerSupplyTable', 'Classes::CheckPoint::Firewall1::Component::PowersupplySubsystem::Powersupply'],
  ]);
}

package Classes::CheckPoint::Firewall1::Component::PowersupplySubsystem::Powersupply;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  #Ignore Dummy values
  if ($self->{powerSupplyStatus} ne 'Dummy') {
    $self->add_info(sprintf 'power supply %d status is %s', 
        $self->{powerSupplyIndex},
        $self->{powerSupplyStatus});
    if ($self->{powerSupplyStatus} eq 'Up') {
      $self->add_ok();
    } elsif ($self->{powerSupplyStatus} eq 'Down') {
      $self->add_critical();
    } else {
      $self->add_unknown();
    }
  }
}
package Classes::CheckPoint::Firewall1::Component::DiskSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('HOST-RESOURCES-MIB', [
      ['storages', 'hrStorageTable', 'Classes::HOSTRESOURCESMIB::Component::DiskSubsystem::Storage', sub { return shift->{hrStorageType} eq 'hrStorageFixedDisk'}],
  ]);
  $self->get_snmp_tables('CHECKPOINT-MIB', [
      ['volumes', 'raidVolumeTable', 'Classes::CheckPoint::Firewall1::Component::DiskSubsystem::Volume'],
      ['disks', 'raidDiskTable', 'Classes::CheckPoint::Firewall1::Component::DiskSubsystem::Disk'],
      ['multidisks', 'multiDiskTable', 'Classes::CheckPoint::Firewall1::Component::DiskSubsystem::MultiDisk'],
  ]);
  $self->get_snmp_objects('CHECKPOINT-MIB', (qw(diskPercent)));
}

sub check {
  my ($self) = @_;
  $self->add_info('checking disks');
  if (@{$self->{multidisks}}) {
    foreach (@{$self->{multidisks}}) {
      $_->check();
    }
  } elsif (@{$self->{storages}}) {
    foreach (@{$self->{storages}}) {
      $_->check();
    }
  } else {
    my $free = 100 - $self->{diskPercent};
    $self->add_info(sprintf 'disk has %.2f%% free space left', $free);
    $self->set_thresholds(warning => '10:', critical => '5:');
    $self->add_message($self->check_thresholds($free));
    $self->add_perfdata(
        label => 'disk_free',
        value => $free,
        uom => '%',
    );
  }
  foreach (@{$self->{volumes}}) {
    $_->check();
  }
  foreach (@{$self->{disks}}) {
    $_->check();
  }
}


package Classes::CheckPoint::Firewall1::Component::DiskSubsystem::Volume;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'volume %s with %d disks is %s',
      $self->{raidVolumeID},
      $self->{numOfDisksOnRaid},
      $self->{raidVolumeState});
  if ($self->{raidVolumeState} eq 'degraded') {
    $self->add_warning();
  } elsif ($self->{raidVolumeState} eq 'failed') {
    $self->add_critical();
  } else {
    $self->add_ok();
  }
  
}


package Classes::CheckPoint::Firewall1::Component::DiskSubsystem::Disk;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'disk %s (vol %s) is %s',
      $self->{raidDiskIndex},
      $self->{raidDiskVolumeID},
      $self->{raidDiskState});
  # warning/critical comes from the volume
}

package Classes::CheckPoint::Firewall1::Component::DiskSubsystem::MultiDisk;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  my $label = sprintf 'disk_%s_free', $self->{multiDiskName};
  $self->add_info(sprintf 'disk %s (%s) has %.2f%% free space',
      $self->{multiDiskIndex},
      $self->{multiDiskName},
      $self->{multiDiskFreeTotalPercent});
    $self->set_thresholds(metric => $label, warning => '10:', critical => '5:');
    $self->add_message($self->check_thresholds(metric => $label, value => $self->{multiDiskFreeTotalPercent}));
    $self->add_perfdata(
        label => $label,
        value => $self->{multiDiskFreeTotalPercent},
        uom => '%',
    );
}

package Classes::CheckPoint::Firewall1::Component::MngmtSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::mngmt::status/) {
    $self->get_snmp_objects('CHECKPOINT-MIB', (qw(
        mgStatShortDescr mgStatLongDescr)));
  }
}

sub check {
  my ($self) = @_;
  $self->add_info('checking mngmt');
  if ($self->mode =~ /device::mngmt::status/) {
    if (! defined $self->{mgStatShortDescr}) {
      $self->add_unknown('management mib is not implemented');
    } elsif ($self->{mgStatShortDescr} ne 'OK') {
      $self->add_critical(sprintf 'status of management is %s', $self->{mgStatLongDescr});
    } else {
      $self->add_ok(sprintf 'status of management is %s', $self->{mgStatLongDescr});
    }
  }
}

package Classes::CheckPoint::Firewall1::Component::SvnSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::svn::status/) {
    $self->get_snmp_objects('CHECKPOINT-MIB', (qw(
        svnStatShortDescr svnStatLongDescr)));
  }
}

sub check {
  my ($self) = @_;
  $self->add_info('checking svn');
  if ($self->mode =~ /device::svn::status/) {
    if ($self->{svnStatShortDescr} ne 'OK') {
      $self->add_critical(sprintf 'status of svn is %s', $self->{svnStatLongDescr});
    } else {
      $self->add_ok(sprintf 'status of svn is %s', $self->{svnStatLongDescr});
    }
  }
}

package Classes::CheckPoint::Firewall1::Component::FwSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('CHECKPOINT-MIB', (qw(
      fwModuleState fwPolicyName fwNumConn)));
  if ($self->mode =~ /device::fw::policy::installed/) {
  } elsif ($self->mode =~ /device::fw::policy::connections/) {
  }
}

sub check {
  my ($self) = @_;
  $self->add_info('checking fw module');
  if ($self->{fwModuleState} ne 'Installed') {
    $self->add_critical(sprintf 'fw module is %s', $self->{fwPolicyName});
  } elsif ($self->mode =~ /device::fw::policy::installed/) {
    if (! $self->opts->name()) {
      $self->add_unknown('please specify a policy with --name');
    } elsif ($self->{fwPolicyName} eq $self->opts->name()) {
      $self->add_ok(sprintf 'fw policy is %s', $self->{fwPolicyName});
    } else {
      $self->add_critical(sprintf 'fw policy is %s, expected %s',
          $self->{fwPolicyName}, $self->opts->name());
    }
  } elsif ($self->mode =~ /device::fw::policy::connections/) {
    $self->set_thresholds(warning => 20000, critical => 23000);
    $self->add_message($self->check_thresholds($self->{fwNumConn}),
        sprintf 'policy %s has %s open connections',
            $self->{fwPolicyName}, $self->{fwNumConn});
    $self->add_perfdata(
        label => 'fw_policy_numconn',
        value => $self->{fwNumConn},
    );
  }
}

package Classes::CheckPoint::Firewall1::Component::HaSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::ha::role/) {
    $self->get_snmp_objects('CHECKPOINT-MIB', (qw(
        haStarted haState haStatShort haStatLong)));
    if (! $self->opts->role()) {
      $self->opts->override_opt('role', 'active');
    }
  } elsif ($self->mode =~ /device::ha::status/) {
    $self->get_snmp_objects('CHECKPOINT-MIB', (qw(
        haStarted haStatShort haStatLong)));
    $self->get_snmp_tables('CHECKPOINT-MIB', [
        ['problems', 'haProblemTable', 'Classes::CheckPoint::Firewall1::Component::HaSubsystem::Problem'],
    ]);
  }
}

sub check {
  my ($self) = @_;
  if ($self->mode =~ /device::ha::role/) {
    chomp($self->{haState});
    $self->add_info('checking ha');
    $self->add_info(sprintf 'ha %sstarted, role is %s, status is %s',
        $self->{haStarted} eq 'yes' ? '' : 'not ',
        $self->{haState}, $self->{haStatShort});
    if ($self->{haStarted} eq 'yes') {
      if ($self->{haStatShort} ne 'OK') {
        $self->add_message(
            defined $self->opts->mitigation() ? $self->opts->mitigation() : CRITICAL,
            $self->{info});
      } elsif ($self->{haState} ne $self->opts->role()) {
        $self->add_message(
            defined $self->opts->mitigation() ? $self->opts->mitigation() : WARNING,
            $self->{info});
        $self->add_message(
            defined $self->opts->mitigation() ? $self->opts->mitigation() : WARNING,
            sprintf "expected role %s", $self->opts->role())
      } else {
        $self->add_ok();
      }
    } else {
      $self->add_message(
          defined $self->opts->mitigation() ? $self->opts->mitigation() : WARNING,
          'ha was not started');
    }
  } elsif ($self->mode =~ /device::ha::status/) {
    if ($self->{haStarted} eq 'yes') {
      $self->SUPER::check();
      if ($self->{haStatShort} ne "OK") {
        $self->add_critical($self->{haStatLong});
      }
      if (! $self->check_messages()) {
        $self->reduce_messages("ha system has no problems");
      }
    } else {
      $self->add_message(
          defined $self->opts->mitigation() ? $self->opts->mitigation() : WARNING,
          'ha was not started');
    }
  }
}


package Classes::CheckPoint::Firewall1::Component::HaSubsystem::Problem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf "%s has status %s",
      $self->{haProblemName}, $self->{haProblemStatus});
  if ($self->{haProblemStatus} ne "OK") {
    $self->add_critical();
  }
}

package Classes::CheckPoint::Firewall1::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('CHECKPOINT-MIB', (qw(procUsage procNum)));
  $self->get_snmp_tables('CHECKPOINT-MIB', [
      ['multiprocs', 'multiProcTable', 'Classes::CheckPoint::Firewall1::Component::CpuSubsystem::MultiProc'],
  ]);
  $self->{procQueue} = $self->valid_response('CHECKPOINT-MIB', 'procQueue');
}

sub check {
  my ($self) = @_;
  $self->add_info('checking cpus');
  $self->add_info(sprintf 'cpu usage is %.2f%%', $self->{procUsage});
  $self->set_thresholds(warning => 80, critical => 90);
  $self->add_message($self->check_thresholds($self->{procUsage}));
  $self->add_perfdata(
      label => 'cpu_usage',
      value => $self->{procUsage},
      uom => '%',
  );
  if (defined $self->{procQueue}) {
    $self->add_perfdata(
        label => 'cpu_queue_length',
        value => $self->{procQueue},
        thresholds => 0,
    );
  }
  $self->add_info('checking cpu cores');
  if (@{$self->{multiprocs}}) {
    foreach (@{$self->{multiprocs}}) {
      $_->check();
    }
  }
}

package Classes::CheckPoint::Firewall1::Component::CpuSubsystem::MultiProc;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  my $label = sprintf 'cpu_core_%s_usage', $self->{multiProcIndex};
  $self->add_info(sprintf 'cpu core %s usage is %.2f%%',
      $self->{multiProcIndex},
      $self->{multiProcUsage});
    $self->set_thresholds(metric => $label, warning => 80, critical => 90);
    $self->add_message($self->check_thresholds(metric => $label, value => $self->{multiProcUsage}));
    $self->add_perfdata(
        label => $label,
        value => $self->{multiProcUsage},
        uom => '%',
    );
}
package Classes::CheckPoint::Firewall1::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('CHECKPOINT-MIB', (qw(
      memTotalReal64 memFreeReal64)));
  $self->{memory_usage} = $self->{memFreeReal64} ? 
      ( ($self->{memTotalReal64} - $self->{memFreeReal64}) / $self->{memTotalReal64} * 100) : 100;
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'memory usage is %.2f%%', $self->{memory_usage});
  $self->set_thresholds(warning => 80, critical => 90);
  $self->add_message($self->check_thresholds($self->{memory_usage}));
  $self->add_perfdata(
      label => 'memory_usage',
      value => $self->{memory_usage},
      uom => '%',
  );
}

package Classes::CheckPoint::Firewall1::Component::VpnSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('CHECKPOINT-MIB', [
      ['tunnels', 'tunnelTable', 'Classes::CheckPoint::Firewall1::Component::VpnSubsystem::Tunnel', sub { my ($o) = @_; $o->filter_name($o->{tunnelPeerIpAddr}) || $o->filter_name($o->{tunnelPeerObjName}) } ],
      ['permanenttunnels', 'permanentTunnelTable', 'Classes::CheckPoint::Firewall1::Component::VpnSubsystem::PermanentTunnel', sub { my ($o) = @_; $o->filter_name($o->{permanentTunnelPeerIpAddr}) || $o->filter_name($o->{permanentTunnelPeerObjName}) } ],
  ]);
}

sub check {
  my ($self) = @_;
  if (! @{$self->{tunnels}} && ! @{$self->{permanenttunnels}}) {
    $self->add_ok('no tunnels configured');
  } else {
    $self->SUPER::check();
  }
}


package Classes::CheckPoint::Firewall1::Component::VpnSubsystem::Tunnel;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{flat_indices} =~ /^(\d+\.\d+\.\d+\.\d+)/;
  $self->{tunnelPeerIpAddr} ||= $1;
  $self->{tunnelPeerObjName} ||= $self->{tunnelPeerIpAddr};
  if (! defined $self->{tunnelState}) {
    $self->{tunnelState} = $self->get_snmp_object('CHECKPOINT-MIB', 'tunnelState', $self->{tunnelPeerIpAddr});
  }
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'tunnel to %s is %s',
      $self->{tunnelPeerObjName}, $self->{tunnelState});
  if ($self->{tunnelState} =~ /^(destroy|down)$/) {
    $self->add_critical();
  } else {
    $self->add_ok();
  }
}

package Classes::CheckPoint::Firewall1::Component::VpnSubsystem::PermanentTunnel;
our @ISA = qw(Classes::CheckPoint::Firewall1::Component::VpnSubsystem::Tunnel);
use strict;

sub finish {
  my ($self) = @_;
  $self->{flat_indices} =~ /^(\d+\.\d+\.\d+\.\d+)/;
  $self->{permanentTunnelPeerIpAddr} ||= $1;
  $self->{permanentTunnelPeerObjName} ||= $self->{permanentTunnelPeerIpAddr};
  if (! defined $self->{permanentTunnelState}) {
    $self->{permanentTunnelState} = $self->get_snmp_object('CHECKPOINT-MIB', 'permanentTunnelState', $self->{permanentTunnelPeerIpAddr});
  }
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'permanent tunnel to %s is %s',
      $self->{permanentTunnelPeerObjName}, $self->{permanentTunnelState});
  if ($self->{permanentTunnelState} =~ /^(destroy|down)$/) {
    $self->add_critical();
  } else {
    $self->add_ok();
  }
}


package Classes::CheckPoint::Firewall1;
our @ISA = qw(Classes::CheckPoint);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::CheckPoint::Firewall1::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::CheckPoint::Firewall1::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::CheckPoint::Firewall1::Component::MemSubsystem");
  } elsif ($self->mode =~ /device::ha::/) {
    $self->analyze_and_check_ha_subsystem("Classes::CheckPoint::Firewall1::Component::HaSubsystem");
  } elsif ($self->mode =~ /device::fw::/) {
    $self->analyze_and_check_fw_subsystem("Classes::CheckPoint::Firewall1::Component::FwSubsystem");
  } elsif ($self->mode =~ /device::svn::/) {
    $self->analyze_and_check_svn_subsystem("Classes::CheckPoint::Firewall1::Component::SvnSubsystem");
  } elsif ($self->mode =~ /device::mngmt::/) {
    # not sure if this works fa25239716cb74c672f8dd390430dc4056caffa7
    $self->analyze_and_check_mngmt_subsystem("Classes::CheckPoint::Firewall1::Component::MngmtSubsystem");
  } elsif ($self->mode =~ /device::vpn::status/) {
    $self->analyze_and_check_config_subsystem("Classes::CheckPoint::Firewall1::Component::VpnSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::CheckPoint::VSX::Component::FwSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('CHECKPOINT-MIB', (qw(
      fwModuleState fwPolicyName)));
  if ($self->mode =~ /device::fw::policy::installed/) {
  } elsif ($self->mode =~ /device::fw::policy::connections/) {
    $self->get_snmp_tables('CHECKPOINT-MIB', [
      ['vsxs', 'vsxCountersTable', 'Classes::CheckPoint::VSX::Component::FwSubsystem::Vsx'],
      ['vsxstatus', 'vsxStatusTable', 'Monitoring::GLPlugin::SNMP::TableItem'],
    ]);
    foreach my $vsx (@{$self->{vsxs}}) {
      foreach my $vsxstatus (@{$self->{vsxstatus}}) {
        if ($vsx->{vsxCountersVSId} eq $vsxstatus->{vsxStatusVSId}) {
          map {
              $vsx->{$_} = $vsxstatus->{$_}
          } grep {
              /^vsx/
          } keys %{$vsxstatus};
        }
      }
    }
    delete $self->{vsxstatus};
  }
}

sub check {
  my ($self) = @_;
  $self->add_info('checking fw module');
  if ($self->{fwModuleState} ne 'Installed') {
    $self->add_critical(sprintf 'fw module is %s', $self->{fwPolicyName});
  } elsif ($self->mode =~ /device::fw::policy::installed/) {
    if (! $self->opts->name()) {
      $self->add_unknown('please specify a policy with --name');
    } elsif ($self->{fwPolicyName} eq $self->opts->name()) {
      $self->add_ok(sprintf 'fw policy is %s', $self->{fwPolicyName});
    } else {
      $self->add_critical(sprintf 'fw policy is %s, expected %s',
          $self->{fwPolicyName}, $self->opts->name());
    }
  } elsif ($self->mode =~ /device::fw::policy::connections/) {
    $self->{sumNumConn} = 0;
    map { $self->{fwNumConn} += $_->{vsxCountersConnNum} } @{$self->{vsxs}};
    $self->set_thresholds(metric => 'fwNumConn',
        warning => 20000, critical => 23000);
    $self->add_message($self->check_thresholds(
        metric => 'fwNumConn',
        value => $self->{fwNumConn}),
        sprintf 'policy %s has %s open connections',
            $self->{fwPolicyName}, $self->{fwNumConn});
    $self->add_perfdata(
        label => 'fw_policy_numconn',
        value => $self->{fwNumConn},
    );
    $self->SUPER::check();
  }
}

package Classes::CheckPoint::VSX::Component::FwSubsystem::Vsx;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  my $label = sprintf 'vsx_%s_numconn', $self->{vsxStatusVsName};
  $self->set_thresholds(metric => $label,
      warning => 20000, critical => 23000);
  $self->add_message($self->check_thresholds(
      metric => $label,
      value => $self->{vsxCountersConnNum}),
      sprintf 'vsx %s has %s open connections',
          $self->{vsxStatusVsName}, $self->{vsxCountersConnNum});
  $self->add_perfdata(
      label => $label,
      value => $self->{vsxCountersConnNum},
  );
}

package Classes::CheckPoint::VSX;
our @ISA = qw(Classes::CheckPoint);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::CheckPoint::Firewall1::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::CheckPoint::Firewall1::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::CheckPoint::Firewall1::Component::MemSubsystem");
  } elsif ($self->mode =~ /device::ha::/) {
    $self->analyze_and_check_ha_subsystem("Classes::CheckPoint::Firewall1::Component::HaSubsystem");
  } elsif ($self->mode =~ /device::fw::/) {
    $self->analyze_and_check_fw_subsystem("Classes::CheckPoint::VSX::Component::FwSubsystem");
  } elsif ($self->mode =~ /device::svn::/) {
    $self->analyze_and_check_svn_subsystem("Classes::CheckPoint::Firewall1::Component::SvnSubsystem");
  } elsif ($self->mode =~ /device::mngmt::/) {
    # not sure if this works fa25239716cb74c672f8dd390430dc4056caffa7
    $self->analyze_and_check_mngmt_subsystem("Classes::CheckPoint::Firewall1::Component::MngmtSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::CheckPoint::Gaia;
our @ISA = qw(Classes::CheckPoint::Firewall1);
use strict;

sub xinit {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::CheckPoint::Firewall1::Component::EnvironmentalSubsystem");
    $self->no_such_mode();
  }
}

package Classes::CheckPoint;
our @ISA = qw(Classes::Device);
use strict;

use constant trees => (
    '1.3.6.1.4.1.2620', # CHECKPOINT-MIB
);

sub init {
  my ($self) = @_;
  if (defined $self->get_snmp_object('CHECKPOINT-MIB', 'vsxVsInstalled') &&
    $self->get_snmp_object('CHECKPOINT-MIB', 'vsxVsInstalled') != 0) {
    bless $self, 'Classes::CheckPoint::VSX';
    $self->debug('using Classes::CheckPoint::VSX');
  #} elsif ($self->get_snmp_object('CHECKPOINT-MIB', 'fwProduct') || $self->{productname} =~ /(FireWall\-1\s)|(cpx86_64)|(Linux.*\dcp )/i) {
  } elsif ($self->get_snmp_object('CHECKPOINT-MIB', 'fwProduct')) {
    bless $self, 'Classes::CheckPoint::Firewall1';
    $self->debug('using Classes::CheckPoint::Firewall1');
  } elsif ($self->get_snmp_object('CHECKPOINT-MIB', 'mgProdName')) {
    bless $self, 'Classes::CheckPoint::Firewall1';
    $self->debug('using Classes::CheckPoint::Firewall1');
  } elsif ($self->get_snmp_object('CHECKPOINT-MIB', 'osName') && $self->get_snmp_object('CHECKPOINT-MIB', 'osName') =~ /gaia/i) {
    bless $self, 'Classes::CheckPoint::Gaia';
    $self->debug('using Classes::CheckPoint::Gaia');
  } else {
    $self->no_such_model();
  }
  if (ref($self) ne "Classes::CheckPoint") {
    $self->init();
  }
}

package Classes::Clavister::Firewall1::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;
use Data::Dumper;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('CLAVISTER-MIB', [
      ['sensor', 'clvHWSensorEntry', 'Classes::Clavister::Firewall1::Component::HWSensor'],
  ]);
}

sub check {
  my ($self) = @_;
  foreach (@{$self->{sensor}}) {
    $_->check();
  }
}


package Classes::Clavister::Firewall1::Component::HWSensor;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  if ($self->{clvHWSensorName} =~ /Fan/i) {
    $self->add_info(sprintf '%s is running (%d %s)', 
        $self->{clvHWSensorName}, $self->{clvHWSensorValue}, $self->{clvHWSensorUnit});
    $self->set_thresholds(warning => "6000:7500", critical => "1000:10000");
    $self->add_message($self->check_thresholds($self->{clvHWSensorValue}));
    $self->add_perfdata(
        label => $self->{clvHWSensorName}.'_rpm',
        value => $self->{clvHWSensorValue},
    );
  } elsif ($self->{clvHWSensorName} =~ /Temp/i) {
    $self->add_info(sprintf '%s is running (%d %s)',
        $self->{clvHWSensorName}, $self->{clvHWSensorValue}, $self->{clvHWSensorUnit});
    $self->set_thresholds(warning => 60, critical => 70);
    $self->add_message($self->check_thresholds($self->{clvHWSensorValue}));
    $self->add_perfdata(
        label => $self->{clvHWSensorName}.'_'.$self->{clvHWSensorUnit},
        value => $self->{clvHWSensorValue},
    );
  }
}

package Classes::Clavister::Firewall1::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('CLAVISTER-MIB', (qw(
      clvSysCpuLoad)));
}

sub check {
  my ($self) = @_;
  $self->add_info('checking cpus');
  $self->add_info(sprintf 'cpu usage is %.2f%%', $self->{clvSysCpuLoad});
  $self->set_thresholds(warning => 80, critical => 90);
  $self->add_message($self->check_thresholds($self->{clvSysCpuLoad}));
  $self->add_perfdata(
      label => 'cpu_usage',
      value => $self->{clvSysCpuLoad},
      uom => '%',
  );
}

package Classes::Clavister::Firewall1::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('CLAVISTER-MIB', (qw(
      clvSysMemUsage)));
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'memory usage is %.2f%%', $self->{clvSysMemUsage});
  $self->set_thresholds(warning => 80, critical => 90);
  $self->add_message($self->check_thresholds($self->{clvSysMemUsage}));
  $self->add_perfdata(
      label => 'memory_usage',
      value => $self->{clvSysMemUsage},
      uom => '%',
  );
}

package Classes::Clavister::Firewall1;
our @ISA = qw(Classes::Clavister);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::Clavister::Firewall1::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::Clavister::Firewall1::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::Clavister::Firewall1::Component::MemSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::Clavister;
our @ISA = qw(Classes::Device);
use strict;

use constant trees => (
    '1.3.6.1.4.1.5089', # CLAVISTER-MIB
);

sub init {
  my ($self) = @_;
  if ($self->{productname} =~ /Clavister/i) {
    bless $self, 'Classes::Clavister::Firewall1';
    $self->debug('using Classes::Clavister::Firewall1');
  }
  if (ref($self) ne "Classes::Clavister") {
    $self->init();
  }
}

package Classes::SGOS::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  # https://kb.bluecoat.com/index?page=content&id=KB3069
  # Memory pressure simply is the percentage of physical memory less free and reclaimable memory, of total memory. So, for example, if there is no free or reclaimable memory in the system, then memory pressure is at 100%.
  # The event logs start reporting memory pressure when it is over 75%.
  # There's two separate OIDs to obtain memory pressure value for SGOSV4 and SGOSV5;
  # SGOSV4:  memPressureValue - OIDs: 1.3.6.1.4.1.3417.2.8.2.3 (systemResourceMIB)
  # SGOSV5: sgProxyMemoryPressure - OIDs: 1.3.6.1.4.1.3417.2.11.2.3.4 (bluecoatSGProxyMIB)
  $self->get_snmp_objects('BLUECOAT-SG-PROXY-MIB', (qw(sgProxyMemPressure
      sgProxyMemAvailable sgProxyMemCacheUsage sgProxyMemSysUsage)));
}

sub check {
  my ($self) = @_;
  $self->add_info('checking memory');
  $self->add_info(sprintf 'memory usage is %.2f%%',
      $self->{sgProxyMemPressure});
  $self->set_thresholds(warning => 75, critical => 90);
  $self->add_message($self->check_thresholds($self->{sgProxyMemPressure}));
  $self->add_perfdata(
      label => 'memory_usage',
      value => $self->{sgProxyMemPressure},
      uom => '%',
  );
}

package Classes::SGOS::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  # With AVOS version 5.5.4.1, 5.4.6.1 and 6.1.2.1, the SNMP MIB has been extended to support multiple CPU cores.
  # The new OID is defined as a table 1.3.6.1.4.1.3417.2.11.2.4.1 in the BLUECOAT-SG-PROXY-MIB file with the following sub-OIDs.
  # https://kb.bluecoat.com/index?page=content&id=FAQ1244&actp=search&viewlocale=en_US&searchid=1360452047002
  $self->get_snmp_tables('BLUECOAT-SG-PROXY-MIB', [
      ['cpus', 'sgProxyCpuCoreTable', 'Classes::SGOS::Component::CpuSubsystem::Cpu'],
  ]);
  if (scalar (@{$self->{cpus}}) == 0) {
    $self->get_snmp_tables('USAGE-MIB', [
        ['cpus', 'deviceUsageTable', 'Classes::SGOS::Component::CpuSubsystem::DevCpu', sub { return shift->{deviceUsageName} =~ /CPU/ }],
    ]);
  }
}

package Classes::SGOS::Component::CpuSubsystem::Cpu;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'cpu %s usage is %.2f%%',
      $self->{flat_indices}, $self->{sgProxyCpuCoreBusyPerCent});
  $self->set_thresholds(warning => 80, critical => 90);
  $self->add_message($self->check_thresholds($self->{sgProxyCpuCoreBusyPerCent}));
  $self->add_perfdata(
      label => 'cpu_'.$self->{flat_indices}.'_usage',
      value => $self->{sgProxyCpuCoreBusyPerCent},
      uom => '%',
  );
}


package Classes::SGOS::Component::CpuSubsystem::DevCpu;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'cpu %s usage is %.2f%%',
      $self->{flat_indices}, $self->{deviceUsagePercent});
  $self->set_thresholds(warning => 80, critical => 90);
  $self->add_message($self->check_thresholds($self->{deviceUsagePercent}));
  $self->add_perfdata(
      label => 'cpu_'.$self->{flat_indices}.'_usage',
      value => $self->{deviceUsagePercent},
      uom => '%',
  );
}


package Classes::SGOS::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->{sensor_subsystem} =
      Classes::SGOS::Component::SensorSubsystem->new();
  $self->{disk_subsystem} =
      Classes::SGOS::Component::DiskSubsystem->new();
}

sub check {
  my ($self) = @_;
  $self->{sensor_subsystem}->check();
  $self->{disk_subsystem}->check();
  if (! $self->check_messages()) {
    $self->add_ok("environmental hardware working fine");
  }
}

sub dump {
  my ($self) = @_;
  $self->{sensor_subsystem}->dump();
  $self->{disk_subsystem}->dump();
}


package Classes::SGOS::Component::SensorSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('SENSOR-MIB', [
      ['sensors', 'deviceSensorValueTable', 'Classes::SGOS::Component::SensorSubsystem::Sensor'],
  ]);
}

sub check {
  my ($self) = @_;
  my $psus = {};
  foreach my $sensor (@{$self->{sensors}}) {
    if ($sensor->{deviceSensorName} =~ /^PSU\s+(\d+)\s+(.*)/) {
      $psus->{$1}->{sensors}->{$2}->{code} = $sensor->{deviceSensorCode};
      $psus->{$1}->{sensors}->{$2}->{status} = $sensor->{deviceSensorStatus};
    }
  }
  foreach my $psu (keys %{$psus}) {
    if ($psus->{$psu}->{sensors}->{'ambient temperature'}->{code} &&
        $psus->{$psu}->{sensors}->{'ambient temperature'}->{code} eq 'unknown' &&
        $psus->{$psu}->{sensors}->{'ambient temperature'}->{status} &&
        $psus->{$psu}->{sensors}->{'ambient temperature'}->{status} eq 'nonoperational' &&
        $psus->{$psu}->{sensors}->{'core temperature'}->{code} &&
        $psus->{$psu}->{sensors}->{'core temperature'}->{code} eq 'unknown' &&
        $psus->{$psu}->{sensors}->{'core temperature'}->{status} &&
        $psus->{$psu}->{sensors}->{'core temperature'}->{status} eq 'nonoperational' &&
        $psus->{$psu}->{sensors}->{'status'}->{code} &&
        $psus->{$psu}->{sensors}->{'status'}->{code} eq 'no-power' &&
        $psus->{$psu}->{sensors}->{'status'}->{status} &&
        $psus->{$psu}->{sensors}->{'status'}->{status} eq 'ok') {
      $psus->{$psu}->{'exists'} = 0;
      $self->add_info(sprintf 'psu %d probably doesn\'t exist', $psu);
    } else {
      $psus->{$psu}->{'exists'} = 1;
    }
  }
  foreach my $sensor (@{$self->{sensors}}) {
    if ($sensor->{deviceSensorName} =~ /^PSU\s+(\d+)\s+(.*)/) {
      if (! $psus->{$1}->{exists}) {
        $sensor->{deviceSensorCode} = sprintf 'not-installed (real code: %s)',
            $sensor->{deviceSensorCode};
        $sensor->blacklist();
      }
    }
  }
  foreach my $sensor (@{$self->{sensors}}) {
    $sensor->check();
  }
}


package Classes::SGOS::Component::SensorSubsystem::Sensor;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  if ($self->{deviceSensorScale}) {
    $self->{deviceSensorValue} *= 10 ** $self->{deviceSensorScale};
  }
  $self->add_info(sprintf 'sensor %s (%s %s) is %s',
      $self->{deviceSensorName},
      $self->{deviceSensorValue},
      $self->{deviceSensorUnits},
      $self->{deviceSensorCode});
  if ($self->{deviceSensorCode} =~ /^not-installed/) {
  } elsif ($self->{deviceSensorCode} eq "unknown") {
  } else {
    if ($self->{deviceSensorCode} ne "ok") {
      if ($self->{deviceSensorCode} =~ /warning/) {
        $self->add_warning();
      } else {
        $self->add_critical();
      }
    }
    $self->add_perfdata(
        label => sprintf('sensor_%s', $self->{deviceSensorName}),
        value => $self->{deviceSensorValue},
    ) if $self->{deviceSensorUnits} =~ /^(volts|celsius|rpm)/;
  }
}

package Classes::SGOS::Component::DiskSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('DISK-MIB', [
      ['disks', 'deviceDiskValueTable', 'Classes::SGOS::Component::DiskSubsystem::Disk'],
  ]);
  $self->get_snmp_tables('USAGE-MIB', [
      ['filesystems', 'deviceUsageTable', 'Classes::SGOS::Component::DiskSubsystem::FS', sub { return lc shift->{deviceUsageName} eq 'disk' }],
  ]);
  my $fs = 0;
  foreach (@{$self->{filesystems}}) {
    $_->{deviceUsageIndex} = $fs++;
  }
}


package Classes::SGOS::Component::DiskSubsystem::Disk;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'disk %s (%s %s) is %s',
      $self->{flat_indices},
      $self->{deviceDiskVendor},
      $self->{deviceDiskRevision},
      $self->{deviceDiskStatus});
  if ($self->{deviceDiskStatus} eq "bad") {
    $self->add_critical();
  }
}


package Classes::SGOS::Component::DiskSubsystem::FS;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'disk %s usage is %.2f%% (internal status is %s)',
      $self->{deviceUsageIndex},
      $self->{deviceUsagePercent},
      $self->{deviceUsageStatus}
  );
  $self->set_thresholds(
      metric => 'disk_'.$self->{deviceUsageIndex}.'_usage',
      warning => $self->{deviceUsageHigh},
      critical => $self->{deviceUsageHigh},
  );
  $self->add_message($self->check_thresholds(
      metric => 'disk_'.$self->{deviceUsageIndex}.'_usage',
      value => $self->{deviceUsagePercent},),
  );
  $self->add_perfdata(
      label => 'disk_'.$self->{deviceUsageIndex}.'_usage',
      value => $self->{deviceUsagePercent},
      uom => '%',
  );
}


package Classes::SGOS::Component::SecuritySubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('ATTACK-MIB', [
      ['attacks', 'deviceAttackTable', 'Classes::SGOS::Component::SecuritySubsystem::Attack' ],
  ]);
}

sub check {
  my ($self) = @_;
  my $errorfound = 0;
  $self->add_info('checking attacks');
  if (scalar (@{$self->{attacks}}) == 0) {
    $self->add_info('no security incidents');
  } else {
    foreach (@{$self->{attacks}}) {
      $_->check();
    }
    $self->add_info(sprintf '%d serious incidents (of %d)',
        scalar(grep { $_->{count_me} == 1 } @{$self->{attacks}}),
        scalar(@{$self->{attacks}}));
  }
  $self->add_ok();
}


package Classes::SGOS::Component::SecuritySubsystem::Attack;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->{deviceAttackTime} = $self->timeticks(
      $self->{deviceAttackTime});
  $self->{count_me} = 0;
  $self->add_info(sprintf '%s %s %s',
      scalar localtime (time - $self->uptime() + $self->{deviceAttackTime}),
      $self->{deviceAttackName}, $self->{deviceAttackStatus});
  my $lookback = $self->opts->lookback() ? 
      $self->opts->lookback() : 3600;
  if (($self->{deviceAttackStatus} eq 'under-attack') &&
      ($lookback - $self->uptime() + $self->{deviceAttackTime} > 0)) {
    $self->add_critical();
    $self->{count_me}++;
  }
}

package Classes::SGOS::Component::ConnectionSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('BLUECOAT-SG-PROXY-MIB', (qw(sgProxyHttpResponseTimeAll
      sgProxyHttpResponseFirstByte
      sgProxyHttpResponseByteRate sgProxyHttpResponseSize
      sgProxyHttpClientConnections sgProxyHttpClientConnectionsActive
      sgProxyHttpClientConnectionsIdle
      sgProxyHttpServerConnections sgProxyHttpServerConnectionsActive
      sgProxyHttpServerConnectionsIdle)));
  $self->{sgProxyHttpResponseTimeAll} /= 1000;
}

sub check {
  my ($self) = @_;
  $self->add_info('checking connections');
  if ($self->mode =~ /device::connections::check/) {
    $self->add_info(sprintf 'average service time for http requests is %.5fs',
        $self->{sgProxyHttpResponseTimeAll});
    $self->set_thresholds(warning => 5, critical => 10);
    $self->add_message($self->check_thresholds($self->{sgProxyHttpResponseTimeAll}));
    $self->add_perfdata(
        label => 'http_response_time',
        value => $self->{sgProxyHttpResponseTimeAll},
        places => 5,
        uom => 's',
    );
  } elsif ($self->mode =~ /device::.*?::count/) {
    my $details = [
        ['client', 'total', 'sgProxyHttpClientConnections'],
        ['client', 'active', 'sgProxyHttpClientConnectionsActive'],
        ['client', 'idle', 'sgProxyHttpClientConnectionsIdle'],
        ['server', 'total', 'sgProxyHttpServerConnections'],
        ['server', 'active', 'sgProxyHttpServerConnectionsActive'],
        ['server', 'idle', 'sgProxyHttpServerConnectionsIdle'],
    ];
    my @selected;
    # --name client --name2 idle
    if (! $self->opts->name) {
      @selected = @{$details};
    } elsif (! $self->opts->name2) {
      @selected = grep { $_->[0] eq $self->opts->name } @{$details};
    } else {
      @selected = grep { $_->[0] eq $self->opts->name && $_->[1] eq $self->opts->name2 } @{$details};
    }
    foreach (@selected) {
      my $label = $_->[0].'_connections_'.$_->[1];
      $self->add_info(sprintf '%d %s connections %s', $self->{$_->[2]}, $_->[0], $_->[1]);
      $self->set_thresholds(metric => $label,
          warning => 5000, critical => 10000);
      $self->add_message($self->check_thresholds(metric => $label,
          value => $self->{$_->[2]}));
      $self->add_perfdata(
          label => $label,
          value => $self->{$_->[2]},
      );
    }
  }
}


package Classes::SGOS;
our @ISA = qw(Classes::Bluecoat);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::SGOS::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::SGOS::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::SGOS::Component::MemSubsystem");
  } elsif ($self->mode =~ /device::security/) {
    $self->analyze_and_check_security_subsystem("Classes::SGOS::Component::SecuritySubsystem");
  } elsif ($self->mode =~ /device::(users|connections)::(count|check)/) {
    $self->analyze_and_check_connection_subsystem("Classes::SGOS::Component::ConnectionSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::AVOS::Component::KeySubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('BLUECOAT-AV-MIB', (qw(
      avLicenseDaysRemaining avVendorName)));
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'license %s expires in %d days',
      $self->{avVendorName},
      $self->{avLicenseDaysRemaining});
  $self->set_thresholds(warning => '14:', critical => '7:');
  $self->add_message($self->check_thresholds($self->{avLicenseDaysRemaining}));
  $self->add_perfdata(
      label => sprintf('lifetime_%s', $self->{avVendorName}),
      value => $self->{avLicenseDaysRemaining},
  );
}


package Classes::AVOS::Component::SecuritySubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('BLUECOAT-AV-MIB', (qw(
      avVirusesDetected)));
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf '%d viruses detected',
      $self->{avVirusesDetected});
  $self->set_thresholds(warning => 1500, critical => 1500);
  $self->add_message($self->check_thresholds($self->{avVirusesDetected}));
  $self->add_perfdata(
      label => 'viruses',
      value => $self->{avVirusesDetected},
  );
}

package Classes::AVOS::Component::ConnectionSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('BLUECOAT-AV-MIB', (qw(
      avSlowICAPConnections)));
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf '%d slow ICAP connections',
      $self->{avSlowICAPConnections});
  $self->set_thresholds(warning => 100, critical => 100);
  $self->add_message($self->check_thresholds($self->{avSlowICAPConnections}));
  $self->add_perfdata(
      label => 'slow_connections',
      value => $self->{avSlowICAPConnections},
  );
}

package Classes::AVOS::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  # https://kb.bluecoat.com/index?page=content&id=KB3069
  # Memory pressure simply is the percentage of physical memory less free and reclaimable memory, of total memory. So, for example, if there is no free or reclaimable memory in the system, then memory pressure is at 100%.
  # The event logs start reporting memory pressure when it is over 75%.
  # There's two separate OIDs to obtain memory pressure value for AVOSV4 and AVOSV5;
  # AVOSV4:  memPressureValue - OIDs: 1.3.6.1.4.1.3417.2.8.2.3 (systemResourceMIB)
  # AVOSV5: sgProxyMemoryPressure - OIDs: 1.3.6.1.4.1.3417.2.11.2.3.4 (bluecoatSGProxyMIB)
  my ($self) = @_;
  $self->get_snmp_objects('BLUECOAT-SG-PROXY-MIB', (qw(
      sgProxyMemPressure sgProxyMemAvailable sgProxyMemCacheUsage sgProxyMemSysUsage)));
  if (! defined $self->{sgProxyMemPressure}) {
  $self->get_snmp_objects('SYSTEM-RESOURCES-MIB', (qw(
      memPressureValue memWarningThreshold memCriticalThreshold memCurrentState)));
  }
  if (! defined $self->{memPressureValue}) {
    foreach ($self->get_snmp_table_objects(
        'USAGE-MIB', 'deviceUsageTable')) {
      next if $_->{deviceUsageName} !~ /Memory/;
      $self->{deviceUsageName} = $_->{deviceUsageName};
      $self->{deviceUsagePercent} = $_->{deviceUsagePercent};
      $self->{deviceUsageHigh} = $_->{deviceUsageHigh};
      $self->{deviceUsageStatus} = $_->{deviceUsageStatus};
      $self->{deviceUsageTime} = $_->{deviceUsageTime};
    }
    bless $self, 'Classes::AVOS::Component::MemSubsystem::AVOS3';
  }
}


package Classes::AVOS::Component::MemSubsystem::AVOS3;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub check {
  my ($self) = @_;
  my $errorfound = 0;
  $self->add_info('checking memory');
  $self->add_info(sprintf 'memory usage is %.2f%%',
      $self->{deviceUsagePercent});
  $self->set_thresholds(warning => $self->{deviceUsageHigh} - 10, critical => $self->{deviceUsageHigh});
  $self->add_message($self->check_thresholds($self->{deviceUsagePercent}));
  $self->add_perfdata(
      label => 'memory_usage',
      value => $self->{deviceUsagePercent},
      uom => '%',
  );
}

package Classes::AVOS::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self, %params) = @_;
  # With AVOS version 5.5.4.1, 5.4.6.1 and 6.1.2.1, the SNMP MIB has been extended to support multiple CPU cores.
  # The new OID is defined as a table 1.3.6.1.4.1.3417.2.11.2.4.1 in the BLUECOAT-SG-PROXY-MIB file with the following sub-OIDs.
  # https://kb.bluecoat.com/index?page=content&id=FAQ1244&actp=search&viewlocale=en_US&searchid=1360452047002
  $self->get_snmp_tables('BLUECOAT-SG-PROXY-MIB', [
      ['cpus', 'sgProxyCpuCoreTable', 'Classes::AVOS::Component::CpuSubsystem::Cpu'],
  ]);
  if (scalar (@{$self->{cpus}}) == 0) {
    $self->get_snmp_tables('USAGE-MIB', [
        ['cpus', 'deviceUsageTable', 'Classes::AVOS::Component::CpuSubsystem::DevCpu', sub { return shift->{deviceUsageName} =~ /CPU/ }],
    ]);
  }
}

package Classes::AVOS::Component::CpuSubsystem::Cpu;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'cpu %s usage is %.2f%%',
      $self->{sgProxyCpuCoreIndex}, $self->{sgProxyCpuCoreBusyPerCent});
  $self->set_thresholds(warning => 80, critical => 90);
  $self->add_message($self->check_thresholds($self->{sgProxyCpuCoreBusyPerCent}));
  $self->add_perfdata(
      label => 'cpu_'.$self->{sgProxyCpuCoreIndex}.'_usage',
      value => $self->{sgProxyCpuCoreBusyPerCent},
      uom => '%',
  );
}


package Classes::AVOS::Component::CpuSubsystem::DevCpu;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'cpu %s usage is %.2f%%',
      $self->{deviceUsageIndex}, $self->{deviceUsagePercent});
  $self->set_thresholds(warning => $self->{deviceUsageHigh} - 10, critical => $self->{deviceUsageHigh});
  $self->add_message($self->check_thresholds($self->{deviceUsagePercent}));
  $self->add_perfdata(
      label => 'cpu_'.$self->{deviceUsageIndex}.'_usage',
      value => $self->{deviceUsagePercent},
      uom => '%',
  );
}


package Classes::AVOS;
our @ISA = qw(Classes::Bluecoat);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::AVOS::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::AVOS::Component::MemSubsystem");
  } elsif ($self->mode =~ /device::licenses::/) {
    $self->analyze_and_check_key_subsystem("Classes::AVOS::Component::KeySubsystem");
  } elsif ($self->mode =~ /device::connections/) {
    $self->analyze_and_check_connection_subsystem("Classes::AVOS::Component::ConnectionSubsystem");
  } elsif ($self->mode =~ /device::security/) {
    $self->analyze_and_check_security_subsystem("Classes::AVOS::Component::SecuritySubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::Alcatel::OmniAccess::Component::HaSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::ha::role/) {
    $self->get_snmp_objects('WLSX-SYSTEMEXT-MIB', (qw(wlsxSysExtSwitchRole)));
    if (! $self->opts->role()) {
      $self->opts->override_opt('role', 'master');
    }
  }
}

sub check {
  my ($self) = @_;
  $self->add_info('checking ha');
  $self->add_info(sprintf 'ha role is %s', $self->{wlsxSysExtSwitchRole});
  if ($self->{wlsxSysExtSwitchRole} ne $self->opts->role()) {
    $self->add_warning();
    $self->add_warning(sprintf "expected role %s", $self->opts->role());
  } else {
    $self->add_ok();
  }
}

package Classes::Alcatel::OmniAccess::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('WLSX-SYSTEMEXT-MIB', [
      ['memories', 'wlsxSysExtMemoryTable', 'Classes::Alcatel::OmniAccess::Component::MemSubsystem::Memory'],
  ]);
}


package Classes::Alcatel::OmniAccess::Component::MemSubsystem::Memory;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{usage} = 100 * $self->{sysExtMemoryUsed} / $self->{sysExtMemorySize};
}

sub check {
  my ($self) = @_;
  my $label = sprintf 'memory_%s_usage', $self->{flat_indices};
  $self->add_info(sprintf 'memory %s usage is %.2f%%',
      $self->{flat_indices}, $self->{usage});
  $self->set_thresholds(metric => $label, warning => 80, critical => 90);
  $self->add_message($self->check_thresholds(
      metric => $label, value => $self->{usage}));
  $self->add_perfdata(
      label => $label,
      value => $self->{usage},
      uom => '%',
  );
}

package Classes::Alcatel::OmniAccess::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('WLSX-SYSTEMEXT-MIB', [
      ['memories', 'wlsxSysExtProcessorTable', 'Classes::Alcatel::OmniAccess::Component::CpuSubsystem::Cpu'],
  ]);
}


package Classes::Alcatel::OmniAccess::Component::CpuSubsystem::Cpu;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  my $label = sprintf '%s_usage', lc $self->{sysExtProcessorDescr};
  $label =~ s/\s+/_/g;
  $self->add_info(sprintf '%s usage is %.2f%%',
      $self->{sysExtProcessorDescr}, $self->{sysExtProcessorLoad});
  $self->set_thresholds(metric => $label, warning => 80, critical => 90);
  $self->add_message($self->check_thresholds(
      metric => $label, value => $self->{sysExtProcessorLoad}));
  $self->add_perfdata(
      label => $label,
      value => $self->{sysExtProcessorLoad},
      uom => '%',
  );
}

package Classes::Alcatel::OmniAccess::Component::PowersupplySubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('WLSX-SYSTEMEXT-MIB', [
      ['powersupplies', 'wlsxSysExtPowerSupplyTable', 'Classes::Alcatel::OmniAccess::Component::PowersupplySubsystem::Powersupply'],
  ]);
}

package Classes::Alcatel::OmniAccess::Component::PowersupplySubsystem::Powersupply;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'power supply %d status is %s',
      $self->{flat_indices},
      $self->{sysExtPowerSupplyStatus});
  if ($self->{sysExtPowerSupplyStatus} ne 'active') {
    $self->add_warning();
  }
}

package Classes::Alcatel::OmniAccess::Component::FanSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('WLSX-SYSTEMEXT-MIB', [
      ['fans', 'wlsxSysExtFanTable', 'Classes::Alcatel::OmniAccess::Component::FanSubsystem::Fan'],
  ]);
}

package Classes::Alcatel::OmniAccess::Component::FanSubsystem::Fan;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'fan %d status is %s',
      $self->{flat_indices},
      $self->{sysExtFanStatus});
  if ($self->{sysExtFanStatus} ne 'active') {
    $self->add_warning();
  }
}

package Classes::Alcatel::OmniAccess::Component::StorageSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('WLSX-SYSTEMEXT-MIB', [
      ['storage', 'wlsxSysExtStorageTable', 'Classes::Alcatel::OmniAccess::Component::StorageSubsystem::Storageory'],
  ]);
}


package Classes::Alcatel::OmniAccess::Component::StorageSubsystem::Storageory;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{usage} = 100 * $self->{sysExtStorageUsed} / $self->{sysExtStorageSize};
}

sub check {
  my ($self) = @_;
  my $label = sprintf 'storage_%s_usage', $self->{sysExtStorageName};
  $label =~ s/\s+/_/g;
  $self->add_info(sprintf 'storage %s usage is %.2f%%',
      $self->{sysExtStorageName}, $self->{usage});
  $self->set_thresholds(metric => $label, warning => 80, critical => 90);
  $self->add_message($self->check_thresholds(
      metric => $label, value => $self->{usage}));
  $self->add_perfdata(
      label => $label,
      value => $self->{usage},
      uom => '%',
  );
}

package Classes::Alcatel::OmniAccess::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->{fan_subsystem} =
      Classes::Alcatel::OmniAccess::Component::FanSubsystem->new();
  $self->get_snmp_objects('WLSX-SYSTEMEXT-MIB', qw(
      wlsxSysExtInternalTemparature));
  $self->{powersupply_subsystem} = 
      Classes::Alcatel::OmniAccess::Component::PowersupplySubsystem->new();
  $self->{storage_subsystem} = 
      Classes::Alcatel::OmniAccess::Component::StorageSubsystem->new();
}

sub check {
  my ($self) = @_;
  $self->{fan_subsystem}->check();
  $self->{powersupply_subsystem}->check();
  $self->{storage_subsystem}->check();
  $self->add_info(sprintf "temperature is %s", $self->{wlsxSysExtInternalTemparature});
  if ($self->{wlsxSysExtInternalTemparature} =~ /\(.*\)/ &&
      $self->{wlsxSysExtInternalTemparature} !~ /normal/i) {
    # -1.00 degrees Celsius (NORMAL)
    # wenn kein "(irgendwas)" enthalten ist, dann gibt's wahrsch. eh keinen
    # status, also ignorieren. und warum -1 grad normal sein sollen, muss
    # mir auch mal einer erklaeren.
    $self->add_warning();
  }
  $self->reduce_messages("environmental hardware working fine");
}

sub dump {
  my ($self) = @_;
  printf "[%s]\n%s\n", uc "wlsxSysExtInternalTemparature", 
      $self->{wlsxSysExtInternalTemparature};
  $self->{fan_subsystem}->dump();
  $self->{powersupply_subsystem}->dump();
  $self->{storage_subsystem}->dump();
}

package Classes::Alcatel::OmniAccess::Component::WlanSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('WLSX-WLAN-MIB', qw(wlsxWlanTotalNumAccessPoints));
  $self->get_snmp_tables('WLSX-WLAN-MIB', [
      ['aps', 'wlsxWlanAPTable', 'Classes::Alcatel::OmniAccess::Component::WlanSubsystem::AP', sub { return $self->filter_name(shift->{wlanAPName}) } ],
  ]);
}

sub check {
  my ($self) = @_;
  $self->add_info('checking access points');
  $self->{numOfAPs} = scalar (@{$self->{aps}});
  $self->{apNameList} = [map { $_->{wlanAPName} } @{$self->{aps}}];
  if (scalar (@{$self->{aps}}) == 0) {
    $self->add_unknown('no access points found');
  } else {
    foreach (@{$self->{aps}}) {
      $_->check();
    }
    if ($self->mode =~ /device::wlan::aps::watch/) {
      $self->opts->override_opt('lookback', 1800) if ! $self->opts->lookback;
      $self->valdiff({name => $self->{name}, lastarray => 1},
          qw(apNameList numOfAPs));
      if (scalar(@{$self->{delta_found_apNameList}}) > 0) {
      #if (scalar(@{$self->{delta_found_apNameList}}) > 0 &&
      #    $self->{delta_timestamp} > $self->opts->lookback) {
        $self->add_warning(sprintf '%d new access points (%s)',
            scalar(@{$self->{delta_found_apNameList}}),
            join(", ", @{$self->{delta_found_apNameList}}));
      }
      if (scalar(@{$self->{delta_lost_apNameList}}) > 0) {
        $self->add_critical(sprintf '%d access points missing (%s)',
            scalar(@{$self->{delta_lost_apNameList}}),
            join(", ", @{$self->{delta_lost_apNameList}}));
      }
      $self->add_ok(sprintf 'found %d access points', scalar (@{$self->{aps}}));
      $self->add_perfdata(
          label => 'num_aps',
          value => scalar (@{$self->{aps}}),
      );
    } elsif ($self->mode =~ /device::wlan::aps::count/) {
      $self->set_thresholds(warning => '10:', critical => '5:');
      $self->add_message($self->check_thresholds(
          scalar (@{$self->{aps}})), 
          sprintf 'found %d access points', scalar (@{$self->{aps}}));
      $self->add_perfdata(
          label => 'num_aps',
          value => scalar (@{$self->{aps}}),
      );
    } elsif ($self->mode =~ /device::wlan::aps::status/) {
      $self->reduce_messages('no problems');
      $self->add_perfdata(
          label => 'num_aps',
          value => scalar (@{$self->{aps}}),
      );
      $self->add_perfdata(
          label => 'num_up_aps',
          value => scalar (grep { $_->{wlanAPStatus} ne "down" } @{$self->{aps}}),
      );
      $self->add_perfdata(
          label => 'num_down_aps',
          value => scalar (grep { $_->{wlanAPStatus} eq "down" } @{$self->{aps}}),
      );
    } elsif ($self->mode =~ /device::wlan::aps::list/) {
      foreach (@{$self->{aps}}) {
        printf "%s\n", $_->{wlanAPName};
      }
    }
  }
}

package Classes::Alcatel::OmniAccess::Component::WlanSubsystem::AP;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  if ($self->{wlanAPMacAddress} && $self->{wlanAPMacAddress} =~ /0x(\w{2})(\w{2})(\w{2})(\w{2})(\w{2})(\w{2})/) {
    $self->{wlanAPMacAddress} = join(".", map { hex($_) } ($1, $2, $3, $4, $5, $6));
  } elsif ($self->{wlanAPMacAddress} && unpack("H12", $self->{wlanAPMacAddress}) =~ /(\w{2})(\w{2})(\w{2})(\w{2})(\w{2})(\w{2})/) {
    $self->{wlanAPMacAddress} = join(".", map { hex($_) } ($1, $2, $3, $4, $5, $6));
  }
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'access point %s is %s',
      $self->{wlanAPName}, $self->{wlanAPStatus});
  if ($self->mode =~ /device::wlan::aps::status/) {
    if ($self->{wlanAPStatus} eq 'down') {
      $self->add_critical();
    } else {
      $self->add_ok();
    }
  }
}

package Classes::Alcatel::OmniAccess;
our @ISA = qw(Classes::Alcatel);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::Alcatel::OmniAccess::Component::EnvironmentalSubsystem");
    # waere praktischer, aber in diesem fall muss alarmdreck ausgeputzt werden
    #$self->analyze_and_check_alarm_subsystem("Classes::ALARMMIB::Component::AlarmSubsystem");
    $self->{components}->{alarm_subsystem} = Classes::ALARMMIB::Component::AlarmSubsystem->new();
    @{$self->{components}->{alarm_subsystem}->{alarms}} = grep {
      # accesspoint down und so interface-zeugs interessiert hier nicht, dafuer
      # gibt's die *accesspoint*- und *interface*-modes
      $_->{alarmActiveDescription} =~ /(Temperature is out of range)|(Out of range voltage)|(failed)/ ? 1 : undef;
    } @{$self->{components}->{alarm_subsystem}->{alarms}};
    $self->{components}->{alarm_subsystem}->{stats}->[0]->{alarmActiveStatsActiveCurrent} = scalar(@{$self->{components}->{alarm_subsystem}->{alarms}});
    $self->check_alarm_subsystem();
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::Alcatel::OmniAccess::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::Alcatel::OmniAccess::Component::MemSubsystem");
  } elsif ($self->mode =~ /device::wlan/) {
    $self->analyze_and_check_wlan_subsystem("Classes::Alcatel::OmniAccess::Component::WlanSubsystem");
  } elsif ($self->mode =~ /device::ha::/) {
    $self->analyze_and_check_ha_subsystem("Classes::Alcatel::OmniAccess::Component::HaSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::Alcatel;
our @ISA = qw(Classes::Device);
use strict;

sub init {
  my ($self) = @_;
  if ($self->{productname} =~ /AOS.*OAW/i) {
    bless $self, 'Classes::Alcatel::OmniAccess';
    $self->debug('using Classes::Alcatel::OmniAccess');
  }
  if (ref($self) ne "Classes::Alcatel") {
    $self->init();
  }
}

package Classes::ALARMMIB::Component::AlarmSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('ALARM-MIB', [
      #['models', 'alarmModelTable', 'Classes::ALARMMIB::Component::AlarmSubsystem::AlarmModel'],
      #['variables', 'alarmActiveVariableTable', 'Classes::ALARMMIB::Component::AlarmSubsystem::AlarmVariable'],
      ['alarms', 'alarmActiveTable', 'Classes::ALARMMIB::Component::AlarmSubsystem::Alarm'],
      ['stats', 'alarmActiveStatsTable', 'Classes::ALARMMIB::Component::AlarmSubsystem::AlarmStats'],
  ]);
}


package Classes::ALARMMIB::Component::AlarmSubsystem::Alarm;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

package Classes::ALARMMIB::Component::AlarmSubsystem::AlarmModel;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

package Classes::ALARMMIB::Component::AlarmSubsystem::AlarmVariable;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{ceAlarmTypes} = [];
  if ($self->{alarmActiveVariableValueType} eq 'octetString') {
    my $index = 0;
    $self->{alarmActiveVariableOctetStringVal2} = join("", map {
      chr(hex($_));
    } map {
      /0x(\w+)/ ? $1 : $_;
    } split(/\s+/, $self->{alarmActiveVariableOctetStringVal}));
  }
}


package Classes::ALARMMIB::Component::AlarmSubsystem::AlarmStats;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf "there are %d active alarms",
      $self->{alarmActiveStatsActiveCurrent});
  if ($self->{alarmActiveStatsActiveCurrent}) {
    $self->add_critical();
  } else {
    $self->add_ok();
  }
}

package Classes::Foundry::Component::SLBSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub update_caches {
  my ($self, $force) = @_;
  $self->update_entry_cache($force, 'FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB', 'snL4BindTable', 'snL4BindVirtualServerName');
  $self->update_entry_cache($force, 'FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB', 'snL4VirtualServerTable', 'snL4VirtualServerName');
  $self->update_entry_cache($force, 'FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB', 'snL4VirtualServerPortTable', 'snL4VirtualServerPortServerName');
  $self->update_entry_cache($force, 'FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB', 'snL4VirtualServerPortStatisticTable', 'snL4VirtualServerPortStatisticServerName');
  $self->update_entry_cache($force, 'FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB', 'snL4RealServerPortStatusTable', 'snL4RealServerPortStatusServerName');
}

sub init {
  my ($self) = @_;
  # opt->name can be servername:serverport
  my $original_name = $self->opts->name;
  if ($self->mode =~ /device::lb::session::usage/) {
    $self->get_snmp_objects('FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB', (qw(
        snL4MaxSessionLimit snL4FreeSessionCount)));
    $self->{session_usage} = 100 * ($self->{snL4MaxSessionLimit} - $self->{snL4FreeSessionCount}) / $self->{snL4MaxSessionLimit};
  } elsif ($self->mode =~ /device::lb::pool/) {
    if ($self->mode =~ /device::lb::pool::list/) {
      $self->update_caches(1);
    } else {
      $self->update_caches(0);
    }
    if ($self->opts->name) {
      # optimized, with a minimum of snmp operations
      foreach my $vs ($self->get_snmp_table_objects_with_cache(
          'FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB', 'snL4VirtualServerTable', 'snL4VirtualServerName')) {
        $self->{vsdict}->{$vs->{snL4VirtualServerName}} = $vs;
        $self->opts->override_opt('name', $vs->{snL4VirtualServerName});
        foreach my $vsp ($self->get_snmp_table_objects_with_cache(
            'FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB', 'snL4VirtualServerPortTable', 'snL4VirtualServerPortServerName')) {
          $self->{vspdict}->{$vsp->{snL4VirtualServerPortServerName}}->{$vsp->{snL4VirtualServerPortPort}} = $vsp;
        }
        foreach my $vspsc ($self->get_snmp_table_objects_with_cache(
            'FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB', 'snL4VirtualServerPortStatisticTable', 'snL4VirtualServerPortStatisticServerName')) {
          $self->{vspscdict}->{$vspsc->{snL4VirtualServerPortStatisticServerName}}->{$vspsc->{snL4VirtualServerPortStatisticPort}} = $vspsc;
        }
        foreach my $binding ($self->get_snmp_table_objects_with_cache(
            'FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB', 'snL4BindTable', 'snL4BindVirtualServerName')) {
          $self->{bindingdict}->{$binding->{snL4BindVirtualServerName}}->{$binding->{snL4BindVirtualPortNumber}}->{$binding->{snL4BindRealServerName}}->{$binding->{snL4BindRealPortNumber}} = 1;
          $self->opts->override_opt('name', $binding->{snL4BindRealServerName});
          if (! exists $self->{rsdict}->{$binding->{snL4BindRealServerName}}) {
            #foreach my $rs ($self->get_snmp_table_objects_with_cache(
            #    'FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB', 'snL4RealServerTable', 'snL4RealServerName')) {
            #  $self->{rsdict}->{$rs->{snL4RealServerName}} = $rs;
            #}
            #foreach my $rsst ($self->get_snmp_table_objects_with_cache(
            #    'FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB', 'snL4RealServerStatusTable', 'snL4RealServerStatusName')) {
            #  $self->{rsstdict}->{$rsst->{snL4RealServerStatusName}} = $rsst;
            #}
          }
          if (! exists $self->{rspstdict}->{$binding->{snL4BindRealServerName}}->{$binding->{snL4BindRealPortNumber}}) {
            # todo: profiler, dauert 30s pro aufruf
            foreach my $rspst ($self->get_snmp_table_objects_with_cache(
                'FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB', 'snL4RealServerPortStatusTable', 'snL4RealServerPortStatusServerName')) {
              $self->{rspstdict}->{$rspst->{snL4RealServerPortStatusServerName}}->{$rspst->{snL4RealServerPortStatusPort}} = $rspst;
            }
          }
        }
      }
    } else {
      foreach my $vs ($self->get_snmp_table_objects(
          'FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB', 'snL4VirtualServerTable')) {
        $self->{vsdict}->{$vs->{snL4VirtualServerName}} = $vs;
      }
      foreach my $vsp ($self->get_snmp_table_objects(
          'FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB', 'snL4VirtualServerPortTable')) {
        $self->{vspdict}->{$vsp->{snL4VirtualServerPortServerName}}->{$vsp->{snL4VirtualServerPortPort}} = $vsp;
      }
      foreach my $vspsc ($self->get_snmp_table_objects(
          'FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB', 'snL4VirtualServerPortStatisticTable')) {
        $self->{vspscdict}->{$vspsc->{snL4VirtualServerPortStatisticServerName}}->{$vspsc->{snL4VirtualServerPortStatisticPort}} = $vspsc;
      }
      #foreach my $rs ($self->get_snmp_table_objects(
      #    'FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB', 'snL4RealServerTable')) {
      #  $self->{rsdict}->{$rs->{snL4RealServerName}} = $rs;
      #}
      #foreach my $rsst ($self->get_snmp_table_objects(
      #    'FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB', 'snL4RealServerStatusTable')) {
      #  $self->{rsstdict}->{$rsst->{snL4RealServerStatusName}} = $rsst;
      #}
      foreach my $rspst ($self->get_snmp_table_objects(
          'FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB', 'snL4RealServerPortStatusTable')) {
        $self->{rspstdict}->{$rspst->{snL4RealServerPortStatusServerName}}->{$rspst->{snL4RealServerPortStatusPort}} = $rspst;
      }
      foreach my $binding ($self->get_snmp_table_objects(
          'FOUNDRY-SN-SW-L4-SWITCH-GROUP-MIB', 'snL4BindTable')) {
        $self->{bindingdict}->{$binding->{snL4BindVirtualServerName}}->{$binding->{snL4BindVirtualPortNumber}}->{$binding->{snL4BindRealServerName}}->{$binding->{snL4BindRealPortNumber}} = 1;
      }
    }

    # snL4VirtualServerTable:                snL4VirtualServerAdminStatus
    # snL4VirtualServerStatisticTable:       allenfalls TxRx Bytes
    # snL4VirtualServerPortTable:            snL4VirtualServerPortAdminStatus*
    # snL4VirtualServerPortStatisticTable:   snL4VirtualServerPortStatisticCurrentConnection*
    # snL4RealServerTable:                   snL4RealServerAdminStatus
    # snL4RealServerPortStatusTable:         snL4RealServerPortStatusCurrentConnection snL4RealServerPortStatusState
    # 
    # summe snL4RealServerStatisticCurConnections = snL4VirtualServerPortStatisticCurrentConnection
    # vip , jeder vport gibt ein performancedatum, jeder port hat n. realports, jeder realport hat status
    #  aus realportstatus errechnet sich verfuegbarkeit des vport
    #  aus vports ergeben sich die session-output.zahlen
    # real ports eines vs, real servers
    # globaler mode snL4MaxSessionLimit : snL4FreeSessionCount


    #
    # virtual server
    #
    $self->opts->override_opt('name', $original_name);
    $self->{virtualservers} = [];
    foreach my $vs (grep { $self->filter_name($_) } keys %{$self->{vsdict}}) {
      $self->{vsdict}->{$vs} = Classes::Foundry::Component::SLBSubsystem::VirtualServer->new(%{$self->{vsdict}->{$vs}});
      next if ! exists $self->{vspdict}->{$vs};
      #
      # virtual server has ports
      #
      foreach my $vspp (keys %{$self->{vspdict}->{$vs}}) {
        next if $self->opts->name2 && $self->opts->name2 ne $vspp;
        #
        # virtual server port has bindings
        #
        $self->{vspdict}->{$vs}->{$vspp} = Classes::Foundry::Component::SLBSubsystem::VirtualServerPort->new(%{$self->{vspdict}->{$vs}->{$vspp}});
        #
        # merge virtual server port and virtual server port statistics
        #
        map { $self->{vspdict}->{$vs}->{$vspp}->{$_} = $self->{vspscdict}->{$vs}->{$vspp}->{$_} } keys %{$self->{vspscdict}->{$vs}->{$vspp}};
        #
        # add the virtual port to the virtual server object
        #
        $self->{vsdict}->{$vs}->add_port($self->{vspdict}->{$vs}->{$vspp});
        next if ! exists $self->{bindingdict}->{$vs} || ! exists $self->{bindingdict}->{$vs}->{$vspp};
        #
        # bound virtual server port has corresponding real server port(s)
        #
        foreach my $rs (keys %{$self->{bindingdict}->{$vs}->{$vspp}}) {
          foreach my $rsp (keys %{$self->{bindingdict}->{$vs}->{$vspp}->{$rs}}) {
            #
            # loop through real server / real server port
            #
            $self->{rspstdict}->{$rs}->{$rsp} = Classes::Foundry::Component::SLBSubsystem::RealServerPort->new(%{$self->{rspstdict}->{$rs}->{$rsp}}) if ref($self->{rspstdict}->{$rs}->{$rsp}) eq 'HASH';
            $self->{vspdict}->{$vs}->{$vspp}->add_port($self->{rspstdict}->{$rs}->{$rsp}); # add real port(s) to virtual port
          }
        }
      }
      push(@{$self->{virtualservers}}, $self->{vsdict}->{$vs});
    }
  }
}

sub check {
  my ($self) = @_;
  $self->add_info('checking slb virtual servers');
  if ($self->mode =~ /device::lb::session::usage/) {
    $self->add_info('checking session usage');
    $self->add_info(sprintf 'session usage is %.2f%% (%d of %d)', $self->{session_usage},
        $self->{snL4MaxSessionLimit} - $self->{snL4FreeSessionCount}, $self->{snL4MaxSessionLimit});
    $self->set_thresholds(warning => 80, critical => 90);
    $self->add_message($self->check_thresholds($self->{session_usage}));
    $self->add_perfdata(
        label => 'session_usage',
        value => $self->{session_usage},
        uom => '%',
    );
  } elsif ($self->mode =~ /device::lb::pool/) {
    if (scalar(@{$self->{virtualservers}}) == 0) {
      $self->add_unknown('no vips');
      return;
    }
    if ($self->mode =~ /pool::list/) {
      foreach (@{$self->{virtualservers}}) {
        printf "%s\n", $_->{snL4VirtualServerName};
        #$_->list();
      }
    } else {
      foreach (@{$self->{virtualservers}}) {
        $_->check();
      }
      if (! $self->opts->name) {
        $self->clear_ok(); # too much noise
        if (! $self->check_messages()) {
          $self->add_ok("virtual servers working fine");
        }
      }
    }
  }
}


package Classes::Foundry::Component::SLBSubsystem::VirtualServer;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{ports} = [];
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf "vis %s is %s", 
      $self->{snL4VirtualServerName},
      $self->{snL4VirtualServerAdminStatus});
  if ($self->{snL4VirtualServerAdminStatus} ne 'enabled') {
    $self->add_warning();
  } else {
    if (scalar (@{$self->{ports}}) == 0) {
      $self->add_warning();
      $self->add_warning("but has no configured ports");
    } else {
      foreach (@{$self->{ports}}) {
        $_->check();
      }
    }
  }
  if ($self->opts->report eq "html") {
    my ($code, $message) = $self->check_messages();
    printf "%s - %s%s\n", $self->status_code($code), $message, $self->perfdata_string() ? " | ".$self->perfdata_string() : "";
    $self->suppress_messages();
    print $self->html_string();
  }
}

sub add_port {
  my ($self) = @_;
  push(@{$self->{ports}}, shift);
}


package Classes::Foundry::Component::SLBSubsystem::VirtualServerPort;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{ports} = [];
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf "vpo %s:%d is %s (%d connections to %d real ports)",
      $self->{snL4VirtualServerPortServerName},
      $self->{snL4VirtualServerPortPort},
      $self->{snL4VirtualServerPortAdminStatus},
      $self->{snL4VirtualServerPortStatisticCurrentConnection},
      scalar(@{$self->{ports}}));
  my $num_ports = scalar(@{$self->{ports}});
  my $active_ports = scalar(grep { $_->{snL4RealServerPortStatusState} eq 'active' } @{$self->{ports}});
  # snL4RealServerPortStatusState: failed wird auch angezeigt durch snL4RealServerStatusFailedPortExists => 1
  # wobei snL4RealServerStatusState' => serveractive ist
  # zu klaeren, ob ein kaputter real server auch in snL4RealServerPortStatusState angezeigt wird
  $self->{completeness} = $num_ports ? 100 * $active_ports / $num_ports : 0;
  if ($num_ports == 0) {
    $self->set_thresholds(warning => "0:", critical => "0:");
    $self->add_warning(sprintf "%s:%d has no bindings", 
      $self->{snL4VirtualServerPortServerName},
      $self->{snL4VirtualServerPortPort});
  } elsif ($active_ports == 1) {
    # only one member left = no more redundancy!!
    $self->set_thresholds(warning => "100:", critical => "51:");
  } else {
    $self->set_thresholds(warning => "51:", critical => "26:");
  }
  $self->add_message($self->check_thresholds($self->{completeness}));
  foreach (@{$self->{ports}}) {
    $_->check();
  }
  $self->add_perfdata(
      label => sprintf('pool_%s:%d_completeness', $self->{snL4VirtualServerPortServerName}, $self->{snL4VirtualServerPortPort}),
      value => $self->{completeness},
      uom => '%',
  );
  $self->add_perfdata(
      label => sprintf('pool_%s:%d_servercurconns', $self->{snL4VirtualServerPortServerName}, $self->{snL4VirtualServerPortPort}),
      value => $self->{snL4VirtualServerPortStatisticCurrentConnection},
      thresholds => 0,
  );
  if ($self->opts->report eq "html") {
    # tabelle mit snL4VirtualServerPortServerName:snL4VirtualServerPortPort
    $self->add_html("<table style=\"border-collapse:collapse; border: 1px solid black;\">");
    $self->add_html("<tr>");
    foreach (qw(Name Port Status Real Port Status Conn)) {
      $self->add_html(sprintf "<th style=\"text-align: left; padding-left: 4px; padding-right: 6px;\">%s</th>", $_);
    }
    $self->add_html("</tr>");
    foreach (sort {$a->{snL4RealServerPortStatusServerName} cmp $b->{snL4RealServerPortStatusServerName}} @{$self->{ports}}) {
      $self->add_html("<tr style=\"border: 1px solid black;\">");
      foreach my $attr (qw(snL4VirtualServerPortServerName snL4VirtualServerPortPort snL4VirtualServerPortAdminStatus)) {
        my $bgcolor = "#33ff00"; #green
        if ($self->{snL4VirtualServerPortAdminStatus} ne "enabled") {
          $bgcolor = "#acacac";
        } elsif ($self->check_messages()) {
          $bgcolor = "#f83838";
        }
        $self->add_html(sprintf "<td style=\"text-align: left; padding-left: 4px; padding-right: 6px; background-color: %s;\">%s</td>", $bgcolor, $self->{$attr});
      }
      foreach my $attr (qw(snL4RealServerPortStatusServerName snL4RealServerPortStatusPort snL4RealServerPortStatusState snL4RealServerPortStatusCurrentConnection)) {
        my $bgcolor = "#33ff00"; #green
        if ($self->{snL4VirtualServerPortAdminStatus} ne "enabled") {
          $bgcolor = "#acacac";
        } elsif ($_->{snL4RealServerPortStatusState} ne "active") {
          $bgcolor = "#f83838";
        }
        $self->add_html(sprintf "<td style=\"text-align: left; padding-left: 4px; padding-right: 6px; background-color: %s;\">%s</td>", $bgcolor, $_->{$attr});
      }
      $self->add_html("</tr>");
    }
    $self->add_html("</table>\n");
    $self->add_html("<!--\nASCII_NOTIFICATION_START\n");
    foreach (qw(Name Port Status Real Port Status Conn)) {
      $self->add_html(sprintf "%25s", $_);
    }
    $self->add_html("\n");
    foreach (sort {$a->{snL4RealServerPortStatusServerName} cmp $b->{snL4RealServerPortStatusServerName}} @{$self->{ports}}) {
      foreach my $attr (qw(snL4VirtualServerPortServerName snL4VirtualServerPortPort snL4VirtualServerPortAdminStatus)) {
        $self->add_html(sprintf "%25s", $self->{$attr});
      }
      foreach my $attr (qw(snL4RealServerPortStatusServerName snL4RealServerPortStatusPort snL4RealServerPortStatusState snL4RealServerPortStatusCurrentConnection)) {
        $self->add_html(sprintf "%15s", $_->{$attr});
      }
      $self->add_html("\n");
    }
    $self->add_html("ASCII_NOTIFICATION_END\n-->\n");
  }
}

sub add_port {
  my ($self) = @_;
  push(@{$self->{ports}}, shift);
}


package Classes::Foundry::Component::SLBSubsystem::RealServer;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  if ($self->{slbPoolMbrStatusEnabledState} eq "enabled") {
    if ($self->{slbPoolMbrStatusAvailState} ne "green") {
      $self->add_critical(sprintf
          "member %s is %s/%s (%s)",
          $self->{slbPoolMemberNodeName},
          $self->{slbPoolMemberMonitorState},
          $self->{slbPoolMbrStatusAvailState},
          $self->{slbPoolMbrStatusDetailReason});
    }
  }
}


package Classes::Foundry::Component::SLBSubsystem::RealServerPort;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };

sub check {
  my ($self) = @_;
  $self->add_info(sprintf "rpo %s:%d is %s",
      $self->{snL4RealServerPortStatusServerName},
      $self->{snL4RealServerPortStatusPort},
      $self->{snL4RealServerPortStatusState});
  $self->add_message($self->{snL4RealServerPortStatusState} eq 'active' ? OK : CRITICAL);
  # snL4VirtualServerPortStatisticTable dazumischen
  # snL4VirtualServerPortStatisticTable:   snL4VirtualServerPortStatisticCurrentConnection*
  # realports connecten und den status ermitteln
}


package Classes::Foundry::Component::SLBSubsystem::Binding;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

package Classes::Foundry::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('FOUNDRY-SN-AGENT-MIB', (qw(
      snAgGblDynMemUtil snAgGblDynMemTotal snAgGblDynMemFree)));
}

sub check {
  my ($self) = @_;
  $self->add_info('checking memory');
  if (defined $self->{snAgGblDynMemUtil}) {
    $self->add_info(sprintf 'memory usage is %.2f%%',
        $self->{snAgGblDynMemUtil});
    $self->set_thresholds(warning => 80, critical => 99);
    $self->add_message($self->check_thresholds($self->{snAgGblDynMemUtil}));
    $self->add_perfdata(
        label => 'memory_usage',
        value => $self->{snAgGblDynMemUtil},
        uom => '%',
    );
  } else {
    $self->add_unknown('cannot aquire memory usage');
  }
}

package Classes::Foundry::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('FOUNDRY-SN-AGENT-MIB', [
      ['cpus', 'snAgentCpuUtilTable', 'Classes::Foundry::Component::CpuSubsystem::Cpu'],
  ]);
  $self->get_snmp_objects('FOUNDRY-SN-AGENT-MIB', (qw(
      snAgGblCpuUtil1SecAvg snAgGblCpuUtil5SecAvg snAgGblCpuUtil1MinAvg)));
}

sub check {
  my ($self) = @_;
  if (scalar (@{$self->{cpus}}) == 0) {
    $self->overall_check();
  } else {
    # snAgentCpuUtilInterval = 1, 5, 60, 300
    # --lookback can be one of these values, default is 300 (1,5 is a stupid choice)
    $self->opts->override_opt('lookback', 300) if ! $self->opts->lookback;
    foreach (grep { $_->{snAgentCpuUtilInterval} eq $self->opts->lookback} @{$self->{cpus}}) {
      $_->check();
    }
  }
}

sub dump {
  my ($self) = @_;
  $self->overall_dump();
  foreach (@{$self->{cpus}}) {
    $_->dump();
  }
}

sub overall_check {
  my ($self) = @_;
  my $errorfound = 0;
  $self->add_info('checking cpus');
  $self->add_info(sprintf 'cpu usage is %.2f%%', $self->{snAgGblCpuUtil1MinAvg});
  $self->set_thresholds(warning => 50, critical => 90);
  $self->add_message($self->check_thresholds(
      $self->{snAgGblCpuUtil1MinAvg}));
  $self->add_perfdata(
      label => 'cpu_usage',
      value => $self->{snAgGblCpuUtil1MinAvg},
      uom => '%',
  );
}

sub overall_dump {
  my ($self) = @_;
  printf "[CPU]\n";
  foreach (qw(snAgGblCpuUtil1SecAvg snAgGblCpuUtil5SecAvg
      snAgGblCpuUtil1MinAvg)) {
    printf "%s: %s\n", $_, $self->{$_};
  }
  printf "\n";
}

package Classes::Foundry::Component::CpuSubsystem::Cpu;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  # newer mibs have snAgentCpuUtilPercent and snAgentCpuUtil100thPercent
  # snAgentCpuUtilValue is deprecated
  $self->{snAgentCpuUtilValue} = $self->{snAgentCpuUtil100thPercent} / 100
      if defined $self->{snAgentCpuUtil100thPercent};
  # if it is an old mib, watch out. snAgentCpuUtilValue is 100th of a percent
  # but it seems that sometimes in reality it is percent
  $self->{snAgentCpuUtilValue} = $self->{snAgentCpuUtilValue} / 100
      if $self->{snAgentCpuUtilValue} > 100;
  $self->add_info(sprintf 'cpu %s usage is %.2f', $self->{snAgentCpuUtilSlotNum}, $self->{snAgentCpuUtilValue});
  $self->set_thresholds(warning => 80, critical => 90);
  $self->add_message($self->check_thresholds($self->{snAgentCpuUtilValue}));
  $self->add_perfdata(
      label => 'cpu_'.$self->{snAgentCpuUtilSlotNum},
      value => $self->{snAgentCpuUtilValue},
      uom => '%',
  );
}

package Classes::Foundry::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->{powersupply_subsystem} =
      Classes::Foundry::Component::PowersupplySubsystem->new();
  $self->{fan_subsystem} =
      Classes::Foundry::Component::FanSubsystem->new();
  $self->{temperature_subsystem} =
      Classes::Foundry::Component::TemperatureSubsystem->new();
  $self->{module_subsystem} =
      Classes::Foundry::Component::ModuleSubsystem->new();
}

sub check {
  my ($self) = @_;
  $self->{powersupply_subsystem}->check();
  $self->{fan_subsystem}->check();
  $self->{temperature_subsystem}->check();
  $self->{module_subsystem}->check();
  $self->reduce_messages("hardware working fine");
}

sub dump {
  my ($self) = @_;
  $self->{powersupply_subsystem}->dump();
  $self->{fan_subsystem}->dump();
  $self->{temperature_subsystem}->dump();
  $self->{module_subsystem}->dump();
}


package Classes::Foundry::Component::PowersupplySubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('FOUNDRY-SN-AGENT-MIB', [
      ['powersupplies', 'snChasPwrSupplyTable', 'Classes::Foundry::Component::PowersupplySubsystem::Powersupply'],
  ]);
}


package Classes::Foundry::Component::PowersupplySubsystem::Powersupply;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf '%s oper status %s',
      $self->{snChasPwrSupplyDescription},
      $self->{snChasPwrSupplyOperStatus}
  );
  if ($self->{snChasPwrSupplyOperStatus} eq 'failure' &&
      $self->{snChasPwrSupplyDescription} !~ /not present/) {
    # snChasPwrSupplyDescription: "Power supply 2 not present
    # snChasPwrSupplyOperStatus: failure
    $self->add_critical();
  }
}

package Classes::Foundry::Component::FanSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('FOUNDRY-SN-AGENT-MIB', [
      ['fans', 'snChasFanTable', 'Classes::Foundry::Component::FanSubsystem::Fan'],
  ]);
}


package Classes::Foundry::Component::FanSubsystem::Fan;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{snChasFanDescription} ||= 'fan '.$self->{snChasFanIndex};
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf '%s status is %s',
      $self->{snChasFanDescription},
      $self->{snChasFanOperStatus});
  if ($self->{snChasFanOperStatus} eq 'failure') {
    $self->add_critical();
  }
}

package Classes::Foundry::Component::TemperatureSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  my $temp = 0;
  $self->get_snmp_objects('FOUNDRY-SN-AGENT-MIB', (qw(
      snChasActualTemperature snChasWarningTemperature
      snChasShutdownTemperature 
  )));
  $self->get_snmp_tables('FOUNDRY-SN-AGENT-MIB', [
      ['temperatures', 'snAgentTempTable', 'Classes::Foundry::Component::TemperatureSubsystem::Temperature'],
      ['tempthresholds', 'snAgentTempThresholdTable', 'Classes::Foundry::Component::TemperatureSubsystem::Temperature'],
  ]);
}

sub check {
  my ($self) = @_;
  if (defined $self->{snChasActualTemperature}) {
    $self->{snChasActualTemperature} /= 2;
    $self->{snChasWarningTemperature} /= 2;
    $self->{snChasShutdownTemperature} /= 2;
    my $label = sprintf 'temperature_chassis';
    $self->add_info(sprintf 'chassis temperature is %.2fC', 
        $self->{snChasActualTemperature});
    $self->set_thresholds(metric => $label,
        warning => $self->{snChasWarningTemperature},
        critical => $self->{snChasShutdownTemperature});
    $self->add_message($self->check_thresholds(
        metric => $label,
        value => $self->{snChasActualTemperature}
    ));
    $self->add_perfdata(
        label => $label,
        value => $self->{snChasActualTemperature},
    );
  }
  foreach(@{$self->{temperatures}}) {
    if (defined $self->{snChasActualTemperature}) {
      $_->set_thresholds(metric => $_->{label},
          warning => $self->{snChasWarningTemperature},
          critical => $self->{snChasShutdownTemperature});
    } else {
      $_->set_thresholds(metric => $_->{label}, warning => 60, critical => 70);
    }
    $_->check();
  }
}

package Classes::Foundry::Component::TemperatureSubsystem::Temperature;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  ($self->{snAgentTempSlotNum}, $self->{snAgentTempSensorId}) =
      @{$self->{indices}};
  $self->{snAgentTempValue} /= 2 if ($self->{snAgentTempValue});
  $self->{label} = sprintf 'temperature_%s:%s',
      $self->{snAgentTempSensorId},
      $self->{snAgentTempSlotNum};
}

sub check {
  my ($self) = @_;
  return if (!$self->{snAgentTempValue});
  $self->add_info(sprintf 'temperature %s in slot %s is %.2fC', 
      $self->{snAgentTempSensorId},
      $self->{snAgentTempSlotNum}, $self->{snAgentTempValue});
  $self->add_message($self->check_thresholds(
      metric => $self->{label},
      value => $self->{snAgentTempValue}
  ));
  $self->add_perfdata(
      label => $self->{label},
      value => $self->{snAgentTempValue},
  );
}

package Classes::Foundry::Component::ModuleSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('FOUNDRY-SN-AGENT-MIB', [
      ['boards', 'snAgentBrdTable', 'Classes::Foundry::Component::ModuleSubsystem::Module', undef, ['snAgentBrdMainBrdDescription', 'snAgentBrdMainBrdId', 'snAgentBrdExpBrdDescription', 'snAgentBrdModuleStatus', 'snAgentBrdRedundantStatus']],
  ]);
}


package Classes::Foundry::Component::ModuleSubsystem::Module;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'module %s status is %s, redundancy status is %s', 
      $self->{snAgentBrdMainBrdDescription},
      $self->{snAgentBrdModuleStatus},
      $self->{snAgentBrdRedundantStatus});
  if ($self->{snAgentBrdRedundantStatus} eq 'crashed' ||
      $self->{snAgentBrdModuleStatus} eq 'moduleRejected') {
    $self->add_warning();
  } elsif ($self->{snAgentBrdModuleStatus} eq 'moduleBad') {
    $self->add_critical();
  }
}

package Classes::Foundry;
our @ISA = qw(Classes::Device);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::Foundry::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::Foundry::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::Foundry::Component::MemSubsystem");
  } elsif ($self->mode =~ /device::lb/) {
    $self->analyze_and_check_slb_subsystem("Classes::Foundry::Component::SLBSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::RAPIDCITYMIB::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->{powersupply_subsystem} =
      Classes::RAPIDCITYMIB::Component::PowersupplySubsystem->new();
  $self->{fan_subsystem} =
      Classes::RAPIDCITYMIB::Component::FanSubsystem->new();
  $self->{temperature_subsystem} =
      Classes::RAPIDCITYMIB::Component::TemperatureSubsystem->new();
}

sub check {
  my ($self) = @_;
  $self->{powersupply_subsystem}->check();
  $self->{fan_subsystem}->check();
  $self->{temperature_subsystem}->check();
  if (! $self->check_messages()) {
    $self->add_ok("environmental hardware working fine");
  }
}

sub dump {
  my ($self) = @_;
  $self->{powersupply_subsystem}->dump();
  $self->{fan_subsystem}->dump();
  $self->{temperature_subsystem}->dump();
}


package Classes::RAPIDCITYMIB::Component::PowersupplySubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('FOUNDRY-SN-AGENT-MIB', [
      ['powersupplies', 'snChasPwrSupplyTable', 'Classes::RAPIDCITYMIB::Component::PowersupplySubsystem::Powersupply'],
  ]);
}


package Classes::RAPIDCITYMIB::Component::PowersupplySubsystem::Powersupply;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'powersupply %d is %s',
      $self->{snChasPwrSupplyIndex},
      $self->{snChasPwrSupplyOperStatus});
  if ($self->{snChasPwrSupplyOperStatus} eq 'failure') {
    $self->add_critical();
  }
}

package Classes::RAPIDCITYMIB::Component::FanSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('FOUNDRY-SN-AGENT-MIB', [
      ['fans', 'snChasFanTable', 'Classes::RAPIDCITYMIB::Component::FanSubsystem::Fan'],
  ]);
}


package Classes::RAPIDCITYMIB::Component::FanSubsystem::Fan;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'fan %d is %s',
      $self->{snChasFanIndex},
      $self->{snChasFanOperStatus});
  if ($self->{snChasFanOperStatus} eq 'failure') {
    $self->add_critical();
  }
}

package Classes::RAPIDCITYMIB::Component::TemperatureSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  my $temp = 0;
  $self->get_snmp_tables('FOUNDRY-SN-AGENT-MIB', [
      ['temperatures', 'snAgentTempTable', 'Classes::RAPIDCITYMIB::Component::TemperatureSubsystem::Temperature'],
  ]);
  foreach(@{$self->{temperatures}}) {
    $_->{snAgentTempSlotNum} ||= $temp++;
    $_->{snAgentTempSensorId} ||= 1;
  }
}


package Classes::RAPIDCITYMIB::Component::TemperatureSubsystem::Temperature;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->{snAgentTempValue} /= 2;
  $self->add_info(sprintf 'temperature %s is %.2fC', 
      $self->{snAgentTempSlotNum}, $self->{snAgentTempValue});
  $self->set_thresholds(warning => 60, critical => 70);
  $self->add_message($self->check_thresholds($self->{snAgentTempValue}));
  $self->add_perfdata(
      label => 'temperature_'.$self->{snAgentTempSlotNum},
      value => $self->{snAgentTempValue},
  );
}

package Classes::RAPIDCITYMIB;
our @ISA = qw(Classes::Device);
use strict;

package Classes::PaloALto::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('NETSCREEN-RESOURCE-MIB', (qw(
      nsResMemAllocate nsResMemLeft nsResMemFrag)));
  my $mem_total = $self->{nsResMemAllocate} + $self->{nsResMemLeft};
  $self->{mem_usage} = $self->{nsResMemAllocate} / $mem_total * 100;
}

sub check {
  my ($self) = @_;
  $self->add_info('checking memory');
  if (defined $self->{mem_usage}) {
    $self->add_info(sprintf 'memory usage is %.2f%%', $self->{mem_usage});
    $self->set_thresholds(warning => 80,
        critical => 90);
    $self->add_message($self->check_thresholds($self->{mem_usage}));
    $self->add_perfdata(
        label => 'memory_usage',
        value => $self->{mem_usage},
        uom => '%',
    );
  } else {
    $self->add_unknown('cannot aquire memory usage');
  }
}

package Classes::PaloALto::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('NETSCREEN-RESOURCE-MIB', (qw(
      nsResCpuAvg)));
}

sub check {
  my ($self) = @_;
  $self->add_info('checking cpus');
  $self->add_info(sprintf 'cpu usage is %.2f%%', $self->{nsResCpuAvg});
  $self->set_thresholds(warning => 50, critical => 90);
  $self->add_message($self->check_thresholds($self->{nsResCpuAvg}));
  $self->add_perfdata(
      label => 'cpu_usage',
      value => $self->{nsResCpuAvg},
      uom => '%',
  );
}
package Classes::PaloAlto::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
#######################
$self->no_such_mode();
die;
## entitymib, pan enhancement
  $self->get_snmp_objects("NETSCREEN-CHASSIS-MIB", (qw(
      sysBatteryStatus)));
  $self->get_snmp_tables("NETSCREEN-CHASSIS-MIB", [
      ['fans', 'nsFanTable', 'Classes::PaloAlto::Component::EnvironmentalSubsystem::Fan'],
      ['power', 'nsPowerTable', 'Classes::PaloAlto::Component::EnvironmentalSubsystem::Power'],
      ['slots', 'nsSlotTable', 'Classes::PaloAlto::Component::EnvironmentalSubsystem::Slot'],
      ['temperatures', 'nsTemperatureTable', 'Classes::PaloAlto::Component::EnvironmentalSubsystem::Temperature'],
  ]);
}

sub check {
  my ($self) = @_;
  foreach (@{$self->{fans}}, @{$self->{power}}, @{$self->{slots}}, @{$self->{temperatures}}) {
    $_->check();
  }
}


package Classes::PaloAlto::Component::EnvironmentalSubsystem::Fan;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf "fan %s (%s) is %s",
      $self->{nsFanId}, $self->{nsFanDesc}, $self->{nsFanStatus});
  if ($self->{nsFanStatus} eq "notInstalled") {
  } elsif ($self->{nsFanStatus} eq "good") {
    $self->add_ok();
  } elsif ($self->{nsFanStatus} eq "fail") {
    $self->add_warning();
  }
}


package Classes::PaloAlto::Component::EnvironmentalSubsystem::Power;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf "power supply %s (%s) is %s",
      $self->{nsPowerId}, $self->{nsPowerDesc}, $self->{nsPowerStatus});
  if ($self->{nsPowerStatus} eq "good") {
    $self->add_ok();
  } elsif ($self->{nsPowerStatus} eq "fail") {
    $self->add_warning();
  }
}


package Classes::PaloAlto::Component::EnvironmentalSubsystem::Slot;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf "%s slot %s (%s) is %s",
      $self->{nsSlotType}, $self->{nsSlotId}, $self->{nsSlotSN}, $self->{nsSlotStatus});
  if ($self->{nsSlotStatus} eq "good") {
    $self->add_ok();
  } elsif ($self->{nsSlotStatus} eq "fail") {
    $self->add_warning();
  }
}


package Classes::PaloAlto::Component::EnvironmentalSubsystem::Temperature;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf "temperature %s is %sC",
      $self->{nsTemperatureId}, $self->{nsTemperatureDesc}, $self->{nsTemperatureCur});
  $self->add_ok();
  $self->add_perfdata(
      label => 'temp_'.$self->{nsTemperatureId},
      value => $self->{nsTemperatureCur},
  );
}

package Classes::PaloAlto::Component::HaSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::ha::role/) {
  $self->get_snmp_objects('PAN-COMMON-MIB', (qw(
      panSysHAMode panSysHAState panSysHAPeerState)));
    if (! $self->opts->role()) {
      $self->opts->override_opt('role', 'active');
    }
  }
}

sub check {
  my ($self) = @_;
  $self->add_info('checking ha');
  $self->add_info(sprintf 'ha mode is %s, state is %s, peer state is %s', 
      $self->{panSysHAMode},
      $self->{panSysHAState},
      $self->{panSysHAPeerState},
  );
  if ($self->{panSysHAMode} eq 'disabled') {
    $self->add_message(
        defined $self->opts->mitigation() ? $self->opts->mitigation() : WARNING,
        'ha was not started');
  } else {
    if ($self->{panSysHAState} ne $self->opts->role()) {
      $self->add_message(
          defined $self->opts->mitigation() ? $self->opts->mitigation() : WARNING,
          $self->{info});
      $self->add_message(
          defined $self->opts->mitigation() ? $self->opts->mitigation() : WARNING,
          sprintf "expected role %s", $self->opts->role())
    } else {
      $self->add_ok();
    }
  }
}

package Classes::PaloAlto;
our @ISA = qw(Classes::Device);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::ENTITYSENSORMIB::Component::EnvironmentalSubsystem");
    $self->analyze_and_check_environmental_subsystem("Classes::HOSTRESOURCESMIB::Component::EnvironmentalSubsystem");
    # entity-state-mib gibts u.u. auch
    # The entStateTable will have entries for Line Cards, Fan Trays and Power supplies. Since these entities only apply to chassis systems, only PA-7000 series devices will support this MIB.
    # gibts aber erst, wenn einer die entwicklung zahlt. bis dahin ist es
    # mir scheissegal, wenn euch die firewalls abkacken, ihr freibiervisagen
  } elsif ($self->mode =~ /device::hardware::load/) {
    # CPU util on management plane
    # Utilization of CPUs on dataplane that are used for system functions
    $self->analyze_and_check_cpu_subsystem("Classes::HOSTRESOURCESMIB::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::HOSTRESOURCESMIB::Component::MemSubsystem");
  } elsif ($self->mode =~ /device::ha::/) {
    $self->analyze_and_check_ha_subsystem("Classes::PaloAlto::Component::HaSubsystem");
  } else {
    $self->no_such_mode();
  }
}

sub pretty_sysdesc {
  my ($self, $sysDescr) = @_;
  my $sw_version = $self->get_snmp_object('PAN-COMMON-MIB', 'panSysSwVersion');
  my $hw_version = $self->get_snmp_object('PAN-COMMON-MIB', 'panSysHwVersion');
  return sprintf "%s, sw version %s, hw version: %s",
      $sysDescr, $sw_version, $hw_version;
}
package Classes::Bluecoat;
our @ISA = qw(Classes::Device);
use strict;


sub init {
  my ($self) = @_;
  if ($self->{productname} =~ /Blue.*Coat.*(SG\d+|SGOS|ASG)/i) {
    # product ProxySG  Blue Coat SG600
    # iso.3.6.1.4.1.3417.2.11.1.3.0 = STRING: "Version: SGOS 5.5.8.1, Release id: 78642 Proxy Edition"
    bless $self, 'Classes::SGOS';
    $self->debug('using Classes::SGOS');
  } elsif ($self->{productname} =~ /Blue.*Coat.*AV\d+/i) {
    # product Blue Coat AV510 Series, ProxyAV Version: 3.5.1.1, Release id: 111017
    bless $self, 'Classes::AVOS';
    $self->debug('using Classes::AVOS');
  }
  if (ref($self) ne "Classes::Bluecoat") {
    $self->init();
  } else {
    $self->no_such_mode();
  }
}

package Classes::Cumulus;
our @ISA = qw(Classes::Device);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    #$self->get_snmp_tables("UCD-DISKIO-MIB", [
    #    ['diskios', 'diskIOTable', 'Monitoring::GLPlugin::SNMP::TableItem'],
    #]);
    $self->override_opt('warningx', { 'temp_.*' => '68'});
    $self->analyze_and_check_environmental_subsystem("Classes::LMSENSORSMIB::Component::EnvironmentalSubsystem");
$self->analyze_and_check_environmental_subsystem("Classes::ENTITYSENSORMIB::Component::EnvironmentalSubsystem");

    $self->{components}->{environmental_subsystem} = Classes::HOSTRESOURCESMIB::Component::EnvironmentalSubsystem->new();
    @{$self->{components}->{environmental_subsystem}->{disk_subsystem}->{storages}} = grep {
      $_->{hrStorageDescr} ne '/mnt/root-ro';
    } @{$self->{components}->{environmental_subsystem}->{disk_subsystem}->{storages}} ;
    @{$self->{components}->{environmental_subsystem}->{device_subsystem}->{devices}} = grep {
      $_->{hrDeviceType} ne 'hrDeviceNetwork';
    } @{$self->{components}->{environmental_subsystem}->{device_subsystem}->{devices}} ;
    $self->{components}->{environmental_subsystem}->check();
    $self->{components}->{environmental_subsystem}->dump()
        if $self->opts->verbose >= 2;
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::HOSTRESOURCESMIB::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::HOSTRESOURCESMIB::Component::MemSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::Eltex::Access::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('ELTEX-MIB', [
      ['fans', 'eltexFanTable', 'Classes::Eltex::Access::Component::EnvironmentalSubsystem::Fan'],
      ['temperatures', 'eltexSensorTable', 'Classes::Eltex::Access::Component::EnvironmentalSubsystem::Temperature']
  ]);
}

sub check {
  my ($self) = @_;
  foreach (@{$self->{fans}}, @{$self->{temperatures}}) {
    $_->check();
  }
}
package Classes::Eltex::Access::Component::EnvironmentalSubsystem::Fan;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf '%s is %s',
    $self->{eltexFanDescription}, $self->{eltexFanStatus});
  if ($self->{eltexFanStatus} eq 'normal') {
    $self->add_ok();
  } elsif ($self->{eltexFanStatus} eq 'notPresent') {
    $self->add_warning();
  } elsif ($self->{eltexFanStatus} eq 'unknown') {
    $self->add(); # Actually fan is not present on device, but in index...
  }
}

package Classes::Eltex::Access::Component::EnvironmentalSubsystem::Temperature;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'sensor %s is %s°C',
    $self->{eltexSensorDescription}, $self->{eltexSensorStatus});
  $self->set_thresholds(warning => 55, critical => 65);
  $self->add_message($self->check_thresholds($self->{eltexSensorStatus}));
  $self->add_perfdata(
    label => 'sensor_'.$self->{eltexSensorDescription}.'_temp',
    value => $self->{eltexSensorStatus},
    uom => '°C',
  );
}
package Classes::Eltex::Access;
our @ISA = qw(Classes::Eltex);
use strict;

# MES2100: 1 PSU, no FAN
# MES2124P: 1 PSU, 2 FAN
# MES2308: 1 PSU, no FAN
# MES2324: 1 PSU, no FAN
# MES2326: 1 PSU, no FAN
# MES2348: 1 PSU, 2 FAN

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem('Classes::Eltex::MES::Component::CpuSubsystem');
  } elsif ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem('Classes::Eltex::Access::Component::EnvironmentalSubsystem');
    if (! $self->check_messages()) {
      $self->clear_messages(0);
      $self->add_ok('environmental hardware working fine');
    }
  } elsif ($self->mode =~ /device::ha::status/) {
    $self->analyze_and_check_ha_subsystem('Classes::Eltex::MES::Component::HaSubsystem');
  } else {
    $self->no_such_mode();
  }
}
package Classes::Eltex::Aggregation::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('ELTEX-MIB', [
      ['fans', 'eltexFanTable', 'Classes::Eltex::Aggregation::Component::EnvironmentalSubsystem::Fan'],
      ['temperatures', 'eltexSensorTable', 'Classes::Eltex::Aggregation::Component::EnvironmentalSubsystem::Temperature'],
      ['power', 'eltexPowerSupplyTable', 'Classes::Eltex::Aggregation::Component::EnvironmentalSubsystem::Power'],
  ]);
}

sub check {
  my ($self) = @_;
  foreach (@{$self->{fans}}, @{$self->{temperatures}}, @{$self->{power}}) {
    $_->check();
  }
}

package Classes::Eltex::Aggregation::Component::EnvironmentalSubsystem::Fan;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf '%s is %s',
    $self->{eltexFanDescription}, $self->{eltexFanStatus});
  if ($self->{eltexFanStatus} eq 'normal') {
    $self->add_ok();
  } elsif ($self->{eltexFanStatus} eq 'notPresent') {
    $self->add_warning();
  }
}

package Classes::Eltex::Aggregation::Component::EnvironmentalSubsystem::Temperature;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  # Perform check only if this is temp sensor
  if ($self->{eltexSensorType} eq '°C') {
    $self->add_info(sprintf 'sensor %s is %s %s', $self->{eltexSensorDescription},
      $self->{eltexSensorStatus}, $self->{eltexSensorType});
    $self->set_thresholds(warning => 55, critical => 65);
    $self->add_message($self->check_thresholds($self->{eltexSensorStatus}));
    $self->add_perfdata(
      label => 'sensor_'.$self->{eltexSensorDescription}.'_temp',
      value => $self->{eltexSensorStatus},
      uom => $self->{eltexSensorType},
    );
  }
  # Avoid fan rpm
  elsif ($self->{eltexSensorType} eq 'rpm') {
    $self->blacklist();
  }
}

package Classes::Eltex::Aggregation::Component::EnvironmentalSubsystem::Power;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf '%s is %s',
    $self->{eltexPowerSupplyDescription}, $self->{eltexPowerSupplyStatus});
  if ($self->{eltexPowerSupplyStatus} eq 'normal') {
    $self->add_ok();
  } elsif ($self->{eltexPowerSupplyStatus} eq 'notPresent') {
    $self->add_warning();
  } elsif ($self->{eltexPowerSupplyStatus} eq 'notFunctioning') {
    $self->add_critical();
  }
}
package Classes::Eltex::Aggregation;
our @ISA = qw(Classes::Eltex);
use strict;

# MES2324B: 2 PSU, no FAN
# MES2324F, MES2324FB: 2 PSU, 4 FAN
# MES3108, MES3116, MES3124, MES3224: 2 PSU, 4 FAN
# MES5324: 2 PSU, 4 FAN

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem('Classes::Eltex::MES::Component::CpuSubsystem');
  } elsif ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem('Classes::Eltex::Aggregation::Component::EnvironmentalSubsystem');
    if (! $self->check_messages()) {
      $self->clear_messages(0);
      $self->add_ok('environmental hardware working fine');
    }
  } elsif ($self->mode =~ /device::ha::status/) {
    $self->analyze_and_check_ha_subsystem('Classes::Eltex::MES::Component::HaSubsystem');
  } else {
    $self->no_such_mode();
  }
}
package Classes::Eltex::MES::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('ELTEX-MIB', (qw(
      eltexCpuUtilisationLastSecond eltexCpuUtilisationOneMinute
      eltexCpuUtilisationFiveMinutes)));
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'cpu usage is %s%%',
    $self->{eltexCpuUtilisationLastSecond});
  $self->set_thresholds(warning => 50, critical => 90);
  $self->add_message($self->check_thresholds(
    $self->{eltexCpuUtilisationLastSecond}));
  $self->add_perfdata(
    label => 'cpu_usage',
    value => $self->{eltexCpuUtilisationLastSecond},
    uom => '%',
  );
  $self->add_perfdata(
    label => 'cpu_usage_one_minute',
    value => $self->{eltexCpuUtilisationOneMinute},
    uom => '%',
  );
  $self->add_perfdata(
    label => 'cpu_usage_five_minutes',
    value => $self->{eltexCpuUtilisationFiveMinutes},
    uom => '%',
  );
}
package Classes::Eltex::MES::Component::HaSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('ELTEX-MIB', (qw(eltexStackUnitsNumber)));
}

# Specify threshold values, so that you understand when the number of units
# decreases, for example we have only 2 units in stack, so we should get
# warning state if one of unit goes down:
# ./check_nwc_health --hostname 10.10.10.2 --mode ha-status --warning 2:
# OK - stack have 2 units | 'units'=2;2:;0:;;
# and when only one unit left:
# WARNING - stack have 1 units | 'units'=1;2:;0:;;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'stack have %s units',
    $self->{eltexStackUnitsNumber});
  $self->set_thresholds(warning => '0:', critical => '0:');
  $self->add_message($self->check_thresholds(
    $self->{eltexStackUnitsNumber}));
  $self->add_perfdata(
    label => 'units',
    value => $self->{eltexStackUnitsNumber},
  );
}
package Classes::Eltex;
our @ISA = qw(Classes::Device);
use strict;

sub init {
  my ($self) = @_;
  if ($self->{productname} =~ /(MES2324B)|(MES2324F)|(MES31)|(MES53)/i) {
    bless $self, 'Classes::Eltex::Aggregation';
    $self->debug('using Classes::Eltex::Aggregation');
  } elsif ($self->{productname} =~ /(MES21)|(MES23)/i) {
    bless $self, 'Classes::Eltex::Access';
    $self->debug('using Classes::Eltex::Access');
  }
  if (ref($self) ne "Classes::Eltex") {
    $self->init();
  } else {
    $self->no_such_mode();
  }
}
package Classes::Netgear;
our @ISA = qw(Classes::Device);
use strict;


sub init {
  my ($self) = @_;
  # netgear does not publish mibs
  $self->no_such_mode();
}

sub pretty_sysdesc {
  my ($self, $sysDescr) = @_;
  if ($sysDescr =~ /GS\d+TP/) {
    return 'Netgear '.$sysDescr;
  }
}
package Classes::Lantronix;
our @ISA = qw(Classes::Device);
use strict;
package Classes::Lantronix::SLS;
our @ISA = qw(Classes::Lantronix);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::Lantronix::SLS::Component::EnvironmentalSubsystem");
  } else {
    $self->no_such_mode();
  }
}


package Classes::Lantronix::SLS::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('LARA-MIB', qw(checkHostPower));
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'host power status is %s', $self->{checkHostPower});
  if ($self->{checkHostPower} eq 'hasPower') {
    $self->add_ok();
  } else {
    $self->add_critical();
  }
}

package Classes::Arista::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('ENTITY-MIB', [
    ['entities', 'entPhysicalTable',
      'Classes::Arista::Component::EnvironmentalSubsystem::Entity',
      undef,
      ['entPhysicalClass', 'entPhysicalDescr', 'entPhysicalName']
    ],
  ]);
  $self->get_snmp_tables('ENTITY-SENSOR-MIB', [
    ['sensorvalues', 'entPhySensorTable', 'Monitoring::GLPlugin::SNMP::TableItem'],
  ]);
  $self->get_snmp_tables('ENTITY-STATE-MIB', [
    ['sensorstates', 'entStateTable', 'Monitoring::GLPlugin::SNMP::TableItem'],
  ]);
  $self->get_snmp_tables('ARISTA-ENTITY-SENSOR-MIB', [
    ['sensorthresholds', 'aristaEntSensorThresholdTable', 'Monitoring::GLPlugin::SNMP::TableItem'],
  ]);
  $self->merge_tables("entities", "sensorvalues", "sensorstates", "sensorthresholds");
  foreach (@{$self->{entities}}) {
    $_->rebless();
    $_->finish() if $_->can('finish');
  }
  @{$self->{entities}} = grep {
    ! exists $_->{valid} || $_->{valid};
  } @{$self->{entities}};
}

package Classes::Arista::Component::EnvironmentalSubsystem::Entity;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;


sub rebless {
  my ($self) = @_;
  bless $self,
      'Classes::Arista::Component::EnvironmentalSubsystem::Chassis' if
      $self->{entPhysicalClass} eq 'chassis';
  bless $self,
      'Classes::Arista::Component::EnvironmentalSubsystem::Container' if
      $self->{entPhysicalClass} eq 'container';
  bless $self,
      'Classes::Arista::Component::EnvironmentalSubsystem::Fan' if
      $self->{entPhysicalClass} eq 'fan';
  bless $self,
      'Classes::Arista::Component::EnvironmentalSubsystem::Module' if
      $self->{entPhysicalClass} eq 'module';
  bless $self,
      'Classes::Arista::Component::EnvironmentalSubsystem::Port' if
      $self->{entPhysicalClass} eq 'port';
  bless $self,
      'Classes::Arista::Component::EnvironmentalSubsystem::Powersupply' if
      $self->{entPhysicalClass} eq 'powerSupply';
  bless $self,
      'Classes::Arista::Component::EnvironmentalSubsystem::Sensor' if
      $self->{entPhysicalClass} eq 'sensor';
}

sub check_state {
  my ($self) = @_;
  $self->add_info(sprintf "%s is %s (admin %s, oper %s)",
      $self->{entPhysicalDescr}, $self->{entStateUsage},
      $self->{entStateAdmin}, $self->{entStateOper});
  if ($self->{entStateAdmin} eq "unlocked") {
    if ($self->{entStateOper} eq "enabled") {
      if ($self->{entStateUsage} eq "idle") {
        $self->add_ok();
      } elsif ($self->{entStateUsage} eq "active") {
        $self->add_ok();
      } elsif ($self->{entStateUsage} eq "busy") {
        $self->add_warning();
      } else {
        $self->add_unknown();
      }
    } elsif ($self->{entStateOper} eq "disabled") {
      $self->add_critical();
    } else {
      $self->add_unknown();
    }
  } else {
    $self->add_ok(); # admin disabled, ignore
  }
}

package Classes::Arista::Component::EnvironmentalSubsystem::Chassis;
our @ISA = qw(Classes::Arista::Component::EnvironmentalSubsystem::Entity);
use strict;

package Classes::Arista::Component::EnvironmentalSubsystem::Container;
our @ISA = qw(Classes::Arista::Component::EnvironmentalSubsystem::Entity);
use strict;

package Classes::Arista::Component::EnvironmentalSubsystem::Fan;
our @ISA = qw(Classes::Arista::Component::EnvironmentalSubsystem::Entity);
use strict;

sub check {
  my ($self) = @_;
  $self->check_state();
}

package Classes::Arista::Component::EnvironmentalSubsystem::Module;
our @ISA = qw(Classes::Arista::Component::EnvironmentalSubsystem::Entity);
use strict;

package Classes::Arista::Component::EnvironmentalSubsystem::Port;
our @ISA = qw(Classes::Arista::Component::EnvironmentalSubsystem::Entity);
use strict;

package Classes::Arista::Component::EnvironmentalSubsystem::Powersupply;
our @ISA = qw(Classes::Arista::Component::EnvironmentalSubsystem::Entity);
use strict;

sub check {
  my ($self) = @_;
  $self->check_state();
}

package Classes::Arista::Component::EnvironmentalSubsystem::Sensor;
our @ISA = qw(Classes::Arista::Component::EnvironmentalSubsystem::Entity);
use strict;

sub finish {
  my ($self) = @_;
  
  $self->{valid} = ($self->{entPhySensorValue} == -1000000000 || $self->{entPhySensorValue} == 1000000000)
      ? 0 : 1;
  foreach (qw(entPhySensorValue
      aristaEntSensorThresholdLowWarning aristaEntSensorThresholdHighWarning
      aristaEntSensorThresholdLowCritical aristaEntSensorThresholdHighCritical)) {
    delete $self->{$_} if defined $self->{$_} && $_ ne 'entPhySensorValue' &&
        ($self->{$_} == -1000000000 || $self->{$_} == 1000000000);
    if ($self->{entPhySensorPrecision} && $self->{$_}) {
      $self->{$_} /= 10 ** $self->{entPhySensorPrecision};
    }
  }
}

sub check {
  my ($self) = @_;
  $self->check_state();
  my ($warn, $crit) = (undef, undef);
  if ($self->{aristaEntSensorStatusDescr} =~ /no thresholds/i) {
  } else {
    $warn =
        ($self->{aristaEntSensorThresholdLowWarning} ?
        $self->{aristaEntSensorThresholdLowWarning} : '').':'.
        ($self->{aristaEntSensorThresholdHighWarning} ?
        $self->{aristaEntSensorThresholdHighWarning} : '');
    $crit =
        ($self->{aristaEntSensorThresholdLowCritical} ?
        $self->{aristaEntSensorThresholdLowCritical} : '').':'.
        ($self->{aristaEntSensorThresholdHighCritical} ?
        $self->{aristaEntSensorThresholdHighCritical} : '');
    $warn = undef if $warn eq ':';
    $crit = undef if $crit eq ':';
  }
  $self->add_thresholds(metric => $self->{entPhysicalDescr}.'_'.$self->{entPhySensorUnitsDisplay},
      warning => $warn, critical => $crit);
  $self->add_perfdata(
      label => $self->{entPhysicalDescr}.'_'.$self->{entPhySensorUnitsDisplay},
      value => $self->{entPhySensorValue},
      warning => $warn, critical => $crit,
  );
}


package Classes::Arista;
our @ISA = qw(Classes::Device);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->mult_snmp_max_msg_size(10);
    $self->analyze_and_check_environmental_subsystem("Classes::Arista::Component::EnvironmentalSubsystem");
    if (! $self->check_messages()) {
      $self->clear_messages(0);
      $self->add_ok("environmental hardware working fine");
    }
  } elsif ($self->mode =~ /device::hardware::load/) {
    # CPU util on management plane
    # Utilization of CPUs on dataplane that are used for system functions
    $self->analyze_and_check_cpu_subsystem("Classes::HOSTRESOURCESMIB::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::HOSTRESOURCESMIB::Component::MemSubsystem");
  } elsif ($self->mode =~ /device::ha::/) {
    $self->analyze_and_check_ha_subsystem("Classes::Arista::Component::HaSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::Riverbed::SteelheadEX::Component::EnvironmentalSubsystem;
our @ISA = qw(Classes::Riverbed::Steelhead::Component::EnvironmentalSubsystem);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('STEELHEAD-EX-MIB', qw(
    serviceStatus serialNumber systemVersion model
    serviceStatus systemHealth optServiceStatus systemTemperature
    healthNotes
  ));
}

package Classes::Riverbed::Steelhead::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('STEELHEAD-MIB', qw(
    serviceStatus serialNumber systemVersion model
    serviceStatus systemHealth optServiceStatus systemTemperature
    healthNotes
  ));
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'health state is %s', $self->{systemHealth});
  if ($self->{systemHealth} eq 'healthy') {
      $self->add_ok();
  } elsif ($self->{systemHealth} eq 'critical') {
      $self->add_critical();
      $self->add_critical($self->{healthNotes}) if $self->{healthNotes};
  } else {
      $self->add_warning();
      $self->add_warning($self->{healthNotes}) if $self->{healthNotes};
  }
  $self->add_ok(sprintf 'temperature is %.2fC',
      $self->{systemTemperature});
  $self->add_perfdata(
      label => 'temperature',
      value => $self->{systemTemperature},
  );
}

package Classes::Riverbed::Steelhead;
our @ISA = qw(Classes::Device);
use strict;


sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::Riverbed::Steelhead::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::Server::Linux::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::disk::usage/) {
    $self->analyze_and_check_disk_subsystem("Classes::UCDMIB::Component::DiskSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::Server::Linux::Component::MemSubsystem");
  } elsif ($self->mode =~ /device::process::status/) {
    $self->analyze_and_check_process_subsystem("Classes::UCDMIB::Component::ProcessSubsystem");
  } elsif ($self->mode =~ /device::uptime/) {
    $self->analyze_and_check_uptime_subsystem("Classes::HOSTRESOURCESMIB::Component::UptimeSubsystem");
  } else {
    $self->no_such_mode();
  }
}


package Classes::Riverbed::SteelheadEX;
our @ISA = qw(Classes::Riverbed::Steelhead);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::Riverbed::SteelheadEX::Component::EnvironmentalSubsystem");
  } else {
    $self->SUPER::init();
  }
}

package Classes::Riverbed;
our @ISA = qw(Classes::Device);
use strict;

sub init {
  my ($self) = @_;
  if ($self->implements_mib('STEELHEAD-MIB')) {
    bless $self, 'Classes::Riverbed::Steelhead';
    $self->debug('using Classes::Riverbed::Steelhead');
  } elsif ($self->implements_mib('STEELHEAD-EX-MIB')) {
    bless $self, 'Classes::Riverbed::SteelheadEX';
    $self->debug('using Classes::Riverbed::SteelheadEX');
  }
  if (ref($self) ne "Classes::Riverbed") {
    $self->init();
  } else {
    $self->no_such_mode();
  }
}

package Classes::Lancom::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('LCOS-MIB', (qw(
      lcsStatusHardwareInfoCpuLoadPercent)));
}

sub check {
  my ($self) = @_;
  $self->add_info('checking cpus');
  $self->add_info(sprintf 'cpu usage is %.2f%%',
      $self->{lcsStatusHardwareInfoCpuLoadPercent});
  $self->set_thresholds(
      metric => 'cpu_usage',
      warning => 80,
      critical => 90,
  );
  $self->add_message($self->check_thresholds(
      metric => 'cpu_usage',
      value => $self->{lcsStatusHardwareInfoCpuLoadPercent},
  ));
  $self->add_perfdata(
      label => 'cpu_usage',
      value => $self->{lcsStatusHardwareInfoCpuLoadPercent},
      uom => '%',
  );
}

package Classes::Lancom::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('LCOS-MIB', (qw(
      lcsStatusHardwareInfoTemperatureDegrees)));
}

sub check {
  my ($self) = @_;
  $self->add_info('checking temperature');
  $self->add_info(sprintf 'temperature is is %.2f',
      $self->{lcsStatusHardwareInfoTemperatureDegrees});
  $self->set_thresholds(
      metric => 'temperature',
      warning => 80,
      critical => 90,
  );
  $self->add_message($self->check_thresholds(
      metric => 'temperature',
      value => $self->{lcsStatusHardwareInfoTemperatureDegrees},
  ));
  $self->add_perfdata(
      label => 'temperature',
      value => $self->{lcsStatusHardwareInfoTemperatureDegrees},
  );
}

package Classes::Lancom::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_objects('LCOS-MIB', (qw(
      lcsStatusHardwareInfoTotalMemoryKbytes
      lcsStatusHardwareInfoFreeMemoryKbytes
  )));
  $self->{used} = $self->{lcsStatusHardwareInfoTotalMemoryKbytes} -
      $self->{lcsStatusHardwareInfoFreeMemoryKbytes};
  $self->{usage} = 100 * $self->{used} /
      $self->{lcsStatusHardwareInfoTotalMemoryKbytes};
}

sub check {
  my ($self) = @_;
  $self->add_info('checking memory');
  $self->add_info(sprintf 'memory usage is %.2f%%',
      $self->{usage});
  $self->set_thresholds(metric => 'memory_usage',
      warning => 80, critical => 90,
  );
  $self->add_message($self->check_thresholds(
      metric => 'memory_usage',
      value => $self->{usage},
  ));
  $self->add_perfdata(
      label => 'memory_usage',
      value => $self->{usage},
      uom => '%',
  );
}

package Classes::Lancom;
our @ISA = qw(Classes::Device);
use strict;

sub init {
  my ($self) = @_;
  $self->bulk_is_baeh();
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::Lancom::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::Lancom::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::Lancom::Component::MemSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::DrayTek::Vigor::Component::CpuSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  my $sysdescr = $self->get_snmp_object('MIB-2-MIB', 'sysDescr', 0);
  if ($sysdescr =~ /CPU Usage:\s*([\d\.])+%/i) {
    $self->{cpu_usage} = $1;
  } else {
    $self->no_such_mode();
  }
}

sub check {
  my ($self) = @_;
  $self->add_info('checking cpu');
  $self->add_info(sprintf 'cpu usage is %.2f%%', $self->{cpu_usage});
  $self->set_thresholds(warning => 80, critical => 90);
  $self->add_message($self->check_thresholds($self->{cpu_usage}));
  $self->add_perfdata(
      label => 'cpu_usage',
      value => $self->{cpu_usage},
      uom => '%',
  );
}

package Classes::DrayTek::Vigor::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;
use Data::Dumper;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('ADSL-LINE-MIB', [
      ['lines', 'adslAturPhysTable', 'Classes::DrayTek::Vigor::Component::AdslLine'],
  ]);
}


package Classes::DrayTek::Vigor::Component::AdslLine;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  if ($self->{adslAturCurrStatus}) {
    chomp $self->{adslAturCurrStatus};
    $self->{adslAturCurrStatus} =~ s/\x00+$//;
  }
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'adsl line %s has status %s', 
      $self->{flat_indices}, $self->{adslAturCurrStatus});
  if ($self->{adslAturCurrStatus} ne "SHOWTIME") {
    $self->add_critical();
  } else {
    $self->add_ok();
  }
}

package Classes::DrayTek::Vigor::Component::MemSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  my $sysdescr = $self->get_snmp_object('MIB-2-MIB', 'sysDescr', 0);
  if ($sysdescr =~ /Memory Usage:\s*([\d\.])+%/i) {
    $self->{mem_usage} = $1;
  } else {
    $self->no_such_mode();
  }
}

sub check {
  my ($self) = @_;
  $self->add_info('checking mem');
  $self->add_info(sprintf 'memory usage is %.2f%%', $self->{mem_usage});
  $self->set_thresholds(warning => 90, critical => 95);
  $self->add_message($self->check_thresholds($self->{mem_usage}));
  $self->add_perfdata(
      label => 'mem_usage',
      value => $self->{mem_usage},
      uom => '%',
  );
}

package Classes::DrayTek::Vigor;
our @ISA = qw(Classes::DrayTek);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::DrayTek::Vigor::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::DrayTek::Vigor::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::DrayTek::Vigor::Component::MemSubsystem");
  } else {
    $self->no_such_mode();
  }
}

package Classes::DrayTek;
our @ISA = qw(Classes::Device);
use strict;


sub init {
  my ($self) = @_;
  if ($self->{productname} =~ /Vigor/i) {
    bless $self, 'Classes::DrayTek::Vigor';
    $self->debug('using Classes::DrayTek::Vigor');
  }
  if (ref($self) ne "Classes::DrayTek") {
    $self->init();
  } else {
    $self->no_such_device();
  }
}

sub pretty_sysdesc {
  my ($self, $sysDescr) = @_;
  if ($sysDescr =~ /DrayTek.*Vigor(\d+).*(Version: .*?)[ ,]/) {
    return 'DrayTek Vigor '.$1.' '.$2;
  }
}

package Classes::Barracuda::Component::EnvironmentalSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  $self->get_snmp_tables('PHION-MIB', [
      ['sensors', 'hwSensorsTable', 'Classes::Barracuda::Component::EnvironmentalSubsystem::Sensor'],
      ['partitions', 'diskSpaceTable', 'Classes::Barracuda::Component::EnvironmentalSubsystem::Partition'],
      ['raidevents', 'raidEventsTable', 'Classes::Barracuda::Component::EnvironmentalSubsystem::RaidEvent'],
  ]);
}


package Classes::Barracuda::Component::EnvironmentalSubsystem::Sensor;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  if ($self->{hwSensorType} eq "temperature") {
    bless $self, "Classes::Barracuda::Component::EnvironmentalSubsystem::Sensor::Temp";
    $self->finish();
  } elsif ($self->{hwSensorType} eq "psu-status") {
    bless $self, "Classes::Barracuda::Component::EnvironmentalSubsystem::Sensor::PS";
    $self->finish();
  } elsif ($self->{hwSensorType} eq "fan") {
    bless $self, "Classes::Barracuda::Component::EnvironmentalSubsystem::Sensor::Fan";
    $self->finish();
  }
}

package Classes::Barracuda::Component::EnvironmentalSubsystem::Sensor::PS;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{hwSensorValue} = ($self->{hwSensorValue} == 1) ? "ok" : "failed";
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf '%s status is %s',
      $self->{hwSensorName}, $self->{hwSensorValue});
  if ($self->{hwSensorValue} eq "ok") {
    $self->add_ok();
  } else {
    $self->add_critical();
  }
}

package Classes::Barracuda::Component::EnvironmentalSubsystem::Sensor::Temp;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{hwSensorValue} /= 1000;
  $self->{name} = $self->{hwSensorName} =~ /temperature/i ?
      $self->{hwSensorName} : $self->{hwSensorName}." Temperature";
  $self->{label} = lc $self->{hwSensorName};
  $self->{label} =~ s/Temperature//gi;
  $self->{label} =~ s/^\s+//g;
  $self->{label} =~ s/\s+$//g;
  $self->{label} =~ s/\s+/_/g;
  $self->{label} = "temp_".$self->{label};
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf '%s temperature is %.2fC',
      $self->{hwSensorName}, $self->{hwSensorValue});
  $self->set_thresholds(metric => $self->{label},
      warning => 50, critical => 60
  );
  $self->add_message($self->check_thresholds(
      metric => $self->{label},
      value => $self->{hwSensorValue},
  ));
  $self->add_perfdata(
      label => $self->{label},
      value => $self->{hwSensorValue},
  );
}

package Classes::Barracuda::Component::EnvironmentalSubsystem::Sensor::Fan;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{name} = $self->{hwSensorName} =~ /fan/i ?
      $self->{hwSensorName} : $self->{hwSensorName}." Fan";
  $self->{label} = lc $self->{hwSensorName};
  $self->{label} =~ s/Fan//gi;
  $self->{label} =~ s/^\s+//g;
  $self->{label} =~ s/\s+$//g;
  $self->{label} =~ s/\s+/_/g;
  $self->{label} = "fan_".$self->{label};
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf '%s rpm is %.2f',
      $self->{hwSensorName}, $self->{hwSensorValue});
  $self->set_thresholds(metric => $self->{label},
      warning => "1000:5500", critical => "100:6000",
  );
  $self->add_message($self->check_thresholds(
      metric => $self->{label},
      value => $self->{hwSensorValue},
  ));
  $self->add_perfdata(
      label => $self->{label},
      value => $self->{hwSensorValue},
  );
}

package Classes::Barracuda::Component::EnvironmentalSubsystem::Partition;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub finish {
  my ($self) = @_;
  $self->{label} = (lc $self->{partitionName})."_usage";
}

sub check {
  my ($self) = @_;
  $self->add_info(sprintf "partition %s usage is %.2f%%",
      $self->{partitionName},
      $self->{partitionUsedSpacePercent}
  );
  $self->set_thresholds(metric => $self->{label},
      warning => 80, critical => 90
  );
  $self->add_message($self->check_thresholds(
      metric => $self->{label},
      value => $self->{partitionUsedSpacePercent},
  ));
  $self->add_perfdata(
      label => $self->{label},
      value => $self->{partitionUsedSpacePercent},
      uom => "%",
  );
}


package Classes::Barracuda::Component::EnvironmentalSubsystem::RaidEvent;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->add_info(sprintf 'level %s raid event: %s at %s',
      $self->{raidEventSev}, $self->{raidEventText}, $self->{raidEventTime});
  if ($self->{raidEventSev} eq "error") {
    $self->add_critical();
  } elsif ($self->{raidEventSev} eq "warning") {
    $self->add_warning();
  } elsif ($self->{raidEventSev} eq "unknown") {
    $self->add_warning();
  } else {
    $self->add_ok();
  }
}
package Classes::Barracuda::Component::HaSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;
use constant { OK => 0, WARNING => 1, CRITICAL => 2, UNKNOWN => 3 };

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::ha::role/) {
    $self->get_snmp_tables('PHION-MIB', [
      ['services', 'serverServicesTable', 'Classes::Barracuda::Component::HaSubsystem::Service'],
    ]);
    if (! $self->opts->role()) {
      $self->opts->override_opt('role', 'active');
    }
  }
}

sub check {
  my ($self) = @_;
  $self->SUPER::check();
  printf "info %s\n", $self->get_info();
  if (! grep { $_->{serverServiceName} eq "SE1FWEXT_FWEXT" }
      @{$self->{services}}) {
    $self->add_unknown("no service SE1FWEXT_FWEXT found");
  } else {
	  printf "troet\n";
	  }
}


package Classes::Barracuda::Component::HaSubsystem::Service;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  if ($self->mode =~ /device::ha::role/) {
    if ($self->{serverServiceName} eq "SE1FWEXT_FWEXT") {
      $self->add_info(sprintf "%s node, service %s is %s",
          $self->opts->role(), $self->{serverServiceName},
	  $self->{serverServiceState});
      if ($self->opts->role() eq "active") {
        if ($self->{serverServiceState} eq "started") {
	  $self->add_ok();
	} elsif ($self->{serverServiceState} eq "stopped") {
	  $self->add_warning();
	} elsif ($self->{serverServiceState} eq "blocked") {
	  $self->add_critical();
	} else {
	  $self->add_unknown();
	}
      } else {
        if ($self->{serverServiceState} eq "stopped") {
	  $self->add_ok();
	} elsif ($self->{serverServiceState} eq "started") {
	  $self->add_warning();
	} elsif ($self->{serverServiceState} eq "blocked") {
	  $self->add_critical();
	} else {
	  $self->add_unknown();
	}
      }
    }
  }
}
package Classes::Barracuda::Component::FwSubsystem;
our @ISA = qw(Monitoring::GLPlugin::SNMP::Item);
use strict;

sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::fw::policy::connections/) {
    $self->get_snmp_tables('PHION-MIB', [
      ['fwstats', 'fwStatsTable', 'Classes::Barracuda::Component::FwSubsystem::FWStat'],
    ]);
    $self->get_snmp_objects('PHION-MIB', qw(vpnUsers));
  }
}


package Classes::Barracuda::Component::FwSubsystem::FWStat;
our @ISA = qw(Monitoring::GLPlugin::SNMP::TableItem);
use strict;

sub check {
  my ($self) = @_;
  $self->set_thresholds(warning => 300000, critical => 400000);
  $self->add_message($self->check_thresholds($self->{firewallSessions64}),
      sprintf 'fw has %s open sessions', $self->{firewallSessions64});
  $self->add_perfdata(
      label => 'fw_sessions',
      value => $self->{firewallSessions64},
  );
}

package Classes::Barracuda;
our @ISA = qw(Classes::Device);
use strict;


sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::hardware::health/) {
    $self->analyze_and_check_environmental_subsystem("Classes::Barracuda::Component::EnvironmentalSubsystem");
  } elsif ($self->mode =~ /device::hardware::load/) {
    $self->analyze_and_check_cpu_subsystem("Classes::UCDMIB::Component::CpuSubsystem");
  } elsif ($self->mode =~ /device::hardware::memory/) {
    $self->analyze_and_check_mem_subsystem("Classes::UCDMIB::Component::MemSubsystem");
  } elsif ($self->mode =~ /device::fw::policy::connections/) {
    $self->analyze_and_check_fw_subsystem("Classes::Barracuda::Component::FwSubsystem");
  } elsif ($self->mode =~ /device::ha::/) {
    $self->analyze_and_check_fw_subsystem("Classes::Barracuda::Component::HaSubsystem");
  } else {
    # Merkwuerdigerweise gibts ohne das hier einen Timeout bei
    # IP-FORWARD-MIB::inetCidrRouteTable und den route-Modi
    $self->mult_snmp_max_msg_size(5);
    $self->no_such_mode();
  }
}
package Classes::Device;
our @ISA = qw(Monitoring::GLPlugin::SNMP Monitoring::GLPlugin::UPNP);
use strict;

sub classify {
  my ($self) = @_;
  if (! ($self->opts->hostname || $self->opts->snmpwalk)) {
    $self->add_unknown('either specify a hostname or a snmpwalk file');
  } else {
    if ($self->opts->servertype && $self->opts->servertype eq 'linuxlocal') {
    } elsif ($self->opts->servertype && $self->opts->servertype eq 'windowslocal') {
      eval "require DBD::WMI";
      if ($@) {
        $self->add_unknown("module DBD::WMI is not installed");
      }
    } elsif ($self->opts->servertype && $self->opts->servertype eq 'solarislocal') {
      eval "require Sun::Solaris::Kstat";
      if ($@) {
        $self->add_unknown("module Sun::Solaris::Kstat is not installed");
      }
    } elsif ($self->opts->port && $self->opts->port == 49000) {
      $self->{productname} = 'upnp';
      $self->check_upnp_and_model();
    } else {
      $self->check_snmp_and_model();
    }
    if ($self->opts->servertype) {
      $self->{productname} = $self->opts->servertype;
      $self->{productname} = 'cisco' if $self->opts->servertype eq 'cisco';
      $self->{productname} = 'huawei' if $self->opts->servertype eq 'huawei';
      $self->{productname} = 'hh3c' if $self->opts->servertype eq 'hh3c';
      $self->{productname} = 'hp' if $self->opts->servertype eq 'hp';
      $self->{productname} = 'brocade' if $self->opts->servertype eq 'brocade';
      $self->{productname} = 'eltex' if $self->opts->servertype eq 'eltex';
      $self->{productname} = 'netscreen' if $self->opts->servertype eq 'netscreen';
      $self->{productname} = 'junos' if $self->opts->servertype eq 'junos';
      $self->{productname} = 'linuxlocal' if $self->opts->servertype eq 'linuxlocal';
      $self->{productname} = 'procurve' if $self->opts->servertype eq 'procurve';
      $self->{productname} = 'bluecoat' if $self->opts->servertype eq 'bluecoat';
      $self->{productname} = 'checkpoint' if $self->opts->servertype eq 'checkpoint';
      $self->{productname} = 'clavister' if $self->opts->servertype eq 'clavister';
      $self->{productname} = 'ifmib' if $self->opts->servertype eq 'ifmib';
      $self->{productname} = 'generic_hostresources' if $self->opts->servertype eq 'generic_hostresources';
      $self->{productname} = 'generic_ucd' if $self->opts->servertype eq 'generic_ucd';
    }
    if ($self->opts->mode eq "uptime" && $self->opts->mode eq "short") {
      return $self;
    } elsif (! $self->check_messages()) {
      $self->debug("I am a ".$self->{productname}."\n");
      if ($self->opts->mode =~ /^my-/) {
        $self->load_my_extension();
      } elsif ($self->{productname} =~ /upnp/i) {
        $self->rebless('Classes::UPNP');
      } elsif ($self->{productname} =~ /FRITZ/i) {
        $self->rebless('Classes::UPNP::AVM');
      } elsif ($self->{productname} =~ /linuxlocal/i) {
        $self->rebless('Server::LinuxLocal');
      } elsif ($self->{productname} =~ /windowslocal/i) {
        $self->rebless('Server::WindowsLocal');
      } elsif ($self->{productname} =~ /solarislocal/i) {
        $self->rebless('Server::SolarisLocal');
      } elsif ($self->{productname} =~ /Cisco/i) {
        $self->rebless('Classes::Cisco');
      } elsif ($self->{productname} =~ /fujitsu intelligent blade panel 30\/12/i) {
        $self->rebless('Classes::Cisco');
      } elsif ($self->{productname} =~ /UCOS /i) {
        $self->rebless('Classes::Cisco');
      } elsif ($self->{productname} =~ /Nortel/i) {
        $self->rebless('Classes::Nortel');
      } elsif ($self->implements_mib('SYNOPTICS-ROOT-MIB')) {
        $self->rebless('Classes::Nortel');
      } elsif ($self->{productname} =~ /AT-GS/i) {
        $self->rebless('Classes::AlliedTelesyn');
      } elsif ($self->{productname} =~ /AT-\d+GB/i) {
        $self->rebless('Classes::AlliedTelesyn');
      } elsif ($self->{productname} =~ /Allied Telesyn Ethernet Switch/i) {
        $self->rebless('Classes::AlliedTelesyn');
      } elsif ($self->{productname} =~ /(Linux cumulus)|(Cumulus Linux)/i) {
        $self->rebless('Classes::Cumulus');
      } elsif ($self->{productname} =~ /MES/i) {
        $self->rebless('Classes::Eltex');
      } elsif ($self->{productname} =~ /DS_4100/i) {
        $self->rebless('Classes::Brocade');
      } elsif ($self->{productname} =~ /Connectrix DS_4900B/i) {
        $self->rebless('Classes::Brocade');
      } elsif ($self->{productname} =~ /EMC\s*DS.*4700M/i) {
        $self->rebless('Classes::Brocade');
      } elsif ($self->{productname} =~ /EMC\s*DS-24M2/i) {
        $self->rebless('Classes::Brocade');
      } elsif ($self->{productname} =~ /Brocade.*IronWare/i) {
        # although there can be a 
        # Brocade Communications Systems, Inc. FWS648, IronWare Version 07.1....
        $self->rebless('Classes::Foundry');
      } elsif ($self->{productname} =~ /Brocade/i) {
        $self->rebless('Classes::Brocade');
      } elsif ($self->{productname} =~ /Fibre Channel Switch/i) {
        $self->rebless('Classes::Brocade');
      } elsif ($self->{productname} =~ /Juniper.*MAG\-\d+/i) {
        # Juniper Networks,Inc,MAG-4610,7.2R10
        $self->rebless('Classes::Juniper');
      } elsif ($self->{productname} =~ /Juniper.*MAG\-SM\d+/i) {
        # Juniper Networks,Inc,MAG-SMx60,7.4R8
        $self->rebless('Classes::Juniper::IVE');
      } elsif ($self->implements_mib('JUNIPER-MIB') || $self->{productname} =~ /srx/i) {
        $self->rebless('Classes::Juniper::SRX');
      } elsif ($self->{productname} =~ /NetScreen/i) {
        $self->rebless('Classes::Juniper');
      } elsif ($self->{productname} =~ /JunOS/i) {
        $self->rebless('Classes::Juniper');
      } elsif ($self->{productname} =~ /Pulse Secure.*LLC/i) {
        # Pulse Secure,LLC,Pulse Policy Secure,IC-6500,5.2R7.1 (build 37645)
        $self->rebless('Classes::Juniper::IVE');
      } elsif ($self->{productname} =~ /DrayTek.*Vigor/i) {
        $self->rebless('Classes::DrayTek');
      } elsif ($self->implements_mib('NETGEAR-MIB')) {
        $self->rebless('Classes::Netgear');
      } elsif ($self->{productname} =~ /^(GS|FS)/i) {
        $self->rebless('Classes::Juniper');
      } elsif ($self->implements_mib('NETSCREEN-PRODUCTS-MIB')) {
        $self->rebless('Classes::Juniper::NetScreen');
      } elsif ($self->implements_mib('PAN-PRODUCTS-MIB')) {
        $self->rebless('Classes::PaloAlto');
      } elsif ($self->{productname} =~ /SecureOS/i) {
        $self->rebless('Classes::SecureOS');
      } elsif ($self->{productname} =~ /Linux.*((el6.f5.x86_64)|(el5.1.0.f5app)) .*/i) {
        $self->rebless('Classes::F5');
      } elsif ($self->{sysobjectid} =~ /1\.3\.6\.1\.4\.1\.3375\./) {
        $self->rebless('Classes::F5');
      } elsif ($self->{productname} =~ /(H?H3C|HP Comware|HPE Comware)/i) {
        $self->rebless('Classes::HH3C');
      } elsif ($self->{productname} =~ /(Huawei)/i) {
        $self->rebless('Classes::Huawei');
      } elsif ($self->{sysobjectid} =~ /1\.3\.6\.1\.4\.1\.2011\.2\./) {
        $self->rebless('Classes::Huawei');
      } elsif ($self->{productname} =~ /Procurve/i ||
          ($self->implements_mib('HP-ICF-CHASSIS-MIB') &&
          $self->implements_mib('NETSWITCH-MIB'))) {
        $self->rebless('Classes::HP::Procurve');
      } elsif ($self->{productname} =~ /((cpx86_64)|(Check\s*Point)|(IPSO)|(Linux.*\dcp) )/i || $self->implements_mib('CHECKPOINT-MIB')) {
        $self->rebless('Classes::CheckPoint');
      } elsif ($self->{productname} =~ /Clavister/i) {
        $self->rebless('Classes::Clavister');
      } elsif ($self->{productname} =~ /Blue\s*Coat/i) {
        $self->rebless('Classes::Bluecoat');
      } elsif ($self->{productname} =~ /Foundry/i) {
        $self->rebless('Classes::Foundry');
      } elsif ($self->{productname} =~ /IronWare/i) {
        # although there can be a
        # Brocade Communications Systems, Inc. FWS648, IronWare Version 07.1....
        $self->rebless('Classes::Foundry');
      } elsif ($self->{productname} eq 'generic_hostresources') {
        $self->rebless('Classes::HOSTRESOURCESMIB');
      } elsif ($self->{productname} eq 'generic_ucd') {
        $self->rebless('Classes::UCDMIB');
      } elsif ($self->{productname} =~ /Linux Stingray/i) {
        $self->rebless('Classes::HOSTRESOURCESMIB');
      } elsif ($self->{productname} =~ /Fortinet|Fortigate/i) {
        $self->rebless('Classes::Fortigate');
      } elsif ($self->implements_mib('FORTINET-FORTIGATE-MIB')) {
        $self->rebless('Classes::Fortigate');
      } elsif ($self->implements_mib('ALCATEL-IND1-BASE-MIB')) {
        $self->rebless('Classes::Alcatel');
      } elsif ($self->implements_mib('ONEACCESS-SYS-MIB')) {
        $self->rebless('Classes::OneOS');
      } elsif ($self->{productname} eq "ifmib") {
        $self->rebless('Classes::Generic');
      } elsif ($self->implements_mib('SW-MIB')) {
        $self->rebless('Classes::Brocade');
      } elsif ($self->{sysobjectid} =~ /1\.3\.6\.1\.4\.1\.9\./) {
        $self->rebless('Classes::Cisco');
      } elsif ($self->{productname} =~ /Arista.*EOS.*/) {
        $self->rebless('Classes::Arista');
      } elsif ($self->{sysobjectid} =~ /1\.3\.6\.1\.4\.1\.272\./) {
        $self->rebless('Classes::Bintec::Bibo');
      } elsif ($self->implements_mib('STEELHEAD-MIB') || $self->implements_mib('STEELHEAD-EX-MIB')) {
        $self->rebless('Classes::Riverbed');
      } elsif ($self->implements_mib('LCOS-MIB')) {
        $self->rebless('Classes::Lancom');
      } elsif ($self->implements_mib('PHION-MIB') ||
          $self->{productname} =~ /Barracuda/) {
        $self->rebless('Classes::Barracuda');
      } elsif ($self->{productname} =~ /^Linux/i) {
        $self->rebless('Classes::Server::Linux');
      } else {
        $self->map_oid_to_class('1.3.6.1.4.1.12532.252.5.1',
            'Classes::Juniper::IVE');
        $self->map_oid_to_class('1.3.6.1.4.1.9.1.1348',
            'Classes::CiscoCCM');
        $self->map_oid_to_class('1.3.6.1.4.1.9.1.746',
            'Classes::CiscoCCM');
        $self->map_oid_to_class('1.3.6.1.4.1.244.1.11',
            'Classes::Lantronix::SLS');
        if (my $class = $self->discover_suitable_class()) {
          $self->rebless($class);
        } else {
          $self->rebless('Classes::Generic');
        }
      }
    }
  }
  return $self;
}


package Classes::Generic;
our @ISA = qw(Classes::Device);
use strict;


sub init {
  my ($self) = @_;
  if ($self->mode =~ /device::interfaces::aggregation::availability/) {
    $self->analyze_and_check_aggregation_subsystem("Classes::IFMIB::Component::LinkAggregation");
  } elsif ($self->mode =~ /device::interfaces::ifstack/) {
    $self->analyze_and_check_interface_subsystem("Classes::IFMIB::Component::StackSubsystem");
  } elsif ($self->mode =~ /device::interfaces/) {
    $self->analyze_and_check_interface_subsystem("Classes::IFMIB::Component::InterfaceSubsystem");
  } elsif ($self->mode =~ /device::routes/) {
    if ($self->implements_mib('IP-FORWARD-MIB')) {
      $self->analyze_and_check_interface_subsystem("Classes::IPFORWARDMIB::Component::RoutingSubsystem");
    } else {
      $self->analyze_and_check_interface_subsystem("Classes::IPMIB::Component::RoutingSubsystem");
    }
  } elsif ($self->mode =~ /device::bgp/ && $self->{productname} !~ /JunOS/i) {
    $self->analyze_and_check_bgp_subsystem("Classes::BGP::Component::PeerSubsystem");
  } elsif ($self->mode =~ /device::ospf/) {
    $self->analyze_and_check_neighbor_subsystem("Classes::OSPF::Component::NeighborSubsystem");
  } elsif ($self->mode =~ /device::vrrp/) {
    $self->analyze_and_check_vrrp_subsystem("Classes::VRRPMIB::Component::VRRPSubsystem");
  } else {
    $self->rebless('Monitoring::GLPlugin::SNMP');
    $self->no_such_mode();
  }
}
package main;
# /usr/bin/perl -w

use strict;
no warnings qw(once);

if ( ! grep /BEGIN/, keys %Monitoring::GLPlugin::) {
  eval {
    require Monitoring::GLPlugin;
    require Monitoring::GLPlugin::SNMP;
    require Monitoring::GLPlugin::UPNP;
  };
  if ($@) {
    printf "UNKNOWN - module Monitoring::GLPlugin was not found. Either build a standalone version of this plugin or set PERL5LIB\n";
    printf "%s\n", $@;
    exit 3;
  }
}

my $plugin = Classes::Device->new(
    shortname => '',
    usage => 'Usage: %s [ -v|--verbose ] [ -t <timeout> ] '.
        '--mode <what-to-do> '.
        '--hostname <network-component> --community <snmp-community>'.
        '  ...]',
    version => '$Revision: 7.10.0.4.1 $',
    blurb => 'This plugin checks various parameters of network components ',
    url => 'http://labs.consol.de/nagios/check_nwc_health',
    timeout => 60,
    plugin => $Monitoring::GLPlugin::pluginname,
);
$plugin->add_mode(
    internal => 'device::hardware::health',
    spec => 'hardware-health',
    alias => undef,
    help => 'Check the status of environmental equipment (fans, temperatures, power)',
);
$plugin->add_mode(
    internal => 'device::hardware::load',
    spec => 'cpu-load',
    alias => ['cpu-usage'],
    help => 'Check the CPU load of the device',
);
$plugin->add_mode(
    internal => 'device::hardware::memory',
    spec => 'memory-usage',
    alias => undef,
    help => 'Check the memory usage of the device',
);
$plugin->add_mode(
    internal => 'device::disk::usage',
    spec => 'disk-usage',
    alias => undef,
    help => 'Check the disk usage of the device',
);
$plugin->add_mode(
    internal => 'device::interfaces::usage',
    spec => 'interface-usage',
    alias => undef,
    help => 'Check the utilization of interfaces',
);
$plugin->add_mode(
    internal => 'device::interfaces::errors',
    spec => 'interface-errors',
    alias => undef,
    help => 'Check the error-rate of interfaces (without discards)',
);
$plugin->add_mode(
    internal => 'device::interfaces::discards',
    spec => 'interface-discards',
    alias => undef,
    help => 'Check the discard-rate of interfaces',
);
$plugin->add_mode(
    internal => 'device::interfaces::operstatus',
    spec => 'interface-status',
    alias => undef,
    help => 'Check the status of interfaces (oper/admin)',
);
$plugin->add_mode(
    internal => 'device::interfaces::duplex',
    spec => 'interface-duplex',
    alias => undef,
    help => 'Check if interfaces operate in duplex mode',
);
$plugin->add_mode(
    internal => 'device::interfaces::complete',
    spec => 'interface-health',
    alias => undef,
    help => 'Check everything interface',
);
$plugin->add_mode(
    internal => 'device::interfaces::nat::sessions::count',
    spec => 'interface-nat-count-sessions',
    alias => undef,
    help => 'Count the number of nat sessions',
);
$plugin->add_mode(
    internal => 'device::interfaces::nat::rejects',
    spec => 'interface-nat-rejects',
    alias => undef,
    help => 'Count the number of nat sessions rejected due to lack of resources',
);
$plugin->add_mode(
    internal => 'device::interfaces::list',
    spec => 'list-interfaces',
    alias => undef,
    help => 'Show the interfaces of the device and update the name cache',
);
$plugin->add_mode(
    internal => 'device::interfaces::listdetail',
    spec => 'list-interfaces-detail',
    alias => undef,
    help => 'Show the interfaces of the device and some details',
);
$plugin->add_mode(
    internal => 'device::interfaces::availability',
    spec => 'interface-availability',
    alias => undef,
    help => 'Show the availability (oper != up) of interfaces',
);
$plugin->add_mode(
    internal => 'device::interfaces::aggregation::availability',
    spec => 'link-aggregation-availability',
    alias => undef,
    help => 'Check the percentage of up interfaces in a link aggregation',
);
$plugin->add_mode(
    internal => 'device::interfaces::ifstack::status',
    spec => 'interface-stack-status',
    alias => undef,
    help => 'Check the status of interface sublayers (mostly layer 2)',
);
$plugin->add_mode(
    internal => 'device::interfaces::ifstack::availability',
    spec => 'interface-stack-availability',
    alias => undef,
    help => 'Check the percentage of available sublayer interfaces',
);
$plugin->add_mode(
    internal => 'device::interfaces::etherstats',
    spec => 'interface-etherstats',
    alias => undef,
    help => 'Check the ethernet statistics of interfaces',
);
$plugin->add_mode(
    internal => 'device::interfaces::uptime',
    spec => 'interface-uptime',
    alias => undef,
    help => 'Check state changes of interfaces',
);
$plugin->add_mode(
    internal => 'device::interfaces::portsecurity',
    spec => 'interface-security',
    alias => undef,
    help => 'Check interfaces for security violations',
);
$plugin->add_mode(
    internal => 'device::routes::list',
    spec => 'list-routes',
    alias => undef,
    help => 'Show the configured routes',
    help => 'Check the percentage of up interfaces in a link aggregation',
);
$plugin->add_mode(
    internal => 'device::routes::exists',
    spec => 'route-exists',
    alias => undef,
    help => 'Check if a route exists. (--name is the dest, --name2 check also the next hop)',
);
$plugin->add_mode(
    internal => 'device::routes::count',
    spec => 'count-routes',
    alias => undef,
    help => 'Count the routes. (--name is the dest, --name2 is the hop)',
);
$plugin->add_mode(
    internal => 'device::vpn::status',
    spec => 'vpn-status',
    alias => undef,
    help => 'Check the status of vpns (up/down)',
);
$plugin->add_mode(
    internal => 'device::fcinterfaces::usage',
    spec => 'fc-interface-usage',
    alias => undef,
    help => 'Check the utilization of fibrechannel interfaces',
);
$plugin->add_mode(
    internal => 'device::fcinterfaces::errors',
    spec => 'fc-interface-errors',
    alias => undef,
    help => 'Check the error-rate of fibrechannel interfaces',
);
$plugin->add_mode(
    internal => 'device::fcinterfaces::discards',
    spec => 'fc-interface-discards',
    alias => undef,
    help => 'Check the discard-rate of interfaces',
);
$plugin->add_mode(
    internal => 'device::fcinterfaces::operstatus',
    spec => 'fc-interface-status',
    alias => undef,
    help => 'Check the status of interfaces (oper/admin)',
);
$plugin->add_mode(
    internal => 'device::fcinterfaces::complete',
    spec => 'fc-interface-health',
    alias => undef,
    help => 'Check everything interface',
);
$plugin->add_mode(
    internal => 'device::fcinterfaces::list',
    spec => 'fc-list-interfaces',
    alias => undef,
    help => 'Show the fcal interfaces of the device and update the name cache',
);
$plugin->add_mode(
    internal => 'device::shinken::interface',
    spec => 'create-shinken-service',
    alias => undef,
    help => 'Create a Shinken service definition',
);
$plugin->add_mode(
    internal => 'device::hsrp::state',
    spec => 'hsrp-state',
    alias => undef,
    help => 'Check the state in a HSRP group',
);
$plugin->add_mode(
    internal => 'device::hsrp::failover',
    spec => 'hsrp-failover',
    alias => undef,
    help => 'Check if a HSRP group\'s nodes have changed their roles',
);
$plugin->add_mode(
    internal => 'device::hsrp::list',
    spec => 'list-hsrp-groups',
    alias => undef,
    help => 'Show the HSRP groups configured on this device',
);
$plugin->add_mode(
    internal => 'device::vrrp::state',
    spec => 'vrrp-state',
    alias => undef,
    help => 'Check the state in a VRRP group',
);
$plugin->add_mode(
    internal => 'device::vrrp::failover',
    spec => 'vrrp-failover',
    alias => undef,
    help => 'Check if a VRRP group\'s nodes have changed their roles',
);
$plugin->add_mode(
    internal => 'device::vrrp::list',
    spec => 'list-vrrp-groups',
    alias => undef,
    help => 'Show the VRRP groups configured on this device',
);
$plugin->add_mode(
    internal => 'device::bgp::peer::status',
    spec => 'bgp-peer-status',
    alias => undef,
    help => 'Check status of BGP peers',
);
$plugin->add_mode(
    internal => 'device::bgp::peer::count',
    spec => 'count-bgp-peers',
    alias => undef,
    help => 'Count the number of BGP peers',
);
$plugin->add_mode(
    internal => 'device::bgp::peer::watch',
    spec => 'watch-bgp-peers',
    alias => undef,
    help => 'Watch BGP peers appear and disappear',
);
$plugin->add_mode(
    internal => 'device::bgp::peer::list',
    spec => 'list-bgp-peers',
    alias => undef,
    help => 'Show BGP peers known to this device',
);
$plugin->add_mode(
    internal => 'device::bgp::prefix::count',
    spec => 'count-bgp-prefixes',
    alias => undef,
    help => 'Count the number of BGP prefixes (for specific peer with --name)',
);
$plugin->add_mode(
    internal => 'device::ospf::neighbor::status',
    spec => 'ospf-neighbor-status',
    alias => undef,
    help => 'Check status of OSPF neighbors',
);
$plugin->add_mode(
    internal => 'device::ospf::neighbor::watch',
    spec => 'watch-ospf-neighbors',
    alias => undef,
    help => 'Watch OSPF neighbors appear and disappear',
);
$plugin->add_mode(
    internal => 'device::ospf::neighbor::list',
    spec => 'list-ospf-neighbors',
    alias => undef,
    help => 'Show OSPF neighbors',
);
$plugin->add_mode(
    internal => 'device::eigrp::peer::count',
    spec => 'count-eigrp-peers',
    alias => undef,
    help => 'Count the number of EIGRP peers',
);
#$plugin->add_mode(
#    internal => 'device::eigrp::peer::status',
#    spec => 'eigrp-peer-status',
#    alias => undef,
#    help => 'Check status of EIGRP peers',
#);
$plugin->add_mode(
    internal => 'device::eigrp::peer::watch',
    spec => 'watch-eigrp-peers',
    alias => undef,
    help => 'Watch EIGRP peers appear and disappear',
);
$plugin->add_mode(
    internal => 'device::eigrp::peer::list',
    spec => 'list-eigrp-peers',
    alias => undef,
    help => 'Show EIGRP peers',
);
$plugin->add_mode(
    internal => 'device::ha::status',
    spec => 'ha-status',
    alias => undef,
    help => 'Check the status of a clustered setup',
);
$plugin->add_mode(
    internal => 'device::ha::role',
    spec => 'ha-role',
    alias => undef,
    help => 'Check the role in a ha group',
);
$plugin->add_mode(
    internal => 'device::svn::status',
    spec => 'svn-status',
    alias => undef,
    help => 'Check the status of the svn subsystem',
);
$plugin->add_mode(
    internal => 'device::mngmt::status',
    spec => 'mngmt-status',
    alias => undef,
    help => 'Check the status of the management subsystem',
);
$plugin->add_mode(
    internal => 'device::process::status',
    spec => 'process-status',
    alias => undef,
    help => 'Check the status of the running processes'
);
$plugin->add_mode(
    internal => 'device::fw::policy::installed',
    spec => 'fw-policy',
    alias => undef,
    help => 'Check the installed firewall policy',
);
$plugin->add_mode(
    internal => 'device::fw::policy::connections',
    spec => 'fw-connections',
    alias => undef,
    help => 'Check the number of firewall policy connections',
);
$plugin->add_mode(
    internal => 'device::lb::session::usage',
    spec => 'session-usage',
    alias => undef,
    help => 'Check the session limits of a load balancer',
);
$plugin->add_mode(
    internal => 'device::security',
    spec => 'security-status',
    alias => undef,
    help => 'Check if there are security-relevant incidents',
);
$plugin->add_mode(
    internal => 'device::lb::pool::completeness',
    spec => 'pool-completeness',
    alias => undef,
    help => 'Check the members of a load balancer pool',
);
$plugin->add_mode(
    internal => 'device::lb::pool::connections',
    spec => 'pool-connections',
    alias => undef,
    help => 'Check the number of connections of a load balancer pool',
);
$plugin->add_mode(
    internal => 'device::lb::pool::complections',
    spec => 'pool-complections',
    alias => undef,
    help => 'Check the members and connections of a load balancer pool',
);
$plugin->add_mode(
    internal => 'device::wideip::status',
    spec => 'wideip-status',
    alias => undef,
    help => 'Check the status of F5 Wide IPs',
);
$plugin->add_mode(
    internal => 'device::lb::pool::list',
    spec => 'list-pools',
    alias => undef,
    help => 'List load balancer pools',
);
$plugin->add_mode(
    internal => 'device::licenses::validate',
    spec => 'check-licenses',
    alias => undef,
    help => 'Check the installed licences/keys',
);
$plugin->add_mode(
    internal => 'device::users::count',
    spec => 'count-users',
    help => 'Count the (connected) users/sessions',
);
$plugin->add_mode(
    internal => 'device::config::status',
    spec => 'check-config',
    alias => undef,
    help => 'Check the status of configs (cisco, unsaved config changes)',
);
$plugin->add_mode(
    internal => 'device::connections::check',
    spec => 'check-connections',
    alias => undef,
    help => 'Check the quality of connections',
);
$plugin->add_mode(
    internal => 'device::connections::count',
    spec => 'count-connections',
    alias => ['count-connections-client', 'count-connections-server', 'count-sessions'],
    help => 'Check the number of connections/sessions (-client, -server is possible)',
);
$plugin->add_mode(
    internal => 'device::cisco::fex::watch',
    spec => 'watch-fexes',
    alias => undef,
    help => 'Check if FEXes appear and disappear (use --lookup)',
);
$plugin->add_mode(
    internal => 'device::hardware::chassis::health',
    spec => 'chassis-hardware-health',
    alias => undef,
    help => 'Check the status of stacked switches and chassis, count modules and ports',
);
$plugin->add_mode(
    internal => 'device::wlan::aps::status',
    spec => 'accesspoint-status',
    alias => undef,
    help => 'Check the status of access points',
);
$plugin->add_mode(
    internal => 'device::wlan::aps::count',
    spec => 'count-accesspoints',
    alias => undef,
    help => 'Check if the number of access points is within a certain range',
);
$plugin->add_mode(
    internal => 'device::wlan::aps::watch',
    spec => 'watch-accesspoints',
    alias => undef,
    help => 'Check if access points appear and disappear (use --lookup)',
);
$plugin->add_mode(
    internal => 'device::wlan::aps::clients',
    spec => 'count-accesspoint-clients',
    alias => undef,
    help => 'Check if the number of access point clients is within a certain range',
);
$plugin->add_mode(
    internal => 'device::wlan::aps::list',
    spec => 'list-accesspoints',
    alias => undef,
    help => 'List access points managed by this device',
);
$plugin->add_mode(
    internal => 'device::phone::cmstatus',
    spec => 'phone-cm-status',
    alias => undef,
    help => 'Check if the callmanager is up',
);
$plugin->add_mode(
    internal => 'device::phone::status',
    spec => 'phone-status',
    alias => undef,
    help => 'Check the number of registered/unregistered/rejected phones',
);
$plugin->add_mode(
    internal => 'device::smarthome::device::list',
    spec => 'list-smart-home-devices',
    alias => undef,
    help => 'List Fritz!DECT 200 plugs managed by this device',
);
$plugin->add_mode(
    internal => 'device::smarthome::device::status',
    spec => 'smart-home-device-status',
    alias => undef,
    help => 'Check if a Fritz!DECT 200 plug is on (or Comet DECT)',
);
$plugin->add_mode(
    internal => 'device::smarthome::device::energy',
    spec => 'smart-home-device-energy',
    alias => undef,
    help => 'Show the current power consumption of a Fritz!DECT 200 plug',
);
$plugin->add_mode(
    internal => 'device::smarthome::device::consumption',
    spec => 'smart-home-device-consumption',
    alias => undef,
    help => 'Show the cumulated power consumption of a Fritz!DECT 200 plug',
);
$plugin->add_mode(
    internal => 'device::smarthome::device::temperature',
    spec => 'smart-home-device-temperature',
    alias => undef,
    help => 'Show the temperature measured by a Fritz! compatible device',
);
$plugin->add_default_modes();
$plugin->add_snmp_modes();
$plugin->add_snmp_args();
$plugin->add_default_args();
$plugin->mod_arg("name",
    help => "--name
   The name of an interface (ifDescr) or pool or ...",
);
$plugin->add_arg(
    spec => 'alias=s',
    help => "--alias
   The alias name of a 64bit-interface (ifAlias)",
    required => 0,
);
$plugin->add_arg(
    spec => 'ifspeedin=i',
    help => "--ifspeedin
   Override the ifspeed oid of an interface (only inbound)",
    required => 0,
);
$plugin->add_arg(
    spec => 'ifspeedout=i',
    help => "--ifspeedout
   Override the ifspeed oid of an interface (only outbound)",
    required => 0,
);
$plugin->add_arg(
    spec => 'ifspeed=i',
    help => "--ifspeed
   Override the ifspeed oid of an interface",
    required => 0,
);
$plugin->add_arg(
    spec => 'role=s',
    help => "--role
   The role of this device in a hsrp group (active/standby/listen)",
    required => 0,
);

$plugin->getopts();
$plugin->classify();
$plugin->validate_args();

if (! $plugin->check_messages()) {
  $plugin->init();
  if (! $plugin->check_messages()) {
    $plugin->add_ok($plugin->get_summary())
        if $plugin->get_summary();
    $plugin->add_ok($plugin->get_extendedinfo(" "))
        if $plugin->get_extendedinfo();
  }
} elsif ($plugin->opts->snmpwalk && $plugin->opts->offline) {
  ;
} else {
  ;
}
my ($code, $message) = $plugin->opts->multiline ?
    $plugin->check_messages(join => "\n", join_all => ', ') :
    $plugin->check_messages(join => ', ', join_all => ', ');
$message .= sprintf "\n%s\n", $plugin->get_info("\n")
    if $plugin->opts->verbose >= 1;

$plugin->nagios_exit($code, $message);
