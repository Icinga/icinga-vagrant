object Host "<%= @node_name-%>" {
  /* Import the default host template defined in `templates.conf`. */
  import "generic-host"

  /* Specify the address attributes for checks e.g. `ssh` or `http`. */
  address = "<%= scope().call_function('hiera', ['node::ipaddress']) -%>"
  address6 = "::1"

  vars.os = "Linux"

  var node_notes = "This is Icinga 2 running"
  if (name.contains("docker")) {
    notes = node_notes + " inside Docker :)"
  } else if (name.contains("master")) {
    notes = node_notes + " as master :)"
  } else if (name.contains("satellite")) {
    notes = node_notes + " as satellite :)"
  } else if (regex("^icinga2*", name)) {
    notes = node_notes + " inside Vagrant :)"
  }

  vars.http_vhosts["Icinga Web 2"] = {
    http_uri = "/icingaweb2"
  }

  /* Define disks and attributes for service apply rules in `services.conf`. */
  vars.disks["disk"] = {
    /* No parameters. */
  }
  vars.disks["disk /"] = {
    disk_partitions = "/"
  }

  /* dns checks */
  vars.dns_checks["dns icinga.com"] = {
    dns_lookup = "icinga.com"
    dns_server = "ns1.netways.de"
    dns_expected_answers = "185.11.254.90"
  }
  vars.dns_checks["dns netways.org"] = {
    dns_lookup = "netways.org"
    dns_server = "ns1.netways.de"
    dns_expected_answers = "185.11.252.37"
  }

  /* vhost checks */
  vars.http_vhosts["http Icinga Web 2"] = {
    http_uri = "/icingaweb2"
  }
  vars.http_vhosts["http Icinga Website"] = {
    http_address = "icinga.com"
    http_vhost = "icinga.com"
  }
  vars.http_vhosts["http Icinga Discourse"] = {
    http_address = "community.icinga.com"
    http_vhost = "community.icinga.com"
  }
  vars.http_vhosts["http Icinga RT"] = {
    http_address = "rt.icinga.com"
    http_vhost = "rt.icinga.com"
  }
  vars.http_vhosts["http Icinga Exchange"] = {
    http_address = "exchange.icinga.com"
    http_vhost = "exchange.icinga.com"
  }
  vars.http_vhosts["http Icinga GitHub"] = {
    http_address = "github.com"
    http_vhost = "github.com"
    http_uri = "/Icinga"
  }

  /* database checks */

  // Database listens locally, not external
  vars.mysql_health_hostname = "127.0.0.1"

  vars.databases["icinga"] = {
    mysql_health_warning = 4096 //MB
    mysql_health_critical = 8192 //MB
  }
  vars.databases["icingaweb2"] = {
    mysql_health_warning = 4096 //MB
    mysql_health_critical = 8192 //MB
  }

  /* health checks */
  vars.sar_perf_profiles = [ "pagestat", "cpu", "memory_util", "memory_stat", "io_transfer", "queueln_load", "task", "kernel" ]

  /* random checks */
  vars.random = [ 1, 2, 3, 4, 5 ]

  /* Define notification mail attributes for notification apply rules in `notifications.conf`. */
  vars.notification["mail"] = {
    /* The UserGroup `icingaadmins` is defined in `users.conf`. */
    groups = [ "icingaadmins" ]
  }

  /* Box specific configuration */

  if (name.contains("graylog")) {
    vars.graylog_streams["icinga2"] = {
      graylog_stream_id = "000000000000000000000001"
    }
    vars.graylog_api_url = "http://<%= scope.lookupvar('graylog_listen_ip')-%>:<%= scope.lookupvar('graylog_listen_port')-%>/api"
  }
}

